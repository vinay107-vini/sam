Filename,Buggy/Deleted,Fixed/Added
ThrowingExceptions.java,String[] exceptionNames = exceptionTable.getExceptionNames();,if (exceptionTable != null ) String[] exceptionNames = exceptionTable.getExceptionNames();
PluginLoader.java,"pluginLoader.classLoader = new URLClassLoader(loaderURLs, parent.getClassLoader());","if (parent != null ) pluginLoader.classLoader = new URLClassLoader(loaderURLs, parent.getClassLoader());"
ValidationSecurityManagerTest.java,SecurityManager old = System.getSecurityManager();,if (System != null ) SecurityManager old = System.getSecurityManager();
ValidationSecurityManagerTest.java,TypeQualifierValidator<SlashedClassName> goodValidator = new SlashedClassName.Checker();,if (SlashedClassName != null ) TypeQualifierValidator<SlashedClassName> goodValidator = new SlashedClassName.Checker();
TypeQualifierValue.java,SecurityManager m = System.getSecurityManager();,if (System != null ) SecurityManager m = System.getSecurityManager();
TypeQualifierValue.java,SecurityManager m = System.getSecurityManager();,if (System != null ) SecurityManager m = System.getSecurityManager();
CheckValidatorSandboxing.java,"String[] rootList = new File(""/"").list();","if (File(""/"") != null ) String[] rootList = new File(""/"").list();"
MarkerUtil.java,Set<IMarker> markers = getMarkers(classFile.getType());,if (getMarkers(classFile != null ) Set<IMarker> markers = getMarkers(classFile.getType());
Bug3152881.java,createStmt = connection.createStatement();,if (connection != null ) createStmt = connection.createStatement();
Bug3152881.java,createStmt = connection.createStatement();,if (connection != null ) createStmt = connection.createStatement();
Bug3160693.java,srcChannel = new FileInputStream(srcFile).getChannel();,if (FileInputStream(srcFile) != null ) srcChannel = new FileInputStream(srcFile).getChannel();
Bug3160693.java,dstChannel = new FileOutputStream(dstFile).getChannel();,if (FileOutputStream(dstFile) != null ) dstChannel = new FileOutputStream(dstFile).getChannel();
Bug3185865.java,double i = Math.random();,if (Math != null ) double i = Math.random();
Bug3185865.java,double j = Math.random();,if (Math != null ) double j = Math.random();
Bug3185865.java,double k = Math.random();,if (Math != null ) double k = Math.random();
Bug3368029.java,total += thing.length();,if (thing != null ) total += thing.length();
Bug1315.java,int s = list.size();,if (list != null ) int s = list.size();
JrtfsCodeBase.java,Iterator<Path> modIter = pList.iterator();,if (pList != null ) Iterator<Path> modIter = pList.iterator();
JrtfsCodeBase.java,Path module = modIter.next();,if (modIter != null ) Path module = modIter.next();
JrtfsCodeBase.java,Iterator<Path> modIter = Files.list(p).iterator();,if (Files != null ) Iterator<Path> modIter = Files.list(p).iterator();
MutableClasses.java,JavaClass sup = cls.getSuperClass();,if (cls != null ) JavaClass sup = cls.getSuperClass();
MutableClasses.java,String retSig = method.getReturnType().getSignature();,if (method != null ) String retSig = method.getReturnType().getSignature();
Location.java,SourceLineAnnotation sourceLine = bugInstance.getPrimarySourceLineAnnotation();,if (bugInstance != null ) SourceLineAnnotation sourceLine = bugInstance.getPrimarySourceLineAnnotation();
Location.java,ClassAnnotation primaryClass = bugInstance.getPrimaryClass();,if (bugInstance != null ) ClassAnnotation primaryClass = bugInstance.getPrimaryClass();
Location.java,SourceLineAnnotation sourceLine = bugInstance.getPrimarySourceLineAnnotation();,if (bugInstance != null ) SourceLineAnnotation sourceLine = bugInstance.getPrimarySourceLineAnnotation();
FindUncalledPrivateMethods.java,className = classContext.getJavaClass().getClassName();,if (classContext != null ) className = classContext.getJavaClass().getClassName();
BugCollectionAnalyser.java,int index = rules.size();,if (rules != null ) int index = rules.size();
OverridingMethodsMustInvokeSuperDetector.java,methodSig = bridgeFrom.getSignature();,if (bridgeFrom != null ) methodSig = bridgeFrom.getSignature();
Project.java,XMLReader xr = XMLReaderFactory.createXMLReader();,if (XMLReaderFactory != null ) XMLReader xr = XMLReaderFactory.createXMLReader();
SortedBugCollection.java,xr = XMLReaderFactory.createXMLReader();,if (XMLReaderFactory != null ) xr = XMLReaderFactory.createXMLReader();
Filter.java,XMLReader xr = XMLReaderFactory.createXMLReader();,if (XMLReaderFactory != null ) XMLReader xr = XMLReaderFactory.createXMLReader();
BugInfoView.java,IProject p =  file.getProject();,if (file != null ) IProject p =  file.getProject();
FindNonShortCircuitTest.java,ctx = AnalysisContext.currentAnalysisContext();,if (AnalysisContext != null ) ctx = AnalysisContext.currentAnalysisContext();
FindNonShortCircuitTest.java,BugInstance bug = check.createBugInstance();,if (check != null ) BugInstance bug = check.createBugInstance();
FindNonShortCircuitTest.java,BugInstance bug = check.createBugInstance();,if (check != null ) BugInstance bug = check.createBugInstance();
FindNonShortCircuitTest.java,BugInstance bug = check.createBugInstance();,if (check != null ) BugInstance bug = check.createBugInstance();
FindNonShortCircuitTest.java,BugInstance bug = check.createBugInstance();,if (check != null ) BugInstance bug = check.createBugInstance();
DeepSubtypeAnalysis.java,double result =  isDeepSerializable(type.getSignature());,if (isDeepSerializable(type != null ) double result =  isDeepSerializable(type.getSignature());
DeepSubtypeAnalysis.java,double value =  isDeepSerializable(type.getSignature());,if (isDeepSerializable(type != null ) double value =  isDeepSerializable(type.getSignature());
OpcodeStack.java,int specialKind = topItem.getSpecialKind();,if (topItem != null ) int specialKind = topItem.getSpecialKind();
SuppressionDecorator.java,Reader rawIn =  UserTextFile.bufferedReader(u.openStream());,if (UserTextFile != null ) Reader rawIn =  UserTextFile.bufferedReader(u.openStream());
MethodInfo.java,Collection<AnnotationValue> result =  methodAnnotations.values();,if (methodAnnotations != null ) Collection<AnnotationValue> result =  methodAnnotations.values();
FinallyDuplicatesInfoFactory.java,for(InstructionHandle ih = il.getStart(); ih != null; ih = ih.getNext()) {,if ({ != null ) for(InstructionHandle ih = il.getStart(); ih != null; ih = ih.getNext()) {
BetterCFGBuilder2.java,for(InstructionHandle prev = handle.getPrev(); prev != null; prev = prev.getPrev()) {,if ({ != null ) for(InstructionHandle prev = handle.getPrev(); prev != null; prev = prev.getPrev()) {
BuildStringPassthruGraph.java,argCount+=type.getSize();,if (argCount+=type != null ) argCount+=type.getSize();
BuildStringPassthruGraph.java,lvNum+=argumentTypes[i].getSize();,if (lvNum+=argumentTypes[i] != null ) lvNum+=argumentTypes[i].getSize();
DumbMethods.java,Code code = method.getCode();,if (method != null ) Code code = method.getCode();
DumbMethods.java,this.exceptionTable = code.getExceptionTable();,if (code != null ) this.exceptionTable = code.getExceptionTable();
FindRoughConstants.java,double approxDouble = roundFloor.doubleValue();,if (roundFloor != null ) double approxDouble = roundFloor.doubleValue();
FindRoughConstants.java,float approxFloat = roundFloor.floatValue();,if (roundFloor != null ) float approxFloat = roundFloor.floatValue();
FindRoughConstants.java,double candidate = constValue.doubleValue();,if (constValue != null ) double candidate = constValue.doubleValue();
MethodReturnCheck.java,String methodReturnClass = ClassName.fromFieldSignature(methodReturnType.getSignature());,if (ClassName != null ) String methodReturnClass = ClassName.fromFieldSignature(methodReturnType.getSignature());
BugLoader.java,current =  ac.getBugCollection();,if (ac != null ) current =  ac.getBugCollection();
HTMLBugReporter.java,TransformerFactory factory = TransformerFactory.newInstance();,if (TransformerFactory != null ) TransformerFactory factory = TransformerFactory.newInstance();
ProjectStats.java,TransformerFactory tf = TransformerFactory.newInstance();,if (TransformerFactory != null ) TransformerFactory tf = TransformerFactory.newInstance();
SortingBugReporter.java,Iterator<BugInstance> i = bugCollection.iterator();,if (bugCollection != null ) Iterator<BugInstance> i = bugCollection.iterator();
ValueRangeAnalysisFactory.java,Iterator<InstructionHandle> iterator = methodGen.getInstructionList().iterator();,if (methodGen != null ) Iterator<InstructionHandle> iterator = methodGen.getInstructionList().iterator();
ValueRangeAnalysisFactory.java,InstructionHandle ih = iterator.next();,if (iterator != null ) InstructionHandle ih = iterator.next();
ValueRangeAnalysisFactory.java,GETSTATIC getStatic = (GETSTATIC)ih.getInstruction();,if ((GETSTATIC)ih != null ) GETSTATIC getStatic = (GETSTATIC)ih.getInstruction();
FindInconsistentSync2.java,Iterator<InstructionHandle> it = il.iterator();,if (il != null ) Iterator<InstructionHandle> it = il.iterator();
FindInconsistentSync2.java,InstructionHandle ih = it.next();,if (it != null ) InstructionHandle ih = it.next();
TypeQualifierDataflowAnalysis.java,Set<SourceSinkInfo> set = sourceSinkMap.get(sourceSinkInfo.getLocation());,if (sourceSinkMap != null ) Set<SourceSinkInfo> set = sourceSinkMap.get(sourceSinkInfo.getLocation());
NullDerefAndRedundantComparisonFinder.java,Set<Location> locationSet = nullValueAssignmentMap.get(lwvbn.getValueNumber());,if (nullValueAssignmentMap != null ) Set<Location> locationSet = nullValueAssignmentMap.get(lwvbn.getValueNumber());
UserPreferences.java,enabled = factory.isDefaultEnabled();,if (factory != null ) enabled = factory.isDefaultEnabled();
RebornIssues.java,List<BugInstance> lst = map.get(b.getInstanceHash());,if (map != null ) List<BugInstance> lst = map.get(b.getInstanceHash());
SetBugDatabaseInfo.java,Set<String> paths = missingFiles.get(src.getSourceFile());,if (missingFiles != null ) Set<String> paths = missingFiles.get(src.getSourceFile());
UserPreferences.java,Iterator<String> it = recentProjectsList.iterator();,if (recentProjectsList != null ) Iterator<String> it = recentProjectsList.iterator();
FindUninitializedGet.java,Iterator<BugInstance> i = pendingBugs.iterator();,if (pendingBugs != null ) Iterator<BugInstance> i = pendingBugs.iterator();
Util.java,this.s = map.keySet();,if (map != null ) this.s = map.keySet();
Project.java,in = manifestURL.openStream();,if (manifestURL != null ) in = manifestURL.openStream();
SourceFile.java,in = dataSource.open();,if (dataSource != null ) in = dataSource.open();
ByteCodePatternDetector.java,PatternElementMatch pem = pemIter.next();,if (pemIter != null ) PatternElementMatch pem = pemIter.next();
FindNonShortCircuitTest.java,AnalysisContext ctx = AnalysisContext.currentAnalysisContext();,if (AnalysisContext != null ) AnalysisContext ctx = AnalysisContext.currentAnalysisContext();
FindNonShortCircuitTest.java,BugInstance bug = check.createBugInstance();,if (check != null ) BugInstance bug = check.createBugInstance();
FindNonShortCircuitTest.java,bug = check.createBugInstance();,if (check != null ) bug = check.createBugInstance();
FindNonShortCircuitTest.java,bug = check.createBugInstance();,if (check != null ) bug = check.createBugInstance();
FindNonShortCircuitTest.java,bug = check.createBugInstance();,if (check != null ) bug = check.createBugInstance();
FindNonShortCircuitTest.java,BugInstance bug = check.getBugInstance();,if (check != null ) BugInstance bug = check.getBugInstance();
FindNonShortCircuitTest.java,bug = check.getBugInstance();,if (check != null ) bug = check.getBugInstance();
FindNonShortCircuitTest.java,bug = check.getBugInstance();,if (check != null ) bug = check.getBugInstance();
FindNonShortCircuitTest.java,bug = check.getBugInstance();,if (check != null ) bug = check.getBugInstance();
Version.java,Plugin parent = plugin.getParentPlugin();,if (plugin != null ) Plugin parent = plugin.getParentPlugin();
Version.java,Plugin parent = plugin.getParentPlugin();,if (plugin != null ) Plugin parent = plugin.getParentPlugin();
FormatStringChecker.java,signatures[i] = arguments[i].getSignature();,if (arguments[i] != null ) signatures[i] = arguments[i].getSignature();
FormatStringChecker.java,String arg = argDescriptor.toDottedClassName();,if (argDescriptor != null ) String arg = argDescriptor.toDottedClassName();
FindBugs.java,boolean verbose = !commandLine.quiet() || commandLine.setExitCode();,if (commandLine != null ) boolean verbose = !commandLine.quiet() || commandLine.setExitCode();
FindBugs.java,Project project = findBugs.getProject();,if (findBugs != null ) Project project = findBugs.getProject();
FindBugs.java,String projectName = project.getProjectName();,if (project != null ) String projectName = project.getProjectName();
FindBugs.java,projectName = findBugs.getProjectName();,if (findBugs != null ) projectName = findBugs.getProjectName();
FindBugs.java,long timestamp = project.getTimestamp();,if (project != null ) long timestamp = project.getTimestamp();
TypeMatcher.java,String typeDesctiptor = typeAnnotation.getTypeDescriptor();,if (typeAnnotation != null ) String typeDesctiptor = typeAnnotation.getTypeDescriptor();
OpcodeStack.java,this.constValue = constantNumericValue.byteValue();,if (constantNumericValue != null ) this.constValue = constantNumericValue.byteValue();
OpcodeStack.java,this.constValue = constantNumericValue.shortValue();,if (constantNumericValue != null ) this.constValue = constantNumericValue.shortValue();
OpcodeStack.java,this.constValue = (char) constantNumericValue.intValue();,if (constantNumericValue != null ) this.constValue = (char) constantNumericValue.intValue();
OpcodeStack.java,this.constValue = constantNumericValue.intValue();,if (constantNumericValue != null ) this.constValue = constantNumericValue.intValue();
OpcodeStack.java,this.constValue = constantNumericValue.longValue();,if (constantNumericValue != null ) this.constValue = constantNumericValue.longValue();
OpcodeStack.java,this.constValue = constantNumericValue.doubleValue();,if (constantNumericValue != null ) this.constValue = constantNumericValue.doubleValue();
OpcodeStack.java,this.constValue = constantNumericValue.floatValue();,if (constantNumericValue != null ) this.constValue = constantNumericValue.floatValue();
OpcodeStack.java,this.constValue = constantNumericValue.byteValue();,if (constantNumericValue != null ) this.constValue = constantNumericValue.byteValue();
OpcodeStack.java,this.constValue = constantNumericValue.shortValue();,if (constantNumericValue != null ) this.constValue = constantNumericValue.shortValue();
OpcodeStack.java,this.constValue = (char) constantNumericValue.intValue();,if (constantNumericValue != null ) this.constValue = (char) constantNumericValue.intValue();
OpcodeStack.java,this.constValue = constantNumericValue.intValue();,if (constantNumericValue != null ) this.constValue = constantNumericValue.intValue();
OpcodeStack.java,this.constValue = constantNumericValue.doubleValue();,if (constantNumericValue != null ) this.constValue = constantNumericValue.doubleValue();
OpcodeStack.java,this.constValue = constantNumericValue.floatValue();,if (constantNumericValue != null ) this.constValue = constantNumericValue.floatValue();
PreferencesFrame.java,Object[] selected = filterCheckBoxList.getSelectedValues();,if (filterCheckBoxList != null ) Object[] selected = filterCheckBoxList.getSelectedValues();
SourceFinder.java,URLConnection connection = new URL(url).openConnection();,if (URL(url) != null ) URLConnection connection = new URL(url).openConnection();
SourceFinder.java,int size = connection.getContentLength();,if (connection != null ) int size = connection.getContentLength();
SourceFinder.java,in = connection.getInputStream();,if (connection != null ) in = connection.getInputStream();
FindBugs2.java,boolean justPrintConfiguration = commandLine.justPrintConfiguration();,if (commandLine != null ) boolean justPrintConfiguration = commandLine.justPrintConfiguration();
AnalysisRunner.java,final DetectorFactoryCollection detectorFactoryCollection = DetectorFactoryCollection.instance();,if (DetectorFactoryCollection != null ) final DetectorFactoryCollection detectorFactoryCollection = DetectorFactoryCollection.instance();
AnalysisRunner.java,final UserPreferences preferences = UserPreferences.createDefaultUserPreferences();,if (UserPreferences != null ) final UserPreferences preferences = UserPreferences.createDefaultUserPreferences();
SourceDirectoryWizard.java,contentPanel = new javax.swing.JPanel();,if (javax != null ) contentPanel = new javax.swing.JPanel();
SourceDirectoryWizard.java,secondPanel = new javax.swing.JPanel();,if (javax != null ) secondPanel = new javax.swing.JPanel();
SourceDirectoryWizard.java,firstPanel = new javax.swing.JPanel();,if (javax != null ) firstPanel = new javax.swing.JPanel();
SourceDirectoryWizard.java,sourceRootLabel = new javax.swing.JLabel();,if (javax != null ) sourceRootLabel = new javax.swing.JLabel();
SourceDirectoryWizard.java,sourceRootBox = new javax.swing.JTextField();,if (javax != null ) sourceRootBox = new javax.swing.JTextField();
SourceDirectoryWizard.java,srcFileIconLabel = new javax.swing.JLabel();,if (javax != null ) srcFileIconLabel = new javax.swing.JLabel();
SourceDirectoryWizard.java,browseButton = new javax.swing.JButton();,if (javax != null ) browseButton = new javax.swing.JButton();
SourceDirectoryWizard.java,previousButton = new javax.swing.JButton();,if (javax != null ) previousButton = new javax.swing.JButton();
SourceDirectoryWizard.java,nextButton = new javax.swing.JButton();,if (javax != null ) nextButton = new javax.swing.JButton();
SourceDirectoryWizard.java,finshButton = new javax.swing.JButton();,if (javax != null ) finshButton = new javax.swing.JButton();
SourceDirectoryWizard.java,errorMessageLabel = new javax.swing.JLabel();,if (javax != null ) errorMessageLabel = new javax.swing.JLabel();
BlockTypeAnalysis.java,CodeExceptionGen exceptionGen = basicBlock.getExceptionGen();,if (basicBlock != null ) CodeExceptionGen exceptionGen = basicBlock.getExceptionGen();
BlockTypeAnalysis.java,ObjectType catchType = exceptionGen.getCatchType();,if (exceptionGen != null ) ObjectType catchType = exceptionGen.getCatchType();
CFG.java,basicBlock = removedEdge.getTarget();,if (removedEdge != null ) basicBlock = removedEdge.getTarget();
IsNullValueAnalysis.java,CodeExceptionGen handler = destBlock.getExceptionGen();,if (destBlock != null ) CodeExceptionGen handler = destBlock.getExceptionGen();
IsNullValueAnalysis.java,ObjectType catchType = handler.getCatchType();,if (handler != null ) ObjectType catchType = handler.getCatchType();
IsNullValueAnalysis.java,String catchClass = catchType.getClassName();,if (catchType != null ) String catchClass = catchType.getClassName();
ValueNumberAnalysis.java,ValueCompacter compacter = new ValueCompacter(factory.getNumValuesAllocated());,if (ValueCompacter(factory != null ) ValueCompacter compacter = new ValueCompacter(factory.getNumValuesAllocated());
ValueNumberAnalysis.java,int before = factory.getNumValuesAllocated();,if (factory != null ) int before = factory.getNumValuesAllocated();
ValueNumberAnalysis.java,int after = factory.getNumValuesAllocated();,if (factory != null ) int after = factory.getNumValuesAllocated();
FindNullDeref.java,nullArgSet = (BitSet) nullArgSet.clone();,if (nullArgSet != null ) nullArgSet = (BitSet) nullArgSet.clone();
FindNullDeref.java,definitelyNullArgSet = (BitSet) definitelyNullArgSet.clone();,if (definitelyNullArgSet != null ) definitelyNullArgSet = (BitSet) definitelyNullArgSet.clone();
OverridingEqualsNotSymmetrical.java,ClassAnnotation parentClass = ClassAnnotation.fromClassDescriptor(e.getKey());,if (ClassAnnotation != null ) ClassAnnotation parentClass = ClassAnnotation.fromClassDescriptor(e.getKey());
OverridingEqualsNotSymmetrical.java,ClassAnnotation parentClass = ClassAnnotation.fromClassDescriptor(e.getKey());,if (ClassAnnotation != null ) ClassAnnotation parentClass = ClassAnnotation.fromClassDescriptor(e.getKey());
CheckReturnAnnotationDatabase.java,clazz = descriptor.getXClass();,if (descriptor != null ) clazz = descriptor.getXClass();
LocalVariableAnnotation.java,localName = lv.getName();,if (lv != null ) localName = lv.getName();
SpotBugsPlugin.java,SpotBugsReports reports = task.getReports();,if (task != null ) SpotBugsReports reports = task.getReports();
SpotBugsPlugin.java,ConventionMapping taskMapping = task.getConventionMapping();,if (task != null ) ConventionMapping taskMapping = task.getConventionMapping();
SpotBugsPlugin.java,ConventionMapping taskMapping = task.getConventionMapping();,if (task != null ) ConventionMapping taskMapping = task.getConventionMapping();
SpotBugsTask.java,SingleFileReport report = reports.getFirstEnabled();,if (reports != null ) SingleFileReport report = reports.getFirstEnabled();
SpotBugsExecuter.java,final ClassLoader contextClassLoader = Thread.currentThread().getContextClassLoader();,if (Thread != null ) final ClassLoader contextClassLoader = Thread.currentThread().getContextClassLoader();
SpotBugsExecuter.java,int bugCount = findBugs.getBugCount();,if (findBugs != null ) int bugCount = findBugs.getBugCount();
SpotBugsExecuter.java,int missingClassCount = findBugs.getMissingClassCount();,if (findBugs != null ) int missingClassCount = findBugs.getMissingClassCount();
SpotBugsExecuter.java,int errorCount = findBugs.getErrorCount();,if (findBugs != null ) int errorCount = findBugs.getErrorCount();
SpotBugsSpecBuilder.java,"args.add(pluginsList==null ? """" : pluginsList.getAsPath());","if (pluginsList != null ) args.add(pluginsList==null ? """" : pluginsList.getAsPath());"
SpotBugsSpecBuilder.java,SpotBugsXmlReportImpl r = (SpotBugsXmlReportImpl) reportsImpl.getFirstEnabled();,if (reportsImpl != null ) SpotBugsXmlReportImpl r = (SpotBugsXmlReportImpl) reportsImpl.getFirstEnabled();
SpotBugsSpecBuilder.java,CustomizableHtmlReportImpl r = (CustomizableHtmlReportImpl) reportsImpl.getFirstEnabled();,if (reportsImpl != null ) CustomizableHtmlReportImpl r = (CustomizableHtmlReportImpl) reportsImpl.getFirstEnabled();
SpotBugsWorkerManager.java,JavaExecHandleBuilder javaCommand = builder.getJavaCommand();,if (builder != null ) JavaExecHandleBuilder javaCommand = builder.getJavaCommand();
MainFrame.java,BugPattern bugPattern = bug.getBugPattern();,if (bug != null ) BugPattern bugPattern = bug.getBugPattern();
MainFrameMenu.java,PreferencesFrame preferenceFrame = PreferencesFrame.getInstance();,if (PreferencesFrame != null ) PreferencesFrame preferenceFrame = PreferencesFrame.getInstance();
MainFrameTree.java,deletePath = deletePath.getParentPath();,if (deletePath != null ) deletePath = deletePath.getParentPath();
MainFrameTree.java,Matcher m = mainFrame.getCurrentSelectedBugAspects().getMatcher();,if (mainFrame != null ) Matcher m = mainFrame.getCurrentSelectedBugAspects().getMatcher();
MainFrameTree.java,BugTreeModel model = MainFrame.getInstance().getBugTreeModel();,if (MainFrame != null ) BugTreeModel model = MainFrame.getInstance().getBugTreeModel();
MainFrameTree.java,Matcher m = mainFrame.getCurrentSelectedBugAspects().getMatcher();,if (mainFrame != null ) Matcher m = mainFrame.getCurrentSelectedBugAspects().getMatcher();
MainFrameTree.java,String text = textFieldForPackagesToDisplay.getText();,if (textFieldForPackagesToDisplay != null ) String text = textFieldForPackagesToDisplay.getText();
MainFrameTree.java,CardLayout layout = (CardLayout) cardPanel.getLayout();,if (cardPanel != null ) CardLayout layout = (CardLayout) cardPanel.getLayout();
NewFilterFrame.java,Sortables filterBy = (Sortables) comboBox.getSelectedItem();,if (comboBox != null ) Sortables filterBy = (Sortables) comboBox.getSelectedItem();
NewFilterFrame.java,String[] rawValues = filterBy.getAllSorted();,if (filterBy != null ) String[] rawValues = filterBy.getAllSorted();
NewFilterFrame.java,Sortables key = (Sortables) comboBox.getSelectedItem();,if (comboBox != null ) Sortables key = (Sortables) comboBox.getSelectedItem();
NewFilterFrame.java,String[] values = key.getAllSorted();,if (key != null ) String[] values = key.getAllSorted();
NewFilterFromBug.java,Matcher matcherFromSelection = filterFromBugPicker.makeMatcherFromSelection();,if (filterFromBugPicker != null ) Matcher matcherFromSelection = filterFromBugPicker.makeMatcherFromSelection();
NewProjectWizard.java,File[] selectedFiles = chooser.getSelectedFiles();,if (chooser != null ) File[] selectedFiles = chooser.getSelectedFiles();
PreferencesFrame.java,File f = chooser.getSelectedFile();,if (chooser != null ) File f = chooser.getSelectedFile();
PreferencesFrame.java,GUISaveState guiSaveState = GUISaveState.getInstance();,if (GUISaveState != null ) GUISaveState guiSaveState = GUISaveState.getInstance();
PreferencesFrame.java,URL url = f.toURI().toURL();,if (f != null ) URL url = f.toURI().toURL();
PreferencesFrame.java,int i = combo.getSelectedIndex();,if (combo != null ) int i = combo.getSelectedIndex();
PreferencesFrame.java,Object[] selected = filterCheckBoxList.getSelectedValues();,if (filterCheckBoxList != null ) Object[] selected = filterCheckBoxList.getSelectedValues();
SourceDirectoryWizard.java,File[] selectedFiles = chooser.getSelectedFiles();,if (chooser != null ) File[] selectedFiles = chooser.getSelectedFiles();
SourceFinder.java,URLConnection connection = new URL(url).openConnection();,if (URL(url) != null ) URLConnection connection = new URL(url).openConnection();
SourceFinder.java,in = connection.getInputStream();,if (connection != null ) in = connection.getInputStream();
SourceFinder.java,URLConnection connection = new URL(url).openConnection();,if (URL(url) != null ) URLConnection connection = new URL(url).openConnection();
SourceFinder.java,int size = connection.getContentLength();,if (connection != null ) int size = connection.getContentLength();
SourceFinder.java,in = connection.getInputStream();,if (connection != null ) in = connection.getInputStream();
ClassPathBuilder.java,String path = pathname.getPath();,if (pathname != null ) String path = pathname.getPath();
TestDesktopIntegration.java,File file = fc.getSelectedFile();,if (fc != null ) File file = fc.getSelectedFile();
RejarClassesForAnalysis.java,String name = ze.getName();,if (ze != null ) String name = ze.getName();
RejarClassesForAnalysis.java,long timestamp = ze.getTime();,if (ze != null ) long timestamp = ze.getTime();
RejarClassesForAnalysis.java,String name = ze.getName();,if (ze != null ) String name = ze.getName();
RejarClassesForAnalysis.java,String name = ze.getName();,if (ze != null ) String name = ze.getName();
ReturnValueIgnoredNegativeCases.java,final String b = a.toString().trim();,if (a != null ) final String b = a.toString().trim();
SpotBugsTask.java,SingleFileReport report = reports.getFirstEnabled();,if (reports != null ) SingleFileReport report = reports.getFirstEnabled();
DetectorFactoryCollection.java,ArrayList<String> result = new ArrayList<String>(categoryDescriptionMap.size());,if (ArrayList<String>(categoryDescriptionMap != null ) ArrayList<String> result = new ArrayList<String>(categoryDescriptionMap.size());
Project.java,List<String> newList = new ArrayList<String>(paths.size());,if (ArrayList<String>(paths != null ) List<String> newList = new ArrayList<String>(paths.size());
AbstractBlockOrder.java,blockList = new ArrayList<BasicBlock>(cfg.getNumBasicBlocks());,if (ArrayList<BasicBlock>(cfg != null ) blockList = new ArrayList<BasicBlock>(cfg.getNumBasicBlocks());
ClassContext.java,List<Method> methodsInCallOrder = new ArrayList<Method>(xmethodsInCallOrder.size());,if (ArrayList<Method>(xmethodsInCallOrder != null ) List<Method> methodsInCallOrder = new ArrayList<Method>(xmethodsInCallOrder.size());
UnconditionalValueDerefSet.java,Set<ValueNumber> valueNumbers = new HashSet<ValueNumber>(vnaFrame.allSlots());,if (HashSet<ValueNumber>(vnaFrame != null ) Set<ValueNumber> valueNumbers = new HashSet<ValueNumber>(vnaFrame.allSlots());
TypeQualifierValueSet.java,HashSet<SourceSinkInfo> copy = new HashSet<SourceSinkInfo>(entry.getValue());,if (HashSet<SourceSinkInfo>(entry != null ) HashSet<SourceSinkInfo> copy = new HashSet<SourceSinkInfo>(entry.getValue());
NullDerefAndRedundantComparisonFinder.java,HashSet<ValueNumber> npeIfStatementCovered = new HashSet<ValueNumber>(nullValueGuaranteedDerefMap.keySet());,if (HashSet<ValueNumber>(nullValueGuaranteedDerefMap != null ) HashSet<ValueNumber> npeIfStatementCovered = new HashSet<ValueNumber>(nullValueGuaranteedDerefMap.keySet());
StandardTypeMerger.java,ArrayList<ReferenceType> result = new ArrayList<ReferenceType>(aP.size());,if (ArrayList<ReferenceType>(aP != null ) ArrayList<ReferenceType> result = new ArrayList<ReferenceType>(aP.size());
ValueNumberFrame.java,mergedValueList = new ArrayList<ValueNumber>(other.getNumSlots());,if (ArrayList<ValueNumber>(other != null ) mergedValueList = new ArrayList<ValueNumber>(other.getNumSlots());
FindInconsistentSync2.java,ArrayList<SourceLineAnnotation> result = new ArrayList<SourceLineAnnotation>(c.size());,if (ArrayList<SourceLineAnnotation>(c != null ) ArrayList<SourceLineAnnotation> result = new ArrayList<SourceLineAnnotation>(c.size());
FindUnsyncGet.java,Set<String> commonProperties = new HashSet<String>(getMethods.keySet());,if (HashSet<String>(getMethods != null ) Set<String> commonProperties = new HashSet<String>(getMethods.keySet());
AbstractDepthFirstSearch.java,ArrayList<Visit> stack = new ArrayList<Visit>(graph.getNumVertexLabels());,if (ArrayList<Visit>(graph != null ) ArrayList<Visit> stack = new ArrayList<Visit>(graph.getNumVertexLabels());
ExecutionPlan.java,Set<DetectorFactory> detectorSet = new HashSet<DetectorFactory>(pass.getMembers());,if (HashSet<DetectorFactory>(pass != null ) Set<DetectorFactory> detectorSet = new HashSet<DetectorFactory>(pass.getMembers());
TopologicalSort.java,this.result = new ArrayList<E>(consider.size());,if (ArrayList<E>(consider != null ) this.result = new ArrayList<E>(consider.size());
TopologicalSort.java,ArrayList<E> doFirst = new ArrayList<E>(consider.size());,if (ArrayList<E>(consider != null ) ArrayList<E> doFirst = new ArrayList<E>(consider.size());
TopologicalSort.java,ArrayList<E> doLast = new ArrayList<E>(consider.size());,if (ArrayList<E>(consider != null ) ArrayList<E> doLast = new ArrayList<E>(consider.size());
RejarClassesForAnalysis.java,List<File> inputZipFiles = new ArrayList<File>(fileList.size());,if (ArrayList<File>(fileList != null ) List<File> inputZipFiles = new ArrayList<File>(fileList.size());
RejarClassesForAnalysis.java,List<File> auxZipFiles = new ArrayList<File>(auxFileList.size());,if (ArrayList<File>(auxFileList != null ) List<File> auxZipFiles = new ArrayList<File>(auxFileList.size());
NotMatcherTest.java,String xmlOutputCreated = outputStream.toString();,if (outputStream != null ) String xmlOutputCreated = outputStream.toString();
JrtfsCodeBase.java,int result = prime + codebase.hashCode();,if (codebase != null ) int result = prime + codebase.hashCode();
ClassFileLocator.java,filename = filename.substring(prefix.length());,if (filename != null ) filename = filename.substring(prefix.length());
AbstractCodeQualityPlugin.java,prunedName = task.getName();,if (task != null ) prunedName = task.getName();
SpotBugsSpecBuilder.java,FindBugsXmlReportImpl r = (FindBugsXmlReportImpl) reportsImpl.getFirstEnabled();,if (reportsImpl != null ) FindBugsXmlReportImpl r = (FindBugsXmlReportImpl) reportsImpl.getFirstEnabled();
DetectorsExtensionHelper.java,IExtension[] extensions = point.getExtensions();,if (point != null ) IExtension[] extensions = point.getExtensions();
DetectorsExtensionHelper.java,IConfigurationElement[] elements = extension.getConfigurationElements();,if (extension != null ) IConfigurationElement[] elements = extension.getConfigurationElements();
DetectorsExtensionHelper.java,contributor = configElt.getContributor();,if (configElt != null ) contributor = configElt.getContributor();
QuickFixesExtensionHelper.java,IExtension[] extensions = point.getExtensions();,if (point != null ) IExtension[] extensions = point.getExtensions();
QuickFixesExtensionHelper.java,IConfigurationElement[] elements = extension.getConfigurationElements();,if (extension != null ) IConfigurationElement[] elements = extension.getConfigurationElements();
DiscoverSourceDirectories.java,IClassFactory factory = ClassFactory.instance();,if (ClassFactory != null ) IClassFactory factory = ClassFactory.instance();
SignatureParserTest.java,Iterator<String> i = noParams.parameterSignatureIterator();,if (noParams != null ) Iterator<String> i = noParams.parameterSignatureIterator();
SignatureParserTest.java,Iterator<String> i = manyParams.parameterSignatureIterator();,if (manyParams != null ) Iterator<String> i = manyParams.parameterSignatureIterator();
UserPreferencesTest.java,prefs = UserPreferences.createDefaultUserPreferences();,if (UserPreferences != null ) prefs = UserPreferences.createDefaultUserPreferences();
UserPreferencesTest.java,UserPreferences clone = prefs.clone();,if (prefs != null ) UserPreferences clone = prefs.clone();
SplitCamelCaseIdentifierTest.java,Collection<String> words = splitter.split();,if (splitter != null ) Collection<String> words = splitter.split();
SplitCamelCaseIdentifierTest.java,Collection<String> words = splitterLong.split();,if (splitterLong != null ) Collection<String> words = splitterLong.split();
SplitCamelCaseIdentifierTest.java,Collection<String> words = allLower.split();,if (allLower != null ) Collection<String> words = allLower.split();
SplitCamelCaseIdentifierTest.java,Collection<String> words = allUpper.split();,if (allUpper != null ) Collection<String> words = allUpper.split();
SplitCamelCaseIdentifierTest.java,Collection<String> words = capitalized.split();,if (capitalized != null ) Collection<String> words = capitalized.split();
Frame.java,int size = slotList.size();,if (slotList != null ) int size = slotList.size();
DescriptorFactory.java,DescriptorFactory df =  instanceThreadLocal.get();,if (instanceThreadLocal != null ) DescriptorFactory df =  instanceThreadLocal.get();
AbstractFindbugsView.java,IWorkbenchPage page = FindbugsPlugin.getActiveWorkbenchWindow().getActivePage();,if (FindbugsPlugin != null ) IWorkbenchPage page = FindbugsPlugin.getActiveWorkbenchWindow().getActivePage();
AbstractIntegrationTest.java,final DetectorFactoryCollection detectorFactoryCollection = DetectorFactoryCollection.instance();,if (DetectorFactoryCollection != null ) final DetectorFactoryCollection detectorFactoryCollection = DetectorFactoryCollection.instance();
AbstractIntegrationTest.java,final UserPreferences preferences = UserPreferences.createDefaultUserPreferences();,if (UserPreferences != null ) final UserPreferences preferences = UserPreferences.createDefaultUserPreferences();
DetectorsTest.java,String fileName = file.getFileName().toString();,if (file != null ) String fileName = file.getFileName().toString();
DontIgnoreResultOfPutIfAbsent.java,Type type = typeAnalysis.getFactAtLocation(location).getTopValue();,if (typeAnalysis != null ) Type type = typeAnalysis.getFactAtLocation(location).getTopValue();
DontIgnoreResultOfPutIfAbsent.java,String valueSignature = type.getSignature();,if (type != null ) String valueSignature = type.getSignature();
FindNonSerializableValuePassedToWriteObject.java,int pc = handle.getPosition();,if (handle != null ) int pc = handle.getPosition();
PreorderVisitor.java,Constant kind = constantPool.getConstant(catchBlock.getCatchType());,if (constantPool != null ) Constant kind = constantPool.getConstant(catchBlock.getCatchType());
StackMapTable.java,len += element.getMapEntrySize();,if (element != null ) len += element.getMapEntrySize();
Driver.java,factory = new FindBugsLayoutManagerFactory(SplitLayout.class.getName());,if (FindBugsLayoutManagerFactory(SplitLayout != null ) factory = new FindBugsLayoutManagerFactory(SplitLayout.class.getName());
TestGenericSignatureParser.java,Iterator<String> iter = parser.parameterSignatureIterator();,if (parser != null ) Iterator<String> iter = parser.parameterSignatureIterator();
EclipseGuiCallback.java,final String statusMsg = cloud.getStatusMsg();,if (cloud != null ) final String statusMsg = cloud.getStatusMsg();
EclipseGuiCallback.java,final IWorkbenchWindow win = FindbugsPlugin.getActiveWorkbenchWindow();,if (FindbugsPlugin != null ) final IWorkbenchWindow win = FindbugsPlugin.getActiveWorkbenchWindow();
EclipseGuiCallback.java,IWorkbenchPage page = win.getActivePage();,if (win != null ) IWorkbenchPage page = win.getActivePage();
EclipseGuiCallback.java,IWorkbenchPart part = page.getActivePart();,if (page != null ) IWorkbenchPart part = page.getActivePart();
FindbugsPlugin.java,String cloudId = userPrefs.getCloudId();,if (userPrefs != null ) String cloudId = userPrefs.getCloudId();
FindbugsPlugin.java,String cloudId = prefs.getCloudId();,if (prefs != null ) String cloudId = prefs.getCloudId();
FindBugsWorker.java,String cloudId = userPrefs.getCloudId();,if (userPrefs != null ) String cloudId = userPrefs.getCloudId();
FindbugsPropertyPage.java,Cloud cloud = collection.getCloud();,if (collection != null ) Cloud cloud = collection.getCloud();
FindbugsPropertyPage.java,cloudid = cloud.getPlugin().getId();,if (cloud != null ) cloudid = cloud.getPlugin().getId();
FindbugsPropertyPage.java,cloudid = currentUserPreferences.getCloudId();,if (currentUserPreferences != null ) cloudid = currentUserPreferences.getCloudId();
FindbugsPropertyPage.java,CloudPlugin item = clouds.get(cloudCombo.getSelectionIndex());,if (clouds != null ) CloudPlugin item = clouds.get(cloudCombo.getSelectionIndex());
FindbugsPropertyPage.java,Project fbProject = collection.getProject();,if (collection != null ) Project fbProject = collection.getProject();
FindbugsPropertyPage.java,IWorkbenchPage page = FindbugsPlugin.getActiveWorkbenchWindow().getActivePage();,if (FindbugsPlugin != null ) IWorkbenchPage page = FindbugsPlugin.getActiveWorkbenchWindow().getActivePage();
Reporter.java,Cloud cloud = bugCollection.getCloud();,if (bugCollection != null ) Cloud cloud = bugCollection.getCloud();
SigninStatusBox.java,SigninState state = cloud.getSigninState();,if (cloud != null ) SigninState state = cloud.getSigninState();
SigninStatusBox.java,final boolean origSelection = WebCloudNameLookup.isSavingSessionInfoEnabled();,if (WebCloudNameLookup != null ) final boolean origSelection = WebCloudNameLookup.isSavingSessionInfoEnabled();
UserAnnotationsView.java,final BugInstance bugInstance = bug.getBugInstance();,if (bug != null ) final BugInstance bugInstance = bug.getBugInstance();
UserAnnotationsView.java,final int selectionIndex = designationComboBox.getSelectionIndex();,if (designationComboBox != null ) final int selectionIndex = designationComboBox.getSelectionIndex();
UserAnnotationsView.java,final String txt = userAnnotationTextField.getText();,if (userAnnotationTextField != null ) final String txt = userAnnotationTextField.getText();
UserAnnotationsView.java,this.firstVersionText = firstVersion.trim();,if (firstVersion != null ) this.firstVersionText = firstVersion.trim();
UserAnnotationsView.java,int comboIndex = bug.getUserDesignationKeyIndex();,if (bug != null ) int comboIndex = bug.getUserDesignationKeyIndex();
UserAnnotationsView.java,Calendar theCalendar = Calendar.getInstance();,if (Calendar != null ) Calendar theCalendar = Calendar.getInstance();
UserAnnotationsView.java,long beginningOfToday = theCalendar.getTimeInMillis();,if (theCalendar != null ) long beginningOfToday = theCalendar.getTimeInMillis();
UserAnnotationsView.java,String timeString = theCalendar.getTime().toString();,if (theCalendar != null ) String timeString = theCalendar.getTime().toString();
BugLabelProvider.java,Cloud cloud = bc.getCloud();,if (bc != null ) Cloud cloud = bc.getCloud();
BugLabelProvider.java,cloudName = cloud.getCloudName();,if (cloud != null ) cloudName = cloud.getCloudName();
BugLoader.java,Cloud cloud = col.getCloud();,if (col != null ) Cloud cloud = col.getCloud();
CloudCommentsPane.java,int mask = Toolkit.getDefaultToolkit().getMenuShortcutKeyMask();,if (Toolkit != null ) int mask = Toolkit.getDefaultToolkit().getMenuShortcutKeyMask();
CloudCommentsPane.java,int selectedIndex = designationCombo.getSelectedIndex();,if (designationCombo != null ) int selectedIndex = designationCombo.getSelectedIndex();
CloudCommentsPane.java,String text = commentBox.getText();,if (commentBox != null ) String text = commentBox.getText();
CloudCommentsPane.java,SigninState state = cloud.getSigninState();,if (cloud != null ) SigninState state = cloud.getSigninState();
CloudCommentsPane.java,CommentInfo commentInfo = new CommentInfo().invoke();,if (CommentInfo() != null ) CommentInfo commentInfo = new CommentInfo().invoke();
CloudCommentsPane.java,boolean sameText = commentInfo.isSameText();,if (commentInfo != null ) boolean sameText = commentInfo.isSameText();
CloudCommentsPane.java,String txt = commentInfo.getTxt();,if (commentInfo != null ) String txt = commentInfo.getTxt();
CloudCommentsPane.java,int start = commentBox.getSelectionStart();,if (commentBox != null ) int start = commentBox.getSelectionStart();
CloudCommentsPane.java,int end = commentBox.getSelectionEnd();,if (commentBox != null ) int end = commentBox.getSelectionEnd();
CloudCommentsPane.java,String text = commentBox.getText();,if (commentBox != null ) String text = commentBox.getText();
CloudCommentsPane.java,String oldValue = bug.getUserDesignationKey();,if (bug != null ) String oldValue = bug.getUserDesignationKey();
CloudCommentsPane.java,String comment = commentBox.getText();,if (commentBox != null ) String comment = commentBox.getText();
CloudCommentsPane.java,final int index = designationCombo.getSelectedIndex();,if (designationCombo != null ) final int index = designationCombo.getSelectedIndex();
CloudCommentsPane.java,choice = UserDesignation.UNCLASSIFIED.name();,if (UserDesignation != null ) choice = UserDesignation.UNCLASSIFIED.name();
CloudCommentsPane.java,String oldValue = bug.getUserDesignationKey();,if (bug != null ) String oldValue = bug.getUserDesignationKey();
CloudCommentsPane.java,final CloudPlugin plugin = cloud.getPlugin();,if (cloud != null ) final CloudPlugin plugin = cloud.getPlugin();
CloudCommentsPane.java,String details = plugin.getDetails();,if (plugin != null ) String details = plugin.getDetails();
CloudCommentsPane.java,lastSaved = bug.getUserTimestamp();,if (bug != null ) lastSaved = bug.getUserTimestamp();
CloudCommentsPane.java,CommentInfo commentInfo = new CommentInfo().invoke();,if (CommentInfo() != null ) CommentInfo commentInfo = new CommentInfo().invoke();
CloudCommentsPane.java,boolean sameText = commentInfo.isSameText();,if (commentInfo != null ) boolean sameText = commentInfo.isSameText();
CloudCommentsPane.java,String txt = commentInfo.getTxt();,if (commentInfo != null ) String txt = commentInfo.getTxt();
CloudCommentsPane.java,CardLayout cl = (CardLayout) (cards.getLayout());,if ((cards != null ) CardLayout cl = (CardLayout) (cards.getLayout());
CloudCommentsPane.java,CloudPlugin plugin = cloud.getPlugin();,if (cloud != null ) CloudPlugin plugin = cloud.getPlugin();
CloudCommentsPane.java,CommentInfo commentInfo = new CommentInfo().invoke();,if (CommentInfo() != null ) CommentInfo commentInfo = new CommentInfo().invoke();
CloudCommentsPane.java,boolean sameDesignation = commentInfo.isSameDesignation();,if (commentInfo != null ) boolean sameDesignation = commentInfo.isSameDesignation();
CloudCommentsPane.java,String designation = commentInfo.getDesignation();,if (commentInfo != null ) String designation = commentInfo.getDesignation();
CloudCommentsPane.java,String newText = bug.getAnnotationText();,if (bug != null ) String newText = bug.getAnnotationText();
CloudCommentsPane.java,String newDesignation = bug.getUserDesignationKey();,if (bug != null ) String newDesignation = bug.getUserDesignationKey();
CommentsArea.java,BugInstance bug = frame.getCurrentSelectedBugLeaf().getBug();,if (frame != null ) BugInstance bug = frame.getCurrentSelectedBugLeaf().getBug();
CommentsArea.java,BugInstance bug = node.getBug();,if (node != null ) BugInstance bug = node.getBug();
CommentsArea.java,MainFrame instance = MainFrame.getInstance();,if (MainFrame != null ) MainFrame instance = MainFrame.getInstance();
CommentsArea.java,BugCollection bugCollection = instance.getBugCollection();,if (instance != null ) BugCollection bugCollection = instance.getBugCollection();
MainFrame.java,Cloud cloud = getBugCollection().getCloud();,if (getBugCollection() != null ) Cloud cloud = getBugCollection().getCloud();
MainFrame.java,String pluginMsg = cloud.getStatusMsg();,if (cloud != null ) String pluginMsg = cloud.getStatusMsg();
MainFrame.java,Cloud cloud = this.bugCollection.getCloud();,if (this != null ) Cloud cloud = this.bugCollection.getCloud();
MainFrame.java,Cloud plugin = this.bugCollection.getCloud();,if (this != null ) Cloud plugin = this.bugCollection.getCloud();
MainFrame.java,Cloud plugin = bugCollection.getCloud();,if (bugCollection != null ) Cloud plugin = bugCollection.getCloud();
MainFrame.java,Cloud cloud = this.bugCollection.getCloud();,if (this != null ) Cloud cloud = this.bugCollection.getCloud();
MainFrame.java,String report = stringWriter.toString();,if (stringWriter != null ) String report = stringWriter.toString();
MainFrame.java,Cloud cloud = getBugCollection().getCloud();,if (getBugCollection() != null ) Cloud cloud = getBugCollection().getCloud();
MainFrame.java,next = base.next();,if (base != null ) next = base.next();
MainFrame.java,Cloud cloud = MainFrame.this.bugCollection.getCloudLazily();,if (MainFrame != null ) Cloud cloud = MainFrame.this.bugCollection.getCloudLazily();
MainFrameComponentFactory.java,Cloud plugin = mainFrame.getBugCollection().getCloud();,if (mainFrame != null ) Cloud plugin = mainFrame.getBugCollection().getCloud();
MainFrameComponentFactory.java,Cloud plugin = mainFrame.getBugCollection().getCloud();,if (mainFrame != null ) Cloud plugin = mainFrame.getBugCollection().getCloud();
MainFrameMenu.java,UpdateChecker checker = DetectorFactoryCollection.instance().getUpdateChecker();,if (DetectorFactoryCollection != null ) UpdateChecker checker = DetectorFactoryCollection.instance().getUpdateChecker();
MainFrameMenu.java,boolean disabled = checker.updateChecksGloballyDisabled();,if (checker != null ) boolean disabled = checker.updateChecksGloballyDisabled();
MainFrameMenu.java,JRadioButtonMenuItem rbMenuItem = new JRadioButtonMenuItem(r.toString());,if (JRadioButtonMenuItem(r != null ) JRadioButtonMenuItem rbMenuItem = new JRadioButtonMenuItem(r.toString());
MainFrameMenu.java,JRadioButtonMenuItem rbMenuItem = new JRadioButtonMenuItem(r.toString());,if (JRadioButtonMenuItem(r != null ) JRadioButtonMenuItem rbMenuItem = new JRadioButtonMenuItem(r.toString());
MainFrameMenu.java,JRadioButtonMenuItem rbMenuItem = new JRadioButtonMenuItem(r.toString());,if (JRadioButtonMenuItem(r != null ) JRadioButtonMenuItem rbMenuItem = new JRadioButtonMenuItem(r.toString());
MainFrameTree.java,TreePath path = event.getPath();,if (event != null ) TreePath path = event.getPath();
MainFrameTree.java,Object lastPathComponent = path.getLastPathComponent();,if (path != null ) Object lastPathComponent = path.getLastPathComponent();
NewProjectWizard.java,String cloudId = project.getCloudId();,if (project != null ) String cloudId = project.getCloudId();
NewProjectWizard.java,oldCloudId = project.getCloudId();,if (project != null ) oldCloudId = project.getCloudId();
NewProjectWizard.java,CloudPlugin cloudPlugin = (CloudPlugin) cloudSelector.getSelectedItem();,if (cloudSelector != null ) CloudPlugin cloudPlugin = (CloudPlugin) cloudSelector.getSelectedItem();
NewProjectWizard.java,newCloudId = cloudPlugin.getId();,if (cloudPlugin != null ) newCloudId = cloudPlugin.getId();
NewProjectWizard.java,BugCollection bugs = mainFrame.getBugCollection();,if (mainFrame != null ) BugCollection bugs = mainFrame.getBugCollection();
PluginUpdateDialog.java,String url = update.getUrl();,if (update != null ) String url = update.getUrl();
PluginUpdateDialog.java,String msg = update.getMessage();,if (update != null ) String msg = update.getMessage();
PluginUpdateDialog.java,name = update.getPlugin().getShortDescription();,if (update != null ) name = update.getPlugin().getShortDescription();
PluginUpdateDialog.java,String url = update.getUrl();,if (update != null ) String url = update.getUrl();
Sortables.java,BugCollection bugCollection = MainFrame.getInstance().getBugCollection();,if (MainFrame != null ) BugCollection bugCollection = MainFrame.getInstance().getBugCollection();
Sortables.java,BugCollection bugCollection = mainframe.getBugCollection();,if (mainframe != null ) BugCollection bugCollection = mainframe.getBugCollection();
Sortables.java,BugCollection bugCollection = MainFrame.getInstance().getBugCollection();,if (MainFrame != null ) BugCollection bugCollection = MainFrame.getInstance().getBugCollection();
Sortables.java,BugCollection bugCollection = mf.getBugCollection();,if (mf != null ) BugCollection bugCollection = mf.getBugCollection();
Sortables.java,BugCollection bugCollection = MainFrame.getInstance().getBugCollection();,if (MainFrame != null ) BugCollection bugCollection = MainFrame.getInstance().getBugCollection();
Sortables.java,Cloud cloud = bugCollection.getCloud();,if (bugCollection != null ) Cloud cloud = bugCollection.getCloud();
Sortables.java,BugCollection bugCollection = mf.getBugCollection();,if (mf != null ) BugCollection bugCollection = mf.getBugCollection();
SplitLayout.java,int position = topLeftSPane.getDividerLocation();,if (topLeftSPane != null ) int position = topLeftSPane.getDividerLocation();
ViewFilter.java,Cloud c = mf.getBugCollection().getCloud();,if (mf != null ) Cloud c = mf.getBugCollection().getCloud();
ViewFilter.java,Cloud c = mf.getBugCollection().getCloud();,if (mf != null ) Cloud c = mf.getBugCollection().getCloud();
ViewFilter.java,Cloud cloud = mf.getBugCollection().getCloud();,if (mf != null ) Cloud cloud = mf.getBugCollection().getCloud();
AddAnnotation.java,String annotation = bugInstance.getAnnotationText();,if (bugInstance != null ) String annotation = bugInstance.getAnnotationText();
BugDesignation.java,private long timestamp = System.currentTimeMillis();,if (System != null ) private long timestamp = System.currentTimeMillis();
BugDesignation.java,timestamp = System.currentTimeMillis();,if (System != null ) timestamp = System.currentTimeMillis();
BugDesignation.java,timestamp = System.currentTimeMillis();,if (System != null ) timestamp = System.currentTimeMillis();
BugDesignation.java,hash += user.hashCode();,if (user != null ) hash += user.hashCode();
BugDesignation.java,hash += designation.hashCode();,if (designation != null ) hash += designation.hashCode();
BugDesignation.java,hash += annotationText.hashCode();,if (annotationText != null ) hash += annotationText.hashCode();
BugInstance.java,String s = userDesignation.getAnnotationText();,if (userDesignation != null ) String s = userDesignation.getAnnotationText();
BugInstance.java,XmlProps props = xmlProps.get();,if (xmlProps != null ) XmlProps props = xmlProps.get();
BugInstance.java,XmlProps props = xmlProps.get();,if (xmlProps != null ) XmlProps props = xmlProps.get();
BugInstance.java,Cloud cloud = bugCollection.getCloudLazily();,if (bugCollection != null ) Cloud cloud = bugCollection.getCloudLazily();
FindBugs.java,updateHolder  = DetectorFactoryCollection.instance().getUpdates();,if (DetectorFactoryCollection != null ) updateHolder  = DetectorFactoryCollection.instance().getUpdates();
FindBugs.java,Collection<PluginUpdate> updates = updateHolder.get();,if (updateHolder != null ) Collection<PluginUpdate> updates = updateHolder.get();
PluginLoader.java,String value = node.getText().trim();,if (node != null ) String value = node.getText().trim();
PrintingBugReporter.java,String key = warning.getUserDesignationKey();,if (warning != null ) String key = warning.getUserDesignationKey();
PrintingBugReporter.java,SourceLineAnnotation sourceLine = warning.getPrimarySourceLineAnnotation();,if (warning != null ) SourceLineAnnotation sourceLine = warning.getPrimarySourceLineAnnotation();
PrintingBugReporter.java,int rank = warning.getBugRank();,if (warning != null ) int rank = warning.getBugRank();
PrintingBugReporter.java,BugPattern pattern = warning.getBugPattern();,if (warning != null ) BugPattern pattern = warning.getBugPattern();
Project.java,String id = cloudPlugin.getId();,if (cloudPlugin != null ) String id = cloudPlugin.getId();
Project.java,boolean onlineCloud = cloudPlugin.isOnline();,if (cloudPlugin != null ) boolean onlineCloud = cloudPlugin.isOnline();
QueryBugAnnotations.java,Iterator<BugInstance> i = bugCollection.iterator();,if (bugCollection != null ) Iterator<BugInstance> i = bugCollection.iterator();
QueryBugAnnotations.java,Set<String> contents = bugInstance.getTextAnnotationWords();,if (bugInstance != null ) Set<String> contents = bugInstance.getTextAnnotationWords();
SortedBugCollection.java,IGuiCallback callback = getProject().getGuiCallback();,if (getProject() != null ) IGuiCallback callback = getProject().getGuiCallback();
SortedBugCollection.java,IGuiCallback callback = project.getGuiCallback();,if (project != null ) IGuiCallback callback = project.getGuiCallback();
SortedBugCollection.java,IGuiCallback callback = project.getGuiCallback();,if (project != null ) IGuiCallback callback = project.getGuiCallback();
Version.java,DetectorFactoryCollection dfc = DetectorFactoryCollection.instance();,if (DetectorFactoryCollection != null ) DetectorFactoryCollection dfc = DetectorFactoryCollection.instance();
Version.java,updateHolder  = dfc.getUpdates();,if (dfc != null ) updateHolder  = dfc.getUpdates();
FindBugsTask.java,this.cloudId = cloudId.trim();,if (cloudId != null ) this.cloudId = cloudId.trim();
AbstractCloud.java,this.properties = plugin.getProperties().copy();,if (plugin != null ) this.properties = plugin.getProperties().copy();
AbstractCloud.java,newMode = Mode.valueOf(modeString.toUpperCase());,if (Mode != null ) newMode = Mode.valueOf(modeString.toUpperCase());
AbstractCloud.java,UserDesignation d = UserDesignation.valueOf(designation.getDesignationKey());,if (UserDesignation != null ) UserDesignation d = UserDesignation.valueOf(designation.getDesignationKey());
AbstractCloud.java,UserDesignation d = UserDesignation.valueOf(designation.getDesignationKey());,if (UserDesignation != null ) UserDesignation d = UserDesignation.valueOf(designation.getDesignationKey());
AbstractCloud.java,UserDesignation d = UserDesignation.valueOf(designation.getDesignationKey());,if (UserDesignation != null ) UserDesignation d = UserDesignation.valueOf(designation.getDesignationKey());
AbstractCloud.java,totalSquares += d.score() * d.score();,if (d != null ) totalSquares += d.score() * d.score();
AbstractCloud.java,UserDesignation d = UserDesignation.valueOf(designation.getDesignationKey());,if (UserDesignation != null ) UserDesignation d = UserDesignation.valueOf(designation.getDesignationKey());
AbstractCloud.java,ProjectStats projectStats = bugCollection.getProjectStats();,if (bugCollection != null ) ProjectStats projectStats = bugCollection.getProjectStats();
AbstractCloud.java,int num = ps.getNumClasses();,if (ps != null ) int num = ps.getNumClasses();
AbstractCloud.java,ncss += ps.size();,if (ps != null ) ncss += ps.size();
AbstractCloud.java,String lst = Arrays.asList(packagePrefixes).toString();,if (Arrays != null ) String lst = Arrays.asList(packagePrefixes).toString();
AbstractCloud.java,String result = bd.getAnnotationText();,if (bd != null ) String result = bd.getAnnotationText();
AbstractCloud.java,lookup = plugin.getUsernameClass().newInstance();,if (plugin != null ) lookup = plugin.getUsernameClass().newInstance();
AbstractCloud.java,String fileName = src.getSourcePath();,if (src != null ) String fileName = src.getSourcePath();
AbstractCloud.java,int startLine = src.getStartLine();,if (src != null ) int startLine = src.getStartLine();
AbstractCloud.java,int endLine = src.getEndLine();,if (src != null ) int endLine = src.getEndLine();
AbstractCloud.java,Date propsFirstSeen = props.getFirstSeen();,if (props != null ) Date propsFirstSeen = props.getFirstSeen();
AbstractCloud.java,firstSeen = propsFirstSeen.getTime();,if (propsFirstSeen != null ) firstSeen = propsFirstSeen.getTime();
BugFilingCommentHelper.java,PropertyBundle properties = cloud.getPlugin().getProperties();,if (cloud != null ) PropertyBundle properties = cloud.getPlugin().getProperties();
BugFilingCommentHelper.java,"firstLine = Math.min(firstLine, s.getStartLine());","if (s != null ) firstLine = Math.min(firstLine, s.getStartLine());"
BugFilingCommentHelper.java,"lastLine = Math.max(lastLine, s.getEndLine());","if (s != null ) lastLine = Math.max(lastLine, s.getEndLine());"
BugFilingCommentHelper.java,SourceLineAnnotation primarySource = primaryClass.getSourceLines();,if (primaryClass != null ) SourceLineAnnotation primarySource = primaryClass.getSourceLines();
BugFilingCommentHelper.java,Project project = cloud.getBugCollection().getProject();,if (cloud != null ) Project project = cloud.getBugCollection().getProject();
BugFilingCommentHelper.java,String txt = in.readLine();,if (in != null ) String txt = in.readLine();
BugFilingCommentHelper.java,String trimmed = txt.trim();,if (txt != null ) String trimmed = txt.trim();
BugFilingCommentHelper.java,Collection<String> projects = cloud.getProjects(primaryClass.getClassName());,if (cloud != null ) Collection<String> projects = cloud.getProjects(primaryClass.getClassName());
BugFilingCommentHelper.java,String projectList = projects.toString();,if (projects != null ) String projectList = projects.toString();
BugFilingCommentHelper.java,String detailPlainText = b.getBugPattern().getDetailPlainText();,if (b != null ) String detailPlainText = b.getBugPattern().getDetailPlainText();
BugFilingCommentHelper.java,String eval = cloud.getUserEvaluation(b).trim();,if (cloud != null ) String eval = cloud.getUserEvaluation(b).trim();
CloudFactory.java,Properties properties = bc.getProject().getCloudProperties();,if (bc != null ) Properties properties = bc.getProject().getCloudProperties();
CloudFactory.java,Project project = bc.getProject();,if (bc != null ) Project project = bc.getProject();
CloudFactory.java,String cloudId = project.getCloudId();,if (project != null ) String cloudId = project.getCloudId();
CloudFactory.java,Plugin fbplugin = Plugin.getByPluginId(plugin.getFindbugsPluginId());,if (Plugin != null ) Plugin fbplugin = Plugin.getByPluginId(plugin.getFindbugsPluginId());
CloudFactory.java,IGuiCallback callback = bc.getProject().getGuiCallback();,if (bc != null ) IGuiCallback callback = bc.getProject().getGuiCallback();
DoNothingCloud.java,Date fromXml = b.getXmlProps().getFirstSeen();,if (b != null ) Date fromXml = b.getXmlProps().getFirstSeen();
DoNothingCloud.java,long fromXmlTime = fromXml.getTime();,if (fromXml != null ) long fromXmlTime = fromXml.getTime();
DoNothingCloud.java,String consensus = b.getXmlProps().getConsensus();,if (b != null ) String consensus = b.getXmlProps().getConsensus();
WebCloudNameLookup.java,PropertyBundle pluginProps = plugin.getProperties();,if (plugin != null ) PropertyBundle pluginProps = plugin.getProperties();
WebCloudNameLookup.java,String host = new URL(url).getHost();,if (URL(url) != null ) String host = new URL(url).getHost();
WebCloudNameLookup.java,id = secureRandom.nextLong();,if (secureRandom != null ) id = secureRandom.nextLong();
WebCloudNameLookup.java,HttpURLConnection connection = (HttpURLConnection) response.openConnection();,if (response != null ) HttpURLConnection connection = (HttpURLConnection) response.openConnection();
WebCloudNameLookup.java,int responseCode = connection.getResponseCode();,if (connection != null ) int responseCode = connection.getResponseCode();
WebCloudNameLookup.java,InputStream in = connection.getInputStream();,if (connection != null ) InputStream in = connection.getInputStream();
WebCloudNameLookup.java,String status = reader.readLine();,if (reader != null ) String status = reader.readLine();
WebCloudNameLookup.java,sessionId = Long.parseLong(reader.readLine());,if (Long != null ) sessionId = Long.parseLong(reader.readLine());
WebCloudNameLookup.java,username = reader.readLine();,if (reader != null ) username = reader.readLine();
DesignationMatcher.java,String value = matches.toString();,if (matches != null ) String value = matches.toString();
CloudCommentsPaneSwing.java,String thisid = plugin.getId();,if (plugin != null ) String thisid = plugin.getId();
UpdateChecker.java,URI uri = plugin.getUpdateUrl();,if (plugin != null ) URI uri = plugin.getUpdateUrl();
UpdateChecker.java,long now = System.currentTimeMillis();,if (System != null ) long now = System.currentTimeMillis();
UpdateChecker.java,OutputStream out = conn.getOutputStream();,if (conn != null ) OutputStream out = conn.getOutputStream();
UpdateChecker.java,int responseCode = conn.getResponseCode();,if (conn != null ) int responseCode = conn.getResponseCode();
UpdateChecker.java,String applicationName = Version.getApplicationName();,if (Version != null ) String applicationName = Version.getApplicationName();
UpdateChecker.java,String applicationVersion = Version.getApplicationVersion();,if (Version != null ) String applicationVersion = Version.getApplicationVersion();
UpdateChecker.java,Locale locale = Locale.getDefault();,if (Locale != null ) Locale locale = Locale.getDefault();
UpdateChecker.java,Date date = plugin.getReleaseDate();,if (plugin != null ) Date date = plugin.getReleaseDate();
UpdateChecker.java,"text = (first ? """" : "", "") + plugin.getShortDescription();","if (plugin != null ) text = (first ? """" : "", "") + plugin.getShortDescription();"
UpdateChecker.java,uuid = random.nextLong();,if (random != null ) uuid = random.nextLong();
UpdateChecker.java,DetectorFactoryCollection dfc = DetectorFactoryCollection.instance();,if (DetectorFactoryCollection != null ) DetectorFactoryCollection dfc = DetectorFactoryCollection.instance();
UpdateChecker.java,UpdateChecker checker = dfc.getUpdateChecker();,if (dfc != null ) UpdateChecker checker = dfc.getUpdateChecker();
BackdateHistoryUsingSource.java,SourceFinder sourceFinder = new SourceFinder(origCollection.getProject());,if (SourceFinder(origCollection != null ) SourceFinder sourceFinder = new SourceFinder(origCollection.getProject());
BackdateHistoryUsingSource.java,long when = sourceFile.getLastModified();,if (sourceFile != null ) long when = sourceFile.getLastModified();
BackdateHistoryUsingSource.java,Cloud cloud = origCollection.getCloud();,if (origCollection != null ) Cloud cloud = origCollection.getCloud();
CloudSyncAndReport.java,Cloud cloud = bugCollection.getCloud();,if (bugCollection != null ) Cloud cloud = bugCollection.getCloud();
CloudSyncAndReport.java,ProjectStats projectStats = bugCollection.getProjectStats();,if (bugCollection != null ) ProjectStats projectStats = bugCollection.getProjectStats();
CloudSyncAndReport.java,Collection<BugInstance> bugs = bugCollection.getCollection();,if (bugCollection != null ) Collection<BugInstance> bugs = bugCollection.getCollection();
CloudSyncAndReport.java,Cloud cloud = bugCollection.getCloud();,if (bugCollection != null ) Cloud cloud = bugCollection.getCloud();
CloudSyncAndReport.java,Cloud cloud = bugCollection.getCloud();,if (bugCollection != null ) Cloud cloud = bugCollection.getCloud();
Filter.java,Cloud cloud = collection.getCloud();,if (collection != null ) Cloud cloud = collection.getCloud();
Filter.java,Cloud cloud = origCollection.getCloud();,if (origCollection != null ) Cloud cloud = origCollection.getCloud();
Filter.java,SigninState signinState = cloud.getSigninState();,if (cloud != null ) SigninState signinState = cloud.getSigninState();
MergeSummarizeAndView.java,isCloudManagedByGui = msv.report();,if (msv != null ) isCloudManagedByGui = msv.report();
MergeSummarizeAndView.java,cloud = results.getCloud();,if (results != null ) cloud = results.getCloud();
MergeSummarizeAndView.java,originalMode = cloud.getMode();,if (cloud != null ) originalMode = cloud.getMode();
MergeSummarizeAndView.java,assert cloud == results.getCloud();,if (results != null ) assert cloud == results.getCloud();
Update.java,BugDesignation designation = newBug.getUserDesignation();,if (newBug != null ) BugDesignation designation = newBug.getUserDesignation();
SAXBugCollectionHandlerTest.java,Cloud cloud = bc.getCloud();,if (bc != null ) Cloud cloud = bc.getCloud();
SAXBugCollectionHandlerTest.java,Cloud cloud = bc.getCloud();,if (bc != null ) Cloud cloud = bc.getCloud();
SAXBugCollectionHandlerTest.java,Cloud cloud = bc.getCloud();,if (bc != null ) Cloud cloud = bc.getCloud();
SAXBugCollectionHandlerTest.java,Cloud cloud = bc.getCloud();,if (bc != null ) Cloud cloud = bc.getCloud();
AbstractCloudTest.java,ClassAnnotation cls = bug.getPrimaryClass();,if (bug != null ) ClassAnnotation cls = bug.getPrimaryClass();
AbstractCloudTest.java,BugDesignation old = map.get(bd.getUser());,if (map != null ) BugDesignation old = map.get(bd.getUser());
UpdateCheckerTest.java,String urlStr = url.toString();,if (url != null ) String urlStr = url.toString();
MyReporter.java,BugPattern bugPattern = bugInstance.getBugPattern();,if (bugInstance != null ) BugPattern bugPattern = bugInstance.getBugPattern();
ResultsFrame.java,Editor srcEditor = srcClass.getEditor();,if (srcClass != null ) Editor srcEditor = srcClass.getEditor();
ResultsFrame.java,int srcStartLine = srcLine.getStartLine();,if (srcLine != null ) int srcStartLine = srcLine.getStartLine();
ResultsFrame.java,String str = srcLine.getSourceFile();,if (srcLine != null ) String str = srcLine.getSourceFile();
ResultsFrame.java,SourceLineAnnotation annotation = bugList.get(row).getPrimarySourceLineAnnotation();,if (bugList != null ) SourceLineAnnotation annotation = bugList.get(row).getPrimarySourceLineAnnotation();
ResultsFrame.java,notCompiled = !srcClass.isCompiled();,if (!srcClass != null ) notCompiled = !srcClass.isCompiled();
ResultsFrame.java,int line = annotation.getStartLine();,if (annotation != null ) int line = annotation.getStartLine();
GoogleCodeBugFiler.java,Status status = issue.getStatus();,if (issue != null ) Status status = issue.getStatus();
GoogleCodeBugFiler.java,IOException ioe = new IOException(e.getMessage());,if (IOException(e != null ) IOException ioe = new IOException(e.getMessage());
GoogleCodeBugFiler.java,IGuiCallback callback = cloud.getGuiCallback();,if (cloud != null ) IGuiCallback callback = cloud.getGuiCallback();
GoogleCodeBugFiler.java,String viewUrl = googleCodeIssue.getHtmlLink().getHref();,if (googleCodeIssue != null ) String viewUrl = googleCodeIssue.getHtmlLink().getHref();
GoogleCodeBugFiler.java,IGuiCallback guiCallback = cloud.getGuiCallback();,if (cloud != null ) IGuiCallback guiCallback = cloud.getGuiCallback();
GoogleCodeBugFilingTest.java,Object[] args = invocationOnMock.getArguments();,if (invocationOnMock != null ) Object[] args = invocationOnMock.getArguments();
GoogleCodeBugFilingTest.java,Object[] args = invocationOnMock.getArguments();,if (invocationOnMock != null ) Object[] args = invocationOnMock.getArguments();
DBCloud.java,long firstSeen = bugCollection.getTimestamp();,if (bugCollection != null ) long firstSeen = bugCollection.getTimestamp();
DBCloud.java,ArrayList<BugDesignation> result = new ArrayList<BugDesignation>(designations.size());,if (ArrayList<BugDesignation>(designations != null ) ArrayList<BugDesignation> result = new ArrayList<BugDesignation>(designations.size());
DBCloud.java,BugData bugData = getBugData(bug.getInstanceHash());,if (getBugData(bug != null ) BugData bugData = getBugData(bug.getInstanceHash());
DBCloud.java,this.now = System.currentTimeMillis();,if (System != null ) this.now = System.currentTimeMillis();
DBCloud.java,long startTime = System.currentTimeMillis();,if (System != null ) long startTime = System.currentTimeMillis();
DBCloud.java,rs = ps.executeQuery();,if (ps != null ) rs = ps.executeQuery();
DBCloud.java,rs = ps.executeQuery();,if (ps != null ) rs = ps.executeQuery();
DBCloud.java,rs = ps.executeQuery();,if (ps != null ) rs = ps.executeQuery();
DBCloud.java,rs = ps.executeQuery();,if (ps != null ) rs = ps.executeQuery();
DBCloud.java,data.bugFiled = whenFiled.getTime();,if (whenFiled != null ) data.bugFiled = whenFiled.getTime();
DBCloud.java,long initialLoadTime = sbc.getTimeFinishedLoading() - sbc.getTimeStartedLoading();,if (sbc != null ) long initialLoadTime = sbc.getTimeFinishedLoading() - sbc.getTimeStartedLoading();
DBCloud.java,long initialSyncTime = System.currentTimeMillis() - sbc.getTimeFinishedLoading();,if (sbc != null ) long initialSyncTime = System.currentTimeMillis() - sbc.getTimeFinishedLoading();
DBCloud.java,rs = insertSession.getGeneratedKeys();,if (insertSession != null ) rs = insertSession.getGeneratedKeys();
DBCloud.java,long stillPresentAt = bugCollection.getTimestamp();,if (bugCollection != null ) long stillPresentAt = bugCollection.getTimestamp();
DBCloud.java,BugData bd = getBugData(b.getInstanceHash());,if (getBugData(b != null ) BugData bd = getBugData(b.getInstanceHash());
DBCloud.java,BugDesignation designation = bd.getPrimaryDesignation();,if (bd != null ) BugDesignation designation = bd.getPrimaryDesignation();
DBCloud.java,findbugsUser = getUsernameLookup().getUsername();,if (getUsernameLookup() != null ) findbugsUser = getUsernameLookup().getUsername();
DBCloud.java,longestMatch = key.length();,if (key != null ) longestMatch = key.length();
DBCloud.java,String s = in.readLine();,if (in != null ) String s = in.readLine();
DBCloud.java,Timestamp date = new Timestamp(System.currentTimeMillis());,if (Timestamp(System != null ) Timestamp date = new Timestamp(System.currentTimeMillis());
DBCloud.java,BugPattern bugPattern = bug.getBugPattern();,if (bug != null ) BugPattern bugPattern = bug.getBugPattern();
DBCloud.java,Timestamp date = new Timestamp(bd.getTimestamp());,if (Timestamp(bd != null ) Timestamp date = new Timestamp(bd.getTimestamp());
DBCloud.java,ResultSet rs = insertEvaluation.getGeneratedKeys();,if (insertEvaluation != null ) ResultSet rs = insertEvaluation.getGeneratedKeys();
DBCloud.java,BugData bug = getBugData(b.getInstanceHash());,if (getBugData(b != null ) BugData bug = getBugData(b.getInstanceHash());
DBCloud.java,ResultSet rs = insertBugData.getGeneratedKeys();,if (insertBugData != null ) ResultSet rs = insertBugData.getGeneratedKeys();
DBCloud.java,rs = query.executeQuery();,if (query != null ) rs = query.executeQuery();
DBCloud.java,BugData bd = getBugData(b.getInstanceHash());,if (getBugData(b != null ) BugData bd = getBugData(b.getInstanceHash());
DBCloud.java,this.bd = getBugData(bug.getInstanceHash());,if (getBugData(bug != null ) this.bd = getBugData(bug.getInstanceHash());
DBCloud.java,bd.bugFiled = System.currentTimeMillis();,if (System != null ) bd.bugFiled = System.currentTimeMillis();
DBCloud.java,BugData data = getBugData(bug.getInstanceHash());,if (getBugData(bug != null ) BugData data = getBugData(bug.getInstanceHash());
DBCloud.java,Collection<BugDesignation> uniqueDesignations = bd.getUniqueDesignations();,if (bd != null ) Collection<BugDesignation> uniqueDesignations = bd.getUniqueDesignations();
DBCloud.java,UserDesignation designation = UserDesignation.valueOf(d.getDesignationKey());,if (UserDesignation != null ) UserDesignation designation = UserDesignation.valueOf(d.getDesignationKey());
DBCloud.java,total += designation.score();,if (designation != null ) total += designation.score();
DBCloud.java,Collection<BugDesignation> uniqueDesignations = bd.getUniqueDesignations();,if (bd != null ) Collection<BugDesignation> uniqueDesignations = bd.getUniqueDesignations();
DBCloud.java,Collection<BugDesignation> uniqueDesignations = bd.getUniqueDesignations();,if (bd != null ) Collection<BugDesignation> uniqueDesignations = bd.getUniqueDesignations();
DBCloud.java,UserDesignation designation = UserDesignation.valueOf(d.getDesignationKey());,if (UserDesignation != null ) UserDesignation designation = UserDesignation.valueOf(d.getDesignationKey());
DBCloud.java,int score = designation.score();,if (designation != null ) int score = designation.score();
DBCloud.java,Collection<BugDesignation> uniqueDesignations = bd.getUniqueDesignations();,if (bd != null ) Collection<BugDesignation> uniqueDesignations = bd.getUniqueDesignations();
DBCloud.java,UserDesignation designation = UserDesignation.valueOf(d.getDesignationKey());,if (UserDesignation != null ) UserDesignation designation = UserDesignation.valueOf(d.getDesignationKey());
DBCloud.java,int score = designation.score();,if (designation != null ) int score = designation.score();
DBCloud.java,ResultSet rs = ps.executeQuery();,if (ps != null ) ResultSet rs = ps.executeQuery();
DBCloud.java,bd.bugFiled = whenFiled.getTime();,if (whenFiled != null ) bd.bugFiled = whenFiled.getTime();
DBCloud.java,bd.bugFiled = pendingFiledAt.getTime();,if (pendingFiledAt != null ) bd.bugFiled = pendingFiledAt.getTime();
DBCloud.java,errorTime = System.currentTimeMillis();,if (System != null ) errorTime = System.currentTimeMillis();
DBCloud.java,int numToSync = queue.size();,if (queue != null ) int numToSync = queue.size();
DBCloud.java,BugData bugData = sendToDatabase.get(bd.getInstanceHash());,if (sendToDatabase != null ) BugData bugData = sendToDatabase.get(bd.getInstanceHash());
DBStats.java,Timestamp result = new Timestamp(t.getTime());,if (Timestamp(t != null ) Timestamp result = new Timestamp(t.getTime());
DBStats.java,String s = in.readLine();,if (in != null ) String s = in.readLine();
DBStats.java,Connection c = cloud.getConnection();,if (cloud != null ) Connection c = cloud.getConnection();
DBStats.java,ResultSet rs = ps.executeQuery();,if (ps != null ) ResultSet rs = ps.executeQuery();
DBStats.java,DetectorFactoryCollection detectorfactory = DetectorFactoryCollection.instance();,if (DetectorFactoryCollection != null ) DetectorFactoryCollection detectorfactory = DetectorFactoryCollection.instance();
DBStats.java,rs = ps.executeQuery();,if (ps != null ) rs = ps.executeQuery();
DBStats.java,rs = ps.executeQuery();,if (ps != null ) rs = ps.executeQuery();
DBStats.java,rs = ps.executeQuery();,if (ps != null ) rs = ps.executeQuery();
IPAddressLookup.java,ipAddress = in.readLine();,if (in != null ) ipAddress = in.readLine();
JiraSoapServiceServiceLocator.java,ports = new java.util.HashSet();,if (java != null ) ports = new java.util.HashSet();
JiraBugFiler.java,IOException ioe = new IOException(e.getMessage());,if (IOException(e != null ) IOException ioe = new IOException(e.getMessage());
JiraBugFiler.java,String projectId = project.getId();,if (project != null ) String projectId = project.getId();
JiraBugFiler.java,issueTypeId = issueType.getId();,if (issueType != null ) issueTypeId = issueType.getId();
JiraBugFiler.java,IGuiCallback callback = cloud.getGuiCallback();,if (cloud != null ) IGuiCallback callback = cloud.getGuiCallback();
JiraBugFiler.java,dashboardUrl = dashboardUrl.trim();,if (dashboardUrl != null ) dashboardUrl = dashboardUrl.trim();
BugFilingHelper.java,final String bugLink = cloud.getBugLink(b).toExternalForm();,if (cloud != null ) final String bugLink = cloud.getBugLink(b).toExternalForm();
EvaluationsFromXmlUploader.java,int num = localAnnotations.size();,if (localAnnotations != null ) int num = localAnnotations.size();
EvaluationsFromXmlUploader.java,"BugDesignation inCloud = cloud.getDesignationByUser(b, loaded.getUser());","if (loaded != null ) BugDesignation inCloud = cloud.getDesignationByUser(b, loaded.getUser());"
EvaluationsFromXmlUploader.java,String user = bd.getUser();,if (bd != null ) String user = bd.getUser();
WebCloudClient.java,boolean networkInitialization = networkClient.initialize();,if (networkClient != null ) boolean networkInitialization = networkClient.initialize();
WebCloudClient.java,Long sessionId = networkClient.getSessionId();,if (networkClient != null ) Long sessionId = networkClient.getSessionId();
WebCloudClient.java,Issue issue = networkClient.getIssueByHash(bd.getInstanceHash());,if (networkClient != null ) Issue issue = networkClient.getIssueByHash(bd.getInstanceHash());
WebCloudClient.java,Issue issue = networkClient.getIssueByHash(b.getInstanceHash());,if (networkClient != null ) Issue issue = networkClient.getIssueByHash(b.getInstanceHash());
WebCloudClient.java,String url = issue.getBugLink();,if (issue != null ) String url = issue.getBugLink();
WebCloudClient.java,Issue issue = networkClient.getIssueByHash(instance.getInstanceHash());,if (networkClient != null ) Issue issue = networkClient.getIssueByHash(instance.getInstanceHash());
WebCloudClient.java,Issue issue = networkClient.getIssueByHash(b.getInstanceHash());,if (networkClient != null ) Issue issue = networkClient.getIssueByHash(b.getInstanceHash());
WebCloudClient.java,long userTimestamp = bugInstance.getUserTimestamp();,if (bugInstance != null ) long userTimestamp = bugInstance.getUserTimestamp();
WebCloudClient.java,int numBugs = bugsByHash.size();,if (bugsByHash != null ) int numBugs = bugsByHash.size();
WebCloudClient.java,ArrayList<String> hashes = new ArrayList<String>(bugsByHash.keySet());,if (ArrayList<String>(bugsByHash != null ) ArrayList<String> hashes = new ArrayList<String>(bugsByHash.keySet());
WebCloudClient.java,Collection<BugInstance> newBugs = bugsByHash.values();,if (bugsByHash != null ) Collection<BugInstance> newBugs = bugsByHash.values();
WebCloudClient.java,boolean hasTimestampsToUpdate = !networkClient.getTimestampsToUpdate().isEmpty();,if (!networkClient != null ) boolean hasTimestampsToUpdate = !networkClient.getTimestampsToUpdate().isEmpty();
WebCloudClient.java,boolean hasBugsToUpload = !newBugs.isEmpty();,if (!newBugs != null ) boolean hasBugsToUpload = !newBugs.isEmpty();
WebCloudClient.java,evals = networkClient.getRecentEvaluationsFromServer();,if (networkClient != null ) evals = networkClient.getRecentEvaluationsFromServer();
WebCloudClient.java,String protoHash = WebCloudProtoUtil.decodeHash(updatedIssue.getHash());,if (WebCloudProtoUtil != null ) String protoHash = WebCloudProtoUtil.decodeHash(updatedIssue.getHash());
WebCloudClient.java,Issue oldIssue = Issue.newBuilder(existingIssue).build();,if (Issue != null ) Issue oldIssue = Issue.newBuilder(existingIssue).build();
WebCloudClient.java,String newHash = WebCloudProtoUtil.decodeHash(issueToStore.getHash());,if (WebCloudProtoUtil != null ) String newHash = WebCloudProtoUtil.decodeHash(issueToStore.getHash());
WebCloudClient.java,Evaluation evaluation = it.previous();,if (it != null ) Evaluation evaluation = it.previous();
WebCloudClient.java,boolean isNewUsername = seenUsernames.add(evaluation.getWho());,if (seenUsernames != null ) boolean isNewUsername = seenUsernames.add(evaluation.getWho());
WebCloudNetworkClient.java,this.sessionId = lookerupper.getSessionId();,if (lookerupper != null ) this.sessionId = lookerupper.getSessionId();
WebCloudNetworkClient.java,this.username = lookerupper.getUsername();,if (lookerupper != null ) this.username = lookerupper.getUsername();
WebCloudNetworkClient.java,this.host = lookerupper.getHost();,if (lookerupper != null ) this.host = lookerupper.getHost();
WebCloudNetworkClient.java,this.sessionId = lookerupper.getSessionId();,if (lookerupper != null ) this.sessionId = lookerupper.getSessionId();
WebCloudNetworkClient.java,this.username = lookerupper.getUsername();,if (lookerupper != null ) this.username = lookerupper.getUsername();
WebCloudNetworkClient.java,this.host = lookerupper.getHost();,if (lookerupper != null ) this.host = lookerupper.getHost();
WebCloudNetworkClient.java,Issue issue = issuesByHash.get(instance.getInstanceHash());,if (issuesByHash != null ) Issue issue = issuesByHash.get(instance.getInstanceHash());
WebCloudNetworkClient.java,final int numBugs = hashes.size();,if (hashes != null ) final int numBugs = hashes.size();
WebCloudNetworkClient.java,int sofar = numberOfBugsCheckedSoFar.get();,if (numberOfBugsCheckedSoFar != null ) int sofar = numberOfBugsCheckedSoFar.get();
WebCloudNetworkClient.java,final int bugCount = timestamps.size();,if (timestamps != null ) final int bugCount = timestamps.size();
WebCloudNetworkClient.java,Calendar now = Calendar.getInstance();,if (Calendar != null ) Calendar now = Calendar.getInstance();
WebCloudNetworkClient.java,TimeZone timeZone = now.getTimeZone();,if (now != null ) TimeZone timeZone = now.getTimeZone();
WebCloudNetworkClient.java,String timeStr = df.format(now.getTime());,if (df != null ) String timeStr = df.format(now.getTime());
WebCloudNetworkClient.java,boolean daylight = timeZone.inDaylightTime(now.getTime());,if (timeZone != null ) boolean daylight = timeZone.inDaylightTime(now.getTime());
WebCloudNetworkClient.java,String earliestStr = df.format(earliest.getTime());,if (df != null ) String earliestStr = df.format(earliest.getTime());
WebCloudNetworkClient.java,int updated = soFar.addAndGet(partition.size());,if (soFar != null ) int updated = soFar.addAndGet(partition.size());
WebCloudNetworkClient.java,final int bugCount = newBugs.size();,if (newBugs != null ) final int bugCount = newBugs.size();
WebCloudNetworkClient.java,int uploaded = bugsUploaded.get();,if (bugsUploaded != null ) int uploaded = bugsUploaded.get();
WebCloudNetworkClient.java,maxRecentEvaluationMillis = eval.getWhen();,if (eval != null ) maxRecentEvaluationMillis = eval.getWhen();
WebCloudNetworkClient.java,GetRecentEvaluations.Builder msgb = GetRecentEvaluations.newBuilder();,if (GetRecentEvaluations != null ) GetRecentEvaluations.Builder msgb = GetRecentEvaluations.newBuilder();
WebCloudNetworkClient.java,earliestSeenServerTime = evals.getCurrentServerTime();,if (evals != null ) earliestSeenServerTime = evals.getCurrentServerTime();
WebCloudNetworkClient.java,Issue issue = issuesByHash.get(b.getInstanceHash());,if (issuesByHash != null ) Issue issue = issuesByHash.get(b.getInstanceHash());
WebCloudNetworkClient.java,BugDesignation designation = bugInstance.getNonnullUserDesignation();,if (bugInstance != null ) BugDesignation designation = bugInstance.getNonnullUserDesignation();
WebCloudNetworkClient.java,long timestamp = designation.getTimestamp();,if (designation != null ) long timestamp = designation.getTimestamp();
WebCloudNetworkClient.java,String designationKey = designation.getDesignationKey();,if (designation != null ) String designationKey = designation.getDesignationKey();
WebCloudNetworkClient.java,String comment = designation.getAnnotationText();,if (designation != null ) String comment = designation.getAnnotationText();
WebCloudNetworkClient.java,String hash = bugInstance.getInstanceHash();,if (bugInstance != null ) String hash = bugInstance.getInstanceHash();
WebCloudNetworkClient.java,Evaluation eval = evalBuilder.build();,if (evalBuilder != null ) Evaluation eval = evalBuilder.build();
WebCloudNetworkClient.java,maxRecentEvaluationMillis = evaluation.getWhen();,if (evaluation != null ) maxRecentEvaluationMillis = evaluation.getWhen();
WebCloudNetworkClient.java,earliestSeenServerTime = response.getCurrentServerTime();,if (response != null ) earliestSeenServerTime = response.getCurrentServerTime();
WebCloudNetworkClient.java,long cloudFirstSeen = issue.getFirstSeen();,if (issue != null ) long cloudFirstSeen = issue.getFirstSeen();
WebCloudNetworkClient.java,FindIssues.Builder msgb = FindIssues.newBuilder();,if (FindIssues != null ) FindIssues.Builder msgb = FindIssues.newBuilder();
WebCloudNetworkClient.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
WebCloudNetworkClient.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
WebCloudNetworkClient.java,int foundIssues = firesponse.getFoundIssuesCount();,if (firesponse != null ) int foundIssues = firesponse.getFoundIssuesCount();
WebCloudNetworkClient.java,final String hash = WebCloudProtoUtil.decodeHash(issue.getHash());,if (WebCloudProtoUtil != null ) final String hash = WebCloudProtoUtil.decodeHash(issue.getHash());
WebCloudNetworkClient.java,ExecutorService updateExecutor = cloudClient.getBugUpdateExecutor();,if (cloudClient != null ) ExecutorService updateExecutor = cloudClient.getBugUpdateExecutor();
WebCloudNetworkClient.java,Builder uploadIssuesCmd = UploadIssues.newBuilder();,if (UploadIssues != null ) Builder uploadIssuesCmd = UploadIssues.newBuilder();
WebCloudNetworkClient.java,OutputStream out = conn.getOutputStream();,if (conn != null ) OutputStream out = conn.getOutputStream();
WebCloudNetworkClient.java,responseCode = conn.getResponseCode();,if (conn != null ) responseCode = conn.getResponseCode();
MockWebCloudClient.java,Object[] args = invocation.getArguments();,if (invocation != null ) Object[] args = invocation.getArguments();
MockWebCloudClient.java,Throwable t = backgroundExceptions.poll();,if (backgroundExceptions != null ) Throwable t = backgroundExceptions.poll();
MockWebCloudClient.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
MockWebCloudClient.java,String expectedUrl = connection.url();,if (connection != null ) String expectedUrl = connection.url();
MockWebCloudClient.java,responseStream = new ByteArrayInputStream(response.toByteArray());,if (ByteArrayInputStream(response != null ) responseStream = new ByteArrayInputStream(response.toByteArray());
WebCloudAuthTests.java,WebCloudNetworkClient spyNetworkClient = cloud.createSpyNetworkClient();,if (cloud != null ) WebCloudNetworkClient spyNetworkClient = cloud.createSpyNetworkClient();
WebCloudAuthTests.java,LogIn logIn = LogIn.parseFrom(findIssuesOutput.toByteArray());,if (LogIn != null ) LogIn logIn = LogIn.parseFrom(findIssuesOutput.toByteArray());
WebCloudAuthTests.java,WebCloudNetworkClient spyNetworkClient = cloud.createSpyNetworkClient();,if (cloud != null ) WebCloudNetworkClient spyNetworkClient = cloud.createSpyNetworkClient();
WebCloudAuthTests.java,LogIn logIn = LogIn.parseFrom(signInReq.toByteArray());,if (LogIn != null ) LogIn logIn = LogIn.parseFrom(signInReq.toByteArray());
WebCloudCallbackTests.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
WebCloudCallbackTests.java,Throwable t = bgThreadFuture.get();,if (bgThreadFuture != null ) Throwable t = bgThreadFuture.get();
WebCloudIssueSyncTests.java,FindIssues hashes = FindIssues.parseFrom(findIssuesOutput.toByteArray());,if (FindIssues != null ) FindIssues hashes = FindIssues.parseFrom(findIssuesOutput.toByteArray());
WebCloudIssueSyncTests.java,List<String> hashesFromFindIssues = WebCloudProtoUtil.decodeHashes(hashes.getMyIssueHashesList());,if (WebCloudProtoUtil != null ) List<String> hashesFromFindIssues = WebCloudProtoUtil.decodeHashes(hashes.getMyIssueHashesList());
WebCloudIssueSyncTests.java,FindIssues hashes = FindIssues.parseFrom(findIssuesOutput.toByteArray());,if (FindIssues != null ) FindIssues hashes = FindIssues.parseFrom(findIssuesOutput.toByteArray());
WebCloudIssueSyncTests.java,List<String> hashesFromFindIssues = WebCloudProtoUtil.decodeHashes(hashes.getMyIssueHashesList());,if (WebCloudProtoUtil != null ) List<String> hashesFromFindIssues = WebCloudProtoUtil.decodeHashes(hashes.getMyIssueHashesList());
WebCloudIssueSyncTests.java,LogIn logIn = LogIn.parseFrom(logInOutput.toByteArray());,if (LogIn != null ) LogIn logIn = LogIn.parseFrom(logInOutput.toByteArray());
WebCloudIssueSyncTests.java,UploadIssues uploadedIssues = UploadIssues.parseFrom(uploadIssuesBuffer.toByteArray());,if (UploadIssues != null ) UploadIssues uploadedIssues = UploadIssues.parseFrom(uploadIssuesBuffer.toByteArray());
WebCloudIssueSyncTests.java,WebCloudNetworkClient spyNetworkClient = cloud.createSpyNetworkClient();,if (cloud != null ) WebCloudNetworkClient spyNetworkClient = cloud.createSpyNetworkClient();
WebCloudIssueSyncTests.java,WebCloudNetworkClient spyNetworkClient = cloud.createSpyNetworkClient();,if (cloud != null ) WebCloudNetworkClient spyNetworkClient = cloud.createSpyNetworkClient();
WebCloudMiscTests.java,WebCloudNetworkClient spyNetworkClient = cloud.createSpyNetworkClient();,if (cloud != null ) WebCloudNetworkClient spyNetworkClient = cloud.createSpyNetworkClient();
DetectorTutorial.java,Object value = top.getConstant();,if (top != null ) Object value = top.getConstant();
DetectorTutorial.java,String bigDecimalString = new BigDecimal(arg).toString();,if (BigDecimal(arg) != null ) String bigDecimalString = new BigDecimal(arg).toString();
LocalDbEvaluation.java,"int commentCompare = comparePossiblyNull(getComment(), o.getComment());","if (o != null ) int commentCompare = comparePossiblyNull(getComment(), o.getComment());"
LocalFindBugsCloud.java,Logger logger = Logger.getRootLogger();,if (Logger != null ) Logger logger = Logger.getRootLogger();
LocalFindBugsCloud.java,PersistenceManagerFactory pmf = new LocalPersistenceHelper().getPersistenceManagerFactory();,if (LocalPersistenceHelper() != null ) PersistenceManagerFactory pmf = new LocalPersistenceHelper().getPersistenceManagerFactory();
LocalFlybushServletTestHelper.java,actualPersistenceManager = pmf.getPersistenceManager();,if (pmf != null ) actualPersistenceManager = pmf.getPersistenceManager();
ProtoClasses.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
ProtoClasses.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
ProtoClasses.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
ProtoClasses.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
ProtoClasses.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
ProtoClasses.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
ProtoClasses.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
ProtoClasses.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
ProtoClasses.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
ProtoClasses.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
ProtoClasses.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
ProtoClasses.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
ProtoClasses.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
ProtoClasses.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
ProtoClasses.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
ProtoClasses.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
ProtoClasses.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
ProtoClasses.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
ProtoClasses.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
ProtoClasses.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
ProtoClasses.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
ProtoClasses.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
ProtoClasses.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
ProtoClasses.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
ProtoClasses.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
ProtoClasses.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
WebCloudProtoUtil.java,hashStr = hashStr.toLowerCase();,if (hashStr != null ) hashStr = hashStr.toLowerCase();
WebCloudProtoUtil.java,List<String> result = new ArrayList<String>(myIssueHashesList.size());,if (ArrayList<String>(myIssueHashesList != null ) List<String> result = new ArrayList<String>(myIssueHashesList.size());
WebCloudProtoUtil.java,List<ByteString> result = new ArrayList<ByteString>(hashStrings.size());,if (ArrayList<ByteString>(hashStrings != null ) List<ByteString> result = new ArrayList<ByteString>(hashStrings.size());
Plugin.java,releaseDate = Version.getReleaseDate();,if (Version != null ) releaseDate = Version.getReleaseDate();
DismantleBytecode.java,nameConstantOperand = getStringFromIndex(sig.getNameIndex());,if (getStringFromIndex(sig != null ) nameConstantOperand = getStringFromIndex(sig.getNameIndex());
DismantleBytecode.java,sigConstantOperand = getStringFromIndex(sig.getSignatureIndex());,if (getStringFromIndex(sig != null ) sigConstantOperand = getStringFromIndex(sig.getSignatureIndex());
UncallableMethodOfAnonymousClass.java,boolean hasAnonymousName = ClassName.isAnonymous(obj.getClassName());,if (ClassName != null ) boolean hasAnonymousName = ClassName.isAnonymous(obj.getClassName());
ClassContext.java,prevStartPc = line.getStartPC();,if (line != null ) prevStartPc = line.getStartPC();
ValueRangeAnalysisFactory.java,Edge edge = iterator.next();,if (iterator != null ) Edge edge = iterator.next();
ValueRangeAnalysisFactory.java,BasicBlock target = edge.getTarget();,if (edge != null ) BasicBlock target = edge.getTarget();
RedundantConditions.java,cur = cur.getNext();,if (cur != null ) cur = cur.getNext();
BetterCFGBuilder2.java,InstructionHandle prev = handle.getPrev();,if (handle != null ) InstructionHandle prev = handle.getPrev();
BetterCFGBuilder2.java,prev = prev.getPrev();,if (prev != null ) prev = prev.getPrev();
FindUselessObjects.java,ValueNumberAnalysis vna = classContext.getValueNumberDataflow(method).getAnalysis();,if (classContext != null ) ValueNumberAnalysis vna = classContext.getValueNumberDataflow(method).getAnalysis();
FindUselessObjects.java,ConstantPoolGen cpg = cfg.getMethodGen().getConstantPool();,if (cfg != null ) ConstantPoolGen cpg = cfg.getMethodGen().getConstantPool();
FindUselessObjects.java,TypeAnalysis ta = classContext.getTypeDataflow(method).getAnalysis();,if (classContext != null ) TypeAnalysis ta = classContext.getTypeDataflow(method).getAnalysis();
FindUselessObjects.java,Location location = iterator.next();,if (iterator != null ) Location location = iterator.next();
FindUselessObjects.java,Instruction instruction = location.getHandle().getInstruction();,if (location != null ) Instruction instruction = location.getHandle().getInstruction();
FindUselessObjects.java,Type type = typeFrame.getTopValue();,if (typeFrame != null ) Type type = typeFrame.getTopValue();
FindUselessObjects.java,ValueNumber thisValue = vna.getThisValue();,if (vna != null ) ValueNumber thisValue = vna.getThisValue();
FindUselessObjects.java,Iterator<Location> locIterator = cfg.locationIterator();,if (cfg != null ) Iterator<Location> locIterator = cfg.locationIterator();
FindUselessObjects.java,Iterator<BasicBlock> blockIterator = cfg.blockIterator();,if (cfg != null ) Iterator<BasicBlock> blockIterator = cfg.blockIterator();
FindUselessObjects.java,BasicBlock block = blockIterator.next();,if (blockIterator != null ) BasicBlock block = blockIterator.next();
FindUselessObjects.java,InstructionHandle nextHandle = location.getHandle().getNext();,if (location != null ) InstructionHandle nextHandle = location.getHandle().getNext();
FindUselessObjects.java,int number = vn.getNumber();,if (vn != null ) int number = vn.getNumber();
DontIgnoreResultOfPutIfAbsent.java,InstructionHandle next = handle.getNext();,if (handle != null ) InstructionHandle next = handle.getNext();
DontIgnoreResultOfPutIfAbsent.java,ValueNumber vn = vna.getTopValue();,if (vna != null ) ValueNumber vn = vna.getTopValue();
DontIgnoreResultOfPutIfAbsent.java,int locals = vna.getNumLocals();,if (vna != null ) int locals = vna.getNumLocals();
FindDoubleCheck.java,Field[] f = fieldDefinedIn.getFields();,if (fieldDefinedIn != null ) Field[] f = fieldDefinedIn.getFields();
DumbMethods.java,int nArgs = getNumberArguments(m.getSignature());,if (getNumberArguments(m != null ) int nArgs = getNumberArguments(m.getSignature());
DumbMethods.java,length = (int) arrayArg.getConstant();,if (arrayArg != null ) length = (int) arrayArg.getConstant();
DumbMethods.java,length -= (int) offsetArg.getConstant();,if (offsetArg != null ) length -= (int) offsetArg.getConstant();
DumbMethods.java,Object o = item.getConstant();,if (item != null ) Object o = item.getConstant();
DumbMethods.java,Object secondConstant = secondArgument.getConstant();,if (secondArgument != null ) Object secondConstant = secondArgument.getConstant();
DumbMethods.java,Object o = item.getConstant();,if (item != null ) Object o = item.getConstant();
DumbMethods.java,Object secondConstant = secondArgument.getConstant();,if (secondArgument != null ) Object secondConstant = secondArgument.getConstant();
DumbMethods.java,Object rhsConstant = rhs.getConstant();,if (rhs != null ) Object rhsConstant = rhs.getConstant();
DumbMethods.java,Object lhsConstant = lhs.getConstant();,if (lhs != null ) Object lhsConstant = lhs.getConstant();
DumbMethods.java,Object rhsConstant = rhs.getConstant();,if (rhs != null ) Object rhsConstant = rhs.getConstant();
DumbMethods.java,Object lhsConstant = lhs.getConstant();,if (lhs != null ) Object lhsConstant = lhs.getConstant();
FindPuzzlers.java,Object o = top.getConstant();,if (top != null ) Object o = top.getConstant();
ValueRangeAnalysisFactory.java,JavaClass jClass = classContext.getJavaClass();,if (classContext != null ) JavaClass jClass = classContext.getJavaClass();
ValueRangeAnalysisFactory.java,LocalVariableTable lvTable = method.getCode().getLocalVariableTable();,if (method != null ) LocalVariableTable lvTable = method.getCode().getLocalVariableTable();
ValueRangeAnalysisFactory.java,InstructionHandle ih = iterator.next();,if (iterator != null ) InstructionHandle ih = iterator.next();
ValueRangeAnalysisFactory.java,Instruction inst = ih.getInstruction();,if (ih != null ) Instruction inst = ih.getInstruction();
ValueRangeAnalysisFactory.java,name = lv.getName();,if (lv != null ) name = lv.getName();
ValueRangeAnalysisFactory.java,signature = lv.getSignature();,if (lv != null ) signature = lv.getSignature();
ValueRangeAnalysisFactory.java,Instruction comparisonInstruction = iterator.next().getInstruction();,if (iterator != null ) Instruction comparisonInstruction = iterator.next().getInstruction();
ValueRangeAnalysisFactory.java,short cmpOpcode = comparisonInstruction.getOpcode();,if (comparisonInstruction != null ) short cmpOpcode = comparisonInstruction.getOpcode();
Dataflow.java,Edge edge = predEdgeIter.next();,if (predEdgeIter != null ) Edge edge = predEdgeIter.next();
Dataflow.java,Fact edgeFact = analysis.createFact();,if (analysis != null ) Fact edgeFact = analysis.createFact();
Dataflow.java,pos = block.getFirstInstruction().getPosition();,if (block != null ) pos = block.getFirstInstruction().getPosition();
ValueRangeAnalysisFactory.java,"Condition condition = extractCondition(source.instructionReverseIterator(), jClass.getConstantPool());","if (jClass != null ) Condition condition = extractCondition(source.instructionReverseIterator(), jClass.getConstantPool());"
ValueRangeAnalysisFactory.java,signature = localVariable.getSignature();,if (localVariable != null ) signature = localVariable.getSignature();
ValueRangeAnalysisFactory.java,Branch branch = entry.getValue();,if (entry != null ) Branch branch = entry.getValue();
ValueRangeAnalysisFactory.java,Edge edge = entry.getKey();,if (entry != null ) Edge edge = entry.getKey();
ValueRangeAnalysisFactory.java,boolean trueValue = !branch.trueReachedSet.isEmpty();,if (!branch != null ) boolean trueValue = !branch.trueReachedSet.isEmpty();
ValueRangeAnalysisFactory.java,boolean falseValue = !branch.falseReachedSet.isEmpty();,if (!branch != null ) boolean falseValue = !branch.falseReachedSet.isEmpty();
ValueRangeAnalysisFactory.java,trueValue |= !dupBranch.trueReachedSet.isEmpty();,if (!dupBranch != null ) trueValue |= !dupBranch.trueReachedSet.isEmpty();
ValueRangeAnalysisFactory.java,falseValue |= !dupBranch.falseReachedSet.isEmpty();,if (!dupBranch != null ) falseValue |= !dupBranch.falseReachedSet.isEmpty();
ValueRangeAnalysisFactory.java,BasicBlock trueTarget = edge.getTarget();,if (edge != null ) BasicBlock trueTarget = edge.getTarget();
ValueRangeAnalysisFactory.java,name = localVariable.getName();,if (localVariable != null ) name = localVariable.getName();
ValueRangeAnalysisFactory.java,Location location = locationIterator.next();,if (locationIterator != null ) Location location = locationIterator.next();
ValueRangeAnalysisFactory.java,Instruction inst = location.getHandle().getInstruction();,if (location != null ) Instruction inst = location.getHandle().getInstruction();
ValueRangeAnalysisFactory.java,name = localVariable.getName();,if (localVariable != null ) name = localVariable.getName();
ValueRangeAnalysisFactory.java,signature = localVariable.getSignature();,if (localVariable != null ) signature = localVariable.getSignature();
OpcodeStack.java,String newSignature = Type.getReturnType(signature).getSignature();,if (Type != null ) String newSignature = Type.getReturnType(signature).getSignature();
CovariantArrayAssignment.java,arraySignature = Type.getReturnType(getMethodSig()).getSignature();,if (Type != null ) arraySignature = Type.getReturnType(getMethodSig()).getSignature();
FindNoSideEffectMethods.java,Type returnType = Type.getReturnType(m.getSignature());,if (Type != null ) Type returnType = Type.getReturnType(m.getSignature());
FindNoSideEffectMethods.java,String returnSignature = ClassName.fromFieldSignature(returnType.getSignature());,if (ClassName != null ) String returnSignature = ClassName.fromFieldSignature(returnType.getSignature());
BugInstance.java,prop = prop.getNext();,if (prop != null ) prop = prop.getNext();
NewFilterFrame.java,String[] listData = filterBy.getAllSorted();,if (filterBy != null ) String[] listData = filterBy.getAllSorted();
MethodGenFactory.java,int codeLength = method.getCode().getLength();,if (method != null ) int codeLength = method.getCode().getLength();
ValueRangeAnalysisFactory.java,Long last = map.get(map.lastKey());,if (map != null ) Long last = map.get(map.lastKey());
ValueRangeAnalysisFactory.java,Iterator<InstructionHandle> iterator = source.instructionReverseIterator();,if (source != null ) Iterator<InstructionHandle> iterator = source.instructionReverseIterator();
ValueRangeAnalysisFactory.java,Instruction comparisonInstruction = iterator.next().getInstruction();,if (iterator != null ) Instruction comparisonInstruction = iterator.next().getInstruction();
ValueRangeAnalysisFactory.java,"List<Edge> duplicates = fi.getDuplicates(cfg, entry.getKey());","if (entry != null ) List<Edge> duplicates = fi.getDuplicates(cfg, entry.getKey());"
ValueRangeAnalysisFactory.java,BasicBlock trueTarget = entry.getKey().getTarget();,if (entry != null ) BasicBlock trueTarget = entry.getKey().getTarget();
ValueRangeAnalysisFactory.java,Edge edge = iterator.next();,if (iterator != null ) Edge edge = iterator.next();
ValueRangeAnalysisFactory.java,BasicBlock target = edge.getTarget();,if (edge != null ) BasicBlock target = edge.getTarget();
RepeatedConditionals.java,byte[] code = getCode().getCode();,if (getCode() != null ) byte[] code = getCode().getCode();
DumbMethods.java,Object o = item.getConstant();,if (item != null ) Object o = item.getConstant();
DumbMethods.java,Object secondConstant = secondArgument.getConstant();,if (secondArgument != null ) Object secondConstant = secondArgument.getConstant();
DumbMethods.java,Object o = item.getConstant();,if (item != null ) Object o = item.getConstant();
DumbMethods.java,Object secondConstant = secondArgument.getConstant();,if (secondArgument != null ) Object secondConstant = secondArgument.getConstant();
DumbMethods.java,Object rhsConstant = rhs.getConstant();,if (rhs != null ) Object rhsConstant = rhs.getConstant();
DumbMethods.java,Object lhsConstant = lhs.getConstant();,if (lhs != null ) Object lhsConstant = lhs.getConstant();
DumbMethods.java,Object rhsConstant = rhs.getConstant();,if (rhs != null ) Object rhsConstant = rhs.getConstant();
DumbMethods.java,Object lhsConstant = lhs.getConstant();,if (lhs != null ) Object lhsConstant = lhs.getConstant();
FindNoSideEffectMethods.java,XClass xClass = subtype.getXClass();,if (subtype != null ) XClass xClass = subtype.getXClass();
FindNoSideEffectMethods.java,XMethod subMethod = xClass.findMatchingMethod(xMethod.getMethodDescriptor());,if (xClass != null ) XMethod subMethod = xClass.findMatchingMethod(xMethod.getMethodDescriptor());
InitializationChain.java,Set<String> allClasses = classRequires.keySet();,if (classRequires != null ) Set<String> allClasses = classRequires.keySet();
MethodReturnCheck.java,XFactory xFactory = AnalysisContext.currentXFactory();,if (AnalysisContext != null ) XFactory xFactory = AnalysisContext.currentXFactory();
DumbMethodInvocations.java,Constant operandValue = frame.getTopValue();,if (frame != null ) Constant operandValue = frame.getTopValue();
DumbMethodInvocations.java,String password = operandValue.getConstantString();,if (operandValue != null ) String password = operandValue.getConstantString();
DumbMethodInvocations.java,String v = operandValue.getConstantString();,if (operandValue != null ) String v = operandValue.getConstantString();
FindSqlInjection.java,Instruction instruction = handle.getInstruction();,if (handle != null ) Instruction instruction = handle.getInstruction();
FindSqlInjection.java,ConstantPoolGen cpg = methodGen.getConstantPool();,if (methodGen != null ) ConstantPoolGen cpg = methodGen.getConstantPool();
BugResolution.java,String retVal = labelVisitor.getLabelReplacement();,if (labelVisitor != null ) String retVal = labelVisitor.getLabelReplacement();
CustomLabelBugResolution.java,String retVal = labelVisitor.getLabelReplacement();,if (labelVisitor != null ) String retVal = labelVisitor.getLabelReplacement();
OverriddenMethodsVisitor.java,methodSignature = bridgedFrom.getSignature();,if (bridgedFrom != null ) methodSignature = bridgedFrom.getSignature();
OverriddenMethodsVisitor.java,methodSignature = xmethod.getSignature();,if (xmethod != null ) methodSignature = xmethod.getSignature();
DumbMethodInvocations.java,Constant operandValue = frame.getTopValue();,if (frame != null ) Constant operandValue = frame.getTopValue();
WMITest.java,Iterator it = staticMap.keySet().iterator();,if (staticMap != null ) Iterator it = staticMap.keySet().iterator();
WMITest.java,Object name = it.next();,if (it != null ) Object name = it.next();
ClassMatcher.java,ClassAnnotation primaryClassAnnotation = bugInstance.getPrimaryClass();,if (bugInstance != null ) ClassAnnotation primaryClassAnnotation = bugInstance.getPrimaryClass();
ClassMatcher.java,String bugClassName = primaryClassAnnotation.getClassName();,if (primaryClassAnnotation != null ) String bugClassName = primaryClassAnnotation.getClassName();
CreateMutableCloneResolution.java,String fieldName = bug.getPrimaryField().getFieldName();,if (bug != null ) String fieldName = bug.getPrimaryField().getFieldName();
BugResolution.java,IProject project = marker.getResource().getProject();,if (marker != null ) IProject project = marker.getResource().getProject();
BugResolution.java,ASTRewrite rewrite = ASTRewrite.create(workingUnit.getAST());,if (ASTRewrite != null ) ASTRewrite rewrite = ASTRewrite.create(workingUnit.getAST());
BugResolution.java,ASTRewrite rewrite = reusableRewrites.get(workingUnit.getJavaElement());,if (reusableRewrites != null ) ASTRewrite rewrite = reusableRewrites.get(workingUnit.getJavaElement());
BugResolution.java,ASTRewrite rewrite = ASTRewrite.create(workingUnit.getAST());,if (ASTRewrite != null ) ASTRewrite rewrite = ASTRewrite.create(workingUnit.getAST());
BugResolution.java,private String label = getClass().getSimpleName();,if (getClass() != null ) private String label = getClass().getSimpleName();
BugResolutionAssociations.java,final String bugType = entry.getKey();,if (entry != null ) final String bugType = entry.getKey();
BugResolutionGenerator.java,BugResolutionAssociations resolutions = FindbugsPlugin.getDefault().getBugResolutions();,if (FindbugsPlugin != null ) BugResolutionAssociations resolutions = FindbugsPlugin.getDefault().getBugResolutions();
BugResolutionGenerator.java,BugResolutionAssociations resolutions = FindbugsPlugin.getDefault().getBugResolutions();,if (FindbugsPlugin != null ) BugResolutionAssociations resolutions = FindbugsPlugin.getDefault().getBugResolutions();
BugResolutionLoader.java,int length = bugFixList.getLength();,if (bugFixList != null ) int length = bugFixList.getLength();
BugResolutionLoader.java,int length = resolutionNodes.getLength();,if (resolutionNodes != null ) int length = resolutionNodes.getLength();
BugResolutionLoader.java,IMarkerResolution resolution = resolutionClass.newInstance();,if (resolutionClass != null ) IMarkerResolution resolution = resolutionClass.newInstance();
BugResolutionLoader.java,String name = attr.getKey();,if (attr != null ) String name = attr.getKey();
BugResolutionLoader.java,String value = attr.getValue();,if (attr != null ) String value = attr.getValue();
BugResolutionLoader.java,int length = attrList.getLength();,if (attrList != null ) int length = attrList.getLength();
BugResolutionLoader.java,String value = attrElement.getTextContent();,if (attrElement != null ) String value = attrElement.getTextContent();
BugResolutionLoader.java,DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();,if (DocumentBuilderFactory != null ) DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
BugResolutionLoader.java,builder = factory.newDocumentBuilder();,if (factory != null ) builder = factory.newDocumentBuilder();
BugResolutionLoader.java,DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();,if (DocumentBuilderFactory != null ) DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
BugResolutionLoader.java,builder = factory.newDocumentBuilder();,if (factory != null ) builder = factory.newDocumentBuilder();
Driver.java,GUISaveState guiSavedPreferences = GUISaveState.getInstance();,if (GUISaveState != null ) GUISaveState guiSavedPreferences = GUISaveState.getInstance();
Driver.java,factory = new FindBugsLayoutManagerFactory(SplitLayout.class.getName());,if (FindBugsLayoutManagerFactory(SplitLayout != null ) factory = new FindBugsLayoutManagerFactory(SplitLayout.class.getName());
SorterTableColumnModel.java,private TableCellRenderer defaultRenderer = new JTableHeader().getDefaultRenderer();,if (JTableHeader() != null ) private TableCellRenderer defaultRenderer = new JTableHeader().getDefaultRenderer();
BugRanker.java,BugRanker pluginRanker = plugin.getBugRanker();,if (plugin != null ) BugRanker pluginRanker = plugin.getBugRanker();
FindBugs.java,Collection<PluginUpdate> updates = updateHolder.get();,if (updateHolder != null ) Collection<PluginUpdate> updates = updateHolder.get();
InstructionActionCache.java,Iterator<String> signatureIterator = sigParser.parameterSignatureIterator();,if (sigParser != null ) Iterator<String> signatureIterator = sigParser.parameterSignatureIterator();
InstructionActionCache.java,int parameters = sigParser.getNumParameters();,if (sigParser != null ) int parameters = sigParser.getNumParameters();
InstructionActionCache.java,String sig = signatureIterator.next();,if (signatureIterator != null ) String sig = signatureIterator.next();
DirectoryCodeBase.java,long modTime = file.lastModified();,if (file != null ) long modTime = file.lastModified();
CheckAnalysisContextContainedAnnotation.java,String signature = field.getSignature();,if (field != null ) String signature = field.getSignature();
CheckTypeQualifiers.java,int p = source.getParameter();,if (source != null ) int p = source.getParameter();
LazyInit.java,BindingSet bindingSet = match.getBindingSet();,if (match != null ) BindingSet bindingSet = match.getBindingSet();
LazyInit.java,FieldVariable field = (FieldVariable) binding.getVariable();,if (binding != null ) FieldVariable field = (FieldVariable) binding.getVariable();
LazyInit.java,String signature = xfield.getSignature();,if (xfield != null ) String signature = xfield.getSignature();
LazyInit.java,String name = fieldClass.getClassDescriptor().getClassName();,if (fieldClass != null ) String name = fieldClass.getClassDescriptor().getClassName();
LazyInit.java,fieldType = fieldClass.getSuperclassDescriptor();,if (fieldClass != null ) fieldType = fieldClass.getSuperclassDescriptor();
LazyInit.java,InstructionHandle testInstructionHandle = test.getMatchedInstructionInstructionHandle();,if (test != null ) InstructionHandle testInstructionHandle = test.getMatchedInstructionInstructionHandle();
LazyInit.java,BitSet extent = domAnalysis.getAllDominatedBy(createBegin.getBasicBlock());,if (domAnalysis != null ) BitSet extent = domAnalysis.getAllDominatedBy(createBegin.getBasicBlock());
LazyInit.java,BitSet postDom = postDomAnalysis.getAllDominatedBy(store.getBasicBlock());,if (postDomAnalysis != null ) BitSet postDom = postDomAnalysis.getAllDominatedBy(store.getBasicBlock());
LazyInit.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
LazyInit.java,BitSet postStore = domAnalysis.getAllDominatedBy(store.getBasicBlock());,if (domAnalysis != null ) BitSet postStore = domAnalysis.getAllDominatedBy(store.getBasicBlock());
LazyInit.java,InstructionHandle nextHandle = handle.getNext();,if (handle != null ) InstructionHandle nextHandle = handle.getNext();
LazyInit.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
LazyInit.java,String sourceFile = javaClass.getSourceFileName();,if (javaClass != null ) String sourceFile = javaClass.getSourceFileName();
SignatureUtil.java,String param = typeToSignature(tok.nextToken());,if (typeToSignature(tok != null ) String param = typeToSignature(tok.nextToken());
SignatureUtil.java,pString = buf.toString();,if (buf != null ) pString = buf.toString();
SlowInputStream.java,private long started = System.currentTimeMillis();,if (System != null ) private long started = System.currentTimeMillis();
MarkerUtil.java,FieldAnnotation primaryField = bug.getPrimaryField();,if (bug != null ) FieldAnnotation primaryField = bug.getPrimaryField();
MarkerUtil.java,startLine = primaryField.getSourceLines().getStartLine();,if (primaryField != null ) startLine = primaryField.getSourceLines().getStartLine();
MarkerUtil.java,packageAnnotation = bug.getPrimaryClass();,if (bug != null ) packageAnnotation = bug.getPrimaryClass();
MarkerUtil.java,packageName = packageAnnotation.getPackageName();,if (packageAnnotation != null ) packageName = packageAnnotation.getPackageName();
MarkerUtil.java,qualifiedClassName = packageAnnotation.getClassName();,if (packageAnnotation != null ) qualifiedClassName = packageAnnotation.getClassName();
MarkerUtil.java,packageName = primarySourceLineAnnotation.getPackageName();,if (primarySourceLineAnnotation != null ) packageName = primarySourceLineAnnotation.getPackageName();
MarkerUtil.java,qualifiedClassName = primarySourceLineAnnotation.getClassName();,if (primarySourceLineAnnotation != null ) qualifiedClassName = primarySourceLineAnnotation.getClassName();
MarkerUtil.java,startLine = primarySourceLineAnnotation.getStartLine();,if (primarySourceLineAnnotation != null ) startLine = primarySourceLineAnnotation.getStartLine();
MarkerUtil.java,FieldAnnotation field = bug.getPrimaryField();,if (bug != null ) FieldAnnotation field = bug.getPrimaryField();
MarkerUtil.java,String elemName = parentType.getElementName();,if (parentType != null ) String elemName = parentType.getElementName();
CheckExpectedWarnings.java,ClassAnnotation clazz = warning.getPrimaryClass();,if (warning != null ) ClassAnnotation clazz = warning.getPrimaryClass();
CheckExpectedWarnings.java,ClassDescriptor classDesc = clazz.getClassDescriptor();,if (clazz != null ) ClassDescriptor classDesc = clazz.getClassDescriptor();
FuzzyBugComparator.java,String lhsCode = getCode(lhs.getType());,if (getCode(lhs != null ) String lhsCode = getCode(lhs.getType());
FuzzyBugComparator.java,String rhsCode = getCode(rhs.getType());,if (getCode(rhs != null ) String rhsCode = getCode(rhs.getType());
SloppyBugComparator.java,lhsAbbrev = getAbbrevFromBugType(lhs.getType());,if (getAbbrevFromBugType(lhs != null ) lhsAbbrev = getAbbrevFromBugType(lhs.getType());
SloppyBugComparator.java,rhsAbbrev = getAbbrevFromBugType(rhs.getType());,if (getAbbrevFromBugType(rhs != null ) rhsAbbrev = getAbbrevFromBugType(rhs.getType());
SloppyBugComparator.java,lhsAbbrev = lhsPattern.getAbbrev();,if (lhsPattern != null ) lhsAbbrev = lhsPattern.getAbbrev();
SloppyBugComparator.java,rhsAbbrev = rhsPattern.getAbbrev();,if (rhsPattern != null ) rhsAbbrev = rhsPattern.getAbbrev();
VersionInsensitiveBugComparator.java,String lhsCode = getCode(lhs.getType());,if (getCode(lhs != null ) String lhsCode = getCode(lhs.getType());
VersionInsensitiveBugComparator.java,String rhsCode = getCode(rhs.getType());,if (getCode(rhs != null ) String rhsCode = getCode(rhs.getType());
ClassParser.java,data[i] = new Float(in.readFloat());,if (Float(in != null ) data[i] = new Float(in.readFloat());
ClassParser.java,data[i] = new Double(in.readDouble());,if (Double(in != null ) data[i] = new Double(in.readDouble());
FindDeadLocalStores.java,prevOpCode = prev.getInstruction().getOpcode();,if (prev != null ) prevOpCode = prev.getInstruction().getOpcode();
RegenerateClassFeatures.java,ZipEntry entry = entries.nextElement();,if (entries != null ) ZipEntry entry = entries.nextElement();
RegenerateClassFeatures.java,JavaClass javaClass = parser.parse();,if (parser != null ) JavaClass javaClass = parser.parse();
PrintClass.java,String name = ze.getName();,if (ze != null ) String name = ze.getName();
CountClassVersions.java,String name = ze.getName();,if (ze != null ) String name = ze.getName();
CheckClassfileVersion.java,String name = ze.getName();,if (ze != null ) String name = ze.getName();
CheckClassfileVersion.java,int magic = zipIn.readInt();,if (zipIn != null ) int magic = zipIn.readInt();
CheckClassfileVersion.java,int minorVersion = zipIn.readUnsignedShort();,if (zipIn != null ) int minorVersion = zipIn.readUnsignedShort();
CheckClassfileVersion.java,int majorVersion = zipIn.readUnsignedShort();,if (zipIn != null ) int majorVersion = zipIn.readUnsignedShort();
JUnitJarRunner.java,Enumeration<JarEntry> e = jarFile.entries();,if (jarFile != null ) Enumeration<JarEntry> e = jarFile.entries();
JUnitJarRunner.java,String entryName = entry.getName();,if (entry != null ) String entryName = entry.getName();
FindBugs2.java,classFactory = ClassFactory.instance();,if (ClassFactory != null ) classFactory = ClassFactory.instance();
FindBugs2.java,String className = bugInstance.getPrimaryClass().getClassName();,if (bugInstance != null ) String className = bugInstance.getPrimaryClass().getClassName();
FindBugs2.java,SuppressionMatcher m = AnalysisContext.currentAnalysisContext().getSuppressionMatcher();,if (AnalysisContext != null ) SuppressionMatcher m = AnalysisContext.currentAnalysisContext().getSuppressionMatcher();
AnalysisContext.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
MainFrame.java,String pluginMsg = cloud.getStatusMsg();,if (cloud != null ) String pluginMsg = cloud.getStatusMsg();
JavaSourceDocument.java,root = doc.getDefaultRootElement();,if (doc != null ) root = doc.getDefaultRootElement();
DumbMethods.java,Code code = method.getCode();,if (method != null ) Code code = method.getCode();
DumbMethods.java,this.exceptionTable = code.getExceptionTable();,if (code != null ) this.exceptionTable = code.getExceptionTable();
DumbMethods.java,Object o = item.getConstant();,if (item != null ) Object o = item.getConstant();
DumbMethods.java,Object secondConstant = secondArgument.getConstant();,if (secondArgument != null ) Object secondConstant = secondArgument.getConstant();
PDEClassPathGenerator.java,IPath path = iClasspathEntry.getPath();,if (iClasspathEntry != null ) IPath path = iClasspathEntry.getPath();
FindNullDeref.java,ConstantPool constantPool = classContext.getJavaClass().getConstantPool();,if (classContext != null ) ConstantPool constantPool = classContext.getJavaClass().getConstantPool();
FindNullDeref.java,Code code = method.getCode();,if (method != null ) Code code = method.getCode();
CheckExpectedWarnings.java,Iterator<AnalysisPass> i = executionPlan.passIterator();,if (executionPlan != null ) Iterator<AnalysisPass> i = executionPlan.passIterator();
CheckExpectedWarnings.java,Iterator<DetectorFactory> j = pass.iterator();,if (pass != null ) Iterator<DetectorFactory> j = pass.iterator();
CheckExpectedWarnings.java,Collection<BugPattern> reportedPatterns = factory.getReportedBugPatterns();,if (factory != null ) Collection<BugPattern> reportedPatterns = factory.getReportedBugPatterns();
Filter.java,XMLReader xr = XMLReaderFactory.createXMLReader();,if (XMLReaderFactory != null ) XMLReader xr = XMLReaderFactory.createXMLReader();
Filter.java,Element child = (Element) j.next();,if (j != null ) Element child = (Element) j.next();
Filter.java,String name = element.getName();,if (element != null ) String name = element.getName();
Filter.java,String pName = nameAttr.getValue();,if (nameAttr != null ) String pName = nameAttr.getValue();
Filter.java,nameValue = nameAttr.getValue();,if (nameAttr != null ) nameValue = nameAttr.getValue();
Filter.java,nameValue = nameAttr.getValue();,if (nameAttr != null ) nameValue = nameAttr.getValue();
BooleanReturnNull.java,AnalysisContext analysisContext = AnalysisContext.currentAnalysisContext();,if (AnalysisContext != null ) AnalysisContext analysisContext = AnalysisContext.currentAnalysisContext();
BooleanReturnNull.java,INullnessAnnotationDatabase nullnessAnnotationDatabase = analysisContext.getNullnessAnnotationDatabase();,if (analysisContext != null ) INullnessAnnotationDatabase nullnessAnnotationDatabase = analysisContext.getNullnessAnnotationDatabase();
LoadOfKnownNullValue.java,Instruction next = handle.getNext().getInstruction();,if (handle != null ) Instruction next = handle.getNext().getInstruction();
OpcodeStack.java,String methodName = dbc.getNameConstantOperand();,if (dbc != null ) String methodName = dbc.getNameConstantOperand();
PDEClassPathGenerator.java,IClasspathEntry[] classpathEntries = classpathContainer.getClasspathEntries();,if (classpathContainer != null ) IClasspathEntry[] classpathEntries = classpathContainer.getClasspathEntries();
PDEClassPathGenerator.java,IPath path = iClasspathEntry.getPath();,if (iClasspathEntry != null ) IPath path = iClasspathEntry.getPath();
DefinitelyNullSet.java,int flags = nullnessValue.getFlags();,if (nullnessValue != null ) int flags = nullnessValue.getFlags();
DefinitelyNullSet.java,int start = getStartIndex(valueNumber.getNumber());,if (getStartIndex(valueNumber != null ) int start = getStartIndex(valueNumber.getNumber());
DefinitelyNullSetAnalysis.java,short opcode = handle.getInstruction().getOpcode();,if (handle != null ) short opcode = handle.getInstruction().getOpcode();
DefinitelyNullSetAnalysis.java,Condition condition = getCondition(edge.getSource());,if (getCondition(edge != null ) Condition condition = getCondition(edge.getSource());
DefinitelyNullSetAnalysis.java,ValueNumber valueNumber = vnaFrame.getTopValue();,if (vnaFrame != null ) ValueNumber valueNumber = vnaFrame.getTopValue();
IfNullCondition.java,valueNumber = vnaFrame.getTopValue();,if (vnaFrame != null ) valueNumber = vnaFrame.getTopValue();
IfNullCondition.java,NullnessValue definitelyNull = NullnessValue.definitelyNullValue().toCheckedValue();,if (NullnessValue != null ) NullnessValue definitelyNull = NullnessValue.definitelyNullValue().toCheckedValue();
IfNullCondition.java,NullnessValue definitelyNotNull = NullnessValue.definitelyNotNullValue().toCheckedValue();,if (NullnessValue != null ) NullnessValue definitelyNotNull = NullnessValue.definitelyNotNullValue().toCheckedValue();
TestNullnessValue.java,definitelyNull = NullnessValue.definitelyNullValue();,if (NullnessValue != null ) definitelyNull = NullnessValue.definitelyNullValue();
AboutDialog.java,String text = buf.toString();,if (buf != null ) String text = buf.toString();
AboutDialog.java,aboutTabPane = new javax.swing.JTabbedPane();,if (javax != null ) aboutTabPane = new javax.swing.JTabbedPane();
AboutDialog.java,aboutScrollPane = new javax.swing.JScrollPane();,if (javax != null ) aboutScrollPane = new javax.swing.JScrollPane();
AboutDialog.java,aboutEditorPane = new javax.swing.JEditorPane();,if (javax != null ) aboutEditorPane = new javax.swing.JEditorPane();
AboutDialog.java,licenseScrollPane = new javax.swing.JScrollPane();,if (javax != null ) licenseScrollPane = new javax.swing.JScrollPane();
AboutDialog.java,licenseEditorPane = new javax.swing.JEditorPane();,if (javax != null ) licenseEditorPane = new javax.swing.JEditorPane();
AboutDialog.java,acknowledgmentsScrollPane = new javax.swing.JScrollPane();,if (javax != null ) acknowledgmentsScrollPane = new javax.swing.JScrollPane();
AboutDialog.java,acknowldgementsEditorPane = new javax.swing.JEditorPane();,if (javax != null ) acknowldgementsEditorPane = new javax.swing.JEditorPane();
AboutDialog.java,okButton = new javax.swing.JButton();,if (javax != null ) okButton = new javax.swing.JButton();
AboutDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
AboutDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
AboutDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
AboutDialog.java,URL url = evt.getURL();,if (evt != null ) URL url = evt.getURL();
AnalysisErrorDialog.java,errorLabel = new javax.swing.JLabel();,if (javax != null ) errorLabel = new javax.swing.JLabel();
AnalysisErrorDialog.java,errorMessageScrollPane = new javax.swing.JScrollPane();,if (javax != null ) errorMessageScrollPane = new javax.swing.JScrollPane();
AnalysisErrorDialog.java,errorMessageTextArea = new javax.swing.JTextPane();,if (javax != null ) errorMessageTextArea = new javax.swing.JTextPane();
AnalysisErrorDialog.java,leftSpacer = new javax.swing.JLabel();,if (javax != null ) leftSpacer = new javax.swing.JLabel();
AnalysisErrorDialog.java,rightSpacer = new javax.swing.JLabel();,if (javax != null ) rightSpacer = new javax.swing.JLabel();
AnalysisErrorDialog.java,okButton = new javax.swing.JButton();,if (javax != null ) okButton = new javax.swing.JButton();
AnalysisErrorDialog.java,analysisMenuBar = new javax.swing.JMenuBar();,if (javax != null ) analysisMenuBar = new javax.swing.JMenuBar();
AnalysisErrorDialog.java,editMenu = new javax.swing.JMenu();,if (javax != null ) editMenu = new javax.swing.JMenu();
AnalysisErrorDialog.java,selectAllMenuItem = new javax.swing.JMenuItem();,if (javax != null ) selectAllMenuItem = new javax.swing.JMenuItem();
AnalysisErrorDialog.java,copyMenuItem = new javax.swing.JMenuItem();,if (javax != null ) copyMenuItem = new javax.swing.JMenuItem();
AnalysisErrorDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
AnalysisErrorDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
AnalysisErrorDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
AnalysisErrorDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
AnalysisErrorDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
AnalysisErrorDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
AnalysisRun.java,this.logger = frame.getLogger();,if (frame != null ) this.logger = frame.getLogger();
AnalysisRun.java,summary = html.toString();,if (html != null ) summary = html.toString();
AnalysisRun.java,summary = reporter.getBugCollection().getSummaryHTML();,if (reporter != null ) summary = reporter.getBugCollection().getSummaryHTML();
AnalysisRun.java,summary = reporter.getBugCollection().getSummaryHTML();,if (reporter != null ) summary = reporter.getBugCollection().getSummaryHTML();
BugCellRenderer.java,ClassLoader classLoader = this.getClass().getClassLoader();,if (this != null ) ClassLoader classLoader = this.getClass().getClassLoader();
BugCellRenderer.java,Object obj = node.getUserObject();,if (node != null ) Object obj = node.getUserObject();
BugCellRenderer.java,String groupType = groupNode.getGroupType();,if (groupNode != null ) String groupType = groupNode.getGroupType();
ConfigureDetectorsDialog.java,detectorTableScrollPane = new javax.swing.JScrollPane();,if (javax != null ) detectorTableScrollPane = new javax.swing.JScrollPane();
ConfigureDetectorsDialog.java,detectorTable = new javax.swing.JTable();,if (javax != null ) detectorTable = new javax.swing.JTable();
ConfigureDetectorsDialog.java,detectorDescriptionScrollPane = new javax.swing.JScrollPane();,if (javax != null ) detectorDescriptionScrollPane = new javax.swing.JScrollPane();
ConfigureDetectorsDialog.java,detectorDescription = new javax.swing.JEditorPane();,if (javax != null ) detectorDescription = new javax.swing.JEditorPane();
ConfigureDetectorsDialog.java,okButton = new javax.swing.JButton();,if (javax != null ) okButton = new javax.swing.JButton();
ConfigureDetectorsDialog.java,cancelButton = new javax.swing.JButton();,if (javax != null ) cancelButton = new javax.swing.JButton();
ConfigureDetectorsDialog.java,spacer = new javax.swing.JLabel();,if (javax != null ) spacer = new javax.swing.JLabel();
ConfigureDetectorsDialog.java,restoreDefaultsButton = new javax.swing.JButton();,if (javax != null ) restoreDefaultsButton = new javax.swing.JButton();
ConfigureDetectorsDialog.java,DefaultTableModel m = (DefaultTableModel)detectorTable.getModel();,if ((DefaultTableModel)detectorTable != null ) DefaultTableModel m = (DefaultTableModel)detectorTable.getModel();
ConfigureDetectorsDialog.java,"DefaultSortedTableModel sortedModel = new DefaultSortedTableModel(m, detectorTable.getTableHeader());","if (detectorTable != null ) DefaultSortedTableModel sortedModel = new DefaultSortedTableModel(m, detectorTable.getTableHeader());"
ConfigureDetectorsDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
ConfigureDetectorsDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
ConfigureDetectorsDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
ConfigureDetectorsDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
ConfigureDetectorsDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
ConfigureDetectorsDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
ConfigureDetectorsDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
ConfigureDetectorsDialog.java,Iterator<DetectorFactory> i = DetectorFactoryCollection.instance().factoryIterator();,if (DetectorFactoryCollection != null ) Iterator<DetectorFactory> i = DetectorFactoryCollection.instance().factoryIterator();
ConfigureDetectorsDialog.java,DefaultSortedTableModel sorter = (DefaultSortedTableModel) detectorTable.getModel();,if (detectorTable != null ) DefaultSortedTableModel sorter = (DefaultSortedTableModel) detectorTable.getModel();
ConfigureDetectorsDialog.java,TableModel model = sorter.getBaseTableModel();,if (sorter != null ) TableModel model = sorter.getBaseTableModel();
ConfigureDetectorsDialog.java,int num = factoryList.size();,if (factoryList != null ) int num = factoryList.size();
ConfigureDetectorsDialog.java,DefaultSortedTableModel sorter = (DefaultSortedTableModel) detectorTable.getModel();,if (detectorTable != null ) DefaultSortedTableModel sorter = (DefaultSortedTableModel) detectorTable.getModel();
ConfigureDetectorsDialog.java,TableModel model = sorter.getBaseTableModel();,if (sorter != null ) TableModel model = sorter.getBaseTableModel();
ConfigureDetectorsDialog.java,ListSelectionModel rowSM = detectorTable.getSelectionModel();,if (detectorTable != null ) ListSelectionModel rowSM = detectorTable.getSelectionModel();
ConfigureDetectorsDialog.java,ListSelectionModel lsm = (ListSelectionModel) e.getSource();,if (e != null ) ListSelectionModel lsm = (ListSelectionModel) e.getSource();
ConfigureDetectorsDialog.java,int selectedRow = lsm.getMinSelectionIndex();,if (lsm != null ) int selectedRow = lsm.getMinSelectionIndex();
ConfigureDetectorsDialog.java,DefaultSortedTableModel sorter = (DefaultSortedTableModel) detectorTable.getModel();,if (detectorTable != null ) DefaultSortedTableModel sorter = (DefaultSortedTableModel) detectorTable.getModel();
ConfigureDetectorsDialog.java,String detailHTML = factory.getDetailHTML();,if (factory != null ) String detailHTML = factory.getDetailHTML();
ConfigureDetectorsDialog.java,Collection<BugPattern> patterns = factory.getReportedBugPatterns();,if (factory != null ) Collection<BugPattern> patterns = factory.getReportedBugPatterns();
ConfigureDetectorsDialog.java,Iterator<DetectorFactory> i = DetectorFactoryCollection.instance().factoryIterator();,if (DetectorFactoryCollection != null ) Iterator<DetectorFactory> i = DetectorFactoryCollection.instance().factoryIterator();
ConfigureDetectorsDialog.java,DefaultTableModel model = (DefaultTableModel) detectorTable.getModel();,if (detectorTable != null ) DefaultTableModel model = (DefaultTableModel) detectorTable.getModel();
DefaultSortedTableModel.java,final TableCellRenderer baseRenderer = baseHeader.getDefaultRenderer();,if (baseHeader != null ) final TableCellRenderer baseRenderer = baseHeader.getDefaultRenderer();
DefaultSortedTableModel.java,ClassLoader classLoader = this.getClass().getClassLoader();,if (this != null ) ClassLoader classLoader = this.getClass().getClassLoader();
DefaultSortedTableModel.java,int numRows = baseModel.getRowCount();,if (baseModel != null ) int numRows = baseModel.getRowCount();
DefaultSortedTableModel.java,JTableHeader header = (JTableHeader)e.getSource();,if ((JTableHeader)e != null ) JTableHeader header = (JTableHeader)e.getSource();
DefaultSortedTableModel.java,int column = header.columnAtPoint(e.getPoint());,if (header != null ) int column = header.columnAtPoint(e.getPoint());
FindBugsFrame.java,String lhsString = lhs.toString();,if (lhs != null ) String lhsString = lhs.toString();
FindBugsFrame.java,String rhsString = rhs.toString();,if (rhs != null ) String rhsString = rhs.toString();
FindBugsFrame.java,BugPattern bugPattern = warning.getBugPattern();,if (warning != null ) BugPattern bugPattern = warning.getBugPattern();
FindBugsFrame.java,String fileName = file.getName();,if (file != null ) String fileName = file.getName();
FindBugsFrame.java,UserPreferences prefs = UserPreferences.getUserPreferences();,if (UserPreferences != null ) UserPreferences prefs = UserPreferences.getUserPreferences();
FindBugsFrame.java,priorityButtonGroup = new javax.swing.ButtonGroup();,if (javax != null ) priorityButtonGroup = new javax.swing.ButtonGroup();
FindBugsFrame.java,effortButtonGroup = new javax.swing.ButtonGroup();,if (javax != null ) effortButtonGroup = new javax.swing.ButtonGroup();
FindBugsFrame.java,viewPanel = new javax.swing.JPanel();,if (javax != null ) viewPanel = new javax.swing.JPanel();
FindBugsFrame.java,emptyPanel = new javax.swing.JPanel();,if (javax != null ) emptyPanel = new javax.swing.JPanel();
FindBugsFrame.java,reportPanel = new javax.swing.JPanel();,if (javax != null ) reportPanel = new javax.swing.JPanel();
FindBugsFrame.java,editProjectPanel = new javax.swing.JPanel();,if (javax != null ) editProjectPanel = new javax.swing.JPanel();
FindBugsFrame.java,jarFileLabel = new javax.swing.JLabel();,if (javax != null ) jarFileLabel = new javax.swing.JLabel();
FindBugsFrame.java,jarNameTextField = new javax.swing.JTextField();,if (javax != null ) jarNameTextField = new javax.swing.JTextField();
FindBugsFrame.java,addJarButton = new javax.swing.JButton();,if (javax != null ) addJarButton = new javax.swing.JButton();
FindBugsFrame.java,jarFileListLabel = new javax.swing.JLabel();,if (javax != null ) jarFileListLabel = new javax.swing.JLabel();
FindBugsFrame.java,sourceDirLabel = new javax.swing.JLabel();,if (javax != null ) sourceDirLabel = new javax.swing.JLabel();
FindBugsFrame.java,srcDirTextField = new javax.swing.JTextField();,if (javax != null ) srcDirTextField = new javax.swing.JTextField();
FindBugsFrame.java,addSourceDirButton = new javax.swing.JButton();,if (javax != null ) addSourceDirButton = new javax.swing.JButton();
FindBugsFrame.java,sourceDirListLabel = new javax.swing.JLabel();,if (javax != null ) sourceDirListLabel = new javax.swing.JLabel();
FindBugsFrame.java,removeJarButton = new javax.swing.JButton();,if (javax != null ) removeJarButton = new javax.swing.JButton();
FindBugsFrame.java,removeSrcDirButton = new javax.swing.JButton();,if (javax != null ) removeSrcDirButton = new javax.swing.JButton();
FindBugsFrame.java,browseJarButton = new javax.swing.JButton();,if (javax != null ) browseJarButton = new javax.swing.JButton();
FindBugsFrame.java,browseSrcDirButton = new javax.swing.JButton();,if (javax != null ) browseSrcDirButton = new javax.swing.JButton();
FindBugsFrame.java,editProjectLabel = new javax.swing.JLabel();,if (javax != null ) editProjectLabel = new javax.swing.JLabel();
FindBugsFrame.java,findBugsButton = new javax.swing.JButton();,if (javax != null ) findBugsButton = new javax.swing.JButton();
FindBugsFrame.java,jarFileListScrollPane = new javax.swing.JScrollPane();,if (javax != null ) jarFileListScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,jarFileList = new javax.swing.JList();,if (javax != null ) jarFileList = new javax.swing.JList();
FindBugsFrame.java,sourceDirListScrollPane = new javax.swing.JScrollPane();,if (javax != null ) sourceDirListScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,sourceDirList = new javax.swing.JList();,if (javax != null ) sourceDirList = new javax.swing.JList();
FindBugsFrame.java,classpathEntryLabel = new javax.swing.JLabel();,if (javax != null ) classpathEntryLabel = new javax.swing.JLabel();
FindBugsFrame.java,classpathEntryListLabel = new javax.swing.JLabel();,if (javax != null ) classpathEntryListLabel = new javax.swing.JLabel();
FindBugsFrame.java,classpathEntryTextField = new javax.swing.JTextField();,if (javax != null ) classpathEntryTextField = new javax.swing.JTextField();
FindBugsFrame.java,browseClasspathEntryButton = new javax.swing.JButton();,if (javax != null ) browseClasspathEntryButton = new javax.swing.JButton();
FindBugsFrame.java,addClasspathEntryButton = new javax.swing.JButton();,if (javax != null ) addClasspathEntryButton = new javax.swing.JButton();
FindBugsFrame.java,removeClasspathEntryButton = new javax.swing.JButton();,if (javax != null ) removeClasspathEntryButton = new javax.swing.JButton();
FindBugsFrame.java,classpathEntryListScrollPane = new javax.swing.JScrollPane();,if (javax != null ) classpathEntryListScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,classpathEntryList = new javax.swing.JList();,if (javax != null ) classpathEntryList = new javax.swing.JList();
FindBugsFrame.java,sourceUpButton = new javax.swing.JButton();,if (javax != null ) sourceUpButton = new javax.swing.JButton();
FindBugsFrame.java,sourceDownButton = new javax.swing.JButton();,if (javax != null ) sourceDownButton = new javax.swing.JButton();
FindBugsFrame.java,classpathUpButton = new javax.swing.JButton();,if (javax != null ) classpathUpButton = new javax.swing.JButton();
FindBugsFrame.java,classpathDownButton = new javax.swing.JButton();,if (javax != null ) classpathDownButton = new javax.swing.JButton();
FindBugsFrame.java,bugTreePanel = new javax.swing.JPanel();,if (javax != null ) bugTreePanel = new javax.swing.JPanel();
FindBugsFrame.java,bugTreeBugDetailsSplitter = new javax.swing.JSplitPane();,if (javax != null ) bugTreeBugDetailsSplitter = new javax.swing.JSplitPane();
FindBugsFrame.java,groupByTabbedPane = new javax.swing.JTabbedPane();,if (javax != null ) groupByTabbedPane = new javax.swing.JTabbedPane();
FindBugsFrame.java,byClassScrollPane = new javax.swing.JScrollPane();,if (javax != null ) byClassScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,byClassBugTree = new javax.swing.JTree();,if (javax != null ) byClassBugTree = new javax.swing.JTree();
FindBugsFrame.java,byPackageScrollPane = new javax.swing.JScrollPane();,if (javax != null ) byPackageScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,byPackageBugTree = new javax.swing.JTree();,if (javax != null ) byPackageBugTree = new javax.swing.JTree();
FindBugsFrame.java,byBugTypeScrollPane = new javax.swing.JScrollPane();,if (javax != null ) byBugTypeScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,byBugTypeBugTree = new javax.swing.JTree();,if (javax != null ) byBugTypeBugTree = new javax.swing.JTree();
FindBugsFrame.java,byBugCategoryScrollPane = new javax.swing.JScrollPane();,if (javax != null ) byBugCategoryScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,byBugCategoryBugTree = new javax.swing.JTree();,if (javax != null ) byBugCategoryBugTree = new javax.swing.JTree();
FindBugsFrame.java,bySummary = new javax.swing.JScrollPane();,if (javax != null ) bySummary = new javax.swing.JScrollPane();
FindBugsFrame.java,bugSummaryEditorPane = new javax.swing.JEditorPane();,if (javax != null ) bugSummaryEditorPane = new javax.swing.JEditorPane();
FindBugsFrame.java,bugDetailsTabbedPane = new javax.swing.JTabbedPane();,if (javax != null ) bugDetailsTabbedPane = new javax.swing.JTabbedPane();
FindBugsFrame.java,bugDescriptionScrollPane = new javax.swing.JScrollPane();,if (javax != null ) bugDescriptionScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,bugDescriptionEditorPane = new javax.swing.JEditorPane();,if (javax != null ) bugDescriptionEditorPane = new javax.swing.JEditorPane();
FindBugsFrame.java,sourceTextAreaScrollPane = new javax.swing.JScrollPane();,if (javax != null ) sourceTextAreaScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,sourceTextArea = new javax.swing.JTextArea();,if (javax != null ) sourceTextArea = new javax.swing.JTextArea();
FindBugsFrame.java,annotationTextAreaScrollPane = new javax.swing.JScrollPane();,if (javax != null ) annotationTextAreaScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,annotationTextArea = new javax.swing.JTextArea();,if (javax != null ) annotationTextArea = new javax.swing.JTextArea();
FindBugsFrame.java,urlLabel = new javax.swing.JLabel();,if (javax != null ) urlLabel = new javax.swing.JLabel();
FindBugsFrame.java,logoLabel = new javax.swing.JLabel();,if (javax != null ) logoLabel = new javax.swing.JLabel();
FindBugsFrame.java,growBoxSpacer = new javax.swing.JLabel();,if (javax != null ) growBoxSpacer = new javax.swing.JLabel();
FindBugsFrame.java,theMenuBar = new javax.swing.JMenuBar();,if (javax != null ) theMenuBar = new javax.swing.JMenuBar();
FindBugsFrame.java,fileMenu = new javax.swing.JMenu();,if (javax != null ) fileMenu = new javax.swing.JMenu();
FindBugsFrame.java,newProjectItem = new javax.swing.JMenuItem();,if (javax != null ) newProjectItem = new javax.swing.JMenuItem();
FindBugsFrame.java,openProjectItem = new javax.swing.JMenuItem();,if (javax != null ) openProjectItem = new javax.swing.JMenuItem();
FindBugsFrame.java,recentProjectsMenu = new javax.swing.JMenu();,if (javax != null ) recentProjectsMenu = new javax.swing.JMenu();
FindBugsFrame.java,closeProjectItem = new javax.swing.JMenuItem();,if (javax != null ) closeProjectItem = new javax.swing.JMenuItem();
FindBugsFrame.java,saveProjectItem = new javax.swing.JMenuItem();,if (javax != null ) saveProjectItem = new javax.swing.JMenuItem();
FindBugsFrame.java,saveProjectAsItem = new javax.swing.JMenuItem();,if (javax != null ) saveProjectAsItem = new javax.swing.JMenuItem();
FindBugsFrame.java,reloadProjectItem = new javax.swing.JMenuItem();,if (javax != null ) reloadProjectItem = new javax.swing.JMenuItem();
FindBugsFrame.java,loadBugsItem = new javax.swing.JMenuItem();,if (javax != null ) loadBugsItem = new javax.swing.JMenuItem();
FindBugsFrame.java,saveBugsItem = new javax.swing.JMenuItem();,if (javax != null ) saveBugsItem = new javax.swing.JMenuItem();
FindBugsFrame.java,exitItem = new javax.swing.JMenuItem();,if (javax != null ) exitItem = new javax.swing.JMenuItem();
FindBugsFrame.java,editMenu = new javax.swing.JMenu();,if (javax != null ) editMenu = new javax.swing.JMenu();
FindBugsFrame.java,cutItem = new javax.swing.JMenuItem();,if (javax != null ) cutItem = new javax.swing.JMenuItem();
FindBugsFrame.java,copyItem = new javax.swing.JMenuItem();,if (javax != null ) copyItem = new javax.swing.JMenuItem();
FindBugsFrame.java,pasteItem = new javax.swing.JMenuItem();,if (javax != null ) pasteItem = new javax.swing.JMenuItem();
FindBugsFrame.java,selectAllItem = new javax.swing.JMenuItem();,if (javax != null ) selectAllItem = new javax.swing.JMenuItem();
FindBugsFrame.java,viewMenu = new javax.swing.JMenu();,if (javax != null ) viewMenu = new javax.swing.JMenu();
FindBugsFrame.java,viewBugDetailsItem = new javax.swing.JCheckBoxMenuItem();,if (javax != null ) viewBugDetailsItem = new javax.swing.JCheckBoxMenuItem();
FindBugsFrame.java,fullDescriptionsItem = new javax.swing.JCheckBoxMenuItem();,if (javax != null ) fullDescriptionsItem = new javax.swing.JCheckBoxMenuItem();
FindBugsFrame.java,filterWarningsMenu = new javax.swing.JMenu();,if (javax != null ) filterWarningsMenu = new javax.swing.JMenu();
FindBugsFrame.java,expPriorityButton = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) expPriorityButton = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,lowPriorityButton = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) lowPriorityButton = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,mediumPriorityButton = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) mediumPriorityButton = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,highPriorityButton = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) highPriorityButton = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,viewProjectItem = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) viewProjectItem = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,viewBugsItem = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) viewBugsItem = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,settingsMenu = new javax.swing.JMenu();,if (javax != null ) settingsMenu = new javax.swing.JMenu();
FindBugsFrame.java,configureDetectorsItem = new javax.swing.JMenuItem();,if (javax != null ) configureDetectorsItem = new javax.swing.JMenuItem();
FindBugsFrame.java,effortMenu = new javax.swing.JMenu();,if (javax != null ) effortMenu = new javax.swing.JMenu();
FindBugsFrame.java,minEffortItem = new javax.swing.JCheckBoxMenuItem();,if (javax != null ) minEffortItem = new javax.swing.JCheckBoxMenuItem();
FindBugsFrame.java,normalEffortItem = new javax.swing.JCheckBoxMenuItem();,if (javax != null ) normalEffortItem = new javax.swing.JCheckBoxMenuItem();
FindBugsFrame.java,maxEffortItem = new javax.swing.JCheckBoxMenuItem();,if (javax != null ) maxEffortItem = new javax.swing.JCheckBoxMenuItem();
FindBugsFrame.java,helpMenu = new javax.swing.JMenu();,if (javax != null ) helpMenu = new javax.swing.JMenu();
FindBugsFrame.java,aboutItem = new javax.swing.JMenuItem();,if (javax != null ) aboutItem = new javax.swing.JMenuItem();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,int[] indices = list.getSelectedIndices();,if (list != null ) int[] indices = list.getSelectedIndices();
FindBugsFrame.java,ListModel m = list.getModel();,if (list != null ) ListModel m = list.getModel();
FindBugsFrame.java,Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();,if (Toolkit != null ) Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();
FindBugsFrame.java,Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();,if (Toolkit != null ) Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();
FindBugsFrame.java,Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();,if (Toolkit != null ) Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();
FindBugsFrame.java,Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();,if (Toolkit != null ) Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();
FindBugsFrame.java,Component old = evt.getOppositeComponent();,if (evt != null ) Component old = evt.getOppositeComponent();
FindBugsFrame.java,selectedComponent = evt.getComponent();,if (evt != null ) selectedComponent = evt.getComponent();
FindBugsFrame.java,File selectedFile = chooser.getSelectedFile();,if (chooser != null ) File selectedFile = chooser.getSelectedFile();
FindBugsFrame.java,InputStream in = url.openStream();,if (url != null ) InputStream in = url.openStream();
FindBugsFrame.java,String filename = current.getProjectFileName();,if (current != null ) String filename = current.getProjectFileName();
FindBugsFrame.java,DefaultListModel listModel = (DefaultListModel) classpathEntryList.getModel();,if (classpathEntryList != null ) DefaultListModel listModel = (DefaultListModel) classpathEntryList.getModel();
FindBugsFrame.java,int[] selIndices = classpathEntryList.getSelectedIndices();,if (classpathEntryList != null ) int[] selIndices = classpathEntryList.getSelectedIndices();
FindBugsFrame.java,File[] selectedFileList = chooser.getSelectedFiles();,if (chooser != null ) File[] selectedFileList = chooser.getSelectedFiles();
FindBugsFrame.java,String entry = selectedFileList[i].getPath();,if (selectedFileList[i] != null ) String entry = selectedFileList[i].getPath();
FindBugsFrame.java,DefaultTreeModel bugTreeModel = (DefaultTreeModel) bugTree.getModel();,if (bugTree != null ) DefaultTreeModel bugTreeModel = (DefaultTreeModel) bugTree.getModel();
FindBugsFrame.java,int numRows = bugTree.getRowCount();,if (bugTree != null ) int numRows = bugTree.getRowCount();
FindBugsFrame.java,DefaultMutableTreeNode node = (DefaultMutableTreeNode) path.getLastPathComponent();,if (path != null ) DefaultMutableTreeNode node = (DefaultMutableTreeNode) path.getLastPathComponent();
FindBugsFrame.java,String propertyName = evt.getPropertyName();,if (evt != null ) String propertyName = evt.getPropertyName();
FindBugsFrame.java,File file = chooser.getSelectedFile();,if (chooser != null ) File file = chooser.getSelectedFile();
FindBugsFrame.java,Exception e = dialog.getException();,if (dialog != null ) Exception e = dialog.getException();
FindBugsFrame.java,File[] selectedFileList = chooser.getSelectedFiles();,if (chooser != null ) File[] selectedFileList = chooser.getSelectedFiles();
FindBugsFrame.java,String entry = selectedFileList[i].getPath();,if (selectedFileList[i] != null ) String entry = selectedFileList[i].getPath();
FindBugsFrame.java,File[] selectedFileList = chooser.getSelectedFiles();,if (chooser != null ) File[] selectedFileList = chooser.getSelectedFiles();
FindBugsFrame.java,String entry = selectedFileList[i].getPath();,if (selectedFileList[i] != null ) String entry = selectedFileList[i].getPath();
FindBugsFrame.java,DefaultListModel listModel = (DefaultListModel) sourceDirList.getModel();,if (sourceDirList != null ) DefaultListModel listModel = (DefaultListModel) sourceDirList.getModel();
FindBugsFrame.java,int[] selIndices = sourceDirList.getSelectedIndices();,if (sourceDirList != null ) int[] selIndices = sourceDirList.getSelectedIndices();
FindBugsFrame.java,DefaultListModel listModel = (DefaultListModel) jarFileList.getModel();,if (jarFileList != null ) DefaultListModel listModel = (DefaultListModel) jarFileList.getModel();
FindBugsFrame.java,int[] selIndices = jarFileList.getSelectedIndices();,if (jarFileList != null ) int[] selIndices = jarFileList.getSelectedIndices();
FindBugsFrame.java,d = comp.getPreferredSize();,if (comp != null ) d = comp.getPreferredSize();
FindBugsFrame.java,JMenuItem recentProjectItem = (JMenuItem) evt.getSource();,if (evt != null ) JMenuItem recentProjectItem = (JMenuItem) evt.getSource();
FindBugsFrame.java,File file = new File(recentProjectItem.getText());,if (File(recentProjectItem != null ) File file = new File(recentProjectItem.getText());
FindBugsFrame.java,int[] selIndices = entryList.getSelectedIndices();,if (entryList != null ) int[] selIndices = entryList.getSelectedIndices();
FindBugsFrame.java,DefaultListModel model = (DefaultListModel) entryList.getModel();,if (entryList != null ) DefaultListModel model = (DefaultListModel) entryList.getModel();
FindBugsFrame.java,int[] selIndices = entryList.getSelectedIndices();,if (entryList != null ) int[] selIndices = entryList.getSelectedIndices();
FindBugsFrame.java,DefaultListModel model = (DefaultListModel) entryList.getModel();,if (entryList != null ) DefaultListModel model = (DefaultListModel) entryList.getModel();
FindBugsFrame.java,int lastInsertPos = model.getSize();,if (model != null ) int lastInsertPos = model.getSize();
FindBugsFrame.java,int numEntries = project.getNumAuxClasspathEntries();,if (project != null ) int numEntries = project.getNumAuxClasspathEntries();
FindBugsFrame.java,DefaultListModel model = (DefaultListModel) classpathEntryList.getModel();,if (classpathEntryList != null ) DefaultListModel model = (DefaultListModel) classpathEntryList.getModel();
FindBugsFrame.java,int numEntries = project.getNumSourceDirs();,if (project != null ) int numEntries = project.getNumSourceDirs();
FindBugsFrame.java,DefaultListModel model = (DefaultListModel) sourceDirList.getModel();,if (sourceDirList != null ) DefaultListModel model = (DefaultListModel) sourceDirList.getModel();
FindBugsFrame.java,viewPanelLayout = (CardLayout) viewPanel.getLayout();,if (viewPanel != null ) viewPanelLayout = (CardLayout) viewPanel.getLayout();
FindBugsFrame.java,Rectangle rect = extent.getBounds();,if (extent != null ) Rectangle rect = extent.getBounds();
FindBugsFrame.java,ClassLoader classLoader = this.getClass().getClassLoader();,if (this != null ) ClassLoader classLoader = this.getClass().getClassLoader();
FindBugsFrame.java,UserPreferences prefs = UserPreferences.getUserPreferences();,if (UserPreferences != null ) UserPreferences prefs = UserPreferences.getUserPreferences();
FindBugsFrame.java,TreePath selPath = tree.getSelectionPath();,if (tree != null ) TreePath selPath = tree.getSelectionPath();
FindBugsFrame.java,Object[] nodeList = selPath.getPath();,if (selPath != null ) Object[] nodeList = selPath.getPath();
FindBugsFrame.java,Object nodeInfo = node.getUserObject();,if (node != null ) Object nodeInfo = node.getUserObject();
FindBugsFrame.java,Integer location = (Integer) evt.getNewValue();,if (evt != null ) Integer location = (Integer) evt.getNewValue();
FindBugsFrame.java,int height = splitter.getHeight();,if (splitter != null ) int height = splitter.getHeight();
FindBugsFrame.java,JScrollPane selected = (JScrollPane) groupByTabbedPane.getSelectedComponent();,if (groupByTabbedPane != null ) JScrollPane selected = (JScrollPane) groupByTabbedPane.getSelectedComponent();
FindBugsFrame.java,Object view = selected.getViewport().getView();,if (selected != null ) Object view = selected.getViewport().getView();
FindBugsFrame.java,String fileName = project.getProjectFileName();,if (project != null ) String fileName = project.getProjectFileName();
FindBugsFrame.java,file = chooser.getSelectedFile();,if (chooser != null ) file = chooser.getSelectedFile();
FindBugsFrame.java,fileName = Project.transformFilename(file.getPath());,if (Project != null ) fileName = Project.transformFilename(file.getPath());
FindBugsFrame.java,useRelativePaths = relativePaths.isSelected();,if (relativePaths != null ) useRelativePaths = relativePaths.isSelected();
FindBugsFrame.java,UserPreferences prefs = UserPreferences.getUserPreferences();,if (UserPreferences != null ) UserPreferences prefs = UserPreferences.getUserPreferences();
FindBugsFrame.java,DefaultListModel jarListModel = (DefaultListModel) jarFileList.getModel();,if (jarFileList != null ) DefaultListModel jarListModel = (DefaultListModel) jarFileList.getModel();
FindBugsFrame.java,DefaultListModel srcDirListModel = (DefaultListModel) sourceDirList.getModel();,if (sourceDirList != null ) DefaultListModel srcDirListModel = (DefaultListModel) sourceDirList.getModel();
FindBugsFrame.java,DefaultListModel classpathEntryListModel = (DefaultListModel) classpathEntryList.getModel();,if (classpathEntryList != null ) DefaultListModel classpathEntryListModel = (DefaultListModel) classpathEntryList.getModel();
FindBugsFrame.java,Cursor orig = this.getCursor();,if (this != null ) Cursor orig = this.getCursor();
FindBugsFrame.java,final DefaultMutableTreeNode bugRootNode = (DefaultMutableTreeNode) bugTreeModel.getRoot();,if (bugTreeModel != null ) final DefaultMutableTreeNode bugRootNode = (DefaultMutableTreeNode) bugTreeModel.getRoot();
FindBugsFrame.java,groupName = member.getPrimaryClass().getClassName();,if (member != null ) groupName = member.getPrimaryClass().getClassName();
FindBugsFrame.java,groupName = member.getPrimaryClass().getPackageName();,if (member != null ) groupName = member.getPrimaryClass().getPackageName();
FindBugsFrame.java,String desc = member.toString();,if (member != null ) String desc = member.toString();
FindBugsFrame.java,BugPattern pattern = member.getBugPattern();,if (member != null ) BugPattern pattern = member.getBugPattern();
FindBugsFrame.java,int count = currentGroup.getMemberCount();,if (currentGroup != null ) int count = currentGroup.getMemberCount();
FindBugsFrame.java,Iterator<BugAnnotation> j = member.annotationIterator();,if (member != null ) Iterator<BugAnnotation> j = member.annotationIterator();
FindBugsFrame.java,String dirs = jarNameTextField.getText();,if (jarNameTextField != null ) String dirs = jarNameTextField.getText();
FindBugsFrame.java,DefaultListModel listModel = (DefaultListModel) sourceDirList.getModel();,if (sourceDirList != null ) DefaultListModel listModel = (DefaultListModel) sourceDirList.getModel();
FindBugsFrame.java,DefaultListModel listModel = (DefaultListModel) jarFileList.getModel();,if (jarFileList != null ) DefaultListModel listModel = (DefaultListModel) jarFileList.getModel();
FindBugsFrame.java,String dirs = srcDirTextField.getText();,if (srcDirTextField != null ) String dirs = srcDirTextField.getText();
FindBugsFrame.java,DefaultListModel listModel = (DefaultListModel) sourceDirList.getModel();,if (sourceDirList != null ) DefaultListModel listModel = (DefaultListModel) sourceDirList.getModel();
FindBugsFrame.java,String dirs = classpathEntryTextField.getText();,if (classpathEntryTextField != null ) String dirs = classpathEntryTextField.getText();
FindBugsFrame.java,DefaultListModel listModel = (DefaultListModel) classpathEntryList.getModel();,if (classpathEntryList != null ) DefaultListModel listModel = (DefaultListModel) classpathEntryList.getModel();
FindBugsFrame.java,TreePath selPath = bugTree.getSelectionPath();,if (bugTree != null ) TreePath selPath = bugTree.getSelectionPath();
FindBugsFrame.java,srcLine = selected.getPrimarySourceLineAnnotation();,if (selected != null ) srcLine = selected.getPrimarySourceLineAnnotation();
FindBugsFrame.java,SourceFinder sourceFinder = project.getSourceFinder();,if (project != null ) SourceFinder sourceFinder = project.getSourceFinder();
FindBugsFrame.java,sourceFile = source.getFullFileName();,if (source != null ) sourceFile = source.getFullFileName();
FindBugsFrame.java,in = source.getInputStream();,if (source != null ) in = source.getInputStream();
FindBugsFrame.java,int endLine = srcLine.getEndLine();,if (srcLine != null ) int endLine = srcLine.getEndLine();
FindBugsFrame.java,JViewport viewport = sourceTextAreaScrollPane.getViewport();,if (sourceTextAreaScrollPane != null ) JViewport viewport = sourceTextAreaScrollPane.getViewport();
FindBugsFrame.java,Rectangle viewportRect = viewport.getViewRect();,if (viewport != null ) Rectangle viewportRect = viewport.getViewRect();
FindBugsFrame.java,String bugDetailsKey = bugInstance.getType();,if (bugInstance != null ) String bugDetailsKey = bugInstance.getType();
FindBugsFrame.java,String text = annotationTextArea.getText();,if (annotationTextArea != null ) String text = annotationTextArea.getText();
FindBugsFrame.java,String userAnnotation = selected.getAnnotationText();,if (selected != null ) String userAnnotation = selected.getAnnotationText();
FindBugsFrame.java,boolean selected = checkBox.isSelected();,if (checkBox != null ) boolean selected = checkBox.isSelected();
FindBugsFrame.java,File selectedFile = dialog.getSelectedFile();,if (dialog != null ) File selectedFile = dialog.getSelectedFile();
FindBugsFrame.java,currentDirectory = selectedFile.getParentFile();,if (selectedFile != null ) currentDirectory = selectedFile.getParentFile();
FindBugsFrame.java,File parent = pickedFile.getParentFile();,if (pickedFile != null ) File parent = pickedFile.getParentFile();
FindBugsFrame.java,theme = UIManager.getSystemLookAndFeelClassName();,if (UIManager != null ) theme = UIManager.getSystemLookAndFeelClassName();
FindBugsFrame.java,project = commandLine.getProject();,if (commandLine != null ) project = commandLine.getProject();
FindBugsFrame.java,File bugsFile = new File(commandLine.getBugsFilename());,if (File(commandLine != null ) File bugsFile = new File(commandLine.getBugsFilename());
FindBugsFrame.java,frame.settingList = commandLine.getSettingList();,if (commandLine != null ) frame.settingList = commandLine.getSettingList();
Grouper.java,Iterator<ElementType> i = collection.iterator();,if (collection != null ) Iterator<ElementType> i = collection.iterator();
LineNumberer.java,fm = this.getFontMetrics(ta.getFont());,if (this != null ) fm = this.getFontMetrics(ta.getFont());
LineNumberer.java,int lineHeight = fm.getHeight();,if (fm != null ) int lineHeight = fm.getHeight();
OSXAdapter.java,theApplication = new com.apple.eawt.Application();,if (com != null ) theApplication = new com.apple.eawt.Application();
OSXAdapter.java,theApplication = new com.apple.eawt.Application();,if (com != null ) theApplication = new com.apple.eawt.Application();
RunAnalysisDialog.java,findBugsLabel = new javax.swing.JLabel();,if (javax != null ) findBugsLabel = new javax.swing.JLabel();
RunAnalysisDialog.java,countLabel = new javax.swing.JLabel();,if (javax != null ) countLabel = new javax.swing.JLabel();
RunAnalysisDialog.java,progressLabel = new javax.swing.JLabel();,if (javax != null ) progressLabel = new javax.swing.JLabel();
RunAnalysisDialog.java,progressBar = new javax.swing.JProgressBar();,if (javax != null ) progressBar = new javax.swing.JProgressBar();
RunAnalysisDialog.java,cancelButton = new javax.swing.JButton();,if (javax != null ) cancelButton = new javax.swing.JButton();
RunAnalysisDialog.java,stageLabel = new javax.swing.JLabel();,if (javax != null ) stageLabel = new javax.swing.JLabel();
RunAnalysisDialog.java,stageNameLabel = new javax.swing.JLabel();,if (javax != null ) stageNameLabel = new javax.swing.JLabel();
RunAnalysisDialog.java,topVerticalFiller = new javax.swing.JLabel();,if (javax != null ) topVerticalFiller = new javax.swing.JLabel();
RunAnalysisDialog.java,bottomVerticalFiller = new javax.swing.JLabel();,if (javax != null ) bottomVerticalFiller = new javax.swing.JLabel();
RunAnalysisDialog.java,countValueLabel = new javax.swing.JLabel();,if (javax != null ) countValueLabel = new javax.swing.JLabel();
RunAnalysisDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RunAnalysisDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RunAnalysisDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RunAnalysisDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RunAnalysisDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RunAnalysisDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RunAnalysisDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RunAnalysisDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RunAnalysisDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RunAnalysisDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RunAnalysisDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
ConvertToARFF.java,String s = value.toString();,if (value != null ) String s = value.toString();
ConvertToARFF.java,String value = attribute.getValue();,if (attribute != null ) String value = attribute.getValue();
ConvertToARFF.java,nextId = uidAttr.getValue();,if (uidAttr != null ) nextId = uidAttr.getValue();
ConvertToARFF.java,value = uidAttr.getStringValue();,if (uidAttr != null ) value = uidAttr.getStringValue();
ConvertToARFF.java,String s = tok.nextToken();,if (tok != null ) String s = tok.nextToken();
ConvertToARFF.java,ConvertToARFF converter = commandLine.getConverter();,if (commandLine != null ) ConvertToARFF converter = commandLine.getConverter();
GenerateUIDs.java,Document document = DocumentFactory.getInstance().createDocument();,if (DocumentFactory != null ) Document document = DocumentFactory.getInstance().createDocument();
GenerateUIDs.java,"XMLWriter xmlWriter = new XMLWriter(out, OutputFormat.createPrettyPrint());","if (OutputFormat != null ) XMLWriter xmlWriter = new XMLWriter(out, OutputFormat.createPrettyPrint());"
AppEngineDbEvaluation.java,"int whoCompare = comparePossiblyNull( getWho(),  o.getWho());","if (o != null ) int whoCompare = comparePossiblyNull( getWho(),  o.getWho());"
AppEngineDbEvaluation.java,"int commentCompare = comparePossiblyNull(getComment(), o.getComment());","if (o != null ) int commentCompare = comparePossiblyNull(getComment(), o.getComment());"
AppEnginePersistenceHelper.java,DatastoreService ds = DatastoreServiceFactory.getDatastoreService();,if (DatastoreServiceFactory != null ) DatastoreService ds = DatastoreServiceFactory.getDatastoreService();
AppEnginePersistenceHelper.java,Queue queue = QueueFactory.getDefaultQueue();,if (QueueFactory != null ) Queue queue = QueueFactory.getDefaultQueue();
AppEnginePersistenceHelper.java,UserService userService = UserServiceFactory.getUserService();,if (UserServiceFactory != null ) UserService userService = UserServiceFactory.getUserService();
AppEnginePersistenceHelper.java,User user = userService.getCurrentUser();,if (userService != null ) User user = userService.getCurrentUser();
FlybushDataClearer.java,HttpURLConnection conn = (HttpURLConnection) url.openConnection();,if (url != null ) HttpURLConnection conn = (HttpURLConnection) url.openConnection();
FlybushDataClearer.java,String line = br.readLine();,if (br != null ) String line = br.readLine();
AppEngineTestHelper.java,actualPersistenceManager = pmf.getPersistenceManager();,if (pmf != null ) actualPersistenceManager = pmf.getPersistenceManager();
AppEngineDbUsageSummary.java,int compare = date.compareTo(o.getDate());,if (date != null ) int compare = date.compareTo(o.getDate());
AppEngineUsagePersistenceHelper.java,DatastoreService ds = DatastoreServiceFactory.getDatastoreService();,if (DatastoreServiceFactory != null ) DatastoreService ds = DatastoreServiceFactory.getDatastoreService();
AppEngineUsagePersistenceHelper.java,DatastoreService ds = DatastoreServiceFactory.getDatastoreService();,if (DatastoreServiceFactory != null ) DatastoreService ds = DatastoreServiceFactory.getDatastoreService();
AppEngineUsagePersistenceHelper.java,Queue queue = QueueFactory.getDefaultQueue();,if (QueueFactory != null ) Queue queue = QueueFactory.getDefaultQueue();
AppEngineUsagePersistenceHelper.java,UserService userService = UserServiceFactory.getUserService();,if (UserServiceFactory != null ) UserService userService = UserServiceFactory.getUserService();
AppEngineUsagePersistenceHelper.java,User user = userService.getCurrentUser();,if (userService != null ) User user = userService.getCurrentUser();
FlybushDataClearer.java,HttpURLConnection conn = (HttpURLConnection) url.openConnection();,if (url != null ) HttpURLConnection conn = (HttpURLConnection) url.openConnection();
FlybushDataClearer.java,String line = br.readLine();,if (br != null ) String line = br.readLine();
AppEngineTestHelper.java,actualPersistenceManager = pmf.getPersistenceManager();,if (pmf != null ) actualPersistenceManager = pmf.getPersistenceManager();
AppEngineUpdateTestHelper.java,actualPersistenceManager = pmf.getPersistenceManager();,if (pmf != null ) actualPersistenceManager = pmf.getPersistenceManager();
AbstractFlybushCloudServlet.java,int numEvaluations = evaluationsList.size();,if (evaluationsList != null ) int numEvaluations = evaluationsList.size();
AbstractFlybushCloudServlet.java,DbEvaluation dbEvaluation = it.previous();,if (it != null ) DbEvaluation dbEvaluation = it.previous();
AbstractFlybushCloudServlet.java,boolean userIsNew = seenUsernames.add(dbEvaluation.getWhoId());,if (seenUsernames != null ) boolean userIsNew = seenUsernames.add(dbEvaluation.getWhoId());
AuthServlet.java,String uri = req.getRequestURI();,if (req != null ) String uri = req.getRequestURI();
AuthServlet.java,Transaction tx = pm.currentTransaction();,if (pm != null ) Transaction tx = pm.currentTransaction();
AuthServlet.java,PrintWriter writer = resp.getWriter();,if (resp != null ) PrintWriter writer = resp.getWriter();
AuthServlet.java,Transaction tx = pm.currentTransaction();,if (pm != null ) Transaction tx = pm.currentTransaction();
AuthServlet.java,String openidUrl = openIdUser.getIdentity();,if (openIdUser != null ) String openidUrl = openIdUser.getIdentity();
AuthServlet.java,LogIn loginMsg = LogIn.parseFrom(req.getInputStream());,if (LogIn != null ) LogIn loginMsg = LogIn.parseFrom(req.getInputStream());
AuthServlet.java,DbInvocation invocation = persistenceHelper.createDbInvocation();,if (persistenceHelper != null ) DbInvocation invocation = persistenceHelper.createDbInvocation();
AuthServlet.java,Transaction tx = pm.currentTransaction();,if (pm != null ) Transaction tx = pm.currentTransaction();
AuthServlet.java,tx = pm.currentTransaction();,if (pm != null ) tx = pm.currentTransaction();
AuthServlet.java,Transaction tx = pm.currentTransaction();,if (pm != null ) Transaction tx = pm.currentTransaction();
AuthServlet.java,ServletOutputStream out = resp.getOutputStream();,if (resp != null ) ServletOutputStream out = resp.getOutputStream();
AuthServlet.java,Transaction tx = pm.currentTransaction();,if (pm != null ) Transaction tx = pm.currentTransaction();
QueryServlet.java,FindIssues loginMsg = FindIssues.parseFrom(req.getInputStream());,if (FindIssues != null ) FindIssues loginMsg = FindIssues.parseFrom(req.getInputStream());
QueryServlet.java,List<String> hashes = WebCloudProtoUtil.decodeHashes(loginMsg.getMyIssueHashesList());,if (WebCloudProtoUtil != null ) List<String> hashes = WebCloudProtoUtil.decodeHashes(loginMsg.getMyIssueHashesList());
QueryServlet.java,FindIssuesResponse.Builder issueProtos = FindIssuesResponse.newBuilder();,if (FindIssuesResponse != null ) FindIssuesResponse.Builder issueProtos = FindIssuesResponse.newBuilder();
QueryServlet.java,Builder issueBuilder = Issue.newBuilder();,if (Issue != null ) Builder issueBuilder = Issue.newBuilder();
QueryServlet.java,Issue protoIssue = issueBuilder.build();,if (issueBuilder != null ) Issue protoIssue = issueBuilder.build();
QueryServlet.java,GetRecentEvaluations recentEvalsRequest = GetRecentEvaluations.parseFrom(req.getInputStream());,if (GetRecentEvaluations != null ) GetRecentEvaluations recentEvalsRequest = GetRecentEvaluations.parseFrom(req.getInputStream());
QueryServlet.java,Query query = pm.newQuery();,if (pm != null ) Query query = pm.newQuery();
QueryServlet.java,List<DbEvaluation> evaluations = (List<DbEvaluation>) query.execute();,if (query != null ) List<DbEvaluation> evaluations = (List<DbEvaluation>) query.execute();
QueryServlet.java,int resultCount = evaluations.size();,if (evaluations != null ) int resultCount = evaluations.size();
QueryServlet.java,RecentEvaluations.Builder issueProtos = RecentEvaluations.newBuilder();,if (RecentEvaluations != null ) RecentEvaluations.Builder issueProtos = RecentEvaluations.newBuilder();
QueryServlet.java,Iterator<DbEvaluation> iterator = evaluations.iterator();,if (evaluations != null ) Iterator<DbEvaluation> iterator = evaluations.iterator();
QueryServlet.java,String appName = loginMsg.getAppName();,if (loginMsg != null ) String appName = loginMsg.getAppName();
QueryServlet.java,String appVer = loginMsg.getAppVersion();,if (loginMsg != null ) String appVer = loginMsg.getAppVersion();
QueryServlet.java,String fbVersion = loginMsg.getFindbugsVersion();,if (loginMsg != null ) String fbVersion = loginMsg.getFindbugsVersion();
QueryServlet.java,Transaction tx = pm.currentTransaction();,if (pm != null ) Transaction tx = pm.currentTransaction();
QueryServlet.java,Calendar cal = Calendar.getInstance();,if (Calendar != null ) Calendar cal = Calendar.getInstance();
QueryServlet.java,String linkType = dbIssue.getBugLinkType();,if (dbIssue != null ) String linkType = dbIssue.getBugLinkType();
QueryServlet.java,String linkType = dbIssue.getBugLinkType();,if (dbIssue != null ) String linkType = dbIssue.getBugLinkType();
QueryServlet.java,Iterator<DbEvaluation> iterator = evaluations.iterator();,if (evaluations != null ) Iterator<DbEvaluation> iterator = evaluations.iterator();
QueryServlet.java,DbEvaluation dbEvaluation = iterator.next();,if (iterator != null ) DbEvaluation dbEvaluation = iterator.next();
QueryServlet.java,String issueHash = dbEvaluation.getIssue().getHash();,if (dbEvaluation != null ) String issueHash = dbEvaluation.getIssue().getHash();
QueryServlet.java,DbEvaluation eval = it.next();,if (it != null ) DbEvaluation eval = it.next();
ReportServlet.java,String uri = req.getRequestURI();,if (req != null ) String uri = req.getRequestURI();
ReportServlet.java,List<DbEvaluation> evals = (List<DbEvaluation>) query.execute();,if (query != null ) List<DbEvaluation> evals = (List<DbEvaluation>) query.execute();
ReportServlet.java,Set<String> seenIssues = Sets.newHashSet();,if (Sets != null ) Set<String> seenIssues = Sets.newHashSet();
ReportServlet.java,Set<String> seenUsers = Sets.newHashSet();,if (Sets != null ) Set<String> seenUsers = Sets.newHashSet();
ReportServlet.java,String email = eval.getEmail();,if (eval != null ) String email = eval.getEmail();
ReportServlet.java,long beginningOfWeek = getBeginningOfWeekInMillis(eval.getWhen());,if (getBeginningOfWeekInMillis(eval != null ) long beginningOfWeek = getBeginningOfWeekInMillis(eval.getWhen());
ReportServlet.java,String issueHash = eval.getIssue().getHash();,if (eval != null ) String issueHash = eval.getIssue().getHash();
ReportServlet.java,String pkg = getPackageName(eval.getPrimaryClass());,if (getPackageName(eval != null ) String pkg = getPackageName(eval.getPrimaryClass());
ReportServlet.java,Set<String> seenIssues = Sets.newHashSet();,if (Sets != null ) Set<String> seenIssues = Sets.newHashSet();
ReportServlet.java,List<String> lines = Lists.newArrayList();,if (Lists != null ) List<String> lines = Lists.newArrayList();
ReportServlet.java,String epkg = getPackageName(eval.getPrimaryClass());,if (getPackageName(eval != null ) String epkg = getPackageName(eval.getPrimaryClass());
ReportServlet.java,long beginningOfWeek = getBeginningOfWeekInMillis(eval.getWhen());,if (getBeginningOfWeekInMillis(eval != null ) long beginningOfWeek = getBeginningOfWeekInMillis(eval.getWhen());
ReportServlet.java,String issueHash = eval.getIssue().getHash();,if (eval != null ) String issueHash = eval.getIssue().getHash();
ReportServlet.java,ServletOutputStream page = resp.getOutputStream();,if (resp != null ) ServletOutputStream page = resp.getOutputStream();
ReportServlet.java,ServletOutputStream page = resp.getOutputStream();,if (resp != null ) ServletOutputStream page = resp.getOutputStream();
ReportServlet.java,Set<String> alreadyPrinted = Sets.newHashSet();,if (Sets != null ) Set<String> alreadyPrinted = Sets.newHashSet();
ReportServlet.java,x += entry.getValue();,if (entry != null ) x += entry.getValue();
ReportServlet.java,Set<String> seenIssues = Sets.newHashSet();,if (Sets != null ) Set<String> seenIssues = Sets.newHashSet();
ReportServlet.java,List<String> table = Lists.newArrayList();,if (Lists != null ) List<String> table = Lists.newArrayList();
ReportServlet.java,long beginningOfWeek = getBeginningOfWeekInMillis(eval.getWhen());,if (getBeginningOfWeekInMillis(eval != null ) long beginningOfWeek = getBeginningOfWeekInMillis(eval.getWhen());
ReportServlet.java,ServletOutputStream page = resp.getOutputStream();,if (resp != null ) ServletOutputStream page = resp.getOutputStream();
ReportServlet.java,ServletOutputStream page = resp.getOutputStream();,if (resp != null ) ServletOutputStream page = resp.getOutputStream();
ReportServlet.java,List<DbUser> userObjs = (List<DbUser>) userQuery.execute();,if (userQuery != null ) List<DbUser> userObjs = (List<DbUser>) userQuery.execute();
ReportServlet.java,Set<String> users = Sets.newHashSet();,if (Sets != null ) Set<String> users = Sets.newHashSet();
ReportServlet.java,int maxEvalsPerWeek = Collections.max(evalsPerWeek.values());,if (Collections != null ) int maxEvalsPerWeek = Collections.max(evalsPerWeek.values());
ReportServlet.java,List<Double> evalsData = Lists.newArrayList();,if (Lists != null ) List<Double> evalsData = Lists.newArrayList();
ReportServlet.java,List<String> labels = Lists.newArrayList();,if (Lists != null ) List<String> labels = Lists.newArrayList();
ReportServlet.java,List<Double> newIssuesData = Lists.newArrayList();,if (Lists != null ) List<Double> newIssuesData = Lists.newArrayList();
ReportServlet.java,Integer evalsThisWeek = evalsPerWeek.get(cal.getTimeInMillis());,if (evalsPerWeek != null ) Integer evalsThisWeek = evalsPerWeek.get(cal.getTimeInMillis());
ReportServlet.java,Integer newIssuesThisWeek = newIssuesByWeek.get(cal.getTimeInMillis());,if (newIssuesByWeek != null ) Integer newIssuesThisWeek = newIssuesByWeek.get(cal.getTimeInMillis());
ReportServlet.java,ServletOutputStream page = resp.getOutputStream();,if (resp != null ) ServletOutputStream page = resp.getOutputStream();
ReportServlet.java,ServletOutputStream page = resp.getOutputStream();,if (resp != null ) ServletOutputStream page = resp.getOutputStream();
ReportServlet.java,List<Double> histogramData = Lists.newArrayList();,if (Lists != null ) List<Double> histogramData = Lists.newArrayList();
ReportServlet.java,int maxEvaluators = Collections.max(issuesPerEvaluatorCount.keySet());,if (Collections != null ) int maxEvaluators = Collections.max(issuesPerEvaluatorCount.keySet());
ReportServlet.java,int maxIssues = Collections.max(issuesPerEvaluatorCount.values());,if (Collections != null ) int maxIssues = Collections.max(issuesPerEvaluatorCount.values());
ReportServlet.java,List<String> barLabels = Lists.newArrayList();,if (Lists != null ) List<String> barLabels = Lists.newArrayList();
ReportServlet.java,int maxEvalsPerWeek = Collections.max(evalsByWeek.values());,if (Collections != null ) int maxEvalsPerWeek = Collections.max(evalsByWeek.values());
ReportServlet.java,List<Double> newIssuesData = Lists.newArrayList();,if (Lists != null ) List<Double> newIssuesData = Lists.newArrayList();
ReportServlet.java,List<String> timelineLabels = Lists.newArrayList();,if (Lists != null ) List<String> timelineLabels = Lists.newArrayList();
ReportServlet.java,Integer evalsThisWeek = evalsByWeek.get(cal.getTimeInMillis());,if (evalsByWeek != null ) Integer evalsThisWeek = evalsByWeek.get(cal.getTimeInMillis());
ReportServlet.java,Integer issuesThisWeek = issueCountByWeek.get(cal.getTimeInMillis());,if (issueCountByWeek != null ) Integer issuesThisWeek = issueCountByWeek.get(cal.getTimeInMillis());
ReportServlet.java,Integer usersThisWeek = userCountByWeek.get(cal.getTimeInMillis());,if (userCountByWeek != null ) Integer usersThisWeek = userCountByWeek.get(cal.getTimeInMillis());
ReportServlet.java,int totalUsers = Collections.max(userCountByWeek.values());,if (Collections != null ) int totalUsers = Collections.max(userCountByWeek.values());
ReportServlet.java,List<Double> issuesData = Lists.newArrayList();,if (Lists != null ) List<Double> issuesData = Lists.newArrayList();
ReportServlet.java,List<Double> evalsData = Lists.newArrayList();,if (Lists != null ) List<Double> evalsData = Lists.newArrayList();
ReportServlet.java,List<Double> usersData = Lists.newArrayList();,if (Lists != null ) List<Double> usersData = Lists.newArrayList();
ReportServlet.java,List<String> labels = Lists.newArrayList();,if (Lists != null ) List<String> labels = Lists.newArrayList();
ReportServlet.java,long time = cal.getTimeInMillis();,if (cal != null ) long time = cal.getTimeInMillis();
ReportServlet.java,Calendar cal = Calendar.getInstance();,if (Calendar != null ) Calendar cal = Calendar.getInstance();
ReportServlet.java,Calendar cal = Calendar.getInstance();,if (Calendar != null ) Calendar cal = Calendar.getInstance();
ReportServlet.java,final long first = cal.getTimeInMillis();,if (cal != null ) final long first = cal.getTimeInMillis();
ReportServlet.java,private Calendar cal = Calendar.getInstance();,if (Calendar != null ) private Calendar cal = Calendar.getInstance();
ReportServlet.java,Calendar toReturn = (Calendar) cal.clone();,if (cal != null ) Calendar toReturn = (Calendar) cal.clone();
ReportServlet.java,Calendar cal = Calendar.getInstance();,if (Calendar != null ) Calendar cal = Calendar.getInstance();
ReportServlet.java,Calendar weekCal = Calendar.getInstance();,if (Calendar != null ) Calendar weekCal = Calendar.getInstance();
ReportServlet.java,List<String> labels = Lists.newArrayList();,if (Lists != null ) List<String> labels = Lists.newArrayList();
ReportServlet.java,List<Double> evalsData = Lists.newArrayList();,if (Lists != null ) List<Double> evalsData = Lists.newArrayList();
ReportServlet.java,List<Double> issuesData = Lists.newArrayList();,if (Lists != null ) List<Double> issuesData = Lists.newArrayList();
ReportServlet.java,int maxPerPkg = Collections.max(evalCountByPkg.values());,if (Collections != null ) int maxPerPkg = Collections.max(evalCountByPkg.values());
ReportServlet.java,List<String> labels = Lists.newArrayList();,if (Lists != null ) List<String> labels = Lists.newArrayList();
ReportServlet.java,List<Double> totals = Lists.newArrayList();,if (Lists != null ) List<Double> totals = Lists.newArrayList();
ReportServlet.java,List<Double> issues = Lists.newArrayList();,if (Lists != null ) List<Double> issues = Lists.newArrayList();
ReportServlet.java,int max = Collections.max(totalCountByUser.values());,if (Collections != null ) int max = Collections.max(totalCountByUser.values());
ReportServlet.java,String email = entry.getKey();,if (entry != null ) String email = entry.getKey();
ReportServlet.java,int evalCount = entry.getValue();,if (entry != null ) int evalCount = entry.getValue();
UpdateServlet.java,Set<String> list = Sets.newHashSet();,if (Sets != null ) Set<String> list = Sets.newHashSet();
UpdateServlet.java,List<DbIssue> issues = (List<DbIssue>) iq.execute();,if (iq != null ) List<DbIssue> issues = (List<DbIssue>) iq.execute();
UpdateServlet.java,Transaction tx = pm.currentTransaction();,if (pm != null ) Transaction tx = pm.currentTransaction();
UpdateServlet.java,Transaction tx = pm.currentTransaction();,if (pm != null ) Transaction tx = pm.currentTransaction();
UpdateServlet.java,UpdateIssueTimestamps issues = UpdateIssueTimestamps.parseFrom(req.getInputStream());,if (UpdateIssueTimestamps != null ) UpdateIssueTimestamps issues = UpdateIssueTimestamps.parseFrom(req.getInputStream());
UpdateServlet.java,long newFirstSeen = issueGroup.getTimestamp();,if (issueGroup != null ) long newFirstSeen = issueGroup.getTimestamp();
UpdateServlet.java,long storedFirstSeen = issue.getFirstSeen();,if (issue != null ) long storedFirstSeen = issue.getFirstSeen();
UpdateServlet.java,Transaction tx = pm.currentTransaction();,if (pm != null ) Transaction tx = pm.currentTransaction();
UpdateServlet.java,deleted = persistenceHelper.clearAllData();,if (persistenceHelper != null ) deleted = persistenceHelper.clearAllData();
UpdateServlet.java,UploadIssues issues = UploadIssues.parseFrom(req.getInputStream());,if (UploadIssues != null ) UploadIssues issues = UploadIssues.parseFrom(req.getInputStream());
UpdateServlet.java,String token = issues.getToken();,if (issues != null ) String token = issues.getToken();
UpdateServlet.java,DbUser user = users.iterator().next();,if (users != null ) DbUser user = users.iterator().next();
UpdateServlet.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
UpdateServlet.java,String hashStr = WebCloudProtoUtil.decodeHash(issue.getHash());,if (WebCloudProtoUtil != null ) String hashStr = WebCloudProtoUtil.decodeHash(issue.getHash());
UpdateServlet.java,start = System.currentTimeMillis();,if (System != null ) start = System.currentTimeMillis();
UpdateServlet.java,UploadEvaluation uploadEvalMsg = UploadEvaluation.parseFrom(req.getInputStream());,if (UploadEvaluation != null ) UploadEvaluation uploadEvalMsg = UploadEvaluation.parseFrom(req.getInputStream());
UpdateServlet.java,DbEvaluation dbEvaluation = createDbEvaluation(uploadEvalMsg.getEvaluation());,if (createDbEvaluation(uploadEvalMsg != null ) DbEvaluation dbEvaluation = createDbEvaluation(uploadEvalMsg.getEvaluation());
UpdateServlet.java,Transaction tx = pm.currentTransaction();,if (pm != null ) Transaction tx = pm.currentTransaction();
UpdateServlet.java,String hash = WebCloudProtoUtil.decodeHash(uploadEvalMsg.getHash());,if (WebCloudProtoUtil != null ) String hash = WebCloudProtoUtil.decodeHash(uploadEvalMsg.getHash());
UpdateServlet.java,SetBugLink setBugLinkMsg = SetBugLink.parseFrom(req.getInputStream());,if (SetBugLink != null ) SetBugLink setBugLinkMsg = SetBugLink.parseFrom(req.getInputStream());
UpdateServlet.java,Transaction tx = pm.currentTransaction();,if (pm != null ) Transaction tx = pm.currentTransaction();
UpdateServlet.java,String decodedHash = WebCloudProtoUtil.decodeHash(setBugLinkMsg.getHash());,if (WebCloudProtoUtil != null ) String decodedHash = WebCloudProtoUtil.decodeHash(setBugLinkMsg.getHash());
UpdateServlet.java,Transaction tx = pm.currentTransaction();,if (pm != null ) Transaction tx = pm.currentTransaction();
UpdateServlet.java,DbIssue dbIssue = persistenceHelper.createDbIssue();,if (persistenceHelper != null ) DbIssue dbIssue = persistenceHelper.createDbIssue();
UpdateServlet.java,Object invocationKey = session.getInvocation();,if (session != null ) Object invocationKey = session.getInvocation();
UpdateServlet.java,DbEvaluation dbEvaluation = persistenceHelper.createDbEvaluation();,if (persistenceHelper != null ) DbEvaluation dbEvaluation = persistenceHelper.createDbEvaluation();
WebPageServlet.java,PrintWriter out = resp.getWriter();,if (resp != null ) PrintWriter out = resp.getWriter();
WebPageServlet.java,PrintWriter out = resp.getWriter();,if (resp != null ) PrintWriter out = resp.getWriter();
AbstractFlybushCloudServletTest.java,user = results.iterator().next();,if (results != null ) user = results.iterator().next();
AbstractFlybushCloudServletTest.java,DbEvaluation eval = persistenceHelper.createDbEvaluation();,if (persistenceHelper != null ) DbEvaluation eval = persistenceHelper.createDbEvaluation();
AbstractFlybushCloudServletTest.java,DbIssue foundIssue = persistenceHelper.createDbIssue();,if (persistenceHelper != null ) DbIssue foundIssue = persistenceHelper.createDbIssue();
AuthServletTest.java,FindIssuesResponse result = FindIssuesResponse.parseFrom(outputCollector.toByteArray());,if (FindIssuesResponse != null ) FindIssuesResponse result = FindIssuesResponse.parseFrom(outputCollector.toByteArray());
AuthServletTest.java,FindIssuesResponse result = FindIssuesResponse.parseFrom(outputCollector.toByteArray());,if (FindIssuesResponse != null ) FindIssuesResponse result = FindIssuesResponse.parseFrom(outputCollector.toByteArray());
AuthServletTest.java,FindIssuesResponse result = FindIssuesResponse.parseFrom(outputCollector.toByteArray());,if (FindIssuesResponse != null ) FindIssuesResponse result = FindIssuesResponse.parseFrom(outputCollector.toByteArray());
AuthServletTest.java,List<DbInvocation> invocations = (List<DbInvocation>) query.execute();,if (query != null ) List<DbInvocation> invocations = (List<DbInvocation>) query.execute();
QueryServletTest.java,RecentEvaluations result = RecentEvaluations.parseFrom(outputCollector.toByteArray());,if (RecentEvaluations != null ) RecentEvaluations result = RecentEvaluations.parseFrom(outputCollector.toByteArray());
QueryServletTest.java,RecentEvaluations result = RecentEvaluations.parseFrom(outputCollector.toByteArray());,if (RecentEvaluations != null ) RecentEvaluations result = RecentEvaluations.parseFrom(outputCollector.toByteArray());
QueryServletTest.java,RecentEvaluations result = RecentEvaluations.parseFrom(outputCollector.toByteArray());,if (RecentEvaluations != null ) RecentEvaluations result = RecentEvaluations.parseFrom(outputCollector.toByteArray());
QueryServletTest.java,RecentEvaluations result = RecentEvaluations.parseFrom(outputCollector.toByteArray());,if (RecentEvaluations != null ) RecentEvaluations result = RecentEvaluations.parseFrom(outputCollector.toByteArray());
QueryServletTest.java,FindIssues findIssues = createUnauthenticatedFindIssues(hashes).build();,if (createUnauthenticatedFindIssues(hashes) != null ) FindIssues findIssues = createUnauthenticatedFindIssues(hashes).build();
ReportServletTest.java,String page = outputCollector.toString();,if (outputCollector != null ) String page = outputCollector.toString();
ReportServletTest.java,List<DbIssue> issues = Lists.newArrayList();,if (Lists != null ) List<DbIssue> issues = Lists.newArrayList();
UpdateServletTest.java,DbEvaluation evalA = persistenceHelper.createDbEvaluation();,if (persistenceHelper != null ) DbEvaluation evalA = persistenceHelper.createDbEvaluation();
UpdateServletTest.java,DbEvaluation evalB = persistenceHelper.createDbEvaluation();,if (persistenceHelper != null ) DbEvaluation evalB = persistenceHelper.createDbEvaluation();
UpdateServletTest.java,Object invocationId = dbEval.getInvocationKey();,if (dbEval != null ) Object invocationId = dbEval.getInvocationKey();
UpdateServletTest.java,String dbBugLink = issue.getBugLink();,if (issue != null ) String dbBugLink = issue.getBugLink();
UpdateServletTest.java,String dbBugLinkType = issue.getBugLinkType();,if (issue != null ) String dbBugLinkType = issue.getBugLinkType();
UpdateServletTest.java,Issue.Builder issueBuilder = Issue.newBuilder();,if (Issue != null ) Issue.Builder issueBuilder = Issue.newBuilder();
WebPageServletTest.java,String response = outputCollector.toString();,if (outputCollector != null ) String response = outputCollector.toString();
WebPageServletTest.java,String response = outputCollector.toString();,if (outputCollector != null ) String response = outputCollector.toString();
WebPageServletTest.java,String response = outputCollector.toString();,if (outputCollector != null ) String response = outputCollector.toString();
WebPageServletTest.java,String response = outputCollector.toString();,if (outputCollector != null ) String response = outputCollector.toString();
WebPageServletTest.java,String response = outputCollector.toString();,if (outputCollector != null ) String response = outputCollector.toString();
AbstractFlybushServlet.java,ServletContext servletContext = config.getServletContext();,if (config != null ) ServletContext servletContext = config.getServletContext();
AbstractFlybushServlet.java,String uri = req.getRequestURI();,if (req != null ) String uri = req.getRequestURI();
AbstractFlybushServletTest.java,persistenceHelper = testHelper.createPersistenceHelper(testHelper.getPersistenceManager());,if (testHelper != null ) persistenceHelper = testHelper.createPersistenceHelper(testHelper.getPersistenceManager());
UpdateCheckServlet.java,final DbUsageEntry entry = persistenceHelper.createDbUsageEntry();,if (persistenceHelper != null ) final DbUsageEntry entry = persistenceHelper.createDbUsageEntry();
UpdateCheckServlet.java,List<DbPluginUpdateXml> results = (List<DbPluginUpdateXml>) query.execute();,if (query != null ) List<DbPluginUpdateXml> results = (List<DbPluginUpdateXml>) query.execute();
UpdateCheckServlet.java,String pluginId = result.getPluginId();,if (result != null ) String pluginId = result.getPluginId();
UpdateCheckServlet.java,String javaVersion = found.getJavaVersion();,if (found != null ) String javaVersion = found.getJavaVersion();
UpdateCheckServlet.java,String userChannel = found.getPluginChannel();,if (found != null ) String userChannel = found.getPluginChannel();
UpdateCheckServlet.java,String pluginVersion = found.getPluginVersion();,if (found != null ) String pluginVersion = found.getPluginVersion();
UpdateCheckServlet.java,pluginVersion = pluginVersion.trim();,if (pluginVersion != null ) pluginVersion = pluginVersion.trim();
UpdateCheckServlet.java,String newPluginId = result.getPluginId();,if (result != null ) String newPluginId = result.getPluginId();
UpdateCheckServlet.java,String channel = result.getChannel();,if (result != null ) String channel = result.getChannel();
UpdateCheckServlet.java,Date releaseDate = result.getReleaseDate();,if (result != null ) Date releaseDate = result.getReleaseDate();
UpdateCheckServlet.java,String version = result.getVersion();,if (result != null ) String version = result.getVersion();
UpdateCheckServlet.java,String message = result.getMessage();,if (result != null ) String message = result.getMessage();
UpdateCheckServlet.java,List<DbUsageEntry> entries = Lists.newArrayList();,if (Lists != null ) List<DbUsageEntry> entries = Lists.newArrayList();
UpdateCheckServlet.java,DbUsageEntry pluginEntry = entry.copy();,if (entry != null ) DbUsageEntry pluginEntry = entry.copy();
UpdateCheckServlet.java,Query query = pm.newQuery();,if (pm != null ) Query query = pm.newQuery();
UsageConsolidatorServlet.java,String uri = req.getRequestURI();,if (req != null ) String uri = req.getRequestURI();
UsageConsolidatorServlet.java,Calendar cal = Calendar.getInstance();,if (Calendar != null ) Calendar cal = Calendar.getInstance();
UsageConsolidatorServlet.java,int version = ventry.getValue();,if (ventry != null ) int version = ventry.getValue();
UsageConsolidatorServlet.java,Calendar cal = Calendar.getInstance();,if (Calendar != null ) Calendar cal = Calendar.getInstance();
UsageConsolidatorServlet.java,Calendar hr = (Calendar) cal.clone();,if (cal != null ) Calendar hr = (Calendar) cal.clone();
UsageConsolidatorServlet.java,Calendar end = (Calendar) hr.clone();,if (hr != null ) Calendar end = (Calendar) hr.clone();
UsageConsolidatorServlet.java,Calendar cal = Calendar.getInstance();,if (Calendar != null ) Calendar cal = Calendar.getInstance();
UsageDataConsolidator.java,DbUsageSummary entry = persistenceHelper.createDbUsageSummary();,if (persistenceHelper != null ) DbUsageSummary entry = persistenceHelper.createDbUsageSummary();
UsageDataConsolidator.java,String uuidStr = entry.getUuid();,if (entry != null ) String uuidStr = entry.getUuid();
UsageDataConsolidator.java,String pluginFqn = entry.getPlugin();,if (entry != null ) String pluginFqn = entry.getPlugin();
UsageDataConsolidator.java,String pluginVersion = entry.getPluginVersion();,if (entry != null ) String pluginVersion = entry.getPluginVersion();
UsageDataConsolidator.java,String country = entry.getCountry();,if (entry != null ) String country = entry.getCountry();
UsageDataConsolidator.java,String language = entry.getLanguage();,if (entry != null ) String language = entry.getLanguage();
UsageDataConsolidator.java,String categoryKey = summary.getCategoryKey();,if (summary != null ) String categoryKey = summary.getCategoryKey();
UsageDataConsolidator.java,Collection<String> list = Lists.newArrayList();,if (Lists != null ) Collection<String> list = Lists.newArrayList();
UsageDataConsolidator.java,String hostAddress = InetAddress.getByAddress(addr).getHostAddress();,if (InetAddress != null ) String hostAddress = InetAddress.getByAddress(addr).getHostAddress();
UsageDataConsolidator.java,List<Long> list = Lists.newArrayList();,if (Lists != null ) List<Long> list = Lists.newArrayList();
UsageDataConsolidator.java,long[] longs = (long[]) stream.readObject();,if (stream != null ) long[] longs = (long[]) stream.readObject();
UsageDataConsolidator.java,Set<DbUsageSummary> list = Sets.newHashSet();,if (Sets != null ) Set<DbUsageSummary> list = Sets.newHashSet();
UsageReportServlet.java,String uri = req.getRequestURI();,if (req != null ) String uri = req.getRequestURI();
UsageReportServlet.java,SortedSet<DbUsageSummary> summaries = Sets.newTreeSet();,if (Sets != null ) SortedSet<DbUsageSummary> summaries = Sets.newTreeSet();
UsageReportServlet.java,long time = summary.getDate().getTime();,if (summary != null ) long time = summary.getDate().getTime();
UsageReportServlet.java,int value = summary.getValue();,if (summary != null ) int value = summary.getValue();
UsageReportServlet.java,String version = summary.getCategoryKey();,if (summary != null ) String version = summary.getCategoryKey();
UsageReportServlet.java,String pkg = summary.getCategoryKey();,if (summary != null ) String pkg = summary.getCategoryKey();
UsageReportServlet.java,Calendar cal = Calendar.getInstance();,if (Calendar != null ) Calendar cal = Calendar.getInstance();
UsageReportServlet.java,double max = Collections.max(uuidsByPlugin.values());,if (Collections != null ) double max = Collections.max(uuidsByPlugin.values());
UsageReportServlet.java,List<Double> data = Lists.newArrayList();,if (Lists != null ) List<Double> data = Lists.newArrayList();
UsageReportServlet.java,List<String> labels = Lists.newArrayList();,if (Lists != null ) List<String> labels = Lists.newArrayList();
UsageReportServlet.java,int val = entry.getValue();,if (entry != null ) int val = entry.getValue();
UsageReportServlet.java,total += entry.getValue();,if (entry != null ) total += entry.getValue();
UsageReportServlet.java,Calendar cal = Calendar.getInstance();,if (Calendar != null ) Calendar cal = Calendar.getInstance();
UsageReportServlet.java,ServletOutputStream page = resp.getOutputStream();,if (resp != null ) ServletOutputStream page = resp.getOutputStream();
UsageReportServlet.java,int maxUsersPerDay = Collections.max(firstByDay.values());,if (Collections != null ) int maxUsersPerDay = Collections.max(firstByDay.values());
UsageReportServlet.java,int maxIpsPerDay = Collections.max(firstByDay.values());,if (Collections != null ) int maxIpsPerDay = Collections.max(firstByDay.values());
UsageReportServlet.java,List<String> timelineLabels = Lists.newArrayList();,if (Lists != null ) List<String> timelineLabels = Lists.newArrayList();
UsageReportServlet.java,Integer usersThisWeek = firstByDay.get(cal.getTimeInMillis());,if (firstByDay != null ) Integer usersThisWeek = firstByDay.get(cal.getTimeInMillis());
UsageReportServlet.java,Integer ipsThisWeek = secondByDay.get(cal.getTimeInMillis());,if (secondByDay != null ) Integer ipsThisWeek = secondByDay.get(cal.getTimeInMillis());
UsageReportServlet.java,int maxPerDay = Collections.max(byDayCounts.values());,if (Collections != null ) int maxPerDay = Collections.max(byDayCounts.values());
UsageReportServlet.java,List<String> timelineLabels = Lists.newArrayList();,if (Lists != null ) List<String> timelineLabels = Lists.newArrayList();
UsageReportServlet.java,Integer usersThisWeek = byDayCounts.get(cal.getTimeInMillis());,if (byDayCounts != null ) Integer usersThisWeek = byDayCounts.get(cal.getTimeInMillis());
UsageReportServlet.java,Calendar cal = Calendar.getInstance();,if (Calendar != null ) Calendar cal = Calendar.getInstance();
UsageReportServlet.java,final long first = cal.getTimeInMillis();,if (cal != null ) final long first = cal.getTimeInMillis();
UsageReportServlet.java,private Calendar cal = Calendar.getInstance();,if (Calendar != null ) private Calendar cal = Calendar.getInstance();
UsageReportServlet.java,Calendar toReturn = (Calendar) cal.clone();,if (cal != null ) Calendar toReturn = (Calendar) cal.clone();
XmlUploadServlet.java,DbPluginUpdateXml update = persistenceHelper.createPluginUpdateXml();,if (persistenceHelper != null ) DbPluginUpdateXml update = persistenceHelper.createPluginUpdateXml();
UpdateCheckServletTest.java,List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();,if (query != null ) List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();
UpdateCheckServletTest.java,List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();,if (query != null ) List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();
UpdateCheckServletTest.java,List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();,if (query != null ) List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();
UpdateCheckServletTest.java,List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();,if (query != null ) List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();
UpdateCheckServletTest.java,List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();,if (query != null ) List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();
UpdateCheckServletTest.java,List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();,if (query != null ) List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();
UpdateCheckServletTest.java,List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();,if (query != null ) List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();
UpdateCheckServletTest.java,List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();,if (query != null ) List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();
UpdateCheckServletTest.java,List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();,if (query != null ) List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();
UpdateCheckServletTest.java,List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();,if (query != null ) List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();
UpdateCheckServletTest.java,List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();,if (query != null ) List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();
UpdateCheckServletTest.java,DateFormat df = DateFormat.getDateTimeInstance();,if (DateFormat != null ) DateFormat df = DateFormat.getDateTimeInstance();
UpdateCheckServletTest.java,DbPluginUpdateXml update = persistenceHelper.createPluginUpdateXml();,if (persistenceHelper != null ) DbPluginUpdateXml update = persistenceHelper.createPluginUpdateXml();
UpdateCheckServletTest.java,List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();,if (query != null ) List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();
AppEngineDbEvaluation.java,"int whoCompare = comparePossiblyNull( getWho(),  o.getWho());","if (o != null ) int whoCompare = comparePossiblyNull( getWho(),  o.getWho());"
AppEngineDbEvaluation.java,"int commentCompare = comparePossiblyNull(getComment(), o.getComment());","if (o != null ) int commentCompare = comparePossiblyNull(getComment(), o.getComment());"
AppEnginePersistenceHelper.java,DatastoreService ds = DatastoreServiceFactory.getDatastoreService();,if (DatastoreServiceFactory != null ) DatastoreService ds = DatastoreServiceFactory.getDatastoreService();
AppEnginePersistenceHelper.java,Queue queue = QueueFactory.getDefaultQueue();,if (QueueFactory != null ) Queue queue = QueueFactory.getDefaultQueue();
AppEnginePersistenceHelper.java,UserService userService = UserServiceFactory.getUserService();,if (UserServiceFactory != null ) UserService userService = UserServiceFactory.getUserService();
AppEnginePersistenceHelper.java,User user = userService.getCurrentUser();,if (userService != null ) User user = userService.getCurrentUser();
FlybushDataClearer.java,HttpURLConnection conn = (HttpURLConnection) url.openConnection();,if (url != null ) HttpURLConnection conn = (HttpURLConnection) url.openConnection();
FlybushDataClearer.java,String line = br.readLine();,if (br != null ) String line = br.readLine();
AppEngineTestHelper.java,actualPersistenceManager = pmf.getPersistenceManager();,if (pmf != null ) actualPersistenceManager = pmf.getPersistenceManager();
AppEngineDbUsageSummary.java,int compare = date.compareTo(o.getDate());,if (date != null ) int compare = date.compareTo(o.getDate());
AppEngineUsagePersistenceHelper.java,DatastoreService ds = DatastoreServiceFactory.getDatastoreService();,if (DatastoreServiceFactory != null ) DatastoreService ds = DatastoreServiceFactory.getDatastoreService();
AppEngineUsagePersistenceHelper.java,DatastoreService ds = DatastoreServiceFactory.getDatastoreService();,if (DatastoreServiceFactory != null ) DatastoreService ds = DatastoreServiceFactory.getDatastoreService();
AppEngineUsagePersistenceHelper.java,Queue queue = QueueFactory.getDefaultQueue();,if (QueueFactory != null ) Queue queue = QueueFactory.getDefaultQueue();
AppEngineUsagePersistenceHelper.java,UserService userService = UserServiceFactory.getUserService();,if (UserServiceFactory != null ) UserService userService = UserServiceFactory.getUserService();
AppEngineUsagePersistenceHelper.java,User user = userService.getCurrentUser();,if (userService != null ) User user = userService.getCurrentUser();
FlybushDataClearer.java,HttpURLConnection conn = (HttpURLConnection) url.openConnection();,if (url != null ) HttpURLConnection conn = (HttpURLConnection) url.openConnection();
FlybushDataClearer.java,String line = br.readLine();,if (br != null ) String line = br.readLine();
AppEngineTestHelper.java,actualPersistenceManager = pmf.getPersistenceManager();,if (pmf != null ) actualPersistenceManager = pmf.getPersistenceManager();
AppEngineUpdateTestHelper.java,actualPersistenceManager = pmf.getPersistenceManager();,if (pmf != null ) actualPersistenceManager = pmf.getPersistenceManager();
AbstractFlybushCloudServlet.java,int numEvaluations = evaluationsList.size();,if (evaluationsList != null ) int numEvaluations = evaluationsList.size();
AbstractFlybushCloudServlet.java,DbEvaluation dbEvaluation = it.previous();,if (it != null ) DbEvaluation dbEvaluation = it.previous();
AbstractFlybushCloudServlet.java,boolean userIsNew = seenUsernames.add(dbEvaluation.getWhoId());,if (seenUsernames != null ) boolean userIsNew = seenUsernames.add(dbEvaluation.getWhoId());
AuthServlet.java,String uri = req.getRequestURI();,if (req != null ) String uri = req.getRequestURI();
AuthServlet.java,Transaction tx = pm.currentTransaction();,if (pm != null ) Transaction tx = pm.currentTransaction();
AuthServlet.java,PrintWriter writer = resp.getWriter();,if (resp != null ) PrintWriter writer = resp.getWriter();
AuthServlet.java,Transaction tx = pm.currentTransaction();,if (pm != null ) Transaction tx = pm.currentTransaction();
AuthServlet.java,String openidUrl = openIdUser.getIdentity();,if (openIdUser != null ) String openidUrl = openIdUser.getIdentity();
AuthServlet.java,LogIn loginMsg = LogIn.parseFrom(req.getInputStream());,if (LogIn != null ) LogIn loginMsg = LogIn.parseFrom(req.getInputStream());
AuthServlet.java,DbInvocation invocation = persistenceHelper.createDbInvocation();,if (persistenceHelper != null ) DbInvocation invocation = persistenceHelper.createDbInvocation();
AuthServlet.java,Transaction tx = pm.currentTransaction();,if (pm != null ) Transaction tx = pm.currentTransaction();
AuthServlet.java,tx = pm.currentTransaction();,if (pm != null ) tx = pm.currentTransaction();
AuthServlet.java,Transaction tx = pm.currentTransaction();,if (pm != null ) Transaction tx = pm.currentTransaction();
AuthServlet.java,ServletOutputStream out = resp.getOutputStream();,if (resp != null ) ServletOutputStream out = resp.getOutputStream();
AuthServlet.java,Transaction tx = pm.currentTransaction();,if (pm != null ) Transaction tx = pm.currentTransaction();
QueryServlet.java,FindIssues loginMsg = FindIssues.parseFrom(req.getInputStream());,if (FindIssues != null ) FindIssues loginMsg = FindIssues.parseFrom(req.getInputStream());
QueryServlet.java,List<String> hashes = WebCloudProtoUtil.decodeHashes(loginMsg.getMyIssueHashesList());,if (WebCloudProtoUtil != null ) List<String> hashes = WebCloudProtoUtil.decodeHashes(loginMsg.getMyIssueHashesList());
QueryServlet.java,FindIssuesResponse.Builder issueProtos = FindIssuesResponse.newBuilder();,if (FindIssuesResponse != null ) FindIssuesResponse.Builder issueProtos = FindIssuesResponse.newBuilder();
QueryServlet.java,Builder issueBuilder = Issue.newBuilder();,if (Issue != null ) Builder issueBuilder = Issue.newBuilder();
QueryServlet.java,Issue protoIssue = issueBuilder.build();,if (issueBuilder != null ) Issue protoIssue = issueBuilder.build();
QueryServlet.java,GetRecentEvaluations recentEvalsRequest = GetRecentEvaluations.parseFrom(req.getInputStream());,if (GetRecentEvaluations != null ) GetRecentEvaluations recentEvalsRequest = GetRecentEvaluations.parseFrom(req.getInputStream());
QueryServlet.java,Query query = pm.newQuery();,if (pm != null ) Query query = pm.newQuery();
QueryServlet.java,List<DbEvaluation> evaluations = (List<DbEvaluation>) query.execute();,if (query != null ) List<DbEvaluation> evaluations = (List<DbEvaluation>) query.execute();
QueryServlet.java,int resultCount = evaluations.size();,if (evaluations != null ) int resultCount = evaluations.size();
QueryServlet.java,RecentEvaluations.Builder issueProtos = RecentEvaluations.newBuilder();,if (RecentEvaluations != null ) RecentEvaluations.Builder issueProtos = RecentEvaluations.newBuilder();
QueryServlet.java,Iterator<DbEvaluation> iterator = evaluations.iterator();,if (evaluations != null ) Iterator<DbEvaluation> iterator = evaluations.iterator();
QueryServlet.java,String appName = loginMsg.getAppName();,if (loginMsg != null ) String appName = loginMsg.getAppName();
QueryServlet.java,String appVer = loginMsg.getAppVersion();,if (loginMsg != null ) String appVer = loginMsg.getAppVersion();
QueryServlet.java,String fbVersion = loginMsg.getFindbugsVersion();,if (loginMsg != null ) String fbVersion = loginMsg.getFindbugsVersion();
QueryServlet.java,Transaction tx = pm.currentTransaction();,if (pm != null ) Transaction tx = pm.currentTransaction();
QueryServlet.java,Calendar cal = Calendar.getInstance();,if (Calendar != null ) Calendar cal = Calendar.getInstance();
QueryServlet.java,String linkType = dbIssue.getBugLinkType();,if (dbIssue != null ) String linkType = dbIssue.getBugLinkType();
QueryServlet.java,String linkType = dbIssue.getBugLinkType();,if (dbIssue != null ) String linkType = dbIssue.getBugLinkType();
QueryServlet.java,Iterator<DbEvaluation> iterator = evaluations.iterator();,if (evaluations != null ) Iterator<DbEvaluation> iterator = evaluations.iterator();
QueryServlet.java,DbEvaluation dbEvaluation = iterator.next();,if (iterator != null ) DbEvaluation dbEvaluation = iterator.next();
QueryServlet.java,String issueHash = dbEvaluation.getIssue().getHash();,if (dbEvaluation != null ) String issueHash = dbEvaluation.getIssue().getHash();
QueryServlet.java,DbEvaluation eval = it.next();,if (it != null ) DbEvaluation eval = it.next();
ReportServlet.java,String uri = req.getRequestURI();,if (req != null ) String uri = req.getRequestURI();
ReportServlet.java,List<DbEvaluation> evals = (List<DbEvaluation>) query.execute();,if (query != null ) List<DbEvaluation> evals = (List<DbEvaluation>) query.execute();
ReportServlet.java,Set<String> seenIssues = Sets.newHashSet();,if (Sets != null ) Set<String> seenIssues = Sets.newHashSet();
ReportServlet.java,Set<String> seenUsers = Sets.newHashSet();,if (Sets != null ) Set<String> seenUsers = Sets.newHashSet();
ReportServlet.java,String email = eval.getEmail();,if (eval != null ) String email = eval.getEmail();
ReportServlet.java,long beginningOfWeek = getBeginningOfWeekInMillis(eval.getWhen());,if (getBeginningOfWeekInMillis(eval != null ) long beginningOfWeek = getBeginningOfWeekInMillis(eval.getWhen());
ReportServlet.java,String issueHash = eval.getIssue().getHash();,if (eval != null ) String issueHash = eval.getIssue().getHash();
ReportServlet.java,String pkg = getPackageName(eval.getPrimaryClass());,if (getPackageName(eval != null ) String pkg = getPackageName(eval.getPrimaryClass());
ReportServlet.java,Set<String> seenIssues = Sets.newHashSet();,if (Sets != null ) Set<String> seenIssues = Sets.newHashSet();
ReportServlet.java,List<String> lines = Lists.newArrayList();,if (Lists != null ) List<String> lines = Lists.newArrayList();
ReportServlet.java,String epkg = getPackageName(eval.getPrimaryClass());,if (getPackageName(eval != null ) String epkg = getPackageName(eval.getPrimaryClass());
ReportServlet.java,long beginningOfWeek = getBeginningOfWeekInMillis(eval.getWhen());,if (getBeginningOfWeekInMillis(eval != null ) long beginningOfWeek = getBeginningOfWeekInMillis(eval.getWhen());
ReportServlet.java,String issueHash = eval.getIssue().getHash();,if (eval != null ) String issueHash = eval.getIssue().getHash();
ReportServlet.java,ServletOutputStream page = resp.getOutputStream();,if (resp != null ) ServletOutputStream page = resp.getOutputStream();
ReportServlet.java,ServletOutputStream page = resp.getOutputStream();,if (resp != null ) ServletOutputStream page = resp.getOutputStream();
ReportServlet.java,Set<String> alreadyPrinted = Sets.newHashSet();,if (Sets != null ) Set<String> alreadyPrinted = Sets.newHashSet();
ReportServlet.java,x += entry.getValue();,if (entry != null ) x += entry.getValue();
ReportServlet.java,Set<String> seenIssues = Sets.newHashSet();,if (Sets != null ) Set<String> seenIssues = Sets.newHashSet();
ReportServlet.java,List<String> table = Lists.newArrayList();,if (Lists != null ) List<String> table = Lists.newArrayList();
ReportServlet.java,long beginningOfWeek = getBeginningOfWeekInMillis(eval.getWhen());,if (getBeginningOfWeekInMillis(eval != null ) long beginningOfWeek = getBeginningOfWeekInMillis(eval.getWhen());
ReportServlet.java,ServletOutputStream page = resp.getOutputStream();,if (resp != null ) ServletOutputStream page = resp.getOutputStream();
ReportServlet.java,ServletOutputStream page = resp.getOutputStream();,if (resp != null ) ServletOutputStream page = resp.getOutputStream();
ReportServlet.java,List<DbUser> userObjs = (List<DbUser>) userQuery.execute();,if (userQuery != null ) List<DbUser> userObjs = (List<DbUser>) userQuery.execute();
ReportServlet.java,Set<String> users = Sets.newHashSet();,if (Sets != null ) Set<String> users = Sets.newHashSet();
ReportServlet.java,int maxEvalsPerWeek = Collections.max(evalsPerWeek.values());,if (Collections != null ) int maxEvalsPerWeek = Collections.max(evalsPerWeek.values());
ReportServlet.java,List<Double> evalsData = Lists.newArrayList();,if (Lists != null ) List<Double> evalsData = Lists.newArrayList();
ReportServlet.java,List<String> labels = Lists.newArrayList();,if (Lists != null ) List<String> labels = Lists.newArrayList();
ReportServlet.java,List<Double> newIssuesData = Lists.newArrayList();,if (Lists != null ) List<Double> newIssuesData = Lists.newArrayList();
ReportServlet.java,Integer evalsThisWeek = evalsPerWeek.get(cal.getTimeInMillis());,if (evalsPerWeek != null ) Integer evalsThisWeek = evalsPerWeek.get(cal.getTimeInMillis());
ReportServlet.java,Integer newIssuesThisWeek = newIssuesByWeek.get(cal.getTimeInMillis());,if (newIssuesByWeek != null ) Integer newIssuesThisWeek = newIssuesByWeek.get(cal.getTimeInMillis());
ReportServlet.java,ServletOutputStream page = resp.getOutputStream();,if (resp != null ) ServletOutputStream page = resp.getOutputStream();
ReportServlet.java,ServletOutputStream page = resp.getOutputStream();,if (resp != null ) ServletOutputStream page = resp.getOutputStream();
ReportServlet.java,List<Double> histogramData = Lists.newArrayList();,if (Lists != null ) List<Double> histogramData = Lists.newArrayList();
ReportServlet.java,int maxEvaluators = Collections.max(issuesPerEvaluatorCount.keySet());,if (Collections != null ) int maxEvaluators = Collections.max(issuesPerEvaluatorCount.keySet());
ReportServlet.java,int maxIssues = Collections.max(issuesPerEvaluatorCount.values());,if (Collections != null ) int maxIssues = Collections.max(issuesPerEvaluatorCount.values());
ReportServlet.java,List<String> barLabels = Lists.newArrayList();,if (Lists != null ) List<String> barLabels = Lists.newArrayList();
ReportServlet.java,int maxEvalsPerWeek = Collections.max(evalsByWeek.values());,if (Collections != null ) int maxEvalsPerWeek = Collections.max(evalsByWeek.values());
ReportServlet.java,List<Double> newIssuesData = Lists.newArrayList();,if (Lists != null ) List<Double> newIssuesData = Lists.newArrayList();
ReportServlet.java,List<String> timelineLabels = Lists.newArrayList();,if (Lists != null ) List<String> timelineLabels = Lists.newArrayList();
ReportServlet.java,Integer evalsThisWeek = evalsByWeek.get(cal.getTimeInMillis());,if (evalsByWeek != null ) Integer evalsThisWeek = evalsByWeek.get(cal.getTimeInMillis());
ReportServlet.java,Integer issuesThisWeek = issueCountByWeek.get(cal.getTimeInMillis());,if (issueCountByWeek != null ) Integer issuesThisWeek = issueCountByWeek.get(cal.getTimeInMillis());
ReportServlet.java,Integer usersThisWeek = userCountByWeek.get(cal.getTimeInMillis());,if (userCountByWeek != null ) Integer usersThisWeek = userCountByWeek.get(cal.getTimeInMillis());
ReportServlet.java,int totalUsers = Collections.max(userCountByWeek.values());,if (Collections != null ) int totalUsers = Collections.max(userCountByWeek.values());
ReportServlet.java,List<Double> issuesData = Lists.newArrayList();,if (Lists != null ) List<Double> issuesData = Lists.newArrayList();
ReportServlet.java,List<Double> evalsData = Lists.newArrayList();,if (Lists != null ) List<Double> evalsData = Lists.newArrayList();
ReportServlet.java,List<Double> usersData = Lists.newArrayList();,if (Lists != null ) List<Double> usersData = Lists.newArrayList();
ReportServlet.java,List<String> labels = Lists.newArrayList();,if (Lists != null ) List<String> labels = Lists.newArrayList();
ReportServlet.java,long time = cal.getTimeInMillis();,if (cal != null ) long time = cal.getTimeInMillis();
ReportServlet.java,Calendar cal = Calendar.getInstance();,if (Calendar != null ) Calendar cal = Calendar.getInstance();
ReportServlet.java,Calendar cal = Calendar.getInstance();,if (Calendar != null ) Calendar cal = Calendar.getInstance();
ReportServlet.java,final long first = cal.getTimeInMillis();,if (cal != null ) final long first = cal.getTimeInMillis();
ReportServlet.java,private Calendar cal = Calendar.getInstance();,if (Calendar != null ) private Calendar cal = Calendar.getInstance();
ReportServlet.java,Calendar toReturn = (Calendar) cal.clone();,if (cal != null ) Calendar toReturn = (Calendar) cal.clone();
ReportServlet.java,Calendar cal = Calendar.getInstance();,if (Calendar != null ) Calendar cal = Calendar.getInstance();
ReportServlet.java,Calendar weekCal = Calendar.getInstance();,if (Calendar != null ) Calendar weekCal = Calendar.getInstance();
ReportServlet.java,List<String> labels = Lists.newArrayList();,if (Lists != null ) List<String> labels = Lists.newArrayList();
ReportServlet.java,List<Double> evalsData = Lists.newArrayList();,if (Lists != null ) List<Double> evalsData = Lists.newArrayList();
ReportServlet.java,List<Double> issuesData = Lists.newArrayList();,if (Lists != null ) List<Double> issuesData = Lists.newArrayList();
ReportServlet.java,int maxPerPkg = Collections.max(evalCountByPkg.values());,if (Collections != null ) int maxPerPkg = Collections.max(evalCountByPkg.values());
ReportServlet.java,List<String> labels = Lists.newArrayList();,if (Lists != null ) List<String> labels = Lists.newArrayList();
ReportServlet.java,List<Double> totals = Lists.newArrayList();,if (Lists != null ) List<Double> totals = Lists.newArrayList();
ReportServlet.java,List<Double> issues = Lists.newArrayList();,if (Lists != null ) List<Double> issues = Lists.newArrayList();
ReportServlet.java,int max = Collections.max(totalCountByUser.values());,if (Collections != null ) int max = Collections.max(totalCountByUser.values());
ReportServlet.java,String email = entry.getKey();,if (entry != null ) String email = entry.getKey();
ReportServlet.java,int evalCount = entry.getValue();,if (entry != null ) int evalCount = entry.getValue();
UpdateServlet.java,Set<String> list = Sets.newHashSet();,if (Sets != null ) Set<String> list = Sets.newHashSet();
UpdateServlet.java,List<DbIssue> issues = (List<DbIssue>) iq.execute();,if (iq != null ) List<DbIssue> issues = (List<DbIssue>) iq.execute();
UpdateServlet.java,Transaction tx = pm.currentTransaction();,if (pm != null ) Transaction tx = pm.currentTransaction();
UpdateServlet.java,Transaction tx = pm.currentTransaction();,if (pm != null ) Transaction tx = pm.currentTransaction();
UpdateServlet.java,UpdateIssueTimestamps issues = UpdateIssueTimestamps.parseFrom(req.getInputStream());,if (UpdateIssueTimestamps != null ) UpdateIssueTimestamps issues = UpdateIssueTimestamps.parseFrom(req.getInputStream());
UpdateServlet.java,long newFirstSeen = issueGroup.getTimestamp();,if (issueGroup != null ) long newFirstSeen = issueGroup.getTimestamp();
UpdateServlet.java,long storedFirstSeen = issue.getFirstSeen();,if (issue != null ) long storedFirstSeen = issue.getFirstSeen();
UpdateServlet.java,Transaction tx = pm.currentTransaction();,if (pm != null ) Transaction tx = pm.currentTransaction();
UpdateServlet.java,deleted = persistenceHelper.clearAllData();,if (persistenceHelper != null ) deleted = persistenceHelper.clearAllData();
UpdateServlet.java,UploadIssues issues = UploadIssues.parseFrom(req.getInputStream());,if (UploadIssues != null ) UploadIssues issues = UploadIssues.parseFrom(req.getInputStream());
UpdateServlet.java,String token = issues.getToken();,if (issues != null ) String token = issues.getToken();
UpdateServlet.java,DbUser user = users.iterator().next();,if (users != null ) DbUser user = users.iterator().next();
UpdateServlet.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
UpdateServlet.java,String hashStr = WebCloudProtoUtil.decodeHash(issue.getHash());,if (WebCloudProtoUtil != null ) String hashStr = WebCloudProtoUtil.decodeHash(issue.getHash());
UpdateServlet.java,start = System.currentTimeMillis();,if (System != null ) start = System.currentTimeMillis();
UpdateServlet.java,UploadEvaluation uploadEvalMsg = UploadEvaluation.parseFrom(req.getInputStream());,if (UploadEvaluation != null ) UploadEvaluation uploadEvalMsg = UploadEvaluation.parseFrom(req.getInputStream());
UpdateServlet.java,DbEvaluation dbEvaluation = createDbEvaluation(uploadEvalMsg.getEvaluation());,if (createDbEvaluation(uploadEvalMsg != null ) DbEvaluation dbEvaluation = createDbEvaluation(uploadEvalMsg.getEvaluation());
UpdateServlet.java,Transaction tx = pm.currentTransaction();,if (pm != null ) Transaction tx = pm.currentTransaction();
UpdateServlet.java,String hash = WebCloudProtoUtil.decodeHash(uploadEvalMsg.getHash());,if (WebCloudProtoUtil != null ) String hash = WebCloudProtoUtil.decodeHash(uploadEvalMsg.getHash());
UpdateServlet.java,SetBugLink setBugLinkMsg = SetBugLink.parseFrom(req.getInputStream());,if (SetBugLink != null ) SetBugLink setBugLinkMsg = SetBugLink.parseFrom(req.getInputStream());
UpdateServlet.java,Transaction tx = pm.currentTransaction();,if (pm != null ) Transaction tx = pm.currentTransaction();
UpdateServlet.java,String decodedHash = WebCloudProtoUtil.decodeHash(setBugLinkMsg.getHash());,if (WebCloudProtoUtil != null ) String decodedHash = WebCloudProtoUtil.decodeHash(setBugLinkMsg.getHash());
UpdateServlet.java,Transaction tx = pm.currentTransaction();,if (pm != null ) Transaction tx = pm.currentTransaction();
UpdateServlet.java,DbIssue dbIssue = persistenceHelper.createDbIssue();,if (persistenceHelper != null ) DbIssue dbIssue = persistenceHelper.createDbIssue();
UpdateServlet.java,Object invocationKey = session.getInvocation();,if (session != null ) Object invocationKey = session.getInvocation();
UpdateServlet.java,DbEvaluation dbEvaluation = persistenceHelper.createDbEvaluation();,if (persistenceHelper != null ) DbEvaluation dbEvaluation = persistenceHelper.createDbEvaluation();
WebPageServlet.java,PrintWriter out = resp.getWriter();,if (resp != null ) PrintWriter out = resp.getWriter();
WebPageServlet.java,PrintWriter out = resp.getWriter();,if (resp != null ) PrintWriter out = resp.getWriter();
AbstractFlybushCloudServletTest.java,user = results.iterator().next();,if (results != null ) user = results.iterator().next();
AbstractFlybushCloudServletTest.java,DbEvaluation eval = persistenceHelper.createDbEvaluation();,if (persistenceHelper != null ) DbEvaluation eval = persistenceHelper.createDbEvaluation();
AbstractFlybushCloudServletTest.java,DbIssue foundIssue = persistenceHelper.createDbIssue();,if (persistenceHelper != null ) DbIssue foundIssue = persistenceHelper.createDbIssue();
AuthServletTest.java,FindIssuesResponse result = FindIssuesResponse.parseFrom(outputCollector.toByteArray());,if (FindIssuesResponse != null ) FindIssuesResponse result = FindIssuesResponse.parseFrom(outputCollector.toByteArray());
AuthServletTest.java,FindIssuesResponse result = FindIssuesResponse.parseFrom(outputCollector.toByteArray());,if (FindIssuesResponse != null ) FindIssuesResponse result = FindIssuesResponse.parseFrom(outputCollector.toByteArray());
AuthServletTest.java,FindIssuesResponse result = FindIssuesResponse.parseFrom(outputCollector.toByteArray());,if (FindIssuesResponse != null ) FindIssuesResponse result = FindIssuesResponse.parseFrom(outputCollector.toByteArray());
AuthServletTest.java,List<DbInvocation> invocations = (List<DbInvocation>) query.execute();,if (query != null ) List<DbInvocation> invocations = (List<DbInvocation>) query.execute();
QueryServletTest.java,RecentEvaluations result = RecentEvaluations.parseFrom(outputCollector.toByteArray());,if (RecentEvaluations != null ) RecentEvaluations result = RecentEvaluations.parseFrom(outputCollector.toByteArray());
QueryServletTest.java,RecentEvaluations result = RecentEvaluations.parseFrom(outputCollector.toByteArray());,if (RecentEvaluations != null ) RecentEvaluations result = RecentEvaluations.parseFrom(outputCollector.toByteArray());
QueryServletTest.java,RecentEvaluations result = RecentEvaluations.parseFrom(outputCollector.toByteArray());,if (RecentEvaluations != null ) RecentEvaluations result = RecentEvaluations.parseFrom(outputCollector.toByteArray());
QueryServletTest.java,RecentEvaluations result = RecentEvaluations.parseFrom(outputCollector.toByteArray());,if (RecentEvaluations != null ) RecentEvaluations result = RecentEvaluations.parseFrom(outputCollector.toByteArray());
QueryServletTest.java,FindIssues findIssues = createUnauthenticatedFindIssues(hashes).build();,if (createUnauthenticatedFindIssues(hashes) != null ) FindIssues findIssues = createUnauthenticatedFindIssues(hashes).build();
ReportServletTest.java,String page = outputCollector.toString();,if (outputCollector != null ) String page = outputCollector.toString();
ReportServletTest.java,List<DbIssue> issues = Lists.newArrayList();,if (Lists != null ) List<DbIssue> issues = Lists.newArrayList();
UpdateServletTest.java,DbEvaluation evalA = persistenceHelper.createDbEvaluation();,if (persistenceHelper != null ) DbEvaluation evalA = persistenceHelper.createDbEvaluation();
UpdateServletTest.java,DbEvaluation evalB = persistenceHelper.createDbEvaluation();,if (persistenceHelper != null ) DbEvaluation evalB = persistenceHelper.createDbEvaluation();
UpdateServletTest.java,Object invocationId = dbEval.getInvocationKey();,if (dbEval != null ) Object invocationId = dbEval.getInvocationKey();
UpdateServletTest.java,String dbBugLink = issue.getBugLink();,if (issue != null ) String dbBugLink = issue.getBugLink();
UpdateServletTest.java,String dbBugLinkType = issue.getBugLinkType();,if (issue != null ) String dbBugLinkType = issue.getBugLinkType();
UpdateServletTest.java,Issue.Builder issueBuilder = Issue.newBuilder();,if (Issue != null ) Issue.Builder issueBuilder = Issue.newBuilder();
WebPageServletTest.java,String response = outputCollector.toString();,if (outputCollector != null ) String response = outputCollector.toString();
WebPageServletTest.java,String response = outputCollector.toString();,if (outputCollector != null ) String response = outputCollector.toString();
WebPageServletTest.java,String response = outputCollector.toString();,if (outputCollector != null ) String response = outputCollector.toString();
WebPageServletTest.java,String response = outputCollector.toString();,if (outputCollector != null ) String response = outputCollector.toString();
WebPageServletTest.java,String response = outputCollector.toString();,if (outputCollector != null ) String response = outputCollector.toString();
AbstractFlybushServlet.java,ServletContext servletContext = config.getServletContext();,if (config != null ) ServletContext servletContext = config.getServletContext();
AbstractFlybushServlet.java,String uri = req.getRequestURI();,if (req != null ) String uri = req.getRequestURI();
AbstractFlybushServletTest.java,persistenceHelper = testHelper.createPersistenceHelper(testHelper.getPersistenceManager());,if (testHelper != null ) persistenceHelper = testHelper.createPersistenceHelper(testHelper.getPersistenceManager());
UpdateCheckServlet.java,final DbUsageEntry entry = persistenceHelper.createDbUsageEntry();,if (persistenceHelper != null ) final DbUsageEntry entry = persistenceHelper.createDbUsageEntry();
UpdateCheckServlet.java,List<DbPluginUpdateXml> results = (List<DbPluginUpdateXml>) query.execute();,if (query != null ) List<DbPluginUpdateXml> results = (List<DbPluginUpdateXml>) query.execute();
UpdateCheckServlet.java,String pluginId = result.getPluginId();,if (result != null ) String pluginId = result.getPluginId();
UpdateCheckServlet.java,String javaVersion = found.getJavaVersion();,if (found != null ) String javaVersion = found.getJavaVersion();
UpdateCheckServlet.java,String userChannel = found.getPluginChannel();,if (found != null ) String userChannel = found.getPluginChannel();
UpdateCheckServlet.java,String pluginVersion = found.getPluginVersion();,if (found != null ) String pluginVersion = found.getPluginVersion();
UpdateCheckServlet.java,pluginVersion = pluginVersion.trim();,if (pluginVersion != null ) pluginVersion = pluginVersion.trim();
UpdateCheckServlet.java,String newPluginId = result.getPluginId();,if (result != null ) String newPluginId = result.getPluginId();
UpdateCheckServlet.java,String channel = result.getChannel();,if (result != null ) String channel = result.getChannel();
UpdateCheckServlet.java,Date releaseDate = result.getReleaseDate();,if (result != null ) Date releaseDate = result.getReleaseDate();
UpdateCheckServlet.java,String version = result.getVersion();,if (result != null ) String version = result.getVersion();
UpdateCheckServlet.java,String message = result.getMessage();,if (result != null ) String message = result.getMessage();
UpdateCheckServlet.java,List<DbUsageEntry> entries = Lists.newArrayList();,if (Lists != null ) List<DbUsageEntry> entries = Lists.newArrayList();
UpdateCheckServlet.java,DbUsageEntry pluginEntry = entry.copy();,if (entry != null ) DbUsageEntry pluginEntry = entry.copy();
UpdateCheckServlet.java,Query query = pm.newQuery();,if (pm != null ) Query query = pm.newQuery();
UsageConsolidatorServlet.java,String uri = req.getRequestURI();,if (req != null ) String uri = req.getRequestURI();
UsageConsolidatorServlet.java,Calendar cal = Calendar.getInstance();,if (Calendar != null ) Calendar cal = Calendar.getInstance();
UsageConsolidatorServlet.java,int version = ventry.getValue();,if (ventry != null ) int version = ventry.getValue();
UsageConsolidatorServlet.java,Calendar cal = Calendar.getInstance();,if (Calendar != null ) Calendar cal = Calendar.getInstance();
UsageConsolidatorServlet.java,Calendar hr = (Calendar) cal.clone();,if (cal != null ) Calendar hr = (Calendar) cal.clone();
UsageConsolidatorServlet.java,Calendar end = (Calendar) hr.clone();,if (hr != null ) Calendar end = (Calendar) hr.clone();
UsageConsolidatorServlet.java,Calendar cal = Calendar.getInstance();,if (Calendar != null ) Calendar cal = Calendar.getInstance();
UsageDataConsolidator.java,DbUsageSummary entry = persistenceHelper.createDbUsageSummary();,if (persistenceHelper != null ) DbUsageSummary entry = persistenceHelper.createDbUsageSummary();
UsageDataConsolidator.java,String uuidStr = entry.getUuid();,if (entry != null ) String uuidStr = entry.getUuid();
UsageDataConsolidator.java,String pluginFqn = entry.getPlugin();,if (entry != null ) String pluginFqn = entry.getPlugin();
UsageDataConsolidator.java,String pluginVersion = entry.getPluginVersion();,if (entry != null ) String pluginVersion = entry.getPluginVersion();
UsageDataConsolidator.java,String country = entry.getCountry();,if (entry != null ) String country = entry.getCountry();
UsageDataConsolidator.java,String language = entry.getLanguage();,if (entry != null ) String language = entry.getLanguage();
UsageDataConsolidator.java,String categoryKey = summary.getCategoryKey();,if (summary != null ) String categoryKey = summary.getCategoryKey();
UsageDataConsolidator.java,Collection<String> list = Lists.newArrayList();,if (Lists != null ) Collection<String> list = Lists.newArrayList();
UsageDataConsolidator.java,String hostAddress = InetAddress.getByAddress(addr).getHostAddress();,if (InetAddress != null ) String hostAddress = InetAddress.getByAddress(addr).getHostAddress();
UsageDataConsolidator.java,List<Long> list = Lists.newArrayList();,if (Lists != null ) List<Long> list = Lists.newArrayList();
UsageDataConsolidator.java,long[] longs = (long[]) stream.readObject();,if (stream != null ) long[] longs = (long[]) stream.readObject();
UsageDataConsolidator.java,Set<DbUsageSummary> list = Sets.newHashSet();,if (Sets != null ) Set<DbUsageSummary> list = Sets.newHashSet();
UsageReportServlet.java,String uri = req.getRequestURI();,if (req != null ) String uri = req.getRequestURI();
UsageReportServlet.java,SortedSet<DbUsageSummary> summaries = Sets.newTreeSet();,if (Sets != null ) SortedSet<DbUsageSummary> summaries = Sets.newTreeSet();
UsageReportServlet.java,long time = summary.getDate().getTime();,if (summary != null ) long time = summary.getDate().getTime();
UsageReportServlet.java,int value = summary.getValue();,if (summary != null ) int value = summary.getValue();
UsageReportServlet.java,String version = summary.getCategoryKey();,if (summary != null ) String version = summary.getCategoryKey();
UsageReportServlet.java,String pkg = summary.getCategoryKey();,if (summary != null ) String pkg = summary.getCategoryKey();
UsageReportServlet.java,Calendar cal = Calendar.getInstance();,if (Calendar != null ) Calendar cal = Calendar.getInstance();
UsageReportServlet.java,double max = Collections.max(uuidsByPlugin.values());,if (Collections != null ) double max = Collections.max(uuidsByPlugin.values());
UsageReportServlet.java,List<Double> data = Lists.newArrayList();,if (Lists != null ) List<Double> data = Lists.newArrayList();
UsageReportServlet.java,List<String> labels = Lists.newArrayList();,if (Lists != null ) List<String> labels = Lists.newArrayList();
UsageReportServlet.java,int val = entry.getValue();,if (entry != null ) int val = entry.getValue();
UsageReportServlet.java,total += entry.getValue();,if (entry != null ) total += entry.getValue();
UsageReportServlet.java,Calendar cal = Calendar.getInstance();,if (Calendar != null ) Calendar cal = Calendar.getInstance();
UsageReportServlet.java,ServletOutputStream page = resp.getOutputStream();,if (resp != null ) ServletOutputStream page = resp.getOutputStream();
UsageReportServlet.java,int maxUsersPerDay = Collections.max(firstByDay.values());,if (Collections != null ) int maxUsersPerDay = Collections.max(firstByDay.values());
UsageReportServlet.java,int maxIpsPerDay = Collections.max(firstByDay.values());,if (Collections != null ) int maxIpsPerDay = Collections.max(firstByDay.values());
UsageReportServlet.java,List<String> timelineLabels = Lists.newArrayList();,if (Lists != null ) List<String> timelineLabels = Lists.newArrayList();
UsageReportServlet.java,Integer usersThisWeek = firstByDay.get(cal.getTimeInMillis());,if (firstByDay != null ) Integer usersThisWeek = firstByDay.get(cal.getTimeInMillis());
UsageReportServlet.java,Integer ipsThisWeek = secondByDay.get(cal.getTimeInMillis());,if (secondByDay != null ) Integer ipsThisWeek = secondByDay.get(cal.getTimeInMillis());
UsageReportServlet.java,int maxPerDay = Collections.max(byDayCounts.values());,if (Collections != null ) int maxPerDay = Collections.max(byDayCounts.values());
UsageReportServlet.java,List<String> timelineLabels = Lists.newArrayList();,if (Lists != null ) List<String> timelineLabels = Lists.newArrayList();
UsageReportServlet.java,Integer usersThisWeek = byDayCounts.get(cal.getTimeInMillis());,if (byDayCounts != null ) Integer usersThisWeek = byDayCounts.get(cal.getTimeInMillis());
UsageReportServlet.java,Calendar cal = Calendar.getInstance();,if (Calendar != null ) Calendar cal = Calendar.getInstance();
UsageReportServlet.java,final long first = cal.getTimeInMillis();,if (cal != null ) final long first = cal.getTimeInMillis();
UsageReportServlet.java,private Calendar cal = Calendar.getInstance();,if (Calendar != null ) private Calendar cal = Calendar.getInstance();
UsageReportServlet.java,Calendar toReturn = (Calendar) cal.clone();,if (cal != null ) Calendar toReturn = (Calendar) cal.clone();
XmlUploadServlet.java,DbPluginUpdateXml update = persistenceHelper.createPluginUpdateXml();,if (persistenceHelper != null ) DbPluginUpdateXml update = persistenceHelper.createPluginUpdateXml();
UpdateCheckServletTest.java,List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();,if (query != null ) List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();
UpdateCheckServletTest.java,List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();,if (query != null ) List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();
UpdateCheckServletTest.java,List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();,if (query != null ) List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();
UpdateCheckServletTest.java,List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();,if (query != null ) List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();
UpdateCheckServletTest.java,List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();,if (query != null ) List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();
UpdateCheckServletTest.java,List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();,if (query != null ) List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();
UpdateCheckServletTest.java,List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();,if (query != null ) List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();
UpdateCheckServletTest.java,List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();,if (query != null ) List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();
UpdateCheckServletTest.java,List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();,if (query != null ) List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();
UpdateCheckServletTest.java,List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();,if (query != null ) List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();
UpdateCheckServletTest.java,List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();,if (query != null ) List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();
UpdateCheckServletTest.java,DateFormat df = DateFormat.getDateTimeInstance();,if (DateFormat != null ) DateFormat df = DateFormat.getDateTimeInstance();
UpdateCheckServletTest.java,DbPluginUpdateXml update = persistenceHelper.createPluginUpdateXml();,if (persistenceHelper != null ) DbPluginUpdateXml update = persistenceHelper.createPluginUpdateXml();
UpdateCheckServletTest.java,List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();,if (query != null ) List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();
UnionBugs.java,FileChannel inChannel = new FileInputStream(in).getChannel();,if (FileInputStream(in) != null ) FileChannel inChannel = new FileInputStream(in).getChannel();
UnionBugs.java,FileChannel outChannel = new FileOutputStream(out).getChannel();,if (FileOutputStream(out) != null ) FileChannel outChannel = new FileOutputStream(out).getChannel();
SuppressionDecorator.java,String s = in.readLine();,if (in != null ) String s = in.readLine();
OpcodeStack.java,XMethod xMethod = dbc.getXMethod();,if (dbc != null ) XMethod xMethod = dbc.getXMethod();
ClassParserUsingASM.java,int numArg = new SignatureParser(methodDesc).getNumParameters();,if (SignatureParser(methodDesc) != null ) int numArg = new SignatureParser(methodDesc).getNumParameters();
ClassParserUsingASM.java,MethodInfo methodInfo = mBuilder.build();,if (mBuilder != null ) MethodInfo methodInfo = mBuilder.build();
AbstractSwingGuiCallback.java,ProgressMonitor pm = pmin.getProgressMonitor();,if (pmin != null ) ProgressMonitor pm = pmin.getProgressMonitor();
AbstractSwingGuiCallback.java,JComponent field = item.getField();,if (item != null ) JComponent field = item.getField();
AbstractSwingGuiCallback.java,String value = (String) box.getSelectedItem();,if (box != null ) String value = (String) box.getSelectedItem();
AbstractSwingGuiCallback.java,JComponent field = item.getField();,if (item != null ) JComponent field = item.getField();
AbstractSwingGuiCallback.java,List<String> newPossibleValues = item.getPossibleValues();,if (item != null ) List<String> newPossibleValues = item.getPossibleValues();
AbstractSwingGuiCallback.java,MutableComboBoxModel mmodel = (MutableComboBoxModel) box.getModel();,if (box != null ) MutableComboBoxModel mmodel = (MutableComboBoxModel) box.getModel();
AbstractSwingGuiCallback.java,String defaultValue = item.getDefaultValue();,if (item != null ) String defaultValue = item.getDefaultValue();
AbstractSwingGuiCallback.java,String defaultValue = item.getDefaultValue();,if (item != null ) String defaultValue = item.getDefaultValue();
AbstractSwingGuiCallback.java,String defaultValue = item.getDefaultValue();,if (item != null ) String defaultValue = item.getDefaultValue();
CloudCommentsPane.java,int mask = Toolkit.getDefaultToolkit().getMenuShortcutKeyMask();,if (Toolkit != null ) int mask = Toolkit.getDefaultToolkit().getMenuShortcutKeyMask();
CloudCommentsPane.java,int selectedIndex = designationCombo.getSelectedIndex();,if (designationCombo != null ) int selectedIndex = designationCombo.getSelectedIndex();
CloudCommentsPane.java,String text = commentBox.getText();,if (commentBox != null ) String text = commentBox.getText();
CloudCommentsPane.java,SigninState state = cloud.getSigninState();,if (cloud != null ) SigninState state = cloud.getSigninState();
CloudCommentsPane.java,CommentInfo commentInfo = new CommentInfo().invoke();,if (CommentInfo() != null ) CommentInfo commentInfo = new CommentInfo().invoke();
CloudCommentsPane.java,boolean sameText = commentInfo.isSameText();,if (commentInfo != null ) boolean sameText = commentInfo.isSameText();
CloudCommentsPane.java,String txt = commentInfo.getTxt();,if (commentInfo != null ) String txt = commentInfo.getTxt();
CloudCommentsPane.java,int start = commentBox.getSelectionStart();,if (commentBox != null ) int start = commentBox.getSelectionStart();
CloudCommentsPane.java,int end = commentBox.getSelectionEnd();,if (commentBox != null ) int end = commentBox.getSelectionEnd();
CloudCommentsPane.java,String text = commentBox.getText();,if (commentBox != null ) String text = commentBox.getText();
CloudCommentsPane.java,String oldValue = bug.getUserDesignationKey();,if (bug != null ) String oldValue = bug.getUserDesignationKey();
CloudCommentsPane.java,String comment = commentBox.getText();,if (commentBox != null ) String comment = commentBox.getText();
CloudCommentsPane.java,final int index = designationCombo.getSelectedIndex();,if (designationCombo != null ) final int index = designationCombo.getSelectedIndex();
CloudCommentsPane.java,choice = UserDesignation.UNCLASSIFIED.name();,if (UserDesignation != null ) choice = UserDesignation.UNCLASSIFIED.name();
CloudCommentsPane.java,String oldValue = bug.getUserDesignationKey();,if (bug != null ) String oldValue = bug.getUserDesignationKey();
CloudCommentsPane.java,final CloudPlugin plugin = cloud.getPlugin();,if (cloud != null ) final CloudPlugin plugin = cloud.getPlugin();
CloudCommentsPane.java,String details = plugin.getDetails();,if (plugin != null ) String details = plugin.getDetails();
CloudCommentsPane.java,lastSaved = bug.getUserTimestamp();,if (bug != null ) lastSaved = bug.getUserTimestamp();
CloudCommentsPane.java,CommentInfo commentInfo = new CommentInfo().invoke();,if (CommentInfo() != null ) CommentInfo commentInfo = new CommentInfo().invoke();
CloudCommentsPane.java,boolean sameText = commentInfo.isSameText();,if (commentInfo != null ) boolean sameText = commentInfo.isSameText();
CloudCommentsPane.java,String txt = commentInfo.getTxt();,if (commentInfo != null ) String txt = commentInfo.getTxt();
CloudCommentsPane.java,CardLayout cl = (CardLayout) (cards.getLayout());,if ((cards != null ) CardLayout cl = (CardLayout) (cards.getLayout());
CloudCommentsPane.java,CloudPlugin plugin = cloud.getPlugin();,if (cloud != null ) CloudPlugin plugin = cloud.getPlugin();
CloudCommentsPane.java,CommentInfo commentInfo = new CommentInfo().invoke();,if (CommentInfo() != null ) CommentInfo commentInfo = new CommentInfo().invoke();
CloudCommentsPane.java,boolean sameDesignation = commentInfo.isSameDesignation();,if (commentInfo != null ) boolean sameDesignation = commentInfo.isSameDesignation();
CloudCommentsPane.java,String designation = commentInfo.getDesignation();,if (commentInfo != null ) String designation = commentInfo.getDesignation();
CloudCommentsPane.java,String newText = bug.getAnnotationText();,if (bug != null ) String newText = bug.getAnnotationText();
CloudCommentsPane.java,String newDesignation = bug.getUserDesignationKey();,if (bug != null ) String newDesignation = bug.getUserDesignationKey();
PluginUpdateDialog.java,String url = update.getUrl();,if (update != null ) String url = update.getUrl();
PluginUpdateDialog.java,String msg = update.getMessage();,if (update != null ) String msg = update.getMessage();
PluginUpdateDialog.java,name = update.getPlugin().getShortDescription();,if (update != null ) name = update.getPlugin().getShortDescription();
PluginUpdateDialog.java,String url = update.getUrl();,if (update != null ) String url = update.getUrl();
WideComboBox.java,Dimension dim = super.getSize();,if (super != null ) Dimension dim = super.getSize();
DoNothingCloud.java,Date fromXml = b.getXmlProps().getFirstSeen();,if (b != null ) Date fromXml = b.getXmlProps().getFirstSeen();
DoNothingCloud.java,long fromXmlTime = fromXml.getTime();,if (fromXml != null ) long fromXmlTime = fromXml.getTime();
DoNothingCloud.java,String consensus = b.getXmlProps().getConsensus();,if (b != null ) String consensus = b.getXmlProps().getConsensus();
CloudCommentsPaneSwing.java,String thisid = plugin.getId();,if (plugin != null ) String thisid = plugin.getId();
UpdateCheckerTest.java,String urlStr = url.toString();,if (url != null ) String urlStr = url.toString();
AppEnginePersistenceHelper.java,DatastoreService ds = DatastoreServiceFactory.getDatastoreService();,if (DatastoreServiceFactory != null ) DatastoreService ds = DatastoreServiceFactory.getDatastoreService();
AppEnginePersistenceHelper.java,Queue queue = QueueFactory.getDefaultQueue();,if (QueueFactory != null ) Queue queue = QueueFactory.getDefaultQueue();
AppEnginePersistenceHelper.java,UserService userService = UserServiceFactory.getUserService();,if (UserServiceFactory != null ) UserService userService = UserServiceFactory.getUserService();
AppEnginePersistenceHelper.java,User user = userService.getCurrentUser();,if (userService != null ) User user = userService.getCurrentUser();
AppEngineDbUsageSummary.java,int compare = date.compareTo(o.getDate());,if (date != null ) int compare = date.compareTo(o.getDate());
AppEngineUsagePersistenceHelper.java,DatastoreService ds = DatastoreServiceFactory.getDatastoreService();,if (DatastoreServiceFactory != null ) DatastoreService ds = DatastoreServiceFactory.getDatastoreService();
AppEngineUsagePersistenceHelper.java,Queue queue = QueueFactory.getDefaultQueue();,if (QueueFactory != null ) Queue queue = QueueFactory.getDefaultQueue();
AppEngineUsagePersistenceHelper.java,UserService userService = UserServiceFactory.getUserService();,if (UserServiceFactory != null ) UserService userService = UserServiceFactory.getUserService();
AppEngineUsagePersistenceHelper.java,User user = userService.getCurrentUser();,if (userService != null ) User user = userService.getCurrentUser();
AppEngineUpdateTestHelper.java,actualPersistenceManager = pmf.getPersistenceManager();,if (pmf != null ) actualPersistenceManager = pmf.getPersistenceManager();
UpdateCheckServlet.java,final DbUsageEntry entry = persistenceHelper.createDbUsageEntry();,if (persistenceHelper != null ) final DbUsageEntry entry = persistenceHelper.createDbUsageEntry();
UpdateCheckServlet.java,List<DbPluginUpdateXml> results = (List<DbPluginUpdateXml>) query.execute();,if (query != null ) List<DbPluginUpdateXml> results = (List<DbPluginUpdateXml>) query.execute();
UpdateCheckServlet.java,String pluginId = result.getPluginId();,if (result != null ) String pluginId = result.getPluginId();
UpdateCheckServlet.java,String javaVersion = found.getJavaVersion();,if (found != null ) String javaVersion = found.getJavaVersion();
UpdateCheckServlet.java,String userChannel = found.getPluginChannel();,if (found != null ) String userChannel = found.getPluginChannel();
UpdateCheckServlet.java,String pluginVersion = found.getPluginVersion();,if (found != null ) String pluginVersion = found.getPluginVersion();
UpdateCheckServlet.java,String newPluginId = result.getPluginId();,if (result != null ) String newPluginId = result.getPluginId();
UpdateCheckServlet.java,String channel = result.getChannel();,if (result != null ) String channel = result.getChannel();
UpdateCheckServlet.java,Date releaseDate = result.getReleaseDate();,if (result != null ) Date releaseDate = result.getReleaseDate();
UpdateCheckServlet.java,String version = result.getVersion();,if (result != null ) String version = result.getVersion();
UpdateCheckServlet.java,String message = result.getMessage();,if (result != null ) String message = result.getMessage();
UpdateCheckServlet.java,List<DbUsageEntry> entries = Lists.newArrayList();,if (Lists != null ) List<DbUsageEntry> entries = Lists.newArrayList();
UpdateCheckServlet.java,DbUsageEntry pluginEntry = entry.copy();,if (entry != null ) DbUsageEntry pluginEntry = entry.copy();
UpdateCheckServlet.java,Query query = pm.newQuery();,if (pm != null ) Query query = pm.newQuery();
UsageConsolidatorServlet.java,String uri = req.getRequestURI();,if (req != null ) String uri = req.getRequestURI();
UsageConsolidatorServlet.java,Calendar cal = Calendar.getInstance();,if (Calendar != null ) Calendar cal = Calendar.getInstance();
UsageConsolidatorServlet.java,int version = ventry.getValue();,if (ventry != null ) int version = ventry.getValue();
UsageConsolidatorServlet.java,Calendar cal = Calendar.getInstance();,if (Calendar != null ) Calendar cal = Calendar.getInstance();
UsageConsolidatorServlet.java,Calendar hr = (Calendar) cal.clone();,if (cal != null ) Calendar hr = (Calendar) cal.clone();
UsageConsolidatorServlet.java,Calendar end = (Calendar) hr.clone();,if (hr != null ) Calendar end = (Calendar) hr.clone();
UsageConsolidatorServlet.java,Calendar cal = Calendar.getInstance();,if (Calendar != null ) Calendar cal = Calendar.getInstance();
UsageDataConsolidator.java,DbUsageSummary entry = persistenceHelper.createDbUsageSummary();,if (persistenceHelper != null ) DbUsageSummary entry = persistenceHelper.createDbUsageSummary();
UsageDataConsolidator.java,String uuidStr = entry.getUuid();,if (entry != null ) String uuidStr = entry.getUuid();
UsageDataConsolidator.java,String pluginFqn = entry.getPlugin();,if (entry != null ) String pluginFqn = entry.getPlugin();
UsageDataConsolidator.java,String pluginVersion = entry.getPluginVersion();,if (entry != null ) String pluginVersion = entry.getPluginVersion();
UsageDataConsolidator.java,String country = entry.getCountry();,if (entry != null ) String country = entry.getCountry();
UsageDataConsolidator.java,String language = entry.getLanguage();,if (entry != null ) String language = entry.getLanguage();
UsageDataConsolidator.java,String categoryKey = summary.getCategoryKey();,if (summary != null ) String categoryKey = summary.getCategoryKey();
UsageDataConsolidator.java,Collection<String> list = Lists.newArrayList();,if (Lists != null ) Collection<String> list = Lists.newArrayList();
UsageDataConsolidator.java,String hostAddress = InetAddress.getByAddress(addr).getHostAddress();,if (InetAddress != null ) String hostAddress = InetAddress.getByAddress(addr).getHostAddress();
UsageDataConsolidator.java,List<Long> list = Lists.newArrayList();,if (Lists != null ) List<Long> list = Lists.newArrayList();
UsageDataConsolidator.java,long[] longs = (long[]) stream.readObject();,if (stream != null ) long[] longs = (long[]) stream.readObject();
UsageDataConsolidator.java,Set<DbUsageSummary> list = Sets.newHashSet();,if (Sets != null ) Set<DbUsageSummary> list = Sets.newHashSet();
UsageReportServlet.java,String uri = req.getRequestURI();,if (req != null ) String uri = req.getRequestURI();
UsageReportServlet.java,SortedSet<DbUsageSummary> summaries = Sets.newTreeSet();,if (Sets != null ) SortedSet<DbUsageSummary> summaries = Sets.newTreeSet();
UsageReportServlet.java,long time = summary.getDate().getTime();,if (summary != null ) long time = summary.getDate().getTime();
UsageReportServlet.java,int value = summary.getValue();,if (summary != null ) int value = summary.getValue();
UsageReportServlet.java,String version = summary.getCategoryKey();,if (summary != null ) String version = summary.getCategoryKey();
UsageReportServlet.java,String pkg = summary.getCategoryKey();,if (summary != null ) String pkg = summary.getCategoryKey();
UsageReportServlet.java,Calendar cal = Calendar.getInstance();,if (Calendar != null ) Calendar cal = Calendar.getInstance();
UsageReportServlet.java,double max = Collections.max(uuidsByPlugin.values());,if (Collections != null ) double max = Collections.max(uuidsByPlugin.values());
UsageReportServlet.java,List<Double> data = Lists.newArrayList();,if (Lists != null ) List<Double> data = Lists.newArrayList();
UsageReportServlet.java,List<String> labels = Lists.newArrayList();,if (Lists != null ) List<String> labels = Lists.newArrayList();
UsageReportServlet.java,int val = entry.getValue();,if (entry != null ) int val = entry.getValue();
UsageReportServlet.java,total += entry.getValue();,if (entry != null ) total += entry.getValue();
UsageReportServlet.java,Calendar cal = Calendar.getInstance();,if (Calendar != null ) Calendar cal = Calendar.getInstance();
UsageReportServlet.java,ServletOutputStream page = resp.getOutputStream();,if (resp != null ) ServletOutputStream page = resp.getOutputStream();
UsageReportServlet.java,int maxUsersPerDay = Collections.max(firstByDay.values());,if (Collections != null ) int maxUsersPerDay = Collections.max(firstByDay.values());
UsageReportServlet.java,int maxIpsPerDay = Collections.max(firstByDay.values());,if (Collections != null ) int maxIpsPerDay = Collections.max(firstByDay.values());
UsageReportServlet.java,List<String> timelineLabels = Lists.newArrayList();,if (Lists != null ) List<String> timelineLabels = Lists.newArrayList();
UsageReportServlet.java,Integer usersThisWeek = firstByDay.get(cal.getTimeInMillis());,if (firstByDay != null ) Integer usersThisWeek = firstByDay.get(cal.getTimeInMillis());
UsageReportServlet.java,Integer ipsThisWeek = secondByDay.get(cal.getTimeInMillis());,if (secondByDay != null ) Integer ipsThisWeek = secondByDay.get(cal.getTimeInMillis());
UsageReportServlet.java,int maxPerDay = Collections.max(byDayCounts.values());,if (Collections != null ) int maxPerDay = Collections.max(byDayCounts.values());
UsageReportServlet.java,List<String> timelineLabels = Lists.newArrayList();,if (Lists != null ) List<String> timelineLabels = Lists.newArrayList();
UsageReportServlet.java,Integer usersThisWeek = byDayCounts.get(cal.getTimeInMillis());,if (byDayCounts != null ) Integer usersThisWeek = byDayCounts.get(cal.getTimeInMillis());
UsageReportServlet.java,Calendar cal = Calendar.getInstance();,if (Calendar != null ) Calendar cal = Calendar.getInstance();
UsageReportServlet.java,final long first = cal.getTimeInMillis();,if (cal != null ) final long first = cal.getTimeInMillis();
UsageReportServlet.java,private Calendar cal = Calendar.getInstance();,if (Calendar != null ) private Calendar cal = Calendar.getInstance();
UsageReportServlet.java,Calendar toReturn = (Calendar) cal.clone();,if (cal != null ) Calendar toReturn = (Calendar) cal.clone();
XmlUploadServlet.java,DbPluginUpdateXml update = persistenceHelper.createPluginUpdateXml();,if (persistenceHelper != null ) DbPluginUpdateXml update = persistenceHelper.createPluginUpdateXml();
UpdateCheckServletTest.java,List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();,if (query != null ) List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();
UpdateCheckServletTest.java,List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();,if (query != null ) List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();
UpdateCheckServletTest.java,List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();,if (query != null ) List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();
UpdateCheckServletTest.java,List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();,if (query != null ) List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();
UpdateCheckServletTest.java,List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();,if (query != null ) List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();
UpdateCheckServletTest.java,List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();,if (query != null ) List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();
UpdateCheckServletTest.java,List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();,if (query != null ) List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();
UpdateCheckServletTest.java,List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();,if (query != null ) List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();
UpdateCheckServletTest.java,List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();,if (query != null ) List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();
UpdateCheckServletTest.java,List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();,if (query != null ) List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();
UpdateCheckServletTest.java,List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();,if (query != null ) List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();
UpdateCheckServletTest.java,DateFormat df = DateFormat.getDateTimeInstance();,if (DateFormat != null ) DateFormat df = DateFormat.getDateTimeInstance();
UpdateCheckServletTest.java,DbPluginUpdateXml update = persistenceHelper.createPluginUpdateXml();,if (persistenceHelper != null ) DbPluginUpdateXml update = persistenceHelper.createPluginUpdateXml();
UpdateCheckServletTest.java,List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();,if (query != null ) List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();
AbstractFlybushCloudServlet.java,String uri = req.getRequestURI();,if (req != null ) String uri = req.getRequestURI();
UpdateServlet.java,List<DbEvaluation> evals = (List<DbEvaluation>) eq.execute();,if (eq != null ) List<DbEvaluation> evals = (List<DbEvaluation>) eq.execute();
UpdateServlet.java,Transaction tx = pm.currentTransaction();,if (pm != null ) Transaction tx = pm.currentTransaction();
XmlUploadServlet.java,FileItemStream item = iterator.next();,if (iterator != null ) FileItemStream item = iterator.next();
XmlUploadServlet.java,InputStream stream = item.openStream();,if (item != null ) InputStream stream = item.openStream();
XmlUploadServlet.java,byte[] array = bout.toByteArray();,if (bout != null ) byte[] array = bout.toByteArray();
XmlUploadServlet.java,Transaction tx = pm.currentTransaction();,if (pm != null ) Transaction tx = pm.currentTransaction();
AbstractFlybushServletTest.java,persistenceHelper = testHelper.createPersistenceHelper(testHelper.getPersistenceManager());,if (testHelper != null ) persistenceHelper = testHelper.createPersistenceHelper(testHelper.getPersistenceManager());
AbstractFlybushServletTest.java,user = results.iterator().next();,if (results != null ) user = results.iterator().next();
AbstractFlybushServletTest.java,DbEvaluation eval = persistenceHelper.createDbEvaluation();,if (persistenceHelper != null ) DbEvaluation eval = persistenceHelper.createDbEvaluation();
AbstractFlybushServletTest.java,DbIssue foundIssue = persistenceHelper.createDbIssue();,if (persistenceHelper != null ) DbIssue foundIssue = persistenceHelper.createDbIssue();
UpdateChecker.java,uuid = random.nextLong();,if (random != null ) uuid = random.nextLong();
IncompatibleTypes.java,IAnalysisCache cache = Global.getAnalysisCache();,if (Global != null ) IAnalysisCache cache = Global.getAnalysisCache();
NoteNonNullAnnotations.java,INullnessAnnotationDatabase nullnessAnnotationDatabase = AnalysisContext.currentAnalysisContext().getNullnessAnnotationDatabase();,if (AnalysisContext != null ) INullnessAnnotationDatabase nullnessAnnotationDatabase = AnalysisContext.currentAnalysisContext().getNullnessAnnotationDatabase();
OpcodeStack.java,String name = xMethod.getName();,if (xMethod != null ) String name = xMethod.getName();
TestingGround2.java,Object value = top.getConstant();,if (top != null ) Object value = top.getConstant();
TestingGround2.java,String bigDecimalString = bigDecimal.toString();,if (bigDecimal != null ) String bigDecimalString = bigDecimal.toString();
TestingGround2.java,String bigDecimalString = new BigDecimal(arg).toString();,if (BigDecimal(arg) != null ) String bigDecimalString = new BigDecimal(arg).toString();
UselessSubclassMethod.java,String superSuperClassName = superClass.getSuperclassName();,if (superClass != null ) String superSuperClassName = superClass.getSuperclassName();
OpcodeStack.java,Item it = new Item(argType.getSignature());,if (Item(argType != null ) Item it = new Item(argType.getSignature());
BugLoader.java,current =  ac.getBugCollection();,if (ac != null ) current =  ac.getBugCollection();
TypeQualifierValue.java,SecurityManager m = System.getSecurityManager();,if (System != null ) SecurityManager m = System.getSecurityManager();
ZipCodeBaseFactory.java,long size = file.length();,if (file != null ) long size = file.length();
ZipCodeBaseFactory.java,long size = file.length();,if (file != null ) long size = file.length();
TypeQualifierValue.java,String className = typeQualifier.getClassName();,if (typeQualifier != null ) String className = typeQualifier.getClassName();
Reporter.java,String className = classDescriptor.getDottedClassName();,if (classDescriptor != null ) String className = classDescriptor.getDottedClassName();
Bug1181.java,String maybeNull = classA.methodThatMightReturnNull();,if (classA != null ) String maybeNull = classA.methodThatMightReturnNull();
Bug1181.java,boolean empty = maybeNull.isEmpty();,if (maybeNull != null ) boolean empty = maybeNull.isEmpty();
Bug1181.java,String nullForSure = classA.methodThatAlwaysReturnsNull();,if (classA != null ) String nullForSure = classA.methodThatAlwaysReturnsNull();
Bug1181.java,empty = nullForSure.isEmpty();,if (nullForSure != null ) empty = nullForSure.isEmpty();
Bug1181.java,String maybeNull = classA.methodThatMightReturnNull();,if (classA != null ) String maybeNull = classA.methodThatMightReturnNull();
Bug1181.java,String nullForSure = classA.methodThatAlwaysReturnsNull();,if (classA != null ) String nullForSure = classA.methodThatAlwaysReturnsNull();
DetectorProvider.java,String pathStr = path.getPath();,if (path != null ) String pathStr = path.getPath();
TestingGround.java,XMethod m = left.getReturnValueOf();,if (left != null ) XMethod m = left.getReturnValueOf();
TestingGround.java,Object value = right.getConstant();,if (right != null ) Object value = right.getConstant();
UserPreferencesTest.java,UserPreferences clone = (UserPreferences) prefs.clone();,if (prefs != null ) UserPreferences clone = (UserPreferences) prefs.clone();
RefreshJob.java,final boolean fullRefreshNeeded = changedParents.isEmpty();,if (changedParents != null ) final boolean fullRefreshNeeded = changedParents.isEmpty();
OpcodeStack.java,int newCount = stack.jumpEntries.size();,if (stack != null ) int newCount = stack.jumpEntries.size();
TypeQualifierValue.java,SecurityManager m = System.getSecurityManager();,if (System != null ) SecurityManager m = System.getSecurityManager();
TypeQualifierValue.java,AtomicBoolean performing = performingValidation.get();,if (performingValidation != null ) AtomicBoolean performing = performingValidation.get();
FindRefComparison.java,String sourceFile = jclass.getSourceFileName();,if (jclass != null ) String sourceFile = jclass.getSourceFileName();
MainFrame.java,private ExecutorService backgroundExecutor = Executors.newCachedThreadPool();,if (Executors != null ) private ExecutorService backgroundExecutor = Executors.newCachedThreadPool();
DetectorsExtensionHelper.java,contributor = configElt.getContributor();,if (configElt != null ) contributor = configElt.getContributor();
FindbugsPropertyPage.java,boolean builderEnabled = chkEnableFindBugs.getSelection();,if (chkEnableFindBugs != null ) boolean builderEnabled = chkEnableFindBugs.getSelection();
CheckRelaxingNullnessAnnotation.java,int i = paramIdx.intValue();,if (paramIdx != null ) int i = paramIdx.intValue();
InstructionActionCache.java,actionList = Collections.emptyList();,if (Collections != null ) actionList = Collections.emptyList();
FindInconsistentSync2.java,JCIPAnnotationDatabase jcipAnotationDatabase = AnalysisContext.currentAnalysisContext().getJCIPAnnotationDatabase();,if (AnalysisContext != null ) JCIPAnnotationDatabase jcipAnotationDatabase = AnalysisContext.currentAnalysisContext().getJCIPAnnotationDatabase();
FindBugsMarker.java,MarkerRank[] values = MarkerRank.values();,if (MarkerRank != null ) MarkerRank[] values = MarkerRank.values();
BugInfoView.java,markerPrio = bug.getPriority();,if (bug != null ) markerPrio = bug.getPriority();
FindbugsPlugin.java,ImageDescriptor descriptor = getImageDescriptor(prio.iconName());,if (getImageDescriptor(prio != null ) ImageDescriptor descriptor = getImageDescriptor(prio.iconName());
FindBugsMarker.java,BugRankCategory[] values = BugRankCategory.values();,if (BugRankCategory != null ) BugRankCategory[] values = BugRankCategory.values();
FindBugsMarker.java,MarkerRank[] values = MarkerRank.values();,if (MarkerRank != null ) MarkerRank[] values = MarkerRank.values();
BugLabelProvider.java,FindBugsMarker.MarkerRank prio = group.getPriority();,if (group != null ) FindBugsMarker.MarkerRank prio = group.getPriority();
BugLabelProvider.java,int confidence = (Integer) group.getData();,if (group != null ) int confidence = (Integer) group.getData();
BugLabelProvider.java,FindBugsMarker.MarkerRank prio = group.getPriority();,if (group != null ) FindBugsMarker.MarkerRank prio = group.getPriority();
BugLabelProvider.java,IProject project = (IProject) group.getData();,if (group != null ) IProject project = (IProject) group.getData();
GroupType.java,int prio = id.intValue();,if (id != null ) int prio = id.intValue();
ClassNameAndSuperclassInfo.java,this.calledClassDescriptorList = Collections.emptyList();,if (Collections != null ) this.calledClassDescriptorList = Collections.emptyList();
ClassDataAnalysisEngine.java,int length = codeBaseEntry.getNumBytes();,if (codeBaseEntry != null ) int length = codeBaseEntry.getNumBytes();
ClassDataAnalysisEngine.java,in = codeBaseEntry.openResource();,if (codeBaseEntry != null ) in = codeBaseEntry.openResource();
ClassDataAnalysisEngine.java,data = byteSink.toByteArray();,if (byteSink != null ) data = byteSink.toByteArray();
BuildUnconditionalParamDerefDatabase.java,nonnullReferenceParameters += unconditionalDerefSet.cardinality();,if (unconditionalDerefSet != null ) nonnullReferenceParameters += unconditionalDerefSet.cardinality();
FindUseOfNonSerializableValue.java,Method[] methodList = classContext.getJavaClass().getMethods();,if (classContext != null ) Method[] methodList = classContext.getJavaClass().getMethods();
BetterCFGBuilder2.java,FieldDescriptor  field = invoked.getAccessMethodForField();,if (invoked != null ) FieldDescriptor  field = invoked.getAccessMethodForField();
CheckTypeQualifiers.java,Collection<TypeQualifierValue> allKnownTypeQualifiers = TypeQualifierValue.getAllKnownTypeQualifiers();,if (TypeQualifierValue != null ) Collection<TypeQualifierValue> allKnownTypeQualifiers = TypeQualifierValue.getAllKnownTypeQualifiers();
PluginLoader.java,"pluginLoader.classLoader = new URLClassLoader(loaderURLs, parent.getClassLoader());","if (parent != null ) pluginLoader.classLoader = new URLClassLoader(loaderURLs, parent.getClassLoader());"
DetectorsExtensionHelper.java,File[] files = sourceDir.listFiles();,if (sourceDir != null ) File[] files = sourceDir.listFiles();
DetectorsExtensionHelper.java,boolean directory = file.isDirectory();,if (file != null ) boolean directory = file.isDirectory();
DetectorsExtensionHelper.java,String dirName = file.getName();,if (file != null ) String dirName = file.getName();
PluginLoader.java,jis = new JarInputStream(url.openStream());,if (JarInputStream(url != null ) jis = new JarInputStream(url.openStream());
PluginLoader.java,Manifest mf = jis.getManifest();,if (jis != null ) Manifest mf = jis.getManifest();
PluginLoader.java,Attributes atts = mf.getMainAttributes();,if (mf != null ) Attributes atts = mf.getMainAttributes();
PluginLoader.java,String jarRoot = url.toString();,if (url != null ) String jarRoot = url.toString();
PluginLoader.java,jar = jarRoot + jar.trim();,if (jar != null ) jar = jarRoot + jar.trim();
TypeFrameModelingVisitor.java,fieldSummary = AnalysisContext.currentAnalysisContext().getFieldSummary();,if (AnalysisContext != null ) fieldSummary = AnalysisContext.currentAnalysisContext().getFieldSummary();
FindNullDeref.java,Location doomed = doomedLocations.iterator().next();,if (doomedLocations != null ) Location doomed = doomedLocations.iterator().next();
FindNullDeref.java,InstructionHandle handle = doomed.getHandle();,if (doomed != null ) InstructionHandle handle = doomed.getHandle();
FindNullDeref.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
FindNullDeref.java,ConstantPoolGen cpg = classContext.getConstantPoolGen();,if (classContext != null ) ConstantPoolGen cpg = classContext.getConstantPoolGen();
FindNullDeref.java,int pos = handle.getPosition();,if (handle != null ) int pos = handle.getPosition();
SortedBugCollection.java,stackTrace = error.getNestedStackTrace();,if (error != null ) stackTrace = error.getNestedStackTrace();
MarkerUtil.java,IProject project = javaProject.getProject();,if (javaProject != null ) IProject project = javaProject.getProject();
BugInstance.java,int pc = location.getHandle().getPosition();,if (location != null ) int pc = location.getHandle().getPosition();
BugLoader.java,BugSet oldSet = BugSet.getMainBugSet();,if (BugSet != null ) BugSet oldSet = BugSet.getMainBugSet();
BugLoader.java,BugCollection current = MainFrame.getInstance().getBugCollection();// Now,if (Now != null ) BugCollection current = MainFrame.getInstance().getBugCollection();// Now
BugLoader.java,BugInstance bug = node.getBug();,if (node != null ) BugInstance bug = node.getBug();
Bug1744457.java,String retrieve = (String) it.next();,if (it != null ) String retrieve = (String) it.next();
Bug1744457.java,String retrieve = (String) it.next();,if (it != null ) String retrieve = (String) it.next();
MockWebCloudClient.java,Throwable t = backgroundExceptions.poll();,if (backgroundExceptions != null ) Throwable t = backgroundExceptions.poll();
BugInstance.java,shortPattern = bugPattern.getShortDescription();,if (bugPattern != null ) shortPattern = bugPattern.getShortDescription();
EmacsBugReporter.java,ClassAnnotation classInfo = bugInstance.getPrimaryClass();,if (bugInstance != null ) ClassAnnotation classInfo = bugInstance.getPrimaryClass();
EmacsBugReporter.java,fullPath = sourceFileNameCache.get(classInfo.getClassName());,if (sourceFileNameCache != null ) fullPath = sourceFileNameCache.get(classInfo.getClassName());
EmacsBugReporter.java,lineStart = line.getStartLine();,if (line != null ) lineStart = line.getStartLine();
EmacsBugReporter.java,lineEnd = line.getEndLine();,if (line != null ) lineEnd = line.getEndLine();
EmacsBugReporter.java,SourceFinder sourceFinder = AnalysisContext.currentAnalysisContext().getSourceFinder();,if (AnalysisContext != null ) SourceFinder sourceFinder = AnalysisContext.currentAnalysisContext().getSourceFinder();
EmacsBugReporter.java,String pkgName = line.getPackageName();,if (line != null ) String pkgName = line.getPackageName();
EmacsBugReporter.java,fullPath = line.getSourceFile();,if (line != null ) fullPath = line.getSourceFile();
EmacsBugReporter.java,"fullPath = pkgName.replace('.', '/') + ""/"" + line.getSourceFile();","if (line != null ) fullPath = pkgName.replace('.', '/') + ""/"" + line.getSourceFile();"
SortedBugCollection.java,hash = bugInstance.getInstanceKey();,if (bugInstance != null ) hash = bugInstance.getInstanceKey();
IsNullValueAnalysis.java,value = IsNullValue.nonNullValue();,if (IsNullValue != null ) value = IsNullValue.nonNullValue();
FindNullDeref.java,Location locationOfKaBoom = redundantBranch.firstValue.getLocationOfKaBoom();,if (redundantBranch != null ) Location locationOfKaBoom = redundantBranch.firstValue.getLocationOfKaBoom();
TypeQualifierValue.java,validator = checkerClass.newInstance();,if (checkerClass != null ) validator = checkerClass.newInstance();
PackageStats.java,size += classStats.size();,if (classStats != null ) size += classStats.size();
PluginLoader.java,String classloaderName = classLoader.getClass().getName();,if (classLoader != null ) String classloaderName = classLoader.getClass().getName();
PluginLoader.java,String value = optionNode.getText().trim();,if (optionNode != null ) String value = optionNode.getText().trim();
ZipFileCodeBase.java,File parent = file.getParentFile();,if (file != null ) File parent = file.getParentFile();
Cloud.java,String value = names.getString(this.name());,if (names != null ) String value = names.getString(this.name());
FindBugsWorker.java,IResource resource = root.findMember(classpathEntry.getPath());,if (root != null ) IResource resource = root.findMember(classpathEntry.getPath());
PreorderVisitor.java,Method[] methods = obj.getMethods();,if (obj != null ) Method[] methods = obj.getMethods();
CheckExpectedWarnings.java,MethodDescriptor methodDesc = method.toXMethod().getMethodDescriptor();,if (method != null ) MethodDescriptor methodDesc = method.toXMethod().getMethodDescriptor();
UpdateCheckServlet.java,int cookie = random.nextInt();,if (random != null ) int cookie = random.nextInt();
UpdateCheckServlet.java,long now = new Date().getTime();,if (Date() != null ) long now = new Date().getTime();
UpdateCheckServletTest.java,List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();,if (query != null ) List<DbUsageEntry> results = (List<DbUsageEntry>) query.execute();
FindNullDeref.java,XMethod i = invokedXMethod.resolveAccessMethod();,if (invokedXMethod != null ) XMethod i = invokedXMethod.resolveAccessMethod();
ReportServlet.java,List<DbEvaluation> evals = (List<DbEvaluation>) query.execute();,if (query != null ) List<DbEvaluation> evals = (List<DbEvaluation>) query.execute();
ReportServlet.java,Set<String> seenIssues = Sets.newHashSet();,if (Sets != null ) Set<String> seenIssues = Sets.newHashSet();
ReportServlet.java,Set<String> seenUsers = Sets.newHashSet();,if (Sets != null ) Set<String> seenUsers = Sets.newHashSet();
ReportServlet.java,String email = eval.getEmail();,if (eval != null ) String email = eval.getEmail();
ReportServlet.java,long beginningOfWeek = getBeginningOfWeekInMillis(eval.getWhen());,if (getBeginningOfWeekInMillis(eval != null ) long beginningOfWeek = getBeginningOfWeekInMillis(eval.getWhen());
ReportServlet.java,String issueHash = eval.getIssue().getHash();,if (eval != null ) String issueHash = eval.getIssue().getHash();
ReportServlet.java,String pkg = getPackageName(eval.getPrimaryClass());,if (getPackageName(eval != null ) String pkg = getPackageName(eval.getPrimaryClass());
UsageConsolidatorServlet.java,DbUsageSummary summary = ventries.iterator().next();,if (ventries != null ) DbUsageSummary summary = ventries.iterator().next();
UsageConsolidatorServlet.java,int version = summary.getValue();,if (summary != null ) int version = summary.getValue();
UsageDataConsolidator.java,uuidsByPluginVersion = Maps.newHashMap();,if (Maps != null ) uuidsByPluginVersion = Maps.newHashMap();
UsageDataConsolidator.java,uuidsByDay = Sets.newHashSet();,if (Sets != null ) uuidsByDay = Sets.newHashSet();
UsageDataConsolidator.java,ipsByDay = Sets.newHashSet();,if (Sets != null ) ipsByDay = Sets.newHashSet();
UsageDataConsolidator.java,int size = entries.size();,if (entries != null ) int size = entries.size();
UsageDataConsolidator.java,String uuid = entry.getUuid();,if (entry != null ) String uuid = entry.getUuid();
UsageConsolidatorServlet.java,Set<String> uuidsByDay = Sets.newHashSet();,if (Sets != null ) Set<String> uuidsByDay = Sets.newHashSet();
UsageConsolidatorServlet.java,Set<String> ipsByDay = Sets.newHashSet();,if (Sets != null ) Set<String> ipsByDay = Sets.newHashSet();
UsageConsolidatorServlet.java,int size = entries.size();,if (entries != null ) int size = entries.size();
UsageConsolidatorServlet.java,String uuid = entry.getUuid();,if (entry != null ) String uuid = entry.getUuid();
UsageConsolidatorServlet.java,String pluginFqn = entry.getPlugin();,if (entry != null ) String pluginFqn = entry.getPlugin();
UsageConsolidatorServlet.java,String pluginVersion = entry.getPluginVersion();,if (entry != null ) String pluginVersion = entry.getPluginVersion();
UsageConsolidatorServlet.java,DbUsageSummary entry = persistenceHelper.createDbUsageSummary();,if (persistenceHelper != null ) DbUsageSummary entry = persistenceHelper.createDbUsageSummary();
UsageConsolidatorServlet.java,Calendar cal = Calendar.getInstance();,if (Calendar != null ) Calendar cal = Calendar.getInstance();
UsageReportServlet.java,int size = entries.size();,if (entries != null ) int size = entries.size();
UsageReportServlet.java,String uuid = entry.getUuid();,if (entry != null ) String uuid = entry.getUuid();
UsageReportServlet.java,String plugin = entry.getPlugin();,if (entry != null ) String plugin = entry.getPlugin();
UsageReportServlet.java,"max = Math.max(max, strings.size());","if (strings != null ) max = Math.max(max, strings.size());"
UsageReportServlet.java,int val = entry.getValue().size();,if (entry != null ) int val = entry.getValue().size();
UsageReportServlet.java,String part = iterator.next();,if (iterator != null ) String part = iterator.next();
UsageReportServlet.java,Calendar cal = Calendar.getInstance();,if (Calendar != null ) Calendar cal = Calendar.getInstance();
UsageReportServlet.java,Calendar cal = Calendar.getInstance();,if (Calendar != null ) Calendar cal = Calendar.getInstance();
UsageReportServlet.java,ServletOutputStream page = resp.getOutputStream();,if (resp != null ) ServletOutputStream page = resp.getOutputStream();
UsageReportServlet.java,List<Double> histogramData = Lists.newArrayList();,if (Lists != null ) List<Double> histogramData = Lists.newArrayList();
UsageReportServlet.java,int maxEvaluators = Collections.max(issuesPerEvaluatorCount.keySet());,if (Collections != null ) int maxEvaluators = Collections.max(issuesPerEvaluatorCount.keySet());
UsageReportServlet.java,int maxIssues = Collections.max(issuesPerEvaluatorCount.values());,if (Collections != null ) int maxIssues = Collections.max(issuesPerEvaluatorCount.values());
UsageReportServlet.java,List<String> barLabels = Lists.newArrayList();,if (Lists != null ) List<String> barLabels = Lists.newArrayList();
UsageReportServlet.java,int maxEvalsPerWeek = Collections.max(evalsByWeek.values());,if (Collections != null ) int maxEvalsPerWeek = Collections.max(evalsByWeek.values());
UsageReportServlet.java,List<Double> newIssuesData = Lists.newArrayList();,if (Lists != null ) List<Double> newIssuesData = Lists.newArrayList();
UsageReportServlet.java,List<String> timelineLabels = Lists.newArrayList();,if (Lists != null ) List<String> timelineLabels = Lists.newArrayList();
UsageReportServlet.java,Integer evalsThisWeek = evalsByWeek.get(cal.getTimeInMillis());,if (evalsByWeek != null ) Integer evalsThisWeek = evalsByWeek.get(cal.getTimeInMillis());
UsageReportServlet.java,Integer issuesThisWeek = issueCountByWeek.get(cal.getTimeInMillis());,if (issueCountByWeek != null ) Integer issuesThisWeek = issueCountByWeek.get(cal.getTimeInMillis());
UsageReportServlet.java,Integer usersThisWeek = userCountByWeek.get(cal.getTimeInMillis());,if (userCountByWeek != null ) Integer usersThisWeek = userCountByWeek.get(cal.getTimeInMillis());
UsageReportServlet.java,int totalUsers = Collections.max(userCountByWeek.values());,if (Collections != null ) int totalUsers = Collections.max(userCountByWeek.values());
UsageReportServlet.java,List<Double> issuesData = Lists.newArrayList();,if (Lists != null ) List<Double> issuesData = Lists.newArrayList();
UsageReportServlet.java,List<Double> evalsData = Lists.newArrayList();,if (Lists != null ) List<Double> evalsData = Lists.newArrayList();
UsageReportServlet.java,List<Double> usersData = Lists.newArrayList();,if (Lists != null ) List<Double> usersData = Lists.newArrayList();
UsageReportServlet.java,List<String> labels = Lists.newArrayList();,if (Lists != null ) List<String> labels = Lists.newArrayList();
UsageReportServlet.java,long time = cal.getTimeInMillis();,if (cal != null ) long time = cal.getTimeInMillis();
UsageReportServlet.java,Calendar cal = Calendar.getInstance();,if (Calendar != null ) Calendar cal = Calendar.getInstance();
UsageReportServlet.java,Calendar cal = Calendar.getInstance();,if (Calendar != null ) Calendar cal = Calendar.getInstance();
UsageReportServlet.java,final long first = cal.getTimeInMillis();,if (cal != null ) final long first = cal.getTimeInMillis();
UsageReportServlet.java,private Calendar cal = Calendar.getInstance();,if (Calendar != null ) private Calendar cal = Calendar.getInstance();
UsageReportServlet.java,Calendar toReturn = (Calendar) cal.clone();,if (cal != null ) Calendar toReturn = (Calendar) cal.clone();
UsageReportServlet.java,Calendar cal = Calendar.getInstance();,if (Calendar != null ) Calendar cal = Calendar.getInstance();
UsageReportServlet.java,Calendar weekCal = Calendar.getInstance();,if (Calendar != null ) Calendar weekCal = Calendar.getInstance();
UsageReportServlet.java,List<String> labels = Lists.newArrayList();,if (Lists != null ) List<String> labels = Lists.newArrayList();
UsageReportServlet.java,List<Double> evalsData = Lists.newArrayList();,if (Lists != null ) List<Double> evalsData = Lists.newArrayList();
UsageReportServlet.java,List<Double> issuesData = Lists.newArrayList();,if (Lists != null ) List<Double> issuesData = Lists.newArrayList();
UsageReportServlet.java,int maxPerPkg = Collections.max(evalCountByPkg.values());,if (Collections != null ) int maxPerPkg = Collections.max(evalCountByPkg.values());
UsageReportServlet.java,List<String> labels = Lists.newArrayList();,if (Lists != null ) List<String> labels = Lists.newArrayList();
UsageReportServlet.java,List<Double> totals = Lists.newArrayList();,if (Lists != null ) List<Double> totals = Lists.newArrayList();
UsageReportServlet.java,List<Double> issues = Lists.newArrayList();,if (Lists != null ) List<Double> issues = Lists.newArrayList();
UsageReportServlet.java,int max = Collections.max(totalCountByUser.values());,if (Collections != null ) int max = Collections.max(totalCountByUser.values());
UsageReportServlet.java,String email = entry.getKey();,if (entry != null ) String email = entry.getKey();
UsageReportServlet.java,int evalCount = entry.getValue();,if (entry != null ) int evalCount = entry.getValue();
TypeFrameModelingVisitor.java,String sourceSignature = xc.getSourceSignature();,if (xc != null ) String sourceSignature = xc.getSourceSignature();
ReportServlet.java,ServletOutputStream page = resp.getOutputStream();,if (resp != null ) ServletOutputStream page = resp.getOutputStream();
UpdateChecker.java,URI uri = plugin.getUpdateUrl();,if (plugin != null ) URI uri = plugin.getUpdateUrl();
UpdateChecker.java,long now = System.currentTimeMillis();,if (System != null ) long now = System.currentTimeMillis();
UpdateChecker.java,OutputStream out = conn.getOutputStream();,if (conn != null ) OutputStream out = conn.getOutputStream();
UpdateChecker.java,int responseCode = conn.getResponseCode();,if (conn != null ) int responseCode = conn.getResponseCode();
UpdateChecker.java,String applicationName = Version.getApplicationName();,if (Version != null ) String applicationName = Version.getApplicationName();
UpdateChecker.java,String applicationVersion = Version.getApplicationVersion();,if (Version != null ) String applicationVersion = Version.getApplicationVersion();
UpdateChecker.java,Locale locale = Locale.getDefault();,if (Locale != null ) Locale locale = Locale.getDefault();
UpdateChecker.java,Date date = plugin.getReleaseDate();,if (plugin != null ) Date date = plugin.getReleaseDate();
UpdateChecker.java,"text = (first ? """" : "", "") + plugin.getShortDescription();","if (plugin != null ) text = (first ? """" : "", "") + plugin.getShortDescription();"
UpdateChecker.java,uuid = random.nextLong();,if (random != null ) uuid = random.nextLong();
UpdateChecker.java,DetectorFactoryCollection dfc = DetectorFactoryCollection.instance();,if (DetectorFactoryCollection != null ) DetectorFactoryCollection dfc = DetectorFactoryCollection.instance();
UpdateChecker.java,UpdateChecker checker = dfc.getUpdateChecker();,if (dfc != null ) UpdateChecker checker = dfc.getUpdateChecker();
FindBugs2.java,DetectorFactoryCollection dfc = DetectorFactoryCollection.instance();,if (DetectorFactoryCollection != null ) DetectorFactoryCollection dfc = DetectorFactoryCollection.instance();
FindBugs2.java,updateHolder  = dfc.getUpdates();,if (dfc != null ) updateHolder  = dfc.getUpdates();
CopyBuggySource.java,Project project = origCollection.getProject();,if (origCollection != null ) Project project = origCollection.getProject();
CopyBuggySource.java,long lastModified = sourceFile.getLastModified();,if (sourceFile != null ) long lastModified = sourceFile.getLastModified();
CopyBuggySource.java,File parent = dstFile.getParentFile();,if (dstFile != null ) File parent = dstFile.getParentFile();
CopyBuggySource.java,in = sourceFile.getInputStream();,if (sourceFile != null ) in = sourceFile.getInputStream();
CopyBuggySource.java,String path = parent.getPath();,if (parent != null ) String path = parent.getPath();
BugPattern.java,detailHTML = buf.toString();,if (buf != null ) detailHTML = buf.toString();
FormatStringChecker.java,String arg = DescriptorFactory.createClassDescriptorFromFieldSignature(aSig).toDottedClassName();,if (DescriptorFactory != null ) String arg = DescriptorFactory.createClassDescriptorFromFieldSignature(aSig).toDottedClassName();
PluginUpdateDialog.java,long now = System.currentTimeMillis();,if (System != null ) long now = System.currentTimeMillis();
ReportServlet.java,long beginningOfWeek = getBeginningOfWeekInMillis(eval.getWhen());,if (getBeginningOfWeekInMillis(eval != null ) long beginningOfWeek = getBeginningOfWeekInMillis(eval.getWhen());
ReportServlet.java,long beginningOfWeek = getBeginningOfWeekInMillis(eval.getWhen());,if (getBeginningOfWeekInMillis(eval != null ) long beginningOfWeek = getBeginningOfWeekInMillis(eval.getWhen());
UpdateChecker.java,Date releaseDate = plugin.getReleaseDate();,if (plugin != null ) Date releaseDate = plugin.getReleaseDate();
NullDerefAndRedundantComparisonFinder.java,BasicBlock source = edge.getSource();,if (edge != null ) BasicBlock source = edge.getSource();
NullDerefAndRedundantComparisonFinder.java,BasicBlock target = edge.getTarget();,if (edge != null ) BasicBlock target = edge.getTarget();
NullDerefAndRedundantComparisonFinder.java,Instruction in = location.getHandle().getInstruction();,if (location != null ) Instruction in = location.getHandle().getInstruction();
NullDerefAndRedundantComparisonFinder.java,Instruction in = location.getHandle().getInstruction();,if (location != null ) Instruction in = location.getHandle().getInstruction();
NullDerefAndRedundantComparisonFinder.java,IsNullValue isNullValue = invFrame.getTopValue();,if (invFrame != null ) IsNullValue isNullValue = invFrame.getTopValue();
NullDerefAndRedundantComparisonFinder.java,ValueNumber vn = vnaDataflow.getFactAfterLocation(location).getTopValue();,if (vnaDataflow != null ) ValueNumber vn = vnaDataflow.getFactAfterLocation(location).getTopValue();
BugDesignation.java,hash += designation.hashCode();,if (designation != null ) hash += designation.hashCode();
FindbugsPlugin.java,File prefsFile = path.toFile();,if (path != null ) File prefsFile = path.toFile();
FindbugsPlugin.java,IPath path = getDefault().getStateLocation();,if (getDefault() != null ) IPath path = getDefault().getStateLocation();
OpcodeStack.java,int branchTarget = dbc.getBranchTarget();,if (dbc != null ) int branchTarget = dbc.getBranchTarget();
SourceCodeDisplay.java,StyledDocument document = src.getDocument();,if (src != null ) StyledDocument document = src.getDocument();
SourceCodeDisplay.java,String sourceFile = thisSource.getSourceFile();,if (thisSource != null ) String sourceFile = thisSource.getSourceFile();
SourceCodeDisplay.java,sourceFile = thisSource.getSimpleClassName();,if (thisSource != null ) sourceFile = thisSource.getSimpleClassName();
SourceCodeDisplay.java,int startLine = thisSource.getStartLine();,if (thisSource != null ) int startLine = thisSource.getStartLine();
SourceCodeDisplay.java,int endLine = thisSource.getEndLine();,if (thisSource != null ) int endLine = thisSource.getEndLine();
SourceCodeDisplay.java,int otherLine = sourceAnnotation.getStartLine();,if (sourceAnnotation != null ) int otherLine = sourceAnnotation.getStartLine();
SourceCodeDisplay.java,otherLine = sourceAnnotation.getEndLine();,if (sourceAnnotation != null ) otherLine = sourceAnnotation.getEndLine();
SwitchFallthrough.java,LineNumberTable table = obj.getLineNumberTable();,if (obj != null ) LineNumberTable table = obj.getLineNumberTable();
SwitchFallthrough.java,int thisLineNumber = ln.getLineNumber();,if (ln != null ) int thisLineNumber = ln.getLineNumber();
SwitchFallthrough.java,LineNumberTable table = obj.getLineNumberTable();,if (obj != null ) LineNumberTable table = obj.getLineNumberTable();
QueryServlet.java,long startTime = recentEvalsRequest.getTimestamp();,if (recentEvalsRequest != null ) long startTime = recentEvalsRequest.getTimestamp();
WebCloudNetworkClient.java,mostRecentEvaluationMillis = eval.getWhen();,if (eval != null ) mostRecentEvaluationMillis = eval.getWhen();
WebCloudNetworkClient.java,mostRecentEvaluationMillis = evaluation.getWhen();,if (evaluation != null ) mostRecentEvaluationMillis = evaluation.getWhen();
DirectoryCodeBase.java,long modTime = file.lastModified();,if (file != null ) long modTime = file.lastModified();
UpdateChecker.java,String applicationName = Version.getApplicationName();,if (Version != null ) String applicationName = Version.getApplicationName();
UpdateChecker.java,String applicationVersion = Version.getApplicationVersion();,if (Version != null ) String applicationVersion = Version.getApplicationVersion();
UpdateChecker.java,Locale locale = Locale.getDefault();,if (Locale != null ) Locale locale = Locale.getDefault();
UpdateChecker.java,Date date = plugin.getReleaseDate();,if (plugin != null ) Date date = plugin.getReleaseDate();
FindNullDeref.java,storedField = FieldAnnotation.fromXField(pu.getNonNullField());,if (FieldAnnotation != null ) storedField = FieldAnnotation.fromXField(pu.getNonNullField());
FindNullDeref.java,XMethodParameter mp = pu.getNonNullParameter();,if (pu != null ) XMethodParameter mp = pu.getNonNullParameter();
FindNullDeref.java,invokedXMethod = mp.getMethod();,if (mp != null ) invokedXMethod = mp.getMethod();
FindNullDeref.java,invokedMethod = MethodAnnotation.fromXMethod(mp.getMethod());,if (MethodAnnotation != null ) invokedMethod = MethodAnnotation.fromXMethod(mp.getMethod());
FindNullDeref.java,parameterNumber = mp.getParameterNumber();,if (mp != null ) parameterNumber = mp.getParameterNumber();
CheckTypeQualifiers.java,int p = source.getParameter();,if (source != null ) int p = source.getParameter();
BuildObligationPolicyDatabase.java,SplitCamelCaseIdentifier splitter = new SplitCamelCaseIdentifier(xmethod.getName());,if (SplitCamelCaseIdentifier(xmethod != null ) SplitCamelCaseIdentifier splitter = new SplitCamelCaseIdentifier(xmethod.getName());
Bug3415313.java,ps = sesscon.prepareStatement(sql.toString());,if (sesscon != null ) ps = sesscon.prepareStatement(sql.toString());
Bug3415313.java,rs = ps.executeQuery();,if (ps != null ) rs = ps.executeQuery();
ResultsFrame.java,Editor srcEditor = srcClass.getEditor();,if (srcClass != null ) Editor srcEditor = srcClass.getEditor();
DBCloud.java,rs = ps.executeQuery();,if (ps != null ) rs = ps.executeQuery();
CheckTypeQualifiers.java,"checkLocation = ""edge "" + edge.getLabel();","if (edge != null ) checkLocation = ""edge "" + edge.getLabel();"
TypeAnalysis.java,int pos = handle.getPosition();,if (handle != null ) int pos = handle.getPosition();
TypeAnalysis.java,String signature = local.getSignature();,if (local != null ) String signature = local.getSignature();
TypeAnalysis.java,int index = local.getIndex();,if (local != null ) int index = local.getIndex();
TypeFrameModelingVisitor.java,int index = obj.getIndex();,if (obj != null ) int index = obj.getIndex();
ShowBugInfoAction.java,Object data = group.getData();,if (group != null ) Object data = group.getData();
FindbugsPlugin.java,Set<URI> pluginsUrls = Plugin.getAllPluginsURIs();,if (Plugin != null ) Set<URI> pluginsUrls = Plugin.getAllPluginsURIs();
FindbugsPlugin.java,url = new File(path).toURI();,if (File(path) != null ) url = new File(path).toURI();
FindbugsPlugin.java,Collection<Plugin> allPlugins = Plugin.getAllPlugins();,if (Plugin != null ) Collection<Plugin> allPlugins = Plugin.getAllPlugins();
FindbugsPlugin.java,URL url = fbPlugin.getPluginLoader().getURL();,if (fbPlugin != null ) URL url = fbPlugin.getPluginLoader().getURL();
FindbugsPlugin.java,IWorkbenchWindow activeWorkbenchWindow = PlatformUI.getWorkbench().getActiveWorkbenchWindow();,if (PlatformUI != null ) IWorkbenchWindow activeWorkbenchWindow = PlatformUI.getWorkbench().getActiveWorkbenchWindow();
FindbugsPlugin.java,IWorkbenchPage page = activeWorkbenchWindow.getActivePage();,if (activeWorkbenchWindow != null ) IWorkbenchPage page = activeWorkbenchWindow.getActivePage();
FindbugsPlugin.java,String type = next.getAbbrev();,if (next != null ) String type = next.getAbbrev();
DetectorProvider.java,IProject project = propertyPage.getProject();,if (propertyPage != null ) IProject project = propertyPage.getProject();
DetectorProvider.java,Collection<Plugin> allPlugins = Plugin.getAllPlugins();,if (Plugin != null ) Collection<Plugin> allPlugins = Plugin.getAllPlugins();
DetectorProvider.java,IStatus status = validator.validate(path.getPath());,if (validator != null ) IStatus status = validator.validate(path.getPath());
DetectorValidator.java,String name = entry.getName();,if (entry != null ) String name = entry.getName();
BugInfoView.java,priority = bug.getPriority();,if (bug != null ) priority = bug.getPriority();
BugInfoView.java,String html = text.toString();,if (text != null ) String html = text.toString();
BugInfoView.java,BugPattern data = (BugPattern) group.getData();,if (group != null ) BugPattern data = (BugPattern) group.getData();
BugInfoView.java,title = pattern.getShortDescription();,if (pattern != null ) title = pattern.getShortDescription();
BugInfoView.java,String shortDescription = bug.getAbridgedMessage();,if (bug != null ) String shortDescription = bug.getAbridgedMessage();
PropPageTitleProvider.java,element = selection.getFirstElement();,if (selection != null ) element = selection.getFirstElement();
PropPageTitleProvider.java,String name = pack.getElementName();,if (pack != null ) String name = pack.getElementName();
PropPageTitleProvider.java,BugPattern pattern = bug.getBugPattern();,if (bug != null ) BugPattern pattern = bug.getBugPattern();
BugInfoView.java,toolkit = new FormToolkit(parent.getDisplay());,if (FormToolkit(parent != null ) toolkit = new FormToolkit(parent.getDisplay());
BugInfoView.java,Color background = toolkit.getColors().getBackground();,if (toolkit != null ) Color background = toolkit.getColors().getBackground();
BugInfoView.java,Color background = toolkit.getColors().getBackground();,if (toolkit != null ) Color background = toolkit.getColors().getBackground();
BugInfoView.java,FindbugsPlugin plugin = FindbugsPlugin.getDefault();,if (FindbugsPlugin != null ) FindbugsPlugin plugin = FindbugsPlugin.getDefault();
BugInfoView.java,DetectorFactory factory = bug.getDetectorFactory();,if (bug != null ) DetectorFactory factory = bug.getDetectorFactory();
BugInfoView.java,Plugin plugin = factory.getPlugin();,if (factory != null ) Plugin plugin = factory.getPlugin();
BugInfoView.java,String website = plugin.getWebsite();,if (plugin != null ) String website = plugin.getWebsite();
BugInfoView.java,String html = text.toString();,if (text != null ) String html = text.toString();
BugInfoView.java,BugPattern data = (BugPattern) group.getData();,if (group != null ) BugPattern data = (BugPattern) group.getData();
BugInfoView.java,IWorkbenchBrowserSupport support = PlatformUI.getWorkbench().getBrowserSupport();,if (PlatformUI != null ) IWorkbenchBrowserSupport support = PlatformUI.getWorkbench().getBrowserSupport();
BugInfoView.java,browserId = newBrowser.getId();,if (newBrowser != null ) browserId = newBrowser.getId();
BugInfoView.java,a = ad.getSimpleName();,if (ad != null ) a = ad.getSimpleName();
BugInfoView.java,IWorkbenchPage page = contributingPart.getSite().getPage();,if (contributingPart != null ) IWorkbenchPage page = contributingPart.getSite().getPage();
BugInfoView.java,IEditorPart activeEditor = page.getActiveEditor();,if (page != null ) IEditorPart activeEditor = page.getActiveEditor();
BugInfoView.java,input = activeEditor.getEditorInput();,if (activeEditor != null ) input = activeEditor.getEditorInput();
BugInfoView.java,IJavaElement parent = javaElt.getParent();,if (javaElt != null ) IJavaElement parent = javaElt.getParent();
BugInfoView.java,parent = parent.getParent();,if (parent != null ) parent = parent.getParent();
PluginLoader.java,plugin = pluginLoader.loadPlugin();,if (pluginLoader != null ) plugin = pluginLoader.loadPlugin();
Grouping.java,GroupType type = GroupType.valueOf(st.nextToken());,if (GroupType != null ) GroupType type = GroupType.valueOf(st.nextToken());
BugAccumulator.java,String hash = bug.getInstanceHash();,if (bug != null ) String hash = bug.getInstanceHash();
MyReporter.java,BugPattern bugPattern = bugInstance.getBugPattern();,if (bugInstance != null ) BugPattern bugPattern = bugInstance.getBugPattern();
ResultsFrame.java,int srcStartLine = srcLine.getStartLine();,if (srcLine != null ) int srcStartLine = srcLine.getStartLine();
ResultsFrame.java,String str = srcLine.getSourceFile();,if (srcLine != null ) String str = srcLine.getSourceFile();
ResultsFrame.java,SourceLineAnnotation annotation = bugList.get(row).getPrimarySourceLineAnnotation();,if (bugList != null ) SourceLineAnnotation annotation = bugList.get(row).getPrimarySourceLineAnnotation();
ResultsFrame.java,notCompiled = !srcClass.isCompiled();,if (!srcClass != null ) notCompiled = !srcClass.isCompiled();
ResultsFrame.java,int line = annotation.getStartLine();,if (annotation != null ) int line = annotation.getStartLine();
DBCloud.java,rs = ps.executeQuery();,if (ps != null ) rs = ps.executeQuery();
BugLabelProvider.java,Integer confidence = (Integer) group.getData();,if (group != null ) Integer confidence = (Integer) group.getData();
TypeAnalysis.java,exceptionSet = exceptionSetFactory.createExceptionSet();,if (exceptionSetFactory != null ) exceptionSet = exceptionSetFactory.createExceptionSet();
ValueNumberFrameModelingVisitor.java,FieldSummary fieldSummary = AnalysisContext.currentAnalysisContext().getFieldSummary();,if (AnalysisContext != null ) FieldSummary fieldSummary = AnalysisContext.currentAnalysisContext().getFieldSummary();
BugLabelProvider.java,FindBugsMarker.MarkerRank prio = group.getPriority();,if (group != null ) FindBugsMarker.MarkerRank prio = group.getPriority();
BugLabelProvider.java,ImageRegistry imageRegistry = FindbugsPlugin.getDefault().getImageRegistry();,if (FindbugsPlugin != null ) ImageRegistry imageRegistry = FindbugsPlugin.getDefault().getImageRegistry();
FindbugsPropertyPage.java,currentUserPreferences = (UserPreferences) origUserPreferences.clone();,if (origUserPreferences != null ) currentUserPreferences = (UserPreferences) origUserPreferences.clone();
FindbugsPropertyPage.java,Project fbProject = collection.getProject();,if (collection != null ) Project fbProject = collection.getProject();
FindbugsPropertyPage.java,CloudPlugin item = clouds.get(cloudCombo.getSelectionIndex());,if (clouds != null ) CloudPlugin item = clouds.get(cloudCombo.getSelectionIndex());
FindbugsPropertyPage.java,IWorkbenchPage page = FindbugsPlugin.getActiveWorkbenchWindow().getActivePage();,if (FindbugsPlugin != null ) IWorkbenchPage page = FindbugsPlugin.getActiveWorkbenchWindow().getActivePage();
NewProjectWizard.java,cloudId = project.getCloudId();,if (project != null ) cloudId = project.getCloudId();
NewProjectWizard.java,oldCloudId = project.getCloudId();,if (project != null ) oldCloudId = project.getCloudId();
BugInfoView.java,FindbugsPlugin plugin = FindbugsPlugin.getDefault();,if (FindbugsPlugin != null ) FindbugsPlugin plugin = FindbugsPlugin.getDefault();
BugInfoView.java,Point newScrollSize = scrolledComposite.getSize();,if (scrolledComposite != null ) Point newScrollSize = scrolledComposite.getSize();
BugInfoView.java,Rectangle clientArea = scrolledComposite.getClientArea();,if (scrolledComposite != null ) Rectangle clientArea = scrolledComposite.getClientArea();
BugInfoView.java,int index = annotationList.getSelectionIndex();,if (annotationList != null ) int index = annotationList.getSelectionIndex();
BugInfoView.java,int startLine = sla.getStartLine();,if (sla != null ) int startLine = sla.getStartLine();
FindBugsMarker.java,Priority[] values = Priority.values();,if (Priority != null ) Priority[] values = Priority.values();
FindBugsMarker.java,Priority[] values = Priority.values();,if (Priority != null ) Priority[] values = Priority.values();
BugLabelProvider.java,FindBugsMarker.Priority prio = group.getPriority();,if (group != null ) FindBugsMarker.Priority prio = group.getPriority();
BugGroupSection.java,Object object = iter.next();,if (iter != null ) Object object = iter.next();
BugGroupSection.java,maxLength = name.length();,if (name != null ) maxLength = name.length();
BugInstanceSection.java,IEditorPart activeEditor = page.getActiveEditor();,if (page != null ) IEditorPart activeEditor = page.getActiveEditor();
BugInstanceSection.java,input = activeEditor.getEditorInput();,if (activeEditor != null ) input = activeEditor.getEditorInput();
BugInstanceSection.java,IJavaElement parent = javaElt.getParent();,if (javaElt != null ) IJavaElement parent = javaElt.getParent();
BugInstanceSection.java,parent = parent.getParent();,if (parent != null ) parent = parent.getParent();
BugInstanceSection.java,String shortDescription = bug.getAbridgedMessage();,if (bug != null ) String shortDescription = bug.getAbridgedMessage();
BugInstanceSection.java,Iterator<BugAnnotation> it = bug.annotationIterator();,if (bug != null ) Iterator<BugAnnotation> it = bug.annotationIterator();
BugInstanceSection.java,BugAnnotation ba = it.next();,if (it != null ) BugAnnotation ba = it.next();
BugInstanceSection.java,int index = annotationList.getSelectionIndex();,if (annotationList != null ) int index = annotationList.getSelectionIndex();
BugInstanceSection.java,Iterator<BugAnnotation> theIterator = bug.annotationIterator();,if (bug != null ) Iterator<BugAnnotation> theIterator = bug.annotationIterator();
BugInstanceSection.java,BugAnnotation theAnnotation = theIterator.next();,if (theIterator != null ) BugAnnotation theAnnotation = theIterator.next();
BugInstanceSection.java,theAnnotation = theIterator.next();,if (theIterator != null ) theAnnotation = theIterator.next();
BugInstanceSection.java,int startLine = sla.getStartLine();,if (sla != null ) int startLine = sla.getStartLine();
BugInstanceSection.java,Iterator<BugAnnotation> iterator = bug.annotationIterator();,if (bug != null ) Iterator<BugAnnotation> iterator = bug.annotationIterator();
BugInstanceSection.java,BugAnnotation bugAnnotation = iterator.next();,if (iterator != null ) BugAnnotation bugAnnotation = iterator.next();
BugPatternSection.java,FindbugsPlugin plugin = FindbugsPlugin.getDefault();,if (FindbugsPlugin != null ) FindbugsPlugin plugin = FindbugsPlugin.getDefault();
BugPatternSection.java,Point newScrollSize = scrolledComposite.getSize();,if (scrolledComposite != null ) Point newScrollSize = scrolledComposite.getSize();
BugPatternSection.java,Rectangle clientArea = scrolledComposite.getClientArea();,if (scrolledComposite != null ) Rectangle clientArea = scrolledComposite.getClientArea();
BugPatternSection.java,Point rootSize = rootComposite.getSize();,if (rootComposite != null ) Point rootSize = rootComposite.getSize();
BugPatternSection.java,DetectorFactory factory = bug.getDetectorFactory();,if (bug != null ) DetectorFactory factory = bug.getDetectorFactory();
BugPatternSection.java,Plugin plugin = factory.getPlugin();,if (factory != null ) Plugin plugin = factory.getPlugin();
BugPatternSection.java,String website = plugin.getWebsite();,if (plugin != null ) String website = plugin.getWebsite();
BugPatternSection.java,String html = text.toString();,if (text != null ) String html = text.toString();
BugPatternSection.java,BugPattern data = (BugPattern) group.getData();,if (group != null ) BugPattern data = (BugPattern) group.getData();
BugPatternSection.java,IWorkbenchBrowserSupport support = PlatformUI.getWorkbench().getBrowserSupport();,if (PlatformUI != null ) IWorkbenchBrowserSupport support = PlatformUI.getWorkbench().getBrowserSupport();
BugPatternSection.java,browserId = newBrowser.getId();,if (newBrowser != null ) browserId = newBrowser.getId();
QueryServlet.java,askAgain = iterator.hasNext();,if (iterator != null ) askAgain = iterator.hasNext();
ReportConfigurationTab.java,String highPrio = highPrioCombo.getText();,if (highPrioCombo != null ) String highPrio = highPrioCombo.getText();
ReportConfigurationTab.java,String normalPrio = normalPrioCombo.getText();,if (normalPrioCombo != null ) String normalPrio = normalPrioCombo.getText();
ReportConfigurationTab.java,String lowPrio = lowPrioCombo.getText();,if (lowPrioCombo != null ) String lowPrio = lowPrioCombo.getText();
DBCloud.java,rs = ps.executeQuery();,if (ps != null ) rs = ps.executeQuery();
DBCloud.java,BugData bugData = instanceMap.get(bd.getInstanceHash());,if (instanceMap != null ) BugData bugData = instanceMap.get(bd.getInstanceHash());
Plugin.java,Plugin plugin = pluginLoader.loadPlugin();,if (pluginLoader != null ) Plugin plugin = pluginLoader.loadPlugin();
DetectorFactoryCollection.java,Collection<Plugin> allPlugins = Plugin.getAllPlugins();,if (Plugin != null ) Collection<Plugin> allPlugins = Plugin.getAllPlugins();
PluginLoader.java,Locale locale = Locale.getDefault();,if (Locale != null ) Locale locale = Locale.getDefault();
PluginLoader.java,String language = locale.getLanguage();,if (locale != null ) String language = locale.getLanguage();
PluginLoader.java,String country = locale.getCountry();,if (locale != null ) String country = locale.getCountry();
TypeFrameModelingVisitor.java,FieldStoreType property = database.getProperty(xfield.getFieldDescriptor());,if (database != null ) FieldStoreType property = database.getProperty(xfield.getFieldDescriptor());
TypeFrameModelingVisitor.java,loadType = Type.getType(summary.getSignature());,if (Type != null ) loadType = Type.getType(summary.getSignature());
FindNonSerializableStoreIntoSession.java,String refSig = refType.getSignature();,if (refType != null ) String refSig = refType.getSignature();
Noise.java,primer = getFullyQualifiedMethodName().getBytes();,if (getFullyQualifiedMethodName() != null ) primer = getFullyQualifiedMethodName().getBytes();
AbstractCloud.java,firstSeen = props.getFirstSeen().getTime();,if (props != null ) firstSeen = props.getFirstSeen().getTime();
UpdateChecker.java,int responseCode = conn.getResponseCode();,if (conn != null ) int responseCode = conn.getResponseCode();
PluginUpdateDialog.java,String msg = update.getMessage();,if (update != null ) String msg = update.getMessage();
MainFrame.java,name = update.getPlugin().getShortDescription();,if (update != null ) name = update.getPlugin().getShortDescription();
MainFrame.java,String msg = update.getMessage();,if (update != null ) String msg = update.getMessage();
FindBugs2Eclipse.java,IResourceDelta delta = event.getDelta();,if (event != null ) IResourceDelta delta = event.getDelta();
PDEClassPathGenerator.java,IPreferenceStore store = FindbugsPlugin.getPluginPreferences(javaProject.getProject());,if (FindbugsPlugin != null ) IPreferenceStore store = FindbugsPlugin.getPluginPreferences(javaProject.getProject());
PDEClassPathGenerator.java,IPreferenceStore store = FindbugsPlugin.getPluginPreferences(javaProject.getProject());,if (FindbugsPlugin != null ) IPreferenceStore store = FindbugsPlugin.getPluginPreferences(javaProject.getProject());
FindNullDeref.java,int position = location.getHandle().getPosition();,if (location != null ) int position = location.getHandle().getPosition();
NullDerefAndRedundantComparisonFinder.java,InstructionHandle handle = thisLocation.getHandle();,if (thisLocation != null ) InstructionHandle handle = thisLocation.getHandle();
NullDerefAndRedundantComparisonFinder.java,Set<Location> derefLocationSet = nullValueUnconditionalDeref.getDerefLocationSet();,if (nullValueUnconditionalDeref != null ) Set<Location> derefLocationSet = nullValueUnconditionalDeref.getDerefLocationSet();
NullDerefAndRedundantComparisonFinder.java,where = derefLocationSet.iterator().next();,if (derefLocationSet != null ) where = derefLocationSet.iterator().next();
BugLoader.java,Filter suppressionMatcher = project.getSuppressionFilter();,if (project != null ) Filter suppressionMatcher = project.getSuppressionFilter();
MainFrame.java,Filter suppressionMatcher = project.getSuppressionFilter();,if (project != null ) Filter suppressionMatcher = project.getSuppressionFilter();
UnionResults.java,ProjectStats stats = result.getProjectStats();,if (result != null ) ProjectStats stats = result.getProjectStats();
UnionResults.java,Project project = result.getProject();,if (result != null ) Project project = result.getProject();
RejarClassesForAnalysis.java,List<String> auxFileList = Collections.emptyList();,if (Collections != null ) List<String> auxFileList = Collections.emptyList();
FunctionsThatMightBeMistakenForProcedures.java,XMethod xMethod = rv.getReturnValueOf();,if (rv != null ) XMethod xMethod = rv.getReturnValueOf();
FunctionsThatMightBeMistakenForProcedures.java,XFactory xFactory = AnalysisContext.currentXFactory();,if (AnalysisContext != null ) XFactory xFactory = AnalysisContext.currentXFactory();
FunctionsThatMightBeMistakenForProcedures.java,XFactory xFactory = AnalysisContext.currentXFactory();,if (AnalysisContext != null ) XFactory xFactory = AnalysisContext.currentXFactory();
DumbMethods.java,Object o = item.getConstant();,if (item != null ) Object o = item.getConstant();
CheckExpectedWarnings.java,String bugCode = tok.nextToken().trim();,if (tok != null ) String bugCode = tok.nextToken().trim();
ClassContext.java,List<Method> methodList = Arrays.asList(getJavaClass().getMethods());,if (Arrays != null ) List<Method> methodList = Arrays.asList(getJavaClass().getMethods());
AddMessages.java,Iterator annElementIter = element.elements().iterator();,if (element != null ) Iterator annElementIter = element.elements().iterator();
Filter.java,Iterator j = matchNode.elementIterator();,if (matchNode != null ) Iterator j = matchNode.elementIterator();
Filter.java,Iterator i = element.elementIterator();,if (element != null ) Iterator i = element.elementIterator();
CheckClassfileVersion.java,JarEntry ze = (JarEntry) e.nextElement();,if (e != null ) JarEntry ze = (JarEntry) e.nextElement();
BugTreeModel.java,Object[] objPath = path.getParentPath().getPath();,if (path != null ) Object[] objPath = path.getParentPath().getPath();
BugTreeModel.java,pathToFirstDeleted = new TreePath(reconstruct.toArray());,if (TreePath(reconstruct != null ) pathToFirstDeleted = new TreePath(reconstruct.toArray());
BugTreeModel.java,pathToFirstDeleted = pathToFirstDeleted.pathByAddingChild(path.getLastPathComponent());,if (pathToFirstDeleted != null ) pathToFirstDeleted = pathToFirstDeleted.pathByAddingChild(path.getLastPathComponent());
BugTreeModel.java,Object parent = pathToFirstDeleted.getParentPath().getLastPathComponent();,if (pathToFirstDeleted != null ) Object parent = pathToFirstDeleted.getParentPath().getLastPathComponent();
BugTreeModel.java,Object child = pathToFirstDeleted.getLastPathComponent();,if (pathToFirstDeleted != null ) Object child = pathToFirstDeleted.getLastPathComponent();
BugTreeModel.java,Object[] objPath = path.getParentPath().getPath();,if (path != null ) Object[] objPath = path.getParentPath().getPath();
BugTreeModel.java,path = new TreePath(reconstruct.toArray());,if (TreePath(reconstruct != null ) path = new TreePath(reconstruct.toArray());
BugTreeModel.java,Object parent = path.getParentPath().getLastPathComponent();,if (path != null ) Object parent = path.getParentPath().getLastPathComponent();
BugTreeModel.java,Object child = path.getLastPathComponent();,if (path != null ) Object child = path.getLastPathComponent();
BCPMethodReturnCheck.java,ByteCodePattern result = localByteCodePattern.get();,if (localByteCodePattern != null ) ByteCodePattern result = localByteCodePattern.get();
BCPMethodReturnCheck.java,ArrayList<PatternElement> list = localPatternElementList.get();,if (localPatternElementList != null ) ArrayList<PatternElement> list = localPatternElementList.get();
BCPMethodReturnCheck.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
BCPMethodReturnCheck.java,InvokeInstruction inv = (InvokeInstruction) call.getInstruction();,if (call != null ) InvokeInstruction inv = (InvokeInstruction) call.getInstruction();
BCPMethodReturnCheck.java,ConstantPoolGen cp = methodGen.getConstantPool();,if (methodGen != null ) ConstantPoolGen cp = methodGen.getConstantPool();
BCPMethodReturnCheck.java,String sourceFile = javaClass.getSourceFileName();,if (javaClass != null ) String sourceFile = javaClass.getSourceFileName();
BCPMethodReturnCheck.java,String callingPackage = extractPackageName(javaClass.getClassName());,if (extractPackageName(javaClass != null ) String callingPackage = extractPackageName(javaClass.getClassName());
InfiniteRecursiveLoop2.java,Method[] methodList = classContext.getJavaClass().getMethods();,if (classContext != null ) Method[] methodList = classContext.getJavaClass().getMethods();
InfiniteRecursiveLoop2.java,InstructionHandle thrower = basicBlock.getExceptionThrower();,if (basicBlock != null ) InstructionHandle thrower = basicBlock.getExceptionThrower();
InfiniteRecursiveLoop2.java,Instruction ins = thrower.getInstruction();,if (thrower != null ) Instruction ins = thrower.getInstruction();
InfiniteRecursiveLoop2.java,ConstantPoolGen cpg = classContext.getConstantPoolGen();,if (classContext != null ) ConstantPoolGen cpg = classContext.getConstantPoolGen();
InfiniteRecursiveLoop2.java,ValueNumberFrame vnaFrameAtEntry = vnaDataflow.getStartFact(cfg.getEntry());,if (vnaDataflow != null ) ValueNumberFrame vnaFrameAtEntry = vnaDataflow.getStartFact(cfg.getEntry());
InfiniteRecursiveLoop2.java,BitSet entryPostDominators = postDominators.getAllDominatorsOf(cfg.getEntry());,if (postDominators != null ) BitSet entryPostDominators = postDominators.getAllDominatorsOf(cfg.getEntry());
InfiniteRecursiveLoop2.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
InfiniteRecursiveLoop2.java,ValueNumber caller = vnaDataflow.getAnalysis().getThisValue();,if (vnaDataflow != null ) ValueNumber caller = vnaDataflow.getAnalysis().getThisValue();
InfiniteRecursiveLoop2.java,"ValueNumber callee = frameAtCall.getInstance(ins, classContext.getConstantPoolGen());","if (classContext != null ) ValueNumber callee = frameAtCall.getInstance(ins, classContext.getConstantPoolGen());"
InfiniteRecursiveLoop2.java,"int receiverStackSlot = typeFrame.getInstanceSlot(ins, classContext.getConstantPoolGen());","if (classContext != null ) int receiverStackSlot = typeFrame.getInstanceSlot(ins, classContext.getConstantPoolGen());"
InfiniteRecursiveLoop2.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
NoteCheckReturnValue.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
UpdateChecker.java,URI uri = plugin.getUsageTracker();,if (plugin != null ) URI uri = plugin.getUsageTracker();
FindRefComparison.java,String sourceFile = jclass.getSourceFileName();,if (jclass != null ) String sourceFile = jclass.getSourceFileName();
UsageTracker.java,uuid = new Random().nextLong();,if (Random() != null ) uuid = new Random().nextLong();
ValueNumberFrame.java,flags |= vn.getFlags();,if (vn != null ) flags |= vn.getFlags();
ValueNumberFrame.java,flags |= vn.getFlags();,if (vn != null ) flags |= vn.getFlags();
SloppyBugComparator.java,"cmp = compareFieldsAllowingNull(lhs.getPrimaryField(), rhs.getPrimaryField());","if (rhs != null ) cmp = compareFieldsAllowingNull(lhs.getPrimaryField(), rhs.getPrimaryField());"
FindbugsPlugin.java,Iterator<BugCode> patternIterator = DetectorFactoryCollection.instance().bugCodeIterator();,if (DetectorFactoryCollection != null ) Iterator<BugCode> patternIterator = DetectorFactoryCollection.instance().bugCodeIterator();
FindbugsPlugin.java,Iterator<BugCode> patternIterator = DetectorFactoryCollection.instance().bugCodeIterator();,if (DetectorFactoryCollection != null ) Iterator<BugCode> patternIterator = DetectorFactoryCollection.instance().bugCodeIterator();
FindbugsPlugin.java,BugCode next = patternIterator.next();,if (patternIterator != null ) BugCode next = patternIterator.next();
FindbugsPlugin.java,String type = next.getAbbrev();,if (next != null ) String type = next.getAbbrev();
FindBugs2.java,AnalysisBeanImpl analysisBean = AnalysisBeanImpl.makeAnalysisBean();,if (AnalysisBeanImpl != null ) AnalysisBeanImpl analysisBean = AnalysisBeanImpl.makeAnalysisBean();
FindBugs2.java,BugCollection bc = bugReporter.getBugCollection();,if (bugReporter != null ) BugCollection bc = bugReporter.getBugCollection();
AnalysisBeanImpl.java,MBeanServer mbs = ManagementFactory.getPlatformMBeanServer();,if (ManagementFactory != null ) MBeanServer mbs = ManagementFactory.getPlatformMBeanServer();
AnalysisBeanImpl.java,MBeanServer mbs = ManagementFactory.getPlatformMBeanServer();,if (ManagementFactory != null ) MBeanServer mbs = ManagementFactory.getPlatformMBeanServer();
TypeQualifierValueSet.java,"Set<SourceSinkInfo> locSet = getOrCreateSourceSinkInfoSet(dest, entry.getKey());","if (entry != null ) Set<SourceSinkInfo> locSet = getOrCreateSourceSinkInfoSet(dest, entry.getKey());"
CheckExpectedWarnings.java,String bugCode = tok.nextToken();,if (tok != null ) String bugCode = tok.nextToken();
CloudFactory.java,String cloudId = bc.getProject().getCloudId();,if (bc != null ) String cloudId = bc.getProject().getCloudId();
BugHistory.java,SortedBugCollection resultCollection = originator.duplicate();,if (originator != null ) SortedBugCollection resultCollection = originator.duplicate();
BugHistory.java,String filePart = file.getName();,if (file != null ) String filePart = file.getName();
BugHistory.java,csvRecord = csvRecord.trim();,if (csvRecord != null ) csvRecord = csvRecord.trim();
PreferencesFrame.java,boolean enabled = entry.getValue();,if (entry != null ) boolean enabled = entry.getValue();
PreferencesFrame.java,boolean selected = checkBox.isSelected();,if (checkBox != null ) boolean selected = checkBox.isSelected();
Project.java,Boolean b = enabledPlugins.get(plugin.getPluginId());,if (enabledPlugins != null ) Boolean b = enabledPlugins.get(plugin.getPluginId());
UselessCurrentThread.java,Thread t = Thread.currentThread();,if (Thread != null ) Thread t = Thread.currentThread();
AboutDialog.java,licenseScrollPane = new javax.swing.JScrollPane();,if (javax != null ) licenseScrollPane = new javax.swing.JScrollPane();
AboutDialog.java,URL url = evt.getURL();,if (evt != null ) URL url = evt.getURL();
AnalysisErrorDialog.java,analysisMenuBar = new javax.swing.JMenuBar();,if (javax != null ) analysisMenuBar = new javax.swing.JMenuBar();
AnalysisErrorDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
ConfigureDetectorsDialog.java,detectorDescription = new javax.swing.JEditorPane();,if (javax != null ) detectorDescription = new javax.swing.JEditorPane();
ConfigureDetectorsDialog.java,spacer = new javax.swing.JLabel();,if (javax != null ) spacer = new javax.swing.JLabel();
ConfigureDetectorsDialog.java,DefaultSortedTableModel sorter = (DefaultSortedTableModel) detectorTable.getModel();,if (detectorTable != null ) DefaultSortedTableModel sorter = (DefaultSortedTableModel) detectorTable.getModel();
ConfigureDetectorsDialog.java,DefaultSortedTableModel sorter = (DefaultSortedTableModel) detectorTable.getModel();,if (detectorTable != null ) DefaultSortedTableModel sorter = (DefaultSortedTableModel) detectorTable.getModel();
ConfigureDetectorsDialog.java,DefaultSortedTableModel sorter = (DefaultSortedTableModel) detectorTable.getModel();,if (detectorTable != null ) DefaultSortedTableModel sorter = (DefaultSortedTableModel) detectorTable.getModel();
ConfigureDetectorsDialog.java,DefaultTableModel model = (DefaultTableModel) detectorTable.getModel();,if (detectorTable != null ) DefaultTableModel model = (DefaultTableModel) detectorTable.getModel();
FindBugsFrame.java,viewPanel = new javax.swing.JPanel();,if (javax != null ) viewPanel = new javax.swing.JPanel();
FindBugsFrame.java,jarFileLabel = new javax.swing.JLabel();,if (javax != null ) jarFileLabel = new javax.swing.JLabel();
FindBugsFrame.java,sourceDirLabel = new javax.swing.JLabel();,if (javax != null ) sourceDirLabel = new javax.swing.JLabel();
FindBugsFrame.java,removeJarButton = new javax.swing.JButton();,if (javax != null ) removeJarButton = new javax.swing.JButton();
FindBugsFrame.java,browseSrcDirButton = new javax.swing.JButton();,if (javax != null ) browseSrcDirButton = new javax.swing.JButton();
FindBugsFrame.java,sourceDirList = new javax.swing.JList();,if (javax != null ) sourceDirList = new javax.swing.JList();
FindBugsFrame.java,browseClasspathEntryButton = new javax.swing.JButton();,if (javax != null ) browseClasspathEntryButton = new javax.swing.JButton();
FindBugsFrame.java,classpathEntryList = new javax.swing.JList();,if (javax != null ) classpathEntryList = new javax.swing.JList();
FindBugsFrame.java,classpathUpButton = new javax.swing.JButton();,if (javax != null ) classpathUpButton = new javax.swing.JButton();
FindBugsFrame.java,groupByTabbedPane = new javax.swing.JTabbedPane();,if (javax != null ) groupByTabbedPane = new javax.swing.JTabbedPane();
FindBugsFrame.java,byPackageScrollPane = new javax.swing.JScrollPane();,if (javax != null ) byPackageScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,byBugTypeBugTree = new javax.swing.JTree();,if (javax != null ) byBugTypeBugTree = new javax.swing.JTree();
FindBugsFrame.java,bugDescriptionScrollPane = new javax.swing.JScrollPane();,if (javax != null ) bugDescriptionScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,annotationTextAreaScrollPane = new javax.swing.JScrollPane();,if (javax != null ) annotationTextAreaScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,logoLabel = new javax.swing.JLabel();,if (javax != null ) logoLabel = new javax.swing.JLabel();
FindBugsFrame.java,newProjectItem = new javax.swing.JMenuItem();,if (javax != null ) newProjectItem = new javax.swing.JMenuItem();
FindBugsFrame.java,closeProjectItem = new javax.swing.JMenuItem();,if (javax != null ) closeProjectItem = new javax.swing.JMenuItem();
FindBugsFrame.java,exitItem = new javax.swing.JMenuItem();,if (javax != null ) exitItem = new javax.swing.JMenuItem();
FindBugsFrame.java,pasteItem = new javax.swing.JMenuItem();,if (javax != null ) pasteItem = new javax.swing.JMenuItem();
FindBugsFrame.java,viewBugDetailsItem = new javax.swing.JCheckBoxMenuItem();,if (javax != null ) viewBugDetailsItem = new javax.swing.JCheckBoxMenuItem();
FindBugsFrame.java,expPriorityButton = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) expPriorityButton = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,settingsMenu = new javax.swing.JMenu();,if (javax != null ) settingsMenu = new javax.swing.JMenu();
FindBugsFrame.java,normalEffortItem = new javax.swing.JCheckBoxMenuItem();,if (javax != null ) normalEffortItem = new javax.swing.JCheckBoxMenuItem();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();,if (Toolkit != null ) Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();
FindBugsFrame.java,DefaultTreeModel bugTreeModel = (DefaultTreeModel) bugTree.getModel();,if (bugTree != null ) DefaultTreeModel bugTreeModel = (DefaultTreeModel) bugTree.getModel();
FindBugsFrame.java,File file = chooser.getSelectedFile();,if (chooser != null ) File file = chooser.getSelectedFile();
FindBugsFrame.java,file = chooser.getSelectedFile();,if (chooser != null ) file = chooser.getSelectedFile();
FindBugsFrame.java,groupName = member.getPrimaryClass().getClassName();,if (member != null ) groupName = member.getPrimaryClass().getClassName();
FindBugsFrame.java,DefaultListModel listModel = (DefaultListModel) sourceDirList.getModel();,if (sourceDirList != null ) DefaultListModel listModel = (DefaultListModel) sourceDirList.getModel();
FindBugsFrame.java,sourceFile = source.getFullFileName();,if (source != null ) sourceFile = source.getFullFileName();
FindBugsFrame.java,String bugDetailsKey = bugInstance.getType();,if (bugInstance != null ) String bugDetailsKey = bugInstance.getType();
FindBugsFrame.java,currentDirectory = selectedFile.getParentFile();,if (selectedFile != null ) currentDirectory = selectedFile.getParentFile();
LineNumberer.java,int lineHeight = fm.getHeight();,if (fm != null ) int lineHeight = fm.getHeight();
RunAnalysisDialog.java,progressBar = new javax.swing.JProgressBar();,if (javax != null ) progressBar = new javax.swing.JProgressBar();
RunAnalysisDialog.java,stageNameLabel = new javax.swing.JLabel();,if (javax != null ) stageNameLabel = new javax.swing.JLabel();
RunAnalysisDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RunAnalysisDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RunAnalysisDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindRefComparison.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
UsageTracker.java,DetectorFactoryCollection dfc = DetectorFactoryCollection.instance();,if (DetectorFactoryCollection != null ) DetectorFactoryCollection dfc = DetectorFactoryCollection.instance();
UsageTracker.java,DetectorFactoryCollection dfc = DetectorFactoryCollection.instance();,if (DetectorFactoryCollection != null ) DetectorFactoryCollection dfc = DetectorFactoryCollection.instance();
BugCollectionBugReporter.java,Cloud userAnnotationPlugin = bugCollection.getCloud();,if (bugCollection != null ) Cloud userAnnotationPlugin = bugCollection.getCloud();
XMLBugReporter.java,Cloud cloud = getBugCollection().getCloud();,if (getBugCollection() != null ) Cloud cloud = getBugCollection().getCloud();
PluginLoader.java,String value = optionNode.getText();,if (optionNode != null ) String value = optionNode.getText();
PluginLoader.java,String value = node.getText();,if (node != null ) String value = node.getText();
WebCloudClient.java,String host = networkClient.getHost();,if (networkClient != null ) String host = networkClient.getHost();
BugInstance.java,Cloud cloud = bugCollection.getCloud();,if (bugCollection != null ) Cloud cloud = bugCollection.getCloud();
Project.java,Cloud cloud = bugCollection.getCloud();,if (bugCollection != null ) Cloud cloud = bugCollection.getCloud();
Project.java,String id = cloud.getPlugin().getId();,if (cloud != null ) String id = cloud.getPlugin().getId();
Project.java,boolean onlineCloud = cloud.isOnlineCloud();,if (cloud != null ) boolean onlineCloud = cloud.isOnlineCloud();
Project.java,String url = cloud.getBugDetailsUrlTemplate();,if (cloud != null ) String url = cloud.getBugDetailsUrlTemplate();
CloudFactory.java,String cloudId = bc.getProject().getCloudId();,if (bc != null ) String cloudId = bc.getProject().getCloudId();
CloudFactory.java,Plugin fbplugin = Plugin.getByPluginId(plugin.getFindbugsPluginId());,if (Plugin != null ) Plugin fbplugin = Plugin.getByPluginId(plugin.getFindbugsPluginId());
SortedBugCollection.java,String url = cloud.getBugDetailsUrlTemplate();,if (cloud != null ) String url = cloud.getBugDetailsUrlTemplate();
LockedFields.java,int flags = obj.getAccessFlags();,if (obj != null ) int flags = obj.getAccessFlags();
LockedFields.java,int flags = obj.getAccessFlags();,if (obj != null ) int flags = obj.getAccessFlags();
LockedFields.java,int total = stats.size();,if (stats != null ) int total = stats.size();
CloudCommentsPane.java,CardLayout cl = (CardLayout) cards.getLayout();,if (cards != null ) CardLayout cl = (CardLayout) cards.getLayout();
CloudCommentsPane.java,final int index = designationCombo.getSelectedIndex();,if (designationCombo != null ) final int index = designationCombo.getSelectedIndex();
CloudCommentsPane.java,choice = UserDesignation.UNCLASSIFIED.name();,if (UserDesignation != null ) choice = UserDesignation.UNCLASSIFIED.name();
CloudCommentsPane.java,designation = UserDesignation.UNCLASSIFIED.name();,if (UserDesignation != null ) designation = UserDesignation.UNCLASSIFIED.name();
FindbugsPlugin.java,Set<URL> pluginsUrls = Plugin.getAllPluginsUrls();,if (Plugin != null ) Set<URL> pluginsUrls = Plugin.getAllPluginsUrls();
CloudCommentsPane.java,Font font = label.getFont();,if (label != null ) Font font = label.getFont();
CloudCommentsPane.java,String oldValue = bug.getUserDesignationKey();,if (bug != null ) String oldValue = bug.getUserDesignationKey();
BugRanker.java,String s = in.readLine();,if (in != null ) String s = in.readLine();
Plugin.java,URL url = plugin.getPluginLoader().getURL();,if (plugin != null ) URL url = plugin.getPluginLoader().getURL();
TypeQualifierValue.java,Class c = validatorLoader.loadClass(checkerName.getDottedClassName());,if (validatorLoader != null ) Class c = validatorLoader.loadClass(checkerName.getDottedClassName());
TestingGround.java,XMethod m = item.getReturnValueOf();,if (item != null ) XMethod m = item.getReturnValueOf();
FindUnrelatedTypesInGenericContainer.java,String simpleName = info.interfaceForCall.getSimpleName();,if (info != null ) String simpleName = info.interfaceForCall.getSimpleName();
FindUnrelatedTypesInGenericContainer.java,String argSignature = invokedMethod.getSignature();,if (invokedMethod != null ) String argSignature = invokedMethod.getSignature();
FindUnrelatedTypesInGenericContainer.java,String selfSignature = methodGen.getSignature();,if (methodGen != null ) String selfSignature = methodGen.getSignature();
FindUnrelatedTypesInGenericContainer.java,Instruction prevIns = handle.getPrev().getInstruction();,if (handle != null ) Instruction prevIns = handle.getPrev().getInstruction();
PackageStats.java,ClassStats classStats = getClassStatsOrNull(source.getClassName());,if (getClassStatsOrNull(source != null ) ClassStats classStats = getClassStatsOrNull(source.getClassName());
BackdateHistoryUsingSource.java,SourceFinder sourceFinder = new SourceFinder(origCollection.getProject());,if (SourceFinder(origCollection != null ) SourceFinder sourceFinder = new SourceFinder(origCollection.getProject());
BackdateHistoryUsingSource.java,long when = sourceFile.getLastModified();,if (sourceFile != null ) long when = sourceFile.getLastModified();
BackdateHistoryUsingSource.java,Cloud cloud = origCollection.getCloud();,if (origCollection != null ) Cloud cloud = origCollection.getCloud();
CreateMutableCloneResolution.java,Statement stmt = (Statement) itr.next();,if (itr != null ) Statement stmt = (Statement) itr.next();
CreateMutableCloneResolution.java,cloneInvoke = workingUnit.getAST().newMethodInvocation();,if (workingUnit != null ) cloneInvoke = workingUnit.getAST().newMethodInvocation();
CreateMutableCloneResolution.java,castRet = workingUnit.getAST().newCastExpression();,if (workingUnit != null ) castRet = workingUnit.getAST().newCastExpression();
DBCloud.java,long firstSeen = bugCollection.getAppVersionFromSequenceNumber(firstVersion).getTimestamp();,if (bugCollection != null ) long firstSeen = bugCollection.getAppVersionFromSequenceNumber(firstVersion).getTimestamp();
BackdateHistoryUsingSource.java,Cloud cloud = origCollection.getCloud();,if (origCollection != null ) Cloud cloud = origCollection.getCloud();
FindbugsPropertyPage.java,pluginsChanged = workspaceSettingsTab.arePluginsChanged();,if (workspaceSettingsTab != null ) pluginsChanged = workspaceSettingsTab.arePluginsChanged();
BugRanker.java,DetectorFactoryCollection factory = DetectorFactoryCollection.instance();,if (DetectorFactoryCollection != null ) DetectorFactoryCollection factory = DetectorFactoryCollection.instance();
BugRanker.java,Plugin corePlugin = factory.getCorePlugin();,if (factory != null ) Plugin corePlugin = factory.getCorePlugin();
BugRanker.java,DetectorFactoryCollection factory = DetectorFactoryCollection.instance();,if (DetectorFactoryCollection != null ) DetectorFactoryCollection factory = DetectorFactoryCollection.instance();
BugRanker.java,Plugin corePlugin = factory.getCorePlugin();,if (factory != null ) Plugin corePlugin = factory.getCorePlugin();
DetectorFactoryCollection.java,PluginLoader corePluginLoader = PluginLoader.getCorePluginLoader();,if (PluginLoader != null ) PluginLoader corePluginLoader = PluginLoader.getCorePluginLoader();
DetectorFactoryCollection.java,Plugin plugin = corePluginLoader.getPlugin();,if (corePluginLoader != null ) Plugin plugin = corePluginLoader.getPlugin();
DetectorFactoryCollection.java,corePlugin = corePluginLoader.getPlugin();,if (corePluginLoader != null ) corePlugin = corePluginLoader.getPlugin();
PluginLoader.java,this.classLoader = this.getClass().getClassLoader();,if (this != null ) this.classLoader = this.getClass().getClassLoader();
PluginLoader.java,String u = me.toString();,if (me != null ) String u = me.toString();
PluginLoader.java,name = factory.getFullName();,if (factory != null ) name = factory.getFullName();
PluginLoader.java,uri = url.toURI();,if (url != null ) uri = url.toURI();
PluginLoader.java,plugin = loader.getPlugin();,if (loader != null ) plugin = loader.getPlugin();
PluginLoader.java,plugin = loader.getPlugin();,if (loader != null ) plugin = loader.getPlugin();
PluginLoader.java,plugin = loader.loadPlugin();,if (loader != null ) plugin = loader.loadPlugin();
Project.java,private DetectorFactoryCollection configuration = DetectorFactoryCollection.instance();,if (DetectorFactoryCollection != null ) private DetectorFactoryCollection configuration = DetectorFactoryCollection.instance();
Project.java,b = plugin.isGloballyEnabled();,if (plugin != null ) b = plugin.isGloballyEnabled();
TextUICommandLine.java,userPreferences = UserPreferences.createDefaultUserPreferences();,if (UserPreferences != null ) userPreferences = UserPreferences.createDefaultUserPreferences();
SuppressionDecorator.java,BugCollection bugCollection = delegate.getBugCollection();,if (delegate != null ) BugCollection bugCollection = delegate.getBugCollection();
SuppressionDecorator.java,Project project = bugCollection.getProject();,if (bugCollection != null ) Project project = bugCollection.getProject();
UserPreferences.java,DetectorFactoryCollection factoryCollection = DetectorFactoryCollection.instance();,if (DetectorFactoryCollection != null ) DetectorFactoryCollection factoryCollection = DetectorFactoryCollection.instance();
SourceFinder.java,String packageName = source.getPackageName();,if (source != null ) String packageName = source.getPackageName();
SourceFinder.java,String baseClassName = source.getClassName();,if (source != null ) String baseClassName = source.getClassName();
SourceFinder.java,String packageName = source.getPackageName();,if (source != null ) String packageName = source.getPackageName();
CopyBuggySource.java,"String name = sourceAnnotation.getPackageName() + ""."" + sourceAnnotation.getClassName();","if (sourceAnnotation != null ) String name = sourceAnnotation.getPackageName() + ""."" + sourceAnnotation.getClassName();"
CopyBuggySource.java,String fullName = sourceFile.getFullFileName();,if (sourceFile != null ) String fullName = sourceFile.getFullFileName();
CopyBuggySource.java,String packageName = sourceAnnotation.getPackageName();,if (sourceAnnotation != null ) String packageName = sourceAnnotation.getPackageName();
CopyBuggySource.java,String sourceFile = sourceAnnotation.getSourceFile();,if (sourceAnnotation != null ) String sourceFile = sourceAnnotation.getSourceFile();
CopyBuggySource.java,File parent = file.getParentFile();,if (file != null ) File parent = file.getParentFile();
Filter.java,String h = in.readLine();,if (in != null ) String h = in.readLine();
CloudCommentsPane.java,final CloudPlugin plugin = cloud.getPlugin();,if (cloud != null ) final CloudPlugin plugin = cloud.getPlugin();
CloudCommentsPane.java,String details = plugin.getDetails();,if (plugin != null ) String details = plugin.getDetails();
CloudCommentsPane.java,CommentInfo commentInfo = new CommentInfo().invoke();,if (CommentInfo() != null ) CommentInfo commentInfo = new CommentInfo().invoke();
CloudCommentsPane.java,boolean sameDesignation = commentInfo.isSameDesignation();,if (commentInfo != null ) boolean sameDesignation = commentInfo.isSameDesignation();
CloudCommentsPane.java,String designation = commentInfo.getDesignation();,if (commentInfo != null ) String designation = commentInfo.getDesignation();
CloudCommentsPane.java,designation = UserDesignation.UNCLASSIFIED.name();,if (UserDesignation != null ) designation = UserDesignation.UNCLASSIFIED.name();
MainFrameComponentFactory.java,int fontSize = (int) Driver.getFontSize();,if (Driver != null ) int fontSize = (int) Driver.getFontSize();
ZipFileCodeBase.java,int magicBytes = in.readInt();,if (in != null ) int magicBytes = in.readInt();
FieldSummary.java,UnreadFields unreadFields = AnalysisContext.currentAnalysisContext().getUnreadFields();,if (AnalysisContext != null ) UnreadFields unreadFields = AnalysisContext.currentAnalysisContext().getUnreadFields();
DontIgnoreResultOfPutIfAbsent.java,UnreadFields unreadFields = AnalysisContext.currentAnalysisContext().getUnreadFields();,if (AnalysisContext != null ) UnreadFields unreadFields = AnalysisContext.currentAnalysisContext().getUnreadFields();
FindMaskedFields.java,UnreadFields unreadFields = AnalysisContext.currentAnalysisContext().getUnreadFields();,if (AnalysisContext != null ) UnreadFields unreadFields = AnalysisContext.currentAnalysisContext().getUnreadFields();
FindUninitializedGet.java,UnreadFields unreadFields = AnalysisContext.currentAnalysisContext().getUnreadFields();,if (AnalysisContext != null ) UnreadFields unreadFields = AnalysisContext.currentAnalysisContext().getUnreadFields();
ReadOfInstanceFieldInMethodInvokedByConstructorInSuperclass.java,UnreadFields unreadFields = AnalysisContext.currentAnalysisContext().getUnreadFields();,if (AnalysisContext != null ) UnreadFields unreadFields = AnalysisContext.currentAnalysisContext().getUnreadFields();
UnreadFields.java,HashSet<XField> unknownAnotationAndUnwritten = new HashSet<XField>(unknownAnnotation.keySet());,if (HashSet<XField>(unknownAnnotation != null ) HashSet<XField> unknownAnotationAndUnwritten = new HashSet<XField>(unknownAnnotation.keySet());
IsNullValueFrameModelingVisitor.java,pushValue = IsNullValue.nonReportingNotNullValue();,if (IsNullValue != null ) pushValue = IsNullValue.nonReportingNotNullValue();
IsNullValueFrameModelingVisitor.java,pushValue = IsNullValue.nonReportingNotNullValue();,if (IsNullValue != null ) pushValue = IsNullValue.nonReportingNotNullValue();
IsNullValueFrameModelingVisitor.java,pushValue = IsNullValue.nonNullValue();,if (IsNullValue != null ) pushValue = IsNullValue.nonNullValue();
IsNullValueFrameModelingVisitor.java,pushValue = IsNullValue.nonReportingNotNullValue();,if (IsNullValue != null ) pushValue = IsNullValue.nonReportingNotNullValue();
IsNullValueFrameModelingVisitor.java,pushValue = IsNullValue.nonReportingNotNullValue();,if (IsNullValue != null ) pushValue = IsNullValue.nonReportingNotNullValue();
NullDerefAndRedundantComparisonFinder.java,ValueNumberFrame vnaFact = vnaDataflow.getResultFact(edge.getSource());,if (vnaDataflow != null ) ValueNumberFrame vnaFact = vnaDataflow.getResultFact(edge.getSource());
NullDerefAndRedundantComparisonFinder.java,ValueNumberFrame vnaTargetFact = vnaDataflow.getStartFact(edge.getTarget());,if (vnaDataflow != null ) ValueNumberFrame vnaTargetFact = vnaDataflow.getStartFact(edge.getTarget());
NullDerefAndRedundantComparisonFinder.java,IsNullValueFrame invSourceFact = invDataflow.getResultFact(edge.getSource());,if (invDataflow != null ) IsNullValueFrame invSourceFact = invDataflow.getResultFact(edge.getSource());
NullDerefAndRedundantComparisonFinder.java,IsNullValueFrame invTargetFact = invDataflow.getStartFact(edge.getTarget());,if (invDataflow != null ) IsNullValueFrame invTargetFact = invDataflow.getStartFact(edge.getTarget());
NullDerefAndRedundantComparisonFinder.java,UnconditionalValueDerefSet uvdSourceFact = uvdDataflow.getStartFact(edge.getSource());,if (uvdDataflow != null ) UnconditionalValueDerefSet uvdSourceFact = uvdDataflow.getStartFact(edge.getSource());
NullDerefAndRedundantComparisonFinder.java,UnconditionalValueDerefSet uvdTargetFact = uvdDataflow.getResultFact(edge.getTarget());,if (uvdDataflow != null ) UnconditionalValueDerefSet uvdTargetFact = uvdDataflow.getResultFact(edge.getTarget());
NullDerefAndRedundantComparisonFinder.java,Location location = Location.getLastLocation(edge.getSource());,if (Location != null ) Location location = Location.getLastLocation(edge.getSource());
FindBugs2Eclipse.java,Set<String> keySet = classPath.getApplicationCodebaseEntries().keySet();,if (classPath != null ) Set<String> keySet = classPath.getApplicationCodebaseEntries().keySet();
WorkspaceSettingsTab.java,boolean shortClassPath = optimizeClasspath.getSelection();,if (optimizeClasspath != null ) boolean shortClassPath = optimizeClasspath.getSelection();
CloudCommentsPane.java,String newText = bug.getAnnotationText();,if (bug != null ) String newText = bug.getAnnotationText();
CloudCommentsPane.java,String newDesignation = bug.getUserDesignationKey();,if (bug != null ) String newDesignation = bug.getUserDesignationKey();
CloudCommentsPane.java,designation = UserDesignation.UNCLASSIFIED.name();,if (UserDesignation != null ) designation = UserDesignation.UNCLASSIFIED.name();
MainFrame.java,SigninState state = cloud.getSigninState();,if (cloud != null ) SigninState state = cloud.getSigninState();
MainFrameComponentFactory.java,boolean checked = signInAuto.isSelected();,if (signInAuto != null ) boolean checked = signInAuto.isSelected();
PreferencesFrame.java,URL url = plugin.getPluginLoader().getURL();,if (plugin != null ) URL url = plugin.getPluginLoader().getURL();
CloudCommentsPane.java,final Cloud newCloud = newBugCollection.getCloud();,if (newBugCollection != null ) final Cloud newCloud = newBugCollection.getCloud();
MainFrame.java,List<String> fileList = curProject.getFileList();,if (curProject != null ) List<String> fileList = curProject.getFileList();
MainFrameTree.java,BugSet bs = new BugSet(mainFrame.getBugCollection());,if (BugSet(mainFrame != null ) BugSet bs = new BugSet(mainFrame.getBugCollection());
UserPreferences.java,this.filterSettings = ProjectFilterSettings.createDefault();,if (ProjectFilterSettings != null ) this.filterSettings = ProjectFilterSettings.createDefault();
CommentsArea.java,BugCollection bc = getMainFrame().getBugCollection();,if (getMainFrame() != null ) BugCollection bc = getMainFrame().getBugCollection();
CommentsArea.java,userCommentsTextUnenabledColor = mainPanel.getBackground();,if (mainPanel != null ) userCommentsTextUnenabledColor = mainPanel.getBackground();
CommentsArea.java,boolean b = frame.getProjectChanged();,if (frame != null ) boolean b = frame.getProjectChanged();
CommentsArea.java,boolean b = frame.getProjectChanged();,if (frame != null ) boolean b = frame.getProjectChanged();
CommentsArea.java,boolean b = frame.getProjectChanged();,if (frame != null ) boolean b = frame.getProjectChanged();
CommentsArea.java,final BugInstance bug = node.getBug();,if (node != null ) final BugInstance bug = node.getBug();
CommentsArea.java,BugSet filteredSet = aspects.getMatchingBugs(BugSet.getMainBugSet());,if (aspects != null ) BugSet filteredSet = aspects.getMatchingBugs(BugSet.getMainBugSet());
CommentsArea.java,BugCollection bugCollection = MainFrame.getInstance().getBugCollection();,if (MainFrame != null ) BugCollection bugCollection = MainFrame.getInstance().getBugCollection();
CommentsArea.java,BugInstance bug = frame.getCurrentSelectedBugLeaf().getBug();,if (frame != null ) BugInstance bug = frame.getCurrentSelectedBugLeaf().getBug();
CommentsArea.java,String oldValue = bug.getUserDesignationKey();,if (bug != null ) String oldValue = bug.getUserDesignationKey();
CommentsArea.java,final BugInstance bug = theNode.getBug();,if (theNode != null ) final BugInstance bug = theNode.getBug();
CommentsArea.java,String oldValue = bug.getUserDesignationKey();,if (bug != null ) String oldValue = bug.getUserDesignationKey();
CommentsArea.java,BugInstance bug = frame.getCurrentSelectedBugLeaf().getBug();,if (frame != null ) BugInstance bug = frame.getCurrentSelectedBugLeaf().getBug();
CommentsArea.java,int selectedIndex = designationComboBox.getSelectedIndex();,if (designationComboBox != null ) int selectedIndex = designationComboBox.getSelectedIndex();
CommentsArea.java,BugSet filteredSet = theAspects.getMatchingBugs(BugSet.getMainBugSet());,if (theAspects != null ) BugSet filteredSet = theAspects.getMatchingBugs(BugSet.getMainBugSet());
CommentsArea.java,BugSet filteredSet = theAspects.getMatchingBugs(BugSet.getMainBugSet());,if (theAspects != null ) BugSet filteredSet = theAspects.getMatchingBugs(BugSet.getMainBugSet());
CommentsArea.java,String commentsOnThisBug = nextNode.getBug().getAnnotationText();,if (nextNode != null ) String commentsOnThisBug = nextNode.getBug().getAnnotationText();
CommentsArea.java,int numItems = designationComboBox.getItemCount();,if (designationComboBox != null ) int numItems = designationComboBox.getItemCount();
CommentsArea.java,int itemCount = designationComboBox.getItemCount();,if (designationComboBox != null ) int itemCount = designationComboBox.getItemCount();
BugCollectionStorageCloud.java,String consensus = b.getXmlProps().getConsensus();,if (b != null ) String consensus = b.getXmlProps().getConsensus();
BugCollectionStorageCloud.java,Date fromXml = b.getXmlProps().getFirstSeen();,if (b != null ) Date fromXml = b.getXmlProps().getFirstSeen();
BugCollectionStorageCloud.java,long fromXmlTime = fromXml.getTime();,if (fromXml != null ) long fromXmlTime = fromXml.getTime();
PathsProvider.java,this.control = viewer.getList();,if (viewer != null ) this.control = viewer.getList();
WorkspaceSettingsTab.java,IProject project = propertyPage.getProject();,if (propertyPage != null ) IProject project = propertyPage.getProject();
WorkspaceSettingsTab.java,IStatus status = validator.validate(path.getPath());,if (validator != null ) IStatus status = validator.validate(path.getPath());
OpcodeStack.java,String clsName = dbc.getClassConstantOperand();,if (dbc != null ) String clsName = dbc.getClassConstantOperand();
CrossSiteScripting.java,XMethod writingToSource = writingTo.getReturnValueOf();,if (writingTo != null ) XMethod writingToSource = writingTo.getReturnValueOf();
PluginLoader.java,Plugin plugin = pluginLoader.loadPlugin();,if (pluginLoader != null ) Plugin plugin = pluginLoader.loadPlugin();
UserAnnotationsView.java,this.firstVersionText = firstVersion.trim();,if (firstVersion != null ) this.firstVersionText = firstVersion.trim();
UserAnnotationsView.java,int comboIndex = bug.getUserDesignationKeyIndex();,if (bug != null ) int comboIndex = bug.getUserDesignationKeyIndex();
ReportConfigurationTab.java,final IProject eclipseProj = propertyPage.getProject();,if (propertyPage != null ) final IProject eclipseProj = propertyPage.getProject();
ReportConfigurationTab.java,IProject eclipseProj = propertyPage.getProject();,if (propertyPage != null ) IProject eclipseProj = propertyPage.getProject();
ReportConfigurationTab.java,IProject eclipseProj = propertyPage.getProject();,if (propertyPage != null ) IProject eclipseProj = propertyPage.getProject();
ReportConfigurationTab.java,Project project = collection.getProject();,if (collection != null ) Project project = collection.getProject();
ReportConfigurationTab.java,CloudPlugin item = clouds.get(cloudCombo.getSelectionIndex());,if (clouds != null ) CloudPlugin item = clouds.get(cloudCombo.getSelectionIndex());
ReportConfigurationTab.java,IWorkbenchPage page = FindbugsPlugin.getActiveWorkbenchWindow().getActivePage();,if (FindbugsPlugin != null ) IWorkbenchPage page = FindbugsPlugin.getActiveWorkbenchWindow().getActivePage();
Driver.java,DetectorFactoryCollection i = DetectorFactoryCollection.instance();,if (DetectorFactoryCollection != null ) DetectorFactoryCollection i = DetectorFactoryCollection.instance();
Plugin.java,boolean enabledByDefault = plugin.isEnabledByDefault();,if (plugin != null ) boolean enabledByDefault = plugin.isEnabledByDefault();
CloudFactory.java,Plugin fbplugin = Plugin.getByName(plugin.getFindbugsPluginId());,if (Plugin != null ) Plugin fbplugin = Plugin.getByName(plugin.getFindbugsPluginId());
NewProjectWizard.java,"setText((value == null) ? """" : plugin.getDescription());","if (plugin != null ) setText((value == null) ? """" : plugin.getDescription());"
NewProjectWizard.java,newCloudId = cloudPlugin.getId();,if (cloudPlugin != null ) newCloudId = cloudPlugin.getId();
CommentsArea.java,userCommentsTextUnenabledColor = centerPanel.getBackground();,if (centerPanel != null ) userCommentsTextUnenabledColor = centerPanel.getBackground();
NewProjectWizard.java,BugCollection bugs = MainFrame.getInstance().getBugCollection();,if (MainFrame != null ) BugCollection bugs = MainFrame.getInstance().getBugCollection();
SplitLayout.java,int position = topLeftSPane.getDividerLocation();,if (topLeftSPane != null ) int position = topLeftSPane.getDividerLocation();
AbstractBugReporter.java,String message = ex.getMessage();,if (ex != null ) String message = ex.getMessage();
BugInstance.java,byte[] data = digest.digest(key.getBytes());,if (digest != null ) byte[] data = digest.digest(key.getBytes());
PluginLoader.java,InputStreamReader stream = new InputStreamReader(messageURL.openStream());,if (InputStreamReader(messageURL != null ) InputStreamReader stream = new InputStreamReader(messageURL.openStream());
SortedBugCollection.java,byte[] data = digest.digest(hash.getBytes());,if (digest != null ) byte[] data = digest.digest(hash.getBytes());
WebCloudNameLookup.java,String status = in.readLine();,if (in != null ) String status = in.readLine();
WebCloudNameLookup.java,sessionId = Long.parseLong(in.readLine());,if (Long != null ) sessionId = Long.parseLong(in.readLine());
WebCloudNameLookup.java,username = in.readLine();,if (in != null ) username = in.readLine();
PDEClassPathGenerator.java,location = cpe.getPath();,if (cpe != null ) location = cpe.getPath();
PDEClassPathGenerator.java,String locationStr = location.toOSString();,if (location != null ) String locationStr = location.toOSString();
WorkspaceSettingsTab.java,DetectorFactoryCollection dfc = DetectorFactoryCollection.instance();,if (DetectorFactoryCollection != null ) DetectorFactoryCollection dfc = DetectorFactoryCollection.instance();
WorkspaceSettingsTab.java,URL[] pluginList = dfc.getPluginList();,if (dfc != null ) URL[] pluginList = dfc.getPluginList();
WorkspaceSettingsTab.java,boolean shouldReplace = pluginList.length != detectorPaths.size();,if (detectorPaths != null ) boolean shouldReplace = pluginList.length != detectorPaths.size();
WorkspaceSettingsTab.java,String file = url.getFile();,if (url != null ) String file = url.getFile();
Reporter.java,List<String> classpathEntryList = bugCollection.getProject().getAuxClasspathEntryList();,if (bugCollection != null ) List<String> classpathEntryList = bugCollection.getProject().getAuxClasspathEntryList();
PreferencesFrame.java,URL urlString = f.toURI().toURL();,if (f != null ) URL urlString = f.toURI().toURL();
PreferencesFrame.java,boolean enabledByDefault = plugin.isEnabledByDefault();,if (plugin != null ) boolean enabledByDefault = plugin.isEnabledByDefault();
PreferencesFrame.java,"final JCheckBox checkBox = new JCheckBox(text, plugin.isGloballyEnabled());","if (plugin != null ) final JCheckBox checkBox = new JCheckBox(text, plugin.isGloballyEnabled());"
Filter.java,AppVersion v = collection.getCurrentAppVersion();,if (collection != null ) AppVersion v = collection.getCurrentAppVersion();
SetBugDatabaseInfo.java,AppVersion v = origCollection.getCurrentAppVersion();,if (origCollection != null ) AppVersion v = origCollection.getCurrentAppVersion();
PreferencesFrame.java,BugCollection bugCollection = MainFrame.getInstance().getBugCollection();,if (MainFrame != null ) BugCollection bugCollection = MainFrame.getInstance().getBugCollection();
PreferencesFrame.java,Plugin plugin = entry.getKey();,if (entry != null ) Plugin plugin = entry.getKey();
PreferencesFrame.java,BugCollection bugCollection = MainFrame.getInstance().getBugCollection();,if (MainFrame != null ) BugCollection bugCollection = MainFrame.getInstance().getBugCollection();
PreferencesFrame.java,Project project = bugCollection.getProject();,if (bugCollection != null ) Project project = bugCollection.getProject();
PreferencesFrame.java,File f = chooser.getSelectedFile();,if (chooser != null ) File f = chooser.getSelectedFile();
PreferencesFrame.java,String shortText = plugin.getShortDescription();,if (plugin != null ) String shortText = plugin.getShortDescription();
PreferencesFrame.java,"JCheckBox checkBox = new JCheckBox(shortText, plugin.isGloballyEnabled());","if (plugin != null ) JCheckBox checkBox = new JCheckBox(shortText, plugin.isGloballyEnabled());"
PreferencesFrame.java,Plugin plugin = entry.getKey();,if (entry != null ) Plugin plugin = entry.getKey();
PreferencesFrame.java,Collection<PluginLoader> plugins = PluginLoader.getAllPlugins();,if (PluginLoader != null ) Collection<PluginLoader> plugins = PluginLoader.getAllPlugins();
PreferencesFrame.java,String text = loader.getPlugin().getShortDescription();,if (loader != null ) String text = loader.getPlugin().getShortDescription();
PreferencesFrame.java,String id = loader.getPlugin().getPluginId();,if (loader != null ) String id = loader.getPlugin().getPluginId();
PreferencesFrame.java,"final JCheckBox checkBox = new JCheckBox(text, loader.globalledEnabled());","if (loader != null ) final JCheckBox checkBox = new JCheckBox(text, loader.globalledEnabled());"
PreferencesFrame.java,String longText = loader.getPlugin().getDetailedDescription();,if (loader != null ) String longText = loader.getPlugin().getDetailedDescription();
PreferencesFrame.java,String shortText = loader.getPlugin().getShortDescription();,if (loader != null ) String shortText = loader.getPlugin().getShortDescription();
PreferencesFrame.java,"JCheckBox checkBox = new JCheckBox(shortText, loader.globalledEnabled());","if (loader != null ) JCheckBox checkBox = new JCheckBox(shortText, loader.globalledEnabled());"
PreferencesFrame.java,PluginLoader loader = entry.getKey();,if (entry != null ) PluginLoader loader = entry.getKey();
SelectPluginsDialog.java,Collection<PluginLoader> plugins = PluginLoader.getAllPlugins();,if (PluginLoader != null ) Collection<PluginLoader> plugins = PluginLoader.getAllPlugins();
SelectPluginsDialog.java,String text = loader.getPlugin().getShortDescription();,if (loader != null ) String text = loader.getPlugin().getShortDescription();
SelectPluginsDialog.java,String id = loader.getPlugin().getPluginId();,if (loader != null ) String id = loader.getPlugin().getPluginId();
SelectPluginsDialog.java,"final JCheckBox checkBox = new JCheckBox(text, loader.globalledEnabled());","if (loader != null ) final JCheckBox checkBox = new JCheckBox(text, loader.globalledEnabled());"
SelectPluginsDialog.java,String longText = loader.getPlugin().getDetailedDescription();,if (loader != null ) String longText = loader.getPlugin().getDetailedDescription();
SelectPluginsDialog.java,boolean selected = checkBox.isSelected();,if (checkBox != null ) boolean selected = checkBox.isSelected();
SelectPluginsDialog.java,File f = chooser.getSelectedFile();,if (chooser != null ) File f = chooser.getSelectedFile();
SelectPluginsDialog.java,String shortText = loader.getPlugin().getShortDescription();,if (loader != null ) String shortText = loader.getPlugin().getShortDescription();
SelectPluginsDialog.java,"JCheckBox checkBox = new JCheckBox(shortText, loader.globalledEnabled());","if (loader != null ) JCheckBox checkBox = new JCheckBox(shortText, loader.globalledEnabled());"
SelectPluginsDialog.java,PluginLoader loader = entry.getKey();,if (entry != null ) PluginLoader loader = entry.getKey();
DetectorFactoryCollection.java,Plugin plugin = pluginLoader.getPlugin();,if (pluginLoader != null ) Plugin plugin = pluginLoader.getPlugin();
TestDataflowAnalysis.java,PluginLoader pluginLoader = plugin.getPluginLoader();,if (plugin != null ) PluginLoader pluginLoader = plugin.getPluginLoader();
CommentsArea.java,private Executor backgroundExecutor = Executors.newSingleThreadExecutor();,if (Executors != null ) private Executor backgroundExecutor = Executors.newSingleThreadExecutor();
FindbugsPlugin.java,DetectorFactoryCollection dfc = DetectorFactoryCollection.instance();,if (DetectorFactoryCollection != null ) DetectorFactoryCollection dfc = DetectorFactoryCollection.instance();
FindbugsPlugin.java,URL[] pluginArr = dfc.getPluginList();,if (dfc != null ) URL[] pluginArr = dfc.getPluginList();
FindbugsPlugin.java,boolean shouldReplace = pluginArr.length != detectorPaths.size();,if (detectorPaths != null ) boolean shouldReplace = pluginArr.length != detectorPaths.size();
FindbugsPlugin.java,String file = url.getFile();,if (url != null ) String file = url.getFile();
FindbugsPlugin.java,DetectorFactoryCollection dfc = DetectorFactoryCollection.rawInstance();,if (DetectorFactoryCollection != null ) DetectorFactoryCollection dfc = DetectorFactoryCollection.rawInstance();
WebCloudNetworkClient.java,OutputStream out = conn.getOutputStream();,if (conn != null ) OutputStream out = conn.getOutputStream();
WebCloudNetworkClient.java,OutputStream outputStream = conn.getOutputStream();,if (conn != null ) OutputStream outputStream = conn.getOutputStream();
WebCloudNetworkClient.java,OutputStream stream = conn.getOutputStream();,if (conn != null ) OutputStream stream = conn.getOutputStream();
WebCloudNetworkClient.java,int responseCode = conn.getResponseCode();,if (conn != null ) int responseCode = conn.getResponseCode();
WebCloudNetworkClient.java,OutputStream outputStream = conn.getOutputStream();,if (conn != null ) OutputStream outputStream = conn.getOutputStream();
WebCloudNetworkClient.java,GetRecentEvaluations.Builder msgb = GetRecentEvaluations.newBuilder();,if (GetRecentEvaluations != null ) GetRecentEvaluations.Builder msgb = GetRecentEvaluations.newBuilder();
WebCloudNetworkClient.java,RecentEvaluations response = RecentEvaluations.parseFrom(conn.getInputStream());,if (RecentEvaluations != null ) RecentEvaluations response = RecentEvaluations.parseFrom(conn.getInputStream());
WebCloudNetworkClient.java,earliestSeenServerTime = response.getCurrentServerTime();,if (response != null ) earliestSeenServerTime = response.getCurrentServerTime();
WebCloudNetworkClient.java,OutputStream outputStream = conn.getOutputStream();,if (conn != null ) OutputStream outputStream = conn.getOutputStream();
WebCloudNetworkClient.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
WebCloudNetworkClient.java,start = System.currentTimeMillis();,if (System != null ) start = System.currentTimeMillis();
WebCloudNetworkClient.java,OutputStream stream = conn.getOutputStream();,if (conn != null ) OutputStream stream = conn.getOutputStream();
WebCloudNetworkClient.java,start = System.currentTimeMillis();,if (System != null ) start = System.currentTimeMillis();
WebCloudNetworkClient.java,int responseCode = conn.getResponseCode();,if (conn != null ) int responseCode = conn.getResponseCode();
WebCloudNetworkClient.java,InputStream instream = conn.getInputStream();,if (conn != null ) InputStream instream = conn.getInputStream();
WebCloudNetworkClient.java,int foundIssues = response.getFoundIssuesCount();,if (response != null ) int foundIssues = response.getFoundIssuesCount();
WebCloudNetworkClient.java,OutputStream stream = conn.getOutputStream();,if (conn != null ) OutputStream stream = conn.getOutputStream();
WebCloudNetworkClient.java,int responseCode = conn.getResponseCode();,if (conn != null ) int responseCode = conn.getResponseCode();
PluginLoader.java,String u = me.toString();,if (me != null ) String u = me.toString();
WebCloudNetworkClient.java,RecentEvaluations evaluations = RecentEvaluations.parseFrom(conn.getInputStream());,if (RecentEvaluations != null ) RecentEvaluations evaluations = RecentEvaluations.parseFrom(conn.getInputStream());
WebCloudClient.java,evals = networkClient.getRecentEvaluationsFromServer();,if (networkClient != null ) evals = networkClient.getRecentEvaluationsFromServer();
ProtoClasses.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
ProtoClasses.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
ProtoClasses.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
ProtoClasses.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
ProtoClasses.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
ProtoClasses.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
ProtoClasses.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
ProtoClasses.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
ProtoClasses.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
ProtoClasses.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
ProtoClasses.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
ProtoClasses.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
ProtoClasses.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
ProtoClasses.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
ProtoClasses.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
ProtoClasses.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
ProtoClasses.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
ProtoClasses.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
ProtoClasses.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
ProtoClasses.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
ProtoClasses.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
ProtoClasses.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
ProtoClasses.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
ProtoClasses.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
DetectorFactoryCollection.java,boolean show = !pluginLoader.isCorePlugin();,if (!pluginLoader != null ) boolean show = !pluginLoader.isCorePlugin();
BugRanker.java,DetectorFactoryCollection factory = DetectorFactoryCollection.instance();,if (DetectorFactoryCollection != null ) DetectorFactoryCollection factory = DetectorFactoryCollection.instance();
BugRanker.java,BugRanker pluginRanker = plugin.getBugRanker();,if (plugin != null ) BugRanker pluginRanker = plugin.getBugRanker();
DetectorFactoryCollection.java,File[] contentList = pluginDir.listFiles();,if (pluginDir != null ) File[] contentList = pluginDir.listFiles();
DetectorFactoryCollection.java,String value = (String) e.getValue();,if (e != null ) String value = (String) e.getValue();
DetectorFactoryCollection.java,corePlugin = corePluginLoader.getPlugin();,if (corePluginLoader != null ) corePlugin = corePluginLoader.getPlugin();
DetectorFactoryCollection.java,String plugin = in.readLine();,if (in != null ) String plugin = in.readLine();
DetectorFactoryCollection.java,URLConnection connection = url.openConnection();,if (url != null ) URLConnection connection = url.openConnection();
DetectorFactoryCollection.java,String contentType = connection.getContentType();,if (connection != null ) String contentType = connection.getContentType();
DetectorFactoryCollection.java,String urlname = pluginListProperties.toString();,if (pluginListProperties != null ) String urlname = pluginListProperties.toString();
PluginLoader.java,String location = url.getPath();,if (url != null ) String location = url.getPath();
SigninStatusBox.java,final boolean origSelection = AppEngineNameLookup.isSavingSessionInfoEnabled();,if (AppEngineNameLookup != null ) final boolean origSelection = AppEngineNameLookup.isSavingSessionInfoEnabled();
QueryServlet.java,int numEvaluations = evaluationsList.size();,if (evaluationsList != null ) int numEvaluations = evaluationsList.size();
QueryServlet.java,DbEvaluation dbEvaluation = it.previous();,if (it != null ) DbEvaluation dbEvaluation = it.previous();
QueryServlet.java,boolean userIsNew = seenUsernames.add(dbEvaluation.getWhoId());,if (seenUsernames != null ) boolean userIsNew = seenUsernames.add(dbEvaluation.getWhoId());
DeepSubtypeAnalysis.java,JavaClass subJavaClass = Repository.lookupClass(subtype.getDottedClassName());,if (Repository != null ) JavaClass subJavaClass = Repository.lookupClass(subtype.getDottedClassName());
WebCloudClient.java,String protoHash = AppEngineProtoUtil.decodeHash(updatedIssue.getHash());,if (AppEngineProtoUtil != null ) String protoHash = AppEngineProtoUtil.decodeHash(updatedIssue.getHash());
WebCloudClient.java,String newHash = AppEngineProtoUtil.decodeHash(issueToStore.getHash());,if (AppEngineProtoUtil != null ) String newHash = AppEngineProtoUtil.decodeHash(issueToStore.getHash());
WebCloudNetworkClient.java,final String hash = AppEngineProtoUtil.decodeHash(issue.getHash());,if (AppEngineProtoUtil != null ) final String hash = AppEngineProtoUtil.decodeHash(issue.getHash());
WebCloudIssueSyncTests.java,List<String> hashesFromFindIssues = AppEngineProtoUtil.decodeHashes(hashes.getMyIssueHashesList());,if (AppEngineProtoUtil != null ) List<String> hashesFromFindIssues = AppEngineProtoUtil.decodeHashes(hashes.getMyIssueHashesList());
WebCloudIssueSyncTests.java,List<String> hashesFromFindIssues = AppEngineProtoUtil.decodeHashes(hashes.getMyIssueHashesList());,if (AppEngineProtoUtil != null ) List<String> hashesFromFindIssues = AppEngineProtoUtil.decodeHashes(hashes.getMyIssueHashesList());
QueryServlet.java,List<String> hashes = AppEngineProtoUtil.decodeHashes(loginMsg.getMyIssueHashesList());,if (AppEngineProtoUtil != null ) List<String> hashes = AppEngineProtoUtil.decodeHashes(loginMsg.getMyIssueHashesList());
UpdateServlet.java,String hashStr = AppEngineProtoUtil.decodeHash(issue.getHash());,if (AppEngineProtoUtil != null ) String hashStr = AppEngineProtoUtil.decodeHash(issue.getHash());
UpdateServlet.java,String hash = AppEngineProtoUtil.decodeHash(uploadEvalMsg.getHash());,if (AppEngineProtoUtil != null ) String hash = AppEngineProtoUtil.decodeHash(uploadEvalMsg.getHash());
UpdateServlet.java,String decodedHash = AppEngineProtoUtil.decodeHash(setBugLinkMsg.getHash());,if (AppEngineProtoUtil != null ) String decodedHash = AppEngineProtoUtil.decodeHash(setBugLinkMsg.getHash());
WebCloudAuthTests.java,AppEngineCloudNetworkClient spyNetworkClient = cloud.createSpyNetworkClient();,if (cloud != null ) AppEngineCloudNetworkClient spyNetworkClient = cloud.createSpyNetworkClient();
WebCloudAuthTests.java,AppEngineCloudNetworkClient spyNetworkClient = cloud.createSpyNetworkClient();,if (cloud != null ) AppEngineCloudNetworkClient spyNetworkClient = cloud.createSpyNetworkClient();
WebCloudIssueSyncTests.java,AppEngineCloudNetworkClient spyNetworkClient = cloud.createSpyNetworkClient();,if (cloud != null ) AppEngineCloudNetworkClient spyNetworkClient = cloud.createSpyNetworkClient();
WebCloudMiscTests.java,AppEngineCloudNetworkClient spyNetworkClient = cloud.createSpyNetworkClient();,if (cloud != null ) AppEngineCloudNetworkClient spyNetworkClient = cloud.createSpyNetworkClient();
GoogleCodeBugFiler.java,IGuiCallback callback = appEngineCloudClient.getGuiCallback();,if (appEngineCloudClient != null ) IGuiCallback callback = appEngineCloudClient.getGuiCallback();
GoogleCodeBugFiler.java,IGuiCallback guiCallback = appEngineCloudClient.getGuiCallback();,if (appEngineCloudClient != null ) IGuiCallback guiCallback = appEngineCloudClient.getGuiCallback();
JiraBugFiler.java,IGuiCallback callback = appEngineCloudClient.getGuiCallback();,if (appEngineCloudClient != null ) IGuiCallback callback = appEngineCloudClient.getGuiCallback();
BugFilingHelper.java,final String bugLink = appEngineCloudClient.getBugLink(b).toExternalForm();,if (appEngineCloudClient != null ) final String bugLink = appEngineCloudClient.getBugLink(b).toExternalForm();
JiraSoapServiceServiceLocator.java,ports = new java.util.HashSet();,if (java != null ) ports = new java.util.HashSet();
AppEngineCloudClient.java,Long sessionId = networkClient.getSessionId();,if (networkClient != null ) Long sessionId = networkClient.getSessionId();
AppEngineCloudClient.java,Issue issue = networkClient.getIssueByHash(bd.getInstanceHash());,if (networkClient != null ) Issue issue = networkClient.getIssueByHash(bd.getInstanceHash());
AppEngineCloudClient.java,Issue issue = networkClient.getIssueByHash(b.getInstanceHash());,if (networkClient != null ) Issue issue = networkClient.getIssueByHash(b.getInstanceHash());
AppEngineCloudClient.java,String url = issue.getBugLink();,if (issue != null ) String url = issue.getBugLink();
AppEngineCloudClient.java,Issue issue = networkClient.getIssueByHash(instance.getInstanceHash());,if (networkClient != null ) Issue issue = networkClient.getIssueByHash(instance.getInstanceHash());
AppEngineCloudClient.java,Issue issue = networkClient.getIssueByHash(b.getInstanceHash());,if (networkClient != null ) Issue issue = networkClient.getIssueByHash(b.getInstanceHash());
AppEngineCloudClient.java,long userTimestamp = bugInstance.getUserTimestamp();,if (bugInstance != null ) long userTimestamp = bugInstance.getUserTimestamp();
AppEngineCloudClient.java,int numBugs = bugsByHash.size();,if (bugsByHash != null ) int numBugs = bugsByHash.size();
AppEngineCloudClient.java,Collection<BugInstance> newBugs = bugsByHash.values();,if (bugsByHash != null ) Collection<BugInstance> newBugs = bugsByHash.values();
AppEngineCloudClient.java,boolean hasTimestampsToUpdate = !networkClient.getTimestampsToUpdate().isEmpty();,if (!networkClient != null ) boolean hasTimestampsToUpdate = !networkClient.getTimestampsToUpdate().isEmpty();
AppEngineCloudClient.java,boolean hasBugsToUpload = !newBugs.isEmpty();,if (!newBugs != null ) boolean hasBugsToUpload = !newBugs.isEmpty();
AppEngineCloudClient.java,evals = networkClient.getRecentEvaluationsFromServer();,if (networkClient != null ) evals = networkClient.getRecentEvaluationsFromServer();
AppEngineCloudClient.java,String protoHash = AppEngineProtoUtil.decodeHash(updatedIssue.getHash());,if (AppEngineProtoUtil != null ) String protoHash = AppEngineProtoUtil.decodeHash(updatedIssue.getHash());
AppEngineCloudClient.java,String newHash = AppEngineProtoUtil.decodeHash(issueToStore.getHash());,if (AppEngineProtoUtil != null ) String newHash = AppEngineProtoUtil.decodeHash(issueToStore.getHash());
AppEngineCloudClient.java,Evaluation evaluation = it.previous();,if (it != null ) Evaluation evaluation = it.previous();
AppEngineCloudClient.java,boolean isNewUsername = seenUsernames.add(evaluation.getWho());,if (seenUsernames != null ) boolean isNewUsername = seenUsernames.add(evaluation.getWho());
AppEngineCloudNetworkClient.java,this.sessionId = lookerupper.getSessionId();,if (lookerupper != null ) this.sessionId = lookerupper.getSessionId();
AppEngineCloudNetworkClient.java,this.username = lookerupper.getUsername();,if (lookerupper != null ) this.username = lookerupper.getUsername();
AppEngineCloudNetworkClient.java,this.host = lookerupper.getHost();,if (lookerupper != null ) this.host = lookerupper.getHost();
AppEngineCloudNetworkClient.java,this.sessionId = lookerupper.getSessionId();,if (lookerupper != null ) this.sessionId = lookerupper.getSessionId();
AppEngineCloudNetworkClient.java,this.username = lookerupper.getUsername();,if (lookerupper != null ) this.username = lookerupper.getUsername();
AppEngineCloudNetworkClient.java,this.host = lookerupper.getHost();,if (lookerupper != null ) this.host = lookerupper.getHost();
AppEngineCloudNetworkClient.java,Issue issue = issuesByHash.get(instance.getInstanceHash());,if (issuesByHash != null ) Issue issue = issuesByHash.get(instance.getInstanceHash());
AppEngineCloudNetworkClient.java,OutputStream outputStream = conn.getOutputStream();,if (conn != null ) OutputStream outputStream = conn.getOutputStream();
AppEngineCloudNetworkClient.java,OutputStream stream = conn.getOutputStream();,if (conn != null ) OutputStream stream = conn.getOutputStream();
AppEngineCloudNetworkClient.java,int responseCode = conn.getResponseCode();,if (conn != null ) int responseCode = conn.getResponseCode();
AppEngineCloudNetworkClient.java,final int numBugs = hashes.size();,if (hashes != null ) final int numBugs = hashes.size();
AppEngineCloudNetworkClient.java,int sofar = numberOfBugsCheckedSoFar.get();,if (numberOfBugsCheckedSoFar != null ) int sofar = numberOfBugsCheckedSoFar.get();
AppEngineCloudNetworkClient.java,final int bugCount = timestamps.size();,if (timestamps != null ) final int bugCount = timestamps.size();
AppEngineCloudNetworkClient.java,Calendar now = Calendar.getInstance();,if (Calendar != null ) Calendar now = Calendar.getInstance();
AppEngineCloudNetworkClient.java,TimeZone timeZone = now.getTimeZone();,if (now != null ) TimeZone timeZone = now.getTimeZone();
AppEngineCloudNetworkClient.java,String timeStr = df.format(now.getTime());,if (df != null ) String timeStr = df.format(now.getTime());
AppEngineCloudNetworkClient.java,boolean daylight = timeZone.inDaylightTime(now.getTime());,if (timeZone != null ) boolean daylight = timeZone.inDaylightTime(now.getTime());
AppEngineCloudNetworkClient.java,String earliestStr = df.format(earliest.getTime());,if (df != null ) String earliestStr = df.format(earliest.getTime());
AppEngineCloudNetworkClient.java,int updated = soFar.addAndGet(partition.size());,if (soFar != null ) int updated = soFar.addAndGet(partition.size());
AppEngineCloudNetworkClient.java,final int bugCount = newBugs.size();,if (newBugs != null ) final int bugCount = newBugs.size();
AppEngineCloudNetworkClient.java,int uploaded = bugsUploaded.get();,if (bugsUploaded != null ) int uploaded = bugsUploaded.get();
AppEngineCloudNetworkClient.java,mostRecentEvaluationMillis = eval.getWhen();,if (eval != null ) mostRecentEvaluationMillis = eval.getWhen();
AppEngineCloudNetworkClient.java,OutputStream outputStream = conn.getOutputStream();,if (conn != null ) OutputStream outputStream = conn.getOutputStream();
AppEngineCloudNetworkClient.java,GetRecentEvaluations.Builder msgb = GetRecentEvaluations.newBuilder();,if (GetRecentEvaluations != null ) GetRecentEvaluations.Builder msgb = GetRecentEvaluations.newBuilder();
AppEngineCloudNetworkClient.java,Issue issue = issuesByHash.get(b.getInstanceHash());,if (issuesByHash != null ) Issue issue = issuesByHash.get(b.getInstanceHash());
AppEngineCloudNetworkClient.java,BugDesignation designation = bugInstance.getNonnullUserDesignation();,if (bugInstance != null ) BugDesignation designation = bugInstance.getNonnullUserDesignation();
AppEngineCloudNetworkClient.java,long timestamp = designation.getTimestamp();,if (designation != null ) long timestamp = designation.getTimestamp();
AppEngineCloudNetworkClient.java,String designationKey = designation.getDesignationKey();,if (designation != null ) String designationKey = designation.getDesignationKey();
AppEngineCloudNetworkClient.java,String comment = designation.getAnnotationText();,if (designation != null ) String comment = designation.getAnnotationText();
AppEngineCloudNetworkClient.java,String hash = bugInstance.getInstanceHash();,if (bugInstance != null ) String hash = bugInstance.getInstanceHash();
AppEngineCloudNetworkClient.java,Evaluation eval = evalBuilder.build();,if (evalBuilder != null ) Evaluation eval = evalBuilder.build();
AppEngineCloudNetworkClient.java,OutputStream outputStream = conn.getOutputStream();,if (conn != null ) OutputStream outputStream = conn.getOutputStream();
AppEngineCloudNetworkClient.java,FindIssues.Builder msgb = FindIssues.newBuilder();,if (FindIssues != null ) FindIssues.Builder msgb = FindIssues.newBuilder();
AppEngineCloudNetworkClient.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
AppEngineCloudNetworkClient.java,start = System.currentTimeMillis();,if (System != null ) start = System.currentTimeMillis();
AppEngineCloudNetworkClient.java,OutputStream stream = conn.getOutputStream();,if (conn != null ) OutputStream stream = conn.getOutputStream();
AppEngineCloudNetworkClient.java,start = System.currentTimeMillis();,if (System != null ) start = System.currentTimeMillis();
AppEngineCloudNetworkClient.java,int responseCode = conn.getResponseCode();,if (conn != null ) int responseCode = conn.getResponseCode();
AppEngineCloudNetworkClient.java,InputStream instream = conn.getInputStream();,if (conn != null ) InputStream instream = conn.getInputStream();
AppEngineCloudNetworkClient.java,int foundIssues = response.getFoundIssuesCount();,if (response != null ) int foundIssues = response.getFoundIssuesCount();
AppEngineCloudNetworkClient.java,final String hash = AppEngineProtoUtil.decodeHash(issue.getHash());,if (AppEngineProtoUtil != null ) final String hash = AppEngineProtoUtil.decodeHash(issue.getHash());
AppEngineCloudNetworkClient.java,ExecutorService updateExecutor = cloudClient.getBugUpdateExecutor();,if (cloudClient != null ) ExecutorService updateExecutor = cloudClient.getBugUpdateExecutor();
AppEngineCloudNetworkClient.java,Builder uploadIssuesCmd = UploadIssues.newBuilder();,if (UploadIssues != null ) Builder uploadIssuesCmd = UploadIssues.newBuilder();
AppEngineCloudNetworkClient.java,OutputStream stream = conn.getOutputStream();,if (conn != null ) OutputStream stream = conn.getOutputStream();
AppEngineCloudNetworkClient.java,int responseCode = conn.getResponseCode();,if (conn != null ) int responseCode = conn.getResponseCode();
BugFilingHelper.java,final String bugLink = appEngineCloudClient.getBugLink(b).toExternalForm();,if (appEngineCloudClient != null ) final String bugLink = appEngineCloudClient.getBugLink(b).toExternalForm();
EvaluationsFromXmlUploader.java,int num = localAnnotations.size();,if (localAnnotations != null ) int num = localAnnotations.size();
EvaluationsFromXmlUploader.java,String user = bd.getUser();,if (bd != null ) String user = bd.getUser();
GoogleCodeBugFiler.java,Status status = issue.getStatus();,if (issue != null ) Status status = issue.getStatus();
GoogleCodeBugFiler.java,IOException ioe = new IOException(e.getMessage());,if (IOException(e != null ) IOException ioe = new IOException(e.getMessage());
GoogleCodeBugFiler.java,IGuiCallback callback = appEngineCloudClient.getGuiCallback();,if (appEngineCloudClient != null ) IGuiCallback callback = appEngineCloudClient.getGuiCallback();
GoogleCodeBugFiler.java,String viewUrl = googleCodeIssue.getHtmlLink().getHref();,if (googleCodeIssue != null ) String viewUrl = googleCodeIssue.getHtmlLink().getHref();
GoogleCodeBugFiler.java,IGuiCallback guiCallback = appEngineCloudClient.getGuiCallback();,if (appEngineCloudClient != null ) IGuiCallback guiCallback = appEngineCloudClient.getGuiCallback();
JiraBugFiler.java,IOException ioe = new IOException(e.getMessage());,if (IOException(e != null ) IOException ioe = new IOException(e.getMessage());
JiraBugFiler.java,String projectId = project.getId();,if (project != null ) String projectId = project.getId();
JiraBugFiler.java,issueTypeId = issueType.getId();,if (issueType != null ) issueTypeId = issueType.getId();
JiraBugFiler.java,IGuiCallback callback = appEngineCloudClient.getGuiCallback();,if (appEngineCloudClient != null ) IGuiCallback callback = appEngineCloudClient.getGuiCallback();
JiraBugFiler.java,dashboardUrl = dashboardUrl.trim();,if (dashboardUrl != null ) dashboardUrl = dashboardUrl.trim();
AppEngineCloudAuthTests.java,AppEngineCloudNetworkClient spyNetworkClient = cloud.createSpyNetworkClient();,if (cloud != null ) AppEngineCloudNetworkClient spyNetworkClient = cloud.createSpyNetworkClient();
AppEngineCloudAuthTests.java,LogIn logIn = LogIn.parseFrom(findIssuesOutput.toByteArray());,if (LogIn != null ) LogIn logIn = LogIn.parseFrom(findIssuesOutput.toByteArray());
AppEngineCloudAuthTests.java,AppEngineCloudNetworkClient spyNetworkClient = cloud.createSpyNetworkClient();,if (cloud != null ) AppEngineCloudNetworkClient spyNetworkClient = cloud.createSpyNetworkClient();
AppEngineCloudAuthTests.java,LogIn logIn = LogIn.parseFrom(signInReq.toByteArray());,if (LogIn != null ) LogIn logIn = LogIn.parseFrom(signInReq.toByteArray());
AppEngineCloudCallbackTests.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
AppEngineCloudCallbackTests.java,Throwable t = bgThreadFuture.get();,if (bgThreadFuture != null ) Throwable t = bgThreadFuture.get();
AppEngineCloudIssueSyncTests.java,FindIssues hashes = FindIssues.parseFrom(findIssuesOutput.toByteArray());,if (FindIssues != null ) FindIssues hashes = FindIssues.parseFrom(findIssuesOutput.toByteArray());
AppEngineCloudIssueSyncTests.java,List<String> hashesFromFindIssues = AppEngineProtoUtil.decodeHashes(hashes.getMyIssueHashesList());,if (AppEngineProtoUtil != null ) List<String> hashesFromFindIssues = AppEngineProtoUtil.decodeHashes(hashes.getMyIssueHashesList());
AppEngineCloudIssueSyncTests.java,FindIssues hashes = FindIssues.parseFrom(findIssuesOutput.toByteArray());,if (FindIssues != null ) FindIssues hashes = FindIssues.parseFrom(findIssuesOutput.toByteArray());
AppEngineCloudIssueSyncTests.java,List<String> hashesFromFindIssues = AppEngineProtoUtil.decodeHashes(hashes.getMyIssueHashesList());,if (AppEngineProtoUtil != null ) List<String> hashesFromFindIssues = AppEngineProtoUtil.decodeHashes(hashes.getMyIssueHashesList());
AppEngineCloudIssueSyncTests.java,LogIn logIn = LogIn.parseFrom(logInOutput.toByteArray());,if (LogIn != null ) LogIn logIn = LogIn.parseFrom(logInOutput.toByteArray());
AppEngineCloudIssueSyncTests.java,UploadIssues uploadedIssues = UploadIssues.parseFrom(uploadIssuesBuffer.toByteArray());,if (UploadIssues != null ) UploadIssues uploadedIssues = UploadIssues.parseFrom(uploadIssuesBuffer.toByteArray());
AppEngineCloudIssueSyncTests.java,AppEngineCloudNetworkClient spyNetworkClient = cloud.createSpyNetworkClient();,if (cloud != null ) AppEngineCloudNetworkClient spyNetworkClient = cloud.createSpyNetworkClient();
AppEngineCloudMiscTests.java,AppEngineCloudNetworkClient spyNetworkClient = cloud.createSpyNetworkClient();,if (cloud != null ) AppEngineCloudNetworkClient spyNetworkClient = cloud.createSpyNetworkClient();
BugFilingTest.java,Object[] args = invocationOnMock.getArguments();,if (invocationOnMock != null ) Object[] args = invocationOnMock.getArguments();
BugFilingTest.java,Object[] args = invocationOnMock.getArguments();,if (invocationOnMock != null ) Object[] args = invocationOnMock.getArguments();
MockAppEngineCloudClient.java,Object[] args = invocation.getArguments();,if (invocation != null ) Object[] args = invocation.getArguments();
MockAppEngineCloudClient.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
MockAppEngineCloudClient.java,String expectedUrl = connection.url();,if (connection != null ) String expectedUrl = connection.url();
MockAppEngineCloudClient.java,responseStream = new ByteArrayInputStream(response.toByteArray());,if (ByteArrayInputStream(response != null ) responseStream = new ByteArrayInputStream(response.toByteArray());
AppEngineCloudNetworkClient.java,Builder issueList = UploadIssues.newBuilder();,if (UploadIssues != null ) Builder issueList = UploadIssues.newBuilder();
UpdateServlet.java,DbUser user = users.iterator().next();,if (users != null ) DbUser user = users.iterator().next();
AuthServlet.java,String openidUrl = openIdUser.getIdentity();,if (openIdUser != null ) String openidUrl = openIdUser.getIdentity();
AuthServlet.java,tx = pm.currentTransaction();,if (pm != null ) tx = pm.currentTransaction();
AuthServlet.java,dbUser = result.iterator().next();,if (result != null ) dbUser = result.iterator().next();
AuthServlet.java,tx = pm.currentTransaction();,if (pm != null ) tx = pm.currentTransaction();
AppEngineCloudClient.java,String protoHash = decodeHash(updatedIssue.getHash());,if (decodeHash(updatedIssue != null ) String protoHash = decodeHash(updatedIssue.getHash());
AppEngineCloudClient.java,String newHash = decodeHash(issueToStore.getHash());,if (decodeHash(issueToStore != null ) String newHash = decodeHash(issueToStore.getHash());
MockAppEngineCloudClient.java,urlsRequested = Lists.newArrayList();,if (Lists != null ) urlsRequested = Lists.newArrayList();
AbstractSwingGuiCallback.java,JComponent field = item.getField();,if (item != null ) JComponent field = item.getField();
AuthServlet.java,Transaction tx = pm.currentTransaction();,if (pm != null ) Transaction tx = pm.currentTransaction();
PrintClass.java,String name = ze.getName();,if (ze != null ) String name = ze.getName();
CloneStringArray.java,String[] copy = (String[]) args.clone();,if (args != null ) String[] copy = (String[]) args.clone();
RemoteConfiguration.java,this.timeTrackingHoursPerDay == other.getTimeTrackingHoursPerDay();,if (other != null ) this.timeTrackingHoursPerDay == other.getTimeTrackingHoursPerDay();
RemoteIssueType.java,this.subTask == other.isSubTask();,if (other != null ) this.subTask == other.isSubTask();
AppEngineCloudClient.java,Evaluation evaluation = it.previous();,if (it != null ) Evaluation evaluation = it.previous();
AppEngineCloudIssueSyncTests.java,List<String> hashesFromFindIssues = AppEngineProtoUtil.decodeHashes(hashes.getMyIssueHashesList());,if (AppEngineProtoUtil != null ) List<String> hashesFromFindIssues = AppEngineProtoUtil.decodeHashes(hashes.getMyIssueHashesList());
AppEngineCloudIssueSyncTests.java,List<String> hashesFromFindIssues = AppEngineProtoUtil.decodeHashes(hashes.getMyIssueHashesList());,if (AppEngineProtoUtil != null ) List<String> hashesFromFindIssues = AppEngineProtoUtil.decodeHashes(hashes.getMyIssueHashesList());
ProtoClasses.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
ProtoClasses.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
ProtoClasses.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
ProtoClasses.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
ProtoClasses.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
ProtoClasses.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
ProtoClasses.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
ProtoClasses.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
ProtoClasses.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
ProtoClasses.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
ProtoClasses.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
ProtoClasses.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
ProtoClasses.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
ProtoClasses.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
ProtoClasses.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
ProtoClasses.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
ProtoClasses.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
ProtoClasses.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
ProtoClasses.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
ProtoClasses.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
ProtoClasses.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
ProtoClasses.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
ProtoClasses.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
ProtoClasses.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
QueryServlet.java,long startTime = recentEvalsRequest.getTimestamp();,if (recentEvalsRequest != null ) long startTime = recentEvalsRequest.getTimestamp();
AppEngineCloudClient.java,evals = networkClient.getRecentEvaluationsFromServer();,if (networkClient != null ) evals = networkClient.getRecentEvaluationsFromServer();
AppEngineCloudClient.java,boolean isNewUsername = seenUsernames.add(evaluation.getWho());,if (seenUsernames != null ) boolean isNewUsername = seenUsernames.add(evaluation.getWho());
AppEngineCloudNetworkClient.java,this.sessionId = lookerupper.getSessionId();,if (lookerupper != null ) this.sessionId = lookerupper.getSessionId();
AppEngineCloudNetworkClient.java,this.username = lookerupper.getUsername();,if (lookerupper != null ) this.username = lookerupper.getUsername();
AppEngineCloudNetworkClient.java,this.host = lookerupper.getHost();,if (lookerupper != null ) this.host = lookerupper.getHost();
AppEngineCloudNetworkClient.java,this.sessionId = lookerupper.getSessionId();,if (lookerupper != null ) this.sessionId = lookerupper.getSessionId();
AppEngineCloudNetworkClient.java,this.username = lookerupper.getUsername();,if (lookerupper != null ) this.username = lookerupper.getUsername();
AppEngineCloudNetworkClient.java,this.host = lookerupper.getHost();,if (lookerupper != null ) this.host = lookerupper.getHost();
AppEngineCloudNetworkClient.java,Issue issue = issuesByHash.get(instance.getInstanceHash());,if (issuesByHash != null ) Issue issue = issuesByHash.get(instance.getInstanceHash());
AppEngineCloudNetworkClient.java,OutputStream outputStream = conn.getOutputStream();,if (conn != null ) OutputStream outputStream = conn.getOutputStream();
AppEngineCloudNetworkClient.java,OutputStream stream = conn.getOutputStream();,if (conn != null ) OutputStream stream = conn.getOutputStream();
AppEngineCloudNetworkClient.java,int responseCode = conn.getResponseCode();,if (conn != null ) int responseCode = conn.getResponseCode();
AppEngineCloudNetworkClient.java,final int numBugs = hashes.size();,if (hashes != null ) final int numBugs = hashes.size();
AppEngineCloudNetworkClient.java,int sofar = numberOfBugsCheckedSoFar.get();,if (numberOfBugsCheckedSoFar != null ) int sofar = numberOfBugsCheckedSoFar.get();
AppEngineCloudNetworkClient.java,final int bugCount = timestamps.size();,if (timestamps != null ) final int bugCount = timestamps.size();
AppEngineCloudNetworkClient.java,Calendar now = Calendar.getInstance();,if (Calendar != null ) Calendar now = Calendar.getInstance();
AppEngineCloudNetworkClient.java,TimeZone timeZone = now.getTimeZone();,if (now != null ) TimeZone timeZone = now.getTimeZone();
AppEngineCloudNetworkClient.java,String timeStr = df.format(now.getTime());,if (df != null ) String timeStr = df.format(now.getTime());
AppEngineCloudNetworkClient.java,boolean daylight = timeZone.inDaylightTime(now.getTime());,if (timeZone != null ) boolean daylight = timeZone.inDaylightTime(now.getTime());
AppEngineCloudNetworkClient.java,String earliestStr = df.format(earliest.getTime());,if (df != null ) String earliestStr = df.format(earliest.getTime());
AppEngineCloudNetworkClient.java,int updated = soFar.addAndGet(partition.size());,if (soFar != null ) int updated = soFar.addAndGet(partition.size());
AppEngineCloudNetworkClient.java,final int bugCount = newBugs.size();,if (newBugs != null ) final int bugCount = newBugs.size();
AppEngineCloudNetworkClient.java,int uploaded = bugsUploaded.get();,if (bugsUploaded != null ) int uploaded = bugsUploaded.get();
AppEngineCloudNetworkClient.java,mostRecentEvaluationMillis = eval.getWhen();,if (eval != null ) mostRecentEvaluationMillis = eval.getWhen();
AppEngineCloudNetworkClient.java,OutputStream outputStream = conn.getOutputStream();,if (conn != null ) OutputStream outputStream = conn.getOutputStream();
AppEngineCloudNetworkClient.java,GetRecentEvaluations.Builder msgb = GetRecentEvaluations.newBuilder();,if (GetRecentEvaluations != null ) GetRecentEvaluations.Builder msgb = GetRecentEvaluations.newBuilder();
AppEngineCloudNetworkClient.java,Issue issue = issuesByHash.get(b.getInstanceHash());,if (issuesByHash != null ) Issue issue = issuesByHash.get(b.getInstanceHash());
AppEngineCloudNetworkClient.java,BugDesignation designation = bugInstance.getNonnullUserDesignation();,if (bugInstance != null ) BugDesignation designation = bugInstance.getNonnullUserDesignation();
AppEngineCloudNetworkClient.java,long timestamp = designation.getTimestamp();,if (designation != null ) long timestamp = designation.getTimestamp();
AppEngineCloudNetworkClient.java,String designationKey = designation.getDesignationKey();,if (designation != null ) String designationKey = designation.getDesignationKey();
AppEngineCloudNetworkClient.java,String comment = designation.getAnnotationText();,if (designation != null ) String comment = designation.getAnnotationText();
AppEngineCloudNetworkClient.java,String hash = bugInstance.getInstanceHash();,if (bugInstance != null ) String hash = bugInstance.getInstanceHash();
AppEngineCloudNetworkClient.java,Evaluation eval = evalBuilder.build();,if (evalBuilder != null ) Evaluation eval = evalBuilder.build();
AppEngineCloudNetworkClient.java,OutputStream outputStream = conn.getOutputStream();,if (conn != null ) OutputStream outputStream = conn.getOutputStream();
AppEngineCloudNetworkClient.java,FindIssues.Builder msgb = FindIssues.newBuilder();,if (FindIssues != null ) FindIssues.Builder msgb = FindIssues.newBuilder();
AppEngineCloudNetworkClient.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
AppEngineCloudNetworkClient.java,start = System.currentTimeMillis();,if (System != null ) start = System.currentTimeMillis();
AppEngineCloudNetworkClient.java,OutputStream stream = conn.getOutputStream();,if (conn != null ) OutputStream stream = conn.getOutputStream();
AppEngineCloudNetworkClient.java,start = System.currentTimeMillis();,if (System != null ) start = System.currentTimeMillis();
AppEngineCloudNetworkClient.java,int responseCode = conn.getResponseCode();,if (conn != null ) int responseCode = conn.getResponseCode();
AppEngineCloudNetworkClient.java,InputStream instream = conn.getInputStream();,if (conn != null ) InputStream instream = conn.getInputStream();
AppEngineCloudNetworkClient.java,int foundIssues = response.getFoundIssuesCount();,if (response != null ) int foundIssues = response.getFoundIssuesCount();
AppEngineCloudNetworkClient.java,final String hash = AppEngineProtoUtil.decodeHash(issue.getHash());,if (AppEngineProtoUtil != null ) final String hash = AppEngineProtoUtil.decodeHash(issue.getHash());
AppEngineCloudNetworkClient.java,ExecutorService updateExecutor = cloudClient.getBugUpdateExecutor();,if (cloudClient != null ) ExecutorService updateExecutor = cloudClient.getBugUpdateExecutor();
AppEngineCloudNetworkClient.java,Builder issueList = UploadIssues.newBuilder();,if (UploadIssues != null ) Builder issueList = UploadIssues.newBuilder();
AppEngineCloudNetworkClient.java,OutputStream stream = conn.getOutputStream();,if (conn != null ) OutputStream stream = conn.getOutputStream();
AppEngineCloudNetworkClient.java,int responseCode = conn.getResponseCode();,if (conn != null ) int responseCode = conn.getResponseCode();
EvaluationsFromXmlUploader.java,String user = bd.getUser();,if (bd != null ) String user = bd.getUser();
GoogleCodeBugFiler.java,Status status = issue.getStatus();,if (issue != null ) Status status = issue.getStatus();
GoogleCodeBugFiler.java,IOException ioe = new IOException(e.getMessage());,if (IOException(e != null ) IOException ioe = new IOException(e.getMessage());
GoogleCodeBugFiler.java,IGuiCallback callback = appEngineCloudClient.getGuiCallback();,if (appEngineCloudClient != null ) IGuiCallback callback = appEngineCloudClient.getGuiCallback();
GoogleCodeBugFiler.java,String viewUrl = googleCodeIssue.getHtmlLink().getHref();,if (googleCodeIssue != null ) String viewUrl = googleCodeIssue.getHtmlLink().getHref();
GoogleCodeBugFiler.java,IGuiCallback guiCallback = appEngineCloudClient.getGuiCallback();,if (appEngineCloudClient != null ) IGuiCallback guiCallback = appEngineCloudClient.getGuiCallback();
AppEngineCloudAuthTests.java,AppEngineCloudNetworkClient spyNetworkClient = cloud.createSpyNetworkClient();,if (cloud != null ) AppEngineCloudNetworkClient spyNetworkClient = cloud.createSpyNetworkClient();
AppEngineCloudAuthTests.java,LogIn logIn = LogIn.parseFrom(findIssuesOutput.toByteArray());,if (LogIn != null ) LogIn logIn = LogIn.parseFrom(findIssuesOutput.toByteArray());
AppEngineCloudAuthTests.java,AppEngineCloudNetworkClient spyNetworkClient = cloud.createSpyNetworkClient();,if (cloud != null ) AppEngineCloudNetworkClient spyNetworkClient = cloud.createSpyNetworkClient();
AppEngineCloudAuthTests.java,LogIn logIn = LogIn.parseFrom(signInReq.toByteArray());,if (LogIn != null ) LogIn logIn = LogIn.parseFrom(signInReq.toByteArray());
AppEngineCloudCallbackTests.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
AppEngineCloudCallbackTests.java,Throwable t = bgThreadFuture.get();,if (bgThreadFuture != null ) Throwable t = bgThreadFuture.get();
AppEngineCloudIssueSyncTests.java,FindIssues hashes = FindIssues.parseFrom(findIssuesOutput.toByteArray());,if (FindIssues != null ) FindIssues hashes = FindIssues.parseFrom(findIssuesOutput.toByteArray());
AppEngineCloudIssueSyncTests.java,List<String> hashesFromFindIssues = AppEngineProtoUtil.decodeHashes(hashes.getMyIssueHashesList());,if (AppEngineProtoUtil != null ) List<String> hashesFromFindIssues = AppEngineProtoUtil.decodeHashes(hashes.getMyIssueHashesList());
AppEngineCloudIssueSyncTests.java,FindIssues hashes = FindIssues.parseFrom(findIssuesOutput.toByteArray());,if (FindIssues != null ) FindIssues hashes = FindIssues.parseFrom(findIssuesOutput.toByteArray());
AppEngineCloudIssueSyncTests.java,List<String> hashesFromFindIssues = AppEngineProtoUtil.decodeHashes(hashes.getMyIssueHashesList());,if (AppEngineProtoUtil != null ) List<String> hashesFromFindIssues = AppEngineProtoUtil.decodeHashes(hashes.getMyIssueHashesList());
AppEngineCloudIssueSyncTests.java,LogIn logIn = LogIn.parseFrom(logInOutput.toByteArray());,if (LogIn != null ) LogIn logIn = LogIn.parseFrom(logInOutput.toByteArray());
AppEngineCloudIssueSyncTests.java,UploadIssues uploadedIssues = UploadIssues.parseFrom(uploadIssuesBuffer.toByteArray());,if (UploadIssues != null ) UploadIssues uploadedIssues = UploadIssues.parseFrom(uploadIssuesBuffer.toByteArray());
AppEngineCloudIssueSyncTests.java,AppEngineCloudNetworkClient spyNetworkClient = cloud.createSpyNetworkClient();,if (cloud != null ) AppEngineCloudNetworkClient spyNetworkClient = cloud.createSpyNetworkClient();
AppEngineCloudMiscTests.java,AppEngineCloudNetworkClient spyNetworkClient = cloud.createSpyNetworkClient();,if (cloud != null ) AppEngineCloudNetworkClient spyNetworkClient = cloud.createSpyNetworkClient();
MockAppEngineCloudClient.java,Object[] args = invocation.getArguments();,if (invocation != null ) Object[] args = invocation.getArguments();
AppEngineProtoUtil.java,hashStr = hashStr.toLowerCase();,if (hashStr != null ) hashStr = hashStr.toLowerCase();
AppEngineProtoUtil.java,List<String> result = new ArrayList<String>(myIssueHashesList.size());,if (ArrayList<String>(myIssueHashesList != null ) List<String> result = new ArrayList<String>(myIssueHashesList.size());
AppEngineProtoUtil.java,List<ByteString> result = new ArrayList<ByteString>(hashStrings.size());,if (ArrayList<ByteString>(hashStrings != null ) List<ByteString> result = new ArrayList<ByteString>(hashStrings.size());
FlybushDataClearer.java,HttpURLConnection conn = (HttpURLConnection) url.openConnection();,if (url != null ) HttpURLConnection conn = (HttpURLConnection) url.openConnection();
FlybushDataClearer.java,String line = br.readLine();,if (br != null ) String line = br.readLine();
AuthServlet.java,String uri = req.getRequestURI();,if (req != null ) String uri = req.getRequestURI();
AuthServlet.java,String openidUrl = openIdUser.getIdentity();,if (openIdUser != null ) String openidUrl = openIdUser.getIdentity();
AuthServlet.java,Transaction tx = pm.currentTransaction();,if (pm != null ) Transaction tx = pm.currentTransaction();
AuthServlet.java,tx = pm.currentTransaction();,if (pm != null ) tx = pm.currentTransaction();
AuthServlet.java,PrintWriter writer = resp.getWriter();,if (resp != null ) PrintWriter writer = resp.getWriter();
AuthServlet.java,LogIn loginMsg = LogIn.parseFrom(req.getInputStream());,if (LogIn != null ) LogIn loginMsg = LogIn.parseFrom(req.getInputStream());
AuthServlet.java,DbInvocation invocation = persistenceHelper.createDbInvocation();,if (persistenceHelper != null ) DbInvocation invocation = persistenceHelper.createDbInvocation();
AuthServlet.java,Transaction tx = pm.currentTransaction();,if (pm != null ) Transaction tx = pm.currentTransaction();
AuthServlet.java,tx = pm.currentTransaction();,if (pm != null ) tx = pm.currentTransaction();
AuthServlet.java,Transaction tx = pm.currentTransaction();,if (pm != null ) Transaction tx = pm.currentTransaction();
QueryServlet.java,FindIssues loginMsg = FindIssues.parseFrom(req.getInputStream());,if (FindIssues != null ) FindIssues loginMsg = FindIssues.parseFrom(req.getInputStream());
QueryServlet.java,List<String> hashes = AppEngineProtoUtil.decodeHashes(loginMsg.getMyIssueHashesList());,if (AppEngineProtoUtil != null ) List<String> hashes = AppEngineProtoUtil.decodeHashes(loginMsg.getMyIssueHashesList());
QueryServlet.java,FindIssuesResponse.Builder issueProtos = FindIssuesResponse.newBuilder();,if (FindIssuesResponse != null ) FindIssuesResponse.Builder issueProtos = FindIssuesResponse.newBuilder();
QueryServlet.java,Builder issueBuilder = Issue.newBuilder();,if (Issue != null ) Builder issueBuilder = Issue.newBuilder();
QueryServlet.java,Issue protoIssue = issueBuilder.build();,if (issueBuilder != null ) Issue protoIssue = issueBuilder.build();
QueryServlet.java,GetRecentEvaluations recentEvalsRequest = GetRecentEvaluations.parseFrom(req.getInputStream());,if (GetRecentEvaluations != null ) GetRecentEvaluations recentEvalsRequest = GetRecentEvaluations.parseFrom(req.getInputStream());
QueryServlet.java,long startTime = recentEvalsRequest.getTimestamp();,if (recentEvalsRequest != null ) long startTime = recentEvalsRequest.getTimestamp();
QueryServlet.java,RecentEvaluations.Builder issueProtos = RecentEvaluations.newBuilder();,if (RecentEvaluations != null ) RecentEvaluations.Builder issueProtos = RecentEvaluations.newBuilder();
QueryServlet.java,String linkType = dbIssue.getBugLinkType();,if (dbIssue != null ) String linkType = dbIssue.getBugLinkType();
QueryServlet.java,String linkType = dbIssue.getBugLinkType();,if (dbIssue != null ) String linkType = dbIssue.getBugLinkType();
QueryServlet.java,int numEvaluations = evaluationsList.size();,if (evaluationsList != null ) int numEvaluations = evaluationsList.size();
QueryServlet.java,DbEvaluation dbEvaluation = it.previous();,if (it != null ) DbEvaluation dbEvaluation = it.previous();
QueryServlet.java,boolean userIsNew = seenUsernames.add(dbEvaluation.getWhoId());,if (seenUsernames != null ) boolean userIsNew = seenUsernames.add(dbEvaluation.getWhoId());
QueryServlet.java,String issueHash = dbEvaluation.getIssue().getHash();,if (dbEvaluation != null ) String issueHash = dbEvaluation.getIssue().getHash();
QueryServlet.java,DbEvaluation eval = it.next();,if (it != null ) DbEvaluation eval = it.next();
ReportServlet.java,String uri = req.getRequestURI();,if (req != null ) String uri = req.getRequestURI();
ReportServlet.java,Set<String> seenIssues = Sets.newHashSet();,if (Sets != null ) Set<String> seenIssues = Sets.newHashSet();
ReportServlet.java,List<String> lines = Lists.newArrayList();,if (Lists != null ) List<String> lines = Lists.newArrayList();
ReportServlet.java,String epkg = getPackageName(eval.getPrimaryClass());,if (getPackageName(eval != null ) String epkg = getPackageName(eval.getPrimaryClass());
ReportServlet.java,String issueHash = eval.getIssue().getHash();,if (eval != null ) String issueHash = eval.getIssue().getHash();
ReportServlet.java,long beginningOfWeek = getBeginningOfWeekInMillis(eval.getWhen());,if (getBeginningOfWeekInMillis(eval != null ) long beginningOfWeek = getBeginningOfWeekInMillis(eval.getWhen());
ReportServlet.java,ServletOutputStream page = resp.getOutputStream();,if (resp != null ) ServletOutputStream page = resp.getOutputStream();
ReportServlet.java,ServletOutputStream page = resp.getOutputStream();,if (resp != null ) ServletOutputStream page = resp.getOutputStream();
ReportServlet.java,Set<String> alreadyPrinted = Sets.newHashSet();,if (Sets != null ) Set<String> alreadyPrinted = Sets.newHashSet();
ReportServlet.java,x += entry.getValue();,if (entry != null ) x += entry.getValue();
ReportServlet.java,Set<String> seenIssues = Sets.newHashSet();,if (Sets != null ) Set<String> seenIssues = Sets.newHashSet();
ReportServlet.java,List<String> table = Lists.newArrayList();,if (Lists != null ) List<String> table = Lists.newArrayList();
ReportServlet.java,long beginningOfWeek = getBeginningOfWeekInMillis(eval.getWhen());,if (getBeginningOfWeekInMillis(eval != null ) long beginningOfWeek = getBeginningOfWeekInMillis(eval.getWhen());
ReportServlet.java,ServletOutputStream page = resp.getOutputStream();,if (resp != null ) ServletOutputStream page = resp.getOutputStream();
ReportServlet.java,ServletOutputStream page = resp.getOutputStream();,if (resp != null ) ServletOutputStream page = resp.getOutputStream();
ReportServlet.java,List<DbUser> userObjs = (List<DbUser>) userQuery.execute();,if (userQuery != null ) List<DbUser> userObjs = (List<DbUser>) userQuery.execute();
ReportServlet.java,Set<String> users = Sets.newHashSet();,if (Sets != null ) Set<String> users = Sets.newHashSet();
ReportServlet.java,int maxEvalsPerWeek = Collections.max(evalsPerWeek.values());,if (Collections != null ) int maxEvalsPerWeek = Collections.max(evalsPerWeek.values());
ReportServlet.java,List<Double> evalsData = Lists.newArrayList();,if (Lists != null ) List<Double> evalsData = Lists.newArrayList();
ReportServlet.java,List<String> labels = Lists.newArrayList();,if (Lists != null ) List<String> labels = Lists.newArrayList();
ReportServlet.java,List<Double> newIssuesData = Lists.newArrayList();,if (Lists != null ) List<Double> newIssuesData = Lists.newArrayList();
ReportServlet.java,Integer evalsThisWeek = evalsPerWeek.get(cal.getTimeInMillis());,if (evalsPerWeek != null ) Integer evalsThisWeek = evalsPerWeek.get(cal.getTimeInMillis());
ReportServlet.java,Integer newIssuesThisWeek = newIssuesByWeek.get(cal.getTimeInMillis());,if (newIssuesByWeek != null ) Integer newIssuesThisWeek = newIssuesByWeek.get(cal.getTimeInMillis());
ReportServlet.java,List<DbEvaluation> evals = (List<DbEvaluation>) query.execute();,if (query != null ) List<DbEvaluation> evals = (List<DbEvaluation>) query.execute();
ReportServlet.java,Set<String> seenIssues = Sets.newHashSet();,if (Sets != null ) Set<String> seenIssues = Sets.newHashSet();
ReportServlet.java,Set<String> seenUsers = Sets.newHashSet();,if (Sets != null ) Set<String> seenUsers = Sets.newHashSet();
ReportServlet.java,String email = eval.getEmail();,if (eval != null ) String email = eval.getEmail();
ReportServlet.java,String issueHash = eval.getIssue().getHash();,if (eval != null ) String issueHash = eval.getIssue().getHash();
ReportServlet.java,String pkg = getPackageName(eval.getPrimaryClass());,if (getPackageName(eval != null ) String pkg = getPackageName(eval.getPrimaryClass());
ReportServlet.java,long beginningOfWeek = getBeginningOfWeekInMillis(eval.getWhen());,if (getBeginningOfWeekInMillis(eval != null ) long beginningOfWeek = getBeginningOfWeekInMillis(eval.getWhen());
ReportServlet.java,ServletOutputStream page = resp.getOutputStream();,if (resp != null ) ServletOutputStream page = resp.getOutputStream();
ReportServlet.java,ServletOutputStream page = resp.getOutputStream();,if (resp != null ) ServletOutputStream page = resp.getOutputStream();
ReportServlet.java,List<Double> histogramData = Lists.newArrayList();,if (Lists != null ) List<Double> histogramData = Lists.newArrayList();
ReportServlet.java,int maxEvaluators = Collections.max(issuesPerEvaluatorCount.keySet());,if (Collections != null ) int maxEvaluators = Collections.max(issuesPerEvaluatorCount.keySet());
ReportServlet.java,int maxIssues = Collections.max(issuesPerEvaluatorCount.values());,if (Collections != null ) int maxIssues = Collections.max(issuesPerEvaluatorCount.values());
ReportServlet.java,List<String> barLabels = Lists.newArrayList();,if (Lists != null ) List<String> barLabels = Lists.newArrayList();
ReportServlet.java,int maxEvalsPerWeek = Collections.max(evalsByWeek.values());,if (Collections != null ) int maxEvalsPerWeek = Collections.max(evalsByWeek.values());
ReportServlet.java,List<Double> newIssuesData = Lists.newArrayList();,if (Lists != null ) List<Double> newIssuesData = Lists.newArrayList();
ReportServlet.java,List<String> timelineLabels = Lists.newArrayList();,if (Lists != null ) List<String> timelineLabels = Lists.newArrayList();
ReportServlet.java,Integer evalsThisWeek = evalsByWeek.get(cal.getTimeInMillis());,if (evalsByWeek != null ) Integer evalsThisWeek = evalsByWeek.get(cal.getTimeInMillis());
ReportServlet.java,Integer issuesThisWeek = issueCountByWeek.get(cal.getTimeInMillis());,if (issueCountByWeek != null ) Integer issuesThisWeek = issueCountByWeek.get(cal.getTimeInMillis());
ReportServlet.java,Integer usersThisWeek = userCountByWeek.get(cal.getTimeInMillis());,if (userCountByWeek != null ) Integer usersThisWeek = userCountByWeek.get(cal.getTimeInMillis());
ReportServlet.java,int totalUsers = Collections.max(userCountByWeek.values());,if (Collections != null ) int totalUsers = Collections.max(userCountByWeek.values());
ReportServlet.java,List<Double> issuesData = Lists.newArrayList();,if (Lists != null ) List<Double> issuesData = Lists.newArrayList();
ReportServlet.java,List<Double> evalsData = Lists.newArrayList();,if (Lists != null ) List<Double> evalsData = Lists.newArrayList();
ReportServlet.java,List<Double> usersData = Lists.newArrayList();,if (Lists != null ) List<Double> usersData = Lists.newArrayList();
ReportServlet.java,List<String> labels = Lists.newArrayList();,if (Lists != null ) List<String> labels = Lists.newArrayList();
ReportServlet.java,long time = cal.getTimeInMillis();,if (cal != null ) long time = cal.getTimeInMillis();
ReportServlet.java,Calendar cal = Calendar.getInstance();,if (Calendar != null ) Calendar cal = Calendar.getInstance();
ReportServlet.java,Calendar cal = Calendar.getInstance();,if (Calendar != null ) Calendar cal = Calendar.getInstance();
ReportServlet.java,final long first = cal.getTimeInMillis();,if (cal != null ) final long first = cal.getTimeInMillis();
ReportServlet.java,private Calendar cal = Calendar.getInstance();,if (Calendar != null ) private Calendar cal = Calendar.getInstance();
ReportServlet.java,Calendar toReturn = (Calendar) cal.clone();,if (cal != null ) Calendar toReturn = (Calendar) cal.clone();
ReportServlet.java,Calendar cal = Calendar.getInstance();,if (Calendar != null ) Calendar cal = Calendar.getInstance();
ReportServlet.java,Calendar weekCal = Calendar.getInstance();,if (Calendar != null ) Calendar weekCal = Calendar.getInstance();
ReportServlet.java,List<String> labels = Lists.newArrayList();,if (Lists != null ) List<String> labels = Lists.newArrayList();
ReportServlet.java,List<Double> evalsData = Lists.newArrayList();,if (Lists != null ) List<Double> evalsData = Lists.newArrayList();
ReportServlet.java,List<Double> issuesData = Lists.newArrayList();,if (Lists != null ) List<Double> issuesData = Lists.newArrayList();
ReportServlet.java,int maxPerPkg = Collections.max(evalCountByPkg.values());,if (Collections != null ) int maxPerPkg = Collections.max(evalCountByPkg.values());
ReportServlet.java,List<String> labels = Lists.newArrayList();,if (Lists != null ) List<String> labels = Lists.newArrayList();
ReportServlet.java,List<Double> totals = Lists.newArrayList();,if (Lists != null ) List<Double> totals = Lists.newArrayList();
ReportServlet.java,List<Double> issues = Lists.newArrayList();,if (Lists != null ) List<Double> issues = Lists.newArrayList();
ReportServlet.java,int max = Collections.max(totalCountByUser.values());,if (Collections != null ) int max = Collections.max(totalCountByUser.values());
ReportServlet.java,String email = entry.getKey();,if (entry != null ) String email = entry.getKey();
ReportServlet.java,int evalCount = entry.getValue();,if (entry != null ) int evalCount = entry.getValue();
UpdateServlet.java,Set<String> list = Sets.newHashSet();,if (Sets != null ) Set<String> list = Sets.newHashSet();
UpdateServlet.java,List<DbEvaluation> evals = (List<DbEvaluation>) eq.execute();,if (eq != null ) List<DbEvaluation> evals = (List<DbEvaluation>) eq.execute();
UpdateServlet.java,Transaction tx = pm.currentTransaction();,if (pm != null ) Transaction tx = pm.currentTransaction();
UpdateServlet.java,List<DbIssue> issues = (List<DbIssue>) iq.execute();,if (iq != null ) List<DbIssue> issues = (List<DbIssue>) iq.execute();
UpdateServlet.java,Transaction tx = pm.currentTransaction();,if (pm != null ) Transaction tx = pm.currentTransaction();
UpdateServlet.java,Transaction tx = pm.currentTransaction();,if (pm != null ) Transaction tx = pm.currentTransaction();
UpdateServlet.java,UpdateIssueTimestamps issues = UpdateIssueTimestamps.parseFrom(req.getInputStream());,if (UpdateIssueTimestamps != null ) UpdateIssueTimestamps issues = UpdateIssueTimestamps.parseFrom(req.getInputStream());
UpdateServlet.java,long newFirstSeen = issueGroup.getTimestamp();,if (issueGroup != null ) long newFirstSeen = issueGroup.getTimestamp();
UpdateServlet.java,long storedFirstSeen = issue.getFirstSeen();,if (issue != null ) long storedFirstSeen = issue.getFirstSeen();
UpdateServlet.java,Transaction tx = pm.currentTransaction();,if (pm != null ) Transaction tx = pm.currentTransaction();
UpdateServlet.java,deleted = persistenceHelper.clearAllData();,if (persistenceHelper != null ) deleted = persistenceHelper.clearAllData();
UpdateServlet.java,UploadIssues issues = UploadIssues.parseFrom(req.getInputStream());,if (UploadIssues != null ) UploadIssues issues = UploadIssues.parseFrom(req.getInputStream());
UpdateServlet.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
UpdateServlet.java,String hashStr = AppEngineProtoUtil.decodeHash(issue.getHash());,if (AppEngineProtoUtil != null ) String hashStr = AppEngineProtoUtil.decodeHash(issue.getHash());
UpdateServlet.java,start = System.currentTimeMillis();,if (System != null ) start = System.currentTimeMillis();
UpdateServlet.java,UploadEvaluation uploadEvalMsg = UploadEvaluation.parseFrom(req.getInputStream());,if (UploadEvaluation != null ) UploadEvaluation uploadEvalMsg = UploadEvaluation.parseFrom(req.getInputStream());
UpdateServlet.java,DbEvaluation dbEvaluation = createDbEvaluation(uploadEvalMsg.getEvaluation());,if (createDbEvaluation(uploadEvalMsg != null ) DbEvaluation dbEvaluation = createDbEvaluation(uploadEvalMsg.getEvaluation());
UpdateServlet.java,Transaction tx = pm.currentTransaction();,if (pm != null ) Transaction tx = pm.currentTransaction();
UpdateServlet.java,String hash = AppEngineProtoUtil.decodeHash(uploadEvalMsg.getHash());,if (AppEngineProtoUtil != null ) String hash = AppEngineProtoUtil.decodeHash(uploadEvalMsg.getHash());
UpdateServlet.java,SetBugLink setBugLinkMsg = SetBugLink.parseFrom(req.getInputStream());,if (SetBugLink != null ) SetBugLink setBugLinkMsg = SetBugLink.parseFrom(req.getInputStream());
UpdateServlet.java,Transaction tx = pm.currentTransaction();,if (pm != null ) Transaction tx = pm.currentTransaction();
UpdateServlet.java,String decodedHash = AppEngineProtoUtil.decodeHash(setBugLinkMsg.getHash());,if (AppEngineProtoUtil != null ) String decodedHash = AppEngineProtoUtil.decodeHash(setBugLinkMsg.getHash());
UpdateServlet.java,Transaction tx = pm.currentTransaction();,if (pm != null ) Transaction tx = pm.currentTransaction();
UpdateServlet.java,DbIssue dbIssue = persistenceHelper.createDbIssue();,if (persistenceHelper != null ) DbIssue dbIssue = persistenceHelper.createDbIssue();
UpdateServlet.java,Object invocationKey = session.getInvocation();,if (session != null ) Object invocationKey = session.getInvocation();
UpdateServlet.java,DbEvaluation dbEvaluation = persistenceHelper.createDbEvaluation();,if (persistenceHelper != null ) DbEvaluation dbEvaluation = persistenceHelper.createDbEvaluation();
AbstractFlybushServletTest.java,persistenceHelper = testHelper.createPersistenceHelper(testHelper.getPersistenceManager());,if (testHelper != null ) persistenceHelper = testHelper.createPersistenceHelper(testHelper.getPersistenceManager());
AbstractFlybushServletTest.java,user = results.iterator().next();,if (results != null ) user = results.iterator().next();
AbstractFlybushServletTest.java,DbEvaluation eval = persistenceHelper.createDbEvaluation();,if (persistenceHelper != null ) DbEvaluation eval = persistenceHelper.createDbEvaluation();
AbstractFlybushServletTest.java,DbIssue foundIssue = persistenceHelper.createDbIssue();,if (persistenceHelper != null ) DbIssue foundIssue = persistenceHelper.createDbIssue();
AuthServletTest.java,FindIssuesResponse result = FindIssuesResponse.parseFrom(outputCollector.toByteArray());,if (FindIssuesResponse != null ) FindIssuesResponse result = FindIssuesResponse.parseFrom(outputCollector.toByteArray());
AuthServletTest.java,FindIssuesResponse result = FindIssuesResponse.parseFrom(outputCollector.toByteArray());,if (FindIssuesResponse != null ) FindIssuesResponse result = FindIssuesResponse.parseFrom(outputCollector.toByteArray());
AuthServletTest.java,FindIssuesResponse result = FindIssuesResponse.parseFrom(outputCollector.toByteArray());,if (FindIssuesResponse != null ) FindIssuesResponse result = FindIssuesResponse.parseFrom(outputCollector.toByteArray());
AuthServletTest.java,List<DbInvocation> invocations = (List<DbInvocation>) query.execute();,if (query != null ) List<DbInvocation> invocations = (List<DbInvocation>) query.execute();
QueryServletTest.java,RecentEvaluations result = RecentEvaluations.parseFrom(outputCollector.toByteArray());,if (RecentEvaluations != null ) RecentEvaluations result = RecentEvaluations.parseFrom(outputCollector.toByteArray());
QueryServletTest.java,RecentEvaluations result = RecentEvaluations.parseFrom(outputCollector.toByteArray());,if (RecentEvaluations != null ) RecentEvaluations result = RecentEvaluations.parseFrom(outputCollector.toByteArray());
QueryServletTest.java,RecentEvaluations result = RecentEvaluations.parseFrom(outputCollector.toByteArray());,if (RecentEvaluations != null ) RecentEvaluations result = RecentEvaluations.parseFrom(outputCollector.toByteArray());
QueryServletTest.java,FindIssues findIssues = createUnauthenticatedFindIssues(hashes).build();,if (createUnauthenticatedFindIssues(hashes) != null ) FindIssues findIssues = createUnauthenticatedFindIssues(hashes).build();
ReportServletTest.java,String page = outputCollector.toString();,if (outputCollector != null ) String page = outputCollector.toString();
ReportServletTest.java,List<DbIssue> issues = Lists.newArrayList();,if (Lists != null ) List<DbIssue> issues = Lists.newArrayList();
UpdateServletTest.java,DbEvaluation evalA = persistenceHelper.createDbEvaluation();,if (persistenceHelper != null ) DbEvaluation evalA = persistenceHelper.createDbEvaluation();
UpdateServletTest.java,DbEvaluation evalB = persistenceHelper.createDbEvaluation();,if (persistenceHelper != null ) DbEvaluation evalB = persistenceHelper.createDbEvaluation();
UpdateServletTest.java,Object invocationId = dbEval.getInvocationKey();,if (dbEval != null ) Object invocationId = dbEval.getInvocationKey();
UpdateServletTest.java,String dbBugLink = issue.getBugLink();,if (issue != null ) String dbBugLink = issue.getBugLink();
UpdateServletTest.java,String dbBugLinkType = issue.getBugLinkType();,if (issue != null ) String dbBugLinkType = issue.getBugLinkType();
UpdateServletTest.java,Issue.Builder issueBuilder = Issue.newBuilder();,if (Issue != null ) Issue.Builder issueBuilder = Issue.newBuilder();
FilterFilesTabTestSubclass.java,this.fileName = file.getName();,if (file != null ) this.fileName = file.getName();
PropertiesPageTest.java,DetectorFactory detectorFactory = factories.next();,if (factories != null ) DetectorFactory detectorFactory = factories.next();
PropertiesPageTest.java,DetectorFactory detectorFactory = factories.next();,if (factories != null ) DetectorFactory detectorFactory = factories.next();
ExpectedViewBugGroup.java,ExpectedViewElement expectedChild = iChildren.next();,if (iChildren != null ) ExpectedViewElement expectedChild = iChildren.next();
JavaProjectHelper.java,IWorkspace workspace = ResourcesPlugin.getWorkspace();,if (ResourcesPlugin != null ) IWorkspace workspace = ResourcesPlugin.getWorkspace();
JavaProjectHelper.java,String[] prevNatures = description.getNatureIds();,if (description != null ) String[] prevNatures = description.getNatureIds();
DetectorsExtensionHelper.java,IConfigurationElement[] elements = extension.getConfigurationElements();,if (extension != null ) IConfigurationElement[] elements = extension.getConfigurationElements();
DetectorsExtensionHelper.java,String bundleName = contributor.getName();,if (contributor != null ) String bundleName = contributor.getName();
DetectorsExtensionHelper.java,String dirName = file.getName();,if (file != null ) String dirName = file.getName();
EclipseGuiCallback.java,final String statusMsg = cloud.getStatusMsg();,if (cloud != null ) final String statusMsg = cloud.getStatusMsg();
EclipseGuiCallback.java,IWorkbenchPage page = win.getActivePage();,if (win != null ) IWorkbenchPage page = win.getActivePage();
FindbugsPlugin.java,URL[] pluginArr = dfc.getPluginList();,if (dfc != null ) URL[] pluginArr = dfc.getPluginList();
FindbugsPlugin.java,ImageDescriptor descriptor = getImageDescriptor(prio.iconName());,if (getImageDescriptor(prio != null ) ImageDescriptor descriptor = getImageDescriptor(prio.iconName());
FindbugsPlugin.java,IPath path = getDefault().getStateLocation(); // user-specific but not project-specific,if (project-specific != null ) IPath path = getDefault().getStateLocation(); // user-specific but not project-specific
FindbugsPlugin.java,File bugCollectionFile = bugCollectionPath.toFile();,if (bugCollectionPath != null ) File bugCollectionFile = bugCollectionPath.toFile();
FindbugsPlugin.java,File bugCollectionFile = bugCollectionPath.toFile();,if (bugCollectionPath != null ) File bugCollectionFile = bugCollectionPath.toFile();
FindbugsPlugin.java,boolean projectPropsEnabled = file.isAccessible();,if (file != null ) boolean projectPropsEnabled = file.isAccessible();
FindbugsPlugin.java,UserPreferences userPrefs = FindBugsPreferenceInitializer.createDefaultUserPreferences();,if (FindBugsPreferenceInitializer != null ) UserPreferences userPrefs = FindBugsPreferenceInitializer.createDefaultUserPreferences();
FilterBugsDialogAction.java,CommonViewer viewer = navigator.getCommonViewer();,if (navigator != null ) CommonViewer viewer = navigator.getCommonViewer();
FilterPatternAction.java,final IPreferenceStore store = FindbugsPlugin.getDefault().getPreferenceStore();,if (FindbugsPlugin != null ) final IPreferenceStore store = FindbugsPlugin.getDefault().getPreferenceStore();
FilterPatternAction.java,Object[] expandedElements = viewer.getExpandedElements();,if (viewer != null ) Object[] expandedElements = viewer.getExpandedElements();
FindBugsAction.java,input= ResourcesPlugin.getWorkspace().getRoot();,if (ResourcesPlugin != null ) input= ResourcesPlugin.getWorkspace().getRoot();
GoIntoAction.java,Object[] expandedElements = viewer.getVisibleExpandedElements();,if (viewer != null ) Object[] expandedElements = viewer.getVisibleExpandedElements();
GroupByAction.java,CommonViewer viewer = navigator.getCommonViewer();,if (navigator != null ) CommonViewer viewer = navigator.getCommonViewer();
MarkerRulerAction.java,IAnnotationModel model = provider.getAnnotationModel(editor.getEditorInput());,if (provider != null ) IAnnotationModel model = provider.getAnnotationModel(editor.getEditorInput());
OpenGroupDialogAction.java,CommonViewer viewer = navigator.getCommonViewer();,if (navigator != null ) CommonViewer viewer = navigator.getCommonViewer();
ShowInPackageExplorerAction.java,data = marker.getResource();,if (marker != null ) data = marker.getResource();
ShowInPackageExplorerAction.java,data = group.getData();,if (group != null ) data = group.getData();
FindBugsWorker.java,commonPath = project.getLocation();,if (project != null ) commonPath = project.getLocation();
ResourceUtils.java,IAdaptable[] elements = wset.getElements();,if (wset != null ) IAdaptable[] elements = wset.getElements();
ResourceUtils.java,IPath parentLoc = resource.getPath();,if (resource != null ) IPath parentLoc = resource.getPath();
WorkItem.java,String fileName = path.removeFileExtension().lastSegment();,if (path != null ) String fileName = path.removeFileExtension().lastSegment();
WorkItem.java,IType[] types = cu.getTypes();,if (cu != null ) IType[] types = cu.getTypes();
IO.java,ByteArrayInputStream bis = new ByteArrayInputStream(bos.toByteArray());,if (ByteArrayInputStream(bos != null ) ByteArrayInputStream bis = new ByteArrayInputStream(bos.toByteArray());
DetectorConfigurationTab.java,ProjectFilterSettings filterSettings = tab.getCurrentProps().getFilterSettings();,if (tab != null ) ProjectFilterSettings filterSettings = tab.getCurrentProps().getFilterSettings();
DetectorValidator.java,String name = entry.getName();,if (entry != null ) String name = entry.getName();
FindbugsPropertyPage.java,boolean enabled = chkEnableFindBugs.getSelection();,if (chkEnableFindBugs != null ) boolean enabled = chkEnableFindBugs.getSelection();
FindbugsPropertyPage.java,boolean selection = chkRunAtFullBuild.getSelection();,if (chkRunAtFullBuild != null ) boolean selection = chkRunAtFullBuild.getSelection();
FindbugsPropertyPage.java,DetectorFactory factory = iterator.next();,if (iterator != null ) DetectorFactory factory = iterator.next();
PathsProvider.java,filterPath = lastUsed.toOSString();,if (lastUsed != null ) filterPath = lastUsed.toOSString();
WorkspaceSettingsTab.java,boolean shouldReplace = pluginList.length != detectorPaths.size();,if (detectorPaths != null ) boolean shouldReplace = pluginList.length != detectorPaths.size();
WorkspaceSettingsTab.java,String file = url.getFile();,if (url != null ) String file = url.getFile();
JdtUtils.java,Object key = iterator.next();,if (iterator != null ) Object key = iterator.next();
JdtUtils.java,parent = javaElement.getParent();,if (javaElement != null ) parent = javaElement.getParent();
JdtUtils.java,topFlags = firstNonAnon.getFlags();,if (firstNonAnon != null ) topFlags = firstNonAnon.getFlags();
MarkerUtil.java,Iterator<BugInstance> iterator = theCollection.iterator();,if (theCollection != null ) Iterator<BugInstance> iterator = theCollection.iterator();
MarkerUtil.java,ClassAnnotation primaryClass = bug.getPrimaryClass();,if (bug != null ) ClassAnnotation primaryClass = bug.getPrimaryClass();
MarkerUtil.java,packageName = packageAnnotation.getPackageName();,if (packageAnnotation != null ) packageName = packageAnnotation.getPackageName();
MarkerUtil.java,packageName = primarySourceLineAnnotation.getPackageName();,if (primarySourceLineAnnotation != null ) packageName = primarySourceLineAnnotation.getPackageName();
MarkerUtil.java,IOpenable op = source.getOpenable();,if (source != null ) IOpenable op = source.getOpenable();
MarkerUtil.java,final IProject project = javaProject.getProject();,if (javaProject != null ) final IProject project = javaProject.getProject();
MarkerUtil.java,Set<IMarker> markers = getMarkers(classFile.getType());,if (getMarkers(classFile != null ) Set<IMarker> markers = getMarkers(classFile.getType());
ConfigurableXmlOutputStream.java,XMLAttributeList.NameValuePair nameValuePair = iterator.next();,if (iterator != null ) XMLAttributeList.NameValuePair nameValuePair = iterator.next();
ConfigurableXmlOutputStream.java,XMLAttributeList.NameValuePair nameValuePair = iterator.next();,if (iterator != null ) XMLAttributeList.NameValuePair nameValuePair = iterator.next();
ProjectUtilities.java,IProjectDescription description = project.getDescription();,if (project != null ) IProjectDescription description = project.getDescription();
ProjectUtilities.java,IProjectDescription description = project.getDescription();,if (project != null ) IProjectDescription description = project.getDescription();
AbstractFindbugsView.java,input= ResourcesPlugin.getWorkspace().getRoot();,if (ResourcesPlugin != null ) input= ResourcesPlugin.getWorkspace().getRoot();
UserAnnotationsView.java,this.firstVersionText = firstVersion.trim();,if (firstVersion != null ) this.firstVersionText = firstVersion.trim();
UserAnnotationsView.java,Calendar theCalendar = Calendar.getInstance();,if (Calendar != null ) Calendar theCalendar = Calendar.getInstance();
UserAnnotationsView.java,long beginningOfToday = theCalendar.getTimeInMillis();,if (theCalendar != null ) long beginningOfToday = theCalendar.getTimeInMillis();
BugContentProvider.java,IPreferenceStore store = FindbugsPlugin.getDefault().getPreferenceStore();,if (FindbugsPlugin != null ) IPreferenceStore store = FindbugsPlugin.getDefault().getPreferenceStore();
BugContentProvider.java,Set<IMarker> allMarkers = parent.getAllMarkers();,if (parent != null ) Set<IMarker> allMarkers = parent.getAllMarkers();
BugContentProvider.java,rootObjects = group.getChildren();,if (group != null ) rootObjects = group.getChildren();
BugContentProvider.java,IContentProvider provider = extensionById.getContentProvider();,if (extensionById != null ) IContentProvider provider = extensionById.getContentProvider();
BugLabelProvider.java,FindBugsMarker.Priority prio = group.getPriority();,if (group != null ) FindBugsMarker.Priority prio = group.getPriority();
BugLabelProvider.java,IProject project = (IProject) group.getData();,if (group != null ) IProject project = (IProject) group.getData();
BugLabelProvider.java,Cloud cloud = bc.getCloud();,if (bc != null ) Cloud cloud = bc.getCloud();
BugLabelProvider.java,cloudName = cloud.getCloudName();,if (cloud != null ) cloudName = cloud.getCloudName();
FilterBugsDialog.java,IStructuredSelection selection = (IStructuredSelection) event.getSelection();,if (event != null ) IStructuredSelection selection = (IStructuredSelection) event.getSelection();
FilterBugsDialog.java,boolean checked = event.getChecked();,if (event != null ) boolean checked = event.getChecked();
FilterBugsDialog.java,Object[] array = children.toArray();,if (children != null ) Object[] array = children.toArray();
FilterBugsDialog.java,allowedTypes = FindbugsPlugin.getKnownPatternTypes();,if (FindbugsPlugin != null ) allowedTypes = FindbugsPlugin.getKnownPatternTypes();
FilterBugsDialog.java,DetectorFactory factory = iterator.next();,if (iterator != null ) DetectorFactory factory = iterator.next();
FilterBugsDialog.java,Object[] elements = checkList.getVisibleExpandedElements();,if (checkList != null ) Object[] elements = checkList.getVisibleExpandedElements();
GroupSelectionDialog.java,this.allowedGroups = GroupType.getVisible();,if (GroupType != null ) this.allowedGroups = GroupType.getVisible();
GroupSelectionDialog.java,GroupType element= (GroupType) event.getElement();,if (event != null ) GroupType element= (GroupType) event.getElement();
Grouping.java,GroupType type = GroupType.valueOf(st.nextToken());,if (GroupType != null ) GroupType type = GroupType.valueOf(st.nextToken());
RefreshJob.java,int totalWork = deltas.size();,if (deltas != null ) int totalWork = deltas.size();
BugInstanceSection.java,parent = parent.getParent();,if (parent != null ) parent = parent.getParent();
BugInstanceSection.java,String shortDescription = bug.getAbridgedMessage();,if (bug != null ) String shortDescription = bug.getAbridgedMessage();
BugInstanceSection.java,BugAnnotation theAnnotation = theIterator.next();,if (theIterator != null ) BugAnnotation theAnnotation = theIterator.next();
BugPatternSection.java,FindbugsPlugin plugin = FindbugsPlugin.getDefault();,if (FindbugsPlugin != null ) FindbugsPlugin plugin = FindbugsPlugin.getDefault();
BugPatternSection.java,DetectorFactory factory = bug.getDetectorFactory();,if (bug != null ) DetectorFactory factory = bug.getDetectorFactory();
BugPatternSection.java,IWorkbenchBrowserSupport support= PlatformUI.getWorkbench().getBrowserSupport();,if (PlatformUI != null ) IWorkbenchBrowserSupport support= PlatformUI.getWorkbench().getBrowserSupport();
PropPageTitleProvider.java,element = selection.getFirstElement();,if (selection != null ) element = selection.getFirstElement();
ExportWizardPage.java,Clipboard clipboard = new Clipboard(Display.getCurrent());,if (Clipboard(Display != null ) Clipboard clipboard = new Clipboard(Display.getCurrent());
BadRegEx.java,"String statesPost = allStatesPost.append("").*$"").toString();","if (allStatesPost != null ) String statesPost = allStatesPost.append("").*$"").toString();"
BadResultSetAccessTest.java,int numCols = rsmd.getColumnCount();,if (rsmd != null ) int numCols = rsmd.getColumnCount();
BadResultSetAccessTest.java,int numCols = rsmd.getColumnCount();,if (rsmd != null ) int numCols = rsmd.getColumnCount();
DeadStore.java,Map m = Collections.emptyMap();,if (Collections != null ) Map m = Collections.emptyMap();
LazyInit.java,Field[] fields = LazyInit.class.getDeclaredFields();,if (LazyInit != null ) Field[] fields = LazyInit.class.getDeclaredFields();
MyMonth.java,month=month.toUpperCase();,if (month=month != null ) month=month.toUpperCase();
NoSqlInjection.java,ResultSet zooResults = query.getResultSet();,if (query != null ) ResultSet zooResults = query.getResultSet();
NoSqlInjection.java,ResultSet zooResults = query.getResultSet();,if (query != null ) ResultSet zooResults = query.getResultSet();
OpenStream.java,long sz = ch.size();,if (ch != null ) long sz = ch.size();
ShouldDoInDoPriviledged.java,ShouldDoInDoPriviledged c = (ShouldDoInDoPriviledged) super.clone();,if (super != null ) ShouldDoInDoPriviledged c = (ShouldDoInDoPriviledged) super.clone();
TransientFieldOfNonserializableClass.java,byte[] data = baos.toByteArray();,if (baos != null ) byte[] data = baos.toByteArray();
TransientFieldOfNonserializableClass.java,s = (Sub)ois.readObject();,if ((Sub)ois != null ) s = (Sub)ois.readObject();
UserMistakes.java,result=findFiles.readLine();,if (result=findFiles != null ) result=findFiles.readLine();
WMITest.java,String name = (String) it.next();,if (it != null ) String name = (String) it.next();
WMITest.java,String name = (String) it.next();,if (it != null ) String name = (String) it.next();
WMITest.java,Object name = it.next();,if (it != null ) Object name = it.next();
Ideas_2008_10_14.java,int rawHash = key.hashCode();,if (key != null ) int rawHash = key.hashCode();
Ideas_2008_11_21.java,String foo = new Date().toString();,if (Date() != null ) String foo = new Date().toString();
Ideas_2009_11_01.java,for(Iterator i = c.iterator(); i.hasNext(); ),if () != null ) for(Iterator i = c.iterator(); i.hasNext(); )
Ideas_2010_02_24.java,long x = System.currentTimeMillis();,if (System != null ) long x = System.currentTimeMillis();
Ideas_2010_08_16.java,return tag == name.toUpperCase();,if (name != null ) return tag == name.toUpperCase();
Pilhuhn.java,if(fis!=null) try { fis.close(); } catch( Exception e2 ) {},if ({} != null ) if(fis!=null) try { fis.close(); } catch( Exception e2 ) {}
Pilhuhn.java,if(fos!=null) try { fos.close(); } catch( Exception e2 ) {} // DE_MIGHT_IGNORE,if (DE_MIGHT_IGNORE != null ) if(fos!=null) try { fos.close(); } catch( Exception e2 ) {} // DE_MIGHT_IGNORE
Bug20070301.java,stm = conn.createStatement();,if (conn != null ) stm = conn.createStatement();
BenChelf_2007_01_29.java,body = body.trim();,if (body != null ) body = body.trim();
BadSetter.java,Class getterType = getter.getReturnType();,if (getter != null ) Class getterType = getter.getReturnType();
JXPathMetaModuleExample.java,Object[] obj = values.toArray();  // guaranteed dereference here,if (here != null ) Object[] obj = values.toArray();  // guaranteed dereference here
ReadLineTest.java,x = in.readLine();,if (in != null ) x = in.readLine();
UnconditionalThrower.java,if (x == null) a.foo();,if (a != null ) if (x == null) a.foo();
Puzzlers2007.java,int last = in.read();,if (in != null ) int last = in.read();
Puzzlers2007.java,boolean toBe = rnd.nextBoolean();,if (rnd != null ) boolean toBe = rnd.nextBoolean();
Puzzlers2007.java,int i = rnd.nextInt();,if (rnd != null ) int i = rnd.nextInt();
Bug1006704.java,PreparedStatement ps = con.prepareStatement(sql.toString());,if (con != null ) PreparedStatement ps = con.prepareStatement(sql.toString());
Bug1563719.java,ArrayList workingList = (ArrayList)list.clone();,if ((ArrayList)list != null ) ArrayList workingList = (ArrayList)list.clone();
Bug1678229.java,staticDevice = staticDeviceFactory.toString();,if (staticDeviceFactory != null ) staticDevice = staticDeviceFactory.toString();
Bug1678229.java,device = deviceFactory.toString();,if (deviceFactory != null ) device = deviceFactory.toString();
Bug1735737.java,Calendar calendar =   Calendar.getInstance();,if (Calendar != null ) Calendar calendar =   Calendar.getInstance();
Bug1744457.java,String retrieve = (String) it.next();,if (it != null ) String retrieve = (String) it.next();
Bug1744457.java,String retrieve = (String) it.next();,if (it != null ) String retrieve = (String) it.next();
Bug1994945.java,z = in.readInt();,if (in != null ) z = in.readInt();
Bug2928673.java,final PrintWriter out = response.getWriter();,if (response != null ) final PrintWriter out = response.getWriter();
Bug2948672.java,sqlStatement = dbConnection.createStatement();,if (dbConnection != null ) sqlStatement = dbConnection.createStatement();
DetectorConfigurationTabTestSubclass.java,TableItem[] items = availableFactoriesTableViewer.getTable().getItems();,if (availableFactoriesTableViewer != null ) TableItem[] items = availableFactoriesTableViewer.getTable().getItems();
DetectorConfigurationTabTestSubclass.java,TableItem[] items = availableFactoriesTableViewer.getTable().getItems();,if (availableFactoriesTableViewer != null ) TableItem[] items = availableFactoriesTableViewer.getTable().getItems();
FilterFilesTabTestSubclass.java,this.fileName = file.getName();,if (file != null ) this.fileName = file.getName();
FilterFilesTabTestSubclass.java,this.parentPath = file.getParent();,if (file != null ) this.parentPath = file.getParent();
PropertiesPageTest.java,DetectorFactory detectorFactory = factories.next();,if (factories != null ) DetectorFactory detectorFactory = factories.next();
PropertiesPageTest.java,DetectorFactory detectorFactory = factories.next();,if (factories != null ) DetectorFactory detectorFactory = factories.next();
AbstractPluginTest.java,String[] testFilesPaths = scenario.getTestFilesPaths();,if (scenario != null ) String[] testFilesPaths = scenario.getTestFilesPaths();
AbstractPluginTest.java,Bundle testBundle = FindbugsTestPlugin.getDefault().getBundle();,if (FindbugsTestPlugin != null ) Bundle testBundle = FindbugsTestPlugin.getDefault().getBundle();
AbstractQuickfixTest.java,input = url.openStream();,if (url != null ) input = url.openStream();
FilterBugsDialogTest.java,String selectedIds = dialog.getSelectedIds();,if (dialog != null ) String selectedIds = dialog.getSelectedIds();
ExpectedViewBugGroup.java,ExpectedViewElement expectedChild = iChildren.next();,if (iChildren != null ) ExpectedViewElement expectedChild = iChildren.next();
ExpectedViewBugGroup.java,IMarker actualMarker = iMarkers.next();,if (iMarkers != null ) IMarker actualMarker = iMarkers.next();
ExpectedViewBugGroup.java,ExpectedViewElement expectedMarker = iterator.next();,if (iterator != null ) ExpectedViewElement expectedMarker = iterator.next();
FindBugsPerspectiveTest.java,IWorkbenchWindow window = PlatformUI.getWorkbench().getActiveWorkbenchWindow();,if (PlatformUI != null ) IWorkbenchWindow window = PlatformUI.getWorkbench().getActiveWorkbenchWindow();
JavaProjectHelper.java,IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();,if (ResourcesPlugin != null ) IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();
JavaProjectHelper.java,outputLocation = binFolder.getFullPath();,if (binFolder != null ) outputLocation = binFolder.getFullPath();
JavaProjectHelper.java,outputLocation = project.getFullPath();,if (project != null ) outputLocation = project.getFullPath();
JavaProjectHelper.java,IResource[] resources = jproject.getProject().members();,if (jproject != null ) IResource[] resources = jproject.getProject().members();
JavaProjectHelper.java,IProject project = jproject.getProject();,if (jproject != null ) IProject project = jproject.getProject();
JavaProjectHelper.java,IProject project = jproject.getProject();,if (jproject != null ) IProject project = jproject.getProject();
JavaProjectHelper.java,IFile newFile = project.getFile(jarPath.lastSegment());,if (project != null ) IFile newFile = project.getFile(jarPath.lastSegment());
JavaProjectHelper.java,inputStream = new FileInputStream(jarPath.toFile());,if (FileInputStream(jarPath != null ) inputStream = new FileInputStream(jarPath.toFile());
JavaProjectHelper.java,IProject project = jproject.getProject();,if (jproject != null ) IProject project = jproject.getProject();
JavaProjectHelper.java,IWorkspace workspace = ResourcesPlugin.getWorkspace();,if (ResourcesPlugin != null ) IWorkspace workspace = ResourcesPlugin.getWorkspace();
JavaProjectHelper.java,IWorkspaceDescription desc = workspace.getDescription();,if (workspace != null ) IWorkspaceDescription desc = workspace.getDescription();
JavaProjectHelper.java,boolean result = desc.isAutoBuilding();,if (desc != null ) boolean result = desc.isAutoBuilding();
JavaProjectHelper.java,IClasspathEntry[] oldEntries = jproject.getRawClasspath();,if (jproject != null ) IClasspathEntry[] oldEntries = jproject.getRawClasspath();
JavaProjectHelper.java,IProjectDescription description = proj.getDescription();,if (proj != null ) IProjectDescription description = proj.getDescription();
JavaProjectHelper.java,String[] prevNatures = description.getNatureIds();,if (description != null ) String[] prevNatures = description.getNatureIds();
JavaProjectHelper.java,String path = (String) entryPaths.nextElement();,if (entryPaths != null ) String path = (String) entryPaths.nextElement();
AntPropertyValueProvider.java,String home = FindbugsPlugin.getFindBugsEnginePluginLocation();,if (FindbugsPlugin != null ) String home = FindbugsPlugin.getFindBugsEnginePluginLocation();
DetectorsExtensionHelper.java,IExtensionRegistry registry = Platform.getExtensionRegistry();,if (Platform != null ) IExtensionRegistry registry = Platform.getExtensionRegistry();
DetectorsExtensionHelper.java,IExtension[] extensions = point.getExtensions();,if (point != null ) IExtension[] extensions = point.getExtensions();
DetectorsExtensionHelper.java,contributor = configElt.getContributor();,if (configElt != null ) contributor = configElt.getContributor();
DetectorsExtensionHelper.java,File[] files = sourceDir.listFiles();,if (sourceDir != null ) File[] files = sourceDir.listFiles();
DetectorsExtensionHelper.java,boolean directory = file.isDirectory();,if (file != null ) boolean directory = file.isDirectory();
EclipseGuiCallback.java,final String statusMsg = cloud.getStatusMsg();,if (cloud != null ) final String statusMsg = cloud.getStatusMsg();
EclipseGuiCallback.java,final IWorkbenchWindow win = FindbugsPlugin.getActiveWorkbenchWindow();,if (FindbugsPlugin != null ) final IWorkbenchWindow win = FindbugsPlugin.getActiveWorkbenchWindow();
EclipseGuiCallback.java,IWorkbenchPage page = win.getActivePage();,if (win != null ) IWorkbenchPage page = win.getActivePage();
EclipseGuiCallback.java,IWorkbenchPart part = page.getActivePart();,if (page != null ) IWorkbenchPart part = page.getActivePart();
FindbugsPlugin.java,DetectorFactoryCollection dfc = DetectorFactoryCollection.instance();,if (DetectorFactoryCollection != null ) DetectorFactoryCollection dfc = DetectorFactoryCollection.instance();
FindbugsPlugin.java,boolean shouldReplace = pluginArr.length != detectorPaths.size();,if (detectorPaths != null ) boolean shouldReplace = pluginArr.length != detectorPaths.size();
FindbugsPlugin.java,String file = url.getFile();,if (url != null ) String file = url.getFile();
FindbugsPlugin.java,DetectorFactoryCollection dfc = DetectorFactoryCollection.rawInstance();,if (DetectorFactoryCollection != null ) DetectorFactoryCollection dfc = DetectorFactoryCollection.rawInstance();
FindbugsPlugin.java,ResourceBundle bundle = FindbugsPlugin.getDefault().getResourceBundle();,if (FindbugsPlugin != null ) ResourceBundle bundle = FindbugsPlugin.getDefault().getResourceBundle();
FindbugsPlugin.java,FindbugsPlugin.DEBUG = Boolean.valueOf(option).booleanValue();,if (Boolean != null ) FindbugsPlugin.DEBUG = Boolean.valueOf(option).booleanValue();
FindbugsPlugin.java,FindBugsBuilder.DEBUG = Boolean.valueOf(option).booleanValue();,if (Boolean != null ) FindBugsBuilder.DEBUG = Boolean.valueOf(option).booleanValue();
FindbugsPlugin.java,FindBugsNature.DEBUG = Boolean.valueOf(option).booleanValue();,if (Boolean != null ) FindBugsNature.DEBUG = Boolean.valueOf(option).booleanValue();
FindbugsPlugin.java,Reporter.DEBUG = Boolean.valueOf(option).booleanValue();,if (Boolean != null ) Reporter.DEBUG = Boolean.valueOf(option).booleanValue();
FindbugsPlugin.java,BugContentProvider.DEBUG = Boolean.valueOf(option).booleanValue();,if (Boolean != null ) BugContentProvider.DEBUG = Boolean.valueOf(option).booleanValue();
FindbugsPlugin.java,IPath path = getDefault().getStateLocation(); // user-specific but not project-specific,if (project-specific != null ) IPath path = getDefault().getStateLocation(); // user-specific but not project-specific
FindbugsPlugin.java,File prefsFile = path.toFile();,if (path != null ) File prefsFile = path.toFile();
FindbugsPlugin.java,IPath path = getDefault().getStateLocation();,if (getDefault() != null ) IPath path = getDefault().getStateLocation();
FindbugsPlugin.java,UserPreferences userPrefs = FindBugsPreferenceInitializer.createDefaultUserPreferences();,if (FindBugsPreferenceInitializer != null ) UserPreferences userPrefs = FindBugsPreferenceInitializer.createDefaultUserPreferences();
FindbugsPlugin.java,final IPreferenceStore store = FindbugsPlugin.getDefault().getPreferenceStore();,if (FindbugsPlugin != null ) final IPreferenceStore store = FindbugsPlugin.getDefault().getPreferenceStore();
FindbugsPlugin.java,BugPattern next = patternIterator.next();,if (patternIterator != null ) BugPattern next = patternIterator.next();
FindbugsPlugin.java,String patternId = next.getType();,if (next != null ) String patternId = next.getType();
FindbugsPlugin.java,BugCode next = patternIterator.next();,if (patternIterator != null ) BugCode next = patternIterator.next();
FindbugsPlugin.java,String type = next.getAbbrev();,if (next != null ) String type = next.getAbbrev();
CopyMarkerDetailsAction.java,IResource resource = marker.getResource();,if (marker != null ) IResource resource = marker.getResource();
CopyMarkerDetailsAction.java,IPath location = resource.getLocation();,if (resource != null ) IPath location = resource.getLocation();
FilterBugsDialogAction.java,Set<BugPattern> filtered = FindbugsPlugin.getFilteredPatterns();,if (FindbugsPlugin != null ) Set<BugPattern> filtered = FindbugsPlugin.getFilteredPatterns();
FilterBugsDialogAction.java,Set<BugCode> filteredTypes = FindbugsPlugin.getFilteredPatternTypes();,if (FindbugsPlugin != null ) Set<BugCode> filteredTypes = FindbugsPlugin.getFilteredPatternTypes();
FilterBugsDialogAction.java,int result = dialog.open();,if (dialog != null ) int result = dialog.open();
FilterBugsDialogAction.java,String selectedIds = dialog.getSelectedIds();,if (dialog != null ) String selectedIds = dialog.getSelectedIds();
FilterBugsDialogAction.java,CommonViewer viewer = navigator.getCommonViewer();,if (navigator != null ) CommonViewer viewer = navigator.getCommonViewer();
FilterBugsDialogAction.java,Object[] expandedElements = viewer.getExpandedElements();,if (viewer != null ) Object[] expandedElements = viewer.getExpandedElements();
FilterPatternAction.java,Set<String> sortedIds = FindbugsPlugin.getFilteredIds();,if (FindbugsPlugin != null ) Set<String> sortedIds = FindbugsPlugin.getFilteredIds();
FilterPatternAction.java,final IPreferenceStore store = FindbugsPlugin.getDefault().getPreferenceStore();,if (FindbugsPlugin != null ) final IPreferenceStore store = FindbugsPlugin.getDefault().getPreferenceStore();
FilterPatternAction.java,CommonViewer viewer = navigator.getCommonViewer();,if (navigator != null ) CommonViewer viewer = navigator.getCommonViewer();
FilterPatternAction.java,Object[] expandedElements = viewer.getExpandedElements();,if (viewer != null ) Object[] expandedElements = viewer.getExpandedElements();
FilterPatternAction.java,Object firstElement = ss.getFirstElement();,if (ss != null ) Object firstElement = ss.getFirstElement();
FindBugsAction.java,IWorkspace workspace = ResourcesPlugin.getWorkspace();,if (ResourcesPlugin != null ) IWorkspace workspace = ResourcesPlugin.getWorkspace();
FindBugsAction.java,IWorkspaceDescription description = workspace.getDescription();,if (workspace != null ) IWorkspaceDescription description = workspace.getDescription();
FindBugsAction.java,IDialogSettings settings = FindbugsPlugin.getDefault().getDialogSettings();,if (FindbugsPlugin != null ) IDialogSettings settings = FindbugsPlugin.getDefault().getDialogSettings();
FindBugsAction.java,Object element = structuredSelection.getFirstElement();,if (structuredSelection != null ) Object element = structuredSelection.getFirstElement();
FindBugsAction.java,IProject project = resource.getProject();,if (resource != null ) IProject project = resource.getProject();
FindBugsAction.java,final IPreferenceStore store = FindbugsPlugin.getDefault().getPreferenceStore();,if (FindbugsPlugin != null ) final IPreferenceStore store = FindbugsPlugin.getDefault().getPreferenceStore();
FindBugsAction.java,boolean remember = dialog.getToggleState();,if (dialog != null ) boolean remember = dialog.getToggleState();
FindBugsAction.java,int returnCode = dialog.getReturnCode();,if (dialog != null ) int returnCode = dialog.getReturnCode();
FindBugsAction.java,window = currentSite.getWorkbenchWindow();,if (currentSite != null ) window = currentSite.getWorkbenchWindow();
FindBugsAction.java,window = FindbugsPlugin.getActiveWorkbenchWindow();,if (FindbugsPlugin != null ) window = FindbugsPlugin.getActiveWorkbenchWindow();
FindBugsAction.java,IWorkbenchPage page = window.getActivePage();,if (window != null ) IWorkbenchPage page = window.getActivePage();
FindBugsAction.java,input = page.getInput();,if (page != null ) input = page.getInput();
FindBugsAction.java,final IPreferenceStore store = FindbugsPlugin.getDefault().getPreferenceStore();,if (FindbugsPlugin != null ) final IPreferenceStore store = FindbugsPlugin.getDefault().getPreferenceStore();
GoIntoAction.java,CommonViewer viewer = navigator.getCommonViewer();,if (navigator != null ) CommonViewer viewer = navigator.getCommonViewer();
GoIntoAction.java,Object[] expandedElements = viewer.getVisibleExpandedElements();,if (viewer != null ) Object[] expandedElements = viewer.getVisibleExpandedElements();
GoIntoAction.java,Object element = ssel.getFirstElement();,if (ssel != null ) Object element = ssel.getFirstElement();
GoUpAction.java,CommonViewer viewer = navigator.getCommonViewer();,if (navigator != null ) CommonViewer viewer = navigator.getCommonViewer();
GoUpAction.java,Object[] expandedElements = viewer.getVisibleExpandedElements();,if (viewer != null ) Object[] expandedElements = viewer.getVisibleExpandedElements();
GoUpAction.java,Object input = viewer.getInput();,if (viewer != null ) Object input = viewer.getInput();
GoUpAction.java,Object data = group.getParent();,if (group != null ) Object data = group.getParent();
GoUpAction.java,Object input = navigator.getCommonViewer().getInput();,if (navigator != null ) Object input = navigator.getCommonViewer().getInput();
GoUpAction.java,Grouping grouping = provider.getGrouping();,if (provider != null ) Grouping grouping = provider.getGrouping();
GroupByAction.java,Grouping grouping = getGrouping(action.getId());,if (getGrouping(action != null ) Grouping grouping = getGrouping(action.getId());
GroupByAction.java,CommonViewer viewer = navigator.getCommonViewer();,if (navigator != null ) CommonViewer viewer = navigator.getCommonViewer();
GroupByAction.java,Object[] expandedElements = viewer.getExpandedElements();,if (viewer != null ) Object[] expandedElements = viewer.getExpandedElements();
MarkerRulerAction.java,control = ruler.getControl();,if (ruler != null ) control = ruler.getControl();
MarkerRulerAction.java,control = ruler.getControl();,if (ruler != null ) control = ruler.getControl();
MarkerRulerAction.java,int markerLine = document.getLineOfOffset(position.getOffset());,if (document != null ) int markerLine = document.getLineOfOffset(position.getOffset());
MarkerRulerAction.java,int line = ruler.getLineOfLastMouseButtonActivity();,if (ruler != null ) int line = ruler.getLineOfLastMouseButtonActivity();
MarkerRulerAction.java,IDocumentProvider provider = editor.getDocumentProvider();,if (editor != null ) IDocumentProvider provider = editor.getDocumentProvider();
MarkerRulerAction.java,IDocumentProvider provider = editor.getDocumentProvider();,if (editor != null ) IDocumentProvider provider = editor.getDocumentProvider();
OpenGroupDialogAction.java,List<GroupType> list = provider.getGrouping().asList();,if (provider != null ) List<GroupType> list = provider.getGrouping().asList();
OpenGroupDialogAction.java,int result = dialog.open();,if (dialog != null ) int result = dialog.open();
OpenGroupDialogAction.java,Grouping grouping = Grouping.createFrom(dialog.getGroups());,if (Grouping != null ) Grouping grouping = Grouping.createFrom(dialog.getGroups());
OpenGroupDialogAction.java,CommonViewer viewer = navigator.getCommonViewer();,if (navigator != null ) CommonViewer viewer = navigator.getCommonViewer();
OpenGroupDialogAction.java,Object[] expandedElements = viewer.getExpandedElements();,if (viewer != null ) Object[] expandedElements = viewer.getExpandedElements();
OpenPropertiesAction.java,Object element = ssel.getFirstElement();,if (ssel != null ) Object element = ssel.getFirstElement();
OpenXMLResultsAction.java,IWorkbench workbench = PlatformUI.getWorkbench();,if (PlatformUI != null ) IWorkbench workbench = PlatformUI.getWorkbench();
OpenXMLResultsAction.java,IEditorRegistry editorRegistry = workbench.getEditorRegistry();,if (workbench != null ) IEditorRegistry editorRegistry = workbench.getEditorRegistry();
RefreshAction.java,CommonViewer viewer = navigator.getCommonViewer();,if (navigator != null ) CommonViewer viewer = navigator.getCommonViewer();
RefreshAction.java,Object[] expandedElements = viewer.getExpandedElements();,if (viewer != null ) Object[] expandedElements = viewer.getExpandedElements();
RefreshAction.java,Object input = viewer.getInput();,if (viewer != null ) Object input = viewer.getInput();
ShowInPackageExplorerAction.java,site = targetPart.getSite();,if (targetPart != null ) site = targetPart.getSite();
ShowInPackageExplorerAction.java,Object firstElement = ss.getFirstElement();,if (ss != null ) Object firstElement = ss.getFirstElement();
ShowInPackageExplorerAction.java,data = marker.getResource();,if (marker != null ) data = marker.getResource();
ShowInPackageExplorerAction.java,data = group.getData();,if (group != null ) data = group.getData();
FindBugsWorker.java,Set<IPath> srcDirs = outLocations.keySet();,if (outLocations != null ) Set<IPath> srcDirs = outLocations.keySet();
FindBugsWorker.java,SortedBugCollection newBugCollection = bugReporter.getBugCollection();,if (bugReporter != null ) SortedBugCollection newBugCollection = bugReporter.getBugCollection();
FindBugsWorker.java,String filterName = path.toOSString();,if (path != null ) String filterName = path.toOSString();
FindBugsWorker.java,IPath defaultOutputLocation = ResourceUtils.relativeToAbsolute(javaProject.getOutputLocation());,if (ResourceUtils != null ) IPath defaultOutputLocation = ResourceUtils.relativeToAbsolute(javaProject.getOutputLocation());
FindBugsWorker.java,IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();,if (ResourcesPlugin != null ) IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();
FindBugsWorker.java,IResource resource = root.findMember(classpathEntry.getPath());,if (root != null ) IResource resource = root.findMember(classpathEntry.getPath());
FindBugsWorker.java,IPath srcLocation = ResourceUtils.relativeToAbsolute(classpathEntry.getPath());,if (ResourceUtils != null ) IPath srcLocation = ResourceUtils.relativeToAbsolute(classpathEntry.getPath());
PDEClassPathGenerator.java,IClasspathEntry[] rawClasspath = javaProject.getRawClasspath();,if (javaProject != null ) IClasspathEntry[] rawClasspath = javaProject.getRawClasspath();
PDEClassPathGenerator.java,IPath path = iClasspathEntry.getPath();,if (iClasspathEntry != null ) IPath path = iClasspathEntry.getPath();
PDEClassPathGenerator.java,IPluginModelBase model = PluginRegistry.findModel(javaProject.getProject());,if (PluginRegistry != null ) IPluginModelBase model = PluginRegistry.findModel(javaProject.getProject());
PDEClassPathGenerator.java,BundleDescription target = model.getBundleDescription();,if (model != null ) BundleDescription target = model.getBundleDescription();
PDEClassPathGenerator.java,location = cpe.getPath();,if (cpe != null ) location = cpe.getPath();
PDEClassPathGenerator.java,String locationStr = location.toOSString();,if (location != null ) String locationStr = location.toOSString();
ResourceUtils.java,IPath outputLocation = classpathEntry.getOutputLocation();,if (classpathEntry != null ) IPath outputLocation = classpathEntry.getOutputLocation();
ResourceUtils.java,IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();,if (ResourcesPlugin != null ) IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();
ResourceUtils.java,IResource child = childDelta.getResource();,if (childDelta != null ) IResource child = childDelta.getResource();
ResourceUtils.java,int childType = child.getType();,if (child != null ) int childType = child.getType();
ResourceUtils.java,int deltaKind = childDelta.getKind();,if (childDelta != null ) int deltaKind = childDelta.getKind();
ResourceUtils.java,IContainer parent = child.getParent();,if (child != null ) IContainer parent = child.getParent();
ResourceUtils.java,Object element = iter.next();,if (iter != null ) Object element = iter.next();
ResourceUtils.java,boolean aggregateWorkingSet = wset.isAggregateWorkingSet();,if (wset != null ) boolean aggregateWorkingSet = wset.isAggregateWorkingSet();
ResourceUtils.java,IWorkingSet[] sets = aggr.getComponents();,if (aggr != null ) IWorkingSet[] sets = aggr.getComponents();
ResourceUtils.java,IAdaptable[] elements = wset.getElements();,if (wset != null ) IAdaptable[] elements = wset.getElements();
ResourceUtils.java,IProject project = resource.getProject();,if (resource != null ) IProject project = resource.getProject();
ResourceUtils.java,IResource[] resources = set.getResources();,if (set != null ) IResource[] resources = set.getResources();
ResourceUtils.java,IPath location = candidate.getPath();,if (candidate != null ) IPath location = candidate.getPath();
ResourceUtils.java,IPath parentLoc = resource.getPath();,if (resource != null ) IPath parentLoc = resource.getPath();
WorkItem.java,IPath path = folder.getLocation();,if (folder != null ) IPath path = folder.getLocation();
WorkItem.java,File directory = out.toFile();,if (out != null ) File directory = out.toFile();
WorkItem.java,IPath path = file.getLocation();,if (file != null ) IPath path = file.getLocation();
WorkItem.java,String fileName = path.removeFileExtension().lastSegment();,if (path != null ) String fileName = path.removeFileExtension().lastSegment();
WorkItem.java,IType[] types = cu.getTypes();,if (cu != null ) IType[] types = cu.getTypes();
WorkItem.java,IPath srcRoot = entry.getKey();,if (entry != null ) IPath srcRoot = entry.getKey();
WorkItem.java,File file = path.toFile();,if (path != null ) File file = path.toFile();
AccuracyClassificationPulldownAction.java,IProject project = marker.getResource().getProject();,if (marker != null ) IProject project = marker.getResource().getProject();
AccuracyClassificationPulldownAction.java,boolean isBug = isBugProperty.getValueAsBoolean();,if (isBugProperty != null ) boolean isBug = isBugProperty.getValueAsBoolean();
SeverityClassificationPulldownAction.java,int severity = severityProperty.getValueAsInt();,if (severityProperty != null ) int severity = severityProperty.getValueAsInt();
FindBugsMarker.java,Priority[] values = Priority.values();,if (Priority != null ) Priority[] values = Priority.values();
FindBugsMarker.java,Priority[] values = Priority.values();,if (Priority != null ) Priority[] values = Priority.values();
FindBugsNature.java,IProjectDescription description = getProject().getDescription();,if (getProject() != null ) IProjectDescription description = getProject().getDescription();
FindBugsNature.java,ICommand[] commands = description.getBuildSpec();,if (description != null ) ICommand[] commands = description.getBuildSpec();
FindBugsNature.java,IProjectDescription description = getProject().getDescription();,if (getProject() != null ) IProjectDescription description = getProject().getDescription();
FindBugsNature.java,ICommand newCommand = description.newCommand();,if (description != null ) ICommand newCommand = description.newCommand();
FindBugsNature.java,ICommand[] commands = description.getBuildSpec();,if (description != null ) ICommand[] commands = description.getBuildSpec();
FindBugsNature.java,ICommand[] oldCommands = description.getBuildSpec();,if (description != null ) ICommand[] oldCommands = description.getBuildSpec();
FindBugsConstants.java,string = string.trim();,if (string != null ) string = string.trim();
FindBugsPreferenceInitializer.java,IPreferenceStore store = FindbugsPlugin.getDefault().getPreferenceStore();,if (FindbugsPlugin != null ) IPreferenceStore store = FindbugsPlugin.getDefault().getPreferenceStore();
FindBugsPreferenceInitializer.java,UserPreferences prefs = UserPreferences.createDefaultUserPreferences();,if (UserPreferences != null ) UserPreferences prefs = UserPreferences.createDefaultUserPreferences();
FindBugsPreferenceInitializer.java,IPreferenceStore store = FindbugsPlugin.getDefault().getPreferenceStore();,if (FindbugsPlugin != null ) IPreferenceStore store = FindbugsPlugin.getDefault().getPreferenceStore();
DetectorConfigurationTab.java,String provider = factory.getPlugin().getProvider();,if (factory != null ) String provider = factory.getPlugin().getProvider();
DetectorConfigurationTab.java,ProjectFilterSettings filterSettings = tab.getCurrentProps().getFilterSettings();,if (tab != null ) ProjectFilterSettings filterSettings = tab.getCurrentProps().getFilterSettings();
DetectorConfigurationTab.java,DetectorFactory factory = (DetectorFactory) item.getData();,if (item != null ) DetectorFactory factory = (DetectorFactory) item.getData();
DetectorConfigurationTab.java,StringBuffer sb = new StringBuffer(factory.getFullName());,if (StringBuffer(factory != null ) StringBuffer sb = new StringBuffer(factory.getFullName());
DetectorConfigurationTab.java,Collection<BugPattern> patterns = factory.getReportedBugPatterns();,if (factory != null ) Collection<BugPattern> patterns = factory.getReportedBugPatterns();
DetectorConfigurationTab.java,BugPattern pattern = iter.next();,if (iter != null ) BugPattern pattern = iter.next();
DetectorConfigurationTab.java,String detailHTML = factory.getDetailHTML();,if (factory != null ) String detailHTML = factory.getDetailHTML();
DetectorConfigurationTab.java,Collection<BugPattern> patterns = factory.getReportedBugPatterns();,if (factory != null ) Collection<BugPattern> patterns = factory.getReportedBugPatterns();
DetectorConfigurationTab.java,category = sb.toString();,if (sb != null ) category = sb.toString();
DetectorConfigurationTab.java,TableItem[] itemList = availableFactoriesTableViewer.getTable().getItems();,if (availableFactoriesTableViewer != null ) TableItem[] itemList = availableFactoriesTableViewer.getTable().getItems();
DetectorConfigurationTab.java,DetectorFactory factory = (DetectorFactory) item.getData();,if (item != null ) DetectorFactory factory = (DetectorFactory) item.getData();
DetectorConfigurationTab.java,TableItem[] itemList = availableFactoriesTableViewer.getTable().getItems();,if (availableFactoriesTableViewer != null ) TableItem[] itemList = availableFactoriesTableViewer.getTable().getItems();
DetectorConfigurationTab.java,Table factoriesTable = availableFactoriesTableViewer.getTable();,if (availableFactoriesTableViewer != null ) Table factoriesTable = availableFactoriesTableViewer.getTable();
DetectorConfigurationTab.java,Table factoriesTable = availableFactoriesTableViewer.getTable();,if (availableFactoriesTableViewer != null ) Table factoriesTable = availableFactoriesTableViewer.getTable();
DetectorConfigurationTab.java,DetectorFactory factory = iterator.next();,if (iterator != null ) DetectorFactory factory = iterator.next();
DetectorConfigurationTab.java,Collection<BugPattern> patterns = factory.getReportedBugPatterns();,if (factory != null ) Collection<BugPattern> patterns = factory.getReportedBugPatterns();
DetectorConfigurationTab.java,BugPattern pattern = iter.next();,if (iter != null ) BugPattern pattern = iter.next();
DetectorConfigurationTab.java,String abbr = pattern.getAbbrev();,if (pattern != null ) String abbr = pattern.getAbbrev();
DetectorConfigurationTab.java,String element = iter.next();,if (iter != null ) String element = iter.next();
FilterFilesTab.java,prefs = propertyPage.getCurrentUserPreferences();,if (propertyPage != null ) prefs = propertyPage.getCurrentUserPreferences();
FilterFilesTab.java,IProject project = propertyPage.getProject();,if (propertyPage != null ) IProject project = propertyPage.getProject();
FilterFilesTab.java,IProject project = propertyPage.getProject();,if (propertyPage != null ) IProject project = propertyPage.getProject();
FindbugsPropertyPage.java,setProjectEnabled(enableProjectCheck == null || enableProjectCheck.getSelection());,if (enableProjectCheck != null ) setProjectEnabled(enableProjectCheck == null || enableProjectCheck.getSelection());
FindbugsPropertyPage.java,currentUserPreferences = (UserPreferences) origUserPreferences.clone();,if (origUserPreferences != null ) currentUserPreferences = (UserPreferences) origUserPreferences.clone();
FindbugsPropertyPage.java,boolean enabled = chkEnableFindBugs.getSelection();,if (chkEnableFindBugs != null ) boolean enabled = chkEnableFindBugs.getSelection();
FindbugsPropertyPage.java,String effortLevel = currentUserPreferences.getEffort();,if (currentUserPreferences != null ) String effortLevel = currentUserPreferences.getEffort();
FindbugsPropertyPage.java,currentUserPreferences = FindBugsPreferenceInitializer.createDefaultUserPreferences();,if (FindBugsPreferenceInitializer != null ) currentUserPreferences = FindBugsPreferenceInitializer.createDefaultUserPreferences();
FindbugsPropertyPage.java,pluginsChanged = workspaceSettingsTab.arePluginsChanged();,if (workspaceSettingsTab != null ) pluginsChanged = workspaceSettingsTab.arePluginsChanged();
FindbugsPropertyPage.java,boolean markerSeveritiesChanged = reportConfigurationTab.isMarkerSeveritiesChanged();,if (reportConfigurationTab != null ) boolean markerSeveritiesChanged = reportConfigurationTab.isMarkerSeveritiesChanged();
FindbugsPropertyPage.java,boolean builderEnabled = chkEnableFindBugs.getSelection();,if (chkEnableFindBugs != null ) boolean builderEnabled = chkEnableFindBugs.getSelection();
FindbugsPropertyPage.java,builderEnabled &= chkRunAtFullBuild.getSelection();,if (chkRunAtFullBuild != null ) builderEnabled &= chkRunAtFullBuild.getSelection();
FindbugsPropertyPage.java,boolean newSelection = enableProjectCheck.getSelection();,if (enableProjectCheck != null ) boolean newSelection = enableProjectCheck.getSelection();
PathsProvider.java,this.control = viewer.getList();,if (viewer != null ) this.control = viewer.getList();
PathsProvider.java,IProject project = propertyPage.getProject();,if (propertyPage != null ) IProject project = propertyPage.getProject();
ReportConfigurationTab.java,IPreferenceStore store = propertyPage.getPreferenceStore();,if (propertyPage != null ) IPreferenceStore store = propertyPage.getPreferenceStore();
ReportConfigurationTab.java,MarkerSeverity[] markerSeverities = MarkerSeverity.values();,if (MarkerSeverity != null ) MarkerSeverity[] markerSeverities = MarkerSeverity.values();
ReportConfigurationTab.java,String data = minPriorityCombo.getText();,if (minPriorityCombo != null ) String data = minPriorityCombo.getText();
ReportConfigurationTab.java,final IProject eclipseProj = propertyPage.getProject();,if (propertyPage != null ) final IProject eclipseProj = propertyPage.getProject();
ReportConfigurationTab.java,IProject eclipseProj = propertyPage.getProject();,if (propertyPage != null ) IProject eclipseProj = propertyPage.getProject();
ReportConfigurationTab.java,int rank = minRankSlider.getSelection();,if (minRankSlider != null ) int rank = minRankSlider.getSelection();
ReportConfigurationTab.java,int rank = minRankSlider.getSelection();,if (minRankSlider != null ) int rank = minRankSlider.getSelection();
ReportConfigurationTab.java,ProjectFilterSettings filterSettings = getCurrentProps().getFilterSettings();,if (getCurrentProps() != null ) ProjectFilterSettings filterSettings = getCurrentProps().getFilterSettings();
ReportConfigurationTab.java,String category = (String) checkBox.getData();,if (checkBox != null ) String category = (String) checkBox.getData();
ReportConfigurationTab.java,IPreferenceStore store = propertyPage.getPreferenceStore();,if (propertyPage != null ) IPreferenceStore store = propertyPage.getPreferenceStore();
ReportConfigurationTab.java,IPreferenceStore store = propertyPage.getPreferenceStore();,if (propertyPage != null ) IPreferenceStore store = propertyPage.getPreferenceStore();
ReportConfigurationTab.java,ProjectFilterSettings filterSettings = prefs.getFilterSettings();,if (prefs != null ) ProjectFilterSettings filterSettings = prefs.getFilterSettings();
ReportConfigurationTab.java,IPreferenceStore store = propertyPage.getPreferenceStore();,if (propertyPage != null ) IPreferenceStore store = propertyPage.getPreferenceStore();
ReportConfigurationTab.java,String highPrio = highPrioCombo.getText();,if (highPrioCombo != null ) String highPrio = highPrioCombo.getText();
ReportConfigurationTab.java,String normalPrio = normalPrioCombo.getText();,if (normalPrioCombo != null ) String normalPrio = normalPrioCombo.getText();
ReportConfigurationTab.java,String lowPrio = lowPrioCombo.getText();,if (lowPrioCombo != null ) String lowPrio = lowPrioCombo.getText();
ReportConfigurationTab.java,IProject eclipseProj = propertyPage.getProject();,if (propertyPage != null ) IProject eclipseProj = propertyPage.getProject();
ReportConfigurationTab.java,Project project = collection.getProject();,if (collection != null ) Project project = collection.getProject();
ReportConfigurationTab.java,CloudPlugin item = clouds.get(cloudCombo.getSelectionIndex());,if (clouds != null ) CloudPlugin item = clouds.get(cloudCombo.getSelectionIndex());
ReportConfigurationTab.java,IWorkbenchPage page = FindbugsPlugin.getActiveWorkbenchWindow().getActivePage();,if (FindbugsPlugin != null ) IWorkbenchPage page = FindbugsPlugin.getActiveWorkbenchWindow().getActivePage();
WorkspaceSettingsTab.java,store = page.getPreferenceStore();,if (page != null ) store = page.getPreferenceStore();
WorkspaceSettingsTab.java,IProject project = propertyPage.getProject();,if (propertyPage != null ) IProject project = propertyPage.getProject();
WorkspaceSettingsTab.java,IStatus status = validator.validate(path.getPath());,if (validator != null ) IStatus status = validator.validate(path.getPath());
WorkspaceSettingsTab.java,DetectorFactoryCollection dfc = DetectorFactoryCollection.instance();,if (DetectorFactoryCollection != null ) DetectorFactoryCollection dfc = DetectorFactoryCollection.instance();
WorkspaceSettingsTab.java,URL[] pluginList = dfc.getPluginList();,if (dfc != null ) URL[] pluginList = dfc.getPluginList();
JdtUtils.java,compilePrio = prio.intValue();,if (prio != null ) compilePrio = prio.intValue();
JdtUtils.java,IJavaProject project = javaElt.getJavaProject();,if (javaElt != null ) IJavaProject project = javaElt.getJavaProject();
JdtUtils.java,declaringType = parentType.getDeclaringType();,if (parentType != null ) declaringType = parentType.getDeclaringType();
JdtUtils.java,IJavaElement[] children = parent.getChildren();,if (parent != null ) IJavaElement[] children = parent.getChildren();
JdtUtils.java,List<IType> keys = new ArrayList<IType>(map.keySet());,if (ArrayList<IType>(map != null ) List<IType> keys = new ArrayList<IType>(map.keySet());
JdtUtils.java,Object key = iterator.next();,if (iterator != null ) Object key = iterator.next();
JdtUtils.java,parent = javaElement.getParent();,if (javaElement != null ) parent = javaElement.getParent();
JdtUtils.java,IJavaElement parent = javaElement.getParent();,if (javaElement != null ) IJavaElement parent = javaElement.getParent();
JdtUtils.java,IJavaElement parent = javaElement.getParent();,if (javaElement != null ) IJavaElement parent = javaElement.getParent();
JdtUtils.java,topFlags = firstNonAnon.getFlags();,if (firstNonAnon != null ) topFlags = firstNonAnon.getFlags();
JdtUtils.java,IJavaElement parent = elt.getParent();,if (elt != null ) IJavaElement parent = elt.getParent();
JdtUtils.java,parent = parent.getParent();,if (parent != null ) parent = parent.getParent();
MarkerReporter.java,ProjectFilterSettings filterSettings = userPrefs.getFilterSettings();,if (userPrefs != null ) ProjectFilterSettings filterSettings = userPrefs.getFilterSettings();
MarkerReporter.java,IResource markerTarget = mp.resource.getMarkerTarget();,if (mp != null ) IResource markerTarget = mp.resource.getMarkerTarget();
MarkerReporter.java,long seqNum = mp.bug.getFirstVersion();,if (mp != null ) long seqNum = mp.bug.getFirstVersion();
MarkerReporter.java,String uniqueId = mp.bug.getInstanceHash();,if (mp != null ) String uniqueId = mp.bug.getInstanceHash();
MarkerReporter.java,IJavaElement javaElt = mp.resource.getCorespondingJavaElement();,if (mp != null ) IJavaElement javaElt = mp.resource.getCorespondingJavaElement();
MarkerUtil.java,IProject project = javaProject.getProject();,if (javaProject != null ) IProject project = javaProject.getProject();
MarkerUtil.java,BugInstance bug = iterator.next();,if (iterator != null ) BugInstance bug = iterator.next();
MarkerUtil.java,int primaryLine = bug.getPrimarySourceLineAnnotation().getStartLine();,if (bug != null ) int primaryLine = bug.getPrimarySourceLineAnnotation().getStartLine();
MarkerUtil.java,FieldAnnotation primaryField = bug.getPrimaryField();,if (bug != null ) FieldAnnotation primaryField = bug.getPrimaryField();
MarkerUtil.java,startLine = primaryField.getSourceLines().getStartLine();,if (primaryField != null ) startLine = primaryField.getSourceLines().getStartLine();
MarkerUtil.java,className = primaryClass.getClassName();,if (primaryClass != null ) className = primaryClass.getClassName();
MarkerUtil.java,packageName = primaryClass.getPackageName();,if (primaryClass != null ) packageName = primaryClass.getPackageName();
MarkerUtil.java,SourceLineAnnotation primarySourceLineAnnotation = bug.getPrimarySourceLineAnnotation();,if (bug != null ) SourceLineAnnotation primarySourceLineAnnotation = bug.getPrimarySourceLineAnnotation();
MarkerUtil.java,packageAnnotation = bug.getPrimaryClass();,if (bug != null ) packageAnnotation = bug.getPrimaryClass();
MarkerUtil.java,qualifiedClassName = packageAnnotation.getClassName();,if (packageAnnotation != null ) qualifiedClassName = packageAnnotation.getClassName();
MarkerUtil.java,qualifiedClassName = primarySourceLineAnnotation.getClassName();,if (primarySourceLineAnnotation != null ) qualifiedClassName = primarySourceLineAnnotation.getClassName();
MarkerUtil.java,primarySourceLineAnnotation = bug.getPrimarySourceLineAnnotation();,if (bug != null ) primarySourceLineAnnotation = bug.getPrimarySourceLineAnnotation();
MarkerUtil.java,startLine = primarySourceLineAnnotation.getStartLine();,if (primarySourceLineAnnotation != null ) startLine = primarySourceLineAnnotation.getStartLine();
MarkerUtil.java,FieldAnnotation field = bug.getPrimaryField();,if (bug != null ) FieldAnnotation field = bug.getPrimaryField();
MarkerUtil.java,IField ifield = type.getField(field.getFieldName());,if (type != null ) IField ifield = type.getField(field.getFieldName());
MarkerUtil.java,sourceRange = ifield.getNameRange();,if (ifield != null ) sourceRange = ifield.getNameRange();
MarkerUtil.java,sourceRange = ifield.getSourceRange();,if (ifield != null ) sourceRange = ifield.getSourceRange();
MarkerUtil.java,int lineNbr = scanner.getLineNumber(sourceRange.getOffset());,if (scanner != null ) int lineNbr = scanner.getLineNumber(sourceRange.getOffset());
MarkerUtil.java,IJavaElement primaryElement = type.getPrimaryElement();,if (type != null ) IJavaElement primaryElement = type.getPrimaryElement();
MarkerUtil.java,ISourceRange range = source.getNameRange();,if (source != null ) ISourceRange range = source.getNameRange();
MarkerUtil.java,range = source.getSourceRange();,if (source != null ) range = source.getSourceRange();
MarkerUtil.java,int offset = range.getOffset();,if (range != null ) int offset = range.getOffset();
MarkerUtil.java,String content = source.getSource();,if (source != null ) String content = source.getSource();
MarkerUtil.java,charContent = content.toCharArray();,if (content != null ) charContent = content.toCharArray();
MarkerUtil.java,String elemName = parentType.getElementName();,if (parentType != null ) String elemName = parentType.getElementName();
MarkerUtil.java,String id = elt.getHandleIdentifier();,if (elt != null ) String id = elt.getHandleIdentifier();
MarkerUtil.java,IResource resource = marker.getResource();,if (marker != null ) IResource resource = marker.getResource();
MarkerUtil.java,IProject project = resource.getProject();,if (resource != null ) IProject project = resource.getProject();
MarkerUtil.java,Object next = iter.next();,if (iter != null ) Object next = iter.next();
MarkerUtil.java,Object next = sSelection.getFirstElement();,if (sSelection != null ) Object next = sSelection.getFirstElement();
Reporter.java,Cloud cloud = bugCollection.getCloud();,if (bugCollection != null ) Cloud cloud = bugCollection.getCloud();
Reporter.java,ProjectStats stats = bugCollection.getProjectStats();,if (bugCollection != null ) ProjectStats stats = bugCollection.getProjectStats();
Reporter.java,Profiler profiler = stats.getProfiler();,if (stats != null ) Profiler profiler = stats.getProfiler();
Reporter.java,String className = classDescriptor.getDottedClassName();,if (classDescriptor != null ) String className = classDescriptor.getDottedClassName();
ConfigurableXmlOutputStream.java,Iterator<NameValuePair> iterator = attributeList.iterator();,if (attributeList != null ) Iterator<NameValuePair> iterator = attributeList.iterator();
ConfigurableXmlOutputStream.java,Iterator<NameValuePair> iterator = attributeList.iterator();,if (attributeList != null ) Iterator<NameValuePair> iterator = attributeList.iterator();
ConfigurableXmlOutputStream.java,attributes = attributes.trim();,if (attributes != null ) attributes = attributes.trim();
ProjectUtilities.java,String[] prevNatures = description.getNatureIds();,if (description != null ) String[] prevNatures = description.getNatureIds();
ProjectUtilities.java,String[] prevNatures = description.getNatureIds();,if (description != null ) String[] prevNatures = description.getNatureIds();
Util.java,String ex = resource.getFileExtension();,if (resource != null ) String ex = resource.getFileExtension();
Util.java,String name = resource.getName();,if (resource != null ) String name = resource.getName();
Util.java,String ex = resource.getFileExtension();,if (resource != null ) String ex = resource.getFileExtension();
Util.java,String ex = resource.getFileExtension();,if (resource != null ) String ex = resource.getFileExtension();
Util.java,String name = resource.getName();,if (resource != null ) String name = resource.getName();
Util.java,Long time = Long.valueOf(System.currentTimeMillis());,if (Long != null ) Long time = Long.valueOf(System.currentTimeMillis());
Util.java,Long lastTime = stopTimes.lastKey();,if (stopTimes != null ) Long lastTime = stopTimes.lastKey();
Util.java,cb = new Clipboard(Display.getDefault());,if (Clipboard(Display != null ) cb = new Clipboard(Display.getDefault());
AbstractFindbugsView.java,IActionBars bars = getViewSite().getActionBars();,if (getViewSite() != null ) IActionBars bars = getViewSite().getActionBars();
AbstractFindbugsView.java,IWorkbenchPage page = FindbugsPlugin.getActiveWorkbenchWindow().getActivePage();,if (FindbugsPlugin != null ) IWorkbenchPage page = FindbugsPlugin.getActiveWorkbenchWindow().getActivePage();
AbstractFindbugsView.java,IWorkbenchPage page = FindbugsPlugin.getActiveWorkbenchWindow().getActivePage();,if (FindbugsPlugin != null ) IWorkbenchPage page = FindbugsPlugin.getActiveWorkbenchWindow().getActivePage();
AbstractFindbugsView.java,IWorkbenchPage page = FindbugsPlugin.getActiveWorkbenchWindow().getActivePage();,if (FindbugsPlugin != null ) IWorkbenchPage page = FindbugsPlugin.getActiveWorkbenchWindow().getActivePage();
AbstractFindbugsView.java,IWorkbenchPage page = getSite().getPage();,if (getSite() != null ) IWorkbenchPage page = getSite().getPage();
AbstractFindbugsView.java,IWorkbenchWindow window = getSite().getWorkbenchWindow();,if (getSite() != null ) IWorkbenchWindow window = getSite().getWorkbenchWindow();
AbstractFindbugsView.java,input = page.getInput();,if (page != null ) input = page.getInput();
AbstractFindbugsView.java,input= ResourcesPlugin.getWorkspace().getRoot();,if (ResourcesPlugin != null ) input= ResourcesPlugin.getWorkspace().getRoot();
BugExplorerView.java,IDialogSettings dialogSettings = FindbugsPlugin.getDefault().getDialogSettings();,if (FindbugsPlugin != null ) IDialogSettings dialogSettings = FindbugsPlugin.getDefault().getDialogSettings();
BugExplorerView.java,IDialogSettings dialogSettings = FindbugsPlugin.getDefault().getDialogSettings();,if (FindbugsPlugin != null ) IDialogSettings dialogSettings = FindbugsPlugin.getDefault().getDialogSettings();
BugExplorerView.java,IStructuredSelection selection = (IStructuredSelection) event.getSelection();,if (event != null ) IStructuredSelection selection = (IStructuredSelection) event.getSelection();
BugExplorerView.java,Object object = iter.next();,if (iter != null ) Object object = iter.next();
FindBugsConsole.java,IConsoleManager manager = ConsolePlugin.getDefault().getConsoleManager();,if (ConsolePlugin != null ) IConsoleManager manager = ConsolePlugin.getDefault().getConsoleManager();
FindBugsConsole.java,IConsoleManager manager = ConsolePlugin.getDefault().getConsoleManager();,if (ConsolePlugin != null ) IConsoleManager manager = ConsolePlugin.getDefault().getConsoleManager();
FindBugsConsole.java,IConsole[] existing = manager.getConsoles();,if (manager != null ) IConsole[] existing = manager.getConsoles();
FindBugsConsole.java,IActionBars bars = page.getSite().getActionBars();,if (page != null ) IActionBars bars = page.getSite().getActionBars();
FindBugsPerspectiveFactory.java,String editorArea = layout.getEditorArea();,if (layout != null ) String editorArea = layout.getEditorArea();
SigninStatusBox.java,SigninState state = cloud.getSigninState();,if (cloud != null ) SigninState state = cloud.getSigninState();
SigninStatusBox.java,final boolean origSelection = AppEngineNameLookup.isSavingSessionInfoEnabled();,if (AppEngineNameLookup != null ) final boolean origSelection = AppEngineNameLookup.isSavingSessionInfoEnabled();
UserAnnotationsView.java,final BugInstance bugInstance = bug.getBugInstance();,if (bug != null ) final BugInstance bugInstance = bug.getBugInstance();
UserAnnotationsView.java,final int selectionIndex = designationComboBox.getSelectionIndex();,if (designationComboBox != null ) final int selectionIndex = designationComboBox.getSelectionIndex();
UserAnnotationsView.java,final String txt = userAnnotationTextField.getText();,if (userAnnotationTextField != null ) final String txt = userAnnotationTextField.getText();
UserAnnotationsView.java,int comboIndex = bug.getUserDesignationKeyIndex();,if (bug != null ) int comboIndex = bug.getUserDesignationKeyIndex();
UserAnnotationsView.java,String timeString = theCalendar.getTime().toString();,if (theCalendar != null ) String timeString = theCalendar.getTime().toString();
BugActionProvider.java,ISelection selection = event.getSelection();,if (event != null ) ISelection selection = event.getSelection();
BugActionProvider.java,Object firstElement = ss.getFirstElement();,if (ss != null ) Object firstElement = ss.getFirstElement();
BugActionProvider.java,Object data = group.getData();,if (group != null ) Object data = group.getData();
BugActionProvider.java,final StructuredViewer viewer = aSite.getStructuredViewer();,if (aSite != null ) final StructuredViewer viewer = aSite.getStructuredViewer();
BugActionProvider.java,IWorkingSet oldWorkingSet = provider.getCurrentWorkingSet();,if (provider != null ) IWorkingSet oldWorkingSet = provider.getCurrentWorkingSet();
BugActionProvider.java,IWorkingSet newWorkingSet = (IWorkingSet) event.getNewValue();,if (event != null ) IWorkingSet newWorkingSet = (IWorkingSet) event.getNewValue();
BugActionProvider.java,IMenuManager menuManager = actionBars.getMenuManager();,if (actionBars != null ) IMenuManager menuManager = actionBars.getMenuManager();
BugActionProvider.java,IContributionItem[] items = menuManager.getItems();,if (menuManager != null ) IContributionItem[] items = menuManager.getItems();
BugByIdFilter.java,final IPreferenceStore store = FindbugsPlugin.getDefault().getPreferenceStore();,if (FindbugsPlugin != null ) final IPreferenceStore store = FindbugsPlugin.getDefault().getPreferenceStore();
BugByIdFilter.java,lastUsedFilter = FindbugsPlugin.getFilteredIds();,if (FindbugsPlugin != null ) lastUsedFilter = FindbugsPlugin.getFilteredIds();
BugByIdFilter.java,lastUsedFilter = FindbugsPlugin.getFilteredIds();,if (FindbugsPlugin != null ) lastUsedFilter = FindbugsPlugin.getFilteredIds();
BugContentProvider.java,IPreferenceStore store = FindbugsPlugin.getDefault().getPreferenceStore();,if (FindbugsPlugin != null ) IPreferenceStore store = FindbugsPlugin.getDefault().getPreferenceStore();
BugContentProvider.java,children = group.getChildren();,if (group != null ) children = group.getChildren();
BugContentProvider.java,Object[] objects = rootElement.getChildren();,if (rootElement != null ) Object[] objects = rootElement.getChildren();
BugContentProvider.java,IAdaptable[] elements = workingSet.getElements();,if (workingSet != null ) IAdaptable[] elements = workingSet.getElements();
BugContentProvider.java,IProject[] projects = workspaceRoot.getProjects();,if (workspaceRoot != null ) IProject[] projects = workspaceRoot.getProjects();
BugContentProvider.java,IPreferenceStore store = FindbugsPlugin.getDefault().getPreferenceStore();,if (FindbugsPlugin != null ) IPreferenceStore store = FindbugsPlugin.getDefault().getPreferenceStore();
BugContentProvider.java,Set<IMarker> allMarkers = parent.getAllMarkers();,if (parent != null ) Set<IMarker> allMarkers = parent.getAllMarkers();
BugContentProvider.java,GroupType childType = grouping.getChildType(mapper.getType());,if (grouping != null ) GroupType childType = grouping.getChildType(mapper.getType());
BugContentProvider.java,Identifier groupId = entry.getKey();,if (entry != null ) Identifier groupId = entry.getKey();
BugContentProvider.java,IWorkingSetManager workingSetManager = PlatformUI.getWorkbench().getWorkingSetManager();,if (PlatformUI != null ) IWorkingSetManager workingSetManager = PlatformUI.getWorkbench().getWorkingSetManager();
BugContentProvider.java,GroupType childType = grouping.getChildType(mapper.getType());,if (grouping != null ) GroupType childType = grouping.getChildType(mapper.getType());
BugContentProvider.java,child = (BugGroup) child.getParent();,if (child != null ) child = (BugGroup) child.getParent();
BugContentProvider.java,BugGroup parent = (BugGroup) element.getParent();,if (element != null ) BugGroup parent = (BugGroup) element.getParent();
BugContentProvider.java,Object[] rootObjects = rootElement.getChildren();,if (rootElement != null ) Object[] rootObjects = rootElement.getChildren();
BugContentProvider.java,rootObjects = group.getChildren();,if (group != null ) rootObjects = group.getChildren();
BugContentProvider.java,IContentProvider provider = extensionById.getContentProvider();,if (extensionById != null ) IContentProvider provider = extensionById.getContentProvider();
BugContentProvider.java,Object object = iter.next();,if (iter != null ) Object object = iter.next();
BugLabelProvider.java,FindBugsMarker.Priority prio = group.getPriority();,if (group != null ) FindBugsMarker.Priority prio = group.getPriority();
BugLabelProvider.java,ImageRegistry imageRegistry = FindbugsPlugin.getDefault().getImageRegistry();,if (FindbugsPlugin != null ) ImageRegistry imageRegistry = FindbugsPlugin.getDefault().getImageRegistry();
BugLabelProvider.java,IProject project = (IProject) group.getData();,if (group != null ) IProject project = (IProject) group.getData();
BugLabelProvider.java,Cloud cloud = bc.getCloud();,if (bc != null ) Cloud cloud = bc.getCloud();
BugLabelProvider.java,cloudName = cloud.getCloudName();,if (cloud != null ) cloudName = cloud.getCloudName();
BugLabelProvider.java,IProject project = (IProject) group.getData();,if (group != null ) IProject project = (IProject) group.getData();
BugLabelProvider.java,Cloud cloud = bc.getCloud();,if (bc != null ) Cloud cloud = bc.getCloud();
BugLabelProvider.java,cloudName = cloud.getCloudName();,if (cloud != null ) cloudName = cloud.getCloudName();
BugLabelProvider.java,provider = BugContentProvider.getProvider(config.getService());,if (BugContentProvider != null ) provider = BugContentProvider.getProvider(config.getService());
FilterBugsDialog.java,IStructuredSelection selection = (IStructuredSelection) event.getSelection();,if (event != null ) IStructuredSelection selection = (IStructuredSelection) event.getSelection();
FilterBugsDialog.java,Object element = event.getElement();,if (event != null ) Object element = event.getElement();
FilterBugsDialog.java,boolean checked = event.getChecked();,if (event != null ) boolean checked = event.getChecked();
FilterBugsDialog.java,Object[] array = children.toArray();,if (children != null ) Object[] array = children.toArray();
FilterBugsDialog.java,allowedPatterns = FindbugsPlugin.getKnownPatterns();,if (FindbugsPlugin != null ) allowedPatterns = FindbugsPlugin.getKnownPatterns();
FilterBugsDialog.java,allowedTypes = FindbugsPlugin.getKnownPatternTypes();,if (FindbugsPlugin != null ) allowedTypes = FindbugsPlugin.getKnownPatternTypes();
FilterBugsDialog.java,Iterator<BugPattern> patterns = preSelectedPatterns.iterator();,if (preSelectedPatterns != null ) Iterator<BugPattern> patterns = preSelectedPatterns.iterator();
FilterBugsDialog.java,BugPattern pattern = patterns.next();,if (patterns != null ) BugPattern pattern = patterns.next();
FilterBugsDialog.java,checkedElements = merged.toArray();,if (merged != null ) checkedElements = merged.toArray();
FilterBugsDialog.java,DetectorFactory factory = iterator.next();,if (iterator != null ) DetectorFactory factory = iterator.next();
FilterBugsDialog.java,Set<BugPattern> patterns = factory.getReportedBugPatterns();,if (factory != null ) Set<BugPattern> patterns = factory.getReportedBugPatterns();
FilterBugsDialog.java,String text = selectedIds.getText();,if (selectedIds != null ) String text = selectedIds.getText();
FilterBugsDialog.java,checkedElements = allowedTypes.toArray();,if (allowedTypes != null ) checkedElements = allowedTypes.toArray();
FilterBugsDialog.java,Object[] elements = checkList.getVisibleExpandedElements();,if (checkList != null ) Object[] elements = checkList.getVisibleExpandedElements();
FilterBugsDialog.java,Object[] elements = checkList.getVisibleExpandedElements();,if (checkList != null ) Object[] elements = checkList.getVisibleExpandedElements();
FilterBugsDialog.java,IDialogSettings dialogSettings = FindbugsPlugin.getDefault().getDialogSettings();,if (FindbugsPlugin != null ) IDialogSettings dialogSettings = FindbugsPlugin.getDefault().getDialogSettings();
FilterBugsDialog.java,checkedElements = selected.toArray();,if (selected != null ) checkedElements = selected.toArray();
FilterBugsDialog.java,Object element = selection.getFirstElement();,if (selection != null ) Object element = selection.getFirstElement();
FilterBugsDialog.java,Rectangle size = htmlControl.getClientArea();,if (htmlControl != null ) Rectangle size = htmlControl.getClientArea();
FilterBugsDialog.java,StringBuilder sb = new StringBuilder(pattern.getDetailText());,if (StringBuilder(pattern != null ) StringBuilder sb = new StringBuilder(pattern.getDetailText());
FilterBugsDialog.java,StringBuilder sb = new StringBuilder(code.getDescription());,if (StringBuilder(code != null ) StringBuilder sb = new StringBuilder(code.getDescription());
GroupSelectionDialog.java,this.allowedGroups = GroupType.getVisible();,if (GroupType != null ) this.allowedGroups = GroupType.getVisible();
GroupSelectionDialog.java,Table table = checkList.getTable();,if (checkList != null ) Table table = checkList.getTable();
GroupSelectionDialog.java,boolean checked = event.getChecked();,if (event != null ) boolean checked = event.getChecked();
GroupSelectionDialog.java,GroupType element= (GroupType) event.getElement();,if (event != null ) GroupType element= (GroupType) event.getElement();
GroupSelectionDialog.java,IDialogSettings dialogSettings = FindbugsPlugin.getDefault().getDialogSettings();,if (FindbugsPlugin != null ) IDialogSettings dialogSettings = FindbugsPlugin.getDefault().getDialogSettings();
GroupType.java,javaElement = JavaCore.create(marker.getResource());,if (JavaCore != null ) javaElement = JavaCore.create(marker.getResource());
Grouping.java,GroupType type = GroupType.valueOf(st.nextToken());,if (GroupType != null ) GroupType type = GroupType.valueOf(st.nextToken());
RefreshJob.java,int totalWork = deltas.size();,if (deltas != null ) int totalWork = deltas.size();
RefreshJob.java,final boolean fullRefreshNeeded = changedParents.isEmpty();,if (changedParents != null ) final boolean fullRefreshNeeded = changedParents.isEmpty();
ResourceChangeListener.java,IMarker marker = mdelta.getMarker();,if (mdelta != null ) IMarker marker = mdelta.getMarker();
ResourceChangeListener.java,"DeltaInfo deltaInfo = new DeltaInfo(marker, mdelta.getKind());","if (mdelta != null ) DeltaInfo deltaInfo = new DeltaInfo(marker, mdelta.getKind());"
BugGroupSection.java,Object object = iter.next();,if (iter != null ) Object object = iter.next();
BugGroupSection.java,maxLength = name.length();,if (name != null ) maxLength = name.length();
BugInstanceSection.java,IEditorPart activeEditor = page.getActiveEditor();,if (page != null ) IEditorPart activeEditor = page.getActiveEditor();
BugInstanceSection.java,input = activeEditor.getEditorInput();,if (activeEditor != null ) input = activeEditor.getEditorInput();
BugInstanceSection.java,IJavaElement parent = javaElt.getParent();,if (javaElt != null ) IJavaElement parent = javaElt.getParent();
BugInstanceSection.java,parent = parent.getParent();,if (parent != null ) parent = parent.getParent();
BugInstanceSection.java,String shortDescription = bug.getAbridgedMessage();,if (bug != null ) String shortDescription = bug.getAbridgedMessage();
BugInstanceSection.java,Iterator<BugAnnotation> it = bug.annotationIterator();,if (bug != null ) Iterator<BugAnnotation> it = bug.annotationIterator();
BugInstanceSection.java,BugAnnotation ba = it.next();,if (it != null ) BugAnnotation ba = it.next();
BugInstanceSection.java,int index = annotationList.getSelectionIndex();,if (annotationList != null ) int index = annotationList.getSelectionIndex();
BugInstanceSection.java,Iterator<BugAnnotation> theIterator = bug.annotationIterator();,if (bug != null ) Iterator<BugAnnotation> theIterator = bug.annotationIterator();
BugInstanceSection.java,BugAnnotation theAnnotation = theIterator.next();,if (theIterator != null ) BugAnnotation theAnnotation = theIterator.next();
BugInstanceSection.java,theAnnotation = theIterator.next();,if (theIterator != null ) theAnnotation = theIterator.next();
BugInstanceSection.java,int startLine = sla.getStartLine();,if (sla != null ) int startLine = sla.getStartLine();
BugInstanceSection.java,Iterator<BugAnnotation> iterator = bug.annotationIterator();,if (bug != null ) Iterator<BugAnnotation> iterator = bug.annotationIterator();
BugInstanceSection.java,BugAnnotation bugAnnotation = iterator.next();,if (iterator != null ) BugAnnotation bugAnnotation = iterator.next();
BugPatternSection.java,FindbugsPlugin plugin = FindbugsPlugin.getDefault();,if (FindbugsPlugin != null ) FindbugsPlugin plugin = FindbugsPlugin.getDefault();
BugPatternSection.java,Point newScrollSize = scrolledComposite.getSize();,if (scrolledComposite != null ) Point newScrollSize = scrolledComposite.getSize();
BugPatternSection.java,Rectangle clientArea = scrolledComposite.getClientArea();,if (scrolledComposite != null ) Rectangle clientArea = scrolledComposite.getClientArea();
BugPatternSection.java,Point rootSize = rootComposite.getSize();,if (rootComposite != null ) Point rootSize = rootComposite.getSize();
BugPatternSection.java,DetectorFactory factory = bug.getDetectorFactory();,if (bug != null ) DetectorFactory factory = bug.getDetectorFactory();
BugPatternSection.java,Plugin plugin = factory.getPlugin();,if (factory != null ) Plugin plugin = factory.getPlugin();
BugPatternSection.java,String website = plugin.getWebsite();,if (plugin != null ) String website = plugin.getWebsite();
BugPatternSection.java,String html = text.toString();,if (text != null ) String html = text.toString();
BugPatternSection.java,BugPattern data = (BugPattern) group.getData();,if (group != null ) BugPattern data = (BugPattern) group.getData();
BugPatternSection.java,IWorkbenchBrowserSupport support= PlatformUI.getWorkbench().getBrowserSupport();,if (PlatformUI != null ) IWorkbenchBrowserSupport support= PlatformUI.getWorkbench().getBrowserSupport();
BugPatternSection.java,browserId = newBrowser.getId();,if (newBrowser != null ) browserId = newBrowser.getId();
PropPageTitleProvider.java,element = selection.getFirstElement();,if (selection != null ) element = selection.getFirstElement();
PropPageTitleProvider.java,String name = pack.getElementName();,if (pack != null ) String name = pack.getElementName();
PropPageTitleProvider.java,BugPattern pattern = bug.getBugPattern();,if (bug != null ) BugPattern pattern = bug.getBugPattern();
PropertyPageAdapterFactory.java,Method[] methods = obj.getClass().getMethods();,if (obj != null ) Method[] methods = obj.getClass().getMethods();
PropertyPageAdapterFactory.java,String name = method.getName();,if (method != null ) String name = method.getName();
PropertyPageAdapterFactory.java,String name = method.getName();,if (method != null ) String name = method.getName();
ExportWizardPage.java,sortBy = sortByCombo.getSelectionIndex();,if (sortByCombo != null ) sortBy = sortByCombo.getSelectionIndex();
ExportWizardPage.java,sortBy = sortByCombo.getSelectionIndex();,if (sortByCombo != null ) sortBy = sortByCombo.getSelectionIndex();
ExportWizardPage.java,Set<BugPattern> filtered = FindbugsPlugin.getFilteredPatterns();,if (FindbugsPlugin != null ) Set<BugPattern> filtered = FindbugsPlugin.getFilteredPatterns();
ExportWizardPage.java,Set<BugCode> filteredTypes = FindbugsPlugin.getFilteredPatternTypes();,if (FindbugsPlugin != null ) Set<BugCode> filteredTypes = FindbugsPlugin.getFilteredPatternTypes();
ExportWizardPage.java,int result = dialog.open();,if (dialog != null ) int result = dialog.open();
ExportWizardPage.java,String selectedIds = dialog.getSelectedIds();,if (dialog != null ) String selectedIds = dialog.getSelectedIds();
ExportWizardPage.java,String text = filteredBugIdsText.getText();,if (filteredBugIdsText != null ) String text = filteredBugIdsText.getText();
ExportWizardPage.java,Clipboard clipboard = new Clipboard(Display.getCurrent());,if (Clipboard(Display != null ) Clipboard clipboard = new Clipboard(Display.getCurrent());
BugResolution.java,private String label = getClass().getSimpleName();,if (getClass() != null ) private String label = getClass().getSimpleName();
BugResolution.java,IProject project = marker.getResource().getProject();,if (marker != null ) IProject project = marker.getResource().getProject();
BugResolution.java,ASTRewrite rewrite = ASTRewrite.create(workingUnit.getAST());,if (ASTRewrite != null ) ASTRewrite rewrite = ASTRewrite.create(workingUnit.getAST());
BugResolution.java,IResource res = marker.getResource();,if (marker != null ) IResource res = marker.getResource();
BugResolutionAssociations.java,final String bugType = entry.getKey();,if (entry != null ) final String bugType = entry.getKey();
BugResolutionLoader.java,int length = bugFixList.getLength();,if (bugFixList != null ) int length = bugFixList.getLength();
BugResolutionLoader.java,int length = resolutionNodes.getLength();,if (resolutionNodes != null ) int length = resolutionNodes.getLength();
BugResolutionLoader.java,String name = attr.getKey();,if (attr != null ) String name = attr.getKey();
BugResolutionLoader.java,int length = attrList.getLength();,if (attrList != null ) int length = attrList.getLength();
BugResolutionLoader.java,String value = attrElement.getTextContent();,if (attrElement != null ) String value = attrElement.getTextContent();
BugResolutionLoader.java,DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();,if (DocumentBuilderFactory != null ) DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
BugResolutionLoader.java,builder = factory.newDocumentBuilder();,if (factory != null ) builder = factory.newDocumentBuilder();
BugResolutionLoader.java,DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();,if (DocumentBuilderFactory != null ) DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
BugResolutionLoader.java,builder = factory.newDocumentBuilder();,if (factory != null ) builder = factory.newDocumentBuilder();
ChangePublicToProtectedResolution.java,"TypeDeclaration type = getTypeDeclaration(workingUnit, bug.getPrimaryClass());","if (bug != null ) TypeDeclaration type = getTypeDeclaration(workingUnit, bug.getPrimaryClass());"
ChangePublicToProtectedResolution.java,"MethodDeclaration method = getMethodDeclaration(type, bug.getPrimaryMethod());","if (bug != null ) MethodDeclaration method = getMethodDeclaration(type, bug.getPrimaryMethod());"
CorrectOddnessCheckResolution.java,numberExpression = node.getLeftOperand();,if (node != null ) numberExpression = node.getLeftOperand();
CreateAndOddnessCheckResolution.java,final AST ast = rewrite.getAST();,if (rewrite != null ) final AST ast = rewrite.getAST();
CreateAndOddnessCheckResolution.java,InfixExpression andOddnessCheck = ast.newInfixExpression();,if (ast != null ) InfixExpression andOddnessCheck = ast.newInfixExpression();
CreateAndOddnessCheckResolution.java,ParenthesizedExpression parenthesizedExpression = ast.newParenthesizedExpression();,if (ast != null ) ParenthesizedExpression parenthesizedExpression = ast.newParenthesizedExpression();
CreateDoPrivilegedBlockResolution.java,final AST ast = rewrite.getAST();,if (rewrite != null ) final AST ast = rewrite.getAST();
CreateDoPrivilegedBlockResolution.java,final AST ast = rewrite.getAST();,if (rewrite != null ) final AST ast = rewrite.getAST();
CreateDoPrivilegedBlockResolution.java,ImportDeclaration importDeclaration = ast.newImportDeclaration();,if (ast != null ) ImportDeclaration importDeclaration = ast.newImportDeclaration();
CreateDoPrivilegedBlockResolution.java,AST ast = rewrite.getAST();,if (rewrite != null ) AST ast = rewrite.getAST();
CreateDoPrivilegedBlockResolution.java,MethodInvocation doPrivilegedInvocation = ast.newMethodInvocation();,if (ast != null ) MethodInvocation doPrivilegedInvocation = ast.newMethodInvocation();
CreateDoPrivilegedBlockResolution.java,List<Expression> arguments = checkedList(doPrivilegedInvocation.arguments());,if (checkedList(doPrivilegedInvocation != null ) List<Expression> arguments = checkedList(doPrivilegedInvocation.arguments());
CreateDoPrivilegedBlockResolution.java,accessControllerName = ast.newName(AccessController.class.getName());,if (ast != null ) accessControllerName = ast.newName(AccessController.class.getName());
CreateDoPrivilegedBlockResolution.java,AST ast = rewrite.getAST();,if (rewrite != null ) AST ast = rewrite.getAST();
CreateDoPrivilegedBlockResolution.java,ClassInstanceCreation privilegedActionCreation = ast.newClassInstanceCreation();,if (ast != null ) ClassInstanceCreation privilegedActionCreation = ast.newClassInstanceCreation();
CreateDoPrivilegedBlockResolution.java,AST ast = rewrite.getAST();,if (rewrite != null ) AST ast = rewrite.getAST();
CreateDoPrivilegedBlockResolution.java,privilegedActionName = ast.newSimpleName(PrivilegedAction.class.getSimpleName());,if (ast != null ) privilegedActionName = ast.newSimpleName(PrivilegedAction.class.getSimpleName());
CreateDoPrivilegedBlockResolution.java,privilegedActionName = ast.newName(PrivilegedAction.class.getName());,if (ast != null ) privilegedActionName = ast.newName(PrivilegedAction.class.getName());
CreateDoPrivilegedBlockResolution.java,List<Type> typeArguments = checkedList(privilegedActionType.typeArguments());,if (checkedList(privilegedActionType != null ) List<Type> typeArguments = checkedList(privilegedActionType.typeArguments());
CreateDoPrivilegedBlockResolution.java,AST ast = rewrite.getAST();,if (rewrite != null ) AST ast = rewrite.getAST();
CreateDoPrivilegedBlockResolution.java,AnonymousClassDeclaration anonymousClassDeclaration = ast.newAnonymousClassDeclaration();,if (ast != null ) AnonymousClassDeclaration anonymousClassDeclaration = ast.newAnonymousClassDeclaration();
CreateDoPrivilegedBlockResolution.java,List<BodyDeclaration> bodyDeclarations = checkedList(anonymousClassDeclaration.bodyDeclarations());,if (checkedList(anonymousClassDeclaration != null ) List<BodyDeclaration> bodyDeclarations = checkedList(anonymousClassDeclaration.bodyDeclarations());
CreateDoPrivilegedBlockResolution.java,AST ast = rewrite.getAST();,if (rewrite != null ) AST ast = rewrite.getAST();
CreateDoPrivilegedBlockResolution.java,MethodDeclaration methodDeclaration = ast.newMethodDeclaration();,if (ast != null ) MethodDeclaration methodDeclaration = ast.newMethodDeclaration();
CreateDoPrivilegedBlockResolution.java,List<Modifier> modifiers = checkedList(methodDeclaration.modifiers());,if (checkedList(methodDeclaration != null ) List<Modifier> modifiers = checkedList(methodDeclaration.modifiers());
CreateDoPrivilegedBlockResolution.java,AST ast = rewrite.getAST();,if (rewrite != null ) AST ast = rewrite.getAST();
CreateDoPrivilegedBlockResolution.java,Block methodBody = ast.newBlock();,if (ast != null ) Block methodBody = ast.newBlock();
CreateDoPrivilegedBlockResolution.java,ReturnStatement returnStatement = ast.newReturnStatement();,if (ast != null ) ReturnStatement returnStatement = ast.newReturnStatement();
CreateDoPrivilegedBlockResolution.java,List<Statement> statements = checkedList(methodBody.statements());,if (checkedList(methodBody != null ) List<Statement> statements = checkedList(methodBody.statements());
CreateDoPrivilegedBlockResolution.java,ITypeBinding superclass = typeBinding.getSuperclass();,if (typeBinding != null ) ITypeBinding superclass = typeBinding.getSuperclass();
CreateMutableCloneResolution.java,"TypeDeclaration type = getTypeDeclaration(workingUnit, bug.getPrimaryClass());","if (bug != null ) TypeDeclaration type = getTypeDeclaration(workingUnit, bug.getPrimaryClass());"
CreateMutableCloneResolution.java,"MethodDeclaration method = getMethodDeclaration(type, bug.getPrimaryMethod());","if (bug != null ) MethodDeclaration method = getMethodDeclaration(type, bug.getPrimaryMethod());"
CreateMutableCloneResolution.java,String fieldName = bug.getPrimaryField().getFieldName();,if (bug != null ) String fieldName = bug.getPrimaryField().getFieldName();
CreateMutableCloneResolution.java,Statement stmt = (Statement) itr.next();,if (itr != null ) Statement stmt = (Statement) itr.next();
CreateMutableCloneResolution.java,cloneInvoke = workingUnit.getAST().newMethodInvocation();,if (workingUnit != null ) cloneInvoke = workingUnit.getAST().newMethodInvocation();
CreateMutableCloneResolution.java,castRet = workingUnit.getAST().newCastExpression();,if (workingUnit != null ) castRet = workingUnit.getAST().newCastExpression();
CreateRemainderOddnessCheckResolution.java,final AST ast = rewrite.getAST();,if (rewrite != null ) final AST ast = rewrite.getAST();
CreateRemainderOddnessCheckResolution.java,InfixExpression correctOddnessCheck = ast.newInfixExpression();,if (ast != null ) InfixExpression correctOddnessCheck = ast.newInfixExpression();
CreateRemainderOddnessCheckResolution.java,InfixExpression remainderExp = ast.newInfixExpression();,if (ast != null ) InfixExpression remainderExp = ast.newInfixExpression();
CreateSuperCallResolution.java,"TypeDeclaration type = getTypeDeclaration(workingUnit, bug.getPrimaryClass());","if (bug != null ) TypeDeclaration type = getTypeDeclaration(workingUnit, bug.getPrimaryClass());"
CreateSuperCallResolution.java,"MethodDeclaration method = getMethodDeclaration(type, bug.getPrimaryMethod());","if (bug != null ) MethodDeclaration method = getMethodDeclaration(type, bug.getPrimaryMethod());"
CreateSuperCallResolution.java,AST ast = rewrite.getAST();,if (rewrite != null ) AST ast = rewrite.getAST();
CreateSuperCallResolution.java,Block methodBody = method.getBody();,if (method != null ) Block methodBody = method.getBody();
CreateSuperCallResolution.java,AST ast = rewrite.getAST();,if (rewrite != null ) AST ast = rewrite.getAST();
CreateSuperCallResolution.java,SuperMethodInvocation invocation = ast.newSuperMethodInvocation();,if (ast != null ) SuperMethodInvocation invocation = ast.newSuperMethodInvocation();
FieldModifierResolution.java,"TypeDeclaration type = getTypeDeclaration(workingUnit, bug.getPrimaryClass());","if (bug != null ) TypeDeclaration type = getTypeDeclaration(workingUnit, bug.getPrimaryClass());"
FieldModifierResolution.java,"FieldDeclaration field = getFieldDeclaration(type, bug.getPrimaryField());","if (bug != null ) FieldDeclaration field = getFieldDeclaration(type, bug.getPrimaryField());"
MakeInnerTypeStaticResolution.java,"TypeDeclaration type = getTypeDeclaration(workingUnit, bug.getPrimaryClass());","if (bug != null ) TypeDeclaration type = getTypeDeclaration(workingUnit, bug.getPrimaryClass());"
RemoveUselessMethodResolution.java,"TypeDeclaration type = getTypeDeclaration(workingUnit, bug.getPrimaryClass());","if (bug != null ) TypeDeclaration type = getTypeDeclaration(workingUnit, bug.getPrimaryClass());"
RemoveUselessMethodResolution.java,"MethodDeclaration method = getMethodDeclaration(type, bug.getPrimaryMethod());","if (bug != null ) MethodDeclaration method = getMethodDeclaration(type, bug.getPrimaryMethod());"
UseValueOfResolution.java,final AST ast = rewrite.getAST();,if (rewrite != null ) final AST ast = rewrite.getAST();
UseValueOfResolution.java,MethodInvocation valueOfInvocation = ast.newMethodInvocation();,if (ast != null ) MethodInvocation valueOfInvocation = ast.newMethodInvocation();
UseValueOfResolution.java,ITypeBinding binding = primitiveTypeCreation.getType().resolveBinding();,if (primitiveTypeCreation != null ) ITypeBinding binding = primitiveTypeCreation.getType().resolveBinding();
UseValueOfResolution.java,List<Expression> newArguments = valueOfInvocation.arguments();,if (valueOfInvocation != null ) List<Expression> newArguments = valueOfInvocation.arguments();
ASTUtil.java,final AST ast = rewrite.getAST();,if (rewrite != null ) final AST ast = rewrite.getAST();
ASTUtil.java,ImportDeclaration newImport = newImports.next();,if (newImports != null ) ImportDeclaration newImport = newImports.next();
ASTUtil.java,newImport = newImports.next();,if (newImports != null ) newImport = newImports.next();
ASTUtil.java,int lineNumber = compilationUnit.getLineNumber(statement.getStartPosition());,if (compilationUnit != null ) int lineNumber = compilationUnit.getLineNumber(statement.getStartPosition());
ASTUtil.java,String typeName = getPrettyTypeName(methodParams[i].getType());,if (getPrettyTypeName(methodParams[i] != null ) String typeName = getPrettyTypeName(methodParams[i].getType());
ASTUtil.java,String typeName = type.resolveBinding().getQualifiedName();,if (type != null ) String typeName = type.resolveBinding().getQualifiedName();
BadCast.java,Set s = (Set) m.values();,if (m != null ) Set s = (Set) m.values();
BadRegEx.java,"String statesPost = allStatesPost.append("").*$"").toString();","if (allStatesPost != null ) String statesPost = allStatesPost.append("").*$"").toString();"
BadResultSetAccessTest.java,ResultSetMetaData rsmd = rs.getMetaData();,if (rs != null ) ResultSetMetaData rsmd = rs.getMetaData();
BadResultSetAccessTest.java,ResultSetMetaData rsmd = rs.getMetaData();,if (rs != null ) ResultSetMetaData rsmd = rs.getMetaData();
CloneStringArray.java,String[] copy = (String[]) args.clone();,if (args != null ) String[] copy = (String[]) args.clone();
DatabaseStreams.java,statement = connection.createStatement();,if (connection != null ) statement = connection.createStatement();
Doublecheck.java,s = Thread.currentThread().toString();,if (Thread != null ) s = Thread.currentThread().toString();
Doublecheck.java,i = Thread.currentThread().hashCode();,if (Thread != null ) i = Thread.currentThread().hashCode();
Doublecheck.java,j = System.currentTimeMillis();,if (System != null ) j = System.currentTimeMillis();
DumbMethodInvocations.java,Date today = Calendar.getInstance().getTime();,if (Calendar != null ) Date today = Calendar.getInstance().getTime();
ExternalizableTest.java,Object o = oin.readObject();,if (oin != null ) Object o = oin.readObject();
ExternalizableTest2.java,Object o = oin.readObject();,if (oin != null ) Object o = oin.readObject();
FaultyPublicSemaphore.java,Iterator<String> it = basket.iterator();,if (basket != null ) Iterator<String> it = basket.iterator();
FaultyPublicSemaphore.java,s = it.next();,if (it != null ) s = it.next();
LazyInit.java,fgInvokeOptions[i] = fields[i].getName();,if (fields[i] != null ) fgInvokeOptions[i] = fields[i].getName();
MyMonth.java,month=month.toUpperCase();,if (month=month != null ) month=month.toUpperCase();
NewForGetClass.java,Class c = new NewForGetClass().getClass();,if (NewForGetClass() != null ) Class c = new NewForGetClass().getClass();
NoSqlInjection.java,Statement query = connection.createStatement();,if (connection != null ) Statement query = connection.createStatement();
NoSqlInjection.java,Statement query = connection.createStatement();,if (connection != null ) Statement query = connection.createStatement();
OpenDatabase.java,Statement statement = conn.createStatement();,if (conn != null ) Statement statement = conn.createStatement();
OpenDatabase.java,statement = connection.createStatement();,if (connection != null ) statement = connection.createStatement();
OpenStream.java,FileChannel ch = fis.getChannel();,if (fis != null ) FileChannel ch = fis.getChannel();
OpenStream.java,FileChannel ch = fis.getChannel();,if (fis != null ) FileChannel ch = fis.getChannel();
OpenStream.java,FileChannel ch = fis.getChannel();,if (fis != null ) FileChannel ch = fis.getChannel();
PublicReadObject.java,x = ois.readInt();,if (ois != null ) x = ois.readInt();
SBConcatTest.java,tokens[i] = tokens[i].trim();,if (tokens[i] != null ) tokens[i] = tokens[i].trim();
SQLvulnerability.java,Statement stmt = conn.createStatement();,if (conn != null ) Statement stmt = conn.createStatement();
Serializable2.java,Object o = oin.readObject();,if (oin != null ) Object o = oin.readObject();
ShouldDoInDoPriviledged.java,final int x = id.getAndIncrement();,if (id != null ) final int x = id.getAndIncrement();
SkipBufferedInputStream.java,long available = bis.available();,if (bis != null ) long available = bis.available();
SkipBufferedInputStream2.java,long available = bis.available();,if (bis != null ) long available = bis.available();
StringComparision.java,String internedName = name.intern();,if (name != null ) String internedName = name.intern();
TransientFieldOfNonserializableClass.java,byte[] data = baos.toByteArray();,if (baos != null ) byte[] data = baos.toByteArray();
UselessCurrentThread.java,Thread t = Thread.currentThread();,if (Thread != null ) Thread t = Thread.currentThread();
UserMistakes.java,result=findFiles.readLine();,if (result=findFiles != null ) result=findFiles.readLine();
WMITest.java,Iterator it = m.keySet().iterator();,if (m != null ) Iterator it = m.keySet().iterator();
WMITest.java,Iterator it = m.keySet().iterator();,if (m != null ) Iterator it = m.keySet().iterator();
WMITest.java,String name = (String) it.next();,if (it != null ) String name = (String) it.next();
WMITest.java,Iterator it = m.keySet().iterator();,if (m != null ) Iterator it = m.keySet().iterator();
Ideas_2008_10_14.java,int rawHash = key.hashCode();,if (key != null ) int rawHash = key.hashCode();
Ideas_2009_08_27.java,sum += m.get(k).hashCode();,if (m != null ) sum += m.get(k).hashCode();
Ideas_2009_10_25.java,Condition c = lck.newCondition();,if (lck != null ) Condition c = lck.newCondition();
Ideas_2009_11_01.java,for(Iterator i = c.iterator(); i.hasNext(); ),if () != null ) for(Iterator i = c.iterator(); i.hasNext(); )
Ideas_2010_06_08.java,List<String> lst = Collections.emptyList();,if (Collections != null ) List<String> lst = Collections.emptyList();
Ideas_2010_08_25.java,PrintWriter out = response.getWriter();,if (response != null ) PrintWriter out = response.getWriter();
Ideas_2010_09_13.java,int x = Math.abs(r.nextInt());,if (Math != null ) int x = Math.abs(r.nextInt());
Pilhuhn.java,if(fis!=null) try { fis.close(); } catch( Exception e2 ) {},if ({} != null ) if(fis!=null) try { fis.close(); } catch( Exception e2 ) {}
Pilhuhn.java,if(fos!=null) try { fos.close(); } catch( Exception e2 ) {} // DE_MIGHT_IGNORE,if (DE_MIGHT_IGNORE != null ) if(fos!=null) try { fos.close(); } catch( Exception e2 ) {} // DE_MIGHT_IGNORE
UnconditionalDerefFalsePositive.java,e = (UnconditionalDerefFalsePositive) super.clone();,if (super != null ) e = (UnconditionalDerefFalsePositive) super.clone();
Bug20070301.java,stm = conn.createStatement();,if (conn != null ) stm = conn.createStatement();
BenChelf_2007_01_29.java,body = body.trim();,if (body != null ) body = body.trim();
BenChelf_2007_01_29.java,body = body.trim();,if (body != null ) body = body.trim();
BenChelf_2007_01_29.java,body = body.trim();,if (body != null ) body = body.trim();
BenChelf_2007_01_29.java,body = body.trim();,if (body != null ) body = body.trim();
BadSetter.java,Class getterType = getter.getReturnType();,if (getter != null ) Class getterType = getter.getReturnType();
EclipseNullReferenceTestCases.java,X itself = this.itself();,if (this != null ) X itself = this.itself();
EclipseNullReferenceTestCases.java,X itself = this.itself();,if (this != null ) X itself = this.itself();
GuaranteedDereference.java,value = xAsString.toLowerCase();,if (xAsString != null ) value = xAsString.toLowerCase();
GuaranteedDereferenceInteractionWithAssertionMethods.java,int result = x.hashCode() + z.hashCode();,if (z != null ) int result = x.hashCode() + z.hashCode();
GuaranteedFieldDereference.java,value = xAsString.toLowerCase();,if (xAsString != null ) value = xAsString.toLowerCase();
JXPathMetaModuleExample.java,Object[] obj = values.toArray();  // guaranteed dereference here,if (here != null ) Object[] obj = values.toArray();  // guaranteed dereference here
JXPathMetaModuleExample.java,Object[] obj = values.toArray(); // guaranteed dereference here,if (here != null ) Object[] obj = values.toArray(); // guaranteed dereference here
LoggerFalsePositive.java,containerName = container.toLowerCase();,if (container != null ) containerName = container.toLowerCase();
NullPointerCategories.java,int b = in.read();,if (in != null ) int b = in.read();
NullPointerCategories.java,int b = in.read();,if (in != null ) int b = in.read();
NullPointerCategories.java,int b = in.read();,if (in != null ) int b = in.read();
NullPointerCategories.java,int b = in.read();,if (in != null ) int b = in.read();
ReadLineTest.java,String x = in.readLine();,if (in != null ) String x = in.readLine();
ReadLineTest.java,x = in.readLine();,if (in != null ) x = in.readLine();
UnconditionalThrower.java,if (x == null) a.foo();,if (a != null ) if (x == null) a.foo();
CompareToNull.java,int c = in.read();,if (in != null ) int c = in.read();
CompareToNull.java,int c = in.read();,if (in != null ) int c = in.read();
UsesWillCloseAnnotation.java,c = in.read();,if (in != null ) c = in.read();
Puzzlers2007.java,int first = in.read();,if (in != null ) int first = in.read();
Bug1006704.java,ResultSet rs = ps.executeQuery();,if (ps != null ) ResultSet rs = ps.executeQuery();
Bug1551732.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
Bug1551732.java,final long toSleep = target - System.currentTimeMillis();,if (System != null ) final long toSleep = target - System.currentTimeMillis();
Bug1557886.java,Component c = (Component) e.getSource();,if (e != null ) Component c = (Component) e.getSource();
Bug1562060.java,Statement stmt = conn.createStatement();,if (conn != null ) Statement stmt = conn.createStatement();
Bug1563719.java,ArrayList workingList = (ArrayList)list.clone();,if ((ArrayList)list != null ) ArrayList workingList = (ArrayList)list.clone();
Bug1648646.java,Class superclass = clzz.getSuperclass();,if (clzz != null ) Class superclass = clzz.getSuperclass();
Bug1648646.java,clzz = clzz.getSuperclass();,if (clzz != null ) clzz = clzz.getSuperclass();
Bug1669047.java,Object checkForNullResult = fProvider.getSession();,if (fProvider != null ) Object checkForNullResult = fProvider.getSession();
Bug1686615.java,boolean b = new Boolean(s).booleanValue();,if (Boolean(s) != null ) boolean b = new Boolean(s).booleanValue();
Bug1735737.java,Calendar calendar =   Calendar.getInstance();,if (Calendar != null ) Calendar calendar =   Calendar.getInstance();
Bug1820691.java,result[i] = gorp[i].toString();,if (gorp[i] != null ) result[i] = gorp[i].toString();
Bug1917352.java,javaClass = getClassObject(in.readUTF());,if (getClassObject(in != null ) javaClass = getClassObject(in.readUTF());
Bug1917352.java,constructors = javaClass.getConstructors();,if (javaClass != null ) constructors = javaClass.getConstructors();
Bug1933922.java,Thread other = Thread.currentThread();,if (Thread != null ) Thread other = Thread.currentThread();
Bug1992566.java,boolean created = directory.mkdirs();,if (directory != null ) boolean created = directory.mkdirs();
Bug1994945.java,x = in.readInt();,if (in != null ) x = in.readInt();
Bug1994945.java,y = in.readInt();,if (in != null ) y = in.readInt();
Bug2033091.java,WriteLock lock = lockArray[n].writeLock();,if (lockArray[n] != null ) WriteLock lock = lockArray[n].writeLock();
Bug2479493.java,in = new FileInputStream(fromPath).getChannel();,if (FileInputStream(fromPath) != null ) in = new FileInputStream(fromPath).getChannel();
Bug2479493.java,out = new FileOutputStream(toPath).getChannel();,if (FileOutputStream(toPath) != null ) out = new FileOutputStream(toPath).getChannel();
Bug2912638.java,String value = person.getName();,if (person != null ) String value = person.getName();
Bug2912638.java,String value = person.getName();,if (person != null ) String value = person.getName();
Bug2913745.java,long startNanos = System.nanoTime();,if (System != null ) long startNanos = System.nanoTime();
Bug2913745.java,long currentNanos = System.nanoTime();,if (System != null ) long currentNanos = System.nanoTime();
Bug2928673.java,final String origData = wrapper.getContentType();,if (wrapper != null ) final String origData = wrapper.getContentType();
Bug2948672.java,sqlStatement = dbConnection.createStatement();,if (dbConnection != null ) sqlStatement = dbConnection.createStatement();
ExtendedProperties.java,basePath = new File(file).getAbsolutePath();,if (File(file) != null ) basePath = new File(file).getAbsolutePath();
DirectCrossSiteScripting.java,PrintWriter out = response.getWriter();,if (response != null ) PrintWriter out = response.getWriter();
StringBufferCrossSiteScripting.java,PrintWriter out = response.getWriter();,if (response != null ) PrintWriter out = response.getWriter();
TaintedCookies.java,PrintWriter out = response.getWriter();,if (response != null ) PrintWriter out = response.getWriter();
AddMessages.java,Iterator<BugAnnotation> annIter = bugInstance.annotationIterator();,if (bugInstance != null ) Iterator<BugAnnotation> annIter = bugInstance.annotationIterator();
AddMessages.java,s = bc.getDetailText();,if (bc != null ) s = bc.getDetailText();
AppVersion.java,this.timestamp = time.getTime();,if (time != null ) this.timestamp = time.getTime();
BugAccumulator.java,String hash = bug.getInstanceHash();,if (bug != null ) String hash = bug.getInstanceHash();
BugInstance.java,propertyListHead = cur.getNext();,if (cur != null ) propertyListHead = cur.getNext();
BugInstance.java,prop = prop.getNext();,if (prop != null ) prop = prop.getNext();
BugInstance.java,String className = visitor.getDottedClassName();,if (visitor != null ) String className = visitor.getDottedClassName();
BugInstance.java,String className = methodGen.getClassName();,if (methodGen != null ) String className = methodGen.getClassName();
BugInstance.java,shortPattern = bugPattern.getShortDescription();,if (bugPattern != null ) shortPattern = bugPattern.getShortDescription();
BugInstance.java,int pc = location.getHandle().getPosition();,if (location != null ) int pc = location.getHandle().getPosition();
BugInstance.java,int pc = location.getHandle().getPosition();,if (location != null ) int pc = location.getHandle().getPosition();
BugPattern.java,detailHTML = buf.toString();,if (buf != null ) detailHTML = buf.toString();
BugProperty.java,this.name = name.intern();,if (name != null ) this.name = name.intern();
BugRanker.java,String type = bugPattern.getType();,if (bugPattern != null ) String type = bugPattern.getType();
BugRanker.java,String kind = bugPattern.getAbbrev();,if (bugPattern != null ) String kind = bugPattern.getAbbrev();
BugRanker.java,String category = bugPattern.getCategory();,if (bugPattern != null ) String category = bugPattern.getCategory();
BugRanker.java,DetectorFactoryCollection factory = DetectorFactoryCollection.instance();,if (DetectorFactoryCollection != null ) DetectorFactoryCollection factory = DetectorFactoryCollection.instance();
BugRanker.java,Plugin corePlugin = factory.getCorePlugin();,if (factory != null ) Plugin corePlugin = factory.getCorePlugin();
ByteCodePatternDetector.java,JavaClass jclass = classContext.getJavaClass();,if (classContext != null ) JavaClass jclass = classContext.getJavaClass();
CategoryFilteringBugReporter.java,String category = bugPattern.getCategory();,if (bugPattern != null ) String category = bugPattern.getCategory();
ClassWarningSuppressor.java,ClassAnnotation primaryClassAnnotation = bugInstance.getPrimaryClass();,if (bugInstance != null ) ClassAnnotation primaryClassAnnotation = bugInstance.getPrimaryClass();
CommandLineUiCallback.java,answer = br.readLine();,if (br != null ) answer = br.readLine();
DetectorFactoryCollection.java,String fbHome = libDir.getParent();,if (libDir != null ) String fbHome = libDir.getParent();
DiscoverSourceDirectories.java,String sourceFile = classInfo.getSource();,if (classInfo != null ) String sourceFile = classInfo.getSource();
EmacsBugReporter.java,lineStart = line.getStartLine();,if (line != null ) lineStart = line.getStartLine();
EmacsBugReporter.java,fullPath = line.getSourceFile();,if (line != null ) fullPath = line.getSourceFile();
FieldAnnotation.java,String givenPackageName = primaryClass.getPackageName();,if (primaryClass != null ) String givenPackageName = primaryClass.getPackageName();
FieldAnnotation.java,AnalysisContext currentAnalysisContext = AnalysisContext.currentAnalysisContext();,if (AnalysisContext != null ) AnalysisContext currentAnalysisContext = AnalysisContext.currentAnalysisContext();
FieldWarningSuppressor.java,FieldAnnotation bugField = bugInstance.getPrimaryField();,if (bugInstance != null ) FieldAnnotation bugField = bugInstance.getPrimaryField();
FindBugs.java,String trainingInputDir = findBugs.getTrainingInputDir();,if (findBugs != null ) String trainingInputDir = findBugs.getTrainingInputDir();
FindBugs.java,BugCollection bugs =   findBugs.getBugReporter().getBugCollection();,if (findBugs != null ) BugCollection bugs =   findBugs.getBugReporter().getBugCollection();
FindBugs.java,projectName = findBugs.getProjectName();,if (findBugs != null ) projectName = findBugs.getProjectName();
FindBugs.java,long timestamp = project.getTimestamp();,if (project != null ) long timestamp = project.getTimestamp();
FindBugs2.java,SourceInfoMap sourceInfoMap = analysisContext.getSourceInfoMap();,if (analysisContext != null ) SourceInfoMap sourceInfoMap = analysisContext.getSourceInfoMap();
FindBugs2.java,XFactory factory = AnalysisContext.currentXFactory();,if (AnalysisContext != null ) XFactory factory = AnalysisContext.currentXFactory();
Footprint.java,cpuTime = new OperatingSystemBeanWrapper().getProcessCpuTime();,if (OperatingSystemBeanWrapper() != null ) cpuTime = new OperatingSystemBeanWrapper().getProcessCpuTime();
Footprint.java,clockTime = System.currentTimeMillis(); // or new java.util.Date().getTime()	;,if (; != null ) clockTime = System.currentTimeMillis(); // or new java.util.Date().getTime()	;
Footprint.java,List<MemoryPoolMXBean> mlist = ManagementFactory.getMemoryPoolMXBeans();,if (ManagementFactory != null ) List<MemoryPoolMXBean> mlist = ManagementFactory.getMemoryPoolMXBeans();
Footprint.java,List<GarbageCollectorMXBean> clist = ManagementFactory.getGarbageCollectorMXBeans();,if (ManagementFactory != null ) List<GarbageCollectorMXBean> clist = ManagementFactory.getGarbageCollectorMXBeans();
Footprint.java,sum += gcBean.getCollectionTime();,if (gcBean != null ) sum += gcBean.getCollectionTime();
FuzzyBugComparator.java,BugAnnotation candidate = iter.next();,if (iter != null ) BugAnnotation candidate = iter.next();
FuzzyBugComparator.java,String lhsCode = getCode(lhs.getType());,if (getCode(lhs != null ) String lhsCode = getCode(lhs.getType());
InstructionScannerDriver.java,BasicBlock source = edge.getSource();,if (edge != null ) BasicBlock source = edge.getSource();
LocalVariableAnnotation.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
LocalVariableAnnotation.java,int reg = item.getRegisterNumber();,if (item != null ) int reg = item.getRegisterNumber();
LocalVariableAnnotation.java,String sig = signatureIterator.next();,if (signatureIterator != null ) String sig = signatureIterator.next();
LocalVariableAnnotation.java,Iterator<String> signatureIterator = parser.parameterSignatureIterator();,if (parser != null ) Iterator<String> signatureIterator = parser.parameterSignatureIterator();
LocalVariableAnnotation.java,"int distance = EditDistance.editDistance(name, potentialMatch.getName());","if (potentialMatch != null ) int distance = EditDistance.editDistance(name, potentialMatch.getName());"
MethodAnnotation.java,String className = visitor.getDottedClassName();,if (visitor != null ) String className = visitor.getDottedClassName();
MethodWarningSuppressor.java,MethodAnnotation bugMethod = bugInstance.getPrimaryMethod();,if (bugInstance != null ) MethodAnnotation bugMethod = bugInstance.getPrimaryMethod();
OpcodeStack.java,r+= signature.hashCode();,if (signature != null ) r+= signature.hashCode();
OpcodeStack.java,r+= constValue.hashCode();,if (constValue != null ) r+= constValue.hashCode();
OpcodeStack.java,r+= source.hashCode();,if (source != null ) r+= source.hashCode();
OpcodeStack.java,int len = signature.length();,if (signature != null ) int len = signature.length();
OpcodeStack.java,FieldSummary fieldSummary = AnalysisContext.currentAnalysisContext().getFieldSummary();,if (AnalysisContext != null ) FieldSummary fieldSummary = AnalysisContext.currentAnalysisContext().getFieldSummary();
OpcodeStack.java,XField fieldOperand = dbc.getXFieldOperand();,if (dbc != null ) XField fieldOperand = dbc.getXFieldOperand();
OpcodeStack.java,cons = dbc.getConstantRefOperand();,if (dbc != null ) cons = dbc.getConstantRefOperand();
OpcodeStack.java,int specialKind = topItem.getSpecialKind();,if (topItem != null ) int specialKind = topItem.getSpecialKind();
OpcodeStack.java,int pc = dbc.getBranchTarget() - dbc.getBranchOffset();,if (dbc != null ) int pc = dbc.getBranchTarget() - dbc.getBranchOffset();
OpcodeStack.java,int branchTarget = dbc.getBranchTarget();,if (dbc != null ) int branchTarget = dbc.getBranchTarget();
OpcodeStack.java,register = dbc.getRegisterOperand();,if (dbc != null ) register = dbc.getRegisterOperand();
OpcodeStack.java,String castTo = dbc.getClassConstantOperand();,if (dbc != null ) String castTo = dbc.getClassConstantOperand();
OpcodeStack.java,FieldSummary fieldSummary = AnalysisContext.currentAnalysisContext().getFieldSummary();,if (AnalysisContext != null ) FieldSummary fieldSummary = AnalysisContext.currentAnalysisContext().getFieldSummary();
OpcodeStack.java,XField fieldOperand = dbc.getXFieldOperand();,if (dbc != null ) XField fieldOperand = dbc.getXFieldOperand();
OpcodeStack.java,int reg = item.getRegisterNumber();,if (item != null ) int reg = item.getRegisterNumber();
OpcodeStack.java,int specialKind = it.getSpecialKind();,if (it != null ) int specialKind = it.getSpecialKind();
OpcodeStack.java,int oldSpecialKind = it.getSpecialKind();,if (it != null ) int oldSpecialKind = it.getSpecialKind();
OpcodeStack.java,signature = dbc.getClassConstantOperand();,if (dbc != null ) signature = dbc.getClassConstantOperand();
OpcodeStack.java,int dims = dbc.getIntConstant();,if (dbc != null ) int dims = dbc.getIntConstant();
OpcodeStack.java,signature = dbc.getClassConstantOperand();,if (dbc != null ) signature = dbc.getClassConstantOperand();
OpcodeStack.java,String arraySig = it.getSignature();,if (it != null ) String arraySig = it.getSignature();
OpcodeStack.java,int stackSize = stack.size();,if (stack != null ) int stackSize = stack.size();
OpcodeStack.java,signature = it.getSignature();,if (it != null ) signature = it.getSignature();
OpcodeStack.java,String clsName = dbc.getClassConstantOperand();,if (dbc != null ) String clsName = dbc.getClassConstantOperand();
OpcodeStack.java,String methodName = dbc.getNameConstantOperand();,if (dbc != null ) String methodName = dbc.getNameConstantOperand();
OpcodeStack.java,String signature = dbc.getSigConstantOperand();,if (dbc != null ) String signature = dbc.getSigConstantOperand();
OpcodeStack.java,String newSignature = Type.getReturnType(signature).getSignature();,if (Type != null ) String newSignature = Type.getReturnType(signature).getSignature();
OpcodeStack.java,String itemSignature = item.getSignature();,if (item != null ) String itemSignature = item.getSignature();
OpcodeStack.java,appenderValue = (String)i.getConstant();,if ((String)i != null ) appenderValue = (String)i.getConstant();
OpcodeStack.java,appenderValue = (String)i.getConstant();,if ((String)i != null ) appenderValue = (String)i.getConstant();
OpcodeStack.java,Object sbVal = sbItem.getConstant();,if (sbItem != null ) Object sbVal = sbItem.getConstant();
OpcodeStack.java,appenderValue = sbVal + sVal.toString();,if (sVal != null ) appenderValue = sbVal + sVal.toString();
OpcodeStack.java,Object value = item.getConstant();,if (item != null ) Object value = item.getConstant();
OpcodeStack.java,parameterName = (String) requestParameter.getConstant();,if (requestParameter != null ) parameterName = (String) requestParameter.getConstant();
OpcodeStack.java,"result.injection = new HttpParameterInjection(parameterName, dbc.getPC());","if (dbc != null ) result.injection = new HttpParameterInjection(parameterName, dbc.getPC());"
OpcodeStack.java,int fromSize = mergeFrom.size();,if (mergeFrom != null ) int fromSize = mergeFrom.size();
OpcodeStack.java,int newCount = stack.jumpEntries.size();,if (stack != null ) int newCount = stack.jumpEntries.size();
OpcodeStack.java,CodeException[] exceptionTable = code.getExceptionTable();,if (code != null ) CodeException[] exceptionTable = code.getExceptionTable();
OpcodeStack.java,reg += it.getSize();,if (it != null ) reg += it.getSize();
OpcodeStack.java,Item it = new Item(argType.getSignature());,if (Item(argType != null ) Item it = new Item(argType.getSignature());
OpcodeStack.java,reg += it.getSize();,if (it != null ) reg += it.getSize();
PackageWarningSuppressor.java,ClassAnnotation primaryClassAnnotation = bugInstance.getPrimaryClass();,if (bugInstance != null ) ClassAnnotation primaryClassAnnotation = bugInstance.getPrimaryClass();
PackageWarningSuppressor.java,String className = primaryClassAnnotation.getClassName();,if (primaryClassAnnotation != null ) String className = primaryClassAnnotation.getClassName();
PluginLoader.java,this.classLoader = this.getClass().getClassLoader();,if (this != null ) this.classLoader = this.getClass().getClassLoader();
PluginLoader.java,String classloaderName =  classLoader.getClass().getName();,if (classLoader != null ) String classloaderName =  classLoader.getClass().getName();
PluginLoader.java,String language = locale.getLanguage();,if (locale != null ) String language = locale.getLanguage();
PluginLoader.java,String country = locale.getCountry();,if (locale != null ) String country = locale.getCountry();
PluginLoader.java,String value = node.getText();,if (node != null ) String value = node.getText();
PrintingBugReporter.java,String key = warning.getUserDesignationKey();,if (warning != null ) String key = warning.getUserDesignationKey();
PrintingBugReporter.java,SourceLineAnnotation sourceLine = warning.getPrimarySourceLineAnnotation();,if (warning != null ) SourceLineAnnotation sourceLine = warning.getPrimarySourceLineAnnotation();
PrintingBugReporter.java,int rank = warning.getBugRank();,if (warning != null ) int rank = warning.getBugRank();
PrintingBugReporter.java,BugCollection bugCollection = reporter.getBugCollection();,if (reporter != null ) BugCollection bugCollection = reporter.getBugCollection();
Project.java,line = line.trim();,if (line != null ) line = line.trim();
ProjectPackagePrefixes.java,String s = in.readLine();,if (in != null ) String s = in.readLine();
ProjectStats.java,long cpuTime = delta.getCpuTime(); // nanoseconds,if (nanoseconds != null ) long cpuTime = delta.getCpuTime(); // nanoseconds
ProjectStats.java,long clockTime = delta.getClockTime(); // milliseconds,if (milliseconds != null ) long clockTime = delta.getClockTime(); // milliseconds
ProjectStats.java,long peakMemory = delta.getPeakMemory(); // bytes,if (bytes != null ) long peakMemory = delta.getPeakMemory(); // bytes
ProjectStats.java,String key = entry.getKey();,if (entry != null ) String key = entry.getKey();
PropertyBundle.java,this.properties = (Properties) properties.clone();,if (properties != null ) this.properties = (Properties) properties.clone();
ResourceTrackingDetector.java,Profiler profiler = Global.getAnalysisCache().getProfiler();,if (Global != null ) Profiler profiler = Global.getAnalysisCache().getProfiler();
SAXBugCollectionHandler.java,CompoundMatcher peek = matcherStack.peek();,if (matcherStack != null ) CompoundMatcher peek = matcherStack.peek();
SelfCalls.java,Iterator<InstructionHandle> j = block.instructionIterator();,if (block != null ) Iterator<InstructionHandle> j = block.instructionIterator();
SelfCalls.java,String methodName = method.getName();,if (method != null ) String methodName = method.getName();
SortedBugCollection.java,IGuiCallback callback = getProject().getGuiCallback();,if (getProject() != null ) IGuiCallback callback = getProject().getGuiCallback();
SortedBugCollection.java,xr = XMLReaderFactory.createXMLReader();,if (XMLReaderFactory != null ) xr = XMLReaderFactory.createXMLReader();
SortedBugCollection.java,timeFinishedLoading = System.currentTimeMillis();,if (System != null ) timeFinishedLoading = System.currentTimeMillis();
SortedBugCollection.java,hash = bugInstance.getInstanceKey();,if (bugInstance != null ) hash = bugInstance.getInstanceKey();
SortedBugCollection.java,ClassAnnotation lca = lhs.getPrimaryClass();,if (lhs != null ) ClassAnnotation lca = lhs.getPrimaryClass();
SortedBugCollection.java,long diff  = lhs.getFirstVersion() - rhs.getFirstVersion();,if (rhs != null ) long diff  = lhs.getFirstVersion() - rhs.getFirstVersion();
SortedBugCollection.java,diff = lhs.getLastVersion() - rhs.getLastVersion();,if (rhs != null ) diff = lhs.getLastVersion() - rhs.getLastVersion();
SortedBugCollection.java,IGuiCallback guiCallback = project.getGuiCallback();,if (project != null ) IGuiCallback guiCallback = project.getGuiCallback();
SourceLineAnnotation.java,String className = methodGen.getClassName();,if (methodGen != null ) String className = methodGen.getClassName();
SourceLineAnnotation.java,LineNumber[] table = lineNumberTable.getLineNumberTable();,if (lineNumberTable != null ) LineNumber[] table = lineNumberTable.getLineNumberTable();
SourceLineAnnotation.java,Code code = method.getCode();,if (method != null ) Code code = method.getCode();
SourceLineAnnotation.java,String sourceFile = xclass.getSource();,if (xclass != null ) String sourceFile = xclass.getSource();
SourceLineAnnotation.java,LineNumber[] entries = lnt.getLineNumberTable();,if (lnt != null ) LineNumber[] entries = lnt.getLineNumberTable();
SourceLineAnnotation.java,bytecode = entry.getStartPC();,if (entry != null ) bytecode = entry.getStartPC();
SourceLineAnnotation.java,String sourceFile = jclass.getSourceFileName();,if (jclass != null ) String sourceFile = jclass.getSourceFileName();
SourceLineAnnotation.java,String sourceFile = visitor.getSourceFile();,if (visitor != null ) String sourceFile = visitor.getSourceFile();
SourceLineAnnotation.java,LineNumberTable table = methodGen.getLineNumberTable(methodGen.getConstantPool());,if (methodGen != null ) LineNumberTable table = methodGen.getLineNumberTable(methodGen.getConstantPool());
SourceLineAnnotation.java,LineNumberTable lineNumberTable = methodGen.getLineNumberTable(methodGen.getConstantPool());,if (methodGen != null ) LineNumberTable lineNumberTable = methodGen.getLineNumberTable(methodGen.getConstantPool());
SourceLineAnnotation.java,Project project = myProject.get();,if (myProject != null ) Project project = myProject.get();
SourceLineAnnotation.java,SourceFinder mySourceFinder = project.getSourceFinder();,if (project != null ) SourceFinder mySourceFinder = project.getSourceFinder();
SourceLineAnnotation.java,String myRelativeSourceBase = relativeSourceBase.get();,if (relativeSourceBase != null ) String myRelativeSourceBase = relativeSourceBase.get();
SourceLineAnnotation.java,SourceInfoMap sourceInfoMap = AnalysisContext.currentAnalysisContext().getSourceInfoMap();,if (AnalysisContext != null ) SourceInfoMap sourceInfoMap = AnalysisContext.currentAnalysisContext().getSourceInfoMap();
StartTime.java,vmStartTime = ManagementFactory.getRuntimeMXBean().getStartTime();,if (ManagementFactory != null ) vmStartTime = ManagementFactory.getRuntimeMXBean().getStartTime();
TextUICommandLine.java,String s = in.readLine();,if (in != null ) String s = in.readLine();
TextUICommandLine.java,String visitorName = tok.nextToken().trim();,if (tok != null ) String visitorName = tok.nextToken().trim();
TextUICommandLine.java,String item = tok.nextToken();,if (tok != null ) String item = tok.nextToken();
TextUICommandLine.java,String s = in.readLine();,if (in != null ) String s = in.readLine();
Tokenizer.java,int c = reader.read();,if (reader != null ) int c = reader.read();
Tokenizer.java,int c = reader.read();,if (reader != null ) int c = reader.read();
Tokenizer.java,c = reader.read();,if (reader != null ) c = reader.read();
Tokenizer.java,int c = reader.read();,if (reader != null ) int c = reader.read();
TypeAnnotation.java,typeParameters = genericObjectType.getGenericParametersAsString();,if (genericObjectType != null ) typeParameters = genericObjectType.getGenericParametersAsString();
TypeAnnotation.java,AnalysisContext context = AnalysisContext.currentAnalysisContext();,if (AnalysisContext != null ) AnalysisContext context = AnalysisContext.currentAnalysisContext();
VersionInsensitiveBugComparator.java,BugAnnotation rhsAnnotation = rhsIter.next();,if (rhsIter != null ) BugAnnotation rhsAnnotation = rhsIter.next();
VersionInsensitiveBugComparator.java,lhsClass = lhsAnnotation.getClass();,if (lhsAnnotation != null ) lhsClass = lhsAnnotation.getClass();
VersionInsensitiveBugComparator.java,lhsAnnotation = lhsIter.next();,if (lhsIter != null ) lhsAnnotation = lhsIter.next();
AbstractDataflowAnalysis.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
AbstractFrameModelingVisitor.java,Value value = frame.popValue();,if (frame != null ) Value value = frame.popValue();
AnalysisContext.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
AnalysisContext.java,String name = xClass.getSource();,if (xClass != null ) String name = xClass.getSource();
AnnotationDatabase.java,min = inheritedAnnotations.first();,if (inheritedAnnotations != null ) min = inheritedAnnotations.first();
AssertionMethods.java,Instruction next = handle.getNext().getInstruction();,if (handle != null ) Instruction next = handle.getNext().getInstruction();
AssignedFieldMap.java,JavaClass[] superClassList = myClass.getSuperClasses();,if (myClass != null ) JavaClass[] superClassList = myClass.getSuperClasses();
AssignedFieldMap.java,Method[] methodList = myClass.getMethods();,if (myClass != null ) Method[] methodList = myClass.getMethods();
AssignedFieldMap.java,String myClassName = myClass.getClassName();,if (myClass != null ) String myClassName = myClass.getClassName();
AssignedFieldMap.java,String myPackageName = myClass.getPackageName();,if (myClass != null ) String myPackageName = myClass.getPackageName();
AssignedFieldMap.java,String superClassName = jclass.getClassName();,if (jclass != null ) String superClassName = jclass.getClassName();
AssignedFieldMap.java,String superPackageName = jclass.getPackageName();,if (jclass != null ) String superPackageName = jclass.getPackageName();
AssignedFieldMap.java,Field[] fieldList = jclass.getFields();,if (jclass != null ) Field[] fieldList = jclass.getFields();
AssignedFieldMap.java,InstructionList il = methodGen.getInstructionList();,if (methodGen != null ) InstructionList il = methodGen.getInstructionList();
AssignedFieldMap.java,InstructionHandle handle = il.getStart();,if (il != null ) InstructionHandle handle = il.getStart();
AssignedFieldMap.java,ConstantPoolGen cpg = methodGen.getConstantPool();,if (methodGen != null ) ConstantPoolGen cpg = methodGen.getConstantPool();
AssignedFieldMap.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
AssignedFieldMap.java,short opcode = ins.getOpcode();,if (ins != null ) short opcode = ins.getOpcode();
AssignedFieldMap.java,handle = handle.getNext();,if (handle != null ) handle = handle.getNext();
BetterCFGBuilder2.java,this.cpg = methodGen.getConstantPool();,if (methodGen != null ) this.cpg = methodGen.getConstantPool();
BetterCFGBuilder2.java,Instruction i = head.getInstruction();,if (head != null ) Instruction i = head.getInstruction();
BetterCFGBuilder2.java,InstructionHandle target = ii.getTarget();,if (ii != null ) InstructionHandle target = ii.getTarget();
BetterCFGBuilder2.java,InstructionList instructionList = methodGen.getInstructionList();,if (methodGen != null ) InstructionList instructionList = methodGen.getInstructionList();
BetterCFGBuilder2.java,BasicBlock entryBlock = cfg.getEntry();,if (cfg != null ) BasicBlock entryBlock = cfg.getEntry();
BetterCFGBuilder2.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
BetterCFGBuilder2.java,InstructionHandle handlerStart = exceptionHandler.getHandlerPC();,if (exceptionHandler != null ) InstructionHandle handlerStart = exceptionHandler.getHandlerPC();
BetterCFGBuilder2.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
BetterCFGBuilder2.java,InstructionTargeter[] targeterList = handle.getTargeters();,if (handle != null ) InstructionTargeter[] targeterList = handle.getTargeters();
BetterCFGBuilder2.java,InstructionHandle handle = insIter.next();,if (insIter != null ) InstructionHandle handle = insIter.next();
BetterCFGBuilder2.java,Edge edge = edgeIter.next();,if (edgeIter != null ) Edge edge = edgeIter.next();
BetterCFGBuilder2.java,Subroutine jsrSub = jsrSubroutineMap.get(jsr.getTarget());,if (jsrSubroutineMap != null ) Subroutine jsrSub = jsrSubroutineMap.get(jsr.getTarget());
BetterCFGBuilder2.java,EscapeTarget escapeTarget = escapeTargetIter.next();,if (escapeTargetIter != null ) EscapeTarget escapeTarget = escapeTargetIter.next();
BlockTypeAnalysis.java,ObjectType catchType = exceptionGen.getCatchType();,if (exceptionGen != null ) ObjectType catchType = exceptionGen.getCatchType();
CFG.java,instructionIter = curBlock.instructionIterator();,if (curBlock != null ) instructionIter = curBlock.instructionIterator();
CFG.java,basicBlock = removedEdge.getTarget();,if (removedEdge != null ) basicBlock = removedEdge.getTarget();
CFG.java,int numNonExceptionSuccessors = block.getNumNonExceptionSuccessors();,if (block != null ) int numNonExceptionSuccessors = block.getNumNonExceptionSuccessors();
CFG.java,InstructionHandle handle = loc.getHandle();,if (loc != null ) InstructionHandle handle = loc.getHandle();
ClassContext.java,Method[] methodList = jclass.getMethods();,if (jclass != null ) Method[] methodList = jclass.getMethods();
ClassContext.java,List<Method> methodsInCallOrder = new ArrayList<Method>(xmethodsInCallOrder.size());,if (ArrayList<Method>(xmethodsInCallOrder != null ) List<Method> methodsInCallOrder = new ArrayList<Method>(xmethodsInCallOrder.size());
ClassContext.java,Code code = method.getCode();,if (method != null ) Code code = method.getCode();
ClassContext.java,byte[] instructionList = code.getCode();,if (code != null ) byte[] instructionList = code.getCode();
ClassContext.java,UnpackedCode unpackedCode = callback.getUnpackedCode();,if (callback != null ) UnpackedCode unpackedCode = callback.getUnpackedCode();
ClassContext.java,CodeException[] exceptionTable = code.getExceptionTable();,if (code != null ) CodeException[] exceptionTable = code.getExceptionTable();
ClassContext.java,int newLine = line.getLineNumber();,if (line != null ) int newLine = line.getLineNumber();
ClassContext.java,prevStartPc = line.getStartPC();,if (line != null ) prevStartPc = line.getStartPC();
ClassContext.java,Location loc = locs.next();,if (locs != null ) Location loc = locs.next();
ClassHash.java,this.className = javaClass.getClassName();,if (javaClass != null ) this.className = javaClass.getClassName();
ClassNotFoundExceptionParser.java,Matcher matcher = pattern.matcher(ex.getMessage());,if (pattern != null ) Matcher matcher = pattern.matcher(ex.getMessage());
Dataflow.java,Iterator<BasicBlock> i = blockOrder.blockIterator();,if (blockOrder != null ) Iterator<BasicBlock> i = blockOrder.blockIterator();
Dataflow.java,Edge edge = predEdgeIter.next();,if (predEdgeIter != null ) Edge edge = predEdgeIter.next();
Dataflow.java,Edge edge = predEdgeIter.next();,if (predEdgeIter != null ) Edge edge = predEdgeIter.next();
Dataflow.java,MethodGen mg = cfg.getMethodGen();,if (cfg != null ) MethodGen mg = cfg.getMethodGen();
DebugRepositoryLookupFailureCallback.java,ClassNotFoundException cnfe = missingClassEx.getClassNotFoundException();,if (missingClassEx != null ) ClassNotFoundException cnfe = missingClassEx.getClassNotFoundException();
DepthFirstSearch.java,firstRoot = cfg.getEntry();,if (cfg != null ) firstRoot = cfg.getEntry();
ExceptionHandlerMap.java,int offset = handle.getPosition();,if (handle != null ) int offset = handle.getPosition();
ExceptionHandlerMap.java,int endOfRange = exceptionHandler.getEndPC().getPosition();,if (exceptionHandler != null ) int endOfRange = exceptionHandler.getEndPC().getPosition();
FieldSummary.java,UnreadFields unreadFields = AnalysisContext.currentAnalysisContext().getUnreadFields();,if (AnalysisContext != null ) UnreadFields unreadFields = AnalysisContext.currentAnalysisContext().getUnreadFields();
Frame.java,int size = slotList.size();,if (slotList != null ) int size = slotList.size();
Hierarchy.java,Method[] methodList = javaClass.getMethods();,if (javaClass != null ) Method[] methodList = javaClass.getMethods();
Hierarchy.java,Method[] methodList = javaClass.getMethods();,if (javaClass != null ) Method[] methodList = javaClass.getMethods();
Hierarchy.java,AnalysisContext analysisContext = AnalysisContext.currentAnalysisContext();,if (AnalysisContext != null ) AnalysisContext analysisContext = AnalysisContext.currentAnalysisContext();
IncompatibleTypes.java,String sig = rhsType.getSignature();,if (rhsType != null ) String sig = rhsType.getSignature();
IncompatibleTypes.java,ClassDescriptor lhsDescriptor = DescriptorFactory.createClassDescriptorFromDottedClassName(expectedType.getClassName());,if (DescriptorFactory != null ) ClassDescriptor lhsDescriptor = DescriptorFactory.createClassDescriptorFromDottedClassName(expectedType.getClassName());
IncompatibleTypes.java,ClassDescriptor rhsDescriptor = DescriptorFactory.createClassDescriptorFromDottedClassName(actualType.getClassName());,if (DescriptorFactory != null ) ClassDescriptor rhsDescriptor = DescriptorFactory.createClassDescriptorFromDottedClassName(actualType.getClassName());
LineNumberMap.java,int pc = ln.getStartPC();,if (ln != null ) int pc = ln.getStartPC();
LiveLocalStoreAnalysis.java,this.killedByStoreOffset = methodGen.getMaxLocals();,if (methodGen != null ) this.killedByStoreOffset = methodGen.getMaxLocals();
Location.java,InstructionHandle lastInstruction = basicBlock.getLastInstruction();,if (basicBlock != null ) InstructionHandle lastInstruction = basicBlock.getLastInstruction();
Location.java,lastInstruction = basicBlock.getExceptionThrower();,if (basicBlock != null ) lastInstruction = basicBlock.getExceptionThrower();
Location.java,lastInstruction = basicBlock.getFirstInstruction();,if (basicBlock != null ) lastInstruction = basicBlock.getFirstInstruction();
Location.java,return hash = System.identityHashCode(basicBlock) + handle.getPosition();,if (handle != null ) return hash = System.identityHashCode(basicBlock) + handle.getPosition();
NullnessAnnotationDatabase.java,XMethod m = mp.getMethod();,if (mp != null ) XMethod m = mp.getMethod();
NullnessAnnotationDatabase.java,int parameterNumber = mp.getParameterNumber();,if (mp != null ) int parameterNumber = mp.getParameterNumber();
PruneInfeasibleExceptionEdges.java,String className = cfg.getMethodGen().getClassName();,if (cfg != null ) String className = cfg.getMethodGen().getClassName();
ResourceValueAnalysis.java,final int numSlots = result.getNumSlots();,if (result != null ) final int numSlots = result.getNumSlots();
ResourceValueAnalysis.java,InstructionHandle lastInSourceHandle = source.getLastInstruction();,if (source != null ) InstructionHandle lastInSourceHandle = source.getLastInstruction();
ReverseDepthFirstSearch.java,this.firstRoot = cfg.getExit();,if (cfg != null ) this.firstRoot = cfg.getExit();
SourceFinder.java,String packageName = source.getPackageName();,if (source != null ) String packageName = source.getPackageName();
SourceFinder.java,String baseClassName = source.getClassName();,if (source != null ) String baseClassName = source.getClassName();
SourceInfoMap.java,String s = tokenizer.nextToken();,if (tokenizer != null ) String s = tokenizer.nextToken();
StackDepthAnalysis.java,int depth = fact.getDepth();,if (fact != null ) int depth = fact.getDepth();
TargetEnumeratingVisitor.java,InstructionHandle target = ins.getTarget();,if (ins != null ) InstructionHandle target = ins.getTarget();
TargetEnumeratingVisitor.java,InstructionHandle target = ins.getTarget();,if (ins != null ) InstructionHandle target = ins.getTarget();
XFactory.java,IAnalysisCache analysisCache = Global.getAnalysisCache();,if (Global != null ) IAnalysisCache analysisCache = Global.getAnalysisCache();
XFactory.java,int accessFlags = method.getAccessFlags();,if (method != null ) int accessFlags = method.getAccessFlags();
XFactory.java,String fieldSig = field.getSignature();,if (field != null ) String fieldSig = field.getSignature();
XFactory.java,String methodSig = methodGen.getSignature();,if (methodGen != null ) String methodSig = methodGen.getSignature();
XFactory.java,IAnalysisCache analysisCache = Global.getAnalysisCache();,if (Global != null ) IAnalysisCache analysisCache = Global.getAnalysisCache();
Load.java,ValueNumber ref = before.getTopValue();,if (before != null ) ValueNumber ref = before.getTopValue();
PatternElement.java,String className = this.getClass().getName();,if (this != null ) String className = this.getClass().getName();
PatternElementMatch.java,String elementLabel = cur.patternElement.getLabel();,if (cur != null ) String elementLabel = cur.patternElement.getLabel();
PatternElementMatch.java,String elementLabel = cur.patternElement.getLabel();,if (cur != null ) String elementLabel = cur.patternElement.getLabel();
PatternMatcher.java,this.cpg = classContext.getConstantPoolGen();,if (classContext != null ) this.cpg = classContext.getConstantPoolGen();
PatternMatcher.java,BasicBlock succ = succIterator.next();,if (succIterator != null ) BasicBlock succ = succIterator.next();
PatternMatcher.java,BasicBlock domBlock = dominator.getBasicBlock();,if (dominator != null ) BasicBlock domBlock = dominator.getBasicBlock();
PatternMatcher.java,State advance = state.advanceToNextElement();,if (state != null ) State advance = state.advanceToNextElement();
PatternMatcher.java,Iterable<State> dominatedInstructions = state.dominatedInstructionStateIterable();,if (state != null ) Iterable<State> dominatedInstructions = state.dominatedInstructionStateIterable();
PatternMatcher.java,matchResult = state.matchNextInBasicBlock();,if (state != null ) matchResult = state.matchNextInBasicBlock();
PatternMatcher.java,Iterator<Edge> i = cfg.outgoingEdgeIterator(state.getBasicBlock());,if (cfg != null ) Iterator<Edge> i = cfg.outgoingEdgeIterator(state.getBasicBlock());
PatternMatcher.java,BasicBlock destBlock = edge.getTarget();,if (edge != null ) BasicBlock destBlock = edge.getTarget();
PatternMatcher.java,int destId = destBlock.getLabel();,if (destBlock != null ) int destId = destBlock.getLabel();
Store.java,int numSlots = before.getNumSlots();,if (before != null ) int numSlots = before.getNumSlots();
Subtypes2.java,minDimensions = aArrType.getDimensions();,if (aArrType != null ) minDimensions = aArrType.getDimensions();
Subtypes2.java,maxDimensions = aArrType.getDimensions();,if (aArrType != null ) maxDimensions = aArrType.getDimensions();
ConstantAnalysis.java,int numSlots = frame.getNumSlots();,if (frame != null ) int numSlots = frame.getNumSlots();
ConstantFrameModelingVisitor.java,int v = obj.getIndex();,if (obj != null ) int v = obj.getIndex();
UnconditionalValueDerefAnalysis.java,ValueNumber vn = vnaFrame.getTopValue();,if (vnaFrame != null ) ValueNumber vn = vnaFrame.getTopValue();
UnconditionalValueDerefAnalysis.java,IsNullValue value = invFrame.getTopValue();,if (invFrame != null ) IsNullValue value = invFrame.getTopValue();
UnconditionalValueDerefAnalysis.java,ValueNumber vn = vnaFrame.getTopValue();,if (vnaFrame != null ) ValueNumber vn = vnaFrame.getTopValue();
UnconditionalValueDerefAnalysis.java,INullnessAnnotationDatabase database = AnalysisContext.currentAnalysisContext().getNullnessAnnotationDatabase();,if (AnalysisContext != null ) INullnessAnnotationDatabase database = AnalysisContext.currentAnalysisContext().getNullnessAnnotationDatabase();
UnconditionalValueDerefAnalysis.java,IsNullValue value = invFrame.getTopValue();,if (invFrame != null ) IsNullValue value = invFrame.getTopValue();
UnconditionalValueDerefAnalysis.java,ConstantPoolGen constantPool = methodGen.getConstantPool();,if (methodGen != null ) ConstantPoolGen constantPool = methodGen.getConstantPool();
UnconditionalValueDerefAnalysis.java,String parameterSignature = parameterIterator.next();,if (parameterIterator != null ) String parameterSignature = parameterIterator.next();
UnconditionalValueDerefAnalysis.java,boolean isExceptionEdge = edge.isExceptionEdge();,if (edge != null ) boolean isExceptionEdge = edge.isExceptionEdge();
UnconditionalValueDerefAnalysis.java,InstructionHandle h = edge.getSource().getLastInstruction();,if (edge != null ) InstructionHandle h = edge.getSource().getLastInstruction();
UnconditionalValueDerefSet.java,Set<Location> derefLocationSet = Util.makeSmallHashSet(sourceEntry.getValue());,if (Util != null ) Set<Location> derefLocationSet = Util.makeSmallHashSet(sourceEntry.getValue());
UnconditionalValueDerefSet.java,resultForSkippedValue = valueNumbersUnconditionallyDereferenced.get(skipMe.getNumber());,if (valueNumbersUnconditionallyDereferenced != null ) resultForSkippedValue = valueNumbersUnconditionallyDereferenced.get(skipMe.getNumber());
GenericUtilities.java,for(int pos = start; pos < signature.length(); pos++),if (pos++) != null ) for(int pos = start; pos < signature.length(); pos++)
BackwardTypeQualifierDataflowAnalysis.java,ValueNumber vn = vnaFrameAtStore.getTopValue();,if (vnaFrameAtStore != null ) ValueNumber vn = vnaFrameAtStore.getTopValue();
ForwardTypeQualifierDataflowAnalysis.java,Instruction instruction = location.getHandle().getInstruction();,if (location != null ) Instruction instruction = location.getHandle().getInstruction();
ForwardTypeQualifierDataflowFactory.java,CFG cfg = dataflow.getCFG();,if (dataflow != null ) CFG cfg = dataflow.getCFG();
ForwardTypeQualifierDataflowFactory.java,InstructionHandle handle = loc.getHandle();,if (loc != null ) InstructionHandle handle = loc.getHandle();
ForwardTypeQualifierDataflowFactory.java,ValueNumber topVN = vnaFrame.getTopValue();,if (vnaFrame != null ) ValueNumber topVN = vnaFrame.getTopValue();
TypeQualifierApplications.java,result = TypeQualifierResolver.resolveTypeQualifiers(m.getAnnotations());,if (TypeQualifierResolver != null ) result = TypeQualifierResolver.resolveTypeQualifiers(m.getAnnotations());
TypeQualifierApplications.java,InnerClassAccessMap icam = AnalysisContext.currentAnalysisContext().getInnerClassAccessMap();,if (AnalysisContext != null ) InnerClassAccessMap icam = AnalysisContext.currentAnalysisContext().getInnerClassAccessMap();
TypeQualifierApplications.java,o = ica.getField();,if (ica != null ) o = ica.getField();
TypeQualifierApplications.java,TypeQualifierAnnotation result = accumulator.getResult().getEffectiveTypeQualifierAnnotation();,if (accumulator != null ) TypeQualifierAnnotation result = accumulator.getResult().getEffectiveTypeQualifierAnnotation();
TypeQualifierApplications.java,TypeQualifierAnnotation result = accumulator.getResult().getEffectiveTypeQualifierAnnotation();,if (accumulator != null ) TypeQualifierAnnotation result = accumulator.getResult().getEffectiveTypeQualifierAnnotation();
TypeQualifierResolver.java,ClassDescriptor annotationClass = value.getAnnotationClass();,if (value != null ) ClassDescriptor annotationClass = value.getAnnotationClass();
TypeQualifierValue.java,Class c = validatorLoader.loadClass(checkerName.getDottedClassName());,if (validatorLoader != null ) Class c = validatorLoader.loadClass(checkerName.getDottedClassName());
TypeQualifierValue.java,IAnalysisCache analysisCache = Global.getAnalysisCache();,if (Global != null ) IAnalysisCache analysisCache = Global.getAnalysisCache();
TypeQualifierValueSet.java,FlowValue flowValue = FlowValue.flowValueFromWhen(sourceSinkInfo.getWhen());,if (FlowValue != null ) FlowValue flowValue = FlowValue.flowValueFromWhen(sourceSinkInfo.getWhen());
DerefFinder.java,ConstantPoolGen cpg = classContext.getConstantPoolGen();,if (classContext != null ) ConstantPoolGen cpg = classContext.getConstantPoolGen();
DerefFinder.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
IsNullValueAnalysis.java,Type[] argumentTypes = methodGen.getArgumentTypes();,if (methodGen != null ) Type[] argumentTypes = methodGen.getArgumentTypes();
IsNullValueAnalysis.java,value = IsNullValue.nonReportingNotNullValue();,if (IsNullValue != null ) value = IsNullValue.nonReportingNotNullValue();
IsNullValueAnalysis.java,CodeExceptionGen handler = destBlock.getExceptionGen();,if (destBlock != null ) CodeExceptionGen handler = destBlock.getExceptionGen();
IsNullValueAnalysis.java,ObjectType catchType = handler.getCatchType();,if (handler != null ) ObjectType catchType = handler.getCatchType();
IsNullValueAnalysis.java,String catchClass = catchType.getClassName();,if (catchType != null ) String catchClass = catchType.getClassName();
IsNullValueAnalysis.java,final int edgeType = edge.getType();,if (edge != null ) final int edgeType = edge.getType();
IsNullValueAnalysis.java,InstructionHandle prev = lastInSourceHandle.getPrev();,if (lastInSourceHandle != null ) InstructionHandle prev = lastInSourceHandle.getPrev();
IsNullValueAnalysis.java,IsNullValue tos = lastFrame.getTopValue();,if (lastFrame != null ) IsNullValue tos = lastFrame.getTopValue();
IsNullValueAnalysis.java,ValueNumber prevTopValue = prevVnaFrame.getTopValue();,if (prevVnaFrame != null ) ValueNumber prevTopValue = prevVnaFrame.getTopValue();
IsNullValueAnalysis.java,boolean tosNull = tos.isDefinitelyNull();,if (tos != null ) boolean tosNull = tos.isDefinitelyNull();
IsNullValueAnalysis.java,boolean nextToTosNull = nextToTos.isDefinitelyNull();,if (nextToTos != null ) boolean nextToTosNull = nextToTos.isDefinitelyNull();
IsNullValueAnalysis.java,ifcmpDecision = IsNullValue.pathSensitiveNullValue();,if (IsNullValue != null ) ifcmpDecision = IsNullValue.pathSensitiveNullValue();
IsNullValueAnalysis.java,fallThroughDecision = IsNullValue.pathSensitiveNullValue();,if (IsNullValue != null ) fallThroughDecision = IsNullValue.pathSensitiveNullValue();
IsNullValueAnalysis.java,ifcmpDecision = IsNullValue.pathSensitiveNullValue();,if (IsNullValue != null ) ifcmpDecision = IsNullValue.pathSensitiveNullValue();
NullDerefAndRedundantComparisonFinder.java,IsNullValue isNullValue = invFrame.getTopValue();,if (invFrame != null ) IsNullValue isNullValue = invFrame.getTopValue();
NullDerefAndRedundantComparisonFinder.java,ValueNumber vn = vnaDataflow.getFactAfterLocation(location).getTopValue();,if (vnaDataflow != null ) ValueNumber vn = vnaDataflow.getFactAfterLocation(location).getTopValue();
NullDerefAndRedundantComparisonFinder.java,UnconditionalValueDerefSet uvdTargetFact = uvdDataflow.getResultFact(edge.getTarget());,if (uvdDataflow != null ) UnconditionalValueDerefSet uvdTargetFact = uvdDataflow.getResultFact(edge.getTarget());
NullDerefAndRedundantComparisonFinder.java,Set<Location> derefLocationSet = e.getValue().getDerefLocationSet();,if (e != null ) Set<Location> derefLocationSet = e.getValue().getDerefLocationSet();
NullDerefAndRedundantComparisonFinder.java,BitSet allDominatedBy = postDomAnalysis.getAllDominatedBy(loc.getBasicBlock());,if (postDomAnalysis != null ) BitSet allDominatedBy = postDomAnalysis.getAllDominatedBy(loc.getBasicBlock());
NullDerefAndRedundantComparisonFinder.java,ValueNumber valueNumber = entry.getKey();,if (entry != null ) ValueNumber valueNumber = entry.getKey();
NullDerefAndRedundantComparisonFinder.java,boolean definitelySame = top.isDefinitelyNull();,if (top != null ) boolean definitelySame = top.isDefinitelyNull();
NullDerefAndRedundantComparisonFinder.java,"ValueNumber valueNumber = vnaFrame.getInstance(exceptionThrower, classContext.getConstantPoolGen());","if (classContext != null ) ValueNumber valueNumber = vnaFrame.getInstance(exceptionThrower, classContext.getConstantPoolGen());"
NullDerefAndRedundantComparisonFinder.java,InstructionHandle eth = bb.getExceptionThrower();,if (bb != null ) InstructionHandle eth = bb.getExceptionThrower();
NullDerefAndRedundantComparisonFinder.java,int ePosition = eth.getPosition();,if (eth != null ) int ePosition = eth.getPosition();
TypeQualifierNullnessAnnotationDatabase.java,Profiler profiler = Global.getAnalysisCache().getProfiler();,if (Global != null ) Profiler profiler = Global.getAnalysisCache().getProfiler();
UsagesRequiringNonNullValues.java,MergeTree mergeTree = vnaDataflow.getAnalysis().getMergeTree();,if (vnaDataflow != null ) MergeTree mergeTree = vnaDataflow.getAnalysis().getMergeTree();
DefinitelyNullSetAnalysis.java,ValueNumber valueNumber = vnaFrame.getTopValue();,if (vnaFrame != null ) ValueNumber valueNumber = vnaFrame.getTopValue();
InstructionActionCache.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
ObligationAnalysis.java,BasicBlock sourceBlock = edge.getSource();,if (edge != null ) BasicBlock sourceBlock = edge.getSource();
ObligationAnalysis.java,InstructionHandle last = sourceBlock.getLastInstruction();,if (sourceBlock != null ) InstructionHandle last = sourceBlock.getLastInstruction();
ObligationAnalysis.java,Path path = stateInResultFact.getPath();,if (stateInResultFact != null ) Path path = stateInResultFact.getPath();
State.java,dup.path = this.path.duplicate();,if (this != null ) dup.path = this.path.duplicate();
ExceptionSet.java,result = result.getFirstCommonSuperclass(i.next());,if (result != null ) result = result.getFirstCommonSuperclass(i.next());
TypeAnalysis.java,edgeExceptionSet = exceptionSetFactory.createExceptionSet();,if (exceptionSetFactory != null ) edgeExceptionSet = exceptionSetFactory.createExceptionSet();
TypeAnalysis.java,Type[] argumentTypes = methodGen.getArgumentTypes();,if (methodGen != null ) Type[] argumentTypes = methodGen.getArgumentTypes();
TypeAnalysis.java,String signature = local.getSignature();,if (local != null ) String signature = local.getSignature();
TypeAnalysis.java,int index = local.getIndex();,if (local != null ) int index = local.getIndex();
TypeAnalysis.java,catchType = exceptionGen.getCatchType();,if (exceptionGen != null ) catchType = exceptionGen.getCatchType();
TypeAnalysis.java,exceptionSet = exceptionSetFactory.createExceptionSet();,if (exceptionSetFactory != null ) exceptionSet = exceptionSetFactory.createExceptionSet();
TypeFrameModelingVisitor.java,Type topValue = frame.getTopValue();,if (frame != null ) Type topValue = frame.getTopValue();
TypeFrameModelingVisitor.java,int index = obj.getIndex();,if (obj != null ) int index = obj.getIndex();
TypeFrameModelingVisitor.java,Type elementType = obj.getType();,if (obj != null ) Type elementType = obj.getType();
MergeTree.java,ValueNumber valueNumber = workList.removeFirst();,if (workList != null ) ValueNumber valueNumber = workList.removeFirst();
ValueNumberAnalysis.java,valueNumber = factory.createFreshValue();,if (factory != null ) valueNumber = factory.createFreshValue();
ValueNumberCache.java,int code = handle.getPosition();,if (handle != null ) int code = handle.getPosition();
ValueNumberCache.java,code += valueNumber.hashCode();,if (valueNumber != null ) code += valueNumber.hashCode();
ValueNumberFrame.java,XField field = availableLoad.getField();,if (availableLoad != null ) XField field = availableLoad.getField();
ValueNumberFrame.java,XField field = availableLoad.getField();,if (availableLoad != null ) XField field = availableLoad.getField();
ValueNumberFrame.java,changed = !this.getAvailableLoadMap().isEmpty();,if (!this != null ) changed = !this.getAvailableLoadMap().isEmpty();
ValueNumberFrame.java,flags |= vn.getFlags();,if (vn != null ) flags |= vn.getFlags();
ValueNumberFrame.java,mergedValueList = new ArrayList<ValueNumber>(other.getNumSlots());,if (ArrayList<ValueNumber>(other != null ) mergedValueList = new ArrayList<ValueNumber>(other.getNumSlots());
ValueNumberSourceInfo.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
SuppressionDecorator.java,String s = in.readLine();,if (in != null ) String s = in.readLine();
FieldOrMethodDescriptor.java,cmp = this.name.compareTo(o.getName());,if (this != null ) cmp = this.name.compareTo(o.getName());
FieldOrMethodDescriptor.java,cmp = this.signature.compareTo(o.getSignature());,if (this != null ) cmp = this.signature.compareTo(o.getSignature());
ClassInfo.java,assert xMethods.length == result.size();,if (result != null ) assert xMethods.length == result.size();
ClassDataAnalysisEngine.java,in = codeBaseEntry.openResource();,if (codeBaseEntry != null ) in = codeBaseEntry.openResource();
ClassInfoAnalysisEngine.java,ClassInfo.Builder classInfoBuilder = new ClassInfo.Builder();,if (ClassInfo != null ) ClassInfo.Builder classInfoBuilder = new ClassInfo.Builder();
ClassParser.java,data[i] = in.readUTF();,if (in != null ) data[i] = in.readUTF();
ClassParser.java,data[i] = new Double(in.readDouble());,if (Double(in != null ) data[i] = new Double(in.readDouble());
ClassParserUsingBCEL.java,String signature = obj.getSignature(javaClass.getConstantPool());,if (obj != null ) String signature = obj.getSignature(javaClass.getConstantPool());
CFGFactory.java,CFG cfg = cfgBuilder.getCFG();,if (cfgBuilder != null ) CFG cfg = cfgBuilder.getCFG();
CFGFactory.java,changed  = changed || pruner.wasCFGModified();,if (pruner != null ) changed  = changed || pruner.wasCFGModified();
IsNullValueDataflowFactory.java,"AssertionMethods assertionMethods = getAssertionMethods(analysisCache, descriptor.getClassDescriptor());","if (descriptor != null ) AssertionMethods assertionMethods = getAssertionMethods(analysisCache, descriptor.getClassDescriptor());"
MethodBytecodeSetFactory.java,result = unpackedCode.getBytecodeSet();,if (unpackedCode != null ) result = unpackedCode.getBytecodeSet();
MethodGenFactory.java,"ConstantPoolGen cpg = getConstantPoolGen(analysisCache, descriptor.getClassDescriptor());","if (descriptor != null ) ConstantPoolGen cpg = getConstantPoolGen(analysisCache, descriptor.getClassDescriptor());"
ClassFactory.java,pathName = new File(pathName).getCanonicalPath();,if (File(pathName) != null ) pathName = new File(pathName).getCanonicalPath();
ClassPathBuilder.java,entry = loc.getPath();,if (loc != null ) entry = loc.getPath();
ClassPathBuilder.java,FilesystemCodeBaseLocator l = (FilesystemCodeBaseLocator)item.getCodeBaseLocator();,if ((FilesystemCodeBaseLocator)item != null ) FilesystemCodeBaseLocator l = (FilesystemCodeBaseLocator)item.getCodeBaseLocator();
ClassPathBuilder.java,in = manifestEntry.openResource();,if (manifestEntry != null ) in = manifestEntry.openResource();
ClassPathBuilder.java,ListIterator<WorkListItem> i = workList.listIterator();,if (workList != null ) ListIterator<WorkListItem> i = workList.listIterator();
FilesystemCodeBaseLocator.java,pathName = file.getCanonicalPath();,if (file != null ) pathName = file.getCanonicalPath();
SingleFileCodeBase.java,this.lastModifiedTime = new File(fileName).lastModified();,if (File(fileName) != null ) this.lastModifiedTime = new File(fileName).lastModified();
ZipInputStreamCodeBase.java,ze = zis.getNextEntry();,if (zis != null ) ze = zis.getNextEntry();
AbstractCloud.java,this.properties = plugin.getProperties().copy();,if (plugin != null ) this.properties = plugin.getProperties().copy();
AbstractCloud.java,UserDesignation d =	UserDesignation.valueOf(designation.getDesignationKey());,if (UserDesignation != null ) UserDesignation d =	UserDesignation.valueOf(designation.getDesignationKey());
AbstractCloud.java,UserDesignation d =	UserDesignation.valueOf(designation.getDesignationKey());,if (UserDesignation != null ) UserDesignation d =	UserDesignation.valueOf(designation.getDesignationKey());
AbstractCloud.java,UserDesignation d =	UserDesignation.valueOf(designation.getDesignationKey());,if (UserDesignation != null ) UserDesignation d =	UserDesignation.valueOf(designation.getDesignationKey());
AbstractCloud.java,ProjectStats projectStats = bugCollection.getProjectStats();,if (bugCollection != null ) ProjectStats projectStats = bugCollection.getProjectStats();
AbstractCloud.java,String result =  bd.getAnnotationText();,if (bd != null ) String result =  bd.getAnnotationText();
AbstractCloud.java,lookup = plugin.getUsernameClass().newInstance();,if (plugin != null ) lookup = plugin.getUsernameClass().newInstance();
AbstractCloud.java,int endLine = src.getEndLine();,if (src != null ) int endLine = src.getEndLine();
BugFilingCommentHelper.java,"lastLine = Math.max(lastLine, s.getEndLine());","if (s != null ) lastLine = Math.max(lastLine, s.getEndLine());"
CloudFactory.java,String cloudId = bc.getProject().getCloudId();,if (bc != null ) String cloudId = bc.getProject().getCloudId();
CloudFactory.java,Properties properties = bc.getProject().getCloudProperties();,if (bc != null ) Properties properties = bc.getProject().getCloudProperties();
DBCloud.java,ArrayList<BugDesignation> result = new ArrayList<BugDesignation>(designations.size());,if (ArrayList<BugDesignation>(designations != null ) ArrayList<BugDesignation> result = new ArrayList<BugDesignation>(designations.size());
DBCloud.java,long startTime = System.currentTimeMillis();,if (System != null ) long startTime = System.currentTimeMillis();
DBCloud.java,data.bugFiled = whenFiled.getTime();,if (whenFiled != null ) data.bugFiled = whenFiled.getTime();
DBCloud.java,String s = in.readLine();,if (in != null ) String s = in.readLine();
DBCloud.java,Timestamp date = new Timestamp(System.currentTimeMillis());,if (Timestamp(System != null ) Timestamp date = new Timestamp(System.currentTimeMillis());
DBCloud.java,BugData bug = getBugData(b.getInstanceHash());,if (getBugData(b != null ) BugData bug = getBugData(b.getInstanceHash());
DBCloud.java,ResultSet rs = insertBugData.getGeneratedKeys();,if (insertBugData != null ) ResultSet rs = insertBugData.getGeneratedKeys();
DBCloud.java,rs = query.executeQuery();,if (query != null ) rs = query.executeQuery();
DBCloud.java,BugData bd = getBugData(b.getInstanceHash());,if (getBugData(b != null ) BugData bd = getBugData(b.getInstanceHash());
DBCloud.java,bd.bugFiled = System.currentTimeMillis();,if (System != null ) bd.bugFiled = System.currentTimeMillis();
DBCloud.java,BugData data = getBugData(bug.getInstanceHash());,if (getBugData(bug != null ) BugData data = getBugData(bug.getInstanceHash());
DBCloud.java,Collection<BugDesignation> uniqueDesignations = bd.getUniqueDesignations();,if (bd != null ) Collection<BugDesignation> uniqueDesignations = bd.getUniqueDesignations();
DBCloud.java,UserDesignation designation = UserDesignation.valueOf(d.getDesignationKey());,if (UserDesignation != null ) UserDesignation designation = UserDesignation.valueOf(d.getDesignationKey());
DBCloud.java,Collection<BugDesignation> uniqueDesignations = bd.getUniqueDesignations();,if (bd != null ) Collection<BugDesignation> uniqueDesignations = bd.getUniqueDesignations();
DBCloud.java,int score = designation.score();,if (designation != null ) int score = designation.score();
DBCloud.java,Collection<BugDesignation> uniqueDesignations = bd.getUniqueDesignations();,if (bd != null ) Collection<BugDesignation> uniqueDesignations = bd.getUniqueDesignations();
DBCloud.java,UserDesignation designation = UserDesignation.valueOf(d.getDesignationKey());,if (UserDesignation != null ) UserDesignation designation = UserDesignation.valueOf(d.getDesignationKey());
DBStats.java,rs = ps.executeQuery();,if (ps != null ) rs = ps.executeQuery();
AppEngineNameLookup.java,String status = in.readLine();,if (in != null ) String status = in.readLine();
ProjectFilterSettings.java,ProjectFilterSettings clone = (ProjectFilterSettings) super.clone();,if (super != null ) ProjectFilterSettings clone = (ProjectFilterSettings) super.clone();
UserPreferences.java,Iterator<String> it = recentProjectsList.iterator();,if (recentProjectsList != null ) Iterator<String> it = recentProjectsList.iterator();
UserPreferences.java,String detectorName = factory.getShortName();,if (factory != null ) String detectorName = factory.getShortName();
UserPreferences.java,UserPreferences dup = (UserPreferences) super.clone();,if (super != null ) UserPreferences dup = (UserPreferences) super.clone();
BCPMethodReturnCheck.java,ByteCodePattern  result = localByteCodePattern.get();,if (localByteCodePattern != null ) ByteCodePattern  result = localByteCodePattern.get();
BadSyntaxForRegularExpression.java,Object topValue = top.getConstant();,if (top != null ) Object topValue = top.getConstant();
BadlyOverriddenAdapter.java,String packageName = superClass.getPackageName();,if (superClass != null ) String packageName = superClass.getPackageName();
BadlyOverriddenAdapter.java,String methodName = obj.getName();,if (obj != null ) String methodName = obj.getName();
BuildNonNullAnnotationDatabase.java,NullnessAnnotation n = NullnessAnnotation.Parser.parse(value.getClassString());,if (NullnessAnnotation != null ) NullnessAnnotation n = NullnessAnnotation.Parser.parse(value.getClassString());
BuildNonnullReturnDatabase.java,IsNullValue value = frame.getTopValue();,if (frame != null ) IsNullValue value = frame.getTopValue();
BuildUnconditionalParamDerefDatabase.java,SignatureParser parser =  new SignatureParser(method.getSignature());,if (SignatureParser(method != null ) SignatureParser parser =  new SignatureParser(method.getSignature());
BuildUnconditionalParamDerefDatabase.java,Iterator<String> paramIterator = parser.parameterSignatureIterator();,if (parser != null ) Iterator<String> paramIterator = parser.parameterSignatureIterator();
CallToUnconditionalThrower.java,InstructionHandle thrower = basicBlock.getExceptionThrower();,if (basicBlock != null ) InstructionHandle thrower = basicBlock.getExceptionThrower();
CallToUnsupportedMethod.java,ConstantPoolGen constantPoolGen = classContext.getConstantPoolGen();,if (classContext != null ) ConstantPoolGen constantPoolGen = classContext.getConstantPoolGen();
CallToUnsupportedMethod.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
CheckExpectedWarnings.java,bugCollection = bugReporter.getBugCollection();,if (bugReporter != null ) bugCollection = bugReporter.getBugCollection();
CheckTypeQualifiers.java,int size = allKnownTypeQualifiers.size();,if (allKnownTypeQualifiers != null ) int size = allKnownTypeQualifiers.size();
CheckTypeQualifiers.java,"checkLocation = ""edge "" + edge.getLabel();","if (edge != null ) checkLocation = ""edge "" + edge.getLabel();"
CheckTypeQualifiers.java,TypeQualifierValueSet backwardFact = backwardDataflow.getResultFact(edge.getTarget());,if (backwardDataflow != null ) TypeQualifierValueSet backwardFact = backwardDataflow.getResultFact(edge.getTarget());
CloneIdiom.java,isFinal = obj.isFinal();,if (obj != null ) isFinal = obj.isFinal();
CloneIdiom.java,cloneIsDeprecated = getXMethod().isDeprecated();,if (getXMethod() != null ) cloneIsDeprecated = getXMethod().isDeprecated();
ConfusionBetweenInheritedAndOuterMethod.java,String targetPackage = invokedMethod.getPackageName();,if (invokedMethod != null ) String targetPackage = invokedMethod.getPackageName();
CrossSiteScripting.java,int pc = item.getInjectionPC();,if (item != null ) int pc = item.getInjectionPC();
DontIgnoreResultOfPutIfAbsent.java,ConstantPool pool = javaClass.getConstantPool();,if (javaClass != null ) ConstantPool pool = javaClass.getConstantPool();
DontIgnoreResultOfPutIfAbsent.java,UnreadFields unreadFields = AnalysisContext.currentAnalysisContext().getUnreadFields();,if (AnalysisContext != null ) UnreadFields unreadFields = AnalysisContext.currentAnalysisContext().getUnreadFields();
DontIgnoreResultOfPutIfAbsent.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
DontIgnoreResultOfPutIfAbsent.java,ConstantPoolGen cpg = classContext.getConstantPoolGen();,if (classContext != null ) ConstantPoolGen cpg = classContext.getConstantPoolGen();
DontIgnoreResultOfPutIfAbsent.java,String sourceFileName = javaClass.getSourceFileName();,if (javaClass != null ) String sourceFileName = javaClass.getSourceFileName();
DontIgnoreResultOfPutIfAbsent.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
DontIgnoreResultOfPutIfAbsent.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
DontIgnoreResultOfPutIfAbsent.java,int locals = vna.getNumLocals();,if (vna != null ) int locals = vna.getNumLocals();
DroppedException.java,byte[] code = obj.getCode();,if (obj != null ) byte[] code = obj.getCode();
DroppedException.java,int end = aExp.getEndPC();,if (aExp != null ) int end = aExp.getEndPC();
DroppedException.java,int line = entries[i].getLineNumber();,if (entries[i] != null ) int line = entries[i].getLineNumber();
DroppedException.java,int startLine = srcLine.getStartLine();,if (srcLine != null ) int startLine = srcLine.getStartLine();
DroppedException.java,int kind = token.getKind();,if (token != null ) int kind = token.getKind();
DumbMethodInvocations.java,String sourceFile = classContext.getJavaClass().getSourceFileName();,if (classContext != null ) String sourceFile = classContext.getJavaClass().getSourceFileName();
DumbMethodInvocations.java,Constant operandValue = frame.getTopValue();,if (frame != null ) Constant operandValue = frame.getTopValue();
DumbMethodInvocations.java,int v = operandValue.getConstantInt();,if (operandValue != null ) int v = operandValue.getConstantInt();
DumbMethodInvocations.java,Constant operandValue = frame.getTopValue();,if (frame != null ) Constant operandValue = frame.getTopValue();
DumbMethodInvocations.java,String v = operandValue.getConstantString();,if (operandValue != null ) String v = operandValue.getConstantString();
DumbMethods.java,String superclassName = obj.getSuperclassName();,if (obj != null ) String superclassName = obj.getSuperclassName();
DumbMethods.java,this.exceptionTable = code.getExceptionTable();,if (code != null ) this.exceptionTable = code.getExceptionTable();
DumbMethods.java,Object constantValue = top.getConstant();,if (top != null ) Object constantValue = top.getConstant();
DumbMethods.java,Object rhsConstant = rhs.getConstant();,if (rhs != null ) Object rhsConstant = rhs.getConstant();
DumbMethods.java,Object lhsConstant = lhs.getConstant();,if (lhs != null ) Object lhsConstant = lhs.getConstant();
DumbMethods.java,Object rhsConstant = rhs.getConstant();,if (rhs != null ) Object rhsConstant = rhs.getConstant();
DumbMethods.java,Object lhsConstant = lhs.getConstant();,if (lhs != null ) Object lhsConstant = lhs.getConstant();
DumbMethods.java,Object value = item.getConstant();,if (item != null ) Object value = item.getConstant();
DumbMethods.java,int majorVersion = getThisClass().getMajor();,if (getThisClass() != null ) int majorVersion = getThisClass().getMajor();
DumbMethods.java,Object value = top.getConstant();,if (top != null ) Object value = top.getConstant();
DumbMethods.java,String bigDecimalString = new BigDecimal(arg).toString();,if (BigDecimal(arg) != null ) String bigDecimalString = new BigDecimal(arg).toString();
DuplicateBranches.java,InstructionHandle ih = bb.getFirstInstruction();,if (bb != null ) InstructionHandle ih = bb.getFirstInstruction();
DuplicateBranches.java,Edge e = iei.next();,if (iei != null ) Edge e = iei.next();
DuplicateBranches.java,"InstructionHandle prevIns = firstIns.getPrev(); // prev in bytecode, not flow","if (flow != null ) InstructionHandle prevIns = firstIns.getPrev(); // prev in bytecode, not flow"
DuplicateBranches.java,int offset = bi.getIndex();,if (bi != null ) int offset = bi.getIndex();
DuplicateBranches.java,inst = thenBB.getFirstInstruction();,if (thenBB != null ) inst = thenBB.getFirstInstruction();
DuplicateBranches.java,inst = inst.getNext();,if (inst != null ) inst = inst.getNext();
EqualsOperandShouldHaveClassCompatibleWithThis.java,ClassDescriptor c = DescriptorFactory.createClassDescriptorFromSignature(item.getSignature());,if (DescriptorFactory != null ) ClassDescriptor c = DescriptorFactory.createClassDescriptorFromSignature(item.getSignature());
EqualsOperandShouldHaveClassCompatibleWithThis.java,Object value = item.getConstant();,if (item != null ) Object value = item.getConstant();
FieldItemSummary.java,AnalysisContext context = AnalysisContext.currentAnalysisContext();,if (AnalysisContext != null ) AnalysisContext context = AnalysisContext.currentAnalysisContext();
FieldItemSummary.java,int args = PreorderVisitor.getNumberArguments(m.getSignature());,if (PreorderVisitor != null ) int args = PreorderVisitor.getNumberArguments(m.getSignature());
FindBadCast2.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
FindBadCast2.java,LineNumberTable lineNumberTable = methodGen.getLineNumberTable(methodGen.getConstantPool());,if (methodGen != null ) LineNumberTable lineNumberTable = methodGen.getLineNumberTable(methodGen.getConstantPool());
FindBadCast2.java,IsNullValue operandNullness = nullFrame.getTopValue();,if (nullFrame != null ) IsNullValue operandNullness = nullFrame.getTopValue();
FindBadForLoop.java,lineNumbers = obj.getLineNumberTable();,if (obj != null ) lineNumbers = obj.getLineNumberTable();
FindBugsSummaryStats.java,linesNCSS += lines.cardinality();,if (lines != null ) linesNCSS += lines.cardinality();
FindBugsSummaryStats.java,int line = obj.getLineNumber();,if (obj != null ) int line = obj.getLineNumber();
FindCircularDependencies.java,Set<String> dependencies = it.next();,if (it != null ) Set<String> dependencies = it.next();
FindCircularDependencies.java,foundClass = dependencyGraph.containsKey(dit.next());,if (dependencyGraph != null ) foundClass = dependencyGraph.containsKey(dit.next());
FindCircularDependencies.java,String clsName = cIt.next();,if (cIt != null ) String clsName = cIt.next();
FindDeadLocalStores.java,Instruction prevIns = prevInsHandle.getInstruction();,if (prevInsHandle != null ) Instruction prevIns = prevInsHandle.getInstruction();
FindDeadLocalStores.java,ConstantPoolGen cpg = methodGen.getConstantPool();,if (methodGen != null ) ConstantPoolGen cpg = methodGen.getConstantPool();
FindDeadLocalStores.java,Type t = ldc.getType(methodGen.getConstantPool());,if (ldc != null ) Type t = ldc.getType(methodGen.getConstantPool());
FindDeadLocalStores.java,prevOpCode = prev.getInstruction().getOpcode();,if (prev != null ) prevOpCode = prev.getInstruction().getOpcode();
FindDeadLocalStores.java,String signatureOfValue = typeOfValue.getSignature();,if (typeOfValue != null ) String signatureOfValue = typeOfValue.getSignature();
FindDeadLocalStores.java,String localName = lv.getName();,if (lv != null ) String localName = lv.getName();
FindHEmismatch.java,Code code = obj.getCode();,if (obj != null ) Code code = obj.getCode();
FindHEmismatch.java,byte[] codeBytes = code.getCode();,if (code != null ) byte[] codeBytes = code.getCode();
FindInconsistentSync2.java,ArrayList<SourceLineAnnotation> result = new ArrayList<SourceLineAnnotation>(c.size());,if (ArrayList<SourceLineAnnotation>(c != null ) ArrayList<SourceLineAnnotation> result = new ArrayList<SourceLineAnnotation>(c.size());
FindInconsistentSync2.java,Instruction ins = location.getHandle().getInstruction();,if (location != null ) Instruction ins = location.getHandle().getInstruction();
FindInconsistentSync2.java,xfield = access.getField();,if (access != null ) xfield = access.getField();
FindInconsistentSync2.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
FindInconsistentSync2.java,InstructionHandle ih = it.next();,if (it != null ) InstructionHandle ih = it.next();
FindInconsistentSync2.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
FindInconsistentSync2.java,Method[] methodList = javaClass.getMethods();,if (javaClass != null ) Method[] methodList = javaClass.getMethods();
FindInconsistentSync2.java,CallGraph callGraph = selfCalls.getCallGraph();,if (selfCalls != null ) CallGraph callGraph = selfCalls.getCallGraph();
FindInconsistentSync2.java,CallSite callSite = edge.getCallSite();,if (edge != null ) CallSite callSite = edge.getCallSite();
FindInconsistentSync2.java,CallGraphNode target = edge.getTarget();,if (edge != null ) CallGraphNode target = edge.getTarget();
FindJSR166LockMonitorenter.java,ClassDescriptor classDescriptor = DescriptorFactory.createClassDescriptorFromSignature(type.getSignature());,if (DescriptorFactory != null ) ClassDescriptor classDescriptor = DescriptorFactory.createClassDescriptorFromSignature(type.getSignature());
FindMaskedFields.java,staticMethod = obj.isStatic();,if (obj != null ) staticMethod = obj.isStatic();
FindMaskedFields.java,int priority = bug.getPriority();,if (bug != null ) int priority = bug.getPriority();
FindMismatchedWaitOrNotify.java,String sourceFile = classContext.getJavaClass().getSourceFileName();,if (classContext != null ) String sourceFile = classContext.getJavaClass().getSourceFileName();
FindNonSerializableStoreIntoSession.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
FindNonSerializableValuePassedToWriteObject.java,int pc = handle.getPosition();,if (handle != null ) int pc = handle.getPosition();
FindNullDeref.java,ValueNumber valueNumber = vnaFrame.getTopValue();,if (vnaFrame != null ) ValueNumber valueNumber = vnaFrame.getTopValue();
FindNullDeref.java,int pc = location.getHandle().getPosition();,if (location != null ) int pc = location.getHandle().getPosition();
FindNullDeref.java,String methodSig = method.getSignature();,if (method != null ) String methodSig = method.getSignature();
FindNullDeref.java,int startLine = sourceLineAnnotation.getStartLine();,if (sourceLineAnnotation != null ) int startLine = sourceLineAnnotation.getStartLine();
FindPuzzlers.java,int reg = item.getRegisterNumber();,if (item != null ) int reg = item.getRegisterNumber();
FindPuzzlers.java,constant = lhs.getConstant();,if (lhs != null ) constant = lhs.getConstant();
FindRefComparison.java,byte bType = bRef.getType();,if (bRef != null ) byte bType = bRef.getType();
FindRefComparison.java,Instruction ins = location.getHandle().getInstruction();,if (location != null ) Instruction ins = location.getHandle().getInstruction();
FindRefComparison.java,int priority = warn.instance.getPriority();,if (warn != null ) int priority = warn.instance.getPriority();
FindRefComparison.java,int priority = warn.instance.getPriority();,if (warn != null ) int priority = warn.instance.getPriority();
FindRefComparison.java,String lhs = SignatureConverter.convert(lhsType.getSignature());,if (SignatureConverter != null ) String lhs = SignatureConverter.convert(lhsType.getSignature());
FindRefComparison.java,String sourceFile = jclass.getSourceFileName();,if (jclass != null ) String sourceFile = jclass.getSourceFileName();
FindRefComparison.java,INVOKESTATIC is = (INVOKESTATIC) next.getInstruction();,if (next != null ) INVOKESTATIC is = (INVOKESTATIC) next.getInstruction();
FindSelfComparison2.java,String sourceFile = classContext.getJavaClass().getSourceFileName();,if (classContext != null ) String sourceFile = classContext.getJavaClass().getSourceFileName();
FindSqlInjection.java,Type operandType = frame.getTopValue();,if (frame != null ) Type operandType = frame.getTopValue();
FindSqlInjection.java,handle = handle.getPrev();,if (handle != null ) handle = handle.getPrev();
FindSqlInjection.java,InstructionHandle lastInstruction = block.getLastInstruction();,if (block != null ) InstructionHandle lastInstruction = block.getLastInstruction();
FindSqlInjection.java,Instruction instruction = handle.getInstruction();,if (handle != null ) Instruction instruction = handle.getInstruction();
FindSqlInjection.java,Instruction ins = location.getHandle().getInstruction();,if (location != null ) Instruction ins = location.getHandle().getInstruction();
FindTwoLockWait.java,int count = dataflow.getFactAtLocation(location).getNumLockedObjects();,if (dataflow != null ) int count = dataflow.getFactAtLocation(location).getNumLockedObjects();
FindUnrelatedTypesInGenericContainer.java,Method[] methodList = javaClass.getMethods();,if (javaClass != null ) Method[] methodList = javaClass.getMethods();
FindUnrelatedTypesInGenericContainer.java,String sig = xclass.getSourceSignature();,if (xclass != null ) String sig = xclass.getSourceSignature();
FindUnrelatedTypesInGenericContainer.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
FindUnrelatedTypesInGenericContainer.java,InstructionHandle next = handle.getNext();,if (handle != null ) InstructionHandle next = handle.getNext();
FindUnrelatedTypesInGenericContainer.java,Instruction nextIns = next.getInstruction();,if (next != null ) Instruction nextIns = next.getInstruction();
FindUnrelatedTypesInGenericContainer.java,InstructionHandle next = handle.getNext();,if (handle != null ) InstructionHandle next = handle.getNext();
FindUnrelatedTypesInGenericContainer.java,ValueNumber top = vnAfter.getTopValue();,if (vnAfter != null ) ValueNumber top = vnAfter.getTopValue();
FindUnrelatedTypesInGenericContainer.java,ClassSummary classSummary = AnalysisContext.currentAnalysisContext().getClassSummary();,if (AnalysisContext != null ) ClassSummary classSummary = AnalysisContext.currentAnalysisContext().getClassSummary();
FindUnreleasedLock.java,InstructionHandle nextInstruction = handle.getNext();,if (handle != null ) InstructionHandle nextInstruction = handle.getNext();
FindUnsatisfiedObligation.java,IAnalysisCache analysisCache = Global.getAnalysisCache();,if (Global != null ) IAnalysisCache analysisCache = Global.getAnalysisCache();
FindUnsatisfiedObligation.java,short opcode = ins.getOpcode();,if (ins != null ) short opcode = ins.getOpcode();
FindUnsatisfiedObligation.java,Type tosType = typeFrame.getTopValue();,if (typeFrame != null ) Type tosType = typeFrame.getTopValue();
FindUnsyncGet.java,String sig = obj.getSignature();,if (obj != null ) String sig = obj.getSignature();
FindUselessControlFlow.java,int thisLine = ln.getLineNumber();,if (ln != null ) int thisLine = ln.getLineNumber();
FormatStringChecker.java,signatures[i] = arguments[i].getSignature();,if (arguments[i] != null ) signatures[i] = arguments[i].getSignature();
HugeSharedStringConstants.java,String className = field.getClassName();,if (field != null ) String className = field.getClassName();
InefficientMemberAccess.java,clsName = cls.getClassName();,if (cls != null ) clsName = cls.getClassName();
InfiniteLoop.java,numLastUpdates = stack.getNumLastUpdates();,if (stack != null ) numLastUpdates = stack.getNumLastUpdates();
InfiniteLoop.java,int loopTopLine = loopTop.getStartLine();,if (loopTop != null ) int loopTopLine = loopTop.getStartLine();
InfiniteLoop.java,LocalVariableAnnotation lv = bug.getPrimaryLocalVariableAnnotation();,if (bug != null ) LocalVariableAnnotation lv = bug.getPrimaryLocalVariableAnnotation();
InfiniteRecursiveLoop2.java,InstructionHandle thrower = basicBlock.getExceptionThrower();,if (basicBlock != null ) InstructionHandle thrower = basicBlock.getExceptionThrower();
InfiniteRecursiveLoop2.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
InheritanceUnsafeGetResource.java,String myPackagename = getThisClass().getPackageName();,if (getThisClass() != null ) String myPackagename = getThisClass().getPackageName();
InstantiateStaticClass.java,ClassDescriptor superclassDescriptor = xClass.getSuperclassDescriptor();,if (xClass != null ) ClassDescriptor superclassDescriptor = xClass.getSuperclassDescriptor();
InstantiateStaticClass.java,String superClassName = superclassDescriptor.getClassName();,if (superclassDescriptor != null ) String superClassName = superclassDescriptor.getClassName();
InvalidJUnitTest.java,ClassDescriptor  sDesc = jClass.getSuperclassDescriptor();,if (jClass != null ) ClassDescriptor  sDesc = jClass.getSuperclassDescriptor();
InvalidJUnitTest.java,String sName = sDesc.getClassName();,if (sDesc != null ) String sName = sDesc.getClassName();
InvalidJUnitTest.java,Method[] methods = jClass.getMethods();,if (jClass != null ) Method[] methods = jClass.getMethods();
InvalidJUnitTest.java,Code superCode = superMethod.getCode();,if (superMethod != null ) Code superCode = superMethod.getCode();
LazyInit.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
LoadOfKnownNullValue.java,int sourceLine = lineNumbers.getSourceLine(handle.getPosition());,if (lineNumbers != null ) int sourceLine = lineNumbers.getSourceLine(handle.getPosition());
LoadOfKnownNullValue.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
LoadOfKnownNullValue.java,Instruction next = handle.getNext().getInstruction();,if (handle != null ) Instruction next = handle.getNext().getInstruction();
LoadOfKnownNullValue.java,int startLine = sourceLineAnnotation.getStartLine();,if (sourceLineAnnotation != null ) int startLine = sourceLineAnnotation.getStartLine();
LockedFields.java,int flags = obj.getAccessFlags();,if (obj != null ) int flags = obj.getAccessFlags();
MultithreadedInstanceAccess.java,JavaClass cls = classContext.getJavaClass();,if (classContext != null ) JavaClass cls = classContext.getJavaClass();
MultithreadedInstanceAccess.java,int nameAndTypeIdx = fieldRef.getNameAndTypeIndex();,if (fieldRef != null ) int nameAndTypeIdx = fieldRef.getNameAndTypeIndex();
MutableStaticFields.java,int flags = obj.getAccessFlags();,if (obj != null ) int flags = obj.getAccessFlags();
MutableStaticFields.java,for(Iterator i = unsafeValue.iterator(); i.hasNext(); ) {,if ({ != null ) for(Iterator i = unsafeValue.iterator(); i.hasNext(); ) {
Naming.java,byte[] codeBytes = code.getCode();,if (code != null ) byte[] codeBytes = code.getCode();
Noise.java,priority = hq.getPriority();,if (hq != null ) priority = hq.getPriority();
Noise.java,priority = hq.getPriority();,if (hq != null ) priority = hq.getPriority();
Noise.java,priority = hq.getPriority();,if (hq != null ) priority = hq.getPriority();
NoiseNullDeref.java,Method[] methodList = jclass.getMethods();,if (jclass != null ) Method[] methodList = jclass.getMethods();
NoiseNullDeref.java,Instruction ins = location.getHandle().getInstruction();,if (location != null ) Instruction ins = location.getHandle().getInstruction();
NumberConstructor.java,int majorVersion = classContext.getJavaClass().getMajor();,if (classContext != null ) int majorVersion = classContext.getJavaClass().getMajor();
OverridingEqualsNotSymmetrical.java,equalsKindSummary = AnalysisContext.currentAnalysisContext().getEqualsKindSummary();,if (AnalysisContext != null ) equalsKindSummary = AnalysisContext.currentAnalysisContext().getEqualsKindSummary();
OverridingEqualsNotSymmetrical.java,XMethod leftM = left.getReturnValueOf();,if (left != null ) XMethod leftM = left.getReturnValueOf();
OverridingEqualsNotSymmetrical.java,ClassAnnotation parentClass = ClassAnnotation.fromClassDescriptor(e.getKey());,if (ClassAnnotation != null ) ClassAnnotation parentClass = ClassAnnotation.fromClassDescriptor(e.getKey());
OverridingEqualsNotSymmetrical.java,ClassAnnotation parentClass = ClassAnnotation.fromClassDescriptor(e.getKey());,if (ClassAnnotation != null ) ClassAnnotation parentClass = ClassAnnotation.fromClassDescriptor(e.getKey());
ReadOfInstanceFieldInMethodInvokedByConstructorInSuperclass.java,FieldSummary fieldSummary = AnalysisContext.currentAnalysisContext().getFieldSummary();,if (AnalysisContext != null ) FieldSummary fieldSummary = AnalysisContext.currentAnalysisContext().getFieldSummary();
ResolveAllReferences.java,ConstantPool cp = obj.getConstantPool();,if (obj != null ) ConstantPool cp = obj.getConstantPool();
RuntimeExceptionCapture.java,int type = obj.getCatchType();,if (obj != null ) int type = obj.getCatchType();
RuntimeExceptionCapture.java,String signature = item.getSignature();,if (item != null ) String signature = item.getSignature();
SerializableIdiom.java,String superClassname = obj.getSuperclassName();,if (obj != null ) String superClassname = obj.getSuperclassName();
SerializableIdiom.java,int flags = obj.getAccessFlags();,if (obj != null ) int flags = obj.getAccessFlags();
SerializableIdiom.java,double isSerializable = DeepSubtypeAnalysis.isDeepSerializable(fieldX.getSignature());,if (DeepSubtypeAnalysis != null ) double isSerializable = DeepSubtypeAnalysis.isDeepSerializable(fieldX.getSignature());
SerializableIdiom.java,boolean isPutOfDefaultValue = first.isNull(); // huh?? || first.isInitialParameter();,if (first != null ) boolean isPutOfDefaultValue = first.isNull(); // huh?? || first.isInitialParameter();
SerializableIdiom.java,String fieldSig = summary.getSignature();,if (summary != null ) String fieldSig = summary.getSignature();
SuperfluousInstanceOf.java,varTable = obj.getLocalVariableTable();,if (obj != null ) varTable = obj.getLocalVariableTable();
SuperfluousInstanceOf.java,String objSignature = lv.getSignature();,if (lv != null ) String objSignature = lv.getSignature();
SynchronizationOnSharedBuiltinConstant.java,FieldSummary fieldSummary = AnalysisContext.currentAnalysisContext().getFieldSummary();,if (AnalysisContext != null ) FieldSummary fieldSummary = AnalysisContext.currentAnalysisContext().getFieldSummary();
TestDataflowAnalysis.java,PluginLoader pluginLoader = plugin.getPluginLoader();,if (plugin != null ) PluginLoader pluginLoader = plugin.getPluginLoader();
TestingGround.java,XMethod m =  item.getReturnValueOf();,if (item != null ) XMethod m =  item.getReturnValueOf();
TestingGround2.java,Object value = top.getConstant();,if (top != null ) Object value = top.getConstant();
TestingGround2.java,String bigDecimalString = new BigDecimal(arg).toString();,if (BigDecimal(arg) != null ) String bigDecimalString = new BigDecimal(arg).toString();
TrainFieldStoreTypes.java,short opcode = ins.getOpcode();,if (ins != null ) short opcode = ins.getOpcode();
TrainLongInstantfParams.java,LocalVariableTable t = obj.getLocalVariableTable();,if (obj != null ) LocalVariableTable t = obj.getLocalVariableTable();
UncallableMethodOfAnonymousClass.java,boolean hasAnonymousName = ClassName.isAnonymous(obj.getClassName());,if (ClassName != null ) boolean hasAnonymousName = ClassName.isAnonymous(obj.getClassName());
UncallableMethodOfAnonymousClass.java,"String key = m.getName() + "":"" + m.getSignature();","if (m != null ) String key = m.getName() + "":"" + m.getSignature();"
UncallableMethodOfAnonymousClass.java,JavaClass superClass = clazz.getSuperClass();,if (clazz != null ) JavaClass superClass = clazz.getSuperClass();
UncallableMethodOfAnonymousClass.java,"String key = obj.getName() + "":"" + obj.getSignature();","if (obj != null ) String key = obj.getName() + "":"" + obj.getSignature();"
UnreadFields.java,AnalysisContext context = AnalysisContext.currentAnalysisContext();,if (AnalysisContext != null ) AnalysisContext context = AnalysisContext.currentAnalysisContext();
UnreadFields.java,String superClass = obj.getSuperclassName();,if (obj != null ) String superClass = obj.getSuperclassName();
UnreadFields.java,XField f = item.getXField();,if (item != null ) XField f = item.getXField();
UnreadFields.java,HashSet<XField> unknownAnotationAndUnwritten = new HashSet<XField>(unknownAnnotation.keySet());,if (HashSet<XField>(unknownAnnotation != null ) HashSet<XField> unknownAnotationAndUnwritten = new HashSet<XField>(unknownAnnotation.keySet());
UselessSubclassMethod.java,JavaClass cls = classContext.getJavaClass();,if (classContext != null ) JavaClass cls = classContext.getJavaClass();
UselessSubclassMethod.java,interfaces = cls.getAllInterfaces();,if (cls != null ) interfaces = cls.getAllInterfaces();
UselessSubclassMethod.java,String curDetail = obj.getName() + obj.getSignature();,if (obj != null ) String curDetail = obj.getName() + obj.getSignature();
UselessSubclassMethod.java,Method[] methods = superClass.getMethods();,if (superClass != null ) Method[] methods = superClass.getMethods();
UselessSubclassMethod.java,subArgs = Type.getArgumentTypes(subclassMethod.getSignature());,if (Type != null ) subArgs = Type.getArgumentTypes(subclassMethod.getSignature());
UselessSubclassMethod.java,Type[] superArgs = Type.getArgumentTypes(m.getSignature());,if (Type != null ) Type[] superArgs = Type.getArgumentTypes(m.getSignature());
Filter.java,Element child = (Element) j.next();,if (j != null ) Element child = (Element) j.next();
LocalMatcher.java,LocalVariableAnnotation localAnnotation = bugInstance.getPrimaryLocalVariableAnnotation();,if (bugInstance != null ) LocalVariableAnnotation localAnnotation = bugInstance.getPrimaryLocalVariableAnnotation();
SignatureUtil.java,String param = typeToSignature(tok.nextToken());,if (typeToSignature(tok != null ) String param = typeToSignature(tok.nextToken());
AbstractVertex.java,EdgeType next = cur.getNextIncomingEdge();,if (cur != null ) EdgeType next = cur.getNextIncomingEdge();
AbstractVertex.java,EdgeType next = cur.getNextOutgoingEdge();,if (cur != null ) EdgeType next = cur.getNextOutgoingEdge();
StronglyConnectedComponents.java,Iterator<VertexType> i = transpose.vertexIterator();,if (transpose != null ) Iterator<VertexType> i = transpose.vertexIterator();
JAIFParser.java,t = scanner.nextToken();,if (scanner != null ) t = scanner.nextToken();
JAIFParser.java,t = scanner.nextToken();,if (scanner != null ) t = scanner.nextToken();
JAIFScanner.java,lineBuf = lineBuf.substring(lexeme.length());,if (lineBuf != null ) lineBuf = lineBuf.substring(lexeme.length());
LaunchGUI.java,FindBugsLayoutManagerFactory factory = new FindBugsLayoutManagerFactory(SplitLayout.class.getName());,if (FindBugsLayoutManagerFactory(SplitLayout != null ) FindBugsLayoutManagerFactory factory = new FindBugsLayoutManagerFactory(SplitLayout.class.getName());
Profiler.java,long oldMax = maxTime.get();,if (maxTime != null ) long oldMax = maxTime.get();
Profiler.java,int callCount = p.totalCalls.get();,if (p != null ) int callCount = p.totalCalls.get();
GenerateUIDs.java,"XMLWriter xmlWriter = new XMLWriter(out, OutputFormat.createPrettyPrint());","if (OutputFormat != null ) XMLWriter xmlWriter = new XMLWriter(out, OutputFormat.createPrettyPrint());"
ClassFeatureSet.java,this.className = javaClass.getClassName();,if (javaClass != null ) this.className = javaClass.getClassName();
RegenerateClassFeatures.java,ZipEntry entry = entries.nextElement();,if (entries != null ) ZipEntry entry = entries.nextElement();
WarningPropertySet.java,int priority = computePriority(bugInstance.getPriority());,if (computePriority(bugInstance != null ) int priority = computePriority(bugInstance.getPriority());
WarningPropertySet.java,Object attribute = entry.getValue();,if (entry != null ) Object attribute = entry.getValue();
WarningPropertyUtil.java,Instruction ins = location.getHandle().getInstruction();,if (location != null ) Instruction ins = location.getHandle().getInstruction();
WarningPropertyUtil.java,"Type type = frame.getInstance(ins, classContext.getConstantPoolGen());","if (classContext != null ) Type type = frame.getInstance(ins, classContext.getConstantPoolGen());"
ClassPathUtil.java,String t = tok.nextToken();,if (tok != null ) String t = tok.nextToken();
ClassPathUtil.java,Matcher m = codeBaseNamePattern.matcher(f.getName());,if (codeBaseNamePattern != null ) Matcher m = codeBaseNamePattern.matcher(f.getName());
TopologicalSort.java,Profiler profile = Global.getAnalysisCache().getProfiler();,if (Global != null ) Profiler profile = Global.getAnalysisCache().getProfiler();
TopologicalSort.java,this.result = new ArrayList<E>(consider.size());,if (ArrayList<E>(consider != null ) this.result = new ArrayList<E>(consider.size());
TopologicalSort.java,ArrayList<E> doFirst = new ArrayList<E>(consider.size());,if (ArrayList<E>(consider != null ) ArrayList<E> doFirst = new ArrayList<E>(consider.size());
TopologicalSort.java,ArrayList<E> doLast = new ArrayList<E>(consider.size());,if (ArrayList<E>(consider != null ) ArrayList<E> doLast = new ArrayList<E>(consider.size());
AnnotationVisitor.java,char tag = (char) bytes.readUnsignedByte();,if (bytes != null ) char tag = (char) bytes.readUnsignedByte();
AnnotationVisitor.java,int sz = bytes.readUnsignedShort();,if (bytes != null ) int sz = bytes.readUnsignedShort();
AnnotationVisitor.java,boolean runtimeVisible = ae.isRuntimeVisible();,if (ae != null ) boolean runtimeVisible = ae.isRuntimeVisible();
AnnotationVisitor.java,String name = ClassName.fromFieldSignature(ae.getAnnotationType());,if (ClassName != null ) String name = ClassName.fromFieldSignature(ae.getAnnotationType());
AnnotationVisitor.java,boolean runtimeVisible = ae.isRuntimeVisible();,if (ae != null ) boolean runtimeVisible = ae.isRuntimeVisible();
AnnotationVisitor.java,String name = ClassName.fromFieldSignature(ae.getAnnotationType());,if (ClassName != null ) String name = ClassName.fromFieldSignature(ae.getAnnotationType());
DismantleBytecode.java,refConstantOperand = ref.toString();,if (ref != null ) refConstantOperand = ref.toString();
DismantleBytecode.java,defaultSwitchOffset = byteStream.readInt();,if (byteStream != null ) defaultSwitchOffset = byteStream.readInt();
DismantleBytecode.java,int npairs = byteStream.readInt();,if (byteStream != null ) int npairs = byteStream.readInt();
DismantleBytecode.java,opcode = byteStream.readUnsignedByte();,if (byteStream != null ) opcode = byteStream.readUnsignedByte();
DismantleBytecode.java,intConstant = byteStream.readShort();,if (byteStream != null ) intConstant = byteStream.readShort();
DismantleBytecode.java,v = byteStream.readUnsignedByte();,if (byteStream != null ) v = byteStream.readUnsignedByte();
DismantleBytecode.java,sigConstantOperand = getStringFromIndex(sig.getSignatureIndex());,if (getStringFromIndex(sig != null ) sigConstantOperand = getStringFromIndex(sig.getSignatureIndex());
PreorderVisitor.java,int startPC = catchBlock.getStartPC();,if (catchBlock != null ) int startPC = catchBlock.getStartPC();
PreorderVisitor.java,int endPC = catchBlock.getEndPC();,if (catchBlock != null ) int endPC = catchBlock.getEndPC();
PreorderVisitor.java,Constant kind = constantPool.getConstant(catchBlock.getCatchType());,if (constantPool != null ) Constant kind = constantPool.getConstant(catchBlock.getCatchType());
PreorderVisitor.java,Attribute[] attributes = method.getAttributes();,if (method != null ) Attribute[] attributes = method.getAttributes();
PreorderVisitor.java,Field[] fields = obj.getFields();,if (obj != null ) Field[] fields = obj.getFields();
PreorderVisitor.java,Method[] methods = obj.getMethods();,if (obj != null ) Method[] methods = obj.getMethods();
PreorderVisitor.java,Attribute[] attributes = obj.getAttributes();,if (obj != null ) Attribute[] attributes = obj.getAttributes();
PreorderVisitor.java,sourceFile = obj.getSourceFileName();,if (obj != null ) sourceFile = obj.getSourceFileName();
Util.java,Constant catchType = constantPool.getConstant(catchBlock.getCatchType());,if (constantPool != null ) Constant catchType = constantPool.getConstant(catchBlock.getCatchType());
Util.java,int startPC = catchBlock.getStartPC();,if (catchBlock != null ) int startPC = catchBlock.getStartPC();
Util.java,int endPC = catchBlock.getEndPC();,if (catchBlock != null ) int endPC = catchBlock.getEndPC();
Util.java,Constant catchType = constantPool.getConstant(catchBlock.getCatchType());,if (constantPool != null ) Constant catchType = constantPool.getConstant(catchBlock.getCatchType());
Util.java,int startPC = catchBlock.getStartPC();,if (catchBlock != null ) int startPC = catchBlock.getStartPC();
Util.java,int endPC = catchBlock.getEndPC();,if (catchBlock != null ) int endPC = catchBlock.getEndPC();
Util.java,LineNumberTable lineNumberTable = code.getLineNumberTable();,if (code != null ) LineNumberTable lineNumberTable = code.getLineNumberTable();
BugHistory.java,SortedBugCollection resultCollection = originator.duplicate();,if (originator != null ) SortedBugCollection resultCollection = originator.duplicate();
BugHistory.java,csvRecord = csvRecord.trim();,if (csvRecord != null ) csvRecord = csvRecord.trim();
Churn.java,final long lastVersion = bug.getLastVersion();,if (bug != null ) final long lastVersion = bug.getLastVersion();
Churn.java,long first = bugInstance.getFirstVersion();,if (bugInstance != null ) long first = bugInstance.getFirstVersion();
CloudSyncAndReport.java,Cloud cloud = bugCollection.getCloud();,if (bugCollection != null ) Cloud cloud = bugCollection.getCloud();
CopyBuggySource.java,String path = parent.getPath();,if (parent != null ) String path = parent.getPath();
DefectDensity.java,ProjectStats stats = origCollection.getProjectStats();,if (origCollection != null ) ProjectStats stats = origCollection.getProjectStats();
DefectDensity.java,"double projectDensity = density(stats.getTotalBugs(),  stats.getCodeSize());","if (stats != null ) double projectDensity = density(stats.getTotalBugs(),  stats.getCodeSize());"
DefectDensity.java,"double packageDensity = density( p.getTotalBugs(),p.size());","if (p != null ) double packageDensity = density( p.getTotalBugs(),p.size());"
DefectDensity.java,"double density = density( c.getTotalBugs(), c.size());","if (c != null ) double density = density( c.getTotalBugs(), c.size());"
FileBugHash.java,String path = cStat.getName();,if (cStat != null ) String path = cStat.getName();
FileBugHash.java,path = cStat.getSourceFile();,if (cStat != null ) path = cStat.getSourceFile();
FileBugHash.java,SourceLineAnnotation source = bug.getPrimarySourceLineAnnotation();,if (bug != null ) SourceLineAnnotation source = bug.getPrimarySourceLineAnnotation();
FileBugHash.java,key = source.getSourceFile();,if (source != null ) key = source.getSourceFile();
FileBugHash.java,"key = packagePath + ""/"" + source.getSourceFile();","if (source != null ) key = packagePath + ""/"" + source.getSourceFile();"
Filter.java,long lastSeen = bug.getLastVersion();,if (bug != null ) long lastSeen = bug.getLastVersion();
Filter.java,BugPattern thisBugPattern = bug.getBugPattern();,if (bug != null ) BugPattern thisBugPattern = bug.getBugPattern();
Filter.java,String name = resultCollection.getAppVersionFromSequenceNumber(trimToVersion).getReleaseName();,if (resultCollection != null ) String name = resultCollection.getAppVersionFromSequenceNumber(trimToVersion).getReleaseName();
Filter.java,Iterator<ClassStats> i = stats.getClassStats().iterator();,if (stats != null ) Iterator<ClassStats> i = stats.getClassStats().iterator();
ListBugDatabaseInfo.java,AppVersion appVersion = origCollection.getCurrentAppVersion();,if (origCollection != null ) AppVersion appVersion = origCollection.getCurrentAppVersion();
MineBugHistory.java,int padLen = width - s.length();,if (s != null ) int padLen = width - s.length();
MineBugHistory.java,AppVersion appVersion = sequenceToAppVersionMap.get(version.getSequence());,if (sequenceToAppVersionMap != null ) AppVersion appVersion = sequenceToAppVersionMap.get(version.getSequence());
ObfuscateBugs.java,SortedBugCollection results = bugCollection.createEmptyCollectionWithMetadata();,if (bugCollection != null ) SortedBugCollection results = bugCollection.createEmptyCollectionWithMetadata();
RebornIssues.java,List<BugInstance> lst = map.get(b.getInstanceHash());,if (map != null ) List<BugInstance> lst = map.get(b.getInstanceHash());
RecursiveSearchForJavaFiles.java,File next = worklist.removeFirst();,if (worklist != null ) File next = worklist.removeFirst();
RejarClassesForAnalysis.java,String matchingPath = head.lastKey();,if (head != null ) String matchingPath = head.lastKey();
SetBugDatabaseInfo.java,String name = origCollection.getAppVersionFromSequenceNumber(last).getReleaseName();,if (origCollection != null ) String name = origCollection.getAppVersionFromSequenceNumber(last).getReleaseName();
SetBugDatabaseInfo.java,Set<String> paths = missingFiles.get(src.getSourceFile());,if (missingFiles != null ) Set<String> paths = missingFiles.get(src.getSourceFile());
SetBugDatabaseInfo.java,String path = javaFile.getAbsolutePath();,if (javaFile != null ) String path = javaFile.getAbsolutePath();
SourceSearcher.java,String cName = srcLine.getClassName();,if (srcLine != null ) String cName = srcLine.getClassName();
Update.java,BugInstance newBug = (BugInstance) bug.clone();,if (bug != null ) BugInstance newBug = (BugInstance) bug.clone();
Update.java,BugInstance newBug = (BugInstance) bug.clone();,if (bug != null ) BugInstance newBug = (BugInstance) bug.clone();
Update.java,ClassAnnotation classBugFoundIn = bug.getPrimaryClass();,if (bug != null ) ClassAnnotation classBugFoundIn = bug.getPrimaryClass();
Update.java,String className = classBugFoundIn.getClassName();,if (classBugFoundIn != null ) String className = classBugFoundIn.getClassName();
Update.java,String sourceFile = classBugFoundIn.getSourceFileName();,if (classBugFoundIn != null ) String sourceFile = classBugFoundIn.getSourceFileName();
Update.java,BugInstance newBug = (BugInstance) bug.clone();,if (bug != null ) BugInstance newBug = (BugInstance) bug.clone();
Update.java,BugDesignation designation = newBug.getUserDesignation();,if (newBug != null ) BugDesignation designation = newBug.getUserDesignation();
Update.java,int newSize = resultCollection.getCollection().size();,if (resultCollection != null ) int newSize = resultCollection.getCollection().size();
FilterBugsTask.java,attrVal = attrVal.toLowerCase();,if (attrVal != null ) attrVal = attrVal.toLowerCase();
MineBugHistoryTask.java,attrVal = attrVal.toLowerCase();,if (attrVal != null ) attrVal = attrVal.toLowerCase();
SetBugDatabaseInfoTask.java,attrVal = attrVal.toLowerCase();,if (attrVal != null ) attrVal = attrVal.toLowerCase();
UnionBugs.java,FileChannel inChannel = new	FileInputStream(in).getChannel();,if (FileInputStream(in) != null ) FileChannel inChannel = new	FileInputStream(in).getChannel();
AboutDialog.java,licenseScrollPane = new javax.swing.JScrollPane();,if (javax != null ) licenseScrollPane = new javax.swing.JScrollPane();
AboutDialog.java,URL url = evt.getURL();,if (evt != null ) URL url = evt.getURL();
BugLoader.java,BugSet oldSet=BugSet.getMainBugSet();,if (oldSet=BugSet != null ) BugSet oldSet=BugSet.getMainBugSet();
BugLoader.java,BugCollection current= MainFrame.getInstance().getBugCollection();//Now we should no longer get this December 31st 1969 business.,if (business != null ) BugCollection current= MainFrame.getInstance().getBugCollection();//Now we should no longer get this December 31st 1969 business.
BugLoader.java,BugInstance bug=node.getBug();,if (bug=node != null ) BugInstance bug=node.getBug();
BugSaver.java,lastPlaceSaved=out.getAbsolutePath();,if (lastPlaceSaved=out != null ) lastPlaceSaved=out.getAbsolutePath();
BugSet.java,BugInstance bugOne = one.getBug();,if (one != null ) BugInstance bugOne = one.getBug();
BugSet.java,"result = compare(oneSource.getStartBytecode(), twoSource.getStartBytecode());","if (twoSource != null ) result = compare(oneSource.getStartBytecode(), twoSource.getStartBytecode());"
BugTreeModel.java,int treeLevels = st.getOrderBeforeDivider().size();,if (st != null ) int treeLevels = st.getOrderBeforeDivider().size();
BugTreeModel.java,Object[] objPath=path.getParentPath().getPath();,if (objPath=path != null ) Object[] objPath=path.getParentPath().getPath();
BugTreeModel.java,pathToFirstDeleted=new TreePath(reconstruct.toArray());,if (TreePath(reconstruct != null ) pathToFirstDeleted=new TreePath(reconstruct.toArray());
BugTreeModel.java,pathToFirstDeleted=pathToFirstDeleted.pathByAddingChild(path.getLastPathComponent());,if (pathToFirstDeleted=pathToFirstDeleted != null ) pathToFirstDeleted=pathToFirstDeleted.pathByAddingChild(path.getLastPathComponent());
BugTreeModel.java,Object parent=pathToFirstDeleted.getParentPath().getLastPathComponent();,if (parent=pathToFirstDeleted != null ) Object parent=pathToFirstDeleted.getParentPath().getLastPathComponent();
BugTreeModel.java,Object child=pathToFirstDeleted.getLastPathComponent();,if (child=pathToFirstDeleted != null ) Object child=pathToFirstDeleted.getLastPathComponent();
BugTreeModel.java,Object[] objPath=path.getParentPath().getPath();,if (objPath=path != null ) Object[] objPath=path.getParentPath().getPath();
BugTreeModel.java,path=new TreePath(reconstruct.toArray());,if (TreePath(reconstruct != null ) path=new TreePath(reconstruct.toArray());
BugTreeModel.java,Object parent = path.getParentPath().getLastPathComponent();,if (path != null ) Object parent = path.getParentPath().getLastPathComponent();
BugTreeModel.java,List<Sortables> order=st.getOrderBeforeDivider();,if (order=st != null ) List<Sortables> order=st.getOrderBeforeDivider();
BugTreeModel.java,List<Sortables> order=st.getOrderBeforeDivider();,if (order=st != null ) List<Sortables> order=st.getOrderBeforeDivider();
BugTreeModel.java,BugAspects parent=(BugAspects) pathToBranch.getLastPathComponent();,if (pathToBranch != null ) BugAspects parent=(BugAspects) pathToBranch.getLastPathComponent();
BugTreeModel.java,pathToBranch=pathToBranch.getParentPath();,if (pathToBranch=pathToBranch != null ) pathToBranch=pathToBranch.getParentPath();
BugTreeModel.java,changedPath=new TreePath(event.getPath());,if (TreePath(event != null ) changedPath=new TreePath(event.getPath());
BugTreeModel.java,changedPath=changedPath.getParentPath();,if (changedPath=changedPath != null ) changedPath=changedPath.getParentPath();
CommentsArea.java,private Executor backgroundExecutor = Executors.newSingleThreadExecutor();,if (Executors != null ) private Executor backgroundExecutor = Executors.newSingleThreadExecutor();
CommentsArea.java,BugInstance bug = node.getBug();,if (node != null ) BugInstance bug = node.getBug();
CommentsArea.java,BugInstance bug = frame.getCurrentSelectedBugLeaf().getBug();,if (frame != null ) BugInstance bug = frame.getCurrentSelectedBugLeaf().getBug();
CommentsArea.java,String oldValue = bug.getUserDesignationKey();,if (bug != null ) String oldValue = bug.getUserDesignationKey();
CommentsArea.java,BugSet filteredSet = theAspects.getMatchingBugs(BugSet.getMainBugSet());,if (theAspects != null ) BugSet filteredSet = theAspects.getMatchingBugs(BugSet.getMainBugSet());
CommentsArea.java,String commentsOnThisBug = nextNode.getBug().getAnnotationText();,if (nextNode != null ) String commentsOnThisBug = nextNode.getBug().getAnnotationText();
CommentsArea.java,int numItems = designationComboBox.getItemCount();,if (designationComboBox != null ) int numItems = designationComboBox.getItemCount();
Driver.java,factory = new FindBugsLayoutManagerFactory(SplitLayout.class.getName());,if (FindBugsLayoutManagerFactory(SplitLayout != null ) factory = new FindBugsLayoutManagerFactory(SplitLayout.class.getName());
GUISaveState.java,int size=recentFiles.size();,if (size=recentFiles != null ) int size=recentFiles.size();
MainFrame.java,Cloud cloud = getBugCollection().getCloud();,if (getBugCollection() != null ) Cloud cloud = getBugCollection().getCloud();
MainFrame.java,Filter suppressionMatcher = project.getSuppressionFilter();,if (project != null ) Filter suppressionMatcher = project.getSuppressionFilter();
MainFrame.java,Cloud plugin = this.bugCollection.getCloud();,if (this != null ) Cloud plugin = this.bugCollection.getCloud();
MainFrame.java,Cloud plugin = bugCollection.getCloud();,if (bugCollection != null ) Cloud plugin = bugCollection.getCloud();
MainFrame.java,Cloud cloud = this.bugCollection.getCloud();,if (this != null ) Cloud cloud = this.bugCollection.getCloud();
MainFrame.java,BugInstance bug  = mainFrameTree.getCurrentSelectedBugLeaf().getBug();,if (mainFrameTree != null ) BugInstance bug  = mainFrameTree.getCurrentSelectedBugLeaf().getBug();
MainFrame.java,name = saveFile.getAbsolutePath();,if (saveFile != null ) name = saveFile.getAbsolutePath();
MainFrameComponentFactory.java,boolean checked = signInAuto.isSelected();,if (signInAuto != null ) boolean checked = signInAuto.isSelected();
MainFrameComponentFactory.java,Cloud plugin = mainFrame.getBugCollection().getCloud();,if (mainFrame != null ) Cloud plugin = mainFrame.getBugCollection().getCloud();
MainFrameComponentFactory.java,final SourceLineAnnotation link = note.getSourceLines();,if (note != null ) final SourceLineAnnotation link = note.getSourceLines();
MainFrameComponentFactory.java,int end = link.getEndLine();,if (link != null ) int end = link.getEndLine();
MainFrameComponentFactory.java,noteText = note.toString();,if (note != null ) noteText = note.toString();
MainFrameTree.java,Matcher m = mainFrame.getCurrentSelectedBugAspects().getMatcher();,if (mainFrame != null ) Matcher m = mainFrame.getCurrentSelectedBugAspects().getMatcher();
MainFrameTree.java,Object lastPathComponent = treePath.getLastPathComponent();,if (treePath != null ) Object lastPathComponent = treePath.getLastPathComponent();
MainFrameTree.java,sorter = GUISaveState.getInstance().getStarterTable();,if (GUISaveState != null ) sorter = GUISaveState.getInstance().getStarterTable();
MainFrameTree.java,CardLayout layout = (CardLayout) cardPanel.getLayout();,if (cardPanel != null ) CardLayout layout = (CardLayout) cardPanel.getLayout();
MainFrameTree.java,Object lastPathComponent = path.getLastPathComponent();,if (path != null ) Object lastPathComponent = path.getLastPathComponent();
NewFilterFrame.java,Sortables filterBy = (Sortables) comboBox.getSelectedItem();,if (comboBox != null ) Sortables filterBy = (Sortables) comboBox.getSelectedItem();
NewProjectWizard.java,String fileName = f.getName().toLowerCase();,if (f != null ) String fileName = f.getName().toLowerCase();
NewProjectWizard.java,"setText((value == null) ? """" : plugin.getDescription());","if (plugin != null ) setText((value == null) ? """" : plugin.getDescription());"
NewProjectWizard.java,newCloudId = cloudPlugin.getId();,if (cloudPlugin != null ) newCloudId = cloudPlugin.getId();
PreferencesFrame.java,Object[] selected=filterCheckBoxList.getSelectedValues();,if (selected=filterCheckBoxList != null ) Object[] selected=filterCheckBoxList.getSelectedValues();
ProjectSettings.java,FilterMatcher[] filtersInStack=theSame.getFilters();,if (filtersInStack=theSame != null ) FilterMatcher[] filtersInStack=theSame.getFilters();
ProjectSettings.java,BugTreeModel model=(MainFrame.getInstance().getBugTreeModel());,if (model=(MainFrame != null ) BugTreeModel model=(MainFrame.getInstance().getBugTreeModel());
Sortables.java,BugCollection bugCollection = MainFrame.getInstance().getBugCollection();,if (MainFrame != null ) BugCollection bugCollection = MainFrame.getInstance().getBugCollection();
Sortables.java,BugCollection bugCollection = MainFrame.getInstance().getBugCollection();,if (MainFrame != null ) BugCollection bugCollection = MainFrame.getInstance().getBugCollection();
Sortables.java,Cloud cloud =  bugCollection.getCloud();,if (bugCollection != null ) Cloud cloud =  bugCollection.getCloud();
Sortables.java,BugCollection bugCollection = mf.getBugCollection();,if (mf != null ) BugCollection bugCollection = mf.getBugCollection();
SorterDialog.java,Sortables[] sortables = MainFrame.getInstance().getAvailableSortables();,if (MainFrame != null ) Sortables[] sortables = MainFrame.getInstance().getAvailableSortables();
SorterTableColumnModel.java,XPosition-=tc.getWidth();,if (XPosition-=tc != null ) XPosition-=tc.getWidth();
SorterTableColumnModel.java,total+=tc.getWidth();,if (total+=tc != null ) total+=tc.getWidth();
SorterTableColumnModel.java,int index=dlsm.getMinSelectionIndex();,if (index=dlsm != null ) int index=dlsm.getMinSelectionIndex();
SourceCodeDisplay.java,String primaryKind = mySourceLine.getDescription();,if (mySourceLine != null ) String primaryKind = mySourceLine.getDescription();
SourceCodeDisplay.java,StyledDocument document = src.getDocument();,if (src != null ) StyledDocument document = src.getDocument();
SourceCodeDisplay.java,String sourceFile = thisSource.getSourceFile();,if (thisSource != null ) String sourceFile = thisSource.getSourceFile();
SourceCodeDisplay.java,sourceFile = thisSource.getSimpleClassName();,if (thisSource != null ) sourceFile = thisSource.getSimpleClassName();
SourceCodeDisplay.java,int startLine = thisSource.getStartLine();,if (thisSource != null ) int startLine = thisSource.getStartLine();
SourceCodeDisplay.java,int endLine = thisSource.getEndLine();,if (thisSource != null ) int endLine = thisSource.getEndLine();
SourceCodeDisplay.java,int otherLine = sourceAnnotation.getStartLine();,if (sourceAnnotation != null ) int otherLine = sourceAnnotation.getStartLine();
SourceDirectoryWizard.java,contentPanel = new javax.swing.JPanel();,if (javax != null ) contentPanel = new javax.swing.JPanel();
SourceDirectoryWizard.java,secondPanel = new javax.swing.JPanel();,if (javax != null ) secondPanel = new javax.swing.JPanel();
SourceDirectoryWizard.java,firstPanel = new javax.swing.JPanel();,if (javax != null ) firstPanel = new javax.swing.JPanel();
SourceDirectoryWizard.java,sourceRootLabel = new javax.swing.JLabel();,if (javax != null ) sourceRootLabel = new javax.swing.JLabel();
SourceDirectoryWizard.java,sourceRootBox = new javax.swing.JTextField();,if (javax != null ) sourceRootBox = new javax.swing.JTextField();
SourceDirectoryWizard.java,srcFileIconLabel = new javax.swing.JLabel();,if (javax != null ) srcFileIconLabel = new javax.swing.JLabel();
SourceDirectoryWizard.java,browseButton = new javax.swing.JButton();,if (javax != null ) browseButton = new javax.swing.JButton();
SourceDirectoryWizard.java,previousButton = new javax.swing.JButton();,if (javax != null ) previousButton = new javax.swing.JButton();
SourceDirectoryWizard.java,nextButton = new javax.swing.JButton();,if (javax != null ) nextButton = new javax.swing.JButton();
SourceDirectoryWizard.java,finshButton = new javax.swing.JButton();,if (javax != null ) finshButton = new javax.swing.JButton();
SourceDirectoryWizard.java,errorMessageLabel = new javax.swing.JLabel();,if (javax != null ) errorMessageLabel = new javax.swing.JLabel();
SourceDirectoryWizard.java,File[] selectedFiles = chooser.getSelectedFiles();,if (chooser != null ) File[] selectedFiles = chooser.getSelectedFiles();
SpringUtilities.java,layout = (SpringLayout)parent.getLayout();,if ((SpringLayout)parent != null ) layout = (SpringLayout)parent.getLayout();
SpringUtilities.java,layout = (SpringLayout)parent.getLayout();,if ((SpringLayout)parent != null ) layout = (SpringLayout)parent.getLayout();
StackedFilterMatcher.java,FilterMatcher[] filtersInStack=theSame.getFilters();,if (filtersInStack=theSame != null ) FilterMatcher[] filtersInStack=theSame.getFilters();
ViewFilter.java,"value = value.replace('/', '.').trim();","if (' != null ) value = value.replace('/', '.').trim();"
JavaScanner.java,startPosition = iterator.getIndex();,if (iterator != null ) startPosition = iterator.getIndex();
JavaSourceDocument.java,int kind = parser.getKind();,if (parser != null ) int kind = parser.getKind();
NumberedParagraphView.java,int count = parent.getViewCount();,if (parent != null ) int count = parent.getViewCount();
NumberedParagraphView.java,Element parent = element.getParentElement();,if (element != null ) Element parent = element.getParentElement();
Subtypes2Test.java,typeStaticString = new FindRefComparison.StaticStringType();,if (FindRefComparison != null ) typeStaticString = new FindRefComparison.StaticStringType();
AbstractCloudTest.java,BugDesignation old = map.get(bd.getUser());,if (map != null ) BugDesignation old = map.get(bd.getUser());
AbstractFindBugsTask.java,String[] pluginFileList = pluginList.list();,if (pluginList != null ) String[] pluginFileList = pluginList.list();
FindBugsTask.java,this.cloudId = cloudId.trim();,if (cloudId != null ) this.cloudId = cloudId.trim();
FindBugsTask.java,String[] elementList = src.list();,if (src != null ) String[] elementList = src.list();
FindBugsTask.java,String[] elementList = src.list();,if (src != null ) String[] elementList = src.list();
FindBugsTask.java,outputFormat = outputFormat.trim();,if (outputFormat != null ) outputFormat = outputFormat.trim();
FindBugsTask.java,outputArg += outputFormat.toLowerCase();,if (outputFormat != null ) outputArg += outputFormat.toLowerCase();
FindBugsTask.java,outputArg += stylesheet.trim();,if (stylesheet != null ) outputArg += stylesheet.trim();
FindBugsTask.java,String auxClasspathString = auxClasspath.toString();,if (auxClasspath != null ) String auxClasspathString = auxClasspath.toString();
FindBugsTask.java,DirectoryScanner ds = fs.getDirectoryScanner();,if (fs != null ) DirectoryScanner ds = fs.getDirectoryScanner();
FindBugsViewerTask.java,int rc = findbugsEngine.executeJava();,if (findbugsEngine != null ) int rc = findbugsEngine.executeJava();
UnionBugs.java,FileChannel inChannel = new	FileInputStream(in).getChannel();,if (FileInputStream(in) != null ) FileChannel inChannel = new	FileInputStream(in).getChannel();
UnionBugs.java,FileChannel outChannel = new FileOutputStream(out).getChannel();,if (FileOutputStream(out) != null ) FileChannel outChannel = new FileOutputStream(out).getChannel();
AbstractBugReporter.java,int hashCode = message.hashCode();,if (message != null ) int hashCode = message.hashCode();
AbstractBugReporter.java,ClassAnnotation primaryClass = bugInstance.getPrimaryClass();,if (bugInstance != null ) ClassAnnotation primaryClass = bugInstance.getPrimaryClass();
AbstractBugReporter.java,int priority = bugInstance.getPriority();,if (bugInstance != null ) int priority = bugInstance.getPriority();
AbstractBugReporter.java,int bugRank = bugInstance.getBugRank();,if (bugInstance != null ) int bugRank = bugInstance.getBugRank();
AbstractBugReporter.java,String message = ex.getMessage();,if (ex != null ) String message = ex.getMessage();
AbstractBugReporter.java,message = message.trim();,if (message != null ) message = message.trim();
AbstractBugReporter.java,ClassNotFoundException cnfe = missingClassEx.getClassNotFoundException();,if (missingClassEx != null ) ClassNotFoundException cnfe = missingClassEx.getClassNotFoundException();
AddMessages.java,Iterator<BugInstance> bugInstanceIter = bugCollection.iterator();,if (bugCollection != null ) Iterator<BugInstance> bugInstanceIter = bugCollection.iterator();
AddMessages.java,Element element = (Element) elementIter.next();,if (elementIter != null ) Element element = (Element) elementIter.next();
AddMessages.java,BugInstance bugInstance = bugInstanceIter.next();,if (bugInstanceIter != null ) BugInstance bugInstance = bugInstanceIter.next();
AddMessages.java,String bugType = bugInstance.getType();,if (bugInstance != null ) String bugType = bugInstance.getType();
AddMessages.java,BugPattern bugPattern = bugInstance.getBugPattern();,if (bugInstance != null ) BugPattern bugPattern = bugInstance.getBugPattern();
AddMessages.java,Iterator annElementIter = element.elements().iterator();,if (element != null ) Iterator annElementIter = element.elements().iterator();
AddMessages.java,Element annElement = (Element) annElementIter.next();,if (annElementIter != null ) Element annElement = (Element) annElementIter.next();
AddMessages.java,BugAnnotation ann = annIter.next();,if (annIter != null ) BugAnnotation ann = annIter.next();
AddMessages.java,Element root = document.getRootElement();,if (document != null ) Element root = document.getRootElement();
AddMessages.java,String s = bc.getAbbrev();,if (bc != null ) String s = bc.getAbbrev();
AddMessages.java,Element root = document.getRootElement();,if (document != null ) Element root = document.getRootElement();
AddMessages.java,Element root = document.getRootElement();,if (document != null ) Element root = document.getRootElement();
AddMessages.java,Document document = inputCollection.toDocument();,if (inputCollection != null ) Document document = inputCollection.toDocument();
AnalysisError.java,exceptionMessage = exception.toString();,if (exception != null ) exceptionMessage = exception.toString();
AnalysisError.java,Throwable initCause = exception.getCause();,if (exception != null ) Throwable initCause = exception.getCause();
AnalysisError.java,nestedExceptionMessage = initCause.toString();,if (initCause != null ) nestedExceptionMessage = initCause.toString();
AnalysisError.java,StackTraceElement[] exceptionStackTrace = exception.getStackTrace();,if (exception != null ) StackTraceElement[] exceptionStackTrace = exception.getStackTrace();
AppVersion.java,this.timestamp = System.currentTimeMillis();,if (System != null ) this.timestamp = System.currentTimeMillis();
BugAccumulator.java,int priority = bug.getPriority();,if (bug != null ) int priority = bug.getPriority();
BugAnnotationWithSourceLines.java,sourceFileName = sourceLines.getSourceFile();,if (sourceLines != null ) sourceFileName = sourceLines.getSourceFile();
BugCollectionBugReporter.java,Cloud userAnnotationPlugin = bugCollection.getCloud();,if (bugCollection != null ) Cloud userAnnotationPlugin = bugCollection.getCloud();
BugDesignation.java,private long timestamp = System.currentTimeMillis();,if (System != null ) private long timestamp = System.currentTimeMillis();
BugDesignation.java,timestamp = System.currentTimeMillis();,if (System != null ) timestamp = System.currentTimeMillis();
BugDesignation.java,timestamp = System.currentTimeMillis();,if (System != null ) timestamp = System.currentTimeMillis();
BugDesignation.java,hash += user.hashCode();,if (user != null ) hash += user.hashCode();
BugDesignation.java,hash += designation.hashCode();,if (designation != null ) hash += designation.hashCode();
BugDesignation.java,hash += annotationText.hashCode();,if (annotationText != null ) hash += annotationText.hashCode();
BugInstance.java,this.type = type.intern();,if (type != null ) this.type = type.intern();
BugInstance.java,dup = (BugInstance) super.clone();,if (super != null ) dup = (BugInstance) super.clone();
BugInstance.java,BugPattern bugPattern = this.getBugPattern();,if (this != null ) BugPattern bugPattern = this.getBugPattern();
BugInstance.java,int value = this.getPriority();,if (this != null ) int value = this.getPriority();
BugInstance.java,String s = userDesignation.getAnnotationText();,if (userDesignation != null ) String s = userDesignation.getAnnotationText();
BugInstance.java,XmlProps props = xmlProps.get();,if (xmlProps != null ) XmlProps props = xmlProps.get();
BugInstance.java,propertyListHead = cur.getNext();,if (cur != null ) propertyListHead = cur.getNext();
BugInstance.java,prop = prop.getNext();,if (prop != null ) prop = prop.getNext();
BugInstance.java,prop = prop.getNext();,if (prop != null ) prop = prop.getNext();
BugInstance.java,propertyListHead = prop.getNext();,if (prop != null ) propertyListHead = prop.getNext();
BugInstance.java,String className = visitor.getDottedClassName();,if (visitor != null ) String className = visitor.getDottedClassName();
BugInstance.java,String className = ClassName.toDottedClassName(visitor.getSuperclassName());,if (ClassName != null ) String className = ClassName.toDottedClassName(visitor.getSuperclassName());
BugInstance.java,TypeAnnotation typeAnnotation = new TypeAnnotation(c.getSignature());,if (TypeAnnotation(c != null ) TypeAnnotation typeAnnotation = new TypeAnnotation(c.getSignature());
BugInstance.java,int register = item.getRegisterNumber();,if (item != null ) int register = item.getRegisterNumber();
BugInstance.java,String className = methodGen.getClassName();,if (methodGen != null ) String className = methodGen.getClassName();
BugInstance.java,ConstantPoolGen cpg = methodGen.getConstantPool();,if (methodGen != null ) ConstantPoolGen cpg = methodGen.getConstantPool();
BugInstance.java,IAnalysisCache analysisCache = Global.getAnalysisCache();,if (Global != null ) IAnalysisCache analysisCache = Global.getAnalysisCache();
BugInstance.java,shortPattern = bugPattern.getShortDescription();,if (bugPattern != null ) shortPattern = bugPattern.getShortDescription();
BugInstance.java,shortPattern = bugPattern.getShortDescription();,if (bugPattern != null ) shortPattern = bugPattern.getShortDescription();
BugInstance.java,Cloud cloud = bugCollection.getCloud();,if (bugCollection != null ) Cloud cloud = bugCollection.getCloud();
BugInstance.java,prop = prop.getNext();,if (prop != null ) prop = prop.getNext();
BugInstance.java,int pc = location.getHandle().getPosition();,if (location != null ) int pc = location.getHandle().getPosition();
BugInstance.java,int pc = location.getHandle().getPosition();,if (location != null ) int pc = location.getHandle().getPosition();
BugInstance.java,int pc = location.getHandle().getPosition();,if (location != null ) int pc = location.getHandle().getPosition();
BugInstance.java,Object c = item.getConstant();,if (item != null ) Object c = item.getConstant();
BugInstance.java,XField xField = item.getXField();,if (item != null ) XField xField = item.getXField();
BugInstance.java,XMethod xMethod = item.getReturnValueOf();,if (item != null ) XMethod xMethod = item.getReturnValueOf();
BugInstance.java,hashcode += i.next().hashCode();,if (i != null ) hashcode += i.next().hashCode();
BugInstance.java,int numAnnotations = annotationList.size();,if (annotationList != null ) int numAnnotations = annotationList.size();
BugInstance.java,long first = from.getFirstVersion();,if (from != null ) long first = from.getFirstVersion();
BugInstance.java,long last = from.getLastVersion();,if (from != null ) long last = from.getLastVersion();
BugInstance.java,byte[] data = digest.digest(key.getBytes());,if (digest != null ) byte[] data = digest.digest(key.getBytes());
BugInstance.java,fieldClass = primeField.getClassName();,if (primeField != null ) fieldClass = primeField.getClassName();
BugInstance.java,methodClass = primeMethod.getClassName();,if (primeMethod != null ) methodClass = primeMethod.getClassName();
BugPattern.java,this.abbrev = abbrev.intern();,if (abbrev != null ) this.abbrev = abbrev.intern();
BugPattern.java,this.category = category.intern();,if (category != null ) this.category = category.intern();
BugPattern.java,categoryAbbrev = bcat.getAbbrev();,if (bcat != null ) categoryAbbrev = bcat.getAbbrev();
BugRanker.java,String s = in.readLine();,if (in != null ) String s = in.readLine();
BugRanker.java,String type = bugPattern.getType();,if (bugPattern != null ) String type = bugPattern.getType();
BugRanker.java,String category = bugPattern.getCategory();,if (bugPattern != null ) String category = bugPattern.getCategory();
BugRanker.java,DetectorFactoryCollection factory = DetectorFactoryCollection.instance();,if (DetectorFactoryCollection != null ) DetectorFactoryCollection factory = DetectorFactoryCollection.instance();
BugRanker.java,DetectorFactoryCollection factory = DetectorFactoryCollection.instance();,if (DetectorFactoryCollection != null ) DetectorFactoryCollection factory = DetectorFactoryCollection.instance();
BugRanker.java,Plugin corePlugin = factory.getCorePlugin();,if (factory != null ) Plugin corePlugin = factory.getCorePlugin();
BugRanker.java,"int patternRank = findRank(bug.getBugPattern(), bug.getDetectorFactory());","if (bug != null ) int patternRank = findRank(bug.getBugPattern(), bug.getDetectorFactory());"
BugRanker.java,Plugin plugin = detectorFactory.getPlugin();,if (detectorFactory != null ) Plugin plugin = detectorFactory.getPlugin();
BugRanker.java,BugRanker pluginRanker = plugin.getBugRanker();,if (plugin != null ) BugRanker pluginRanker = plugin.getBugRanker();
ByteCodePatternDetector.java,Method[] methodList = jclass.getMethods();,if (jclass != null ) Method[] methodList = jclass.getMethods();
ByteCodePatternDetector.java,Iterator<ByteCodePatternMatch> j = matcher.byteCodePatternMatchIterator();,if (matcher != null ) Iterator<ByteCodePatternMatch> j = matcher.byteCodePatternMatchIterator();
ByteCodePatternDetector.java,Iterator<PatternElementMatch> pemIter = match.patternElementMatchIterator();,if (match != null ) Iterator<PatternElementMatch> pemIter = match.patternElementMatchIterator();
ByteCodePatternDetector.java,PatternElementMatch pem = pemIter.next();,if (pemIter != null ) PatternElementMatch pem = pemIter.next();
ByteCodePatternDetector.java,String className = this.getClass().getName();,if (this != null ) String className = this.getClass().getName();
CategoryFilteringBugReporter.java,BugPattern bugPattern = bugInstance.getBugPattern();,if (bugInstance != null ) BugPattern bugPattern = bugInstance.getBugPattern();
ClassAnnotation.java,AnalysisContext currentAnalysisContext = AnalysisContext.currentAnalysisContext();,if (AnalysisContext != null ) AnalysisContext currentAnalysisContext = AnalysisContext.currentAnalysisContext();
ClassWarningSuppressor.java,ClassAnnotation primaryClassAnnotation = bugInstance.getPrimaryClass();,if (bugInstance != null ) ClassAnnotation primaryClassAnnotation = bugInstance.getPrimaryClass();
DeepSubtypeAnalysis.java,JavaClass subJavaClass = Repository.lookupClass(subtype.getDottedClassName());,if (Repository != null ) JavaClass subJavaClass = Repository.lookupClass(subtype.getDottedClassName());
DetectorFactory.java,JavaVersion runtimeVersion = JavaVersion.getRuntimeVersion();,if (JavaVersion != null ) JavaVersion runtimeVersion = JavaVersion.getRuntimeVersion();
DetectorFactory.java,String type = tok.nextToken();,if (tok != null ) String type = tok.nextToken();
DetectorFactoryCollection.java,String detectorName = factory.getShortName();,if (factory != null ) String detectorName = factory.getShortName();
DetectorFactoryCollection.java,File[] contentList = pluginDir.listFiles();,if (pluginDir != null ) File[] contentList = pluginDir.listFiles();
DetectorFactoryCollection.java,File libDir = findbugsJar.getParentFile();,if (findbugsJar != null ) File libDir = findbugsJar.getParentFile();
DetectorFactoryCollection.java,String homeDir = FindBugs.getHome();,if (FindBugs != null ) String homeDir = FindBugs.getHome();
DetectorFactoryCollection.java,String value = (String) e.getValue();,if (e != null ) String value = (String) e.getValue();
DetectorFactoryCollection.java,corePlugin = corePluginLoader.getPlugin();,if (corePluginLoader != null ) corePlugin = corePluginLoader.getPlugin();
DetectorFactoryCollection.java,String plugin = in.readLine();,if (in != null ) String plugin = in.readLine();
DetectorFactoryCollection.java,URLConnection connection = url.openConnection();,if (url != null ) URLConnection connection = url.openConnection();
DetectorFactoryCollection.java,String contentType = connection.getContentType();,if (connection != null ) String contentType = connection.getContentType();
DetectorFactoryCollection.java,String urlname = pluginListProperties.toString();,if (pluginListProperties != null ) String urlname = pluginListProperties.toString();
DetectorFactoryCollection.java,Plugin plugin = pluginLoader.getPlugin();,if (pluginLoader != null ) Plugin plugin = pluginLoader.getPlugin();
DetectorFactoryCollection.java,boolean show = !pluginLoader.isCorePlugin();,if (!pluginLoader != null ) boolean show = !pluginLoader.isCorePlugin();
DetectorToDetector2Adapter.java,IAnalysisCache analysisCache = Global.getAnalysisCache();,if (Global != null ) IAnalysisCache analysisCache = Global.getAnalysisCache();
DetectorToDetector2Adapter.java,Profiler profiler = analysisCache.getProfiler();,if (analysisCache != null ) Profiler profiler = analysisCache.getProfiler();
DiscoverSourceDirectories.java,List<String> candidateSourceDirList = rfs.getDirectoriesScanned();,if (rfs != null ) List<String> candidateSourceDirList = rfs.getDirectoriesScanned();
DiscoverSourceDirectories.java,IClassFactory factory = ClassFactory.instance();,if (ClassFactory != null ) IClassFactory factory = ClassFactory.instance();
DiscoverSourceDirectories.java,IClassPath classPath = factory.createClassPath();,if (factory != null ) IClassPath classPath = factory.createClassPath();
DiscoverSourceDirectories.java,ICodeBaseEntry codeBaseEntry = classPath.lookupResource(classDesc.toResourceName());,if (classPath != null ) ICodeBaseEntry codeBaseEntry = classPath.lookupResource(classDesc.toResourceName());
DiscoverSourceDirectories.java,ClassInfo.Builder classInfoBuilder = new ClassInfo.Builder();,if (ClassInfo != null ) ClassInfo.Builder classInfoBuilder = new ClassInfo.Builder();
DiscoverSourceDirectories.java,ClassInfo classInfo = classInfoBuilder.build();,if (classInfoBuilder != null ) ClassInfo classInfo = classInfoBuilder.build();
DiscoverSourceDirectories.java,String packageName = classDesc.getPackageName();,if (classDesc != null ) String packageName = classDesc.getPackageName();
DiscoverSourceDirectories.java,List<ClassDescriptor> appClassList = builder.getAppClassList();,if (builder != null ) List<ClassDescriptor> appClassList = builder.getAppClassList();
DiscoverSourceDirectories.java,boolean found = f.exists() && !f.isDirectory();,if (!f != null ) boolean found = f.exists() && !f.isDirectory();
EmacsBugReporter.java,"String sourceFileName = fileNameFor(javaClass.getPackageName(), javaClass.getSourceFileName());","if (javaClass != null ) String sourceFileName = fileNameFor(javaClass.getPackageName(), javaClass.getSourceFileName());"
EmacsBugReporter.java,SourceFinder sourceFinder = AnalysisContext.currentAnalysisContext().getSourceFinder();,if (AnalysisContext != null ) SourceFinder sourceFinder = AnalysisContext.currentAnalysisContext().getSourceFinder();
EmacsBugReporter.java,SourceLineAnnotation line = bugInstance.getPrimarySourceLineAnnotation();,if (bugInstance != null ) SourceLineAnnotation line = bugInstance.getPrimarySourceLineAnnotation();
EmacsBugReporter.java,ClassAnnotation classInfo = bugInstance.getPrimaryClass();,if (bugInstance != null ) ClassAnnotation classInfo = bugInstance.getPrimaryClass();
EmacsBugReporter.java,fullPath = sourceFileNameCache.get(classInfo.getClassName());,if (sourceFileNameCache != null ) fullPath = sourceFileNameCache.get(classInfo.getClassName());
EmacsBugReporter.java,lineEnd = line.getEndLine();,if (line != null ) lineEnd = line.getEndLine();
EmacsBugReporter.java,SourceFinder sourceFinder = AnalysisContext.currentAnalysisContext().getSourceFinder();,if (AnalysisContext != null ) SourceFinder sourceFinder = AnalysisContext.currentAnalysisContext().getSourceFinder();
EmacsBugReporter.java,String pkgName = line.getPackageName();,if (line != null ) String pkgName = line.getPackageName();
EmacsBugReporter.java,"fullPath = pkgName.replace('.', '/') + ""/"" + line.getSourceFile();","if (line != null ) fullPath = pkgName.replace('.', '/') + ""/"" + line.getSourceFile();"
ExcludingHashesBugReporter.java,String instanceHash = bugInstance.getInstanceHash();,if (bugInstance != null ) String instanceHash = bugInstance.getInstanceHash();
FieldAnnotation.java,String className = visitor.getDottedClassConstantOperand();,if (visitor != null ) String className = visitor.getDottedClassConstantOperand();
FieldAnnotation.java,String primaryClassName = primaryClass.getClassName();,if (primaryClass != null ) String primaryClassName = primaryClass.getClassName();
FieldAnnotation.java,String thisPackageName = this.getPackageName();,if (this != null ) String thisPackageName = this.getPackageName();
FieldWarningSuppressor.java,FieldAnnotation bugField = bugInstance.getPrimaryField();,if (bugInstance != null ) FieldAnnotation bugField = bugInstance.getPrimaryField();
FindBugs.java,String trainingOutputDir = findBugs.getTrainingOutputDir();,if (findBugs != null ) String trainingOutputDir = findBugs.getTrainingOutputDir();
FindBugs.java,Set<BugPattern> reportedBugPatterns = factory.getReportedBugPatterns();,if (factory != null ) Set<BugPattern> reportedBugPatterns = factory.getReportedBugPatterns();
FindBugs.java,Project project = commandLine.getProject();,if (commandLine != null ) Project project = commandLine.getProject();
FindBugs.java,int bugCount = findBugs.getBugCount();,if (findBugs != null ) int bugCount = findBugs.getBugCount();
FindBugs.java,int missingClassCount = findBugs.getMissingClassCount();,if (findBugs != null ) int missingClassCount = findBugs.getMissingClassCount();
FindBugs.java,int errorCount = findBugs.getErrorCount();,if (findBugs != null ) int errorCount = findBugs.getErrorCount();
FindBugs.java,BugCollection bugs =   findBugs.getBugReporter().getBugCollection();,if (findBugs != null ) BugCollection bugs =   findBugs.getBugReporter().getBugCollection();
FindBugs.java,Project project = findBugs.getProject();,if (findBugs != null ) Project project = findBugs.getProject();
FindBugs.java,String projectName = project.getProjectName();,if (project != null ) String projectName = project.getProjectName();
FindBugs2.java,Profiler profiler = bugReporter.getProjectStats().getProfiler();,if (bugReporter != null ) Profiler profiler = bugReporter.getProjectStats().getProfiler();
FindBugs2.java,classFactory = ClassFactory.instance();,if (ClassFactory != null ) classFactory = ClassFactory.instance();
FindBugs2.java,String className = bugInstance.getPrimaryClass().getClassName();,if (bugInstance != null ) String className = bugInstance.getPrimaryClass().getClassName();
FindBugs2.java,SuppressionMatcher m = AnalysisContext.currentAnalysisContext().getSuppressionMatcher();,if (AnalysisContext != null ) SuppressionMatcher m = AnalysisContext.currentAnalysisContext().getSuppressionMatcher();
FindBugs2.java,classPath = classFactory.createClassPath();,if (classFactory != null ) classPath = classFactory.createClassPath();
FindBugs2.java,IAnalysisEngineRegistrar engineRegistrar = engineRegistrarClass.newInstance();,if (engineRegistrarClass != null ) IAnalysisEngineRegistrar engineRegistrar = engineRegistrarClass.newInstance();
FindBugs2.java,appClassList = builder.getAppClassList();,if (builder != null ) appClassList = builder.getAppClassList();
FindBugs2.java,String pathName = appCodeBase.getPathName();,if (appCodeBase != null ) String pathName = appCodeBase.getPathName();
FindBugs2.java,ClassDescriptor classDesc = workList.removeFirst();,if (workList != null ) ClassDescriptor classDesc = workList.removeFirst();
FindBugs2.java,ClassDescriptor superclassDescriptor = classNameAndInfo.getSuperclassDescriptor();,if (classNameAndInfo != null ) ClassDescriptor superclassDescriptor = classNameAndInfo.getSuperclassDescriptor();
FindBugs2.java,ClassDescriptor enclosingClass = classNameAndInfo.getImmediateEnclosingClass();,if (classNameAndInfo != null ) ClassDescriptor enclosingClass = classNameAndInfo.getImmediateEnclosingClass();
FindBugs2.java,SourceInfoMap sourceInfoMap = analysisContext.getSourceInfoMap();,if (analysisContext != null ) SourceInfoMap sourceInfoMap = analysisContext.getSourceInfoMap();
FindBugs2.java,Profiler profiler = bugReporter.getProjectStats().getProfiler();,if (bugReporter != null ) Profiler profiler = bugReporter.getProjectStats().getProfiler();
FindBugs2.java,XFactory factory = AnalysisContext.currentXFactory();,if (AnalysisContext != null ) XFactory factory = AnalysisContext.currentXFactory();
FindBugs2.java,AnalysisPass pass = passIterator.next();,if (passIterator != null ) AnalysisPass pass = passIterator.next();
FindBugs2.java,currentClassName = ClassName.toDottedClassName(classDescriptor.getClassName());,if (ClassName != null ) currentClassName = ClassName.toDottedClassName(classDescriptor.getClassName());
Footprint.java,clockTime = System.currentTimeMillis(); // or new java.util.Date().getTime()	;,if (; != null ) clockTime = System.currentTimeMillis(); // or new java.util.Date().getTime()	;
Footprint.java,peakMem = new MemoryBeanWrapper().getPeakUsage();,if (MemoryBeanWrapper() != null ) peakMem = new MemoryBeanWrapper().getPeakUsage();
Footprint.java,collectionTime = new CollectionBeanWrapper().getCollectionTime();,if (CollectionBeanWrapper() != null ) collectionTime = new CollectionBeanWrapper().getCollectionTime();
Footprint.java,sum += memUsage.getUsed(); // or getCommitted(),if (getCommitted() != null ) sum += memUsage.getUsed(); // or getCommitted()
FuzzyBugComparator.java,BugPattern lhsPattern = lhs.getBugPattern();,if (lhs != null ) BugPattern lhsPattern = lhs.getBugPattern();
FuzzyBugComparator.java,BugPattern rhsPattern = rhs.getBugPattern();,if (rhs != null ) BugPattern rhsPattern = rhs.getBugPattern();
FuzzyBugComparator.java,String rhsCode = getCode(rhs.getType());,if (getCode(rhs != null ) String rhsCode = getCode(rhs.getType());
FuzzyBugComparator.java,Iterator<BugAnnotation> lhsIter = new FilteringBugAnnotationIterator(lhs.annotationIterator());,if (FilteringBugAnnotationIterator(lhs != null ) Iterator<BugAnnotation> lhsIter = new FilteringBugAnnotationIterator(lhs.annotationIterator());
FuzzyBugComparator.java,Iterator<BugAnnotation> rhsIter = new FilteringBugAnnotationIterator(rhs.annotationIterator());,if (FilteringBugAnnotationIterator(rhs != null ) Iterator<BugAnnotation> rhsIter = new FilteringBugAnnotationIterator(rhs.annotationIterator());
FuzzyBugComparator.java,BugAnnotation lhsAnnotation = lhsIter.next();,if (lhsIter != null ) BugAnnotation lhsAnnotation = lhsIter.next();
FuzzyBugComparator.java,BugAnnotation rhsAnnotation = rhsIter.next();,if (rhsIter != null ) BugAnnotation rhsAnnotation = rhsIter.next();
HTMLBugReporter.java,Document document = bugCollection.toDocument();,if (bugCollection != null ) Document document = bugCollection.toDocument();
HTMLBugReporter.java,TransformerFactory factory = TransformerFactory.newInstance();,if (TransformerFactory != null ) TransformerFactory factory = TransformerFactory.newInstance();
InstructionScannerDriver.java,Edge edge = edgeIter.next();,if (edgeIter != null ) Edge edge = edgeIter.next();
InstructionScannerDriver.java,Iterator<InstructionHandle> i = source.instructionIterator();,if (source != null ) Iterator<InstructionHandle> i = source.instructionIterator();
LocalVariableAnnotation.java,int local = ins.getIndex();,if (ins != null ) int local = ins.getIndex();
LocalVariableAnnotation.java,LocalVariableTable localVariableTable = method.getLocalVariableTable();,if (method != null ) LocalVariableTable localVariableTable = method.getLocalVariableTable();
LocalVariableAnnotation.java,localName = lv.getName();,if (lv != null ) localName = lv.getName();
LocalVariableAnnotation.java,LineNumberTable lineNumbers = method.getLineNumberTable();,if (method != null ) LineNumberTable lineNumbers = method.getLineNumberTable();
LocalVariableAnnotation.java,this.description = description.intern();,if (description != null ) this.description = description.intern();
LocalVariableAnnotation.java,int reg = item.getRegisterNumber();,if (item != null ) int reg = item.getRegisterNumber();
LocalVariableAnnotation.java,int reg = item.getRegisterNumber();,if (item != null ) int reg = item.getRegisterNumber();
LocalVariableAnnotation.java,int localsThatAreParameters = PreorderVisitor.getNumberArguments(method.getSignature());,if (PreorderVisitor != null ) int localsThatAreParameters = PreorderVisitor.getNumberArguments(method.getSignature());
LocalVariableAnnotation.java,SignatureParser parser = new SignatureParser(method.getSignature());,if (SignatureParser(method != null ) SignatureParser parser = new SignatureParser(method.getSignature());
LocalVariableAnnotation.java,Iterator<String> signatureIterator = parser.parameterSignatureIterator();,if (parser != null ) Iterator<String> signatureIterator = parser.parameterSignatureIterator();
LocalVariableAnnotation.java,"int distance = EditDistance.editDistance(name, potentialMatch.getName());","if (potentialMatch != null ) int distance = EditDistance.editDistance(name, potentialMatch.getName());"
LocalVariableAnnotation.java,int localsThatAreParameters = PreorderVisitor.getNumberArguments(method.getSignature());,if (PreorderVisitor != null ) int localsThatAreParameters = PreorderVisitor.getNumberArguments(method.getSignature());
LocalVariableAnnotation.java,SignatureParser parser = new SignatureParser(method.getSignature());,if (SignatureParser(method != null ) SignatureParser parser = new SignatureParser(method.getSignature());
LocalVariableAnnotation.java,String sig = signatureIterator.next();,if (signatureIterator != null ) String sig = signatureIterator.next();
Lookup.java,ClassDescriptor superclassDescriptor = clazz.getSuperclassDescriptor();,if (clazz != null ) ClassDescriptor superclassDescriptor = clazz.getSuperclassDescriptor();
Lookup.java,Method[] m = clazz.getMethods();,if (clazz != null ) Method[] m = clazz.getMethods();
MethodAnnotation.java,String className = visitor.getDottedClassName();,if (visitor != null ) String className = visitor.getDottedClassName();
MethodAnnotation.java,String className = visitor.getDottedClassConstantOperand();,if (visitor != null ) String className = visitor.getDottedClassConstantOperand();
MethodAnnotation.java,String methodName = visitor.getNameConstantOperand();,if (visitor != null ) String methodName = visitor.getNameConstantOperand();
MethodAnnotation.java,String methodSig = visitor.getSigConstantOperand();,if (visitor != null ) String methodSig = visitor.getSigConstantOperand();
MethodAnnotation.java,String cName = ClassName.fromFieldSignature(item.getSignature());,if (ClassName != null ) String cName = ClassName.fromFieldSignature(item.getSignature());
MethodWarningSuppressor.java,MethodAnnotation bugMethod = bugInstance.getPrimaryMethod();,if (bugInstance != null ) MethodAnnotation bugMethod = bugInstance.getPrimaryMethod();
NewResults.java,SortedBugCollection result = op.execute();,if (op != null ) SortedBugCollection result = op.execute();
Obfuscate.java,IntAnnotation result = new IntAnnotation(m.getValue());,if (IntAnnotation(m != null ) IntAnnotation result = new IntAnnotation(m.getValue());
OpcodeStack.java,r+= signature.hashCode();,if (signature != null ) r+= signature.hashCode();
OpcodeStack.java,r+= source.hashCode();,if (source != null ) r+= source.hashCode();
OpcodeStack.java,int len = signature.length();,if (signature != null ) int len = signature.length();
OpcodeStack.java,FieldSummary fieldSummary = AnalysisContext.currentAnalysisContext().getFieldSummary();,if (AnalysisContext != null ) FieldSummary fieldSummary = AnalysisContext.currentAnalysisContext().getFieldSummary();
OpcodeStack.java,int pc = dbc.getBranchTarget() - dbc.getBranchOffset();,if (dbc != null ) int pc = dbc.getBranchTarget() - dbc.getBranchOffset();
OpcodeStack.java,register = dbc.getRegisterOperand();,if (dbc != null ) register = dbc.getRegisterOperand();
OpcodeStack.java,String castTo = dbc.getClassConstantOperand();,if (dbc != null ) String castTo = dbc.getClassConstantOperand();
OpcodeStack.java,FieldSummary fieldSummary = AnalysisContext.currentAnalysisContext().getFieldSummary();,if (AnalysisContext != null ) FieldSummary fieldSummary = AnalysisContext.currentAnalysisContext().getFieldSummary();
OpcodeStack.java,int specialKind = it.getSpecialKind();,if (it != null ) int specialKind = it.getSpecialKind();
OpcodeStack.java,int oldSpecialKind = it.getSpecialKind();,if (it != null ) int oldSpecialKind = it.getSpecialKind();
OpcodeStack.java,int dims = dbc.getIntConstant();,if (dbc != null ) int dims = dbc.getIntConstant();
OpcodeStack.java,signature = dbc.getClassConstantOperand();,if (dbc != null ) signature = dbc.getClassConstantOperand();
OpcodeStack.java,String arraySig = it.getSignature();,if (it != null ) String arraySig = it.getSignature();
OpcodeStack.java,int stackSize = stack.size();,if (stack != null ) int stackSize = stack.size();
OpcodeStack.java,signature = it.getSignature();,if (it != null ) signature = it.getSignature();
OpcodeStack.java,String clsName = dbc.getClassConstantOperand();,if (dbc != null ) String clsName = dbc.getClassConstantOperand();
OpcodeStack.java,String methodName = dbc.getNameConstantOperand();,if (dbc != null ) String methodName = dbc.getNameConstantOperand();
OpcodeStack.java,String itemSignature = item.getSignature();,if (item != null ) String itemSignature = item.getSignature();
OpcodeStack.java,Object sbVal = sbItem.getConstant();,if (sbItem != null ) Object sbVal = sbItem.getConstant();
OpcodeStack.java,Object value = item.getConstant();,if (item != null ) Object value = item.getConstant();
OpcodeStack.java,"result.injection = new HttpParameterInjection(parameterName, dbc.getPC());","if (dbc != null ) result.injection = new HttpParameterInjection(parameterName, dbc.getPC());"
OpcodeStack.java,int intoSize = mergeInto.size();,if (mergeInto != null ) int intoSize = mergeInto.size();
OpcodeStack.java,"JavaClass jclass = getJavaClass(analysisCache, descriptor.getClassDescriptor());","if (descriptor != null ) JavaClass jclass = getJavaClass(analysisCache, descriptor.getClassDescriptor());"
OpcodeStack.java,Code code = method.getCode();,if (method != null ) Code code = method.getCode();
OpcodeStack.java,int newCount = stack.jumpEntries.size();,if (stack != null ) int newCount = stack.jumpEntries.size();
OpcodeStack.java,Code code = v.getMethod().getCode();,if (v != null ) Code code = v.getMethod().getCode();
OpcodeStack.java,IAnalysisCache analysisCache = Global.getAnalysisCache();,if (Global != null ) IAnalysisCache analysisCache = Global.getAnalysisCache();
OpcodeStack.java,CodeException[] exceptionTable = code.getExceptionTable();,if (code != null ) CodeException[] exceptionTable = code.getExceptionTable();
OpcodeStack.java,Item it = new Item(argType.getSignature());,if (Item(argType != null ) Item it = new Item(argType.getSignature());
OpcodeStack.java,reg += it.getSize();,if (it != null ) reg += it.getSize();
OpcodeStack.java,Method m = dbc.getMethod();,if (dbc != null ) Method m = dbc.getMethod();
OpcodeStack.java,String signature = lv.getSignature();,if (lv != null ) String signature = lv.getSignature();
OpcodeStack.java,String signature = dbc.getSigConstantOperand();,if (dbc != null ) String signature = dbc.getSigConstantOperand();
OpcodeStack.java,int opcode = dbc.getOpcode();,if (dbc != null ) int opcode = dbc.getOpcode();
OpcodeStack.java,String signature = dbc.getSigConstantOperand();,if (dbc != null ) String signature = dbc.getSigConstantOperand();
PackageMemberAnnotation.java,AnalysisContext context = AnalysisContext.currentAnalysisContext();,if (AnalysisContext != null ) AnalysisContext context = AnalysisContext.currentAnalysisContext();
PackageMemberAnnotation.java,description = description.intern();,if (description != null ) description = description.intern();
PackageMemberAnnotation.java,this.description = description.intern();,if (description != null ) this.description = description.intern();
PackageStats.java,numClasses = packageMembers.size();,if (packageMembers != null ) numClasses = packageMembers.size();
PackageStats.java,SourceLineAnnotation source = bug.getPrimarySourceLineAnnotation();,if (bug != null ) SourceLineAnnotation source = bug.getPrimarySourceLineAnnotation();
PackageStats.java,ClassStats classStats = getClassStatsOrNull(source.getClassName());,if (getClassStatsOrNull(source != null ) ClassStats classStats = getClassStatsOrNull(source.getClassName());
PackageStats.java,size += classStats.size();,if (classStats != null ) size += classStats.size();
PackageStats.java,int numClasses = packageMembers.size();,if (packageMembers != null ) int numClasses = packageMembers.size();
PackageStats.java,numClasses = packageMembers.size();,if (packageMembers != null ) numClasses = packageMembers.size();
PackageWarningSuppressor.java,ClassAnnotation primaryClassAnnotation = bugInstance.getPrimaryClass();,if (bugInstance != null ) ClassAnnotation primaryClassAnnotation = bugInstance.getPrimaryClass();
PackageWarningSuppressor.java,String className = primaryClassAnnotation.getClassName();,if (primaryClassAnnotation != null ) String className = primaryClassAnnotation.getClassName();
ParameterWarningSuppressor.java,MethodAnnotation bugMethod = bugInstance.getPrimaryMethod();,if (bugInstance != null ) MethodAnnotation bugMethod = bugInstance.getPrimaryMethod();
ParameterWarningSuppressor.java,LocalVariableAnnotation localVariable = bugInstance.getPrimaryLocalVariableAnnotation();,if (bugInstance != null ) LocalVariableAnnotation localVariable = bugInstance.getPrimaryLocalVariableAnnotation();
PluginLoader.java,String location = url.getPath();,if (url != null ) String location = url.getPath();
PluginLoader.java,String findBugsHome = DetectorFactoryCollection.getFindBugsHome();,if (DetectorFactoryCollection != null ) String findBugsHome = DetectorFactoryCollection.getFindBugsHome();
PluginLoader.java,String findBugsHome = DetectorFactoryCollection.getFindBugsHome();,if (DetectorFactoryCollection != null ) String findBugsHome = DetectorFactoryCollection.getFindBugsHome();
PluginLoader.java,String classloaderName =  classLoader.getClass().getName();,if (classLoader != null ) String classloaderName =  classLoader.getClass().getName();
PluginLoader.java,String language = locale.getLanguage();,if (locale != null ) String language = locale.getLanguage();
PluginLoader.java,String value = node.getText();,if (node != null ) String value = node.getText();
PluginLoader.java,String detailHTML = details.getText();,if (details != null ) String detailHTML = details.getText();
PluginLoader.java,String description = bugCodeNode.getText();,if (bugCodeNode != null ) String description = bugCodeNode.getText();
PluginLoader.java,name = factory.getFullName();,if (factory != null ) name = factory.getFullName();
PluginLoader.java,InputStreamReader stream = new InputStreamReader(messageURL.openStream());,if (InputStreamReader(messageURL != null ) InputStreamReader stream = new InputStreamReader(messageURL.openStream());
PrintingBugReporter.java,String key = warning.getUserDesignationKey();,if (warning != null ) String key = warning.getUserDesignationKey();
PrintingBugReporter.java,BugPattern pattern = warning.getBugPattern();,if (warning != null ) BugPattern pattern = warning.getBugPattern();
PrintingBugReporter.java,Exception e = reporter.getFatalException();,if (reporter != null ) Exception e = reporter.getFatalException();
Project.java,WorkListItem item = workList.getNextItem();,if (workList != null ) WorkListItem item = workList.getNextItem();
Project.java,in = manifestURL.openStream();,if (manifestURL != null ) in = manifestURL.openStream();
Project.java,Attributes mainAttrs = manifest.getMainAttributes();,if (manifest != null ) Attributes mainAttrs = manifest.getMainAttributes();
Project.java,XMLReader xr = XMLReaderFactory.createXMLReader();,if (XMLReaderFactory != null ) XMLReader xr = XMLReaderFactory.createXMLReader();
Project.java,String base = destination.getParent();,if (destination != null ) String base = destination.getParent();
Project.java,List<String> newList = new ArrayList<String>(paths.size());,if (ArrayList<String>(paths != null ) List<String> newList = new ArrayList<String>(paths.size());
Project.java,srcFile = srcFile.toLowerCase();,if (srcFile != null ) srcFile = srcFile.toLowerCase();
Project.java,base = base.toLowerCase();,if (base != null ) base = base.toLowerCase();
ProjectPackagePrefixes.java,"prefixes = prefixes.replace('/', '.').trim();","if (' != null ) prefixes = prefixes.replace('/', '.').trim();"
ProjectPackagePrefixes.java,String result = Arrays.asList(parts).toString();,if (Arrays != null ) String result = Arrays.asList(parts).toString();
ProjectPackagePrefixes.java,String packageName = b.getPrimaryClass().getPackageName();,if (b != null ) String packageName = b.getPrimaryClass().getPackageName();
ProjectPackagePrefixes.java,Set<String> packages = missingProjectCount.keySet();,if (missingProjectCount != null ) Set<String> packages = missingProjectCount.keySet();
ProjectStats.java,SourceLineAnnotation source = bug.getPrimarySourceLineAnnotation();,if (bug != null ) SourceLineAnnotation source = bug.getPrimarySourceLineAnnotation();
ProjectStats.java,PackageStats stat = getPackageStats(source.getPackageName());,if (getPackageStats(source != null ) PackageStats stat = getPackageStats(source.getPackageName());
ProjectStats.java,int priority = bug.getPriority();,if (bug != null ) int priority = bug.getPriority();
ProjectStats.java,totalSize += stats.size();,if (stats != null ) totalSize += stats.size();
ProjectStats.java,totalClasses += stats.getNumClasses();,if (stats != null ) totalClasses += stats.getNumClasses();
ProjectStats.java,long cpuTime = delta.getCpuTime(); // nanoseconds,if (nanoseconds != null ) long cpuTime = delta.getCpuTime(); // nanoseconds
ProjectStats.java,long clockTime = delta.getClockTime(); // milliseconds,if (milliseconds != null ) long clockTime = delta.getClockTime(); // milliseconds
ProjectStats.java,long peakMemory = delta.getPeakMemory(); // bytes,if (bytes != null ) long peakMemory = delta.getPeakMemory(); // bytes
ProjectStats.java,long gcTime = delta.getCollectionTime(); // milliseconds,if (milliseconds != null ) long gcTime = delta.getCollectionTime(); // milliseconds
ProjectStats.java,TransformerFactory tf = TransformerFactory.newInstance();,if (TransformerFactory != null ) TransformerFactory tf = TransformerFactory.newInstance();
ProjectStats.java,Reader rdr = in.getReader();,if (in != null ) Reader rdr = in.getReader();
ProjectStats.java,InputStream is = xsl.getInputStream();,if (xsl != null ) InputStream is = xsl.getInputStream();
ProjectStats.java,totalSizeFromPackageStats += size - stat.size();,if (stat != null ) totalSizeFromPackageStats += size - stat.size();
ProjectStats.java,totalClassesFromPackageStats += numClasses - stat.getNumClasses();,if (stat != null ) totalClassesFromPackageStats += numClasses - stat.getNumClasses();
ProjectStats.java,String key = entry.getKey();,if (entry != null ) String key = entry.getKey();
PropertyBundle.java,in = url.openStream();,if (url != null ) in = url.openStream();
QueryBugAnnotations.java,Iterator<BugInstance> i = bugCollection.iterator();,if (bugCollection != null ) Iterator<BugInstance> i = bugCollection.iterator();
QueryBugAnnotations.java,Set<String> contents = bugInstance.getTextAnnotationWords();,if (bugInstance != null ) Set<String> contents = bugInstance.getTextAnnotationWords();
RecursiveFileSearch.java,File dir = directoryWorkList.removeFirst();,if (directoryWorkList != null ) File dir = directoryWorkList.removeFirst();
RecursiveFileSearch.java,File[] contentList = dir.listFiles();,if (dir != null ) File[] contentList = dir.listFiles();
ResourceTrackingDetector.java,final JavaClass jclass = classContext.getJavaClass();,if (classContext != null ) final JavaClass jclass = classContext.getJavaClass();
ResourceTrackingDetector.java,Method[] methodList = jclass.getMethods();,if (jclass != null ) Method[] methodList = jclass.getMethods();
ResourceTrackingDetector.java,ConstantPoolGen cpg = classContext.getConstantPoolGen();,if (classContext != null ) ConstantPoolGen cpg = classContext.getConstantPoolGen();
ResourceTrackingDetector.java,ConstantPoolGen cpg = classContext.getConstantPoolGen();,if (classContext != null ) ConstantPoolGen cpg = classContext.getConstantPoolGen();
ResourceTrackingDetector.java,Profiler profiler = Global.getAnalysisCache().getProfiler();,if (Global != null ) Profiler profiler = Global.getAnalysisCache().getProfiler();
SelfCalls.java,JavaClass jclass = classContext.getJavaClass();,if (classContext != null ) JavaClass jclass = classContext.getJavaClass();
SelfCalls.java,Method[] methods = jclass.getMethods();,if (jclass != null ) Method[] methods = jclass.getMethods();
SelfCalls.java,Method method = node.getMethod();,if (node != null ) Method method = node.getMethod();
SelfCalls.java,Iterator<BasicBlock> i = cfg.blockIterator();,if (cfg != null ) Iterator<BasicBlock> i = cfg.blockIterator();
SelfCalls.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
SelfCalls.java,ConstantPoolGen cpg = classContext.getConstantPoolGen();,if (classContext != null ) ConstantPoolGen cpg = classContext.getConstantPoolGen();
SelfCalls.java,JavaClass jclass = classContext.getJavaClass();,if (classContext != null ) JavaClass jclass = classContext.getJavaClass();
SelfCalls.java,Method[] methods = jclass.getMethods();,if (jclass != null ) Method[] methods = jclass.getMethods();
SelfCalls.java,String signature = method.getSignature();,if (method != null ) String signature = method.getSignature();
SelfCalls.java,boolean isStatic = method.isStatic();,if (method != null ) boolean isStatic = method.isStatic();
SloppyBugComparator.java,private ClassNameRewriter classNameRewriter = IdentityClassNameRewriter.instance();,if (IdentityClassNameRewriter != null ) private ClassNameRewriter classNameRewriter = IdentityClassNameRewriter.instance();
SloppyBugComparator.java,String lhsClassName = classNameRewriter.rewriteClassName(lhs.getClassName());,if (classNameRewriter != null ) String lhsClassName = classNameRewriter.rewriteClassName(lhs.getClassName());
SloppyBugComparator.java,String rhsClassName = classNameRewriter.rewriteClassName(rhs.getClassName());,if (classNameRewriter != null ) String rhsClassName = classNameRewriter.rewriteClassName(rhs.getClassName());
SloppyBugComparator.java,BugPattern lhsPattern = lhs.getBugPattern();,if (lhs != null ) BugPattern lhsPattern = lhs.getBugPattern();
SloppyBugComparator.java,BugPattern rhsPattern = rhs.getBugPattern();,if (rhs != null ) BugPattern rhsPattern = rhs.getBugPattern();
SloppyBugComparator.java,lhsAbbrev = getAbbrevFromBugType(lhs.getType());,if (getAbbrevFromBugType(lhs != null ) lhsAbbrev = getAbbrevFromBugType(lhs.getType());
SloppyBugComparator.java,rhsAbbrev = getAbbrevFromBugType(rhs.getType());,if (getAbbrevFromBugType(rhs != null ) rhsAbbrev = getAbbrevFromBugType(rhs.getType());
SloppyBugComparator.java,lhsAbbrev = lhsPattern.getAbbrev();,if (lhsPattern != null ) lhsAbbrev = lhsPattern.getAbbrev();
SloppyBugComparator.java,rhsAbbrev = rhsPattern.getAbbrev();,if (rhsPattern != null ) rhsAbbrev = rhsPattern.getAbbrev();
SloppyBugComparator.java,"cmp = compareClassesAllowingNull(lhs.getPrimaryClass(), rhs.getPrimaryClass());","if (rhs != null ) cmp = compareClassesAllowingNull(lhs.getPrimaryClass(), rhs.getPrimaryClass());"
SloppyBugComparator.java,"cmp = compareMethodsAllowingNull(lhs.getPrimaryMethod(), rhs.getPrimaryMethod());","if (rhs != null ) cmp = compareMethodsAllowingNull(lhs.getPrimaryMethod(), rhs.getPrimaryMethod());"
SloppyBugComparator.java,"cmp = compareFieldsAllowingNull(lhs.getPrimaryField(), rhs.getPrimaryField());","if (rhs != null ) cmp = compareFieldsAllowingNull(lhs.getPrimaryField(), rhs.getPrimaryField());"
SortedBugCollection.java,long analysisTimestamp = System.currentTimeMillis();,if (System != null ) long analysisTimestamp = System.currentTimeMillis();
SortedBugCollection.java,dataSource = file.getAbsolutePath();,if (file != null ) dataSource = file.getAbsolutePath();
SortedBugCollection.java,timeStartedLoading = System.currentTimeMillis();,if (System != null ) timeStartedLoading = System.currentTimeMillis();
SortedBugCollection.java,Profiler profiler = getProjectStats().getProfiler();,if (getProjectStats() != null ) Profiler profiler = getProjectStats().getProfiler();
SortedBugCollection.java,Document document = docFactory.createDocument();,if (docFactory != null ) Document document = docFactory.createDocument();
SortedBugCollection.java,String hash = bugInstance.getInstanceHash();,if (bugInstance != null ) String hash = bugInstance.getInstanceHash();
SortedBugCollection.java,BugPattern bugPattern = bugInstance.getBugPattern();,if (bugInstance != null ) BugPattern bugPattern = bugInstance.getBugPattern();
SortedBugCollection.java,String bugCode = bugInstance.getAbbrev();,if (bugInstance != null ) String bugCode = bugInstance.getAbbrev();
SortedBugCollection.java,String bugCodeDescription = bugCode.getDescription();,if (bugCode != null ) String bugCodeDescription = bugCode.getDescription();
SortedBugCollection.java,BugPattern bugPattern = bugInstance.getBugPattern();,if (bugInstance != null ) BugPattern bugPattern = bugInstance.getBugPattern();
SortedBugCollection.java,stackTrace = error.getNestedStackTrace();,if (error != null ) stackTrace = error.getNestedStackTrace();
SortedBugCollection.java,ClassAnnotation rca = rhs.getPrimaryClass();,if (rhs != null ) ClassAnnotation rca = rhs.getPrimaryClass();
SortedBugCollection.java,long diff  = lhs.getFirstVersion() - rhs.getFirstVersion();,if (rhs != null ) long diff  = lhs.getFirstVersion() - rhs.getFirstVersion();
SortedBugCollection.java,BugInstance first = tailSet.first();,if (tailSet != null ) BugInstance first = tailSet.first();
SortedBugCollection.java,summaryHTML = writer.toString();,if (writer != null ) summaryHTML = writer.toString();
SortedBugCollection.java,sequence = appVersionList.size();,if (appVersionList != null ) sequence = appVersionList.size();
SortedBugCollection.java,IGuiCallback callback = project.getGuiCallback();,if (project != null ) IGuiCallback callback = project.getGuiCallback();
SortingBugReporter.java,Iterator<BugInstance> i = bugCollection.iterator();,if (bugCollection != null ) Iterator<BugInstance> i = bugCollection.iterator();
SourceLineAnnotation.java,LineNumberTable lineNumberTable = methodGen.getLineNumberTable(methodGen.getConstantPool());,if (methodGen != null ) LineNumberTable lineNumberTable = methodGen.getLineNumberTable(methodGen.getConstantPool());
SourceLineAnnotation.java,String className = methodGen.getClassName();,if (methodGen != null ) String className = methodGen.getClassName();
SourceLineAnnotation.java,int codeSize = methodGen.getInstructionList().getLength();,if (methodGen != null ) int codeSize = methodGen.getInstructionList().getLength();
SourceLineAnnotation.java,LineNumber[] table = lineNumberTable.getLineNumberTable();,if (lineNumberTable != null ) LineNumber[] table = lineNumberTable.getLineNumberTable();
SourceLineAnnotation.java,String sourceFile = javaClass.getSourceFileName();,if (javaClass != null ) String sourceFile = javaClass.getSourceFileName();
SourceLineAnnotation.java,Code code = method.getCode();,if (method != null ) Code code = method.getCode();
SourceLineAnnotation.java,LineNumberTable lineNumberTable = method.getLineNumberTable();,if (method != null ) LineNumberTable lineNumberTable = method.getLineNumberTable();
SourceLineAnnotation.java,String sourceFile = xclass.getSource();,if (xclass != null ) String sourceFile = xclass.getSource();
SourceLineAnnotation.java,LineNumber[] entries = lnt.getLineNumberTable();,if (lnt != null ) LineNumber[] entries = lnt.getLineNumberTable();
SourceLineAnnotation.java,firstLine = entry.getLineNumber();,if (entry != null ) firstLine = entry.getLineNumber();
SourceLineAnnotation.java,bytecode = entry.getStartPC();,if (entry != null ) bytecode = entry.getStartPC();
SourceLineAnnotation.java,result = createUnknown(methodDescriptor.getClassDescriptor().toDottedClassName());,if (createUnknown(methodDescriptor != null ) result = createUnknown(methodDescriptor.getClassDescriptor().toDottedClassName());
SourceLineAnnotation.java,IAnalysisCache analysisCache = Global.getAnalysisCache();,if (Global != null ) IAnalysisCache analysisCache = Global.getAnalysisCache();
SourceLineAnnotation.java,LineNumberTable lineNumberTable = method.getCode().getLineNumberTable();,if (method != null ) LineNumberTable lineNumberTable = method.getCode().getLineNumberTable();
SourceLineAnnotation.java,String className = jclass.getClassName();,if (jclass != null ) String className = jclass.getClassName();
SourceLineAnnotation.java,String sourceFile = jclass.getSourceFileName();,if (jclass != null ) String sourceFile = jclass.getSourceFileName();
SourceLineAnnotation.java,String className = visitor.getDottedClassName();,if (visitor != null ) String className = visitor.getDottedClassName();
SourceLineAnnotation.java,String sourceFile = visitor.getSourceFile();,if (visitor != null ) String sourceFile = visitor.getSourceFile();
SourceLineAnnotation.java,String className = visitor.getDottedClassName();,if (visitor != null ) String className = visitor.getDottedClassName();
SourceLineAnnotation.java,String sourceFile = visitor.getSourceFile();,if (visitor != null ) String sourceFile = visitor.getSourceFile();
SourceLineAnnotation.java,LineNumberTable table = methodGen.getLineNumberTable(methodGen.getConstantPool());,if (methodGen != null ) LineNumberTable table = methodGen.getLineNumberTable(methodGen.getConstantPool());
SourceLineAnnotation.java,String className = methodGen.getClassName();,if (methodGen != null ) String className = methodGen.getClassName();
SourceLineAnnotation.java,int bytecodeOffset = handle.getPosition();,if (handle != null ) int bytecodeOffset = handle.getPosition();
SourceLineAnnotation.java,int lineNumber = table.getSourceLine(handle.getPosition());,if (table != null ) int lineNumber = table.getSourceLine(handle.getPosition());
SourceLineAnnotation.java,LineNumberTable lineNumberTable = methodGen.getLineNumberTable(methodGen.getConstantPool());,if (methodGen != null ) LineNumberTable lineNumberTable = methodGen.getLineNumberTable(methodGen.getConstantPool());
SourceLineAnnotation.java,String className = methodGen.getClassName();,if (methodGen != null ) String className = methodGen.getClassName();
SourceLineAnnotation.java,int startLine = lineNumberTable.getSourceLine(start.getPosition());,if (lineNumberTable != null ) int startLine = lineNumberTable.getSourceLine(start.getPosition());
SourceLineAnnotation.java,int endLine = lineNumberTable.getSourceLine(end.getPosition());,if (lineNumberTable != null ) int endLine = lineNumberTable.getSourceLine(end.getPosition());
SourceLineAnnotation.java,Code code = visitor.getMethod().getCode();,if (visitor != null ) Code code = visitor.getMethod().getCode();
SourceLineAnnotation.java,this.description = description.intern();,if (description != null ) this.description = description.intern();
SourceLineAnnotation.java,Project project = myProject.get();,if (myProject != null ) Project project = myProject.get();
SourceLineAnnotation.java,SourceFinder mySourceFinder = project.getSourceFinder();,if (project != null ) SourceFinder mySourceFinder = project.getSourceFinder();
SourceLineAnnotation.java,String myRelativeSourceBase = relativeSourceBase.get();,if (relativeSourceBase != null ) String myRelativeSourceBase = relativeSourceBase.get();
SourceLineAnnotation.java,Method method = targetMethod.getMethod();,if (targetMethod != null ) Method method = targetMethod.getMethod();
SourceLineAnnotation.java,SourceInfoMap sourceInfoMap = AnalysisContext.currentAnalysisContext().getSourceInfoMap();,if (AnalysisContext != null ) SourceInfoMap sourceInfoMap = AnalysisContext.currentAnalysisContext().getSourceInfoMap();
SourceLineAnnotation.java,"lastLine = Math.max(lastLine, line.getLineNumber());","if (line != null ) lastLine = Math.max(lastLine, line.getLineNumber());"
SourceLineAnnotation.java,"firstLine = Math.min(firstLine, line.getLineNumber());","if (line != null ) firstLine = Math.min(firstLine, line.getLineNumber());"
SuppressionMatcher.java,String packageName = suppressor.getPackageName();,if (suppressor != null ) String packageName = suppressor.getPackageName();
SuppressionMatcher.java,ClassAnnotation clazz = suppressor.getClassAnnotation().getTopLevelClass();,if (suppressor != null ) ClassAnnotation clazz = suppressor.getClassAnnotation().getTopLevelClass();
SuppressionMatcher.java,ClassAnnotation clazz = b.getPrimaryClass().getTopLevelClass();,if (b != null ) ClassAnnotation clazz = b.getPrimaryClass().getTopLevelClass();
SwitchHandler.java,int size = switchOffsetStack.size();,if (switchOffsetStack != null ) int size = switchOffsetStack.size();
SwitchHandler.java,int pc = dbc.getPC();,if (dbc != null ) int pc = dbc.getPC();
SwitchHandler.java,int size = switchOffsetStack.size();,if (switchOffsetStack != null ) int size = switchOffsetStack.size();
SwitchHandler.java,int nextSwitchOffset = details.getNextSwitchOffset(dbc.getPC());,if (details != null ) int nextSwitchOffset = details.getNextSwitchOffset(dbc.getPC());
SwitchHandler.java,int size = switchOffsetStack.size();,if (switchOffsetStack != null ) int size = switchOffsetStack.size();
SystemProperties.java,Properties result = System.getProperties();,if (System != null ) Properties result = System.getProperties();
SystemProperties.java,in = url.openStream();,if (url != null ) in = url.openStream();
TextUIBugReporter.java,BugPattern pattern = bugInstance.getBugPattern();,if (bugInstance != null ) BugPattern pattern = bugInstance.getBugPattern();
TextUIBugReporter.java,long first = bugInstance.getFirstVersion();,if (bugInstance != null ) long first = bugInstance.getFirstVersion();
TextUIBugReporter.java,long last = bugInstance.getLastVersion();,if (bugInstance != null ) long last = bugInstance.getLastVersion();
TextUIBugReporter.java,String[] stackTrace = error.getStackTrace();,if (error != null ) String[] stackTrace = error.getStackTrace();
TextUICommandLine.java,String token = tok.nextToken();,if (tok != null ) String token = tok.nextToken();
TextUICommandLine.java,String what = tok.nextToken().trim();,if (tok != null ) String what = tok.nextToken().trim();
TextUICommandLine.java,userPreferences = UserPreferences.createDefaultUserPreferences();,if (UserPreferences != null ) userPreferences = UserPreferences.createDefaultUserPreferences();
Tokenizer.java,int c = reader.read();,if (reader != null ) int c = reader.read();
Tokenizer.java,int c = reader.read();,if (reader != null ) int c = reader.read();
Tokenizer.java,int c = reader.read();,if (reader != null ) int c = reader.read();
Tokenizer.java,c = reader.read();,if (reader != null ) c = reader.read();
TypeAnnotation.java,typeParameters = genericObjectType.getGenericParametersAsString();,if (genericObjectType != null ) typeParameters = genericObjectType.getGenericParametersAsString();
TypeAnnotation.java,this.roleDescription = roleDescription.intern();,if (roleDescription != null ) this.roleDescription = roleDescription.intern();
VersionInsensitiveBugComparator.java,private ClassNameRewriter classNameRewriter = IdentityClassNameRewriter.instance();,if (IdentityClassNameRewriter != null ) private ClassNameRewriter classNameRewriter = IdentityClassNameRewriter.instance();
VersionInsensitiveBugComparator.java,BugAnnotation candidate = iter.next();,if (iter != null ) BugAnnotation candidate = iter.next();
VersionInsensitiveBugComparator.java,Iterator<BugAnnotation> i = bug.annotationIterator();,if (bug != null ) Iterator<BugAnnotation> i = bug.annotationIterator();
VersionInsensitiveBugComparator.java,BugPattern lhsPattern = lhs.getBugPattern();,if (lhs != null ) BugPattern lhsPattern = lhs.getBugPattern();
VersionInsensitiveBugComparator.java,BugPattern rhsPattern = rhs.getBugPattern();,if (rhs != null ) BugPattern rhsPattern = rhs.getBugPattern();
VersionInsensitiveBugComparator.java,String lhsCode = getCode(lhs.getType());,if (getCode(lhs != null ) String lhsCode = getCode(lhs.getType());
VersionInsensitiveBugComparator.java,String rhsCode = getCode(rhs.getType());,if (getCode(rhs != null ) String rhsCode = getCode(rhs.getType());
VersionInsensitiveBugComparator.java,cmp = lhs.getPriority() - rhs.getPriority();,if (rhs != null ) cmp = lhs.getPriority() - rhs.getPriority();
VersionInsensitiveBugComparator.java,Iterator<BugAnnotation> lhsIter = new FilteringAnnotationIterator(lhs.annotationIterator());,if (FilteringAnnotationIterator(lhs != null ) Iterator<BugAnnotation> lhsIter = new FilteringAnnotationIterator(lhs.annotationIterator());
VersionInsensitiveBugComparator.java,Iterator<BugAnnotation> rhsIter = new FilteringAnnotationIterator(rhs.annotationIterator());,if (FilteringAnnotationIterator(rhs != null ) Iterator<BugAnnotation> rhsIter = new FilteringAnnotationIterator(rhs.annotationIterator());
VersionInsensitiveBugComparator.java,BugAnnotation lhsAnnotation = lhsIter.next();,if (lhsIter != null ) BugAnnotation lhsAnnotation = lhsIter.next();
VersionInsensitiveBugComparator.java,lhsClass = lhsAnnotation.getClass();,if (lhsAnnotation != null ) lhsClass = lhsAnnotation.getClass();
VersionInsensitiveBugComparator.java,lhsAnnotation = lhsIter.next();,if (lhsIter != null ) lhsAnnotation = lhsIter.next();
VersionInsensitiveBugComparator.java,rhsAnnotation = rhsIter.next();,if (rhsIter != null ) rhsAnnotation = rhsIter.next();
XDocsBugReporter.java,this.document = DocumentHelper.createDocument();,if (DocumentHelper != null ) this.document = DocumentHelper.createDocument();
XDocsBugReporter.java,"XMLWriter writer = new XMLWriter(out, OutputFormat.createPrettyPrint());","if (OutputFormat != null ) XMLWriter writer = new XMLWriter(out, OutputFormat.createPrettyPrint());"
XDocsBugReporter.java,int len = theString.length();,if (theString != null ) int len = theString.length();
XDocsBugReporter.java,String className = bugInstance.getPrimaryClass().getClassName();,if (bugInstance != null ) String className = bugInstance.getPrimaryClass().getClassName();
AbstractDataflowAnalysis.java,Fact start = getStartFact(location.getBasicBlock());,if (getStartFact(location != null ) Fact start = getStartFact(location.getBasicBlock());
AbstractDataflowAnalysis.java,BasicBlock basicBlock = location.getBasicBlock();,if (location != null ) BasicBlock basicBlock = location.getBasicBlock();
AbstractFrameModelingVisitor.java,int index = obj.getIndex();,if (obj != null ) int index = obj.getIndex();
AbstractFrameModelingVisitor.java,Value value = frame.popValue();,if (frame != null ) Value value = frame.popValue();
AnalysisContext.java,IAnalysisCache analysisCache = Global.getAnalysisCache();,if (Global != null ) IAnalysisCache analysisCache = Global.getAnalysisCache();
AnalysisContext.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
AnalysisContext.java,String name = xClass.getSource();,if (xClass != null ) String name = xClass.getSource();
AnnotationDatabase.java,InnerClassAccessMap icam = AnalysisContext.currentAnalysisContext().getInnerClassAccessMap();,if (AnalysisContext != null ) InnerClassAccessMap icam = AnalysisContext.currentAnalysisContext().getInnerClassAccessMap();
AnnotationDatabase.java,o = ica.getField();,if (ica != null ) o = ica.getField();
AnnotationDatabase.java,AnnotationEnum min = inheritedAnnotations.first();,if (inheritedAnnotations != null ) AnnotationEnum min = inheritedAnnotations.first();
AssertionMethods.java,String fullyQualifiedName = tok.nextToken();,if (tok != null ) String fullyQualifiedName = tok.nextToken();
AssertionMethods.java,ConstantPool cp = jclass.getConstantPool();,if (jclass != null ) ConstantPool cp = jclass.getConstantPool();
AssertionMethods.java,int numConstants = cp.getLength();,if (cp != null ) int numConstants = cp.getLength();
AssertionMethods.java,String classNameLC = className.toLowerCase();,if (className != null ) String classNameLC = className.toLowerCase();
AssertionMethods.java,String methodNameLC = methodName.toLowerCase();,if (methodName != null ) String methodNameLC = methodName.toLowerCase();
AssertionMethods.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
AssertionMethods.java,boolean isAssertionMethod = assertionMethodRefSet.get(inv.getIndex());,if (assertionMethodRefSet != null ) boolean isAssertionMethod = assertionMethodRefSet.get(inv.getIndex());
AssignedFieldMap.java,JavaClass[] superClassList = myClass.getSuperClasses();,if (myClass != null ) JavaClass[] superClassList = myClass.getSuperClasses();
AssignedFieldMap.java,Method[] methodList = myClass.getMethods();,if (myClass != null ) Method[] methodList = myClass.getMethods();
AssignedFieldMap.java,String myClassName = myClass.getClassName();,if (myClass != null ) String myClassName = myClass.getClassName();
AssignedFieldMap.java,String myPackageName = myClass.getPackageName();,if (myClass != null ) String myPackageName = myClass.getPackageName();
AssignedFieldMap.java,String superClassName = jclass.getClassName();,if (jclass != null ) String superClassName = jclass.getClassName();
AssignedFieldMap.java,String superPackageName = jclass.getPackageName();,if (jclass != null ) String superPackageName = jclass.getPackageName();
AssignedFieldMap.java,Field[] fieldList = jclass.getFields();,if (jclass != null ) Field[] fieldList = jclass.getFields();
AssignedFieldMap.java,InstructionList il = methodGen.getInstructionList();,if (methodGen != null ) InstructionList il = methodGen.getInstructionList();
AssignedFieldMap.java,InstructionHandle handle = il.getStart();,if (il != null ) InstructionHandle handle = il.getStart();
AssignedFieldMap.java,ConstantPoolGen cpg = methodGen.getConstantPool();,if (methodGen != null ) ConstantPoolGen cpg = methodGen.getConstantPool();
AssignedFieldMap.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
AssignedFieldMap.java,short opcode = ins.getOpcode();,if (ins != null ) short opcode = ins.getOpcode();
AssignedFieldMap.java,handle = handle.getNext();,if (handle != null ) handle = handle.getNext();
BasicBlock.java,short opcode = exceptionThrower.getInstruction().getOpcode();,if (exceptionThrower != null ) short opcode = exceptionThrower.getInstruction().getOpcode();
BetterCFGBuilder2.java,int position = handle.getPosition();,if (handle != null ) int position = handle.getPosition();
BetterCFGBuilder2.java,resultBlock = result.allocate();,if (result != null ) resultBlock = result.allocate();
BetterCFGBuilder2.java,InstructionHandle head = instructionList.getStart();,if (instructionList != null ) InstructionHandle head = instructionList.getStart();
BetterCFGBuilder2.java,InstructionHandle next = head.getNext();,if (head != null ) InstructionHandle next = head.getNext();
BetterCFGBuilder2.java,int consumed = ii.consumeStack(methodGen.getConstantPool());,if (ii != null ) int consumed = ii.consumeStack(methodGen.getConstantPool());
BetterCFGBuilder2.java,InstructionHandle next = head.getNext();,if (head != null ) InstructionHandle next = head.getNext();
BetterCFGBuilder2.java,head = head.getNext();,if (head != null ) head = head.getNext();
BetterCFGBuilder2.java,topLevelSubroutine = new Subroutine(instructionList.getStart());,if (Subroutine(instructionList != null ) topLevelSubroutine = new Subroutine(instructionList.getStart());
BetterCFGBuilder2.java,Subroutine subroutine = subroutineWorkList.removeFirst();,if (subroutineWorkList != null ) Subroutine subroutine = subroutineWorkList.removeFirst();
BetterCFGBuilder2.java,WorkListItem item = subroutine.nextItem();,if (subroutine != null ) WorkListItem item = subroutine.nextItem();
BetterCFGBuilder2.java,InstructionHandle handle = item.getStartInstruction();,if (item != null ) InstructionHandle handle = item.getStartInstruction();
BetterCFGBuilder2.java,BasicBlock basicBlock = item.getBasicBlock();,if (item != null ) BasicBlock basicBlock = item.getBasicBlock();
BetterCFGBuilder2.java,BasicBlock body = subroutine.allocateBasicBlock();,if (subroutine != null ) BasicBlock body = subroutine.allocateBasicBlock();
BetterCFGBuilder2.java,short opcode = ins.getOpcode();,if (ins != null ) short opcode = ins.getOpcode();
BetterCFGBuilder2.java,InstructionHandle jsrTarget = jsr.getTarget();,if (jsr != null ) InstructionHandle jsrTarget = jsr.getTarget();
BetterCFGBuilder2.java,Iterator<Target> i = visitor.targetIterator();,if (visitor != null ) Iterator<Target> i = visitor.targetIterator();
BetterCFGBuilder2.java,InstructionHandle next = handle.getNext();,if (handle != null ) InstructionHandle next = handle.getNext();
BetterCFGBuilder2.java,BasicBlock resultStartBlock = rootContext.getBlock(topLevelSubroutine.getStartBlock());,if (rootContext != null ) BasicBlock resultStartBlock = rootContext.getBlock(topLevelSubroutine.getStartBlock());
BetterCFGBuilder2.java,CFG result = context.getResult();,if (context != null ) CFG result = context.getResult();
BetterCFGBuilder2.java,Subroutine subroutine = context.getSubroutine();,if (context != null ) Subroutine subroutine = context.getSubroutine();
BetterCFGBuilder2.java,CFG subCFG = subroutine.getCFG();,if (subroutine != null ) CFG subCFG = subroutine.getCFG();
BetterCFGBuilder2.java,BasicBlock subBlock = context.nextItem();,if (context != null ) BasicBlock subBlock = context.nextItem();
BetterCFGBuilder2.java,BasicBlock.InstructionIterator insIter = subBlock.instructionIterator();,if (subBlock != null ) BasicBlock.InstructionIterator insIter = subBlock.instructionIterator();
BetterCFGBuilder2.java,int edgeType = edge.getType();,if (edge != null ) int edgeType = edge.getType();
BetterCFGBuilder2.java,InstructionHandle jsrHandle = subBlock.getLastInstruction();,if (subBlock != null ) InstructionHandle jsrHandle = subBlock.getLastInstruction();
BetterCFGBuilder2.java,JsrInstruction jsr = (JsrInstruction) jsrHandle.getInstruction();,if (jsrHandle != null ) JsrInstruction jsr = (JsrInstruction) jsrHandle.getInstruction();
BetterCFGBuilder2.java,BasicBlock resultJSRStartBlock = jsrContext.getBlock(jsrSub.getStartBlock());,if (jsrContext != null ) BasicBlock resultJSRStartBlock = jsrContext.getBlock(jsrSub.getStartBlock());
BetterCFGBuilder2.java,BasicBlock subJSRSuccessorBlock = subroutine.getBlock(jsrHandle.getNext());,if (subroutine != null ) BasicBlock subJSRSuccessorBlock = subroutine.getBlock(jsrHandle.getNext());
BetterCFGBuilder2.java,BasicBlock resultTarget = context.getBlock(edge.getTarget());,if (context != null ) BasicBlock resultTarget = context.getBlock(edge.getTarget());
BetterCFGBuilder2.java,InstructionHandle targetInstruction = escapeTarget.getTarget();,if (escapeTarget != null ) InstructionHandle targetInstruction = escapeTarget.getTarget();
BetterCFGBuilder2.java,Context caller = context.getCaller();,if (context != null ) Context caller = context.getCaller();
BetterCFGBuilder2.java,caller = caller.getCaller();,if (caller != null ) caller = caller.getCaller();
BetterCFGBuilder2.java,Method[] methodList = jclass.getMethods();,if (jclass != null ) Method[] methodList = jclass.getMethods();
BetterCFGBuilder2.java,CFG cfg = cfgBuilder.getCFG();,if (cfgBuilder != null ) CFG cfg = cfgBuilder.getCFG();
BlockType.java,int result = super.hashCode();,if (super != null ) int result = super.hashCode();
BlockTypeAnalysis.java,CodeExceptionGen exceptionGen = basicBlock.getExceptionGen();,if (basicBlock != null ) CodeExceptionGen exceptionGen = basicBlock.getExceptionGen();
CFG.java,curBlock = blockIter.next();,if (blockIter != null ) curBlock = blockIter.next();
CFG.java,Location loc = locs.next();,if (locs != null ) Location loc = locs.next();
CFG.java,InstructionHandle handle = exceptionEdge.getSource().getExceptionThrower();,if (exceptionEdge != null ) InstructionHandle handle = exceptionEdge.getSource().getExceptionThrower();
CFG.java,Edge edge = iter.next();,if (iter != null ) Edge edge = iter.next();
CFG.java,InstructionHandle handle = getEntry().getFirstInstruction();,if (getEntry() != null ) InstructionHandle handle = getEntry().getFirstInstruction();
CFG.java,BasicBlock basicBlock = loc.getBasicBlock();,if (loc != null ) BasicBlock basicBlock = loc.getBasicBlock();
CFG.java,handle = prevBlock.getLastInstruction();,if (prevBlock != null ) handle = prevBlock.getLastInstruction();
CFG.java,handle = handle.getPrev();,if (handle != null ) handle = handle.getPrev();
CFGPrinter.java,Iterator<BasicBlock> i = cfg.blockIterator();,if (cfg != null ) Iterator<BasicBlock> i = cfg.blockIterator();
CFGPrinter.java,CodeExceptionGen exceptionGen = bb.getExceptionGen();,if (bb != null ) CodeExceptionGen exceptionGen = bb.getExceptionGen();
CFGPrinter.java,Edge edge = edgeIter.next();,if (edgeIter != null ) Edge edge = edgeIter.next();
ClassContext.java,Method[] methodList = jclass.getMethods();,if (jclass != null ) Method[] methodList = jclass.getMethods();
ClassContext.java,List<Method> methodsInCallOrder = new ArrayList<Method>(xmethodsInCallOrder.size());,if (ArrayList<Method>(xmethodsInCallOrder != null ) List<Method> methodsInCallOrder = new ArrayList<Method>(xmethodsInCallOrder.size());
ClassContext.java,List<Method> methodList = Arrays.asList(getJavaClass().getMethods());,if (Arrays != null ) List<Method> methodList = Arrays.asList(getJavaClass().getMethods());
ClassContext.java,Code code = method.getCode();,if (method != null ) Code code = method.getCode();
ClassContext.java,byte[] instructionList = code.getCode();,if (code != null ) byte[] instructionList = code.getCode();
ClassContext.java,UnpackedCode unpackedCode = callback.getUnpackedCode();,if (callback != null ) UnpackedCode unpackedCode = callback.getUnpackedCode();
ClassContext.java,Code code = method.getCode();,if (method != null ) Code code = method.getCode();
ClassContext.java,byte[] instructionList = code.getCode();,if (code != null ) byte[] instructionList = code.getCode();
ClassContext.java,IAnalysisCache analysisCache = Global.getAnalysisCache();,if (Global != null ) IAnalysisCache analysisCache = Global.getAnalysisCache();
ClassContext.java,Code code = method.getCode();,if (method != null ) Code code = method.getCode();
ClassContext.java,CodeException[] exceptionTable = code.getExceptionTable();,if (code != null ) CodeException[] exceptionTable = code.getExceptionTable();
ClassContext.java,LineNumberTable lineNumberTable = method.getLineNumberTable();,if (method != null ) LineNumberTable lineNumberTable = method.getLineNumberTable();
ClassContext.java,int newLine = line.getLineNumber();,if (line != null ) int newLine = line.getLineNumber();
ClassContext.java,prevStartPc = line.getStartPC();,if (line != null ) prevStartPc = line.getStartPC();
ClassContext.java,Location loc = locs.next();,if (locs != null ) Location loc = locs.next();
ClassContext.java,Location loc = locs.next();,if (locs != null ) Location loc = locs.next();
ClassContext.java,Location loc = locs.next();,if (locs != null ) Location loc = locs.next();
ClassHash.java,classHash = digest.digest();,if (digest != null ) classHash = digest.digest();
ClassHash.java,CharBuffer cbuf = CharBuffer.allocate(s.length());,if (CharBuffer != null ) CharBuffer cbuf = CharBuffer.allocate(s.length());
ClassHash.java,int nbytes = buf.limit();,if (buf != null ) int nbytes = buf.limit();
ClassNotFoundExceptionParser.java,Throwable cause = ex.getCause();,if (ex != null ) Throwable cause = ex.getCause();
Dataflow.java,isForwards = analysis.isForwards();,if (analysis != null ) isForwards = analysis.isForwards();
Dataflow.java,Iterator<BasicBlock> i = cfg.blockIterator();,if (cfg != null ) Iterator<BasicBlock> i = cfg.blockIterator();
Dataflow.java,MethodGen methodGen = cfg.getMethodGen();,if (cfg != null ) MethodGen methodGen = cfg.getMethodGen();
Dataflow.java,methodName = cfg.getMethodName();,if (cfg != null ) methodName = cfg.getMethodName();
Dataflow.java,MethodGen mg = cfg.getMethodGen();,if (cfg != null ) MethodGen mg = cfg.getMethodGen();
Dataflow.java,Iterator<BasicBlock> i = blockOrder.blockIterator();,if (blockOrder != null ) Iterator<BasicBlock> i = blockOrder.blockIterator();
Dataflow.java,Iterator<BasicBlock> i = blockOrder.blockIterator();,if (blockOrder != null ) Iterator<BasicBlock> i = blockOrder.blockIterator();
Dataflow.java,Iterator<BasicBlock> j = blockOrder.blockIterator();,if (blockOrder != null ) Iterator<BasicBlock> j = blockOrder.blockIterator();
Dataflow.java,i = bb.iterator();,if (bb != null ) i = bb.iterator();
Dataflow.java,Fact edgeFact = analysis.createFact();,if (analysis != null ) Fact edgeFact = analysis.createFact();
Dataflow.java,pos = block.getFirstInstruction().getPosition();,if (block != null ) pos = block.getFirstInstruction().getPosition();
Dataflow.java,origResult = analysis.createFact();,if (analysis != null ) origResult = analysis.createFact();
Dataflow.java,Fact tmpResult = analysis.createFact();,if (analysis != null ) Fact tmpResult = analysis.createFact();
Dataflow.java,MethodGen mg = cfg.getMethodGen();,if (cfg != null ) MethodGen mg = cfg.getMethodGen();
Dataflow.java,String shortAnalysisName = analysis.getClass().getName();,if (analysis != null ) String shortAnalysisName = analysis.getClass().getName();
Dataflow.java,InstructionHandle handle = bb.getFirstInstruction();,if (bb != null ) InstructionHandle handle = bb.getFirstInstruction();
Edge.java,InstructionHandle sourceInstruction = source.getLastInstruction();,if (source != null ) InstructionHandle sourceInstruction = source.getLastInstruction();
Edge.java,InstructionHandle targetInstruction = target.getFirstInstruction();,if (target != null ) InstructionHandle targetInstruction = target.getFirstInstruction();
Edge.java,InstructionHandle sourceInstruction = source.getLastInstruction();,if (source != null ) InstructionHandle sourceInstruction = source.getLastInstruction();
Edge.java,InstructionHandle sourceInstruction = source.getLastInstruction();,if (source != null ) InstructionHandle sourceInstruction = source.getLastInstruction();
Edge.java,InstructionHandle targetInstruction = target.getFirstInstruction();,if (target != null ) InstructionHandle targetInstruction = target.getFirstInstruction();
Edge.java,targetInstruction = target.getExceptionThrower();,if (target != null ) targetInstruction = target.getExceptionThrower();
ExceptionHandlerMap.java,CodeExceptionGen[] handlerList = methodGen.getExceptionHandlers();,if (methodGen != null ) CodeExceptionGen[] handlerList = methodGen.getExceptionHandlers();
ExceptionHandlerMap.java,InstructionHandle handle = methodGen.getInstructionList().getStart();,if (methodGen != null ) InstructionHandle handle = methodGen.getInstructionList().getStart();
ExceptionHandlerMap.java,int startOfRange = exceptionHandler.getStartPC().getPosition();,if (exceptionHandler != null ) int startOfRange = exceptionHandler.getStartPC().getPosition();
ExceptionHandlerMap.java,handle = handle.getNext();,if (handle != null ) handle = handle.getNext();
FieldSummary.java,String signature = field.getSignature();,if (field != null ) String signature = field.getSignature();
FieldSummary.java,c = cx.getSuperclassDescriptor();,if (cx != null ) c = cx.getSuperclassDescriptor();
FieldSummary.java,String mSignature = mergeValue.getSignature();,if (mergeValue != null ) String mSignature = mergeValue.getSignature();
FieldSummary.java,Type fieldType = Type.getType(fieldOperand.getSignature());,if (Type != null ) Type fieldType = Type.getType(fieldOperand.getSignature());
FieldSummary.java,Item value = entry.getValue();,if (entry != null ) Item value = entry.getValue();
Frame.java,int numSlots = slotList.size();,if (slotList != null ) int numSlots = slotList.size();
Frame.java,int size = slotList.size();,if (slotList != null ) int size = slotList.size();
Hierarchy.java,short opcode = inv.getOpcode();,if (inv != null ) short opcode = inv.getOpcode();
Hierarchy.java,JavaClass sClass = jClass.getSuperClass();,if (jClass != null ) JavaClass sClass = jClass.getSuperClass();
Hierarchy.java,Method[] methodList = javaClass.getMethods();,if (javaClass != null ) Method[] methodList = javaClass.getMethods();
Hierarchy.java,Method[] methodList = javaClass.getMethods();,if (javaClass != null ) Method[] methodList = javaClass.getMethods();
Hierarchy.java,Method method = javaClassAndMethod.getMethod();,if (javaClassAndMethod != null ) Method method = javaClassAndMethod.getMethod();
Hierarchy.java,int accessFlags = method.getAccessFlags();,if (method != null ) int accessFlags = method.getAccessFlags();
Hierarchy.java,short opcode = invokeInstruction.getOpcode();,if (invokeInstruction != null ) short opcode = invokeInstruction.getOpcode();
Hierarchy.java,AnalysisContext analysisContext = AnalysisContext.currentAnalysisContext();,if (AnalysisContext != null ) AnalysisContext analysisContext = AnalysisContext.currentAnalysisContext();
Hierarchy.java,int accessFlags = xmethod.getAccessFlags();,if (xmethod != null ) int accessFlags = xmethod.getAccessFlags();
Hierarchy.java,Field[] fieldList = jclass.getFields();,if (jclass != null ) Field[] fieldList = jclass.getFields();
Hierarchy.java,jclass = jclass.getSuperClass();,if (jclass != null ) jclass = jclass.getSuperClass();
Hierarchy.java,short opcode = fins.getOpcode();,if (fins != null ) short opcode = fins.getOpcode();
Hierarchy2.java,short opcode = inv.getOpcode();,if (inv != null ) short opcode = inv.getOpcode();
Hierarchy2.java,ClassDescriptor sClass = jClass.getSuperclassDescriptor();,if (jClass != null ) ClassDescriptor sClass = jClass.getSuperclassDescriptor();
Hierarchy2.java,ClassDescriptor sClass = jClass.getSuperclassDescriptor();,if (jClass != null ) ClassDescriptor sClass = jClass.getSuperclassDescriptor();
Hierarchy2.java,XMethod xm = xc.findMatchingMethod(m.getMethodDescriptor());,if (xc != null ) XMethod xm = xc.findMatchingMethod(m.getMethodDescriptor());
Hierarchy2.java,short opcode = invokeInstruction.getOpcode();,if (invokeInstruction != null ) short opcode = invokeInstruction.getOpcode();
IncompatibleTypes.java,IAnalysisCache cache = Global.getAnalysisCache();,if (Global != null ) IAnalysisCache cache = Global.getAnalysisCache();
IncompatibleTypes.java,ClassDescriptor superclassDescriptor = xClass.getSuperclassDescriptor();,if (xClass != null ) ClassDescriptor superclassDescriptor = xClass.getSuperclassDescriptor();
IncompatibleTypes.java,ClassDescriptor lhsDescriptor = DescriptorFactory.createClassDescriptorFromDottedClassName(expectedType.getClassName());,if (DescriptorFactory != null ) ClassDescriptor lhsDescriptor = DescriptorFactory.createClassDescriptorFromDottedClassName(expectedType.getClassName());
IncompatibleTypes.java,ClassDescriptor rhsDescriptor = DescriptorFactory.createClassDescriptorFromDottedClassName(actualType.getClassName());,if (DescriptorFactory != null ) ClassDescriptor rhsDescriptor = DescriptorFactory.createClassDescriptorFromDottedClassName(actualType.getClassName());
IncompatibleTypes.java,AnalysisContext analysisContext = AnalysisContext.currentAnalysisContext();,if (AnalysisContext != null ) AnalysisContext analysisContext = AnalysisContext.currentAnalysisContext();
IncompatibleTypes.java,String lhsClassName = lhsEquals.getClassName();,if (lhsEquals != null ) String lhsClassName = lhsEquals.getClassName();
IncompatibleTypes.java,IAnalysisCache cache = Global.getAnalysisCache();,if (Global != null ) IAnalysisCache cache = Global.getAnalysisCache();
InnerClassAccessMap.java,ConstantPool cp = javaClass.getConstantPool();,if (javaClass != null ) ConstantPool cp = javaClass.getConstantPool();
InnerClassAccessMap.java,String expectedMethodParams = buf.toString();,if (buf != null ) String expectedMethodParams = buf.toString();
InnerClassAccessMap.java,Method[] methodList = javaClass.getMethods();,if (javaClass != null ) Method[] methodList = javaClass.getMethods();
InnerClassAccessMap.java,String methodName = method.getName();,if (method != null ) String methodName = method.getName();
InnerClassAccessMap.java,Code code = method.getCode();,if (method != null ) Code code = method.getCode();
InnerClassAccessMap.java,byte[] instructionList = code.getCode();,if (code != null ) byte[] instructionList = code.getCode();
InnerClassAccessMap.java,String methodSig = method.getSignature();,if (method != null ) String methodSig = method.getSignature();
InnerClassAccessMap.java,InnerClassAccess access = callback.getAccess();,if (callback != null ) InnerClassAccess access = callback.getAccess();
JavaClassAndMethod.java,this.javaClass = Repository.lookupClass(method.getClassName());,if (Repository != null ) this.javaClass = Repository.lookupClass(method.getClassName());
LineNumberMap.java,LineNumberTable table = methodGen.getLineNumberTable(methodGen.getConstantPool());,if (methodGen != null ) LineNumberTable table = methodGen.getLineNumberTable(methodGen.getConstantPool());
LineNumberMap.java,InstructionHandle handle = methodGen.getInstructionList().getStart();,if (methodGen != null ) InstructionHandle handle = methodGen.getInstructionList().getStart();
LineNumberMap.java,int bytecodeOffset = handle.getPosition();,if (handle != null ) int bytecodeOffset = handle.getPosition();
LineNumberMap.java,handle = handle.getNext();,if (handle != null ) handle = handle.getNext();
LineNumberMap.java,LineNumber[] entries = table.getLineNumberTable();,if (table != null ) LineNumber[] entries = table.getLineNumberTable();
LiveLocalStoreAnalysis.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
LiveLocalStoreAnalysis.java,int local = store.getIndex();,if (store != null ) int local = store.getIndex();
LiveLocalStoreAnalysis.java,int local = load.getIndex();,if (load != null ) int local = load.getIndex();
Location.java,InstructionHandle location = basicBlock.getFirstInstruction();,if (basicBlock != null ) InstructionHandle location = basicBlock.getFirstInstruction();
Location.java,lastInstruction = basicBlock.getExceptionThrower();,if (basicBlock != null ) lastInstruction = basicBlock.getExceptionThrower();
Location.java,lastInstruction = basicBlock.getFirstInstruction();,if (basicBlock != null ) lastInstruction = basicBlock.getFirstInstruction();
LockAnalysis.java,this.vna = vnaDataflow.getAnalysis();,if (vnaDataflow != null ) this.vna = vnaDataflow.getAnalysis();
LockAnalysis.java,this.isSynchronized = methodGen.isSynchronized();,if (methodGen != null ) this.isSynchronized = methodGen.isSynchronized();
LockAnalysis.java,this.isStatic = methodGen.isStatic();,if (methodGen != null ) this.isStatic = methodGen.isStatic();
LockAnalysis.java,ValueNumber thisValue = vna.getThisValue();,if (vna != null ) ValueNumber thisValue = vna.getThisValue();
LockAnalysis.java,ValueNumber thisValue = vna.getClassObjectValue(methodGen.getClassName());,if (vna != null ) ValueNumber thisValue = vna.getClassObjectValue(methodGen.getClassName());
LockAnalysis.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
LockAnalysis.java,short opcode = ins.getOpcode();,if (ins != null ) short opcode = ins.getOpcode();
LockAnalysis.java,String name = inv.getMethodName(methodGen.getConstantPool());,if (inv != null ) String name = inv.getMethodName(methodGen.getConstantPool());
LockAnalysis.java,String sig = inv.getSignature(methodGen.getConstantPool());,if (inv != null ) String sig = inv.getSignature(methodGen.getConstantPool());
LockAnalysis.java,int lockNumber = frame.getTopValue().getNumber();,if (frame != null ) int lockNumber = frame.getTopValue().getNumber();
LockChecker.java,ValueNumber instance = vnaDataflow.getAnalysis().getThisValue();,if (vnaDataflow != null ) ValueNumber instance = vnaDataflow.getAnalysis().getThisValue();
MethodHash.java,code = method.getCode().getCode();,if (method != null ) code = method.getCode().getCode();
MethodHash.java,hash = digest.digest();,if (digest != null ) hash = digest.digest();
NullnessAnnotationDatabase.java,Profiler profiler = Global.getAnalysisCache().getProfiler();,if (Global != null ) Profiler profiler = Global.getAnalysisCache().getProfiler();
NullnessAnnotationDatabase.java,XMethod m = mp.getMethod();,if (mp != null ) XMethod m = mp.getMethod();
Path.java,Iterator<InstructionHandle> i = startBlock.instructionIterator();,if (startBlock != null ) Iterator<InstructionHandle> i = startBlock.instructionIterator();
Path.java,i = basicBlock.instructionIterator();,if (basicBlock != null ) i = basicBlock.instructionIterator();
PruneInfeasibleExceptionEdges.java,int flags = edge.getFlags();,if (edge != null ) int flags = edge.getFlags();
PruneInfeasibleExceptionEdges.java,String className = cfg.getMethodGen().getClassName();,if (cfg != null ) String className = cfg.getMethodGen().getClassName();
PruneInfeasibleExceptionEdges.java,boolean someChecked = exceptionSet.containsCheckedExceptions();,if (exceptionSet != null ) boolean someChecked = exceptionSet.containsCheckedExceptions();
PruneInfeasibleExceptionEdges.java,boolean someExplicit = exceptionSet.containsExplicitExceptions();,if (exceptionSet != null ) boolean someExplicit = exceptionSet.containsExplicitExceptions();
PruneUnconditionalExceptionThrowerEdges.java,AnalysisContext currentAnalysisContext = AnalysisContext.currentAnalysisContext();,if (AnalysisContext != null ) AnalysisContext currentAnalysisContext = AnalysisContext.currentAnalysisContext();
PruneUnconditionalExceptionThrowerEdges.java,InstructionHandle instructionHandle = basicBlock.getExceptionThrower();,if (basicBlock != null ) InstructionHandle instructionHandle = basicBlock.getExceptionThrower();
PruneUnconditionalExceptionThrowerEdges.java,Instruction exceptionThrower = instructionHandle.getInstruction();,if (instructionHandle != null ) Instruction exceptionThrower = instructionHandle.getInstruction();
PruneUnconditionalExceptionThrowerEdges.java,final String methodName = primaryXMethod.getName();,if (primaryXMethod != null ) final String methodName = primaryXMethod.getName();
PruneUnconditionalExceptionThrowerEdges.java,final boolean matches = unconditionalThrowerPattern.matcher(methodName).matches();,if (unconditionalThrowerPattern != null ) final boolean matches = unconditionalThrowerPattern.matcher(methodName).matches();
RepositoryClassParser.java,JavaClass jclass = classParser.parse();,if (classParser != null ) JavaClass jclass = classParser.parse();
ResourceValueAnalysis.java,"this.visitor = resourceTracker.createVisitor(resource, methodGen.getConstantPool());","if (methodGen != null ) this.visitor = resourceTracker.createVisitor(resource, methodGen.getConstantPool());"
ResourceValueAnalysis.java,ResourceValueFrame fact = new ResourceValueFrame(methodGen.getMaxLocals());,if (ResourceValueFrame(methodGen != null ) ResourceValueFrame fact = new ResourceValueFrame(methodGen.getMaxLocals());
ResourceValueAnalysis.java,BasicBlock source = edge.getSource();,if (edge != null ) BasicBlock source = edge.getSource();
ResourceValueAnalysis.java,BasicBlock dest = edge.getTarget();,if (edge != null ) BasicBlock dest = edge.getTarget();
ResourceValueAnalysis.java,InstructionHandle exceptionThrower = source.getExceptionThrower();,if (source != null ) InstructionHandle exceptionThrower = source.getExceptionThrower();
ResourceValueAnalysis.java,int edgeType = edge.getType();,if (edge != null ) int edgeType = edge.getType();
ResourceValueAnalysis.java,Instruction lastInSource = lastInSourceHandle.getInstruction();,if (lastInSourceHandle != null ) Instruction lastInSource = lastInSourceHandle.getInstruction();
ResourceValueFrameModelingVisitor.java,ResourceValue topValue = frame.getTopValue();,if (frame != null ) ResourceValue topValue = frame.getTopValue();
ResourceValueFrameModelingVisitor.java,int numSlots = frame.getNumSlots();,if (frame != null ) int numSlots = frame.getNumSlots();
ResourceValueFrameModelingVisitor.java,topValue = frame.getTopValue();,if (frame != null ) topValue = frame.getTopValue();
ResourceValueFrameModelingVisitor.java,ResourceValue topValue = frame.getTopValue();,if (frame != null ) ResourceValue topValue = frame.getTopValue();
SimplePathEnumerator.java,Iterator<Edge> entryOut = cfg.outgoingEdgeIterator(cfg.getEntry());,if (cfg != null ) Iterator<Edge> entryOut = cfg.outgoingEdgeIterator(cfg.getEntry());
SimplePathEnumerator.java,Edge entryEdge = entryOut.next();,if (entryOut != null ) Edge entryEdge = entryOut.next();
SimplePathEnumerator.java,Edge last = partialPath.getLast();,if (partialPath != null ) Edge last = partialPath.getLast();
SimplePathEnumerator.java,Iterator<Edge> i = cfg.outgoingEdgeIterator(last.getTarget());,if (cfg != null ) Iterator<Edge> i = cfg.outgoingEdgeIterator(last.getTarget());
SourceFile.java,in = dataSource.open();,if (dataSource != null ) in = dataSource.open();
SourceFinder.java,boolean exists = file.exists();,if (file != null ) boolean exists = file.exists();
SourceFinder.java,ZipEntry e = in.getNextEntry();,if (in != null ) ZipEntry e = in.getNextEntry();
SourceFinder.java,URLConnection connection = new URL(url).openConnection();,if (URL(url) != null ) URLConnection connection = new URL(url).openConnection();
SourceFinder.java,in = connection.getInputStream();,if (connection != null ) in = connection.getInputStream();
SourceFinder.java,URLConnection connection = new URL(url).openConnection();,if (URL(url) != null ) URLConnection connection = new URL(url).openConnection();
SourceFinder.java,int size = connection.getContentLength();,if (connection != null ) int size = connection.getContentLength();
SourceFinder.java,in = connection.getInputStream();,if (connection != null ) in = connection.getInputStream();
SourceFinder.java,String baseClassName = source.getClassName();,if (source != null ) String baseClassName = source.getClassName();
SourceFinder.java,String packageName = source.getPackageName();,if (source != null ) String packageName = source.getPackageName();
SourceInfoMap.java,String className = tokenizer.nextToken();,if (tokenizer != null ) String className = tokenizer.nextToken();
SourceInfoMap.java,String next = tokenizer.nextToken();,if (tokenizer != null ) String next = tokenizer.nextToken();
SourceInfoMap.java,"SourceLineRange range = createRange(next, tokenizer.nextToken());","if (tokenizer != null ) SourceLineRange range = createRange(next, tokenizer.nextToken());"
SourceInfoMap.java,"SourceLineRange range = createRange(tokenizer.nextToken(), tokenizer.nextToken());","if (tokenizer != null ) SourceLineRange range = createRange(tokenizer.nextToken(), tokenizer.nextToken());"
SourceInfoMap.java,"SourceLineRange range = createRange(tokenizer.nextToken(), tokenizer.nextToken());","if (tokenizer != null ) SourceLineRange range = createRange(tokenizer.nextToken(), tokenizer.nextToken());"
StackDepthAnalysis.java,int depth = fact.getDepth();,if (fact != null ) int depth = fact.getDepth();
StackDepthAnalysis.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
StackDepthAnalysis.java,int a = fact.getDepth();,if (fact != null ) int a = fact.getDepth();
StackDepthAnalysis.java,int b = result.getDepth();,if (result != null ) int b = result.getDepth();
TargetEnumeratingVisitor.java,InstructionHandle fallThrough = handle.getNext();,if (handle != null ) InstructionHandle fallThrough = handle.getNext();
TargetEnumeratingVisitor.java,InstructionHandle[] targets = ins.getTargets();,if (ins != null ) InstructionHandle[] targets = ins.getTargets();
TargetEnumeratingVisitor.java,InstructionHandle defaultTarget = ins.getTarget();,if (ins != null ) InstructionHandle defaultTarget = ins.getTarget();
URLClassPath.java,JavaClass javaClass = classParser.parse();,if (classParser != null ) JavaClass javaClass = classParser.parse();
URLClassPathRepository.java,Repository tmp = org.apache.bcel.Repository.getRepository();,if (org != null ) Repository tmp = org.apache.bcel.Repository.getRepository();
UnresolvedXMethod.java,String returnTypeSig = parser.getReturnTypeSignature();,if (parser != null ) String returnTypeSig = parser.getReturnTypeSignature();
XFactory.java,DescriptorFactory descriptorFactory = DescriptorFactory.instance();,if (DescriptorFactory != null ) DescriptorFactory descriptorFactory = DescriptorFactory.instance();
XFactory.java,IAnalysisCache analysisCache = Global.getAnalysisCache();,if (Global != null ) IAnalysisCache analysisCache = Global.getAnalysisCache();
XFactory.java,IAnalysisCache analysisCache = Global.getAnalysisCache();,if (Global != null ) IAnalysisCache analysisCache = Global.getAnalysisCache();
XFactory.java,String methodName = method.getName();,if (method != null ) String methodName = method.getName();
XFactory.java,String methodSig = method.getSignature();,if (method != null ) String methodSig = method.getSignature();
XFactory.java,int accessFlags = method.getAccessFlags();,if (method != null ) int accessFlags = method.getAccessFlags();
XFactory.java,XFactory xFactory = AnalysisContext.currentXFactory();,if (AnalysisContext != null ) XFactory xFactory = AnalysisContext.currentXFactory();
XFactory.java,XFactory xFactory = AnalysisContext.currentXFactory();,if (AnalysisContext != null ) XFactory xFactory = AnalysisContext.currentXFactory();
XFactory.java,ClassDescriptor superClass = xClass.getSuperclassDescriptor();,if (xClass != null ) ClassDescriptor superClass = xClass.getSuperclassDescriptor();
XFactory.java,int opcode = fieldInstruction.getOpcode();,if (fieldInstruction != null ) int opcode = fieldInstruction.getOpcode();
XFactory.java,int seen = visitor.getOpcode();,if (visitor != null ) int seen = visitor.getOpcode();
XFactory.java,String fieldName = field.getName();,if (field != null ) String fieldName = field.getName();
XFactory.java,String fieldSig = field.getSignature();,if (field != null ) String fieldSig = field.getSignature();
XFactory.java,XFactory xFactory = AnalysisContext.currentXFactory();,if (AnalysisContext != null ) XFactory xFactory = AnalysisContext.currentXFactory();
XFactory.java,XFactory xFactory = AnalysisContext.currentXFactory();,if (AnalysisContext != null ) XFactory xFactory = AnalysisContext.currentXFactory();
XFactory.java,ClassDescriptor originalClassDescriptor = desc.getClassDescriptor();,if (desc != null ) ClassDescriptor originalClassDescriptor = desc.getClassDescriptor();
XFactory.java,ClassDescriptor d = worklist.removeFirst();,if (worklist != null ) ClassDescriptor d = worklist.removeFirst();
XFactory.java,ClassDescriptor superClass = xClass.getSuperclassDescriptor();,if (xClass != null ) ClassDescriptor superClass = xClass.getSuperclassDescriptor();
XFactory.java,JavaClass javaClass = visitor.getThisClass();,if (visitor != null ) JavaClass javaClass = visitor.getThisClass();
XFactory.java,Method method = visitor.getMethod();,if (visitor != null ) Method method = visitor.getMethod();
XFactory.java,JavaClass javaClass = visitor.getThisClass();,if (visitor != null ) JavaClass javaClass = visitor.getThisClass();
XFactory.java,Field field = visitor.getField();,if (visitor != null ) Field field = visitor.getField();
XFactory.java,String className = methodGen.getClassName();,if (methodGen != null ) String className = methodGen.getClassName();
XFactory.java,String methodName = methodGen.getName();,if (methodGen != null ) String methodName = methodGen.getName();
XFactory.java,String methodSig = methodGen.getSignature();,if (methodGen != null ) String methodSig = methodGen.getSignature();
XFactory.java,int accessFlags = methodGen.getAccessFlags();,if (methodGen != null ) int accessFlags = methodGen.getAccessFlags();
XFactory.java,IAnalysisCache analysisCache = Global.getAnalysisCache();,if (Global != null ) IAnalysisCache analysisCache = Global.getAnalysisCache();
ByteCodePatternMatch.java,lastElementMatch = lastElementMatch.getPrev();,if (lastElementMatch != null ) lastElementMatch = lastElementMatch.getPrev();
FieldAccess.java,int code = type.getType();,if (type != null ) int code = type.getType();
FieldAccess.java,int numSlots = frame.getNumSlots();,if (frame != null ) int numSlots = frame.getNumSlots();
IfNull.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
IfNull.java,LocalVariable ref = new LocalVariable(before.getTopValue());,if (LocalVariable(before != null ) LocalVariable ref = new LocalVariable(before.getTopValue());
Invoke.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
Load.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
Monitorenter.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
Monitorenter.java,Variable lock = new LocalVariable(before.getTopValue());,if (LocalVariable(before != null ) Variable lock = new LocalVariable(before.getTopValue());
New.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
New.java,LocalVariable result = new LocalVariable(after.getTopValue());,if (LocalVariable(after != null ) LocalVariable result = new LocalVariable(after.getTopValue());
PatternMatcher.java,BasicBlock basicBlock = workList.removeLast();,if (workList != null ) BasicBlock basicBlock = workList.removeLast();
PatternMatcher.java,BasicBlock.InstructionIterator i = basicBlock.instructionIterator();,if (basicBlock != null ) BasicBlock.InstructionIterator i = basicBlock.instructionIterator();
PatternMatcher.java,return currentMatch == null || currentMatch.allowTrailingEdges();,if (currentMatch != null ) return currentMatch == null || currentMatch.allowTrailingEdges();
PatternMatcher.java,State dup = this.duplicate();,if (this != null ) State dup = this.duplicate();
PatternMatcher.java,PatternElementMatch dominator = currentMatch.getFirstLabeledMatch(patternElement.getDominatedBy());,if (currentMatch != null ) PatternElementMatch dominator = currentMatch.getFirstLabeledMatch(patternElement.getDominatedBy());
PatternMatcher.java,InstructionHandle domInstruction = dominator.getMatchedInstructionInstructionHandle();,if (dominator != null ) InstructionHandle domInstruction = dominator.getMatchedInstructionInstructionHandle();
PatternMatcher.java,dup = this.duplicate();,if (this != null ) dup = this.duplicate();
PatternMatcher.java,bindingSet = matchResult.getBindingSet();,if (matchResult != null ) bindingSet = matchResult.getBindingSet();
PatternMatcher.java,Iterator<Edge> i = cfg.outgoingEdgeIterator(state.getBasicBlock());,if (cfg != null ) Iterator<Edge> i = cfg.outgoingEdgeIterator(state.getBasicBlock());
PatternMatcher.java,BasicBlock destBlock = edge.getTarget();,if (edge != null ) BasicBlock destBlock = edge.getTarget();
PatternMatcher.java,int destId = destBlock.getLabel();,if (destBlock != null ) int destId = destBlock.getLabel();
Store.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
CallListAnalysis.java,InstructionHandle handle = i.next().getHandle();,if (i != null ) InstructionHandle handle = i.next().getHandle();
CallListAnalysis.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
OverriddenMethodsVisitor.java,XMethod bridgedFrom = xmethod.bridgeFrom();,if (xmethod != null ) XMethod bridgedFrom = xmethod.bridgeFrom();
OverriddenMethodsVisitor.java,methodSignature = bridgedFrom.getSignature();,if (bridgedFrom != null ) methodSignature = bridgedFrom.getSignature();
OverriddenMethodsVisitor.java,methodSignature = xmethod.getSignature();,if (xmethod != null ) methodSignature = xmethod.getSignature();
Subtypes2.java,XClass work = workList.removeFirst();,if (workList != null ) XClass work = workList.removeFirst();
Subtypes2.java,ClassVertex vertex = classDescriptorToVertexMap.get(work.getClassDescriptor());,if (classDescriptorToVertexMap != null ) ClassVertex vertex = classDescriptorToVertexMap.get(work.getClassDescriptor());
Subtypes2.java,Type possibleSupertypeBasicType = possibleSupertypeAsArrayType.getBasicType();,if (possibleSupertypeAsArrayType != null ) Type possibleSupertypeBasicType = possibleSupertypeAsArrayType.getBasicType();
Subtypes2.java,Type typeBasicType = typeAsArrayType.getBasicType();,if (typeAsArrayType != null ) Type typeBasicType = typeAsArrayType.getBasicType();
Subtypes2.java,Type aBaseType = aArrType.getBasicType();,if (aArrType != null ) Type aBaseType = aArrType.getBasicType();
Subtypes2.java,Type bBaseType = bArrType.getBasicType();,if (bArrType != null ) Type bBaseType = bArrType.getBasicType();
Subtypes2.java,maxDimensions = bArrType.getDimensions();,if (bArrType != null ) maxDimensions = bArrType.getDimensions();
Subtypes2.java,minDimensions = bArrType.getDimensions();,if (bArrType != null ) minDimensions = bArrType.getDimensions();
Subtypes2.java,cur = cur.getDirectSuperclass();,if (cur != null ) cur = cur.getDirectSuperclass();
Subtypes2.java,SupertypeTraversalPath cur = workList.removeFirst();,if (workList != null ) SupertypeTraversalPath cur = workList.removeFirst();
Subtypes2.java,ClassVertex vertex = cur.getNext();,if (cur != null ) ClassVertex vertex = cur.getNext();
Subtypes2.java,ClassDescriptor superclassDescriptor = vertex.getXClass().getSuperclassDescriptor();,if (vertex != null ) ClassDescriptor superclassDescriptor = vertex.getXClass().getSuperclassDescriptor();
Subtypes2.java,ClassVertex current = workList.removeFirst();,if (workList != null ) ClassVertex current = workList.removeFirst();
Subtypes2.java,ClassVertex current = workList.removeFirst();,if (workList != null ) ClassVertex current = workList.removeFirst();
Subtypes2.java,ClassVertex vertex = workList.removeFirst();,if (workList != null ) ClassVertex vertex = workList.removeFirst();
Subtypes2.java,XClass xclass = vertex.getXClass();,if (vertex != null ) XClass xclass = vertex.getXClass();
Subtypes2.java,ClassDescriptor superclassDescriptor = xclass.getSuperclassDescriptor();,if (xclass != null ) ClassDescriptor superclassDescriptor = xclass.getSuperclassDescriptor();
ConstantAnalysis.java,this.visitor = new ConstantFrameModelingVisitor(methodGen.getConstantPool());,if (ConstantFrameModelingVisitor(methodGen != null ) this.visitor = new ConstantFrameModelingVisitor(methodGen.getConstantPool());
ConstantFrameModelingVisitor.java,int amount = obj.getIncrement();,if (obj != null ) int amount = obj.getIncrement();
ConstantFrameModelingVisitor.java,Number value = obj.getValue();,if (obj != null ) Number value = obj.getValue();
ConstantFrameModelingVisitor.java,Number value = obj.getValue();,if (obj != null ) Number value = obj.getValue();
ConstantFrameModelingVisitor.java,Number value = obj.getValue();,if (obj != null ) Number value = obj.getValue();
UnconditionalValueDerefAnalysis.java,ValueNumber vn = vnaFrame.getTopValue();,if (vnaFrame != null ) ValueNumber vn = vnaFrame.getTopValue();
UnconditionalValueDerefAnalysis.java,Instruction instruction = handle.getInstruction();,if (handle != null ) Instruction instruction = handle.getInstruction();
UnconditionalValueDerefAnalysis.java,ConstantPoolGen constantPool = methodGen.getConstantPool();,if (methodGen != null ) ConstantPoolGen constantPool = methodGen.getConstantPool();
UnconditionalValueDerefAnalysis.java,int numParams = sigParser.getNumParameters();,if (sigParser != null ) int numParams = sigParser.getNumParameters();
UnconditionalValueDerefAnalysis.java,ParameterProperty targetDerefParamSet = database.getProperty(target.getMethodDescriptor());,if (database != null ) ParameterProperty targetDerefParamSet = database.getProperty(target.getMethodDescriptor());
UnconditionalValueDerefAnalysis.java,INullnessAnnotationDatabase database = AnalysisContext.currentAnalysisContext().getNullnessAnnotationDatabase();,if (AnalysisContext != null ) INullnessAnnotationDatabase database = AnalysisContext.currentAnalysisContext().getNullnessAnnotationDatabase();
UnconditionalValueDerefAnalysis.java,"XField field = XFactory.createXField(fieldIns, methodGen.getConstantPool());","if (methodGen != null ) XField field = XFactory.createXField(fieldIns, methodGen.getConstantPool());"
UnconditionalValueDerefAnalysis.java,ValueNumber vn = vnaFrame.getTopValue();,if (vnaFrame != null ) ValueNumber vn = vnaFrame.getTopValue();
UnconditionalValueDerefAnalysis.java,INullnessAnnotationDatabase database = AnalysisContext.currentAnalysisContext().getNullnessAnnotationDatabase();,if (AnalysisContext != null ) INullnessAnnotationDatabase database = AnalysisContext.currentAnalysisContext().getNullnessAnnotationDatabase();
UnconditionalValueDerefAnalysis.java,SignatureParser sigParser = new SignatureParser(called.getSignature());,if (SignatureParser(called != null ) SignatureParser sigParser = new SignatureParser(called.getSignature());
UnconditionalValueDerefAnalysis.java,int numParams = sigParser.getNumParameters();,if (sigParser != null ) int numParams = sigParser.getNumParameters();
UnconditionalValueDerefAnalysis.java,Iterator<String> parameterIterator = sigParser.parameterSignatureIterator();,if (sigParser != null ) Iterator<String> parameterIterator = sigParser.parameterSignatureIterator();
UnconditionalValueDerefAnalysis.java,boolean isBackEdge = edge.isBackwardInBytecode();,if (edge != null ) boolean isBackEdge = edge.isBackwardInBytecode();
UnconditionalValueDerefAnalysis.java,IsNullValueFrame invFrame = invDataflow.getResultFact(edge.getSource());,if (invDataflow != null ) IsNullValueFrame invFrame = invDataflow.getResultFact(edge.getSource());
UnconditionalValueDerefAnalysis.java,IsNullConditionDecision decision = invFrame.getDecision();,if (invFrame != null ) IsNullConditionDecision decision = invFrame.getDecision();
UnconditionalValueDerefAnalysis.java,IsNullValue inv = decision.getDecision(edge.getType());,if (decision != null ) IsNullValue inv = decision.getDecision(edge.getType());
UnconditionalValueDerefAnalysis.java,ValueNumber value = decision.getValue();,if (decision != null ) ValueNumber value = decision.getValue();
UnconditionalValueDerefSet.java,Set<Location> derefLocationSet = Util.makeSmallHashSet(sourceEntry.getValue());,if (Util != null ) Set<Location> derefLocationSet = Util.makeSmallHashSet(sourceEntry.getValue());
UnconditionalValueDerefSet.java,resultForSkippedValue = valueNumbersUnconditionallyDereferenced.get(skipMe.getNumber());,if (valueNumbersUnconditionallyDereferenced != null ) resultForSkippedValue = valueNumbersUnconditionallyDereferenced.get(skipMe.getNumber());
UnconditionalValueDerefSet.java,Set<ValueNumber> valueNumbers = new HashSet<ValueNumber>(vnaFrame.allSlots());,if (HashSet<ValueNumber>(vnaFrame != null ) Set<ValueNumber> valueNumbers = new HashSet<ValueNumber>(vnaFrame.allSlots());
GenericObjectType.java,String baseStringValue = super.toString();,if (super != null ) String baseStringValue = super.toString();
GenericSignatureParser.java,genericSignature = sig.getSignature();,if (sig != null ) genericSignature = sig.getSignature();
GenericUtilities.java,StringBuilder b = new StringBuilder(obj.toPlainString());,if (StringBuilder(obj != null ) StringBuilder b = new StringBuilder(obj.toPlainString());
GenericUtilities.java,Type obj = atype.getBasicType();,if (atype != null ) Type obj = atype.getBasicType();
GenericUtilities.java,StringBuilder result = new StringBuilder(s.length());,if (StringBuilder(s != null ) StringBuilder result = new StringBuilder(s.length());
GenericUtilities.java,Iterator<String> iter = parser.parameterSignatureIterator();,if (parser != null ) Iterator<String> iter = parser.parameterSignatureIterator();
GenericUtilities.java,String parameterString = iter.next();,if (iter != null ) String parameterString = iter.next();
GenericUtilities.java,for(int pos = start; pos < signature.length(); pos++),if (pos++) != null ) for(int pos = start; pos < signature.length(); pos++)
FieldSetAnalysis.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
FieldSetAnalysis.java,short opcode = ins.getOpcode();,if (ins != null ) short opcode = ins.getOpcode();
PropertyDatabase.java,line = line.trim();,if (line != null ) line = line.trim();
Analysis.java,IAnalysisCache analysisCache = Global.getAnalysisCache();,if (Global != null ) IAnalysisCache analysisCache = Global.getAnalysisCache();
Analysis.java,Instruction ins = location.getHandle().getInstruction();,if (location != null ) Instruction ins = location.getHandle().getInstruction();
BackwardTypeQualifierDataflowAnalysis.java,Instruction ins = location.getHandle().getInstruction();,if (location != null ) Instruction ins = location.getHandle().getInstruction();
BackwardTypeQualifierDataflowAnalysis.java,short opcode = ins.getOpcode();,if (ins != null ) short opcode = ins.getOpcode();
BackwardTypeQualifierDataflowAnalysis.java,ValueNumber topValue = vnaFrameAtReturn.getTopValue();,if (vnaFrameAtReturn != null ) ValueNumber topValue = vnaFrameAtReturn.getTopValue();
BackwardTypeQualifierDataflowAnalysis.java,SignatureParser sigParser = new SignatureParser(calledMethod.getSignature());,if (SignatureParser(calledMethod != null ) SignatureParser sigParser = new SignatureParser(calledMethod.getSignature());
BackwardTypeQualifierDataflowFactory.java,BasicBlock entry = dataflow.getCFG().getEntry();,if (dataflow != null ) BasicBlock entry = dataflow.getCFG().getEntry();
FlowValue.java,When sourceWhen = source.getWhen();,if (source != null ) When sourceWhen = source.getWhen();
ForwardTypeQualifierDataflowAnalysis.java,short opcode = instruction.getOpcode();,if (instruction != null ) short opcode = instruction.getOpcode();
ForwardTypeQualifierDataflowAnalysis.java,ValueNumber tosValue = vnaFrameAfterInstruction.getTopValue();,if (vnaFrameAfterInstruction != null ) ValueNumber tosValue = vnaFrameAfterInstruction.getTopValue();
ForwardTypeQualifierDataflowAnalysis.java,ValueNumberFrame vnaFrameAtEntry = vnaDataflow.getStartFact(cfg.getEntry());,if (vnaDataflow != null ) ValueNumberFrame vnaFrameAtEntry = vnaDataflow.getStartFact(cfg.getEntry());
ForwardTypeQualifierDataflowAnalysis.java,SignatureParser sigParser = new SignatureParser(xmethod.getSignature());,if (SignatureParser(xmethod != null ) SignatureParser sigParser = new SignatureParser(xmethod.getSignature());
ForwardTypeQualifierDataflowFactory.java,Iterator<Location> i = cfg.locationIterator();,if (cfg != null ) Iterator<Location> i = cfg.locationIterator();
ForwardTypeQualifierDataflowFactory.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
TypeQualifierAnnotationLookupResult.java,effective = partialResult.getTypeQualifierAnnotation();,if (partialResult != null ) effective = partialResult.getTypeQualifierAnnotation();
TypeQualifierAnnotationLookupResult.java,"effective = combine(effective, partialResult.getTypeQualifierAnnotation());","if (partialResult != null ) effective = combine(effective, partialResult.getTypeQualifierAnnotation());"
TypeQualifierApplications.java,stopAtClassScope = xclass.isPrivate();,if (xclass != null ) stopAtClassScope = xclass.isPrivate();
TypeQualifierDataflowAnalysis.java,ValueNumberFrame targetVnaFrame = vnaDataflow.getStartFact(edge.getTarget());,if (vnaDataflow != null ) ValueNumberFrame targetVnaFrame = vnaDataflow.getStartFact(edge.getTarget());
TypeQualifierDataflowAnalysis.java,ValueNumberFrame sourceVnaFrame = vnaDataflow.getResultFact(edge.getSource());,if (vnaDataflow != null ) ValueNumberFrame sourceVnaFrame = vnaDataflow.getResultFact(edge.getSource());
TypeQualifierDataflowAnalysis.java,Set<SourceSinkInfo> set = sourceSinkMap.get(sourceSinkInfo.getLocation());,if (sourceSinkMap != null ) Set<SourceSinkInfo> set = sourceSinkMap.get(sourceSinkInfo.getLocation());
TypeQualifierDataflowFactory.java,IAnalysisCache analysisCache = Global.getAnalysisCache();,if (Global != null ) IAnalysisCache analysisCache = Global.getAnalysisCache();
TypeQualifierValue.java,validator = checkerClass.newInstance();,if (checkerClass != null ) validator = checkerClass.newInstance();
TypeQualifierValue.java,Profiler profiler = analysisCache.getProfiler();,if (analysisCache != null ) Profiler profiler = analysisCache.getProfiler();
TypeQualifierValue.java,int result = typeQualifier.hashCode();,if (typeQualifier != null ) int result = typeQualifier.hashCode();
TypeQualifierValueSet.java,ValueNumber vn = sourceSinkInfo.getValueNumber();,if (sourceSinkInfo != null ) ValueNumber vn = sourceSinkInfo.getValueNumber();
TypeQualifierValueSet.java,"Set<SourceSinkInfo> locSet = getOrCreateSourceSinkInfoSet(dest, entry.getKey());","if (entry != null ) Set<SourceSinkInfo> locSet = getOrCreateSourceSinkInfoSet(dest, entry.getKey());"
DerefFinder.java,INullnessAnnotationDatabase db = AnalysisContext.currentAnalysisContext().getNullnessAnnotationDatabase();,if (AnalysisContext != null ) INullnessAnnotationDatabase db = AnalysisContext.currentAnalysisContext().getNullnessAnnotationDatabase();
DerefFinder.java,Iterator<BasicBlock> bbIter = cfg.blockIterator();,if (cfg != null ) Iterator<BasicBlock> bbIter = cfg.blockIterator();
DerefFinder.java,ValueNumberFrame frameAtEntry = vna.getStartFact(cfg.getEntry());,if (vna != null ) ValueNumberFrame frameAtEntry = vna.getStartFact(cfg.getEntry());
DerefFinder.java,BasicBlock basicBlock = bbIter.next();,if (bbIter != null ) BasicBlock basicBlock = bbIter.next();
DerefFinder.java,InstructionHandle exceptionThrowerHandle = basicBlock.getExceptionThrower();,if (basicBlock != null ) InstructionHandle exceptionThrowerHandle = basicBlock.getExceptionThrower();
DerefFinder.java,Instruction exceptionThrower = exceptionThrowerHandle.getInstruction();,if (exceptionThrowerHandle != null ) Instruction exceptionThrower = exceptionThrowerHandle.getInstruction();
DerefFinder.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
DerefFinder.java,SignatureParser sigParser = new SignatureParser(m.getSignature());,if (SignatureParser(m != null ) SignatureParser sigParser = new SignatureParser(m.getSignature());
DerefFinder.java,int numParams = sigParser.getNumParameters();,if (sigParser != null ) int numParams = sigParser.getNumParameters();
DerefFinder.java,BitSet foo = property.getAsBitSet();,if (property != null ) BitSet foo = property.getAsBitSet();
DerefFinder.java,ValueNumber valueNumber = valueNumberFrame.getTopValue();,if (valueNumberFrame != null ) ValueNumber valueNumber = valueNumberFrame.getTopValue();
DerefFinder.java,ValueNumber valueNumber = valueNumberFrame.getTopValue();,if (valueNumberFrame != null ) ValueNumber valueNumber = valueNumberFrame.getTopValue();
DerefFinder.java,ValueNumber valueNumber = valueNumberFrame.getTopValue();,if (valueNumberFrame != null ) ValueNumber valueNumber = valueNumberFrame.getTopValue();
IsNullValue.java,hashCode += locationOfKaBoom.hashCode();,if (locationOfKaBoom != null ) hashCode += locationOfKaBoom.hashCode();
IsNullValueAnalysis.java,Instruction ins = loc.getHandle().getInstruction();,if (loc != null ) Instruction ins = loc.getHandle().getInstruction();
IsNullValueAnalysis.java,int numLocals = methodGen.getMaxLocals();,if (methodGen != null ) int numLocals = methodGen.getMaxLocals();
IsNullValueAnalysis.java,boolean instanceMethod = !methodGen.isStatic();,if (!methodGen != null ) boolean instanceMethod = !methodGen.isStatic();
IsNullValueAnalysis.java,INullnessAnnotationDatabase db = AnalysisContext.currentAnalysisContext().getNullnessAnnotationDatabase();,if (AnalysisContext != null ) INullnessAnnotationDatabase db = AnalysisContext.currentAnalysisContext().getNullnessAnnotationDatabase();
IsNullValueAnalysis.java,Type[] argumentTypes = methodGen.getArgumentTypes();,if (methodGen != null ) Type[] argumentTypes = methodGen.getArgumentTypes();
IsNullValueAnalysis.java,value = IsNullValue.nonNullValue();,if (IsNullValue != null ) value = IsNullValue.nonNullValue();
IsNullValueAnalysis.java,slot += argumentTypes[paramIndex].getSize();,if (argumentTypes[paramIndex] != null ) slot += argumentTypes[paramIndex].getSize();
IsNullValueAnalysis.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
IsNullValueAnalysis.java,int numProduced = ins.produceStack(methodGen.getConstantPool());,if (ins != null ) int numProduced = ins.produceStack(methodGen.getConstantPool());
IsNullValueAnalysis.java,ValueNumber newNullValue = vnaFrameAfter.getValue(visitor.getSlotContainingNewNullValue());,if (vnaFrameAfter != null ) ValueNumber newNullValue = vnaFrameAfter.getValue(visitor.getSlotContainingNewNullValue());
IsNullValueAnalysis.java,final BasicBlock destBlock = edge.getTarget();,if (edge != null ) final BasicBlock destBlock = edge.getTarget();
IsNullValueAnalysis.java,ObjectType catchType = handler.getCatchType();,if (handler != null ) ObjectType catchType = handler.getCatchType();
IsNullValueAnalysis.java,String catchClass = catchType.getClassName();,if (catchType != null ) String catchClass = catchType.getClassName();
IsNullValueAnalysis.java,final BasicBlock sourceBlock = edge.getSource();,if (edge != null ) final BasicBlock sourceBlock = edge.getSource();
IsNullValueAnalysis.java,final BasicBlock targetBlock = edge.getTarget();,if (edge != null ) final BasicBlock targetBlock = edge.getTarget();
IsNullValueAnalysis.java,IsNullConditionDecision decision = resultFact.getDecision();,if (resultFact != null ) IsNullConditionDecision decision = resultFact.getDecision();
IsNullValueAnalysis.java,ValueNumber valueTested = decision.getValue();,if (decision != null ) ValueNumber valueTested = decision.getValue();
IsNullValueAnalysis.java,"IsNullValue instance = fact.getInstance(firstInDest, methodGen.getConstantPool());","if (methodGen != null ) IsNullValue instance = fact.getInstance(firstInDest, methodGen.getConstantPool());"
IsNullValueAnalysis.java,InstructionHandle kaBoomLocation = targetBlock.getFirstInstruction();,if (targetBlock != null ) InstructionHandle kaBoomLocation = targetBlock.getFirstInstruction();
IsNullValueAnalysis.java,"ValueNumber replaceMe = vnaFrame.getInstance(firstInDest, methodGen.getConstantPool());","if (methodGen != null ) ValueNumber replaceMe = vnaFrame.getInstance(firstInDest, methodGen.getConstantPool());"
IsNullValueAnalysis.java,final InstructionHandle lastInSourceHandle = basicBlock.getLastInstruction();,if (basicBlock != null ) final InstructionHandle lastInSourceHandle = basicBlock.getLastInstruction();
IsNullValueAnalysis.java,final short lastInSourceOpcode = lastInSourceHandle.getInstruction().getOpcode();,if (lastInSourceHandle != null ) final short lastInSourceOpcode = lastInSourceHandle.getInstruction().getOpcode();
IsNullValueAnalysis.java,short secondToLastOpcode = prev.getInstruction().getOpcode();,if (prev != null ) short secondToLastOpcode = prev.getInstruction().getOpcode();
IsNullValueAnalysis.java,IsNullValue tos = instanceOfFrame.getTopValue();,if (instanceOfFrame != null ) IsNullValue tos = instanceOfFrame.getTopValue();
IsNullValueAnalysis.java,ValueNumber prevTopValue = prevVnaFrame.getTopValue();,if (prevVnaFrame != null ) ValueNumber prevTopValue = prevVnaFrame.getTopValue();
IsNullValueAnalysis.java,boolean tosNull = tos.isDefinitelyNull();,if (tos != null ) boolean tosNull = tos.isDefinitelyNull();
IsNullValueAnalysis.java,boolean nextToTosNull = nextToTos.isDefinitelyNull();,if (nextToTos != null ) boolean nextToTosNull = nextToTos.isDefinitelyNull();
IsNullValueAnalysis.java,ifcmpDecision = IsNullValue.pathSensitiveNullValue();,if (IsNullValue != null ) ifcmpDecision = IsNullValue.pathSensitiveNullValue();
IsNullValueAnalysis.java,fallThroughDecision = IsNullValue.pathSensitiveNullValue();,if (IsNullValue != null ) fallThroughDecision = IsNullValue.pathSensitiveNullValue();
IsNullValueAnalysis.java,fallThroughDecision = IsNullValue.pathSensitiveNullValue();,if (IsNullValue != null ) fallThroughDecision = IsNullValue.pathSensitiveNullValue();
IsNullValueAnalysis.java,final int targetNumSlots = targetVnaFrame.getNumSlots();,if (targetVnaFrame != null ) final int targetNumSlots = targetVnaFrame.getNumSlots();
IsNullValueFrame.java,IsNullValue otherKnownValue = otherFrame.knownValueMap.get(entry.getKey());,if (otherFrame != null ) IsNullValue otherKnownValue = otherFrame.knownValueMap.get(entry.getKey());
IsNullValueFrame.java,String result = super.toString();,if (super != null ) String result = super.toString();
IsNullValueFrame.java,value = value.downgradeOnControlSplit();,if (value != null ) value = value.downgradeOnControlSplit();
IsNullValueFrameModelingVisitor.java,pushValue = IsNullValue.nonNullValue();,if (IsNullValue != null ) pushValue = IsNullValue.nonNullValue();
IsNullValueFrameModelingVisitor.java,pushValue = IsNullValue.nonReportingNotNullValue();,if (IsNullValue != null ) pushValue = IsNullValue.nonReportingNotNullValue();
IsNullValueFrameModelingVisitor.java,pushValue = IsNullValue.nonReportingNotNullValue();,if (IsNullValue != null ) pushValue = IsNullValue.nonReportingNotNullValue();
IsNullValueFrameModelingVisitor.java,ValueNumber tosVN = vnaFrameAfter.getTopValue();,if (vnaFrameAfter != null ) ValueNumber tosVN = vnaFrameAfter.getTopValue();
IsNullValueFrameModelingVisitor.java,nullValueStored = getFrame().getTopValue();,if (getFrame() != null ) nullValueStored = getFrame().getTopValue();
IsNullValueFrameModelingVisitor.java,ValueNumber tosVN = vnaFrameAfter.getTopValue();,if (vnaFrameAfter != null ) ValueNumber tosVN = vnaFrameAfter.getTopValue();
NullDerefAndRedundantComparisonFinder.java,this.assertionMethods = classContext.getAssertionMethods();,if (classContext != null ) this.assertionMethods = classContext.getAssertionMethods();
NullDerefAndRedundantComparisonFinder.java,Profiler profiler = Global.getAnalysisCache().getProfiler();,if (Global != null ) Profiler profiler = Global.getAnalysisCache().getProfiler();
NullDerefAndRedundantComparisonFinder.java,Iterator<BasicBlock> bbIter = invDataflow.getCFG().blockIterator();,if (invDataflow != null ) Iterator<BasicBlock> bbIter = invDataflow.getCFG().blockIterator();
NullDerefAndRedundantComparisonFinder.java,BasicBlock basicBlock = bbIter.next();,if (bbIter != null ) BasicBlock basicBlock = bbIter.next();
NullDerefAndRedundantComparisonFinder.java,InstructionHandle lastHandle = basicBlock.getLastInstruction();,if (basicBlock != null ) InstructionHandle lastHandle = basicBlock.getLastInstruction();
NullDerefAndRedundantComparisonFinder.java,Instruction last = lastHandle.getInstruction();,if (lastHandle != null ) Instruction last = lastHandle.getInstruction();
NullDerefAndRedundantComparisonFinder.java,Instruction in = location.getHandle().getInstruction();,if (location != null ) Instruction in = location.getHandle().getInstruction();
NullDerefAndRedundantComparisonFinder.java,IsNullValue isNullValue = invFrame.getTopValue();,if (invFrame != null ) IsNullValue isNullValue = invFrame.getTopValue();
NullDerefAndRedundantComparisonFinder.java,ValueNumber vn = vnaDataflow.getFactAfterLocation(location).getTopValue();,if (vnaDataflow != null ) ValueNumber vn = vnaDataflow.getFactAfterLocation(location).getTopValue();
NullDerefAndRedundantComparisonFinder.java,HashSet<ValueNumber> npeIfStatementCovered = new HashSet<ValueNumber>(nullValueGuaranteedDerefMap.keySet());,if (HashSet<ValueNumber>(nullValueGuaranteedDerefMap != null ) HashSet<ValueNumber> npeIfStatementCovered = new HashSet<ValueNumber>(nullValueGuaranteedDerefMap.keySet());
NullDerefAndRedundantComparisonFinder.java,ValueNumberFrame vnaFact = vnaDataflow.getResultFact(edge.getSource());,if (vnaDataflow != null ) ValueNumberFrame vnaFact = vnaDataflow.getResultFact(edge.getSource());
NullDerefAndRedundantComparisonFinder.java,ValueNumberFrame vnaTargetFact = vnaDataflow.getStartFact(edge.getTarget());,if (vnaDataflow != null ) ValueNumberFrame vnaTargetFact = vnaDataflow.getStartFact(edge.getTarget());
NullDerefAndRedundantComparisonFinder.java,IsNullValueFrame invSourceFact = invDataflow.getResultFact(edge.getSource());,if (invDataflow != null ) IsNullValueFrame invSourceFact = invDataflow.getResultFact(edge.getSource());
NullDerefAndRedundantComparisonFinder.java,IsNullValueFrame invTargetFact = invDataflow.getStartFact(edge.getTarget());,if (invDataflow != null ) IsNullValueFrame invTargetFact = invDataflow.getStartFact(edge.getTarget());
NullDerefAndRedundantComparisonFinder.java,UnconditionalValueDerefSet uvdSourceFact = uvdDataflow.getStartFact(edge.getSource());,if (uvdDataflow != null ) UnconditionalValueDerefSet uvdSourceFact = uvdDataflow.getStartFact(edge.getSource());
NullDerefAndRedundantComparisonFinder.java,UnconditionalValueDerefSet uvdTargetFact = uvdDataflow.getResultFact(edge.getTarget());,if (uvdDataflow != null ) UnconditionalValueDerefSet uvdTargetFact = uvdDataflow.getResultFact(edge.getTarget());
NullDerefAndRedundantComparisonFinder.java,Location location = Location.getLastLocation(edge.getSource());,if (Location != null ) Location location = Location.getLastLocation(edge.getSource());
NullDerefAndRedundantComparisonFinder.java,Instruction in = location.getHandle().getInstruction();,if (location != null ) Instruction in = location.getHandle().getInstruction();
NullDerefAndRedundantComparisonFinder.java,Set<Location> locationSet = nullValueAssignmentMap.get(lwvbn.getValueNumber());,if (nullValueAssignmentMap != null ) Set<Location> locationSet = nullValueAssignmentMap.get(lwvbn.getValueNumber());
NullDerefAndRedundantComparisonFinder.java,Set<Location> derefLocationSet = e.getValue().getDerefLocationSet();,if (e != null ) Set<Location> derefLocationSet = e.getValue().getDerefLocationSet();
NullDerefAndRedundantComparisonFinder.java,BitSet allDominatedBy = postDomAnalysis.getAllDominatedBy(loc.getBasicBlock());,if (postDomAnalysis != null ) BitSet allDominatedBy = postDomAnalysis.getAllDominatedBy(loc.getBasicBlock());
NullDerefAndRedundantComparisonFinder.java,BitSet allDominatedBy = domAnalysis.getAllDominatedBy(loc.getBasicBlock());,if (domAnalysis != null ) BitSet allDominatedBy = domAnalysis.getAllDominatedBy(loc.getBasicBlock());
NullDerefAndRedundantComparisonFinder.java,ValueNumber valueNumber = entry.getKey();,if (entry != null ) ValueNumber valueNumber = entry.getKey();
NullDerefAndRedundantComparisonFinder.java,IsNullValue isNullValue = entry.getValue();,if (entry != null ) IsNullValue isNullValue = entry.getValue();
NullDerefAndRedundantComparisonFinder.java,int pc = redundantBranch.location.getHandle().getPosition();,if (redundantBranch != null ) int pc = redundantBranch.location.getHandle().getPosition();
NullDerefAndRedundantComparisonFinder.java,int numSlots = frame.getNumSlots();,if (frame != null ) int numSlots = frame.getNumSlots();
NullDerefAndRedundantComparisonFinder.java,boolean definitelySame = top.isDefinitelyNull() && topNext.isDefinitelyNull();,if (topNext != null ) boolean definitelySame = top.isDefinitelyNull() && topNext.isDefinitelyNull();
NullDerefAndRedundantComparisonFinder.java,IsNullValue top = frame.getTopValue();,if (frame != null ) IsNullValue top = frame.getTopValue();
NullDerefAndRedundantComparisonFinder.java,short opcode = lastHandle.getInstruction().getOpcode();,if (lastHandle != null ) short opcode = lastHandle.getInstruction().getOpcode();
NullDerefAndRedundantComparisonFinder.java,boolean definitelySame = top.isDefinitelyNull();,if (top != null ) boolean definitelySame = top.isDefinitelyNull();
NullDerefAndRedundantComparisonFinder.java,InstructionHandle exceptionThrowerHandle = basicBlock.getExceptionThrower();,if (basicBlock != null ) InstructionHandle exceptionThrowerHandle = basicBlock.getExceptionThrower();
NullDerefAndRedundantComparisonFinder.java,Instruction exceptionThrower = exceptionThrowerHandle.getInstruction();,if (exceptionThrowerHandle != null ) Instruction exceptionThrower = exceptionThrowerHandle.getInstruction();
NullDerefAndRedundantComparisonFinder.java,"IsNullValue refValue = frame.getInstance(exceptionThrower, classContext.getConstantPoolGen());","if (classContext != null ) IsNullValue refValue = frame.getInstance(exceptionThrower, classContext.getConstantPoolGen());"
NullDerefAndRedundantComparisonFinder.java,"ValueNumber valueNumber = vnaFrame.getInstance(exceptionThrower, classContext.getConstantPoolGen());","if (classContext != null ) ValueNumber valueNumber = vnaFrame.getInstance(exceptionThrower, classContext.getConstantPoolGen());"
NullDerefAndRedundantComparisonFinder.java,Iterator<BasicBlock> bbIter = invDataflow.getCFG().blockIterator();,if (invDataflow != null ) Iterator<BasicBlock> bbIter = invDataflow.getCFG().blockIterator();
NullDerefAndRedundantComparisonFinder.java,LineNumberTable table = method.getLineNumberTable();,if (method != null ) LineNumberTable table = method.getLineNumberTable();
NullDerefAndRedundantComparisonFinder.java,int position = exceptionThrowerHandle.getPosition();,if (exceptionThrowerHandle != null ) int position = exceptionThrowerHandle.getPosition();
NullDerefAndRedundantComparisonFinder.java,BasicBlock bb = bbIter.next();,if (bbIter != null ) BasicBlock bb = bbIter.next();
NullDerefAndRedundantComparisonFinder.java,InstructionHandle eth = bb.getExceptionThrower();,if (bb != null ) InstructionHandle eth = bb.getExceptionThrower();
NullDerefAndRedundantComparisonFinder.java,int ePosition = eth.getPosition();,if (eth != null ) int ePosition = eth.getPosition();
NullDerefAndRedundantComparisonFinder.java,LineNumberTable table = method.getCode().getLineNumberTable();,if (method != null ) LineNumberTable table = method.getCode().getLineNumberTable();
TypeQualifierNullnessAnnotationDatabase.java,AnnotationVisitor v = annotationValue.getAnnotationVisitor();,if (annotationValue != null ) AnnotationVisitor v = annotationValue.getAnnotationVisitor();
DefinitelyNullSet.java,int flags = nullnessValue.getFlags();,if (nullnessValue != null ) int flags = nullnessValue.getFlags();
DefinitelyNullSet.java,int start = getStartIndex(valueNumber.getNumber());,if (getStartIndex(valueNumber != null ) int start = getStartIndex(valueNumber.getNumber());
DefinitelyNullSetAnalysis.java,short opcode = handle.getInstruction().getOpcode();,if (handle != null ) short opcode = handle.getInstruction().getOpcode();
DefinitelyNullSetAnalysis.java,Condition condition = getCondition(edge.getSource());,if (getCondition(edge != null ) Condition condition = getCondition(edge.getSource());
IfNullCondition.java,valueNumber = vnaFrame.getTopValue();,if (vnaFrame != null ) valueNumber = vnaFrame.getTopValue();
IfNullCondition.java,NullnessValue definitelyNull = NullnessValue.definitelyNullValue().toCheckedValue();,if (NullnessValue != null ) NullnessValue definitelyNull = NullnessValue.definitelyNullValue().toCheckedValue();
IfNullCondition.java,NullnessValue definitelyNotNull = NullnessValue.definitelyNotNullValue().toCheckedValue();,if (NullnessValue != null ) NullnessValue definitelyNotNull = NullnessValue.definitelyNotNullValue().toCheckedValue();
InstructionActionCache.java,actionList = Collections.emptyList();,if (Collections != null ) actionList = Collections.emptyList();
InstructionActionCache.java,actionList = Collections.emptyList();,if (Collections != null ) actionList = Collections.emptyList();
ObligationAnalysis.java,InstructionHandle handle = sourceBlock.getExceptionThrower();,if (sourceBlock != null ) InstructionHandle handle = sourceBlock.getExceptionThrower();
ObligationAnalysis.java,BasicBlock sourceBlock = edge.getSource();,if (edge != null ) BasicBlock sourceBlock = edge.getSource();
ObligationAnalysis.java,short opcode = last.getInstruction().getOpcode();,if (last != null ) short opcode = last.getInstruction().getOpcode();
ObligationAnalysis.java,type = typeFrame.getTopValue();,if (typeFrame != null ) type = typeFrame.getTopValue();
ObligationAnalysis.java,Path path = state.getPath();,if (state != null ) Path path = state.getPath();
ObligationAnalysis.java,path = stateInInputFact.getPath();,if (stateInInputFact != null ) path = stateInInputFact.getPath();
ObligationAnalysis.java,stateToAdd = stateInInputFact.duplicate();,if (stateInInputFact != null ) stateToAdd = stateInInputFact.duplicate();
ObligationAnalysis.java,stateToAdd = stateInResultFact.duplicate();,if (stateInResultFact != null ) stateToAdd = stateInResultFact.duplicate();
ObligationFactory.java,Type[] paramTypes = Type.getArgumentTypes(xmethod.getSignature());,if (Type != null ) Type[] paramTypes = Type.getArgumentTypes(xmethod.getSignature());
ObligationFactory.java,int nextId = classNameToObligationMap.size();,if (classNameToObligationMap != null ) int nextId = classNameToObligationMap.size();
State.java,dup.obligationSet = this.obligationSet.duplicate();,if (this != null ) dup.obligationSet = this.obligationSet.duplicate();
StateSet.java,State dup = state.duplicate();,if (state != null ) State dup = state.duplicate();
ExceptionObjectType.java,Type commonSupertype = exceptionSet.getCommonSupertype();,if (exceptionSet != null ) Type commonSupertype = exceptionSet.getCommonSupertype();
ExceptionObjectType.java,String className = exceptionSupertype.getClassName();,if (exceptionSupertype != null ) String className = exceptionSupertype.getClassName();
ExceptionSet.java,ExceptionSet dup = factory.createExceptionSet();,if (factory != null ) ExceptionSet dup = factory.createExceptionSet();
ExceptionSet.java,ObjectType e = iterator().next();,if (iterator() != null ) ObjectType e = iterator().next();
FieldStoreTypeDatabase.java,Type fieldType = Type.getType(f.getSignature());,if (Type != null ) Type fieldType = Type.getType(f.getSignature());
StandardTypeMerger.java,byte aType = aRef.getType();,if (aRef != null ) byte aType = aRef.getType();
StandardTypeMerger.java,byte bType = bRef.getType();,if (bRef != null ) byte bType = bRef.getType();
StandardTypeMerger.java,ExceptionSet union = exceptionSetFactory.createExceptionSet();,if (exceptionSetFactory != null ) ExceptionSet union = exceptionSetFactory.createExceptionSet();
StandardTypeMerger.java,ArrayList<ReferenceType> result = new ArrayList<ReferenceType>(aP.size());,if (ArrayList<ReferenceType>(aP != null ) ArrayList<ReferenceType> result = new ArrayList<ReferenceType>(aP.size());
TypeAnalysis.java,edgeExceptionSet = exceptionSetFactory.createExceptionSet();,if (exceptionSetFactory != null ) edgeExceptionSet = exceptionSetFactory.createExceptionSet();
TypeAnalysis.java,Code code = method.getCode();,if (method != null ) Code code = method.getCode();
TypeAnalysis.java,CachedExceptionSet cachedExceptionSet = thrownExceptionSetMap.get(edge.getSource());,if (thrownExceptionSetMap != null ) CachedExceptionSet cachedExceptionSet = thrownExceptionSetMap.get(edge.getSource());
TypeAnalysis.java,Type[] argumentTypes = methodGen.getArgumentTypes();,if (methodGen != null ) Type[] argumentTypes = methodGen.getArgumentTypes();
TypeAnalysis.java,int pos = handle.getPosition();,if (handle != null ) int pos = handle.getPosition();
TypeAnalysis.java,String signature = local.getSignature();,if (local != null ) String signature = local.getSignature();
TypeAnalysis.java,int index = local.getIndex();,if (local != null ) int index = local.getIndex();
TypeAnalysis.java,ExceptionSet thrownExceptionSet = cachedExceptionSet.getExceptionSet();,if (cachedExceptionSet != null ) ExceptionSet thrownExceptionSet = cachedExceptionSet.getExceptionSet();
TypeAnalysis.java,BasicBlock basicBlock = edge.getTarget();,if (edge != null ) BasicBlock basicBlock = edge.getTarget();
TypeAnalysis.java,CodeExceptionGen exceptionGen = basicBlock.getExceptionGen();,if (basicBlock != null ) CodeExceptionGen exceptionGen = basicBlock.getExceptionGen();
TypeAnalysis.java,CachedExceptionSet cachedExceptionSet = getCachedExceptionSet(edge.getSource());,if (getCachedExceptionSet(edge != null ) CachedExceptionSet cachedExceptionSet = getCachedExceptionSet(edge.getSource());
TypeAnalysis.java,catchType = exceptionGen.getCatchType();,if (exceptionGen != null ) catchType = exceptionGen.getCatchType();
TypeAnalysis.java,InstanceOfCheck check = instanceOfCheckMap.get(edge.getSource());,if (instanceOfCheckMap != null ) InstanceOfCheck check = instanceOfCheckMap.get(edge.getSource());
TypeAnalysis.java,ValueNumber instanceOfValueNumber = check.getValueNumber();,if (check != null ) ValueNumber instanceOfValueNumber = check.getValueNumber();
TypeAnalysis.java,ValueNumberFrame vnaFrame = valueNumberDataflow.getStartFact(edge.getTarget());,if (valueNumberDataflow != null ) ValueNumberFrame vnaFrame = valueNumberDataflow.getStartFact(edge.getTarget());
TypeAnalysis.java,Type instanceOfType = check.getType();,if (check != null ) Type instanceOfType = check.getType();
TypeAnalysis.java,int edgeType = edge.getType();,if (edge != null ) int edgeType = edge.getType();
TypeAnalysis.java,"cachedExceptionSet = new CachedExceptionSet(top, exceptionSetFactory.createExceptionSet());","if (exceptionSetFactory != null ) cachedExceptionSet = new CachedExceptionSet(top, exceptionSetFactory.createExceptionSet());"
TypeAnalysis.java,exceptionSet = exceptionSetFactory.createExceptionSet();,if (exceptionSetFactory != null ) exceptionSet = exceptionSetFactory.createExceptionSet();
TypeAnalysis.java,ExceptionSet result = exceptionSetFactory.createExceptionSet();,if (exceptionSetFactory != null ) ExceptionSet result = exceptionSetFactory.createExceptionSet();
TypeAnalysis.java,BasicBlock handlerBlock = edge.getTarget();,if (edge != null ) BasicBlock handlerBlock = edge.getTarget();
TypeAnalysis.java,CodeExceptionGen handler = handlerBlock.getExceptionGen();,if (handlerBlock != null ) CodeExceptionGen handler = handlerBlock.getExceptionGen();
TypeAnalysis.java,ObjectType catchType = handler.getCatchType();,if (handler != null ) ObjectType catchType = handler.getCatchType();
TypeAnalysis.java,ExceptionSet exceptionTypeSet = exceptionSetFactory.createExceptionSet();,if (exceptionSetFactory != null ) ExceptionSet exceptionTypeSet = exceptionSetFactory.createExceptionSet();
TypeAnalysis.java,InstructionHandle pei = basicBlock.getExceptionThrower();,if (basicBlock != null ) InstructionHandle pei = basicBlock.getExceptionThrower();
TypeAnalysis.java,Instruction ins = pei.getInstruction();,if (pei != null ) Instruction ins = pei.getInstruction();
TypeAnalysis.java,Type throwType = frame.getTopValue();,if (frame != null ) Type throwType = frame.getTopValue();
TypeAnalysis.java,ConstantPoolGen cpg = methodGen.getConstantPool();,if (methodGen != null ) ConstantPoolGen cpg = methodGen.getConstantPool();
TypeFrameModelingVisitor.java,fieldSummary = AnalysisContext.currentAnalysisContext().getFieldSummary();,if (AnalysisContext != null ) fieldSummary = AnalysisContext.currentAnalysisContext().getFieldSummary();
TypeFrameModelingVisitor.java,FieldStoreType property = database.getProperty(xfield.getFieldDescriptor());,if (database != null ) FieldStoreType property = database.getProperty(xfield.getFieldDescriptor());
TypeFrameModelingVisitor.java,loadType = Type.getType(summary.getSignature());,if (Type != null ) loadType = Type.getType(summary.getSignature());
TypeFrameModelingVisitor.java,String returnValueSignature = new SignatureParser(signature).getReturnTypeSignature();,if (SignatureParser(signature) != null ) String returnValueSignature = new SignatureParser(signature).getReturnTypeSignature();
TypeFrameModelingVisitor.java,instanceOfValueNumber = vnaFrame.getTopValue();,if (vnaFrame != null ) instanceOfValueNumber = vnaFrame.getTopValue();
TypeFrameModelingVisitor.java,Type resultType = frame.popValue();,if (frame != null ) Type resultType = frame.popValue();
TypeFrameModelingVisitor.java,argType = frame.popValue();,if (frame != null ) argType = frame.popValue();
TypeFrameModelingVisitor.java,Type result = TopType.instance();,if (TopType != null ) Type result = TopType.instance();
TypeFrameModelingVisitor.java,SignatureParser p = new SignatureParser(m.getSignature());,if (SignatureParser(m != null ) SignatureParser p = new SignatureParser(m.getSignature());
TypeFrameModelingVisitor.java,result = TopType.instance();,if (TopType != null ) result = TopType.instance();
TypeFrameModelingVisitor.java,Type resultType = frame.popValue();,if (frame != null ) Type resultType = frame.popValue();
TypeFrameModelingVisitor.java,Type value = frame.popValue();,if (frame != null ) Type value = frame.popValue();
TypeFrameModelingVisitor.java,int index = obj.getIndex();,if (obj != null ) int index = obj.getIndex();
TypeFrameModelingVisitor.java,Type t = getFrame().popValue();,if (getFrame() != null ) Type t = getFrame().popValue();
TypeFrameModelingVisitor.java,instanceOfValueNumber = vnaFrame.getTopValue();,if (vnaFrame != null ) instanceOfValueNumber = vnaFrame.getTopValue();
TypeFrameModelingVisitor.java,instanceOfValueNumber = vnaFrame.getTopValue();,if (vnaFrame != null ) instanceOfValueNumber = vnaFrame.getTopValue();
TypeFrameModelingVisitor.java,instanceOfType = NullType.instance();,if (NullType != null ) instanceOfType = NullType.instance();
TypeFrameModelingVisitor.java,instanceOfValueNumber = vnaFrame.getTopValue();,if (vnaFrame != null ) instanceOfValueNumber = vnaFrame.getTopValue();
TypeFrameModelingVisitor.java,instanceOfType = NullType.instance();,if (NullType != null ) instanceOfType = NullType.instance();
TypeFrameModelingVisitor.java,Type value = frame.popValue();,if (frame != null ) Type value = frame.popValue();
TypeFrameModelingVisitor.java,Type arrayType = frame.popValue(); // arrayref,if (arrayref != null ) Type arrayType = frame.popValue(); // arrayref
ValueNumberAnalysis.java,int numLocals = methodGen.getMaxLocals();,if (methodGen != null ) int numLocals = methodGen.getMaxLocals();
ValueNumberAnalysis.java,int numSlots = result.getNumSlots();,if (result != null ) int numSlots = result.getNumSlots();
ValueNumberAnalysis.java,BasicBlock handlerBlock = edge.getTarget();,if (edge != null ) BasicBlock handlerBlock = edge.getTarget();
ValueNumberAnalysis.java,ValueCompacter compacter = new ValueCompacter(factory.getNumValuesAllocated());,if (ValueCompacter(factory != null ) ValueCompacter compacter = new ValueCompacter(factory.getNumValuesAllocated());
ValueNumberAnalysis.java,int before = factory.getNumValuesAllocated();,if (factory != null ) int before = factory.getNumValuesAllocated();
ValueNumberAnalysis.java,int after = factory.getNumValuesAllocated();,if (factory != null ) int after = factory.getNumValuesAllocated();
ValueNumberAnalysis.java,int number = value.getNumber();,if (value != null ) int number = value.getNumber();
ValueNumberDataflow.java,ValueNumberFrame frameAtEntry = getStartFact(getCFG().getEntry());,if (getStartFact(getCFG() != null ) ValueNumberFrame frameAtEntry = getStartFact(getCFG().getEntry());
ValueNumberDataflow.java,int numParams = new SignatureParser(methodSignature).getNumParameters();,if (SignatureParser(methodSignature) != null ) int numParams = new SignatureParser(methodSignature).getNumParameters();
ValueNumberFrame.java,FieldSummary fieldSummary = AnalysisContext.currentAnalysisContext().getFieldSummary();,if (AnalysisContext != null ) FieldSummary fieldSummary = AnalysisContext.currentAnalysisContext().getFieldSummary();
ValueNumberFrame.java,FieldSummary fieldSummary = AnalysisContext.currentAnalysisContext().getFieldSummary();,if (AnalysisContext != null ) FieldSummary fieldSummary = AnalysisContext.currentAnalysisContext().getFieldSummary();
ValueNumberFrame.java,XField field = availableLoad.getField();,if (availableLoad != null ) XField field = availableLoad.getField();
ValueNumberFrame.java,String fieldPackageName = extractPackageName(field.getClassName());,if (extractPackageName(field != null ) String fieldPackageName = extractPackageName(field.getClassName());
ValueNumberFrame.java,flags |= vn.getFlags();,if (vn != null ) flags |= vn.getFlags();
ValueNumberFrame.java,int numSlots = other.getNumSlots();,if (other != null ) int numSlots = other.getNumSlots();
ValueNumberFrame.java,String frameValues = super.toString();,if (super != null ) String frameValues = super.toString();
ValueNumberFrameModelingVisitor.java,ValueNumber arg = frame.getTopValue();,if (frame != null ) ValueNumber arg = frame.getTopValue();
ValueNumberFrameModelingVisitor.java,FieldSummary fieldSummary = AnalysisContext.currentAnalysisContext().getFieldSummary();,if (AnalysisContext != null ) FieldSummary fieldSummary = AnalysisContext.currentAnalysisContext().getFieldSummary();
ValueNumberFrameModelingVisitor.java,ValueNumber resultType = frame.popValue();,if (frame != null ) ValueNumber resultType = frame.popValue();
ValueNumberFrameModelingVisitor.java,String className = constantClass.getBytes(cpg.getConstantPool());,if (constantClass != null ) String className = constantClass.getBytes(cpg.getConstantPool());
ValueNumberFrameModelingVisitor.java,int local = obj.getIndex();,if (obj != null ) int local = obj.getIndex();
ValueNumberFrameModelingVisitor.java,ValueNumber reference = frame.popValue();,if (frame != null ) ValueNumber reference = frame.popValue();
ValueNumberSourceInfo.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
CFGDetector.java,IAnalysisCache analysisCache = Global.getAnalysisCache();,if (Global != null ) IAnalysisCache analysisCache = Global.getAnalysisCache();
MaxRankDecorator.java,int rank = bugInstance.getBugRank();,if (bugInstance != null ) int rank = bugInstance.getBugRank();
SuppressionDecorator.java,ClassAnnotation c = bugInstance.getPrimaryClass();,if (bugInstance != null ) ClassAnnotation c = bugInstance.getPrimaryClass();
DescriptorFactory.java,int length = signature.length();,if (signature != null ) int length = signature.length();
ClassInfo.java,AnalysisContext context = AnalysisContext.currentAnalysisContext();,if (AnalysisContext != null ) AnalysisContext context = AnalysisContext.currentAnalysisContext();
ClassInfo.java,assert xMethods.length == result.size();,if (result != null ) assert xMethods.length == result.size();
ClassInfo.java,String dottedClassName = getClassDescriptor().toDottedClassName();,if (getClassDescriptor() != null ) String dottedClassName = getClassDescriptor().toDottedClassName();
ClassInfo.java,String slashedClassName = getClassDescriptor().getClassName();,if (getClassDescriptor() != null ) String slashedClassName = getClassDescriptor().getClassName();
ClassNameAndSuperclassInfo.java,this.referencedClassDescriptorList = Collections.emptyList();,if (Collections != null ) this.referencedClassDescriptorList = Collections.emptyList();
ClassNameAndSuperclassInfo.java,this.calledClassDescriptorList = Collections.emptyList();,if (Collections != null ) this.calledClassDescriptorList = Collections.emptyList();
MethodInfo.java,String returnTypeSig = parser.getReturnTypeSignature();,if (parser != null ) String returnTypeSig = parser.getReturnTypeSignature();
ClassDataAnalysisEngine.java,String resourceName = descriptor.toResourceName();,if (descriptor != null ) String resourceName = descriptor.toResourceName();
ClassDataAnalysisEngine.java,int length = codeBaseEntry.getNumBytes();,if (codeBaseEntry != null ) int length = codeBaseEntry.getNumBytes();
ClassDataAnalysisEngine.java,data = byteSink.toByteArray();,if (byteSink != null ) data = byteSink.toByteArray();
ClassInfoAnalysisEngine.java,ClassInfo.Builder builder = new ClassInfo.Builder();,if (ClassInfo != null ) ClassInfo.Builder builder = new ClassInfo.Builder();
ClassInfoAnalysisEngine.java,ClassInfo classInfo = classInfoBuilder.build();,if (classInfoBuilder != null ) ClassInfo classInfo = classInfoBuilder.build();
ClassNameAndSuperclassInfoAnalysisEngine.java,ClassNameAndSuperclassInfo.Builder classInfoBuilder = new ClassNameAndSuperclassInfo.Builder();,if (ClassNameAndSuperclassInfo != null ) ClassNameAndSuperclassInfo.Builder classInfoBuilder = new ClassNameAndSuperclassInfo.Builder();
ClassNameAndSuperclassInfoAnalysisEngine.java,ClassNameAndSuperclassInfo classInfo = classInfoBuilder.build();,if (classInfoBuilder != null ) ClassNameAndSuperclassInfo classInfo = classInfoBuilder.build();
ClassParser.java,int magic = in.readInt();,if (in != null ) int magic = in.readInt();
ClassParser.java,interfaceDescriptorList[i] = getClassDescriptor(in.readUnsignedShort());,if (getClassDescriptor(in != null ) interfaceDescriptorList[i] = getClassDescriptor(in.readUnsignedShort());
ClassParser.java,int tag = in.readUnsignedByte();,if (in != null ) int tag = in.readUnsignedByte();
ClassParser.java,data[i] = in.readInt();,if (in != null ) data[i] = in.readInt();
ClassParser.java,data[i] = new Float(in.readFloat());,if (Float(in != null ) data[i] = new Float(in.readFloat());
ClassParser.java,data[i] = in.readLong();,if (in != null ) data[i] = in.readLong();
ClassParser.java,data[i] = in.readUnsignedShort();,if (in != null ) data[i] = in.readUnsignedShort();
ClassParserUsingASM.java,MethodInfo methodInfo = mBuilder.build();,if (mBuilder != null ) MethodInfo methodInfo = mBuilder.build();
ClassParserUsingBCEL.java,ClassDescriptor classDescriptor = DescriptorFactory.createClassDescriptorFromDottedClassName(javaClass.getClassName());,if (DescriptorFactory != null ) ClassDescriptor classDescriptor = DescriptorFactory.createClassDescriptorFromDottedClassName(javaClass.getClassName());
ClassParserUsingBCEL.java,String signature = obj.getSignature(javaClass.getConstantPool());,if (obj != null ) String signature = obj.getSignature(javaClass.getConstantPool());
ClassReaderAnalysisEngine.java,FBClassReader classReader = new FBClassReader(classData.getData());,if (FBClassReader(classData != null ) FBClassReader classReader = new FBClassReader(classData.getData());
CFGFactory.java,Instruction lastInstruction = last.getInstruction();,if (last != null ) Instruction lastInstruction = last.getInstruction();
CFGFactory.java,InstructionHandle prev = last.getPrev();,if (last != null ) InstructionHandle prev = last.getPrev();
CFGFactory.java,Instruction prevInstruction = prev.getInstruction();,if (prev != null ) Instruction prevInstruction = prev.getInstruction();
CFGFactory.java,changed  = changed || pruner.wasCFGModified();,if (pruner != null ) changed  = changed || pruner.wasCFGModified();
CFGFactory.java,Collection<BasicBlock> unreachable = dfs.unvisitedVertices();,if (dfs != null ) Collection<BasicBlock> unreachable = dfs.unvisitedVertices();
ClassContextClassAnalysisEngine.java,"ClassContext classContext = new ClassContext(javaClass, AnalysisContext.currentAnalysisContext());","if (AnalysisContext != null ) ClassContext classContext = new ClassContext(javaClass, AnalysisContext.currentAnalysisContext());"
LoadedFieldSetFactory.java,InstructionList il = methodGen.getInstructionList();,if (methodGen != null ) InstructionList il = methodGen.getInstructionList();
LoadedFieldSetFactory.java,"ConstantPoolGen cpg = getConstantPoolGen(analysisCache, descriptor.getClassDescriptor());","if (descriptor != null ) ConstantPoolGen cpg = getConstantPoolGen(analysisCache, descriptor.getClassDescriptor());"
LoadedFieldSetFactory.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
LoadedFieldSetFactory.java,short opcode = ins.getOpcode();,if (ins != null ) short opcode = ins.getOpcode();
MethodBytecodeSetFactory.java,Code code = method.getCode();,if (method != null ) Code code = method.getCode();
MethodBytecodeSetFactory.java,byte[] instructionList = code.getCode();,if (code != null ) byte[] instructionList = code.getCode();
MethodBytecodeSetFactory.java,UnpackedCode unpackedCode = callback.getUnpackedCode();,if (callback != null ) UnpackedCode unpackedCode = callback.getUnpackedCode();
MethodFactory.java,Method[] methodList = jclass.getMethods();,if (jclass != null ) Method[] methodList = jclass.getMethods();
MethodGenFactory.java,AnalysisContext analysisContext = AnalysisContext.currentAnalysisContext();,if (AnalysisContext != null ) AnalysisContext analysisContext = AnalysisContext.currentAnalysisContext();
MethodGenFactory.java,"JavaClass jclass = getJavaClass(analysisCache, descriptor.getClassDescriptor());","if (descriptor != null ) JavaClass jclass = getJavaClass(analysisCache, descriptor.getClassDescriptor());"
MethodGenFactory.java,String methodName = method.getName();,if (method != null ) String methodName = method.getName();
MethodGenFactory.java,int codeLength = method.getCode().getLength();,if (method != null ) int codeLength = method.getCode().getLength();
MethodGenFactory.java,String superclassName = jclass.getSuperclassName();,if (jclass != null ) String superclassName = jclass.getSuperclassName();
ObligationDataflowFactory.java,ObligationFactory factory = database.getFactory();,if (database != null ) ObligationFactory factory = database.getFactory();
ObligationDataflowFactory.java,Profiler profiler = analysisCache.getProfiler();,if (analysisCache != null ) Profiler profiler = analysisCache.getProfiler();
ParameterSignatureListFactory.java,SignatureParser parser = new SignatureParser(descriptor.getSignature());,if (SignatureParser(descriptor != null ) SignatureParser parser = new SignatureParser(descriptor.getSignature());
UnpackedCodeFactory.java,Code code = method.getCode();,if (method != null ) Code code = method.getCode();
UnpackedCodeFactory.java,byte[] instructionList = code.getCode();,if (code != null ) byte[] instructionList = code.getCode();
ValueNumberDataflowFactory.java,Location loc = locs.next();,if (locs != null ) Location loc = locs.next();
AnalysisCache.java,"ClassContext classContext = getClassAnalysis(ClassContext.class, methodDescriptor.getClassDescriptor());","if (methodDescriptor != null ) ClassContext classContext = getClassAnalysis(ClassContext.class, methodDescriptor.getClassDescriptor());"
AnalysisCache.java,"ClassContext classContext = getClassAnalysis(ClassContext.class, methodDescriptor.getClassDescriptor());","if (methodDescriptor != null ) ClassContext classContext = getClassAnalysis(ClassContext.class, methodDescriptor.getClassDescriptor());"
AnalysisCache.java,"ClassContext classContext = getClassAnalysis(ClassContext.class, methodDescriptor.getClassDescriptor());","if (methodDescriptor != null ) ClassContext classContext = getClassAnalysis(ClassContext.class, methodDescriptor.getClassDescriptor());"
AnalysisCache.java,database = databaseFactory.createDatabase();,if (databaseFactory != null ) database = databaseFactory.createDatabase();
ClassFactory.java,String fileName = codeBaseLocator.getPathName();,if (codeBaseLocator != null ) String fileName = codeBaseLocator.getPathName();
ClassPathBuilder.java,ClassDescriptor classDescriptor = entry.getClassDescriptor();,if (entry != null ) ClassDescriptor classDescriptor = entry.getClassDescriptor();
ClassPathBuilder.java,String extDir = st.nextToken();,if (st != null ) String extDir = st.nextToken();
ClassPathBuilder.java,String findbugsHome = FindBugs.getHome();,if (FindBugs != null ) String findbugsHome = FindBugs.getHome();
ClassPathBuilder.java,String entry = st.nextToken();,if (st != null ) String entry = st.nextToken();
ClassPathBuilder.java,String path = pathname.getPath();,if (pathname != null ) String path = pathname.getPath();
ClassPathBuilder.java,WorkListItem item = workList.removeFirst();,if (workList != null ) WorkListItem item = workList.removeFirst();
ClassPathBuilder.java,FilesystemCodeBaseLocator l = (FilesystemCodeBaseLocator)item.getCodeBaseLocator();,if ((FilesystemCodeBaseLocator)item != null ) FilesystemCodeBaseLocator l = (FilesystemCodeBaseLocator)item.getCodeBaseLocator();
ClassPathBuilder.java,IScannableCodeBase codeBase = (IScannableCodeBase) discoveredCodeBase.getCodeBase();,if (discoveredCodeBase != null ) IScannableCodeBase codeBase = (IScannableCodeBase) discoveredCodeBase.getCodeBase();
ClassPathBuilder.java,ICodeBaseIterator i = codeBase.iterator();,if (codeBase != null ) ICodeBaseIterator i = codeBase.iterator();
ClassPathBuilder.java,InputStream resourceIn = entry.openResource();,if (entry != null ) InputStream resourceIn = entry.openResource();
ClassPathBuilder.java,ClassNameAndSuperclassInfo.Builder builder = new ClassNameAndSuperclassInfo.Builder();,if (ClassNameAndSuperclassInfo != null ) ClassNameAndSuperclassInfo.Builder builder = new ClassNameAndSuperclassInfo.Builder();
ClassPathBuilder.java,Attributes mainAttrs = manifest.getMainAttributes();,if (manifest != null ) Attributes mainAttrs = manifest.getMainAttributes();
DelegatingCodeBaseIterator.java,this.delegateCodeBaseIterator = delegateCodeBase.iterator();,if (delegateCodeBase != null ) this.delegateCodeBaseIterator = delegateCodeBase.iterator();
DelegatingCodeBaseIterator.java,ICodeBaseEntry delegateCodeBaseEntry = delegateCodeBaseIterator.next();,if (delegateCodeBaseIterator != null ) ICodeBaseEntry delegateCodeBaseEntry = delegateCodeBaseIterator.next();
DirectoryCodeBase.java,Iterator<String> fileNameIterator = rfs.fileNameIterator();,if (rfs != null ) Iterator<String> fileNameIterator = rfs.fileNameIterator();
DirectoryCodeBase.java,final String fileName = fileNameIterator.next();,if (fileNameIterator != null ) final String fileName = fileNameIterator.next();
DirectoryCodeBase.java,long modTime = file.lastModified();,if (file != null ) long modTime = file.lastModified();
DirectoryCodeBase.java,String dirPath = directory.getPath();,if (directory != null ) String dirPath = directory.getPath();
DirectoryCodeBase.java,String relativeFileName = fileName.substring(dirPath.length());,if (fileName != null ) String relativeFileName = fileName.substring(dirPath.length());
FilesystemCodeBaseLocator.java,path = path.getParentFile();,if (path != null ) path = path.getParentFile();
NestedZipFileCodeBase.java,this.parentCodeBase = codeBaseLocator.getParentCodeBase();,if (codeBaseLocator != null ) this.parentCodeBase = codeBaseLocator.getParentCodeBase();
NestedZipFileCodeBase.java,this.resourceName = codeBaseLocator.getResourceName();,if (codeBaseLocator != null ) this.resourceName = codeBaseLocator.getResourceName();
NestedZipFileCodeBase.java,inputStream = resource.openResource();,if (resource != null ) inputStream = resource.openResource();
SingleFileCodeBase.java,resourceName = getClassDescriptor().toResourceName();,if (getClassDescriptor() != null ) resourceName = getClassDescriptor().toResourceName();
SingleFileCodeBase.java,ClassNameAndSuperclassInfo.Builder builder = new ClassNameAndSuperclassInfo.Builder();,if (ClassNameAndSuperclassInfo != null ) ClassNameAndSuperclassInfo.Builder builder = new ClassNameAndSuperclassInfo.Builder();
ZipCodeBaseFactory.java,Profiler profiler = Global.getAnalysisCache().getProfiler();,if (Global != null ) Profiler profiler = Global.getAnalysisCache().getProfiler();
ZipCodeBaseFactory.java,long size = file.length();,if (file != null ) long size = file.length();
ZipCodeBaseFactory.java,long size = file.length();,if (file != null ) long size = file.length();
ZipFileCodeBase.java,File parent = file.getParentFile();,if (file != null ) File parent = file.getParentFile();
ZipFileCodeBase.java,ZipEntry zipEntry = zipEntryEnumerator.nextElement();,if (zipEntryEnumerator != null ) ZipEntry zipEntry = zipEntryEnumerator.nextElement();
ZipInputStreamCodeBase.java,String name = ze.getName();,if (ze != null ) String name = ze.getName();
ZipInputStreamCodeBase.java,long sz = ze.getSize();,if (ze != null ) long sz = ze.getSize();
ZipInputStreamCodeBase.java,byte[] bytes = out.toByteArray();,if (out != null ) byte[] bytes = out.toByteArray();
ZipInputStreamCodeBase.java,ze = zis.getNextEntry();,if (zis != null ) ze = zis.getNextEntry();
AbstractCloud.java,newMode = Mode.valueOf(modeString.toUpperCase());,if (Mode != null ) newMode = Mode.valueOf(modeString.toUpperCase());
AbstractCloud.java,UserDesignation d =	UserDesignation.valueOf(designation.getDesignationKey());,if (UserDesignation != null ) UserDesignation d =	UserDesignation.valueOf(designation.getDesignationKey());
AbstractCloud.java,UserDesignation d =	UserDesignation.valueOf(designation.getDesignationKey());,if (UserDesignation != null ) UserDesignation d =	UserDesignation.valueOf(designation.getDesignationKey());
AbstractCloud.java,totalSquares += d.score() * d.score();,if (d != null ) totalSquares += d.score() * d.score();
AbstractCloud.java,UserDesignation d = UserDesignation.valueOf(designation.getDesignationKey());,if (UserDesignation != null ) UserDesignation d = UserDesignation.valueOf(designation.getDesignationKey());
AbstractCloud.java,int num = ps.getNumClasses();,if (ps != null ) int num = ps.getNumClasses();
AbstractCloud.java,ncss += ps.size();,if (ps != null ) ncss += ps.size();
AbstractCloud.java,String lst = Arrays.asList(packagePrefixes).toString();,if (Arrays != null ) String lst = Arrays.asList(packagePrefixes).toString();
AbstractCloud.java,String fileName = src.getSourcePath();,if (src != null ) String fileName = src.getSourcePath();
AbstractCloud.java,int startLine = src.getStartLine();,if (src != null ) int startLine = src.getStartLine();
BugFilingCommentHelper.java,PropertyBundle properties = cloud.getPlugin().getProperties();,if (cloud != null ) PropertyBundle properties = cloud.getPlugin().getProperties();
BugFilingCommentHelper.java,"firstLine = Math.min(firstLine, s.getStartLine());","if (s != null ) firstLine = Math.min(firstLine, s.getStartLine());"
BugFilingCommentHelper.java,"lastLine = Math.max(lastLine, s.getEndLine());","if (s != null ) lastLine = Math.max(lastLine, s.getEndLine());"
BugFilingCommentHelper.java,SourceLineAnnotation primarySource = primaryClass.getSourceLines();,if (primaryClass != null ) SourceLineAnnotation primarySource = primaryClass.getSourceLines();
BugFilingCommentHelper.java,Project project = cloud.getBugCollection().getProject();,if (cloud != null ) Project project = cloud.getBugCollection().getProject();
BugFilingCommentHelper.java,String txt = in.readLine();,if (in != null ) String txt = in.readLine();
BugFilingCommentHelper.java,String trimmed = txt.trim();,if (txt != null ) String trimmed = txt.trim();
BugFilingCommentHelper.java,Collection<String> projects = cloud.getProjects(primaryClass.getClassName());,if (cloud != null ) Collection<String> projects = cloud.getProjects(primaryClass.getClassName());
BugFilingCommentHelper.java,String projectList = projects.toString();,if (projects != null ) String projectList = projects.toString();
BugFilingCommentHelper.java,String detailPlainText = b.getBugPattern().getDetailPlainText();,if (b != null ) String detailPlainText = b.getBugPattern().getDetailPlainText();
BugFilingCommentHelper.java,String eval = cloud.getUserEvaluation(b).trim();,if (cloud != null ) String eval = cloud.getUserEvaluation(b).trim();
Cloud.java,String value = names.getString(this.name());,if (names != null ) String value = names.getString(this.name());
CloudFactory.java,String cloudId = bc.getProject().getCloudId();,if (bc != null ) String cloudId = bc.getProject().getCloudId();
DBCloud.java,BugData bugData = getBugData(bug.getInstanceHash());,if (getBugData(bug != null ) BugData bugData = getBugData(bug.getInstanceHash());
DBCloud.java,this.now = System.currentTimeMillis();,if (System != null ) this.now = System.currentTimeMillis();
DBCloud.java,rs = ps.executeQuery();,if (ps != null ) rs = ps.executeQuery();
DBCloud.java,rs = ps.executeQuery();,if (ps != null ) rs = ps.executeQuery();
DBCloud.java,rs = ps.executeQuery();,if (ps != null ) rs = ps.executeQuery();
DBCloud.java,long initialLoadTime = sbc.getTimeFinishedLoading() - sbc.getTimeStartedLoading();,if (sbc != null ) long initialLoadTime = sbc.getTimeFinishedLoading() - sbc.getTimeStartedLoading();
DBCloud.java,long initialSyncTime = System.currentTimeMillis() - sbc.getTimeFinishedLoading();,if (sbc != null ) long initialSyncTime = System.currentTimeMillis() - sbc.getTimeFinishedLoading();
DBCloud.java,rs = insertSession.getGeneratedKeys();,if (insertSession != null ) rs = insertSession.getGeneratedKeys();
DBCloud.java,long stillPresentAt = bugCollection.getTimestamp();,if (bugCollection != null ) long stillPresentAt = bugCollection.getTimestamp();
DBCloud.java,BugData bd = getBugData(b.getInstanceHash());,if (getBugData(b != null ) BugData bd = getBugData(b.getInstanceHash());
DBCloud.java,long firstSeen = bugCollection.getAppVersionFromSequenceNumber(firstVersion).getTimestamp();,if (bugCollection != null ) long firstSeen = bugCollection.getAppVersionFromSequenceNumber(firstVersion).getTimestamp();
DBCloud.java,BugDesignation designation = bd.getPrimaryDesignation();,if (bd != null ) BugDesignation designation = bd.getPrimaryDesignation();
DBCloud.java,longestMatch = key.length();,if (key != null ) longestMatch = key.length();
DBCloud.java,String s = in.readLine();,if (in != null ) String s = in.readLine();
DBCloud.java,Timestamp date = new Timestamp(System.currentTimeMillis());,if (Timestamp(System != null ) Timestamp date = new Timestamp(System.currentTimeMillis());
DBCloud.java,Timestamp date = new Timestamp(bd.getTimestamp());,if (Timestamp(bd != null ) Timestamp date = new Timestamp(bd.getTimestamp());
DBCloud.java,ResultSet rs = insertEvaluation.getGeneratedKeys();,if (insertEvaluation != null ) ResultSet rs = insertEvaluation.getGeneratedKeys();
DBCloud.java,rs = query.executeQuery();,if (query != null ) rs = query.executeQuery();
DBCloud.java,this.bd = getBugData(bug.getInstanceHash());,if (getBugData(bug != null ) this.bd = getBugData(bug.getInstanceHash());
DBCloud.java,total += designation.score();,if (designation != null ) total += designation.score();
DBCloud.java,Collection<BugDesignation> uniqueDesignations = bd.getUniqueDesignations();,if (bd != null ) Collection<BugDesignation> uniqueDesignations = bd.getUniqueDesignations();
DBCloud.java,UserDesignation designation = UserDesignation.valueOf(d.getDesignationKey());,if (UserDesignation != null ) UserDesignation designation = UserDesignation.valueOf(d.getDesignationKey());
DBCloud.java,int score = designation.score();,if (designation != null ) int score = designation.score();
DBCloud.java,ResultSet rs = ps.executeQuery();,if (ps != null ) ResultSet rs = ps.executeQuery();
DBCloud.java,bd.bugFiled = whenFiled.getTime();,if (whenFiled != null ) bd.bugFiled = whenFiled.getTime();
DBCloud.java,bd.bugFiled = pendingFiledAt.getTime();,if (pendingFiledAt != null ) bd.bugFiled = pendingFiledAt.getTime();
DBCloud.java,errorTime = System.currentTimeMillis();,if (System != null ) errorTime = System.currentTimeMillis();
DBCloud.java,int numToSync = queue.size();,if (queue != null ) int numToSync = queue.size();
DBCloud.java,BugData bugData = instanceMap.get(bd.getInstanceHash());,if (instanceMap != null ) BugData bugData = instanceMap.get(bd.getInstanceHash());
DBStats.java,Timestamp result = new Timestamp(t.getTime());,if (Timestamp(t != null ) Timestamp result = new Timestamp(t.getTime());
DBStats.java,String s = in.readLine();,if (in != null ) String s = in.readLine();
DBStats.java,Connection c = cloud.getConnection();,if (cloud != null ) Connection c = cloud.getConnection();
DBStats.java,ResultSet rs = ps.executeQuery();,if (ps != null ) ResultSet rs = ps.executeQuery();
DBStats.java,rs = ps.executeQuery();,if (ps != null ) rs = ps.executeQuery();
DBStats.java,rs = ps.executeQuery();,if (ps != null ) rs = ps.executeQuery();
IPAddressLookup.java,ipAddress = in.readLine();,if (in != null ) ipAddress = in.readLine();
AppEngineNameLookup.java,HttpURLConnection connection = (HttpURLConnection) response.openConnection();,if (response != null ) HttpURLConnection connection = (HttpURLConnection) response.openConnection();
AppEngineNameLookup.java,int responseCode = connection.getResponseCode();,if (connection != null ) int responseCode = connection.getResponseCode();
AppEngineNameLookup.java,sessionId = Long.parseLong(in.readLine());,if (Long != null ) sessionId = Long.parseLong(in.readLine());
AppEngineNameLookup.java,username = in.readLine();,if (in != null ) username = in.readLine();
CommandLine.java,maxWidth = option.length();,if (option != null ) maxWidth = option.length();
CommandLine.java,line = line.trim();,if (line != null ) line = line.trim();
CommandLine.java,int nSpaces = width - s.length();,if (s != null ) int nSpaces = width - s.length();
ProjectFilterSettings.java,int priority = bugInstance.getPriority();,if (bugInstance != null ) int priority = bugInstance.getPriority();
ProjectFilterSettings.java,int rank = bugInstance.getBugRank();,if (bugInstance != null ) int rank = bugInstance.getBugRank();
ProjectFilterSettings.java,BugPattern bugPattern = bugInstance.getBugPattern();,if (bugInstance != null ) BugPattern bugPattern = bugInstance.getBugPattern();
ProjectFilterSettings.java,this.minPriorityAsInt = value.intValue();,if (value != null ) this.minPriorityAsInt = value.intValue();
UserPreferences.java,this.filterSettings = ProjectFilterSettings.createDefault();,if (ProjectFilterSettings != null ) this.filterSettings = ProjectFilterSettings.createDefault();
UserPreferences.java,String key = (String) e.getKey();,if (e != null ) String key = (String) e.getKey();
UserPreferences.java,String detectorState = (String) e.getValue();,if (e != null ) String detectorState = (String) e.getValue();
UserPreferences.java,Iterator<String> it = recentProjectsList.iterator();,if (recentProjectsList != null ) Iterator<String> it = recentProjectsList.iterator();
UserPreferences.java,String detectorName = factory.getShortName();,if (factory != null ) String detectorName = factory.getShortName();
UserPreferences.java,enabled = factory.isDefaultEnabled();,if (factory != null ) enabled = factory.isDefaultEnabled();
UserPreferences.java,DetectorFactoryCollection factoryCollection = DetectorFactoryCollection.instance();,if (DetectorFactoryCollection != null ) DetectorFactoryCollection factoryCollection = DetectorFactoryCollection.instance();
UserPreferences.java,UserPreferences dup = (UserPreferences) super.clone();,if (super != null ) UserPreferences dup = (UserPreferences) super.clone();
AnyMethodReturnValueStreamFactory.java,Instruction ins = location.getHandle().getInstruction();,if (location != null ) Instruction ins = location.getHandle().getInstruction();
AppendingToAnObjectOutputStream.java,Object value = item.getConstant();,if (item != null ) Object value = item.getConstant();
AtomicityProblem.java,XMethod m = top.getReturnValueOf();,if (top != null ) XMethod m = top.getReturnValueOf();
AtomicityProblem.java,XMethod m = top.getReturnValueOf();,if (top != null ) XMethod m = top.getReturnValueOf();
BCPMethodReturnCheck.java,ByteCodePattern  result = localByteCodePattern.get();,if (localByteCodePattern != null ) ByteCodePattern  result = localByteCodePattern.get();
BCPMethodReturnCheck.java,ArrayList<PatternElement> list = localPatternElementList.get();,if (localPatternElementList != null ) ArrayList<PatternElement> list = localPatternElementList.get();
BCPMethodReturnCheck.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
BCPMethodReturnCheck.java,InvokeInstruction inv = (InvokeInstruction) call.getInstruction();,if (call != null ) InvokeInstruction inv = (InvokeInstruction) call.getInstruction();
BCPMethodReturnCheck.java,ConstantPoolGen cp = methodGen.getConstantPool();,if (methodGen != null ) ConstantPoolGen cp = methodGen.getConstantPool();
BCPMethodReturnCheck.java,String sourceFile = javaClass.getSourceFileName();,if (javaClass != null ) String sourceFile = javaClass.getSourceFileName();
BCPMethodReturnCheck.java,String callingPackage = extractPackageName(javaClass.getClassName());,if (extractPackageName(javaClass != null ) String callingPackage = extractPackageName(javaClass.getClassName());
BadAppletConstructor.java,JavaClass cls = classContext.getJavaClass();,if (classContext != null ) JavaClass cls = classContext.getJavaClass();
BadSyntaxForRegularExpression.java,Object value = it.getConstant();,if (it != null ) Object value = it.getConstant();
BadSyntaxForRegularExpression.java,Object topValue = top.getConstant();,if (top != null ) Object topValue = top.getConstant();
BadSyntaxForRegularExpression.java,Object value = it.getConstant();,if (it != null ) Object value = it.getConstant();
BadSyntaxForRegularExpression.java,Object value = it.getConstant();,if (it != null ) Object value = it.getConstant();
BadlyOverriddenAdapter.java,JavaClass superClass = obj.getSuperClass();,if (obj != null ) JavaClass superClass = obj.getSuperClass();
BadlyOverriddenAdapter.java,String className = superClass.getClassName();,if (superClass != null ) String className = superClass.getClassName();
BadlyOverriddenAdapter.java,Method[] methods = superClass.getMethods();,if (superClass != null ) Method[] methods = superClass.getMethods();
BuildCheckReturnAnnotationDatabase.java,String w = simpleClassName(when.getEnumValueString());,if (simpleClassName(when != null ) String w = simpleClassName(when.getEnumValueString());
BuildInterproceduralCallGraph.java,vertex = callGraph.lookupVertex(xmethod.getMethodDescriptor());,if (callGraph != null ) vertex = callGraph.lookupVertex(xmethod.getMethodDescriptor());
BuildNonNullAnnotationDatabase.java,NullnessAnnotation n = NullnessAnnotation.Parser.parse(value.getClassString());,if (NullnessAnnotation != null ) NullnessAnnotation n = NullnessAnnotation.Parser.parse(value.getClassString());
BuildNonnullReturnDatabase.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
BuildNonnullReturnDatabase.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
BuildObligationPolicyDatabase.java,final DescriptorFactory instance = DescriptorFactory.instance();,if (DescriptorFactory != null ) final DescriptorFactory instance = DescriptorFactory.instance();
BuildObligationPolicyDatabase.java,SplitCamelCaseIdentifier splitter = new SplitCamelCaseIdentifier(xmethod.getName());,if (SplitCamelCaseIdentifier(xmethod != null ) SplitCamelCaseIdentifier splitter = new SplitCamelCaseIdentifier(xmethod.getName());
BuildObligationPolicyDatabase.java,Type returnType = Type.getReturnType(xmethod.getSignature());,if (Type != null ) Type returnType = Type.getReturnType(xmethod.getSignature());
BuildUnconditionalParamDerefDatabase.java,JavaClass jclass = classContext.getJavaClass();,if (classContext != null ) JavaClass jclass = classContext.getJavaClass();
BuildUnconditionalParamDerefDatabase.java,SignatureParser parser =  new SignatureParser(method.getSignature());,if (SignatureParser(method != null ) SignatureParser parser =  new SignatureParser(method.getSignature());
BuildUnconditionalParamDerefDatabase.java,UnconditionalValueDerefSet entryFact = dataflow.getResultFact(cfg.getEntry());,if (dataflow != null ) UnconditionalValueDerefSet entryFact = dataflow.getResultFact(cfg.getEntry());
BuildUnconditionalParamDerefDatabase.java,String paramSig = paramIterator.next();,if (paramIterator != null ) String paramSig = paramIterator.next();
BuildUnconditionalParamDerefDatabase.java,nonnullReferenceParameters += unconditionalDerefSet.cardinality();,if (unconditionalDerefSet != null ) nonnullReferenceParameters += unconditionalDerefSet.cardinality();
CallToUnconditionalThrower.java,ConstantPoolGen cpg = classContext.getConstantPoolGen();,if (classContext != null ) ConstantPoolGen cpg = classContext.getConstantPoolGen();
CallToUnconditionalThrower.java,Instruction ins = thrower.getInstruction();,if (thrower != null ) Instruction ins = thrower.getInstruction();
CallToUnconditionalThrower.java,analysisContext = AnalysisContext.currentAnalysisContext();,if (AnalysisContext != null ) analysisContext = AnalysisContext.currentAnalysisContext();
CallToUnconditionalThrower.java,Method[] methodList = classContext.getJavaClass().getMethods();,if (classContext != null ) Method[] methodList = classContext.getJavaClass().getMethods();
CallToUnsupportedMethod.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
CallToUnsupportedMethod.java,Method[] methodList = javaClass.getMethods();,if (javaClass != null ) Method[] methodList = javaClass.getMethods();
CallToUnsupportedMethod.java,Location location = iter.next();,if (iter != null ) Location location = iter.next();
CallToUnsupportedMethod.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
CalledMethods.java,XFactory xFactory = AnalysisContext.currentXFactory();,if (AnalysisContext != null ) XFactory xFactory = AnalysisContext.currentXFactory();
CheckCalls.java,Method[] methodList = classContext.getJavaClass().getMethods();,if (classContext != null ) Method[] methodList = classContext.getJavaClass().getMethods();
CheckCalls.java,Instruction ins = location.getHandle().getInstruction();,if (location != null ) Instruction ins = location.getHandle().getInstruction();
CheckExpectedWarnings.java,MethodAnnotation method = warning.getPrimaryMethod();,if (warning != null ) MethodAnnotation method = warning.getPrimaryMethod();
CheckExpectedWarnings.java,MethodDescriptor methodDesc = method.toXMethod().getMethodDescriptor();,if (method != null ) MethodDescriptor methodDesc = method.toXMethod().getMethodDescriptor();
CheckExpectedWarnings.java,Iterator<AnalysisPass> i = executionPlan.passIterator();,if (executionPlan != null ) Iterator<AnalysisPass> i = executionPlan.passIterator();
CheckExpectedWarnings.java,Iterator<DetectorFactory> j = pass.iterator();,if (pass != null ) Iterator<DetectorFactory> j = pass.iterator();
CheckExpectedWarnings.java,Collection<BugPattern> reportedPatterns = factory.getReportedBugPatterns();,if (factory != null ) Collection<BugPattern> reportedPatterns = factory.getReportedBugPatterns();
CheckExpectedWarnings.java,String bugCode = tok.nextToken();,if (tok != null ) String bugCode = tok.nextToken();
CheckExpectedWarnings.java,BugPattern pattern = warning.getBugPattern();,if (warning != null ) BugPattern pattern = warning.getBugPattern();
CheckExpectedWarnings.java,match = pattern.getType();,if (pattern != null ) match = pattern.getType();
CheckExpectedWarnings.java,match = pattern.getAbbrev();,if (pattern != null ) match = pattern.getAbbrev();
CheckTypeQualifiers.java,Collection<TypeQualifierValue> allKnownTypeQualifiers = TypeQualifierValue.getAllKnownTypeQualifiers();,if (TypeQualifierValue != null ) Collection<TypeQualifierValue> allKnownTypeQualifiers = TypeQualifierValue.getAllKnownTypeQualifiers();
CheckTypeQualifiers.java,IAnalysisCache analysisCache = Global.getAnalysisCache();,if (Global != null ) IAnalysisCache analysisCache = Global.getAnalysisCache();
CheckTypeQualifiers.java,"checkLocation = ""location "" + loc.toCompactString();","if (loc != null ) checkLocation = ""location "" + loc.toCompactString();"
CheckTypeQualifiers.java,ValueNumber vn = source.getValueNumber();,if (source != null ) ValueNumber vn = source.getValueNumber();
CheckTypeQualifiers.java,int p = source.getParameter();,if (source != null ) int p = source.getParameter();
CheckTypeQualifiers.java,BasicBlock targetBlock = edge.getTarget();,if (edge != null ) BasicBlock targetBlock = edge.getTarget();
CheckTypeQualifiers.java,fallThroughSuccessor = removedEdge.getTarget();,if (removedEdge != null ) fallThroughSuccessor = removedEdge.getTarget();
CheckTypeQualifiers.java,BasicBlock sourceBlock = edge.getSource();,if (edge != null ) BasicBlock sourceBlock = edge.getSource();
CheckTypeQualifiers.java,Object constantValue = sourceSinkInfo.getConstantValue();,if (sourceSinkInfo != null ) Object constantValue = sourceSinkInfo.getConstantValue();
ConfusedInheritance.java,cls = classContext.getJavaClass();,if (classContext != null ) cls = classContext.getJavaClass();
ConfusionBetweenInheritedAndOuterMethod.java,String alternativePackage = alternativeMethod.getPackageName();,if (alternativeMethod != null ) String alternativePackage = alternativeMethod.getPackageName();
CrossSiteScripting.java,String s = item.getHttpParameterName();,if (item != null ) String s = item.getHttpParameterName();
CrossSiteScripting.java,Object nameConstant = name.getConstant();,if (name != null ) Object nameConstant = name.getConstant();
CrossSiteScripting.java,Object nameConstant = name.getConstant();,if (name != null ) Object nameConstant = name.getConstant();
CrossSiteScripting.java,XMethod method = writing.getReturnValueOf();,if (writing != null ) XMethod method = writing.getReturnValueOf();
CrossSiteScripting.java,XMethod writingToSource = writingTo.getReturnValueOf();,if (writingTo != null ) XMethod writingToSource = writingTo.getReturnValueOf();
DontCatchIllegalMonitorStateException.java,int type = obj.getCatchType();,if (obj != null ) int type = obj.getCatchType();
DontIgnoreResultOfPutIfAbsent.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
DontIgnoreResultOfPutIfAbsent.java,Method[] methodList = javaClass.getMethods();,if (javaClass != null ) Method[] methodList = javaClass.getMethods();
DontIgnoreResultOfPutIfAbsent.java,ClassDescriptor superclassDescriptor = xClass.getSuperclassDescriptor();,if (xClass != null ) ClassDescriptor superclassDescriptor = xClass.getSuperclassDescriptor();
DontIgnoreResultOfPutIfAbsent.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
DontIgnoreResultOfPutIfAbsent.java,ConstantPoolGen cpg = classContext.getConstantPoolGen();,if (classContext != null ) ConstantPoolGen cpg = classContext.getConstantPoolGen();
DontIgnoreResultOfPutIfAbsent.java,String sourceFileName = javaClass.getSourceFileName();,if (javaClass != null ) String sourceFileName = javaClass.getSourceFileName();
DontIgnoreResultOfPutIfAbsent.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
DontIgnoreResultOfPutIfAbsent.java,InstructionHandle next = handle.getNext();,if (handle != null ) InstructionHandle next = handle.getNext();
DontIgnoreResultOfPutIfAbsent.java,ValueNumber vn = vna.getTopValue();,if (vna != null ) ValueNumber vn = vna.getTopValue();
DontIgnoreResultOfPutIfAbsent.java,Type type = typeAnalysis.getFactAtLocation(location).getTopValue();,if (typeAnalysis != null ) Type type = typeAnalysis.getFactAtLocation(location).getTopValue();
DontIgnoreResultOfPutIfAbsent.java,String valueSignature = type.getSignature();,if (type != null ) String valueSignature = type.getSignature();
DroppedException.java,CodeException[] exp = obj.getExceptionTable();,if (obj != null ) CodeException[] exp = obj.getExceptionTable();
DroppedException.java,LineNumberTable lineNumbers = obj.getLineNumberTable();,if (obj != null ) LineNumberTable lineNumbers = obj.getLineNumberTable();
DroppedException.java,int handled = aExp.getHandlerPC();,if (aExp != null ) int handled = aExp.getHandlerPC();
DroppedException.java,int start = aExp.getStartPC();,if (aExp != null ) int start = aExp.getStartPC();
DroppedException.java,int cause = aExp.getCatchType();,if (aExp != null ) int cause = aExp.getCatchType();
DroppedException.java,LineNumber[] entries = linenumbers.getLineNumberTable();,if (linenumbers != null ) LineNumber[] entries = linenumbers.getLineNumberTable();
DroppedException.java,int line = entries[i].getLineNumber();,if (entries[i] != null ) int line = entries[i].getLineNumber();
DroppedException.java,int secondChoice = entries[i].getLineNumber();,if (entries[i] != null ) int secondChoice = entries[i].getLineNumber();
DroppedException.java,SourceFinder sourceFinder = AnalysisContext.currentAnalysisContext().getSourceFinder();,if (AnalysisContext != null ) SourceFinder sourceFinder = AnalysisContext.currentAnalysisContext().getSourceFinder();
DroppedException.java,Token token = tokenizer.next();,if (tokenizer != null ) Token token = tokenizer.next();
DroppedException.java,eolOfCatchBlockStart = tokenList.size();,if (tokenList != null ) eolOfCatchBlockStart = tokenList.size();
DroppedException.java,Token token = iter.previous();,if (iter != null ) Token token = iter.previous();
DroppedException.java,Token token = iter.next();,if (iter != null ) Token token = iter.next();
DroppedException.java,int type = token.getKind();,if (token != null ) int type = token.getKind();
DroppedException.java,String value = token.getLexeme();,if (token != null ) String value = token.getLexeme();
DumbMethodInvocations.java,Method[] methodList = classContext.getJavaClass().getMethods();,if (classContext != null ) Method[] methodList = classContext.getJavaClass().getMethods();
DumbMethodInvocations.java,ConstantPoolGen cpg = classContext.getConstantPoolGen();,if (classContext != null ) ConstantPoolGen cpg = classContext.getConstantPoolGen();
DumbMethodInvocations.java,Instruction ins = location.getHandle().getInstruction();,if (location != null ) Instruction ins = location.getHandle().getInstruction();
DumbMethodInvocations.java,String password = operandValue.getConstantString();,if (operandValue != null ) String password = operandValue.getConstantString();
DumbMethodInvocations.java,Constant operandValue = frame.getTopValue();,if (frame != null ) Constant operandValue = frame.getTopValue();
DumbMethodInvocations.java,Constant operandValue = frame.getTopValue();,if (frame != null ) Constant operandValue = frame.getTopValue();
DumbMethods.java,Attribute[] attributes = obj.getAttributes();,if (obj != null ) Attribute[] attributes = obj.getAttributes();
DumbMethods.java,Code code = method.getCode();,if (method != null ) Code code = method.getCode();
DumbMethods.java,Object value = item.getConstant();,if (item != null ) Object value = item.getConstant();
DumbMethods.java,Object rhsConstant = rhs.getConstant();,if (rhs != null ) Object rhsConstant = rhs.getConstant();
DumbMethods.java,Object lhsConstant = lhs.getConstant();,if (lhs != null ) Object lhsConstant = lhs.getConstant();
DumbMethods.java,Object lhsConstant = lhs.getConstant();,if (lhs != null ) Object lhsConstant = lhs.getConstant();
DumbMethods.java,Object value = item.getConstant();,if (item != null ) Object value = item.getConstant();
DumbMethods.java,int majorVersion = getThisClass().getMajor();,if (getThisClass() != null ) int majorVersion = getThisClass().getMajor();
DumbMethods.java,Object value = top.getConstant();,if (top != null ) Object value = top.getConstant();
DumbMethods.java,String bigDecimalString = new BigDecimal(arg).toString();,if (BigDecimal(arg) != null ) String bigDecimalString = new BigDecimal(arg).toString();
DumbMethods.java,int catchTypeIndex = handler.getCatchType();,if (handler != null ) int catchTypeIndex = handler.getCatchType();
DumbMethods.java,ConstantPool cp = getThisClass().getConstantPool();,if (getThisClass() != null ) ConstantPool cp = getThisClass().getConstantPool();
DuplicateBranches.java,Iterator<BasicBlock> bbi = cfg.blockIterator();,if (cfg != null ) Iterator<BasicBlock> bbi = cfg.blockIterator();
DuplicateBranches.java,BasicBlock bb = bbi.next();,if (bbi != null ) BasicBlock bb = bbi.next();
DuplicateBranches.java,Edge e = iei.next();,if (iei != null ) Edge e = iei.next();
DuplicateBranches.java,int thenStartPos = thenStartHandle.getPosition();,if (thenStartHandle != null ) int thenStartPos = thenStartHandle.getPosition();
DuplicateBranches.java,int elseStartPos = elseStartHandle.getPosition();,if (elseStartHandle != null ) int elseStartPos = elseStartHandle.getPosition();
DuplicateBranches.java,int thenFinishPos = thenFinishIns.getPosition();,if (thenFinishIns != null ) int thenFinishPos = thenFinishIns.getPosition();
DuplicateBranches.java,int elseFinishPos = elseFinishHandle.getPosition();,if (elseFinishHandle != null ) int elseFinishPos = elseFinishHandle.getPosition();
DuplicateBranches.java,InstructionHandle elseLastIns = elseFinishHandle.getPrev();,if (elseFinishHandle != null ) InstructionHandle elseLastIns = elseFinishHandle.getPrev();
DuplicateBranches.java,Edge e = iei.next();,if (iei != null ) Edge e = iei.next();
DuplicateBranches.java,int firstInsPosition = firstIns.getPosition();,if (firstIns != null ) int firstInsPosition = firstIns.getPosition();
DuplicateBranches.java,"InstructionHandle prevIns = firstIns.getPrev(); // prev in bytecode, not flow","if (flow != null ) InstructionHandle prevIns = firstIns.getPrev(); // prev in bytecode, not flow"
DuplicateBranches.java,endPos = last.getPosition(); // don't store the goto,if (goto != null ) endPos = last.getPosition(); // don't store the goto
DuplicateBranches.java,Iterator<BasicBlock> bbi = cfg.blockIterator();,if (cfg != null ) Iterator<BasicBlock> bbi = cfg.blockIterator();
DuplicateBranches.java,BasicBlock bb = bbi.next();,if (bbi != null ) BasicBlock bb = bbi.next();
DuplicateBranches.java,InstructionHandle last = bb.getLastInstruction(); // may be null,if (null != null ) InstructionHandle last = bb.getLastInstruction(); // may be null
DuplicateBranches.java,Edge e = iei.next();,if (iei != null ) Edge e = iei.next();
DuplicateBranches.java,int targetPos = targetFirst.getPosition();,if (targetFirst != null ) int targetPos = targetFirst.getPosition();
DuplicateBranches.java,InstructionHandle last = myBB.getLastInstruction();,if (myBB != null ) InstructionHandle last = myBB.getLastInstruction();
DuplicateBranches.java,byte[] code = m.getCode().getCode();,if (m != null ) byte[] code = m.getCode().getCode();
DuplicateBranches.java,InstructionHandle inst = thenBB.getFirstInstruction();,if (thenBB != null ) InstructionHandle inst = thenBB.getFirstInstruction();
DuplicateBranches.java,Edge e = ie.next();,if (ie != null ) Edge e = ie.next();
EqualsOperandShouldHaveClassCompatibleWithThis.java,AnalysisContext context = AnalysisContext.currentAnalysisContext();,if (AnalysisContext != null ) AnalysisContext context = AnalysisContext.currentAnalysisContext();
EqualsOperandShouldHaveClassCompatibleWithThis.java,Type thisType = Type.getType(thisClassDescriptor.getSignature());,if (Type != null ) Type thisType = Type.getType(thisClassDescriptor.getSignature());
EqualsOperandShouldHaveClassCompatibleWithThis.java,Type cType = Type.getType(c.getSignature());,if (Type != null ) Type cType = Type.getType(c.getSignature());
EqualsOperandShouldHaveClassCompatibleWithThis.java,int priority = check.getPriority();,if (check != null ) int priority = check.getPriority();
FieldItemSummary.java,item = OpcodeStack.Item.nullItem(f.getSignature());,if (OpcodeStack != null ) item = OpcodeStack.Item.nullItem(f.getSignature());
FieldItemSummary.java,item = new OpcodeStack.Item(f.getSignature());,if (OpcodeStack != null ) item = new OpcodeStack.Item(f.getSignature());
FindBadCast2.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
FindBadCast2.java,Method[] methodList = javaClass.getMethods();,if (javaClass != null ) Method[] methodList = javaClass.getMethods();
FindBadCast2.java,ConstantPoolGen cpg = classContext.getConstantPoolGen();,if (classContext != null ) ConstantPoolGen cpg = classContext.getConstantPoolGen();
FindBadCast2.java,String sourceFile = classContext.getJavaClass().getSourceFileName();,if (classContext != null ) String sourceFile = classContext.getJavaClass().getSourceFileName();
FindBadCast2.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
FindBadCast2.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
FindBadCast2.java,int pc = handle.getPosition();,if (handle != null ) int pc = handle.getPosition();
FindBadCast2.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
FindBadCast2.java,int line = lineNumberTable.getSourceLine(handle.getPosition());,if (lineNumberTable != null ) int line = lineNumberTable.getSourceLine(handle.getPosition());
FindBadCast2.java,Type operandType = frame.getTopValue();,if (frame != null ) Type operandType = frame.getTopValue();
FindBadCast2.java,String castSig = castType.getSignature();,if (castType != null ) String castSig = castType.getSignature();
FindBadCast2.java,String refSig = refType.getSignature();,if (refType != null ) String refSig = refType.getSignature();
FindBadForLoop.java,lineNumbers = obj.getLineNumberTable();,if (obj != null ) lineNumbers = obj.getLineNumberTable();
FindBugsSummaryStats.java,linesNCSS += lines.cardinality();,if (lines != null ) linesNCSS += lines.cardinality();
FindBugsSummaryStats.java,this.stats = bugReporter.getProjectStats();,if (bugReporter != null ) this.stats = bugReporter.getProjectStats();
FindCircularDependencies.java,clsName = obj.getClassName();,if (obj != null ) clsName = obj.getClassName();
FindCircularDependencies.java,Iterator<String> dit = dependencies.iterator();,if (dependencies != null ) Iterator<String> dit = dependencies.iterator();
FindCircularDependencies.java,Iterator<String> cIt = loop.iterator();,if (loop != null ) Iterator<String> cIt = loop.iterator();
FindDeadLocalStores.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
FindDeadLocalStores.java,Method[] methodList = javaClass.getMethods();,if (javaClass != null ) Method[] methodList = javaClass.getMethods();
FindDeadLocalStores.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
FindDeadLocalStores.java,int numLocals = method.getCode().getMaxLocals();,if (method != null ) int numLocals = method.getCode().getMaxLocals();
FindDeadLocalStores.java,int localsThatAreParameters = PreorderVisitor.getNumberArguments(method.getSignature());,if (PreorderVisitor != null ) int localsThatAreParameters = PreorderVisitor.getNumberArguments(method.getSignature());
FindDeadLocalStores.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
FindDeadLocalStores.java,int pc = handle.getPosition();,if (handle != null ) int pc = handle.getPosition();
FindDeadLocalStores.java,int local = ins.getIndex();,if (ins != null ) int local = ins.getIndex();
FindDeadLocalStores.java,String sourceFileName = javaClass.getSourceFileName();,if (javaClass != null ) String sourceFileName = javaClass.getSourceFileName();
FindDeadLocalStores.java,String lvName = lvAnnotation.getName();,if (lvAnnotation != null ) String lvName = lvAnnotation.getName();
FindDeadLocalStores.java,typeOfValue = typeFrame.getTopValue();,if (typeFrame != null ) typeOfValue = typeFrame.getTopValue();
FindDeadLocalStores.java,InstructionHandle prevInsHandle = location.getHandle().getPrev();,if (location != null ) InstructionHandle prevInsHandle = location.getHandle().getPrev();
FindDeadLocalStores.java,ConstantPoolGen cpg = methodGen.getConstantPool();,if (methodGen != null ) ConstantPoolGen cpg = methodGen.getConstantPool();
FindDeadLocalStores.java,Instruction cur = location.getHandle().getInstruction();,if (location != null ) Instruction cur = location.getHandle().getInstruction();
FindDeadLocalStores.java,Instruction prevIns = prev.getInstruction();,if (prev != null ) Instruction prevIns = prev.getInstruction();
FindDeadLocalStores.java,String sourceFile = javaClass.getSourceFileName();,if (javaClass != null ) String sourceFile = javaClass.getSourceFileName();
FindDeadLocalStores.java,int local = ins.getIndex();,if (ins != null ) int local = ins.getIndex();
FindDeadLocalStores.java,Instruction ins = location.getHandle().getInstruction();,if (location != null ) Instruction ins = location.getHandle().getInstruction();
FindDeadLocalStores.java,Instruction ins = location.getHandle().getInstruction();,if (location != null ) Instruction ins = location.getHandle().getInstruction();
FindDoubleCheck.java,Field[] f = fieldDefinedIn.getFields();,if (fieldDefinedIn != null ) Field[] f = fieldDefinedIn.getFields();
FindFieldSelfAssignment.java,XField f = top.getXField();,if (top != null ) XField f = top.getXField();
FindFieldSelfAssignment.java,int registerNumber = next.getRegisterNumber();,if (next != null ) int registerNumber = next.getRegisterNumber();
FindFieldSelfAssignment.java,String signature = stack.getLVValue(registerNumber).getSignature();,if (stack != null ) String signature = stack.getLVValue(registerNumber).getSignature();
FindHEmismatch.java,int accessFlags = obj.getAccessFlags();,if (obj != null ) int accessFlags = obj.getAccessFlags();
FindHEmismatch.java,visibleOutsidePackage = obj.isPublic() || obj.isProtected();,if (obj != null ) visibleOutsidePackage = obj.isPublic() || obj.isProtected();
FindHEmismatch.java,inheritedEqualsFromAbstractClass = we.isAbstract();,if (we != null ) inheritedEqualsFromAbstractClass = we.isAbstract();
FindHEmismatch.java,whereEqual = we.getClassDescriptor().getDottedClassName();,if (we != null ) whereEqual = we.getClassDescriptor().getDottedClassName();
FindHEmismatch.java,inheritedEqualsIsFinal = inheritedEquals.isFinal();,if (inheritedEquals != null ) inheritedEqualsIsFinal = inheritedEquals.isFinal();
FindHEmismatch.java,inheritedEqualsIsAbstract = inheritedEquals.isAbstract();,if (inheritedEquals != null ) inheritedEqualsIsAbstract = inheritedEquals.isAbstract();
FindHEmismatch.java,whereHashCode = wh.getClassDescriptor().getDottedClassName();,if (wh != null ) whereHashCode = wh.getClassDescriptor().getDottedClassName();
FindHEmismatch.java,String superclassName = obj.getSuperclassName();,if (obj != null ) String superclassName = obj.getSuperclassName();
FindHEmismatch.java,int accessFlags = obj.getAccessFlags();,if (obj != null ) int accessFlags = obj.getAccessFlags();
FindHEmismatch.java,int accessFlags = obj.getAccessFlags();,if (obj != null ) int accessFlags = obj.getAccessFlags();
FindHEmismatch.java,String name = obj.getName();,if (obj != null ) String name = obj.getName();
FindHEmismatch.java,String sig = obj.getSignature();,if (obj != null ) String sig = obj.getSignature();
FindHEmismatch.java,byte[] codeBytes = code.getCode();,if (code != null ) byte[] codeBytes = code.getCode();
FindHEmismatch.java,Method[] m = clazz.getMethods();,if (clazz != null ) Method[] m = clazz.getMethods();
FindHEmismatch.java,type = item.getJavaClass();,if (item != null ) type = item.getJavaClass();
FindHEmismatch.java,String collectionSignature = collection.getSignature();,if (collection != null ) String collectionSignature = collection.getSignature();
FindHEmismatch.java,String sig = obj.getSignature();,if (obj != null ) String sig = obj.getSignature();
FindInconsistentSync2.java,ClassDescriptor classDescriptor = field.getClassDescriptor();,if (field != null ) ClassDescriptor classDescriptor = field.getClassDescriptor();
FindInconsistentSync2.java,"FieldAccess fa = new FieldAccess(method, handle.getPosition());","if (handle != null ) FieldAccess fa = new FieldAccess(method, handle.getPosition());"
FindInconsistentSync2.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
FindInconsistentSync2.java,CallGraph callGraph = selfCalls.getCallGraph();,if (selfCalls != null ) CallGraph callGraph = selfCalls.getCallGraph();
FindInconsistentSync2.java,InnerClassAccessMap icam = AnalysisContext.currentAnalysisContext().getInnerClassAccessMap();,if (AnalysisContext != null ) InnerClassAccessMap icam = AnalysisContext.currentAnalysisContext().getInnerClassAccessMap();
FindInconsistentSync2.java,ConstantPoolGen cpg = classContext.getConstantPoolGen();,if (classContext != null ) ConstantPoolGen cpg = classContext.getConstantPoolGen();
FindInconsistentSync2.java,InstructionHandle n = location.getHandle().getNext();,if (location != null ) InstructionHandle n = location.getHandle().getNext();
FindInconsistentSync2.java,isWrite = !access.isLoad();,if (!access != null ) isWrite = !access.isLoad();
FindInconsistentSync2.java,String instanceClassName = objType.getClassName();,if (objType != null ) String instanceClassName = objType.getClassName();
FindInconsistentSync2.java,InstructionList il = methodGen.getInstructionList();,if (methodGen != null ) InstructionList il = methodGen.getInstructionList();
FindInconsistentSync2.java,Iterator<InstructionHandle> it = il.iterator();,if (il != null ) Iterator<InstructionHandle> it = il.iterator();
FindInconsistentSync2.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
FindInconsistentSync2.java,Method[] methodList = javaClass.getMethods();,if (javaClass != null ) Method[] methodList = javaClass.getMethods();
FindInconsistentSync2.java,CallGraph callGraph = selfCalls.getCallGraph();,if (selfCalls != null ) CallGraph callGraph = selfCalls.getCallGraph();
FindInconsistentSync2.java,CallSite callSite = edge.getCallSite();,if (edge != null ) CallSite callSite = edge.getCallSite();
FindInconsistentSync2.java,CallGraphNode target = edge.getTarget();,if (edge != null ) CallGraphNode target = edge.getTarget();
FindInconsistentSync2.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
FindInconsistentSync2.java,Method[] methodList = javaClass.getMethods();,if (javaClass != null ) Method[] methodList = javaClass.getMethods();
FindInconsistentSync2.java,CallGraph callGraph = selfCalls.getCallGraph();,if (selfCalls != null ) CallGraph callGraph = selfCalls.getCallGraph();
FindInconsistentSync2.java,CallSite callSite = edge.getCallSite();,if (edge != null ) CallSite callSite = edge.getCallSite();
FindInconsistentSync2.java,CallGraphNode target = edge.getTarget();,if (edge != null ) CallGraphNode target = edge.getTarget();
FindInconsistentSync2.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
FindInconsistentSync2.java,Method[] methodList = javaClass.getMethods();,if (javaClass != null ) Method[] methodList = javaClass.getMethods();
FindInconsistentSync2.java,CallGraph callGraph = selfCalls.getCallGraph();,if (selfCalls != null ) CallGraph callGraph = selfCalls.getCallGraph();
FindInconsistentSync2.java,CallSite callSite = edge.getCallSite();,if (edge != null ) CallSite callSite = edge.getCallSite();
FindInconsistentSync2.java,CallGraphNode target = edge.getTarget();,if (edge != null ) CallGraphNode target = edge.getTarget();
FindInconsistentSync2.java,ConstantPoolGen cpg = classContext.getConstantPoolGen();,if (classContext != null ) ConstantPoolGen cpg = classContext.getConstantPoolGen();
FindInconsistentSync2.java,Method method = callSite.getMethod();,if (callSite != null ) Method method = callSite.getMethod();
FindInconsistentSync2.java,Location location = callSite.getLocation();,if (callSite != null ) Location location = callSite.getLocation();
FindInconsistentSync2.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
FindInconsistentSync2.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
FindInconsistentSync2.java,int lockCount = lockSet.getLockCount(instance.getNumber());,if (lockSet != null ) int lockCount = lockSet.getLockCount(instance.getNumber());
FindJSR166LockMonitorenter.java,JavaClass jclass = classContext.getJavaClass();,if (classContext != null ) JavaClass jclass = classContext.getJavaClass();
FindJSR166LockMonitorenter.java,Method[] methodList = jclass.getMethods();,if (jclass != null ) Method[] methodList = jclass.getMethods();
FindJSR166LockMonitorenter.java,ConstantPoolGen cpg = classContext.getConstantPoolGen();,if (classContext != null ) ConstantPoolGen cpg = classContext.getConstantPoolGen();
FindJSR166LockMonitorenter.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
FindJSR166LockMonitorenter.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
FindJSR166LockMonitorenter.java,ClassDescriptor classDescriptor = DescriptorFactory.createClassDescriptorFromSignature(type.getSignature());,if (DescriptorFactory != null ) ClassDescriptor classDescriptor = DescriptorFactory.createClassDescriptorFromSignature(type.getSignature());
FindJSR166LockMonitorenter.java,String sig = type.getSignature();,if (type != null ) String sig = type.getSignature();
FindMaskedFields.java,JavaClass obj = classContext.getJavaClass();,if (classContext != null ) JavaClass obj = classContext.getJavaClass();
FindMaskedFields.java,Field[] fields = obj.getFields();,if (obj != null ) Field[] fields = obj.getFields();
FindMaskedFields.java,fieldName = field.getName();,if (field != null ) fieldName = field.getName();
FindMaskedFields.java,fieldName = fld.getName();,if (fld != null ) fieldName = fld.getName();
FindMaskedFields.java,FieldAnnotation maskedFieldAnnotation = FieldAnnotation.fromFieldDescriptor(fld.getFieldDescriptor());,if (FieldAnnotation != null ) FieldAnnotation maskedFieldAnnotation = FieldAnnotation.fromFieldDescriptor(fld.getFieldDescriptor());
FindMaskedFields.java,LocalVariable[] vars = obj.getLocalVariableTable();,if (obj != null ) LocalVariable[] vars = obj.getLocalVariableTable();
FindMaskedFields.java,String varName = var.getName();,if (var != null ) String varName = var.getName();
FindMaskedFields.java,UnreadFields unreadFields = AnalysisContext.currentAnalysisContext().getUnreadFields();,if (AnalysisContext != null ) UnreadFields unreadFields = AnalysisContext.currentAnalysisContext().getUnreadFields();
FindMismatchedWaitOrNotify.java,JavaClass jclass = classContext.getJavaClass();,if (classContext != null ) JavaClass jclass = classContext.getJavaClass();
FindMismatchedWaitOrNotify.java,Method[] methodList = jclass.getMethods();,if (jclass != null ) Method[] methodList = jclass.getMethods();
FindMismatchedWaitOrNotify.java,ConstantPoolGen cpg = methodGen.getConstantPool();,if (methodGen != null ) ConstantPoolGen cpg = methodGen.getConstantPool();
FindMismatchedWaitOrNotify.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
FindMismatchedWaitOrNotify.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
FindMismatchedWaitOrNotify.java,int lockCount = lockSet.getLockCount(ref.getNumber());,if (lockSet != null ) int lockCount = lockSet.getLockCount(ref.getNumber());
FindNakedNotify.java,int flags = obj.getAccessFlags();,if (obj != null ) int flags = obj.getAccessFlags();
FindNonSerializableStoreIntoSession.java,Method[] methodList = classContext.getJavaClass().getMethods();,if (classContext != null ) Method[] methodList = classContext.getJavaClass().getMethods();
FindNonSerializableStoreIntoSession.java,ConstantPoolGen cpg = classContext.getConstantPoolGen();,if (classContext != null ) ConstantPoolGen cpg = classContext.getConstantPoolGen();
FindNonSerializableStoreIntoSession.java,String sourceFile = classContext.getJavaClass().getSourceFileName();,if (classContext != null ) String sourceFile = classContext.getJavaClass().getSourceFileName();
FindNonSerializableStoreIntoSession.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
FindNonSerializableStoreIntoSession.java,Type operandType = frame.getTopValue();,if (frame != null ) Type operandType = frame.getTopValue();
FindNonSerializableStoreIntoSession.java,String refSig = refType.getSignature();,if (refType != null ) String refSig = refType.getSignature();
FindNonSerializableValuePassedToWriteObject.java,Method[] methodList = classContext.getJavaClass().getMethods();,if (classContext != null ) Method[] methodList = classContext.getJavaClass().getMethods();
FindNonSerializableValuePassedToWriteObject.java,ConstantPoolGen cpg = classContext.getConstantPoolGen();,if (classContext != null ) ConstantPoolGen cpg = classContext.getConstantPoolGen();
FindNonSerializableValuePassedToWriteObject.java,String sourceFile = classContext.getJavaClass().getSourceFileName();,if (classContext != null ) String sourceFile = classContext.getJavaClass().getSourceFileName();
FindNonSerializableValuePassedToWriteObject.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
FindNonSerializableValuePassedToWriteObject.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
FindNonSerializableValuePassedToWriteObject.java,Type operandType = frame.getTopValue();,if (frame != null ) Type operandType = frame.getTopValue();
FindNullDeref.java,JavaClass jclass = classContext.getJavaClass();,if (classContext != null ) JavaClass jclass = classContext.getJavaClass();
FindNullDeref.java,String className = jclass.getClassName();,if (jclass != null ) String className = jclass.getClassName();
FindNullDeref.java,List<Method> methodsInCallOrder = classContext.getMethodsInCallOrder();,if (classContext != null ) List<Method> methodsInCallOrder = classContext.getMethodsInCallOrder();
FindNullDeref.java,AnalysisContext analysisContext = AnalysisContext.currentAnalysisContext();,if (AnalysisContext != null ) AnalysisContext analysisContext = AnalysisContext.currentAnalysisContext();
FindNullDeref.java,unconditionalDerefParamDatabase = analysisContext.getUnconditionalDerefParamDatabase();,if (analysisContext != null ) unconditionalDerefParamDatabase = analysisContext.getUnconditionalDerefParamDatabase();
FindNullDeref.java,Profiler profiler = Global.getAnalysisCache().getProfiler();,if (Global != null ) Profiler profiler = Global.getAnalysisCache().getProfiler();
FindNullDeref.java,ConstantPoolGen cpg = classContext.getConstantPoolGen();,if (classContext != null ) ConstantPoolGen cpg = classContext.getConstantPoolGen();
FindNullDeref.java,Instruction ins = location.getHandle().getInstruction();,if (location != null ) Instruction ins = location.getHandle().getInstruction();
FindNullDeref.java,IsNullValue tos = frame.getTopValue();,if (frame != null ) IsNullValue tos = frame.getTopValue();
FindNullDeref.java,ValueNumber valueNumber = vnaFrame.getTopValue();,if (vnaFrame != null ) ValueNumber valueNumber = vnaFrame.getTopValue();
FindNullDeref.java,IsNullValue tos = frame.getTopValue();,if (frame != null ) IsNullValue tos = frame.getTopValue();
FindNullDeref.java,String methodName = method.getName();,if (method != null ) String methodName = method.getName();
FindNullDeref.java,Instruction ins = loc.getHandle().getInstruction();,if (loc != null ) Instruction ins = loc.getHandle().getInstruction();
FindNullDeref.java,int position = location.getHandle().getPosition();,if (location != null ) int position = location.getHandle().getPosition();
FindNullDeref.java,ConstantPool constantPool = classContext.getJavaClass().getConstantPool();,if (classContext != null ) ConstantPool constantPool = classContext.getJavaClass().getConstantPool();
FindNullDeref.java,Code code = method.getCode();,if (method != null ) Code code = method.getCode();
FindNullDeref.java,int position = location.getHandle().getPosition();,if (location != null ) int position = location.getHandle().getPosition();
FindNullDeref.java,ConstantPool constantPool = classContext.getJavaClass().getConstantPool();,if (classContext != null ) ConstantPool constantPool = classContext.getJavaClass().getConstantPool();
FindNullDeref.java,Code code = method.getCode();,if (method != null ) Code code = method.getCode();
FindNullDeref.java,nullArgSet = (BitSet) nullArgSet.clone();,if (nullArgSet != null ) nullArgSet = (BitSet) nullArgSet.clone();
FindNullDeref.java,definitelyNullArgSet = (BitSet) definitelyNullArgSet.clone();,if (definitelyNullArgSet != null ) definitelyNullArgSet = (BitSet) definitelyNullArgSet.clone();
FindNullDeref.java,ParameterProperty property = unconditionalDerefParamDatabase.getProperty(targetMethod.toMethodDescriptor());,if (unconditionalDerefParamDatabase != null ) ParameterProperty property = unconditionalDerefParamDatabase.getProperty(targetMethod.toMethodDescriptor());
FindNullDeref.java,INullnessAnnotationDatabase db = AnalysisContext.currentAnalysisContext().getNullnessAnnotationDatabase();,if (AnalysisContext != null ) INullnessAnnotationDatabase db = AnalysisContext.currentAnalysisContext().getNullnessAnnotationDatabase();
FindNullDeref.java,boolean onExceptionPath = refValue.isException();,if (refValue != null ) boolean onExceptionPath = refValue.isException();
FindNullDeref.java,int pc = location.getHandle().getPosition();,if (location != null ) int pc = location.getHandle().getPosition();
FindNullDeref.java,Instruction ins = location.getHandle().getInstruction();,if (location != null ) Instruction ins = location.getHandle().getInstruction();
FindNullDeref.java,InstructionHandle ins = target.getFirstInstruction();,if (target != null ) InstructionHandle ins = target.getFirstInstruction();
FindNullDeref.java,Instruction i = ins.getInstruction();,if (ins != null ) Instruction i = ins.getInstruction();
FindNullDeref.java,ins = ins.getNext();,if (ins != null ) ins = ins.getNext();
FindNullDeref.java,boolean isChecked = redundantBranch.firstValue.isChecked();,if (redundantBranch != null ) boolean isChecked = redundantBranch.firstValue.isChecked();
FindNullDeref.java,boolean wouldHaveBeenAKaboom = redundantBranch.firstValue.wouldHaveBeenAKaboom();,if (redundantBranch != null ) boolean wouldHaveBeenAKaboom = redundantBranch.firstValue.wouldHaveBeenAKaboom();
FindNullDeref.java,Location locationOfKaBoom = redundantBranch.firstValue.getLocationOfKaBoom();,if (redundantBranch != null ) Location locationOfKaBoom = redundantBranch.firstValue.getLocationOfKaBoom();
FindNullDeref.java,BasicBlock target = infeasibleEdge.getTarget();,if (infeasibleEdge != null ) BasicBlock target = infeasibleEdge.getTarget();
FindNullDeref.java,createdDeadCode = invFrame.isTop();,if (invFrame != null ) createdDeadCode = invFrame.isTop();
FindNullDeref.java,locationOfKaBoom = redundantBranch.secondValue.getLocationOfKaBoom();,if (redundantBranch != null ) locationOfKaBoom = redundantBranch.secondValue.getLocationOfKaBoom();
FindNullDeref.java,Instruction ins = location.getHandle().getInstruction();,if (location != null ) Instruction ins = location.getHandle().getInstruction();
FindNullDeref.java,"ValueNumber valueNumber = vnaFrame.getInstance(ins, classContext.getConstantPoolGen());","if (classContext != null ) ValueNumber valueNumber = vnaFrame.getInstance(ins, classContext.getConstantPoolGen());"
FindNullDeref.java,Instruction ins = location.getHandle().getInstruction();,if (location != null ) Instruction ins = location.getHandle().getInstruction();
FindNullDeref.java,"ValueNumber valueNumber = vnaFrame.getInstance(ins, classContext.getConstantPoolGen());","if (classContext != null ) ValueNumber valueNumber = vnaFrame.getInstance(ins, classContext.getConstantPoolGen());"
FindNullDeref.java,result = l.getHandle().getPosition();,if (l != null ) result = l.getHandle().getPosition();
FindNullDeref.java,result = l.getHandle().getPosition();,if (l != null ) result = l.getHandle().getPosition();
FindNullDeref.java,int startLine = sourceLineAnnotation.getStartLine();,if (sourceLineAnnotation != null ) int startLine = sourceLineAnnotation.getStartLine();
FindNullDeref.java,Location loc = derefLocationSet.iterator().next();,if (derefLocationSet != null ) Location loc = derefLocationSet.iterator().next();
FindNullDeref.java,Location doomed = doomedLocations.iterator().next();,if (doomedLocations != null ) Location doomed = doomedLocations.iterator().next();
FindNullDeref.java,InstructionHandle handle = doomed.getHandle();,if (doomed != null ) InstructionHandle handle = doomed.getHandle();
FindNullDeref.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
FindNullDeref.java,ConstantPoolGen cpg = classContext.getConstantPoolGen();,if (classContext != null ) ConstantPoolGen cpg = classContext.getConstantPoolGen();
FindNullDeref.java,int pos = handle.getPosition();,if (handle != null ) int pos = handle.getPosition();
FindNullDeref.java,String methodName = method.getName();,if (method != null ) String methodName = method.getName();
FindNullDeref.java,storedField = FieldAnnotation.fromXField(pu.getNonNullField());,if (FieldAnnotation != null ) storedField = FieldAnnotation.fromXField(pu.getNonNullField());
FindNullDeref.java,XMethodParameter mp = pu.getNonNullParameter();,if (pu != null ) XMethodParameter mp = pu.getNonNullParameter();
FindNullDeref.java,invokedXMethod = mp.getMethod();,if (mp != null ) invokedXMethod = mp.getMethod();
FindNullDeref.java,invokedMethod = MethodAnnotation.fromXMethod(mp.getMethod());,if (MethodAnnotation != null ) invokedMethod = MethodAnnotation.fromXMethod(mp.getMethod());
FindNullDeref.java,parameterNumber = mp.getParameterNumber();,if (mp != null ) parameterNumber = mp.getParameterNumber();
FindNullDeref.java,int pos = loc.getHandle().getPosition();,if (loc != null ) int pos = loc.getHandle().getPosition();
FindNullDeref.java,Location assignedNull = assignedNullLocationSet.iterator().next();,if (assignedNullLocationSet != null ) Location assignedNull = assignedNullLocationSet.iterator().next();
FindNullDeref.java,int startLine = sourceLineAnnotation.getStartLine();,if (sourceLineAnnotation != null ) int startLine = sourceLineAnnotation.getStartLine();
FindNullDeref.java,CodeException[] exceptionTable = method.getCode().getExceptionTable();,if (method != null ) CodeException[] exceptionTable = method.getCode().getExceptionTable();
FindNullDeref.java,LineNumberTable table = method.getLineNumberTable();,if (method != null ) LineNumberTable table = method.getLineNumberTable();
FindNullDeref.java,int pc = loc.getHandle().getPosition();,if (loc != null ) int pc = loc.getHandle().getPosition();
FindNullDeref.java,int pc = loc.getHandle().getPosition();,if (loc != null ) int pc = loc.getHandle().getPosition();
FindNullDerefsInvolvingNonShortCircuitEvaluation.java,"Location produced = findLocation(cfg, item.getPC());","if (item != null ) Location produced = findLocation(cfg, item.getPC());"
FindNullDerefsInvolvingNonShortCircuitEvaluation.java,ValueNumber value = valueNumberFact.getTopValue();,if (valueNumberFact != null ) ValueNumber value = valueNumberFact.getTopValue();
FindOpenStream.java,JavaClass jclass = classContext.getJavaClass();,if (classContext != null ) JavaClass jclass = classContext.getJavaClass();
FindOpenStream.java,int classIndex = cmr.getClassIndex();,if (cmr != null ) int classIndex = cmr.getClassIndex();
FindOpenStream.java,int classIndex = cmr.getClassIndex();,if (cmr != null ) int classIndex = cmr.getClassIndex();
FindOpenStream.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
FindOpenStream.java,Type[] parameterTypeList = Type.getArgumentTypes(methodGen.getSignature());,if (Type != null ) Type[] parameterTypeList = Type.getArgumentTypes(methodGen.getSignature());
FindOpenStream.java,Location openLocation = stream.getOpenLocation();,if (stream != null ) Location openLocation = stream.getOpenLocation();
FindOpenStream.java,String sourceFile = javaClass.getSourceFileName();,if (javaClass != null ) String sourceFile = javaClass.getSourceFileName();
FindOpenStream.java,String leakClass = stream.getStreamBase();,if (stream != null ) String leakClass = stream.getStreamBase();
FindOpenStream.java,ResourceValueFrame exitFrame = dataflow.getResultFact(cfg.getExit());,if (dataflow != null ) ResourceValueFrame exitFrame = dataflow.getResultFact(cfg.getExit());
FindOpenStream.java,int exitStatus = exitFrame.getStatus();,if (exitFrame != null ) int exitStatus = exitFrame.getStatus();
FindOpenStream.java,String bugType = stream.getBugType();,if (stream != null ) String bugType = stream.getBugType();
FindPuzzlers.java,"where = SourceLineAnnotation.fromVisitedInstruction(this, index.getPC());","if (index != null ) where = SourceLineAnnotation.fromVisitedInstruction(this, index.getPC());"
FindPuzzlers.java,Object o = item.getConstant();,if (item != null ) Object o = item.getConstant();
FindPuzzlers.java,Object o = item.getConstant();,if (item != null ) Object o = item.getConstant();
FindPuzzlers.java,String signature = item.getSignature();,if (item != null ) String signature = item.getSignature();
FindPuzzlers.java,XField field = item.getXField();,if (item != null ) XField field = item.getXField();
FindPuzzlers.java,XMethod m = item.getReturnValueOf();,if (item != null ) XMethod m = item.getReturnValueOf();
FindPuzzlers.java,String classNameForPreviousMethod = previousMethodInvocation.getClassName();,if (previousMethodInvocation != null ) String classNameForPreviousMethod = previousMethodInvocation.getClassName();
FindPuzzlers.java,Object constant = rhs.getConstant();,if (rhs != null ) Object constant = rhs.getConstant();
FindRefComparison.java,FieldSummary fieldSummary = AnalysisContext.currentAnalysisContext().getFieldSummary();,if (AnalysisContext != null ) FieldSummary fieldSummary = AnalysisContext.currentAnalysisContext().getFieldSummary();
FindRefComparison.java,String slashedClassName = ClassName.fromFieldSignature(type.getSignature());,if (ClassName != null ) String slashedClassName = ClassName.fromFieldSignature(type.getSignature());
FindRefComparison.java,FieldSummary fieldSummary = AnalysisContext.currentAnalysisContext().getFieldSummary();,if (AnalysisContext != null ) FieldSummary fieldSummary = AnalysisContext.currentAnalysisContext().getFieldSummary();
FindRefComparison.java,String slashedClassName = ClassName.fromFieldSignature(type.getSignature());,if (ClassName != null ) String slashedClassName = ClassName.fromFieldSignature(type.getSignature());
FindRefComparison.java,byte aType = aRef.getType();,if (aRef != null ) byte aType = aRef.getType();
FindRefComparison.java,JavaClass jclass = classContext.getJavaClass();,if (classContext != null ) JavaClass jclass = classContext.getJavaClass();
FindRefComparison.java,Method[] methodList = jclass.getMethods();,if (jclass != null ) Method[] methodList = jclass.getMethods();
FindRefComparison.java,JavaClass jclass = classContext.getJavaClass();,if (classContext != null ) JavaClass jclass = classContext.getJavaClass();
FindRefComparison.java,ConstantPoolGen cpg = classContext.getConstantPoolGen();,if (classContext != null ) ConstantPoolGen cpg = classContext.getConstantPoolGen();
FindRefComparison.java,Profiler profiler = Global.getAnalysisCache().getProfiler();,if (Global != null ) Profiler profiler = Global.getAnalysisCache().getProfiler();
FindRefComparison.java,boolean relaxed = FindBugsAnalysisFeatures.isRelaxedMode();,if (FindBugsAnalysisFeatures != null ) boolean relaxed = FindBugsAnalysisFeatures.isRelaxedMode();
FindRefComparison.java,short opcode = ins.getOpcode();,if (ins != null ) short opcode = ins.getOpcode();
FindRefComparison.java,int priority = warn.instance.getPriority();,if (warn != null ) int priority = warn.instance.getPriority();
FindRefComparison.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
FindRefComparison.java,int numSlots = frame.getNumSlots();,if (frame != null ) int numSlots = frame.getNumSlots();
FindRefComparison.java,String sourceFile = jclass.getSourceFileName();,if (jclass != null ) String sourceFile = jclass.getSourceFileName();
FindRefComparison.java,String rhs = SignatureConverter.convert(rhsType.getSignature());,if (SignatureConverter != null ) String rhs = SignatureConverter.convert(rhsType.getSignature());
FindRefComparison.java,String sourceFile = jclass.getSourceFileName();,if (jclass != null ) String sourceFile = jclass.getSourceFileName();
FindRefComparison.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
FindRefComparison.java,InstructionHandle next = handle.getNext();,if (handle != null ) InstructionHandle next = handle.getNext();
FindRefComparison.java,String sourceFile = jclass.getSourceFileName();,if (jclass != null ) String sourceFile = jclass.getSourceFileName();
FindRefComparison.java,int numSlots = frame.getNumSlots();,if (frame != null ) int numSlots = frame.getNumSlots();
FindRefComparison.java,ClassSummary classSummary = AnalysisContext.currentAnalysisContext().getClassSummary();,if (AnalysisContext != null ) ClassSummary classSummary = AnalysisContext.currentAnalysisContext().getClassSummary();
FindReturnRef.java,publicClass = obj.isPublic();,if (obj != null ) publicClass = obj.isPublic();
FindSelfComparison.java,LineNumberTable table = getCode().getLineNumberTable();,if (getCode() != null ) LineNumberTable table = getCode().getLineNumberTable();
FindSelfComparison2.java,Method[] methodList = classContext.getJavaClass().getMethods();,if (classContext != null ) Method[] methodList = classContext.getJavaClass().getMethods();
FindSelfComparison2.java,ConstantPoolGen cpg = classContext.getConstantPoolGen();,if (classContext != null ) ConstantPoolGen cpg = classContext.getConstantPoolGen();
FindSelfComparison2.java,Instruction ins = location.getHandle().getInstruction();,if (location != null ) Instruction ins = location.getHandle().getInstruction();
FindSelfComparison2.java,Instruction ins = location.getHandle().getInstruction();,if (location != null ) Instruction ins = location.getHandle().getInstruction();
FindSelfComparison2.java,int opcode = ins.getOpcode();,if (ins != null ) int opcode = ins.getOpcode();
FindSelfComparison2.java,int line = sourceLine.getStartLine();,if (sourceLine != null ) int line = sourceLine.getStartLine();
FindSleepWithLockHeld.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
FindSleepWithLockHeld.java,Method[] methodList = javaClass.getMethods();,if (javaClass != null ) Method[] methodList = javaClass.getMethods();
FindSleepWithLockHeld.java,Instruction ins = location.getHandle().getInstruction();,if (location != null ) Instruction ins = location.getHandle().getInstruction();
FindSqlInjection.java,"sawOpenQuote = Math.min(sawOpenQuote, handle.getPosition());","if (handle != null ) sawOpenQuote = Math.min(sawOpenQuote, handle.getPosition());"
FindSqlInjection.java,"sawCloseQuote = Math.min(sawCloseQuote, handle.getPosition());","if (handle != null ) sawCloseQuote = Math.min(sawCloseQuote, handle.getPosition());"
FindSqlInjection.java,"sawComma = Math.min(sawComma, handle.getPosition());","if (handle != null ) sawComma = Math.min(sawComma, handle.getPosition());"
FindSqlInjection.java,"sawAppend = Math.min(sawAppend, handle.getPosition());","if (handle != null ) sawAppend = Math.min(sawAppend, handle.getPosition());"
FindSqlInjection.java,"sawUnsafeAppend = Math.min(sawUnsafeAppend, handle.getPosition());","if (handle != null ) sawUnsafeAppend = Math.min(sawUnsafeAppend, handle.getPosition());"
FindSqlInjection.java,"sawSeriousTaint = Math.min(sawSeriousTaint, handle.getPosition());","if (handle != null ) sawSeriousTaint = Math.min(sawSeriousTaint, handle.getPosition());"
FindSqlInjection.java,"sawTaint = Math.min(sawTaint, handle.getPosition());","if (handle != null ) sawTaint = Math.min(sawTaint, handle.getPosition());"
FindSqlInjection.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
FindSqlInjection.java,Method[] methodList = javaClass.getMethods();,if (javaClass != null ) Method[] methodList = javaClass.getMethods();
FindSqlInjection.java,Instruction ins = location.getHandle().getInstruction();,if (location != null ) Instruction ins = location.getHandle().getInstruction();
FindSqlInjection.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
FindSqlInjection.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
FindSqlInjection.java,String sig = method.getSignature();,if (method != null ) String sig = method.getSignature();
FindSqlInjection.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
FindSqlInjection.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
FindSqlInjection.java,Instruction prevIns = location.getHandle().getInstruction();,if (location != null ) Instruction prevIns = location.getHandle().getInstruction();
FindSqlInjection.java,Instruction prevIns = handle.getInstruction();,if (handle != null ) Instruction prevIns = handle.getInstruction();
FindSqlInjection.java,BasicBlock block = loc.getBasicBlock();,if (loc != null ) BasicBlock block = loc.getBasicBlock();
FindSqlInjection.java,ConstantPoolGen cpg = methodGen.getConstantPool();,if (methodGen != null ) ConstantPoolGen cpg = methodGen.getConstantPool();
FindSqlInjection.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
FindSqlInjection.java,ConstantPoolGen cpg = methodGen.getConstantPool();,if (methodGen != null ) ConstantPoolGen cpg = methodGen.getConstantPool();
FindTwoLockWait.java,javaClass = classContext.getJavaClass();,if (classContext != null ) javaClass = classContext.getJavaClass();
FindTwoLockWait.java,Method[] methodList = javaClass.getMethods();,if (javaClass != null ) Method[] methodList = javaClass.getMethods();
FindTwoLockWait.java,ConstantPoolGen cpg = mg.getConstantPool();,if (mg != null ) ConstantPoolGen cpg = mg.getConstantPool();
FindTwoLockWait.java,InstructionHandle handle = mg.getInstructionList().getStart();,if (mg != null ) InstructionHandle handle = mg.getInstructionList().getStart();
FindTwoLockWait.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
FindTwoLockWait.java,handle = handle.getNext();,if (handle != null ) handle = handle.getNext();
FindTwoLockWait.java,ConstantPoolGen cpg = methodGen.getConstantPool();,if (methodGen != null ) ConstantPoolGen cpg = methodGen.getConstantPool();
FindTwoLockWait.java,int count = dataflow.getFactAtLocation(location).getNumLockedObjects();,if (dataflow != null ) int count = dataflow.getFactAtLocation(location).getNumLockedObjects();
FindTwoLockWait.java,String sourceFile = javaClass.getSourceFileName();,if (javaClass != null ) String sourceFile = javaClass.getSourceFileName();
FindTwoLockWait.java,String sourceFile = javaClass.getSourceFileName();,if (javaClass != null ) String sourceFile = javaClass.getSourceFileName();
FindUncalledPrivateMethods.java,className = classContext.getJavaClass().getClassName();,if (classContext != null ) className = classContext.getJavaClass().getClassName();
FindUninitializedGet.java,Iterator<BugInstance> i = pendingBugs.iterator();,if (pendingBugs != null ) Iterator<BugInstance> i = pendingBugs.iterator();
FindUninitializedGet.java,UnreadFields unreadFields = AnalysisContext.currentAnalysisContext().getUnreadFields();,if (AnalysisContext != null ) UnreadFields unreadFields = AnalysisContext.currentAnalysisContext().getUnreadFields();
FindUninitializedGet.java,FieldSummary fieldSummary = AnalysisContext.currentAnalysisContext().getFieldSummary();,if (AnalysisContext != null ) FieldSummary fieldSummary = AnalysisContext.currentAnalysisContext().getFieldSummary();
FindUnrelatedTypesInGenericContainer.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
FindUnrelatedTypesInGenericContainer.java,Method[] methodList = javaClass.getMethods();,if (javaClass != null ) Method[] methodList = javaClass.getMethods();
FindUnrelatedTypesInGenericContainer.java,String sig = xclass.getSourceSignature();,if (xclass != null ) String sig = xclass.getSourceSignature();
FindUnrelatedTypesInGenericContainer.java,ConstantPoolGen cpg = classContext.getConstantPoolGen();,if (classContext != null ) ConstantPoolGen cpg = classContext.getConstantPoolGen();
FindUnrelatedTypesInGenericContainer.java,"String fullMethodName = methodGen.getClassName() + ""."" + methodGen.getName();","if (methodGen != null ) String fullMethodName = methodGen.getClassName() + ""."" + methodGen.getName();"
FindUnrelatedTypesInGenericContainer.java,String sourceFile = classContext.getJavaClass().getSourceFileName();,if (classContext != null ) String sourceFile = classContext.getJavaClass().getSourceFileName();
FindUnrelatedTypesInGenericContainer.java,Location location = iter.next();,if (iter != null ) Location location = iter.next();
FindUnrelatedTypesInGenericContainer.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
FindUnrelatedTypesInGenericContainer.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
FindUnrelatedTypesInGenericContainer.java,String invokedMethodName = invokedMethod.getName();,if (invokedMethod != null ) String invokedMethodName = invokedMethod.getName();
FindUnrelatedTypesInGenericContainer.java,String argSignature = invokedMethod.getSignature();,if (invokedMethod != null ) String argSignature = invokedMethod.getSignature();
FindUnrelatedTypesInGenericContainer.java,InstructionHandle next = handle.getNext();,if (handle != null ) InstructionHandle next = handle.getNext();
FindUnrelatedTypesInGenericContainer.java,Instruction nextIns = next.getInstruction();,if (next != null ) Instruction nextIns = next.getInstruction();
FindUnrelatedTypesInGenericContainer.java,InstructionHandle next = handle.getNext();,if (handle != null ) InstructionHandle next = handle.getNext();
FindUnrelatedTypesInGenericContainer.java,Instruction nextIns = next.getInstruction();,if (next != null ) Instruction nextIns = next.getInstruction();
FindUnrelatedTypesInGenericContainer.java,InstructionHandle next = handle.getNext();,if (handle != null ) InstructionHandle next = handle.getNext();
FindUnrelatedTypesInGenericContainer.java,Instruction nextIns = next.getInstruction();,if (next != null ) Instruction nextIns = next.getInstruction();
FindUnrelatedTypesInGenericContainer.java,ValueNumber top = vnAfter.getTopValue();,if (vnAfter != null ) ValueNumber top = vnAfter.getTopValue();
FindUnrelatedTypesInGenericContainer.java,int priority = matchResult.getPriority();,if (matchResult != null ) int priority = matchResult.getPriority();
FindUnrelatedTypesInGenericContainer.java,ClassSummary classSummary = AnalysisContext.currentAnalysisContext().getClassSummary();,if (AnalysisContext != null ) ClassSummary classSummary = AnalysisContext.currentAnalysisContext().getClassSummary();
FindUnrelatedTypesInGenericContainer.java,String selfSignature = methodGen.getSignature();,if (methodGen != null ) String selfSignature = methodGen.getSignature();
FindUnrelatedTypesInGenericContainer.java,Instruction prevIns = handle.getPrev().getInstruction();,if (handle != null ) Instruction prevIns = handle.getPrev().getInstruction();
FindUnrelatedTypesInGenericContainer.java,int p = parmGeneric.getNumParameters();,if (parmGeneric != null ) int p = parmGeneric.getNumParameters();
FindUnreleasedLock.java,final Instruction ins = handle.getInstruction();,if (handle != null ) final Instruction ins = handle.getInstruction();
FindUnreleasedLock.java,Location creationPoint = lock.getLocation();,if (lock != null ) Location creationPoint = lock.getLocation();
FindUnreleasedLock.java,final int updatedNumSlots = frame.getNumSlots();,if (frame != null ) final int updatedNumSlots = frame.getNumSlots();
FindUnreleasedLock.java,InvokeInstruction inv = toInvokeInstruction(handle.getInstruction());,if (toInvokeInstruction(handle != null ) InvokeInstruction inv = toInvokeInstruction(handle.getInstruction());
FindUnreleasedLock.java,ValueNumber lockValue = frame.getTopValue();,if (frame != null ) ValueNumber lockValue = frame.getTopValue();
FindUnreleasedLock.java,InvokeInstruction inv = toInvokeInstruction(handle.getInstruction());,if (toInvokeInstruction(handle != null ) InvokeInstruction inv = toInvokeInstruction(handle.getInstruction());
FindUnreleasedLock.java,ResourceValue topValue = frame.getTopValue();,if (frame != null ) ResourceValue topValue = frame.getTopValue();
FindUnreleasedLock.java,Instruction ins = location.getHandle().getInstruction();,if (location != null ) Instruction ins = location.getHandle().getInstruction();
FindUnreleasedLock.java,boolean notNull = receiver.isDefinitelyNotNull();,if (receiver != null ) boolean notNull = receiver.isDefinitelyNotNull();
FindUnreleasedLock.java,short opcode = ins.getOpcode();,if (ins != null ) short opcode = ins.getOpcode();
FindUnreleasedLock.java,JavaClass jclass = classContext.getJavaClass();,if (classContext != null ) JavaClass jclass = classContext.getJavaClass();
FindUnreleasedLock.java,String nameAsString = name.getBytes();,if (name != null ) String nameAsString = name.getBytes();
FindUnreleasedLock.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
FindUnreleasedLock.java,ResourceValueFrame exitFrame = dataflow.getResultFact(cfg.getExit());,if (dataflow != null ) ResourceValueFrame exitFrame = dataflow.getResultFact(cfg.getExit());
FindUnreleasedLock.java,int exitStatus = exitFrame.getStatus();,if (exitFrame != null ) int exitStatus = exitFrame.getStatus();
FindUnreleasedLock.java,String sourceFile = javaClass.getSourceFileName();,if (javaClass != null ) String sourceFile = javaClass.getSourceFileName();
FindUnreleasedLock.java,Location location = resource.getLocation();,if (resource != null ) Location location = resource.getLocation();
FindUnreleasedLock.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
FindUnsatisfiedObligation.java,IAnalysisCache analysisCache = Global.getAnalysisCache();,if (Global != null ) IAnalysisCache analysisCache = Global.getAnalysisCache();
FindUnsatisfiedObligation.java,IAnalysisCache analysisCache = Global.getAnalysisCache();,if (Global != null ) IAnalysisCache analysisCache = Global.getAnalysisCache();
FindUnsatisfiedObligation.java,ObligationFactory factory = database.getFactory();,if (database != null ) ObligationFactory factory = database.getFactory();
FindUnsatisfiedObligation.java,String signature = cnt.getSignature(jclass.getConstantPool());,if (cnt != null ) String signature = cnt.getSignature(jclass.getConstantPool());
FindUnsatisfiedObligation.java,analysisCache = Global.getAnalysisCache();,if (Global != null ) analysisCache = Global.getAnalysisCache();
FindUnsatisfiedObligation.java,StateSet factAtExit = dataflow.getResultFact(cfg.getExit());,if (dataflow != null ) StateSet factAtExit = dataflow.getResultFact(cfg.getExit());
FindUnsatisfiedObligation.java,Obligation obligation = entry.getKey();,if (entry != null ) Obligation obligation = entry.getKey();
FindUnsatisfiedObligation.java,State state = entry.getValue();,if (entry != null ) State state = entry.getValue();
FindUnsatisfiedObligation.java,Path path = state.getPath();,if (state != null ) Path path = state.getPath();
FindUnsatisfiedObligation.java,String className = obligation.getClassName();,if (obligation != null ) String className = obligation.getClassName();
FindUnsatisfiedObligation.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
FindUnsatisfiedObligation.java,List<State> prefixes = stateSet.getPrefixStates(state.getPath());,if (stateSet != null ) List<State> prefixes = stateSet.getPrefixStates(state.getPath());
FindUnsatisfiedObligation.java,Path path = state.getPath();,if (state != null ) Path path = state.getPath();
FindUnsatisfiedObligation.java,Path path = state.getPath();,if (state != null ) Path path = state.getPath();
FindUnsatisfiedObligation.java,Iterator<State> i = entryFact.stateIterator();,if (entryFact != null ) Iterator<State> i = entryFact.stateIterator();
FindUnsyncGet.java,Set<String> commonProperties = new HashSet<String>(getMethods.keySet());,if (HashSet<String>(getMethods != null ) Set<String> commonProperties = new HashSet<String>(getMethods.keySet());
FindUnsyncGet.java,int flags = obj.getAccessFlags();,if (obj != null ) int flags = obj.getAccessFlags();
FindUnsyncGet.java,String name = obj.getName();,if (obj != null ) String name = obj.getName();
FindUselessControlFlow.java,LineNumberTable lineNumbers = getCode().getLineNumberTable();,if (getCode() != null ) LineNumberTable lineNumbers = getCode().getLineNumberTable();
FormatStringChecker.java,stackDepth = stack.getStackDepth();,if (stack != null ) stackDepth = stack.getStackDepth();
HugeSharedStringConstants.java,XField field = definition.get(e.getKey());,if (definition != null ) XField field = definition.get(e.getKey());
HugeSharedStringConstants.java,Integer length = stringSize.get(e.getKey());,if (stringSize != null ) Integer length = stringSize.get(e.getKey());
IOStreamFactory.java,Instruction ins = location.getHandle().getInstruction();,if (location != null ) Instruction ins = location.getHandle().getInstruction();
InconsistentAnnotations.java,JavaClass jclass = classContext.getJavaClass();,if (classContext != null ) JavaClass jclass = classContext.getJavaClass();
InefficientMemberAccess.java,JavaClass cls = classContext.getJavaClass();,if (classContext != null ) JavaClass cls = classContext.getJavaClass();
InfiniteLoop.java,int loopBottomLine = loopBottom.getStartLine();,if (loopBottom != null ) int loopBottomLine = loopBottom.getStartLine();
InfiniteLoop.java,int lastChangeLine = lastChange.getEndLine();,if (lastChange != null ) int lastChangeLine = lastChange.getEndLine();
InfiniteLoop.java,int lastChangeLine = lastChange.getEndLine();,if (lastChange != null ) int lastChangeLine = lastChange.getEndLine();
InfiniteRecursiveLoop2.java,Method[] methodList = classContext.getJavaClass().getMethods();,if (classContext != null ) Method[] methodList = classContext.getJavaClass().getMethods();
InfiniteRecursiveLoop2.java,Instruction ins = thrower.getInstruction();,if (thrower != null ) Instruction ins = thrower.getInstruction();
InfiniteRecursiveLoop2.java,ConstantPoolGen cpg = classContext.getConstantPoolGen();,if (classContext != null ) ConstantPoolGen cpg = classContext.getConstantPoolGen();
InfiniteRecursiveLoop2.java,ValueNumberFrame vnaFrameAtEntry = vnaDataflow.getStartFact(cfg.getEntry());,if (vnaDataflow != null ) ValueNumberFrame vnaFrameAtEntry = vnaDataflow.getStartFact(cfg.getEntry());
InfiniteRecursiveLoop2.java,BitSet entryPostDominators = postDominators.getAllDominatorsOf(cfg.getEntry());,if (postDominators != null ) BitSet entryPostDominators = postDominators.getAllDominatorsOf(cfg.getEntry());
InfiniteRecursiveLoop2.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
InfiniteRecursiveLoop2.java,ValueNumber caller = vnaDataflow.getAnalysis().getThisValue();,if (vnaDataflow != null ) ValueNumber caller = vnaDataflow.getAnalysis().getThisValue();
InfiniteRecursiveLoop2.java,"ValueNumber callee = frameAtCall.getInstance(ins, classContext.getConstantPoolGen());","if (classContext != null ) ValueNumber callee = frameAtCall.getInstance(ins, classContext.getConstantPoolGen());"
InfiniteRecursiveLoop2.java,"int receiverStackSlot = typeFrame.getInstanceSlot(ins, classContext.getConstantPoolGen());","if (classContext != null ) int receiverStackSlot = typeFrame.getInstanceSlot(ins, classContext.getConstantPoolGen());"
InheritanceUnsafeGetResource.java,classIsFinal = obj.isFinal();,if (obj != null ) classIsFinal = obj.isFinal();
InheritanceUnsafeGetResource.java,classIsVisibleToOtherPackages = obj.isPublic() || obj.isProtected();,if (obj != null ) classIsVisibleToOtherPackages = obj.isPublic() || obj.isProtected();
InheritanceUnsafeGetResource.java,methodIsStatic = obj.isStatic();,if (obj != null ) methodIsStatic = obj.isStatic();
InheritanceUnsafeGetResource.java,String myPackagename = getThisClass().getPackageName();,if (getThisClass() != null ) String myPackagename = getThisClass().getPackageName();
InitializationChain.java,Set<String> allClasses = classRequires.keySet();,if (classRequires != null ) Set<String> allClasses = classRequires.keySet();
InitializationChain.java,Set<String> allClasses = classRequires.keySet();,if (classRequires != null ) Set<String> allClasses = classRequires.keySet();
InstanceFieldLoadStreamFactory.java,Instruction ins = location.getHandle().getInstruction();,if (location != null ) Instruction ins = location.getHandle().getInstruction();
InstanceFieldLoadStreamFactory.java,String fieldClass = type.getClassName();,if (type != null ) String fieldClass = type.getClassName();
InstantiateStaticClass.java,ClassDescriptor superclassDescriptor = xClass.getSuperclassDescriptor();,if (xClass != null ) ClassDescriptor superclassDescriptor = xClass.getSuperclassDescriptor();
InstantiateStaticClass.java,String superClassName = superclassDescriptor.getClassName();,if (superclassDescriptor != null ) String superClassName = superclassDescriptor.getClassName();
IntCast2LongAsInstant.java,TrainLongInstantfParams.LongInstantParameterDatabase database = new TrainLongInstantfParams.LongInstantParameterDatabase();,if (TrainLongInstantfParams != null ) TrainLongInstantfParams.LongInstantParameterDatabase database = new TrainLongInstantfParams.LongInstantParameterDatabase();
InvalidJUnitTest.java,JavaClass jClass = classContext.getJavaClass();,if (classContext != null ) JavaClass jClass = classContext.getJavaClass();
InvalidJUnitTest.java,XClass xClass = classContext.getXClass();,if (classContext != null ) XClass xClass = classContext.getXClass();
InvalidJUnitTest.java,ClassDescriptor  sDesc = jClass.getSuperclassDescriptor();,if (jClass != null ) ClassDescriptor  sDesc = jClass.getSuperclassDescriptor();
InvalidJUnitTest.java,JavaClass sClass = jClass.getSuperClass();,if (jClass != null ) JavaClass sClass = jClass.getSuperClass();
LazyInit.java,BindingSet bindingSet = match.getBindingSet();,if (match != null ) BindingSet bindingSet = match.getBindingSet();
LazyInit.java,FieldVariable field = (FieldVariable) binding.getVariable();,if (binding != null ) FieldVariable field = (FieldVariable) binding.getVariable();
LazyInit.java,String signature = xfield.getSignature();,if (xfield != null ) String signature = xfield.getSignature();
LazyInit.java,String name = fieldClass.getClassDescriptor().getClassName();,if (fieldClass != null ) String name = fieldClass.getClassDescriptor().getClassName();
LazyInit.java,fieldType = fieldClass.getSuperclassDescriptor();,if (fieldClass != null ) fieldType = fieldClass.getSuperclassDescriptor();
LazyInit.java,InstructionHandle testInstructionHandle = test.getMatchedInstructionInstructionHandle();,if (test != null ) InstructionHandle testInstructionHandle = test.getMatchedInstructionInstructionHandle();
LazyInit.java,BitSet extent = domAnalysis.getAllDominatedBy(createBegin.getBasicBlock());,if (domAnalysis != null ) BitSet extent = domAnalysis.getAllDominatedBy(createBegin.getBasicBlock());
LazyInit.java,BitSet postDom = postDomAnalysis.getAllDominatedBy(store.getBasicBlock());,if (postDomAnalysis != null ) BitSet postDom = postDomAnalysis.getAllDominatedBy(store.getBasicBlock());
LazyInit.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
LazyInit.java,BitSet postStore = domAnalysis.getAllDominatedBy(store.getBasicBlock());,if (domAnalysis != null ) BitSet postStore = domAnalysis.getAllDominatedBy(store.getBasicBlock());
LazyInit.java,InstructionHandle nextHandle = handle.getNext();,if (handle != null ) InstructionHandle nextHandle = handle.getNext();
LazyInit.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
LazyInit.java,String sourceFile = javaClass.getSourceFileName();,if (javaClass != null ) String sourceFile = javaClass.getSourceFileName();
LazyInit.java,Instruction instruction = nextHandle.getInstruction();,if (nextHandle != null ) Instruction instruction = nextHandle.getInstruction();
LoadOfKnownNullValue.java,Method[] methodList = classContext.getJavaClass().getMethods();,if (classContext != null ) Method[] methodList = classContext.getJavaClass().getMethods();
LoadOfKnownNullValue.java,String sourceFile = classContext.getJavaClass().getSourceFileName();,if (classContext != null ) String sourceFile = classContext.getJavaClass().getSourceFileName();
LoadOfKnownNullValue.java,LineNumberTable lineNumbers = method.getLineNumberTable();,if (method != null ) LineNumberTable lineNumbers = method.getLineNumberTable();
LoadOfKnownNullValue.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
LoadOfKnownNullValue.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
LoadOfKnownNullValue.java,int index = load.getIndex();,if (load != null ) int index = load.getIndex();
LoadOfKnownNullValue.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
LoadOfKnownNullValue.java,int index = load.getIndex();,if (load != null ) int index = load.getIndex();
LoadOfKnownNullValue.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
LoadOfKnownNullValue.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
LoadOfKnownNullValue.java,int index = load.getIndex();,if (load != null ) int index = load.getIndex();
LoadOfKnownNullValue.java,InstructionHandle prevHandle = handle.getPrev();,if (handle != null ) InstructionHandle prevHandle = handle.getPrev();
LoadOfKnownNullValue.java,int previousLine = prevSourceLineAnnotation.getEndLine();,if (prevSourceLineAnnotation != null ) int previousLine = prevSourceLineAnnotation.getEndLine();
LockedFields.java,int flags = obj.getAccessFlags();,if (obj != null ) int flags = obj.getAccessFlags();
LockedFields.java,int total = stats.size();,if (stats != null ) int total = stats.size();
MethodReturnCheck.java,int priority = annotation.getPriority();,if (annotation != null ) int priority = annotation.getPriority();
MethodReturnCheck.java,int priority = annotation.getPriority();,if (annotation != null ) int priority = annotation.getPriority();
MethodReturnCheck.java,String pattern = annotation.getPattern();,if (annotation != null ) String pattern = annotation.getPattern();
MethodReturnValueStreamFactory.java,Instruction ins = location.getHandle().getInstruction();,if (location != null ) Instruction ins = location.getHandle().getInstruction();
MethodReturnValueStreamFactory.java,short opcode = ins.getOpcode();,if (ins != null ) short opcode = ins.getOpcode();
MethodReturnValueStreamFactory.java,String streamClass = type.getClassName();,if (type != null ) String streamClass = type.getClassName();
MultithreadedInstanceAccess.java,String superClsName = cls.getSuperclassName();,if (cls != null ) String superClsName = cls.getSuperclassName();
MultithreadedInstanceAccess.java,mtClassName = mtClass.getClassName();,if (mtClass != null ) mtClassName = mtClass.getClassName();
MultithreadedInstanceAccess.java,int nameIdx = ntc.getNameIndex();,if (ntc != null ) int nameIdx = ntc.getNameIndex();
MutableStaticFields.java,int flags = obj.getAccessFlags();,if (obj != null ) int flags = obj.getAccessFlags();
MutableStaticFields.java,movedOutofInterface = couldBePackage && xClass.isInterface();,if (xClass != null ) movedOutofInterface = couldBePackage && xClass.isInterface();
Naming.java,JavaClass clazz = Repository.lookupClass(m.getClassName());,if (Repository != null ) JavaClass clazz = Repository.lookupClass(m.getClassName());
Naming.java,XFactory xFactory = AnalysisContext.currentXFactory();,if (AnalysisContext != null ) XFactory xFactory = AnalysisContext.currentXFactory();
Naming.java,String name = obj.getClassName();,if (obj != null ) String name = obj.getClassName();
Naming.java,String superClassName = obj.getSuperclassName();,if (obj != null ) String superClassName = obj.getSuperclassName();
Naming.java,String name = obj.getClassName();,if (obj != null ) String name = obj.getClassName();
Naming.java,classIsPublicOrProtected = obj.isPublic() || obj.isProtected();,if (obj != null ) classIsPublicOrProtected = obj.isPublic() || obj.isProtected();
Naming.java,int flags = obj.getAccessFlags();,if (obj != null ) int flags = obj.getAccessFlags();
Naming.java,String fieldName = obj.getName();,if (obj != null ) String fieldName = obj.getName();
Naming.java,Code code = obj.getCode();,if (obj != null ) Code code = obj.getCode();
Naming.java,Code code = obj.getCode();,if (obj != null ) Code code = obj.getCode();
Naming.java,byte[] codeBytes = code.getCode();,if (code != null ) byte[] codeBytes = code.getCode();
Noise.java,byte[] hash = md.digest();,if (md != null ) byte[] hash = md.digest();
Noise.java,primer = getFullyQualifiedMethodName().getBytes();,if (getFullyQualifiedMethodName() != null ) primer = getFullyQualifiedMethodName().getBytes();
Noise.java,priority = hq.getPriority();,if (hq != null ) priority = hq.getPriority();
Noise.java,priority = hq.getPriority();,if (hq != null ) priority = hq.getPriority();
Noise.java,priority = hq.getPriority();,if (hq != null ) priority = hq.getPriority();
NoiseNullDeref.java,JavaClass jclass = classContext.getJavaClass();,if (classContext != null ) JavaClass jclass = classContext.getJavaClass();
NoiseNullDeref.java,String className = jclass.getClassName();,if (jclass != null ) String className = jclass.getClassName();
NoiseNullDeref.java,String superClassName = jclass.getSuperclassName();,if (jclass != null ) String superClassName = jclass.getSuperclassName();
NoiseNullDeref.java,boolean onExceptionPath = refValue.isException();,if (refValue != null ) boolean onExceptionPath = refValue.isException();
NoiseNullDeref.java,final ConstantPoolGen cpg = classContext.getConstantPoolGen();,if (classContext != null ) final ConstantPoolGen cpg = classContext.getConstantPoolGen();
NoiseNullDeref.java,cause = new StringAnnotation(ins.getName());,if (StringAnnotation(ins != null ) cause = new StringAnnotation(ins.getName());
NoiseNullDeref.java,InstructionHandle ins = target.getFirstInstruction();,if (target != null ) InstructionHandle ins = target.getFirstInstruction();
NoiseNullDeref.java,Instruction i = ins.getInstruction();,if (ins != null ) Instruction i = ins.getInstruction();
NoiseNullDeref.java,ins = ins.getNext();,if (ins != null ) ins = ins.getNext();
NoiseNullDeref.java,LineNumberTable table = method.getLineNumberTable();,if (method != null ) LineNumberTable table = method.getLineNumberTable();
NoiseNullDeref.java,int pc = loc.getHandle().getPosition();,if (loc != null ) int pc = loc.getHandle().getPosition();
NoteAnnotationRetention.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
NoteCheckReturnValue.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
NoteCheckReturnValueAnnotations.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
NoteDirectlyRelevantTypeQualifiers.java,qualifiers = AnalysisContext.currentAnalysisContext().getDirectlyRelevantTypeQualifiersDatabase();,if (AnalysisContext != null ) qualifiers = AnalysisContext.currentAnalysisContext().getDirectlyRelevantTypeQualifiersDatabase();
NoteDirectlyRelevantTypeQualifiers.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
NoteJCIPAnnotation.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
NoteNonNullAnnotations.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
NoteSuppressedWarnings.java,suppressionMatcher = AnalysisContext.currentAnalysisContext().getSuppressionMatcher();,if (AnalysisContext != null ) suppressionMatcher = AnalysisContext.currentAnalysisContext().getSuppressionMatcher();
NoteSuppressedWarnings.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
NumberConstructor.java,int majorVersion = classContext.getJavaClass().getMajor();,if (classContext != null ) int majorVersion = classContext.getJavaClass().getMajor();
OverridingEqualsNotSymmetrical.java,XMethod rightM = right.getReturnValueOf();,if (right != null ) XMethod rightM = right.getReturnValueOf();
OverridingEqualsNotSymmetrical.java,XMethod leftM = left.getReturnValueOf();,if (left != null ) XMethod leftM = left.getReturnValueOf();
OverridingEqualsNotSymmetrical.java,XMethod rightM = right.getReturnValueOf();,if (right != null ) XMethod rightM = right.getReturnValueOf();
PublicSemaphores.java,JavaClass cls = classContext.getJavaClass();,if (classContext != null ) JavaClass cls = classContext.getJavaClass();
ReadOfInstanceFieldInMethodInvokedByConstructorInSuperclass.java,UnreadFields unreadFields = AnalysisContext.currentAnalysisContext().getUnreadFields();,if (AnalysisContext != null ) UnreadFields unreadFields = AnalysisContext.currentAnalysisContext().getUnreadFields();
ReadOfInstanceFieldInMethodInvokedByConstructorInSuperclass.java,FieldSummary fieldSummary = AnalysisContext.currentAnalysisContext().getFieldSummary();,if (AnalysisContext != null ) FieldSummary fieldSummary = AnalysisContext.currentAnalysisContext().getFieldSummary();
RedundantInterfaces.java,JavaClass obj = classContext.getJavaClass();,if (classContext != null ) JavaClass obj = classContext.getJavaClass();
RedundantInterfaces.java,String superClassName = obj.getSuperclassName();,if (obj != null ) String superClassName = obj.getSuperclassName();
RedundantInterfaces.java,String[] interfaceNames = obj.getInterfaceNames();,if (obj != null ) String[] interfaceNames = obj.getInterfaceNames();
RedundantInterfaces.java,JavaClass superObj = obj.getSuperClass();,if (obj != null ) JavaClass superObj = obj.getSuperClass();
RepeatedConditionals.java,byte[] code = getCode().getCode();,if (getCode() != null ) byte[] code = getCode().getCode();
ResolveAllReferences.java,IAnalysisCache analysisCache = Global.getAnalysisCache();,if (Global != null ) IAnalysisCache analysisCache = Global.getAnalysisCache();
ResolveAllReferences.java,Constant[] constants = cp.getConstantPool();,if (cp != null ) Constant[] constants = cp.getConstantPool();
RuntimeExceptionCapture.java,int type = obj.getCatchType();,if (obj != null ) int type = obj.getCatchType();
RuntimeExceptionCapture.java,Collection<BasicBlock> blockList = cfg.getBlocksContainingInstructionWithOffset(obj.getHandlerPC());,if (cfg != null ) Collection<BasicBlock> blockList = cfg.getBlocksContainingInstructionWithOffset(obj.getHandlerPC());
RuntimeExceptionCapture.java,InstructionHandle first = block.getFirstInstruction();,if (block != null ) InstructionHandle first = block.getFirstInstruction();
RuntimeExceptionCapture.java,ASTORE astore = (ASTORE) first.getInstruction();,if (first != null ) ASTORE astore = (ASTORE) first.getInstruction();
RuntimeExceptionCapture.java,String signature = item.getSignature();,if (item != null ) String signature = item.getSignature();
SerializableIdiom.java,ClassDescriptor superclassDescriptor = getXClass().getSuperclassDescriptor();,if (getXClass() != null ) ClassDescriptor superclassDescriptor = getXClass().getSuperclassDescriptor();
SerializableIdiom.java,double isSerializable = DeepSubtypeAnalysis.isDeepSerializable(fieldX.getSignature());,if (DeepSubtypeAnalysis != null ) double isSerializable = DeepSubtypeAnalysis.isDeepSerializable(fieldX.getSignature());
SerializableIdiom.java,int accessFlags = obj.getAccessFlags();,if (obj != null ) int accessFlags = obj.getAccessFlags();
SerializableIdiom.java,Attribute[] a = obj.getAttributes();,if (obj != null ) Attribute[] a = obj.getAttributes();
SerializableIdiom.java,boolean isPutOfDefaultValue = first.isNull(); // huh?? || first.isInitialParameter();,if (first != null ) boolean isPutOfDefaultValue = first.isNull(); // huh?? || first.isInitialParameter();
SerializableIdiom.java,Object constant = first.getConstant();,if (first != null ) Object constant = first.getConstant();
SerializableIdiom.java,JavaClass classStored = first.getJavaClass();,if (first != null ) JavaClass classStored = first.getJavaClass();
SerializableIdiom.java,int flags = obj.getAccessFlags();,if (obj != null ) int flags = obj.getAccessFlags();
SerializableIdiom.java,FieldSummary fieldSummary = AnalysisContext.currentAnalysisContext().getFieldSummary();,if (AnalysisContext != null ) FieldSummary fieldSummary = AnalysisContext.currentAnalysisContext().getFieldSummary();
StaticCalendarDetector.java,currentClass = someObj.getClassName();,if (someObj != null ) currentClass = someObj.getClassName();
StaticCalendarDetector.java,ClassDescriptor classOfField = DescriptorFactory.createClassDescriptorFromFieldSignature(aField.getSignature());,if (DescriptorFactory != null ) ClassDescriptor classOfField = DescriptorFactory.createClassDescriptorFromFieldSignature(aField.getSignature());
StaticCalendarDetector.java,XField field = invokedOn.getXField();,if (invokedOn != null ) XField field = invokedOn.getXField();
StaticCalendarDetector.java,field = passedAsArgument.getXField();,if (passedAsArgument != null ) field = passedAsArgument.getXField();
StaticFieldLoadStreamFactory.java,Instruction ins = location.getHandle().getInstruction();,if (location != null ) Instruction ins = location.getHandle().getInstruction();
Stream.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
Stream.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
Stream.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
StreamFrameModelingVisitor.java,final Instruction ins = handle.getInstruction();,if (handle != null ) final Instruction ins = handle.getInstruction();
StreamFrameModelingVisitor.java,Location creationPoint = stream.getLocation();,if (stream != null ) Location creationPoint = stream.getLocation();
StreamResourceTracker.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
SuperfluousInstanceOf.java,String objSignature = lv.getSignature();,if (lv != null ) String objSignature = lv.getSignature();
SwitchFallthrough.java,potentiallyDeadStoresFromBeforeFallthrough = (BitSet) potentiallyDeadStores.clone();,if (potentiallyDeadStores != null ) potentiallyDeadStoresFromBeforeFallthrough = (BitSet) potentiallyDeadStores.clone();
SwitchFallthrough.java,SourceFinder sourceFinder = AnalysisContext.currentAnalysisContext().getSourceFinder();,if (AnalysisContext != null ) SourceFinder sourceFinder = AnalysisContext.currentAnalysisContext().getSourceFinder();
SwitchFallthrough.java,int startLine = srcLine.getStartLine();,if (srcLine != null ) int startLine = srcLine.getStartLine();
SwitchFallthrough.java,line = line.toLowerCase();,if (line != null ) line = line.toLowerCase();
SynchronizationOnSharedBuiltinConstant.java,XMethod method = item.getReturnValueOf();,if (item != null ) XMethod method = item.getReturnValueOf();
SynchronizationOnSharedBuiltinConstant.java,syncSignature = top.getSignature();,if (top != null ) syncSignature = top.getSignature();
SynchronizationOnSharedBuiltinConstant.java,Object constant = top.getConstant();,if (top != null ) Object constant = top.getConstant();
SynchronizationOnSharedBuiltinConstant.java,XField field = top.getXField();,if (top != null ) XField field = top.getXField();
TestDataflowAnalysis.java,IAnalysisCache analysisCache = Global.getAnalysisCache();,if (Global != null ) IAnalysisCache analysisCache = Global.getAnalysisCache();
TestDataflowAnalysis.java,MethodDescriptor methodDescriptor = xMethod.getMethodDescriptor();,if (xMethod != null ) MethodDescriptor methodDescriptor = xMethod.getMethodDescriptor();
TestDataflowAnalysis.java,IAnalysisCache analysisCache = Global.getAnalysisCache();,if (Global != null ) IAnalysisCache analysisCache = Global.getAnalysisCache();
TrainFieldStoreTypes.java,Method[] methodList = classContext.getJavaClass().getMethods();,if (classContext != null ) Method[] methodList = classContext.getJavaClass().getMethods();
TrainFieldStoreTypes.java,ConstantPoolGen cpg = classContext.getConstantPoolGen();,if (classContext != null ) ConstantPoolGen cpg = classContext.getConstantPoolGen();
TrainFieldStoreTypes.java,Instruction ins = location.getHandle().getInstruction();,if (location != null ) Instruction ins = location.getHandle().getInstruction();
TrainFieldStoreTypes.java,Type storeType = frame.getTopValue();,if (frame != null ) Type storeType = frame.getTopValue();
TrainFieldStoreTypes.java,FieldStoreType property = database.getProperty(xfield.getFieldDescriptor());,if (database != null ) FieldStoreType property = database.getProperty(xfield.getFieldDescriptor());
TrainLongInstantfParams.java,String name = localVariable.getName();,if (localVariable != null ) String name = localVariable.getName();
URLProblems.java,String sig = obj.getSignature();,if (obj != null ) String sig = obj.getSignature();
UncallableMethodOfAnonymousClass.java,String methodName = obj.getName();,if (obj != null ) String methodName = obj.getName();
UncallableMethodOfAnonymousClass.java,String sig = obj.getSignature();,if (obj != null ) String sig = obj.getSignature();
UncallableMethodOfAnonymousClass.java,XFactory factory = AnalysisContext.currentXFactory();,if (AnalysisContext != null ) XFactory factory = AnalysisContext.currentXFactory();
UncallableMethodOfAnonymousClass.java,JavaClass superClass = clazz.getSuperClass();,if (clazz != null ) JavaClass superClass = clazz.getSuperClass();
UncallableMethodOfAnonymousClass.java,String superClassName = superClass.getClassName();,if (superClass != null ) String superClassName = superClass.getClassName();
UnnecessaryMath.java,Constant c = this.getConstantRefOperand();,if (this != null ) Constant c = this.getConstantRefOperand();
UnreadFields.java,String signature = obj.getSignature();,if (obj != null ) String signature = obj.getSignature();
UnreadFields.java,seenMonitorEnter = getMethod().isSynchronized();,if (getMethod() != null ) seenMonitorEnter = getMethod().isSynchronized();
UnreadFields.java,int flags = obj.getAccessFlags();,if (obj != null ) int flags = obj.getAccessFlags();
UnreadFields.java,String dottedClass = DeepSubtypeAnalysis.getComponentClass(fieldInfo.getSignature());,if (DeepSubtypeAnalysis != null ) String dottedClass = DeepSubtypeAnalysis.getComponentClass(fieldInfo.getSignature());
UnreadFields.java,XField f = item.getXField();,if (item != null ) XField f = item.getXField();
UnreadFields.java,AnalysisContext currentAnalysisContext = AnalysisContext.currentAnalysisContext();,if (AnalysisContext != null ) AnalysisContext currentAnalysisContext = AnalysisContext.currentAnalysisContext();
UnreadFields.java,XFactory xFactory = AnalysisContext.currentXFactory();,if (AnalysisContext != null ) XFactory xFactory = AnalysisContext.currentXFactory();
UnreadFields.java,increment += assumedNonNullAt.size();,if (assumedNonNullAt != null ) increment += assumedNonNullAt.size();
UnreadFields.java,AnalysisContext analysisContext = AnalysisContext.currentAnalysisContext();,if (AnalysisContext != null ) AnalysisContext analysisContext = AnalysisContext.currentAnalysisContext();
UnreadFields.java,String sourceSignature = of.getSourceSignature();,if (of != null ) String sourceSignature = of.getSourceSignature();
UselessSubclassMethod.java,superclassName = cls.getSuperclassName();,if (cls != null ) superclassName = cls.getSuperclassName();
UselessSubclassMethod.java,Method[] infMethods = aInterface.getMethods();,if (aInterface != null ) Method[] infMethods = aInterface.getMethods();
UselessSubclassMethod.java,Attribute[] atts = getMethod().getAttributes();,if (getMethod() != null ) Attribute[] atts = getMethod().getAttributes();
UselessSubclassMethod.java,byte[] codeBytes = obj.getCode();,if (obj != null ) byte[] codeBytes = obj.getCode();
UselessSubclassMethod.java,argTypes = Type.getArgumentTypes(this.getMethodSig());,if (Type != null ) argTypes = Type.getArgumentTypes(this.getMethodSig());
UselessSubclassMethod.java,String signature = argTypes[curParm++].getSignature();,if (argTypes[curParm++] != null ) String signature = argTypes[curParm++].getSignature();
UselessSubclassMethod.java,Type returnType = getMethod().getReturnType();,if (getMethod() != null ) Type returnType = getMethod().getReturnType();
UselessSubclassMethod.java,String methodName = subclassMethod.getName();,if (subclassMethod != null ) String methodName = subclassMethod.getName();
UselessSubclassMethod.java,subArgs = Type.getArgumentTypes(subclassMethod.getSignature());,if (Type != null ) subArgs = Type.getArgumentTypes(subclassMethod.getSignature());
UselessSubclassMethod.java,Type[] superArgs = Type.getArgumentTypes(m.getSignature());,if (Type != null ) Type[] superArgs = Type.getArgumentTypes(m.getSignature());
UselessSubclassMethod.java,String superSuperClassName = superClass.getSuperclassName();,if (superClass != null ) String superSuperClassName = superClass.getSuperclassName();
XMLFactoryBypass.java,curClass = classContext.getJavaClass();,if (classContext != null ) curClass = classContext.getJavaClass();
XMLFactoryBypass.java,String invokerClsName = this.getClassName();,if (this != null ) String invokerClsName = this.getClassName();
XMLFactoryBypass.java,JavaClass superCls = curClass.getSuperClass();,if (curClass != null ) JavaClass superCls = curClass.getSuperClass();
XMLFactoryBypass.java,JavaClass[] infs = newCls.getAllInterfaces();,if (newCls != null ) JavaClass[] infs = newCls.getAllInterfaces();
BugMatcher.java,String value = matches.toString();,if (matches != null ) String value = matches.toString();
ClassMatcher.java,ClassAnnotation primaryClassAnnotation = bugInstance.getPrimaryClass();,if (bugInstance != null ) ClassAnnotation primaryClassAnnotation = bugInstance.getPrimaryClass();
ClassMatcher.java,String bugClassName = primaryClassAnnotation.getClassName();,if (primaryClassAnnotation != null ) String bugClassName = primaryClassAnnotation.getClassName();
CompoundMatcher.java,int result = this.getClass().hashCode();,if (this != null ) int result = this.getClass().hashCode();
DesignationMatcher.java,String value = matches.toString();,if (matches != null ) String value = matches.toString();
FieldMatcher.java,fieldAnnotation = bugInstance.getPrimaryField();,if (bugInstance != null ) fieldAnnotation = bugInstance.getPrimaryField();
Filter.java,int result = super.hashCode();,if (super != null ) int result = super.hashCode();
Filter.java,XMLReader xr = XMLReaderFactory.createXMLReader();,if (XMLReaderFactory != null ) XMLReader xr = XMLReaderFactory.createXMLReader();
Filter.java,Iterator j = matchNode.elementIterator();,if (matchNode != null ) Iterator j = matchNode.elementIterator();
Filter.java,String name = element.getName();,if (element != null ) String name = element.getName();
Filter.java,String pName = nameAttr.getValue();,if (nameAttr != null ) String pName = nameAttr.getValue();
Filter.java,nameValue = nameAttr.getValue();,if (nameAttr != null ) nameValue = nameAttr.getValue();
Filter.java,nameValue = nameAttr.getValue();,if (nameAttr != null ) nameValue = nameAttr.getValue();
Filter.java,Iterator i = element.elementIterator();,if (element != null ) Iterator i = element.elementIterator();
MethodMatcher.java,methodAnnotation = bugInstance.getPrimaryMethod();,if (bugInstance != null ) methodAnnotation = bugInstance.getPrimaryMethod();
AbstractDepthFirstSearch.java,int numBlocks = graph.getNumVertexLabels();,if (graph != null ) int numBlocks = graph.getNumVertexLabels();
AbstractDepthFirstSearch.java,int maxEdgeId = graph.getNumEdgeLabels();,if (graph != null ) int maxEdgeId = graph.getNumEdgeLabels();
AbstractDepthFirstSearch.java,ArrayList<Visit> stack = new ArrayList<Visit>(graph.getNumVertexLabels());,if (ArrayList<Visit>(graph != null ) ArrayList<Visit> stack = new ArrayList<Visit>(graph.getNumVertexLabels());
AbstractDepthFirstSearch.java,EdgeType edge = visit.getNextEdge();,if (visit != null ) EdgeType edge = visit.getNextEdge();
AbstractDepthFirstSearch.java,VertexType vertex = visit.getVertex();,if (visit != null ) VertexType vertex = visit.getVertex();
AbstractDepthFirstSearch.java,Iterator<EdgeType> edgeIter = graph.edgeIterator();,if (graph != null ) Iterator<EdgeType> edgeIter = graph.edgeIterator();
AbstractDepthFirstSearch.java,EdgeType edge = edgeIter.next();,if (edgeIter != null ) EdgeType edge = edgeIter.next();
AbstractEdge.java,int cmp = source.compareTo(other.getSource());,if (source != null ) int cmp = source.compareTo(other.getSource());
AbstractGraph.java,this.edge = source.getFirstOutgoingEdge();,if (source != null ) this.edge = source.getFirstOutgoingEdge();
AbstractGraph.java,edge = edge.getNextOutgoingEdge();,if (edge != null ) edge = edge.getNextOutgoingEdge();
AbstractGraph.java,this.edge = target.getFirstIncomingEdge();,if (target != null ) this.edge = target.getFirstIncomingEdge();
AbstractGraph.java,edge = edge.getNextIncomingEdge();,if (edge != null ) edge = edge.getNextIncomingEdge();
AbstractVertex.java,cur = cur.getNextOutgoingEdge();,if (cur != null ) cur = cur.getNextOutgoingEdge();
StronglyConnectedComponents.java,VertexType vertex = vertexIter.next();,if (vertexIter != null ) VertexType vertex = vertexIter.next();
Transpose.java,GraphType trans = toolkit.createGraph();,if (toolkit != null ) GraphType trans = toolkit.createGraph();
SlowInputStream.java,private long started = System.currentTimeMillis();,if (System != null ) private long started = System.currentTimeMillis();
SlowInputStream.java,int b = in.read();,if (in != null ) int b = in.read();
JAIFParser.java,JAIFToken t = scanner.nextToken();,if (scanner != null ) JAIFToken t = scanner.nextToken();
JAIFParser.java,JAIFToken t = scanner.nextToken();,if (scanner != null ) JAIFToken t = scanner.nextToken();
JAIFParser.java,t = scanner.peekToken();,if (scanner != null ) t = scanner.peekToken();
JAIFParser.java,JAIFToken t = scanner.nextToken();,if (scanner != null ) JAIFToken t = scanner.nextToken();
JAIFParser.java,t = scanner.peekToken();,if (scanner != null ) t = scanner.peekToken();
JAIFParser.java,JAIFToken t = scanner.peekToken();,if (scanner != null ) JAIFToken t = scanner.peekToken();
JAIFParser.java,t = scanner.peekToken();,if (scanner != null ) t = scanner.peekToken();
JAIFParser.java,t = scanner.peekToken();,if (scanner != null ) t = scanner.peekToken();
JAIFParser.java,JAIFToken t = scanner.peekToken();,if (scanner != null ) JAIFToken t = scanner.peekToken();
JAIFParser.java,t = scanner.peekToken();,if (scanner != null ) t = scanner.peekToken();
JAIFParser.java,t = scanner.peekToken();,if (scanner != null ) t = scanner.peekToken();
JAIFParser.java,JAIFToken t = scanner.peekToken();,if (scanner != null ) JAIFToken t = scanner.peekToken();
JAIFParser.java,t = scanner.nextToken();,if (scanner != null ) t = scanner.nextToken();
JAIFParser.java,t = scanner.nextToken();,if (scanner != null ) t = scanner.nextToken();
JAIFParser.java,t = scanner.nextToken();,if (scanner != null ) t = scanner.nextToken();
JAIFParser.java,t = scanner.nextToken();,if (scanner != null ) t = scanner.nextToken();
JAIFParser.java,t = scanner.nextToken();,if (scanner != null ) t = scanner.nextToken();
JAIFParser.java,JAIFToken t = scanner.peekToken();,if (scanner != null ) JAIFToken t = scanner.peekToken();
JAIFParser.java,JAIFToken t = scanner.peekToken();,if (scanner != null ) JAIFToken t = scanner.peekToken();
JAIFParser.java,t = scanner.peekToken();,if (scanner != null ) t = scanner.peekToken();
JAIFScanner.java,lineBuf = reader.readLine();,if (reader != null ) lineBuf = reader.readLine();
JAIFScanner.java,lineBuf = lineBuf.substring(lexeme.length());,if (lineBuf != null ) lineBuf = lineBuf.substring(lexeme.length());
LaunchGUI.java,MainFrame instance = MainFrame.getInstance();,if (MainFrame != null ) MainFrame instance = MainFrame.getInstance();
Profiler.java,long time = p.totalTime.get();,if (p != null ) long time = p.totalTime.get();
Profiler.java,int totalCalls = p.totalCalls.get();,if (p != null ) int totalCalls = p.totalCalls.get();
Profiler.java,long time = p.totalTime.get();,if (p != null ) long time = p.totalTime.get();
Profiler.java,int totalCalls = p.totalCalls.get();,if (p != null ) int totalCalls = p.totalCalls.get();
Profiler.java,long time = totalTime.get();,if (totalTime != null ) long time = totalTime.get();
Profiler.java,int callCount = totalCalls.get();,if (totalCalls != null ) int callCount = totalCalls.get();
Profiler.java,long totalSquareMicros = totalSquareMicroseconds.get();,if (totalSquareMicroseconds != null ) long totalSquareMicros = totalSquareMicroseconds.get();
Profiler.java,long currentNanoTime = System.nanoTime();,if (System != null ) long currentNanoTime = System.nanoTime();
Profiler.java,long currentNanoTime = System.nanoTime();,if (System != null ) long currentNanoTime = System.nanoTime();
Profiler.java,Clock ending = stack.pop();,if (stack != null ) Clock ending = stack.pop();
Profiler.java,Clock restarting = stack.peek();,if (stack != null ) Clock restarting = stack.peek();
Profiler.java,counter = new Profile(c.getName());,if (Profile(c != null ) counter = new Profile(c.getName());
Profiler.java,long time = p.totalTime.get();,if (p != null ) long time = p.totalTime.get();
Profiler.java,result = new Profile(c.getName());,if (Profile(c != null ) result = new Profile(c.getName());
Profiler.java,totalTime += p.totalTime.get();,if (p != null ) totalTime += p.totalTime.get();
Profiler.java,accumulatedTime += p.totalTime.get();,if (p != null ) accumulatedTime += p.totalTime.get();
ConvertToARFF.java,String s = value.toString();,if (value != null ) String s = value.toString();
ConvertToARFF.java,String value = attribute.getValue();,if (attribute != null ) String value = attribute.getValue();
ConvertToARFF.java,nextId = uidAttr.getValue();,if (uidAttr != null ) nextId = uidAttr.getValue();
ConvertToARFF.java,value = uidAttr.getStringValue();,if (uidAttr != null ) value = uidAttr.getStringValue();
ConvertToARFF.java,String s = tok.nextToken();,if (tok != null ) String s = tok.nextToken();
ConvertToARFF.java,ConvertToARFF converter = commandLine.getConverter();,if (commandLine != null ) ConvertToARFF converter = commandLine.getConverter();
GenerateUIDs.java,Document document = DocumentFactory.getInstance().createDocument();,if (DocumentFactory != null ) Document document = DocumentFactory.getInstance().createDocument();
ClassFeatureSet.java,this.isInterface = javaClass.isInterface();,if (javaClass != null ) this.isInterface = javaClass.isInterface();
ClassFeatureSet.java,String transformedMethodSignature = transformMethodSignature(method.getSignature());,if (transformMethodSignature(method != null ) String transformedMethodSignature = transformMethodSignature(method.getSignature());
ClassFeatureSet.java,Code code = method.getCode();,if (method != null ) Code code = method.getCode();
ClassFeatureSet.java,JavaClass[] superclassList = javaClass.getSuperClasses();,if (javaClass != null ) JavaClass[] superclassList = javaClass.getSuperClasses();
ClassFeatureSet.java,JavaClass[] interfaceList = javaClass.getAllInterfaces();,if (javaClass != null ) JavaClass[] interfaceList = javaClass.getAllInterfaces();
ClassFeatureSet.java,String name = member.getName();,if (member != null ) String name = member.getName();
ClassNameRewriterUtil.java,methodSignature = buf.toString();,if (buf != null ) methodSignature = buf.toString();
RegenerateClassFeatures.java,JavaClass javaClass = parser.parse();,if (parser != null ) JavaClass javaClass = parser.parse();
ExecutionPlan.java,DetectorNode start = edge.getSource();,if (edge != null ) DetectorNode start = edge.getSource();
ExecutionPlan.java,DetectorFactory startFactory = start.getFactory();,if (start != null ) DetectorFactory startFactory = start.getFactory();
ExecutionPlan.java,lastPass = passList.getLast();,if (passList != null ) lastPass = passList.getLast();
ExecutionPlan.java,DetectorNode node = nodeMap.get(factory.getFullName());,if (nodeMap != null ) DetectorNode node = nodeMap.get(factory.getFullName());
ExecutionPlan.java,Set<DetectorFactory> detectorSet = new HashSet<DetectorFactory>(pass.getMembers());,if (HashSet<DetectorFactory>(pass != null ) Set<DetectorFactory> detectorSet = new HashSet<DetectorFactory>(pass.getMembers());
ReportingDetectorFactorySelector.java,"s += "" in plugin "" + plugin.getPluginId();","if (plugin != null ) s += "" in plugin "" + plugin.getPluginId();"
WarningPropertySet.java,WarningProperty prop = entry.getKey();,if (entry != null ) WarningProperty prop = entry.getKey();
WarningPropertySet.java,Object attribute = entry.getValue();,if (entry != null ) Object attribute = entry.getValue();
WarningPropertySet.java,boolean relaxedReporting = FindBugsAnalysisFeatures.isRelaxedMode();,if (FindBugsAnalysisFeatures != null ) boolean relaxedReporting = FindBugsAnalysisFeatures.isRelaxedMode();
WarningPropertySet.java,PriorityAdjustment adj = warningProperty.getPriorityAdjustment();,if (warningProperty != null ) PriorityAdjustment adj = warningProperty.getPriorityAdjustment();
WarningPropertySet.java,WarningProperty prop = entry.getKey();,if (entry != null ) WarningProperty prop = entry.getKey();
ClassPathUtil.java,String t = tok.nextToken();,if (tok != null ) String t = tok.nextToken();
ContainsCamelCaseWordStringMatcher.java,Collection<String> components = splitter.split();,if (splitter != null ) Collection<String> components = splitter.split();
FractionalMultiset.java,int count = counts.getCount(e.getKey());,if (counts != null ) int count = counts.getCount(e.getKey());
HTML.java,String name = elem.getName();,if (elem != null ) String name = elem.getName();
HTML.java,String name = elem.getName();,if (elem != null ) String name = elem.getName();
LaunchBrowser.java,Process p = builder.start();,if (builder != null ) Process p = builder.start();
SubtypeTypeMatcher.java,IAnalysisCache analysisCache = Global.getAnalysisCache();,if (Global != null ) IAnalysisCache analysisCache = Global.getAnalysisCache();
TestDesktopIntegration.java,File file = fc.getSelectedFile();,if (fc != null ) File file = fc.getSelectedFile();
TopologicalSort.java,ArrayList<E> doFirst = new ArrayList<E>(consider.size());,if (ArrayList<E>(consider != null ) ArrayList<E> doFirst = new ArrayList<E>(consider.size());
TopologicalSort.java,ArrayList<E> doLast = new ArrayList<E>(consider.size());,if (ArrayList<E>(consider != null ) ArrayList<E> doLast = new ArrayList<E>(consider.size());
Util.java,this.s = map.keySet();,if (map != null ) this.s = map.keySet();
WriteOnceProperties.java,Properties properties = System.getProperties();,if (System != null ) Properties properties = System.getProperties();
WriteOnceProperties.java,Properties properties = System.getProperties();,if (System != null ) Properties properties = System.getProperties();
AnnotationVisitor.java,int memberNameIndex = bytes.readUnsignedShort();,if (bytes != null ) int memberNameIndex = bytes.readUnsignedShort();
AnnotationVisitor.java,int annotationNameIndex = bytes.readUnsignedShort();,if (bytes != null ) int annotationNameIndex = bytes.readUnsignedShort();
AnnotationVisitor.java,int sz = bytes.readUnsignedShort();,if (bytes != null ) int sz = bytes.readUnsignedShort();
AnnotationVisitor.java,boolean runtimeVisible = ae.isRuntimeVisible();,if (ae != null ) boolean runtimeVisible = ae.isRuntimeVisible();
AnnotationVisitor.java,String name = ClassName.fromFieldSignature(ae.getAnnotationType());,if (ClassName != null ) String name = ClassName.fromFieldSignature(ae.getAnnotationType());
AnnotationVisitor.java,boolean runtimeVisible = ae.isRuntimeVisible();,if (ae != null ) boolean runtimeVisible = ae.isRuntimeVisible();
AnnotationVisitor.java,String name = ClassName.fromFieldSignature(ae.getAnnotationType());,if (ClassName != null ) String name = ClassName.fromFieldSignature(ae.getAnnotationType());
DismantleBytecode.java,refConstantOperand = ref.toString();,if (ref != null ) refConstantOperand = ref.toString();
DismantleBytecode.java,codeBytes = obj.getCode();,if (obj != null ) codeBytes = obj.getCode();
DismantleBytecode.java,lineNumberTable = obj.getLineNumberTable();,if (obj != null ) lineNumberTable = obj.getLineNumberTable();
DismantleBytecode.java,opcode = byteStream.readUnsignedByte();,if (byteStream != null ) opcode = byteStream.readUnsignedByte();
DismantleBytecode.java,switchLabels[o] = byteStream.readInt();,if (byteStream != null ) switchLabels[o] = byteStream.readInt();
DismantleBytecode.java,switchOffsets[o] = byteStream.readInt();,if (byteStream != null ) switchOffsets[o] = byteStream.readInt();
DismantleBytecode.java,defaultSwitchOffset = byteStream.readInt();,if (byteStream != null ) defaultSwitchOffset = byteStream.readInt();
DismantleBytecode.java,switchLow = byteStream.readInt();,if (byteStream != null ) switchLow = byteStream.readInt();
DismantleBytecode.java,switchHigh = byteStream.readInt();,if (byteStream != null ) switchHigh = byteStream.readInt();
DismantleBytecode.java,switchOffsets[o] = byteStream.readInt();,if (byteStream != null ) switchOffsets[o] = byteStream.readInt();
DismantleBytecode.java,registerOperand = byteStream.readUnsignedShort();,if (byteStream != null ) registerOperand = byteStream.readUnsignedShort();
DismantleBytecode.java,registerOperand = byteStream.readUnsignedShort();,if (byteStream != null ) registerOperand = byteStream.readUnsignedShort();
DismantleBytecode.java,v = byteStream.readByte();,if (byteStream != null ) v = byteStream.readByte();
DismantleBytecode.java,v = byteStream.readUnsignedShort();,if (byteStream != null ) v = byteStream.readUnsignedShort();
DismantleBytecode.java,v = byteStream.readShort();,if (byteStream != null ) v = byteStream.readShort();
DismantleBytecode.java,v = byteStream.readInt();,if (byteStream != null ) v = byteStream.readInt();
DismantleBytecode.java,classConstantOperand = getStringFromIndex(clazz.getNameIndex());,if (getStringFromIndex(clazz != null ) classConstantOperand = getStringFromIndex(clazz.getNameIndex());
DismantleBytecode.java,classConstantOperand = getStringFromIndex(clazz.getNameIndex());,if (getStringFromIndex(clazz != null ) classConstantOperand = getStringFromIndex(clazz.getNameIndex());
DismantleBytecode.java,nameConstantOperand = getStringFromIndex(sig.getNameIndex());,if (getStringFromIndex(sig != null ) nameConstantOperand = getStringFromIndex(sig.getNameIndex());
LVTHelper.java,int length = lvt.getTableLength();,if (lvt != null ) int length = lvt.getTableLength();
LVTHelper.java,LocalVariable[] lvs = lvt.getLocalVariableTable();,if (lvt != null ) LocalVariable[] lvs = lvt.getLocalVariableTable();
LVTHelper.java,int startPC = lvs[i].getStartPC();,if (lvs[i] != null ) int startPC = lvs[i].getStartPC();
PreorderVisitor.java,int startPC = catchBlock.getStartPC();,if (catchBlock != null ) int startPC = catchBlock.getStartPC();
PreorderVisitor.java,int endPC = catchBlock.getEndPC();,if (catchBlock != null ) int endPC = catchBlock.getEndPC();
PreorderVisitor.java,Constant kind = constantPool.getConstant(catchBlock.getCatchType());,if (constantPool != null ) Constant kind = constantPool.getConstant(catchBlock.getCatchType());
PreorderVisitor.java,CodeException[] exceptions = obj.getExceptionTable();,if (obj != null ) CodeException[] exceptions = obj.getExceptionTable();
PreorderVisitor.java,Attribute[] attributes = obj.getAttributes();,if (obj != null ) Attribute[] attributes = obj.getAttributes();
PreorderVisitor.java,fieldIsStatic = field.isStatic();,if (field != null ) fieldIsStatic = field.isStatic();
PreorderVisitor.java,Attribute[] attributes = field.getAttributes();,if (field != null ) Attribute[] attributes = field.getAttributes();
PreorderVisitor.java,Field[] fields = obj.getFields();,if (obj != null ) Field[] fields = obj.getFields();
PreorderVisitor.java,Attribute[] attributes = obj.getAttributes();,if (obj != null ) Attribute[] attributes = obj.getAttributes();
PreorderVisitor.java,constantPool = obj.getConstantPool();,if (obj != null ) constantPool = obj.getConstantPool();
PreorderVisitor.java,className = getStringFromIndex(c.getNameIndex());,if (getStringFromIndex(c != null ) className = getStringFromIndex(c.getNameIndex());
PreorderVisitor.java,packageName = obj.getPackageName();,if (obj != null ) packageName = obj.getPackageName();
PreorderVisitor.java,dottedSuperclassName = obj.getSuperclassName();,if (obj != null ) dottedSuperclassName = obj.getSuperclassName();
PreorderVisitor.java,fullyQualifiedMethodName = ref.toString();,if (ref != null ) fullyQualifiedMethodName = ref.toString();
PreorderVisitor.java,methodName = getStringFromIndex(method.getNameIndex());,if (getStringFromIndex(method != null ) methodName = getStringFromIndex(method.getNameIndex());
PreorderVisitor.java,methodSig = getStringFromIndex(method.getSignatureIndex());,if (getStringFromIndex(method != null ) methodSig = getStringFromIndex(method.getSignatureIndex());
PreorderVisitor.java,fieldName = getStringFromIndex(field.getNameIndex());,if (getStringFromIndex(field != null ) fieldName = getStringFromIndex(field.getNameIndex());
PrintClass.java,String name = ze.getName();,if (ze != null ) String name = ze.getName();
Util.java,String ocName = oc.getBytes(obj.getConstantPool());,if (oc != null ) String ocName = oc.getBytes(obj.getConstantPool());
Util.java,Constant catchType = constantPool.getConstant(catchBlock.getCatchType());,if (constantPool != null ) Constant catchType = constantPool.getConstant(catchBlock.getCatchType());
Util.java,int startPC = catchBlock.getStartPC();,if (catchBlock != null ) int startPC = catchBlock.getStartPC();
Util.java,int endPC = catchBlock.getEndPC();,if (catchBlock != null ) int endPC = catchBlock.getEndPC();
Util.java,int endPC = catchBlock.getEndPC();,if (catchBlock != null ) int endPC = catchBlock.getEndPC();
Util.java,LineNumberTable lineNumberTable = code.getLineNumberTable();,if (code != null ) LineNumberTable lineNumberTable = code.getLineNumberTable();
BugHistory.java,String filePart = file.getName();,if (file != null ) String filePart = file.getName();
BugHistory.java,csvRecord = csvRecord.trim();,if (csvRecord != null ) csvRecord = csvRecord.trim();
Churn.java,final long lastVersion = bug.getLastVersion();,if (bug != null ) final long lastVersion = bug.getLastVersion();
Churn.java,long first = bugInstance.getFirstVersion();,if (bugInstance != null ) long first = bugInstance.getFirstVersion();
Churn.java,long last = bugInstance.getLastVersion();,if (bugInstance != null ) long last = bugInstance.getLastVersion();
CloudSyncAndReport.java,Cloud cloud = bugCollection.getCloud();,if (bugCollection != null ) Cloud cloud = bugCollection.getCloud();
CloudSyncAndReport.java,ProjectStats projectStats = bugCollection.getProjectStats();,if (bugCollection != null ) ProjectStats projectStats = bugCollection.getProjectStats();
CloudSyncAndReport.java,Collection<BugInstance> bugs = bugCollection.getCollection();,if (bugCollection != null ) Collection<BugInstance> bugs = bugCollection.getCollection();
CloudSyncAndReport.java,Cloud cloud = bugCollection.getCloud();,if (bugCollection != null ) Cloud cloud = bugCollection.getCloud();
CopyBuggySource.java,Project project = origCollection.getProject();,if (origCollection != null ) Project project = origCollection.getProject();
CopyBuggySource.java,String packageName = sourceAnnotation.getPackageName();,if (sourceAnnotation != null ) String packageName = sourceAnnotation.getPackageName();
CopyBuggySource.java,String sourceFile = sourceAnnotation.getSourceFile();,if (sourceAnnotation != null ) String sourceFile = sourceAnnotation.getSourceFile();
CopyBuggySource.java,File parent = file.getParentFile();,if (file != null ) File parent = file.getParentFile();
CountClassVersions.java,String s = in.readLine();,if (in != null ) String s = in.readLine();
CountClassVersions.java,String name = ze.getName();,if (ze != null ) String name = ze.getName();
DefectDensity.java,"double projectDensity = density(stats.getTotalBugs(),  stats.getCodeSize());","if (stats != null ) double projectDensity = density(stats.getTotalBugs(),  stats.getCodeSize());"
DefectDensity.java,"double packageDensity = density( p.getTotalBugs(),p.size());","if (p != null ) double packageDensity = density( p.getTotalBugs(),p.size());"
DefectDensity.java,"double density = density( c.getTotalBugs(), c.size());","if (c != null ) double density = density( c.getTotalBugs(), c.size());"
FileBugHash.java,String path = cStat.getName();,if (cStat != null ) String path = cStat.getName();
FileBugHash.java,SourceLineAnnotation source = bug.getPrimarySourceLineAnnotation();,if (bug != null ) SourceLineAnnotation source = bug.getPrimarySourceLineAnnotation();
FileBugHash.java,key = source.getSourceFile();,if (source != null ) key = source.getSourceFile();
Filter.java,suppressionFilter = project.getSuppressionFilter();,if (project != null ) suppressionFilter = project.getSuppressionFilter();
Filter.java,AppVersion v = collection.getCurrentAppVersion();,if (collection != null ) AppVersion v = collection.getCurrentAppVersion();
Filter.java,long lastSeen = bug.getLastVersion();,if (bug != null ) long lastSeen = bug.getLastVersion();
Filter.java,lastSeen = collection.getSequenceNumber();,if (collection != null ) lastSeen = collection.getSequenceNumber();
Filter.java,long thisDuration = lastSeen - bug.getFirstVersion();,if (bug != null ) long thisDuration = lastSeen - bug.getFirstVersion();
Filter.java,BugPattern thisBugPattern = bug.getBugPattern();,if (bug != null ) BugPattern thisBugPattern = bug.getBugPattern();
Filter.java,SourceLineAnnotation primarySourceLineAnnotation = bug.getPrimarySourceLineAnnotation();,if (bug != null ) SourceLineAnnotation primarySourceLineAnnotation = bug.getPrimarySourceLineAnnotation();
Filter.java,SortedBugCollection resultCollection = origCollection.createEmptyCollectionWithMetadata();,if (origCollection != null ) SortedBugCollection resultCollection = origCollection.createEmptyCollectionWithMetadata();
Filter.java,Project project = resultCollection.getProject();,if (resultCollection != null ) Project project = resultCollection.getProject();
Filter.java,ProjectStats projectStats = resultCollection.getProjectStats();,if (resultCollection != null ) ProjectStats projectStats = resultCollection.getProjectStats();
Filter.java,AppVersion v = resultCollection.getCurrentAppVersion();,if (resultCollection != null ) AppVersion v = resultCollection.getCurrentAppVersion();
Filter.java,String name = resultCollection.getAppVersionFromSequenceNumber(trimToVersion).getReleaseName();,if (resultCollection != null ) String name = resultCollection.getAppVersionFromSequenceNumber(trimToVersion).getReleaseName();
Filter.java,long timestamp = resultCollection.getAppVersionFromSequenceNumber(trimToVersion).getTimestamp();,if (resultCollection != null ) long timestamp = resultCollection.getAppVersionFromSequenceNumber(trimToVersion).getTimestamp();
Filter.java,Iterator<ClassStats> i = stats.getClassStats().iterator();,if (stats != null ) Iterator<ClassStats> i = stats.getClassStats().iterator();
Filter.java,String className = i.next().getName();,if (i != null ) String className = i.next().getName();
ListBugDatabaseInfo.java,ProjectStats stats = origCollection.getProjectStats();,if (origCollection != null ) ProjectStats stats = origCollection.getProjectStats();
MergeSummarizeAndView.java,SortedBugCollection result = origCollection.duplicate();,if (origCollection != null ) SortedBugCollection result = origCollection.duplicate();
MergeSummarizeAndView.java,ProjectStats stats = result.getProjectStats();,if (result != null ) ProjectStats stats = result.getProjectStats();
MergeSummarizeAndView.java,Project project = result.getProject();,if (result != null ) Project project = result.getProject();
MergeSummarizeAndView.java,isCloudManagedByGui = msv.report();,if (msv != null ) isCloudManagedByGui = msv.report();
MergeSummarizeAndView.java,cloud = results.getCloud();,if (results != null ) cloud = results.getCloud();
MergeSummarizeAndView.java,Project project = results.getProject();,if (results != null ) Project project = results.getProject();
MergeSummarizeAndView.java,originalMode = cloud.getMode();,if (cloud != null ) originalMode = cloud.getMode();
MergeSummarizeAndView.java,scaryBugs = results.createEmptyCollectionWithMetadata();,if (results != null ) scaryBugs = results.createEmptyCollectionWithMetadata();
MergeSummarizeAndView.java,assert cloud == results.getCloud();,if (results != null ) assert cloud == results.getCloud();
MergeSummarizeAndView.java,boolean hasScaryBugs = !scaryBugs.getCollection().isEmpty();,if (!scaryBugs != null ) boolean hasScaryBugs = !scaryBugs.getCollection().isEmpty();
MineBugHistory.java,long sequenceNumber = bugCollection.getSequenceNumber();,if (bugCollection != null ) long sequenceNumber = bugCollection.getSequenceNumber();
MineBugHistory.java,long versionSequenceNumber = appVersion.getSequenceNumber();,if (appVersion != null ) long versionSequenceNumber = appVersion.getSequenceNumber();
MineBugHistory.java,AppVersion currentAppVersion = bugCollection.getCurrentAppVersion();,if (bugCollection != null ) AppVersion currentAppVersion = bugCollection.getCurrentAppVersion();
MineBugHistory.java,AppVersion appVersion = sequenceToAppVersionMap.get(version.getSequence());,if (sequenceToAppVersionMap != null ) AppVersion appVersion = sequenceToAppVersionMap.get(version.getSequence());
MineBugHistory.java,int padLen = width - s.length();,if (s != null ) int padLen = width - s.length();
MineBugHistory.java,AppVersion appVersion = sequenceToAppVersionMap.get(version.getSequence());,if (sequenceToAppVersionMap != null ) AppVersion appVersion = sequenceToAppVersionMap.get(version.getSequence());
MineBugHistory.java,AppVersion appVersion = sequenceToAppVersionMap.get(version.getSequence());,if (sequenceToAppVersionMap != null ) AppVersion appVersion = sequenceToAppVersionMap.get(version.getSequence());
ObfuscateBugs.java,SortedBugCollection results = bugCollection.createEmptyCollectionWithMetadata();,if (bugCollection != null ) SortedBugCollection results = bugCollection.createEmptyCollectionWithMetadata();
ObfuscateBugs.java,Project project = results.getProject();,if (results != null ) Project project = results.getProject();
RebornIssues.java,List<BugInstance> lst = map.get(b.getInstanceHash());,if (map != null ) List<BugInstance> lst = map.get(b.getInstanceHash());
RebornIssues.java,bugPattern = b.getBugPattern().getType();,if (b != null ) bugPattern = b.getBugPattern().getType();
RebornIssues.java,Iterator<Long> aI = additionTimes.iterator();,if (additionTimes != null ) Iterator<Long> aI = additionTimes.iterator();
RebornIssues.java,long a = aI.next();,if (aI != null ) long a = aI.next();
RebornIssues.java,a = aI.next();,if (aI != null ) a = aI.next();
RecursiveSearchForJavaFiles.java,File[] files = next.listFiles();,if (next != null ) File[] files = next.listFiles();
RejarClassesForAnalysis.java,String s = in.readLine();,if (in != null ) String s = in.readLine();
RejarClassesForAnalysis.java,List<String> auxFileList = Collections.emptyList();,if (Collections != null ) List<String> auxFileList = Collections.emptyList();
RejarClassesForAnalysis.java,List<File> inputZipFiles = new ArrayList<File>(fileList.size());,if (ArrayList<File>(fileList != null ) List<File> inputZipFiles = new ArrayList<File>(fileList.size());
RejarClassesForAnalysis.java,List<File> auxZipFiles = new ArrayList<File>(auxFileList.size());,if (ArrayList<File>(auxFileList != null ) List<File> auxZipFiles = new ArrayList<File>(auxFileList.size());
RejarClassesForAnalysis.java,int oldSize = copied.size();,if (copied != null ) int oldSize = copied.size();
RejarClassesForAnalysis.java,String name = ze.getName();,if (ze != null ) String name = ze.getName();
RejarClassesForAnalysis.java,int oldSize = copied.size();,if (copied != null ) int oldSize = copied.size();
RejarClassesForAnalysis.java,String name = ze.getName();,if (ze != null ) String name = ze.getName();
RejarClassesForAnalysis.java,String name = ze.getName();,if (ze != null ) String name = ze.getName();
RejarClassesForAnalysis.java,String name = ze.getName();,if (ze != null ) String name = ze.getName();
SetBugDatabaseInfo.java,Project project = origCollection.getProject();,if (origCollection != null ) Project project = origCollection.getProject();
SetBugDatabaseInfo.java,AppVersion v = origCollection.getCurrentAppVersion();,if (origCollection != null ) AppVersion v = origCollection.getCurrentAppVersion();
SetBugDatabaseInfo.java,long timestamp = origCollection.getAppVersionFromSequenceNumber(last).getTimestamp();,if (origCollection != null ) long timestamp = origCollection.getAppVersionFromSequenceNumber(last).getTimestamp();
SetBugDatabaseInfo.java,SourceLineAnnotation src = bug.getPrimarySourceLineAnnotation();,if (bug != null ) SourceLineAnnotation src = bug.getPrimarySourceLineAnnotation();
SetBugDatabaseInfo.java,Set<String> matchingMissingClasses = missingFiles.get(javaFile.getName());,if (missingFiles != null ) Set<String> matchingMissingClasses = missingFiles.get(javaFile.getName());
SetBugDatabaseInfo.java,String path = javaFile.getAbsolutePath();,if (javaFile != null ) String path = javaFile.getAbsolutePath();
SourceSearcher.java,String cName = srcLine.getClassName();,if (srcLine != null ) String cName = srcLine.getClassName();
TestingGround.java,int first = (int) b.getFirstVersion();,if (b != null ) int first = (int) b.getFirstVersion();
TestingGround.java,finish = (int) bugCollection.getSequenceNumber();,if (bugCollection != null ) finish = (int) bugCollection.getSequenceNumber();
TestingGround.java,String bugPattern = b.getBugPattern().getType();,if (b != null ) String bugPattern = b.getBugPattern().getType();
TestingGround.java,SortedBugCollection results = bugCollection.createEmptyCollectionWithMetadata();,if (bugCollection != null ) SortedBugCollection results = bugCollection.createEmptyCollectionWithMetadata();
TestingGround.java,String bugPattern = b.getBugPattern().getType();,if (b != null ) String bugPattern = b.getBugPattern().getType();
UnionResults.java,SortedBugCollection result = origCollection.duplicate();,if (origCollection != null ) SortedBugCollection result = origCollection.duplicate();
UnionResults.java,ProjectStats stats = result.getProjectStats();,if (result != null ) ProjectStats stats = result.getProjectStats();
UnionResults.java,Project project = result.getProject();,if (result != null ) Project project = result.getProject();
Update.java,long lastSequence = origCollection.getSequenceNumber();,if (origCollection != null ) long lastSequence = origCollection.getSequenceNumber();
Update.java,AppVersion origCollectionVersion = origCollection.getCurrentAppVersion();,if (origCollection != null ) AppVersion origCollectionVersion = origCollection.getCurrentAppVersion();
Update.java,BugInstance newBug = (BugInstance) bug.clone();,if (bug != null ) BugInstance newBug = (BugInstance) bug.clone();
Update.java,BugInstance newBug = (BugInstance) bug.clone();,if (bug != null ) BugInstance newBug = (BugInstance) bug.clone();
Update.java,ClassAnnotation classBugFoundIn = bug.getPrimaryClass();,if (bug != null ) ClassAnnotation classBugFoundIn = bug.getPrimaryClass();
Update.java,String className = classBugFoundIn.getClassName();,if (classBugFoundIn != null ) String className = classBugFoundIn.getClassName();
Update.java,String sourceFile = classBugFoundIn.getSourceFileName();,if (classBugFoundIn != null ) String sourceFile = classBugFoundIn.getSourceFileName();
Update.java,BugInstance newBug = (BugInstance) bug.clone();,if (bug != null ) BugInstance newBug = (BugInstance) bug.clone();
Update.java,BugDesignation designation = newBug.getUserDesignation();,if (newBug != null ) BugDesignation designation = newBug.getUserDesignation();
Update.java,ClassAnnotation classBugFoundIn = bug.getPrimaryClass();,if (bug != null ) ClassAnnotation classBugFoundIn = bug.getPrimaryClass();
Update.java,String className = classBugFoundIn.getClassName();,if (classBugFoundIn != null ) String className = classBugFoundIn.getClassName();
Update.java,int oldSize = resultCollection.getCollection().size();,if (resultCollection != null ) int oldSize = resultCollection.getCollection().size();
Update.java,int newSize = resultCollection.getCollection().size();,if (resultCollection != null ) int newSize = resultCollection.getCollection().size();
Dom4JXMLOutput.java,Branch top = stack.getLast();,if (stack != null ) Branch top = stack.getLast();
Dom4JXMLOutput.java,Branch top = stack.getLast();,if (stack != null ) Branch top = stack.getLast();
Dom4JXMLOutput.java,Branch top = stack.getLast();,if (stack != null ) Branch top = stack.getLast();
Dom4JXMLOutput.java,Element element = (Element) stack.getLast();,if (stack != null ) Element element = (Element) stack.getLast();
Dom4JXMLOutput.java,Element top = (Element) stack.getLast();,if (stack != null ) Element top = (Element) stack.getLast();
Dom4JXMLOutput.java,Element top = (Element) stack.getLast();,if (stack != null ) Element top = (Element) stack.getLast();
OutputStreamXMLOutput.java,attributes = attributes.trim();,if (attributes != null ) attributes = attributes.trim();
QuoteMetaCharacters.java,pos = text.length();,if (text != null ) pos = text.length();
XPathFind.java,Attribute attribute = (Attribute) i.next();,if (i != null ) Attribute attribute = (Attribute) i.next();
AnnotatedString.java,JButton button = new JButton(as.toString());,if (JButton(as != null ) JButton button = new JButton(as.toString());
AboutDialog.java,String text = buf.toString();,if (buf != null ) String text = buf.toString();
AboutDialog.java,aboutTabPane = new javax.swing.JTabbedPane();,if (javax != null ) aboutTabPane = new javax.swing.JTabbedPane();
AboutDialog.java,aboutScrollPane = new javax.swing.JScrollPane();,if (javax != null ) aboutScrollPane = new javax.swing.JScrollPane();
AboutDialog.java,aboutEditorPane = new javax.swing.JEditorPane();,if (javax != null ) aboutEditorPane = new javax.swing.JEditorPane();
AboutDialog.java,licenseEditorPane = new javax.swing.JEditorPane();,if (javax != null ) licenseEditorPane = new javax.swing.JEditorPane();
AboutDialog.java,acknowledgmentsScrollPane = new javax.swing.JScrollPane();,if (javax != null ) acknowledgmentsScrollPane = new javax.swing.JScrollPane();
AboutDialog.java,acknowldgementsEditorPane = new javax.swing.JEditorPane();,if (javax != null ) acknowldgementsEditorPane = new javax.swing.JEditorPane();
AboutDialog.java,okButton = new javax.swing.JButton();,if (javax != null ) okButton = new javax.swing.JButton();
AboutDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
AboutDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
AboutDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
AnalyzingDialog.java,MainFrame instance = MainFrame.getInstance();,if (MainFrame != null ) MainFrame instance = MainFrame.getInstance();
AnalyzingDialog.java,MainFrame instance = MainFrame.getInstance();,if (MainFrame != null ) MainFrame instance = MainFrame.getInstance();
BugLoader.java,Cloud cloud = col.getCloud();,if (col != null ) Cloud cloud = col.getCloud();
BugLoader.java,Filter suppressionMatcher = project.getSuppressionFilter();,if (project != null ) Filter suppressionMatcher = project.getSuppressionFilter();
BugLoader.java,BugSet oldSet=BugSet.getMainBugSet();,if (oldSet=BugSet != null ) BugSet oldSet=BugSet.getMainBugSet();
BugLoader.java,BugCollection current= MainFrame.getInstance().getBugCollection();//Now we should no longer get this December 31st 1969 business.,if (business != null ) BugCollection current= MainFrame.getInstance().getBugCollection();//Now we should no longer get this December 31st 1969 business.
BugLoader.java,BugInstance bug=node.getBug();,if (bug=node != null ) BugInstance bug=node.getBug();
BugSaver.java,lastPlaceSaved=out.getAbsolutePath();,if (lastPlaceSaved=out != null ) lastPlaceSaved=out.getAbsolutePath();
BugSet.java,BugInstance bugTwo = two.getBug();,if (two != null ) BugInstance bugTwo = two.getBug();
BugSet.java,SourceLineAnnotation oneSource = bugOne.getPrimarySourceLineAnnotation();,if (bugOne != null ) SourceLineAnnotation oneSource = bugOne.getPrimarySourceLineAnnotation();
BugSet.java,SourceLineAnnotation twoSource = bugTwo.getPrimarySourceLineAnnotation();,if (bugTwo != null ) SourceLineAnnotation twoSource = bugTwo.getPrimarySourceLineAnnotation();
BugSet.java,"result = compare(oneSource.getStartLine(), twoSource.getStartLine());","if (twoSource != null ) result = compare(oneSource.getStartLine(), twoSource.getStartLine());"
BugSet.java,"result = compare(oneSource.getEndLine(), twoSource.getEndLine());","if (twoSource != null ) result = compare(oneSource.getEndLine(), twoSource.getEndLine());"
BugSet.java,"result = compare(oneSource.getEndBytecode(), twoSource.getEndBytecode());","if (twoSource != null ) result = compare(oneSource.getEndBytecode(), twoSource.getEndBytecode());"
BugTreeModel.java,int treeLevels = st.getOrderBeforeDivider().size();,if (st != null ) int treeLevels = st.getOrderBeforeDivider().size();
BugTreeModel.java,Object[] objPath=path.getParentPath().getPath();,if (objPath=path != null ) Object[] objPath=path.getParentPath().getPath();
BugTreeModel.java,pathToFirstDeleted=pathToFirstDeleted.pathByAddingChild(path.getLastPathComponent());,if (pathToFirstDeleted=pathToFirstDeleted != null ) pathToFirstDeleted=pathToFirstDeleted.pathByAddingChild(path.getLastPathComponent());
BugTreeModel.java,Object parent=pathToFirstDeleted.getParentPath().getLastPathComponent();,if (parent=pathToFirstDeleted != null ) Object parent=pathToFirstDeleted.getParentPath().getLastPathComponent();
BugTreeModel.java,Object child=pathToFirstDeleted.getLastPathComponent();,if (child=pathToFirstDeleted != null ) Object child=pathToFirstDeleted.getLastPathComponent();
BugTreeModel.java,Object[] objPath=path.getParentPath().getPath();,if (objPath=path != null ) Object[] objPath=path.getParentPath().getPath();
BugTreeModel.java,path=new TreePath(reconstruct.toArray());,if (TreePath(reconstruct != null ) path=new TreePath(reconstruct.toArray());
BugTreeModel.java,Object child = path.getLastPathComponent();,if (path != null ) Object child = path.getLastPathComponent();
BugTreeModel.java,List<Sortables> order=st.getOrderBeforeDivider();,if (order=st != null ) List<Sortables> order=st.getOrderBeforeDivider();
BugTreeModel.java,BugAspects parent=(BugAspects) pathToBranch.getLastPathComponent();,if (pathToBranch != null ) BugAspects parent=(BugAspects) pathToBranch.getLastPathComponent();
CheckBoxList.java,int index = locationToIndex(e.getPoint());,if (locationToIndex(e != null ) int index = locationToIndex(e.getPoint());
CommentsArea.java,BugCollection bc = getMainFrame().getBugCollection();,if (getMainFrame() != null ) BugCollection bc = getMainFrame().getBugCollection();
CommentsArea.java,userCommentsTextUnenabledColor = centerPanel.getBackground();,if (centerPanel != null ) userCommentsTextUnenabledColor = centerPanel.getBackground();
CommentsArea.java,boolean b = frame.getProjectChanged();,if (frame != null ) boolean b = frame.getProjectChanged();
CommentsArea.java,boolean b = frame.getProjectChanged();,if (frame != null ) boolean b = frame.getProjectChanged();
CommentsArea.java,boolean b = frame.getProjectChanged();,if (frame != null ) boolean b = frame.getProjectChanged();
CommentsArea.java,final BugInstance bug = node.getBug();,if (node != null ) final BugInstance bug = node.getBug();
CommentsArea.java,BugCollection bugCollection = MainFrame.getInstance().getBugCollection();,if (MainFrame != null ) BugCollection bugCollection = MainFrame.getInstance().getBugCollection();
CommentsArea.java,String oldValue = bug.getUserDesignationKey();,if (bug != null ) String oldValue = bug.getUserDesignationKey();
CommentsArea.java,final BugInstance bug = theNode.getBug();,if (theNode != null ) final BugInstance bug = theNode.getBug();
CommentsArea.java,BugInstance bug = frame.getCurrentSelectedBugLeaf().getBug();,if (frame != null ) BugInstance bug = frame.getCurrentSelectedBugLeaf().getBug();
CommentsArea.java,BugSet filteredSet = theAspects.getMatchingBugs(BugSet.getMainBugSet());,if (theAspects != null ) BugSet filteredSet = theAspects.getMatchingBugs(BugSet.getMainBugSet());
CommentsArea.java,int itemCount = designationComboBox.getItemCount();,if (designationComboBox != null ) int itemCount = designationComboBox.getItemCount();
CommentsArea.java,MainFrame instance = MainFrame.getInstance();,if (MainFrame != null ) MainFrame instance = MainFrame.getInstance();
CommentsArea.java,BugCollection bugCollection = instance.getBugCollection();,if (instance != null ) BugCollection bugCollection = instance.getBugCollection();
DisplayNonmodelMessage.java,Container contentPane = messageFrame.getContentPane();,if (messageFrame != null ) Container contentPane = messageFrame.getContentPane();
FilterMatcher.java,SortableStringComparator ssc = filterBy.getComparator();,if (filterBy != null ) SortableStringComparator ssc = filterBy.getComparator();
GUI2CommandLine.java,theme = UIManager.getSystemLookAndFeelClassName();,if (UIManager != null ) theme = UIManager.getSystemLookAndFeelClassName();
GUISaveState.java,int size=recentFiles.size();,if (size=recentFiles != null ) int size=recentFiles.size();
MainFrame.java,float size = Driver.getFontSize();,if (Driver != null ) float size = Driver.getFontSize();
MainFrame.java,int countFilteredBugs = BugSet.countFilteredBugs();,if (BugSet != null ) int countFilteredBugs = BugSet.countFilteredBugs();
MainFrame.java,String pluginMsg = cloud.getStatusMsg();,if (cloud != null ) String pluginMsg = cloud.getStatusMsg();
MainFrame.java,SigninState state = cloud.getSigninState();,if (cloud != null ) SigninState state = cloud.getSigninState();
MainFrame.java,GUISaveState guiSaveState = GUISaveState.getInstance();,if (GUISaveState != null ) GUISaveState guiSaveState = GUISaveState.getInstance();
MainFrame.java,Cloud cloud = this.bugCollection.getCloud();,if (this != null ) Cloud cloud = this.bugCollection.getCloud();
MainFrame.java,Project project = bugs.getProject();,if (bugs != null ) Project project = bugs.getProject();
MainFrame.java,Filter suppressionMatcher = project.getSuppressionFilter();,if (project != null ) Filter suppressionMatcher = project.getSuppressionFilter();
MainFrame.java,Cloud plugin = this.bugCollection.getCloud();,if (this != null ) Cloud plugin = this.bugCollection.getCloud();
MainFrame.java,Cloud plugin = bugCollection.getCloud();,if (bugCollection != null ) Cloud plugin = bugCollection.getCloud();
MainFrame.java,Filter suppressionFilter = project.getSuppressionFilter();,if (project != null ) Filter suppressionFilter = project.getSuppressionFilter();
MainFrame.java,List<String> fileList = curProject.getFileList();,if (curProject != null ) List<String> fileList = curProject.getFileList();
MainFrame.java,Cloud cloud = this.bugCollection.getCloud();,if (this != null ) Cloud cloud = this.bugCollection.getCloud();
MainFrame.java,String oldTitle = this.getTitle();,if (this != null ) String oldTitle = this.getTitle();
MainFrame.java,Filter suppressionFilter = project.getSuppressionFilter();,if (project != null ) Filter suppressionFilter = project.getSuppressionFilter();
MainFrame.java,final BugInstance bug = node.getBug();,if (node != null ) final BugInstance bug = node.getBug();
MainFrame.java,String targetString = sourceSearchTextField.getText();,if (sourceSearchTextField != null ) String targetString = sourceSearchTextField.getText();
MainFrameComponentFactory.java,boolean checked = signInAuto.isSelected();,if (signInAuto != null ) boolean checked = signInAuto.isSelected();
MainFrameComponentFactory.java,int fontSize = (int) Driver.getFontSize();,if (Driver != null ) int fontSize = (int) Driver.getFontSize();
MainFrameComponentFactory.java,JScrollPane sourceCodeScrollPane = new JScrollPane(mainFrame.getSourceCodeTextPane());,if (JScrollPane(mainFrame != null ) JScrollPane sourceCodeScrollPane = new JScrollPane(mainFrame.getSourceCodeTextPane());
MainFrameComponentFactory.java,JComponent label = mainFrame.getGuiLayout().getSourceViewComponent();,if (mainFrame != null ) JComponent label = mainFrame.getGuiLayout().getSourceViewComponent();
MainFrameComponentFactory.java,Cloud plugin = mainFrame.getBugCollection().getCloud();,if (mainFrame != null ) Cloud plugin = mainFrame.getBugCollection().getCloud();
MainFrameComponentFactory.java,Cloud plugin = mainFrame.getBugCollection().getCloud();,if (mainFrame != null ) Cloud plugin = mainFrame.getBugCollection().getCloud();
MainFrameComponentFactory.java,ClassAnnotation primaryClass = bug.getPrimaryClass();,if (bug != null ) ClassAnnotation primaryClass = bug.getPrimaryClass();
MainFrameComponentFactory.java,int start = link.getStartLine();,if (link != null ) int start = link.getStartLine();
MainFrameComponentFactory.java,int end = link.getEndLine();,if (link != null ) int end = link.getEndLine();
MainFrameComponentFactory.java,final SourceLineAnnotation link = note.getSourceLines();,if (note != null ) final SourceLineAnnotation link = note.getSourceLines();
MainFrameComponentFactory.java,int start = link.getStartLine();,if (link != null ) int start = link.getStartLine();
MainFrameComponentFactory.java,int end = link.getEndLine();,if (link != null ) int end = link.getEndLine();
MainFrameComponentFactory.java,noteText = note.toString();,if (note != null ) noteText = note.toString();
MainFrameComponentFactory.java,SourceLineAnnotation link = bug.getPrimarySourceLineAnnotation();,if (bug != null ) SourceLineAnnotation link = bug.getPrimarySourceLineAnnotation();
MainFrameComponentFactory.java,JToolTip tempToolTip = mainFrame.mainFrameTree.getTableheader().createToolTip();,if (mainFrame != null ) JToolTip tempToolTip = mainFrame.mainFrameTree.getTableheader().createToolTip();
MainFrameLoadSaveHelper.java,f = filterOpenFileChooser.getSelectedFile();,if (filterOpenFileChooser != null ) f = filterOpenFileChooser.getSelectedFile();
MainFrameLoadSaveHelper.java,filter = Filter.parseFilter(f.getPath());,if (Filter != null ) filter = Filter.parseFilter(f.getPath());
MainFrameLoadSaveHelper.java,fileType = convertFilterToType(saveOpenFileChooser.getFileFilter());,if (convertFilterToType(saveOpenFileChooser != null ) fileType = convertFilterToType(saveOpenFileChooser.getFileFilter());
MainFrameLoadSaveHelper.java,final File f = saveOpenFileChooser.getSelectedFile();,if (saveOpenFileChooser != null ) final File f = saveOpenFileChooser.getSelectedFile();
MainFrameLoadSaveHelper.java,f = filterOpenFileChooser.getSelectedFile();,if (filterOpenFileChooser != null ) f = filterOpenFileChooser.getSelectedFile();
MainFrameLoadSaveHelper.java,Filter suppressionFilter = mainFrame.getProject().getSuppressionFilter();,if (mainFrame != null ) Filter suppressionFilter = mainFrame.getProject().getSuppressionFilter();
MainFrameLoadSaveHelper.java,fileType = convertFilterToType(saveOpenFileChooser.getFileFilter());,if (convertFilterToType(saveOpenFileChooser != null ) fileType = convertFilterToType(saveOpenFileChooser.getFileFilter());
MainFrameLoadSaveHelper.java,f = saveOpenFileChooser.getSelectedFile();,if (saveOpenFileChooser != null ) f = saveOpenFileChooser.getSelectedFile();
MainFrameLoadSaveHelper.java,File sFile = mainFrame.getSaveFile();,if (mainFrame != null ) File sFile = mainFrame.getSaveFile();
MainFrameLoadSaveHelper.java,BugCollection bc = BugLoader.combineBugHistories();,if (BugLoader != null ) BugCollection bc = BugLoader.combineBugHistories();
MainFrameMenu.java,JMenu windowMenu = mainFrame.getGuiLayout().createWindowMenu();,if (mainFrame != null ) JMenu windowMenu = mainFrame.getGuiLayout().createWindowMenu();
MainFrameMenu.java,JRadioButtonMenuItem rbMenuItem = new JRadioButtonMenuItem(r.toString());,if (JRadioButtonMenuItem(r != null ) JRadioButtonMenuItem rbMenuItem = new JRadioButtonMenuItem(r.toString());
MainFrameMenu.java,JRadioButtonMenuItem rbMenuItem = new JRadioButtonMenuItem(r.toString());,if (JRadioButtonMenuItem(r != null ) JRadioButtonMenuItem rbMenuItem = new JRadioButtonMenuItem(r.toString());
MainFrameMenu.java,JRadioButtonMenuItem rbMenuItem = new JRadioButtonMenuItem(r.toString());,if (JRadioButtonMenuItem(r != null ) JRadioButtonMenuItem rbMenuItem = new JRadioButtonMenuItem(r.toString());
MainFrameMenu.java,JRadioButtonMenuItem rbMenuItem = new JRadioButtonMenuItem(r.toString());,if (JRadioButtonMenuItem(r != null ) JRadioButtonMenuItem rbMenuItem = new JRadioButtonMenuItem(r.toString());
MainFrameMenu.java,ArrayList<File> xmlFiles = GUISaveState.getInstance().getRecentFiles();,if (GUISaveState != null ) ArrayList<File> xmlFiles = GUISaveState.getInstance().getRecentFiles();
MainFrameMenu.java,File s = mainFrame.getSaveFile();,if (mainFrame != null ) File s = mainFrame.getSaveFile();
MainFrameTree.java,List<Sortables> sortables = sorter.getOrderBeforeDivider();,if (sorter != null ) List<Sortables> sortables = sorter.getOrderBeforeDivider();
MainFrameTree.java,BugSet bs = new BugSet(mainFrame.getBugCollection());,if (BugSet(mainFrame != null ) BugSet bs = new BugSet(mainFrame.getBugCollection());
MainFrameTree.java,deletePath = deletePath.getParentPath();,if (deletePath != null ) deletePath = deletePath.getParentPath();
MainFrameTree.java,Matcher m = mainFrame.getCurrentSelectedBugAspects().getMatcher();,if (mainFrame != null ) Matcher m = mainFrame.getCurrentSelectedBugAspects().getMatcher();
MainFrameTree.java,BugTreeModel model = MainFrame.getInstance().getBugTreeModel();,if (MainFrame != null ) BugTreeModel model = MainFrame.getInstance().getBugTreeModel();
MainFrameTree.java,Matcher m = mainFrame.getCurrentSelectedBugAspects().getMatcher();,if (mainFrame != null ) Matcher m = mainFrame.getCurrentSelectedBugAspects().getMatcher();
MainFrameTree.java,int rows = jTree.getRowCount();,if (jTree != null ) int rows = jTree.getRowCount();
MainFrameTree.java,int rows = jTree.getRowCount();,if (jTree != null ) int rows = jTree.getRowCount();
MainFrameTree.java,Object lastPathComponent = treePath.getLastPathComponent();,if (treePath != null ) Object lastPathComponent = treePath.getLastPathComponent();
MainFrameTree.java,int rows = jTree.getRowCount();,if (jTree != null ) int rows = jTree.getRowCount();
MainFrameTree.java,Object lastPathComponent = treePath.getLastPathComponent();,if (treePath != null ) Object lastPathComponent = treePath.getLastPathComponent();
MainFrameTree.java,sorter = GUISaveState.getInstance().getStarterTable();,if (GUISaveState != null ) sorter = GUISaveState.getInstance().getStarterTable();
MainFrameTree.java,CardLayout layout = (CardLayout) cardPanel.getLayout();,if (cardPanel != null ) CardLayout layout = (CardLayout) cardPanel.getLayout();
MainFrameTree.java,TreePath path = selectionEvent.getNewLeadSelectionPath();,if (selectionEvent != null ) TreePath path = selectionEvent.getNewLeadSelectionPath();
MainFrameTree.java,Object lastPathComponent = path.getLastPathComponent();,if (path != null ) Object lastPathComponent = path.getLastPathComponent();
MainFrameTree.java,boolean beforeProjectChanged = mainFrame.isProjectChanged();,if (mainFrame != null ) boolean beforeProjectChanged = mainFrame.isProjectChanged();
MainFrameTree.java,boolean beforeProjectChanged = mainFrame.isProjectChanged();,if (mainFrame != null ) boolean beforeProjectChanged = mainFrame.isProjectChanged();
MainFrameTree.java,TreePath path = event.getPath();,if (event != null ) TreePath path = event.getPath();
MainFrameTree.java,Object lastPathComponent = path.getLastPathComponent();,if (path != null ) Object lastPathComponent = path.getLastPathComponent();
NewFilterFrame.java,Sortables[] sortables = MainFrame.getInstance().getAvailableSortables();,if (MainFrame != null ) Sortables[] sortables = MainFrame.getInstance().getAvailableSortables();
NewFilterFrame.java,String[] listData = filterBy.getAllSorted();,if (filterBy != null ) String[] listData = filterBy.getAllSorted();
NewFilterFrame.java,Sortables key = (Sortables) comboBox.getSelectedItem();,if (comboBox != null ) Sortables key = (Sortables) comboBox.getSelectedItem();
NewFilterFrame.java,String[] values = key.getAllSorted();,if (key != null ) String[] values = key.getAllSorted();
NewFilterFrame.java,Sortables key = (Sortables) comboBox.getSelectedItem();,if (comboBox != null ) Sortables key = (Sortables) comboBox.getSelectedItem();
NewFilterFrame.java,String[] values = key.getAllSorted();,if (key != null ) String[] values = key.getAllSorted();
NewProjectWizard.java,cloudId = project.getCloudId();,if (project != null ) cloudId = project.getCloudId();
NewProjectWizard.java,oldCloudId = project.getCloudId();,if (project != null ) oldCloudId = project.getCloudId();
NewProjectWizard.java,CloudPlugin cloudPlugin = (CloudPlugin) cloudSelector.getSelectedItem();,if (cloudSelector != null ) CloudPlugin cloudPlugin = (CloudPlugin) cloudSelector.getSelectedItem();
NewProjectWizard.java,BugCollection bugs = MainFrame.getInstance().getBugCollection();,if (MainFrame != null ) BugCollection bugs = MainFrame.getInstance().getBugCollection();
NewProjectWizard.java,File[] selectedFiles = chooser.getSelectedFiles();,if (chooser != null ) File[] selectedFiles = chooser.getSelectedFiles();
NewProjectWizard.java,int width = super.getWidth();,if (super != null ) int width = super.getWidth();
PreferencesFrame.java,float currFS = Driver.getFontSize();,if (Driver != null ) float currFS = Driver.getFontSize();
PreferencesFrame.java,fontSize = Float.parseFloat(fontTextField.getText());,if (Float != null ) fontSize = Float.parseFloat(fontTextField.getText());
PreferencesFrame.java,value = Integer.parseInt(packagePrefixLengthTextField.getText());,if (Integer != null ) value = Integer.parseInt(packagePrefixLengthTextField.getText());
ProjectSettings.java,FilterMatcher[] filtersInStack=theSame.getFilters();,if (filtersInStack=theSame != null ) FilterMatcher[] filtersInStack=theSame.getFilters();
ProjectSettings.java,BugTreeModel model=(MainFrame.getInstance().getBugTreeModel());,if (model=(MainFrame != null ) BugTreeModel model=(MainFrame.getInstance().getBugTreeModel());
Sortables.java,BugCollection bugCollection = MainFrame.getInstance().getBugCollection();,if (MainFrame != null ) BugCollection bugCollection = MainFrame.getInstance().getBugCollection();
Sortables.java,BugCollection bugCollection = mainframe.getBugCollection();,if (mainframe != null ) BugCollection bugCollection = mainframe.getBugCollection();
Sortables.java,BugCollection bugCollection = MainFrame.getInstance().getBugCollection();,if (MainFrame != null ) BugCollection bugCollection = MainFrame.getInstance().getBugCollection();
Sortables.java,BugCollection bugCollection = mainframe.getBugCollection();,if (mainframe != null ) BugCollection bugCollection = mainframe.getBugCollection();
Sortables.java,long sequenceNumber = bugCollection.getCurrentAppVersion().getSequenceNumber();,if (bugCollection != null ) long sequenceNumber = bugCollection.getCurrentAppVersion().getSequenceNumber();
Sortables.java,BugCollection bugCollection = mainframe.getBugCollection();,if (mainframe != null ) BugCollection bugCollection = mainframe.getBugCollection();
Sortables.java,int count = GUISaveState.getInstance().getPackagePrefixSegments();,if (GUISaveState != null ) int count = GUISaveState.getInstance().getPackagePrefixSegments();
Sortables.java,String packageName = bug.getPrimarySourceLineAnnotation().getPackageName();,if (bug != null ) String packageName = bug.getPrimarySourceLineAnnotation().getPackageName();
Sortables.java,BugPattern bugPattern = bug.getBugPattern();,if (bug != null ) BugPattern bugPattern = bug.getBugPattern();
Sortables.java,BugPattern bugPattern = bug.getBugPattern();,if (bug != null ) BugPattern bugPattern = bug.getBugPattern();
Sortables.java,BugCollection bugCollection = mf.getBugCollection();,if (mf != null ) BugCollection bugCollection = mf.getBugCollection();
Sortables.java,BugCollection bugCollection = MainFrame.getInstance().getBugCollection();,if (MainFrame != null ) BugCollection bugCollection = MainFrame.getInstance().getBugCollection();
Sortables.java,ProjectPackagePrefixes p = MainFrame.getInstance().getProjectPackagePrefixes();,if (MainFrame != null ) ProjectPackagePrefixes p = MainFrame.getInstance().getProjectPackagePrefixes();
Sortables.java,String result = projects.toString();,if (projects != null ) String result = projects.toString();
SorterDialog.java,SorterTableColumnModel sorter = MainFrame.getInstance().getSorter();,if (MainFrame != null ) SorterTableColumnModel sorter = MainFrame.getInstance().getSorter();
SorterTableColumnModel.java,MainFrame mainFrame = MainFrame.getInstance();,if (MainFrame != null ) MainFrame mainFrame = MainFrame.getInstance();
SorterTableColumnModel.java,MainFrame mainFrame = MainFrame.getInstance();,if (MainFrame != null ) MainFrame mainFrame = MainFrame.getInstance();
SorterTableColumnModel.java,private TableCellRenderer defaultRenderer = new JTableHeader().getDefaultRenderer();,if (JTableHeader() != null ) private TableCellRenderer defaultRenderer = new JTableHeader().getDefaultRenderer();
SorterTableColumnModel.java,XPosition-=tc.getWidth();,if (XPosition-=tc != null ) XPosition-=tc.getWidth();
SorterTableColumnModel.java,total+=tc.getWidth();,if (total+=tc != null ) total+=tc.getWidth();
SorterTableColumnModel.java,int index=dlsm.getMinSelectionIndex();,if (index=dlsm != null ) int index=dlsm.getMinSelectionIndex();
SourceCodeDisplay.java,String fullFileName = sourceFile.getFullFileName();,if (sourceFile != null ) String fullFileName = sourceFile.getFullFileName();
SourceCodeDisplay.java,result = resultReference.get();,if (resultReference != null ) result = resultReference.get();
SourceCodeDisplay.java,InputStream in = sourceFile.getInputStream();,if (sourceFile != null ) InputStream in = sourceFile.getInputStream();
SourceCodeDisplay.java,String primaryKind = mySourceLine.getDescription();,if (mySourceLine != null ) String primaryKind = mySourceLine.getDescription();
SourceCodeDisplay.java,String sourceFile = thisSource.getSourceFile();,if (thisSource != null ) String sourceFile = thisSource.getSourceFile();
SourceCodeDisplay.java,int startLine = thisSource.getStartLine();,if (thisSource != null ) int startLine = thisSource.getStartLine();
SourceCodeDisplay.java,int endLine = thisSource.getEndLine();,if (thisSource != null ) int endLine = thisSource.getEndLine();
SourceCodeDisplay.java,int otherLine = sourceAnnotation.getStartLine();,if (sourceAnnotation != null ) int otherLine = sourceAnnotation.getStartLine();
SourceCodeDisplay.java,int startLine = sourceAnnotation.getStartLine();,if (sourceAnnotation != null ) int startLine = sourceAnnotation.getStartLine();
SourceCodeDisplay.java,String sourceFile = sourceAnnotation.getSourcePath();,if (sourceAnnotation != null ) String sourceFile = sourceAnnotation.getSourcePath();
SourceCodeDisplay.java,int targetLen = target.length();,if (target != null ) int targetLen = target.length();
SourceCodeDisplay.java,int sourceLen = docContent.length();,if (docContent != null ) int sourceLen = docContent.length();
SourceDirectoryWizard.java,File[] selectedFiles = chooser.getSelectedFiles();,if (chooser != null ) File[] selectedFiles = chooser.getSelectedFiles();
SplashFrame.java,Toolkit toolkit = Toolkit.getDefaultToolkit();,if (Toolkit != null ) Toolkit toolkit = Toolkit.getDefaultToolkit();
SplitLayout.java,int position = topLeftSPane.getDividerLocation();,if (topLeftSPane != null ) int position = topLeftSPane.getDividerLocation();
SplitLayout.java,Font buttonFont = viewSource.getFont();,if (viewSource != null ) Font buttonFont = viewSource.getFont();
SplitLayout.java,summarySPane = frame.summaryTab();,if (frame != null ) summarySPane = frame.summaryTab();
SpringUtilities.java,layout = (SpringLayout)parent.getLayout();,if ((SpringLayout)parent != null ) layout = (SpringLayout)parent.getLayout();
SpringUtilities.java,"maxWidthSpring = Spring.max(maxWidthSpring, cons.getWidth());","if (cons != null ) maxWidthSpring = Spring.max(maxWidthSpring, cons.getWidth());"
SpringUtilities.java,"maxHeightSpring = Spring.max(maxHeightSpring, cons.getHeight());","if (cons != null ) maxHeightSpring = Spring.max(maxHeightSpring, cons.getHeight());"
SpringUtilities.java,SpringLayout layout = (SpringLayout) parent.getLayout();,if (parent != null ) SpringLayout layout = (SpringLayout) parent.getLayout();
SpringUtilities.java,layout = (SpringLayout)parent.getLayout();,if ((SpringLayout)parent != null ) layout = (SpringLayout)parent.getLayout();
StackedFilterMatcher.java,FilterMatcher[] filtersInStack=theSame.getFilters();,if (filtersInStack=theSame != null ) FilterMatcher[] filtersInStack=theSame.getFilters();
ViewFilter.java,Cloud c = mf.getBugCollection().getCloud();,if (mf != null ) Cloud c = mf.getBugCollection().getCloud();
ViewFilter.java,Cloud c = mf.getBugCollection().getCloud();,if (mf != null ) Cloud c = mf.getBugCollection().getCloud();
ViewFilter.java,String className = b.getPrimaryClass().getClassName();,if (b != null ) String className = b.getPrimaryClass().getClassName();
JavaScanner.java,char c = iterator.current();,if (iterator != null ) char c = iterator.current();
JavaScanner.java,c = iterator.current();,if (iterator != null ) c = iterator.current();
JavaScanner.java,c = iterator.next();,if (iterator != null ) c = iterator.next();
JavaSourceDocument.java,root = doc.getDefaultRootElement();,if (doc != null ) root = doc.getDefaultRootElement();
JavaSourceDocument.java,Toolkit toolkit = Toolkit.getDefaultToolkit();,if (Toolkit != null ) Toolkit toolkit = Toolkit.getDefaultToolkit();
JavaSourceDocument.java,int tabSize = GUISaveState.getInstance().getTabSize();,if (GUISaveState != null ) int tabSize = GUISaveState.getInstance().getTabSize();
NavigableTextPane.java,int y = pq.remove();,if (pq != null ) int y = pq.remove();
NumberedParagraphView.java,String lineNumberString = lineNumber.toString();,if (lineNumber != null ) String lineNumberString = lineNumber.toString();
NumberedParagraphView.java,int numberY = r.y + metrics.getAscent();,if (metrics != null ) int numberY = r.y + metrics.getAscent();
NumberedParagraphView.java,View parent = this.getParent();,if (this != null ) View parent = this.getParent();
NumberedParagraphView.java,lineCount += parent.getView(i).getViewCount();,if (parent != null ) lineCount += parent.getView(i).getViewCount();
NumberedParagraphView.java,Element element = this.getElement();,if (this != null ) Element element = this.getElement();
NumberedParagraphView.java,int count = parent.getElementCount();,if (parent != null ) int count = parent.getElementCount();
NumberedViewFactory.java,String kind = elem.getName();,if (elem != null ) String kind = elem.getName();
BugInstanceTest.java,BugProperty prop = iter.next();,if (iter != null ) BugProperty prop = iter.next();
DetectorsTest.java,UserPreferences preferences = UserPreferences.createDefaultUserPreferences();,if (UserPreferences != null ) UserPreferences preferences = UserPreferences.createDefaultUserPreferences();
FindBugsTestCase.java,detectorAdapter = JUnitDetectorAdapter.instance();,if (JUnitDetectorAdapter != null ) detectorAdapter = JUnitDetectorAdapter.instance();
SignatureParserTest.java,Iterator<String> i = noParams.parameterSignatureIterator();,if (noParams != null ) Iterator<String> i = noParams.parameterSignatureIterator();
SignatureParserTest.java,Iterator<String> i = manyParams.parameterSignatureIterator();,if (manyParams != null ) Iterator<String> i = manyParams.parameterSignatureIterator();
Subtypes2Test.java,typeDynamicString = new FindRefComparison.DynamicStringType();,if (FindRefComparison != null ) typeDynamicString = new FindRefComparison.DynamicStringType();
Subtypes2Test.java,typeParameterString = new FindRefComparison.ParameterStringType();,if (FindRefComparison != null ) typeParameterString = new FindRefComparison.ParameterStringType();
TestGenericSignatureParser.java,Iterator<String> iter = parser.parameterSignatureIterator();,if (parser != null ) Iterator<String> iter = parser.parameterSignatureIterator();
IsNullValueTest.java,IsNullValue nullValue = IsNullValue.nullValue();,if (IsNullValue != null ) IsNullValue nullValue = IsNullValue.nullValue();
IsNullValueTest.java,IsNullValue nullExceptionValue = IsNullValue.nullValue().toExceptionValue();,if (IsNullValue != null ) IsNullValue nullExceptionValue = IsNullValue.nullValue().toExceptionValue();
IsNullValueTest.java,IsNullValue nullExceptionValue = IsNullValue.nullValue().toExceptionValue();,if (IsNullValue != null ) IsNullValue nullExceptionValue = IsNullValue.nullValue().toExceptionValue();
IsNullValueTest.java,IsNullValue nonNullValue = IsNullValue.nonNullValue();,if (IsNullValue != null ) IsNullValue nonNullValue = IsNullValue.nonNullValue();
IsNullValueTest.java,IsNullValue nullValue = IsNullValue.nullValue();,if (IsNullValue != null ) IsNullValue nullValue = IsNullValue.nullValue();
IsNullValueTest.java,IsNullValue checkedNonNull = IsNullValue.checkedNonNullValue();,if (IsNullValue != null ) IsNullValue checkedNonNull = IsNullValue.checkedNonNullValue();
IsNullValueTest.java,IsNullValue unknown = IsNullValue.nonReportingNotNullValue();,if (IsNullValue != null ) IsNullValue unknown = IsNullValue.nonReportingNotNullValue();
TestNullnessValue.java,definitelyNull = NullnessValue.definitelyNullValue();,if (NullnessValue != null ) definitelyNull = NullnessValue.definitelyNullValue();
AbstractCloudTest.java,ClassAnnotation cls = bug.getPrimaryClass();,if (bug != null ) ClassAnnotation cls = bug.getPrimaryClass();
AbstractCloudTest.java,BugDesignation old = map.get(bd.getUser());,if (map != null ) BugDesignation old = map.get(bd.getUser());
ProjectFilterSettingsTest.java,plain = ProjectFilterSettings.createDefault();,if (ProjectFilterSettings != null ) plain = ProjectFilterSettings.createDefault();
ProjectFilterSettingsTest.java,otherPlain = ProjectFilterSettings.createDefault();,if (ProjectFilterSettings != null ) otherPlain = ProjectFilterSettings.createDefault();
ProjectFilterSettingsTest.java,changed = ProjectFilterSettings.createDefault();,if (ProjectFilterSettings != null ) changed = ProjectFilterSettings.createDefault();
UserPreferencesTest.java,prefs = UserPreferences.createDefaultUserPreferences();,if (UserPreferences != null ) prefs = UserPreferences.createDefaultUserPreferences();
UserPreferencesTest.java,UserPreferences clone = (UserPreferences) prefs.clone();,if (prefs != null ) UserPreferences clone = (UserPreferences) prefs.clone();
JAIFScannerTest.java,JAIFToken t = scanner.nextToken();,if (scanner != null ) JAIFToken t = scanner.nextToken();
SplitCamelCaseIdentifierTest.java,Collection<String> words = splitter.split();,if (splitter != null ) Collection<String> words = splitter.split();
SplitCamelCaseIdentifierTest.java,Collection<String> words = splitterLong.split();,if (splitterLong != null ) Collection<String> words = splitterLong.split();
SplitCamelCaseIdentifierTest.java,Collection<String> words = allLower.split();,if (allLower != null ) Collection<String> words = allLower.split();
SplitCamelCaseIdentifierTest.java,Collection<String> words = allUpper.split();,if (allUpper != null ) Collection<String> words = allUpper.split();
SplitCamelCaseIdentifierTest.java,Collection<String> words = capitalized.split();,if (capitalized != null ) Collection<String> words = capitalized.split();
AboutDialog.java,String text = buf.toString();,if (buf != null ) String text = buf.toString();
AboutDialog.java,aboutTabPane = new javax.swing.JTabbedPane();,if (javax != null ) aboutTabPane = new javax.swing.JTabbedPane();
AboutDialog.java,aboutScrollPane = new javax.swing.JScrollPane();,if (javax != null ) aboutScrollPane = new javax.swing.JScrollPane();
AboutDialog.java,aboutEditorPane = new javax.swing.JEditorPane();,if (javax != null ) aboutEditorPane = new javax.swing.JEditorPane();
AboutDialog.java,licenseEditorPane = new javax.swing.JEditorPane();,if (javax != null ) licenseEditorPane = new javax.swing.JEditorPane();
AboutDialog.java,acknowledgmentsScrollPane = new javax.swing.JScrollPane();,if (javax != null ) acknowledgmentsScrollPane = new javax.swing.JScrollPane();
AboutDialog.java,acknowldgementsEditorPane = new javax.swing.JEditorPane();,if (javax != null ) acknowldgementsEditorPane = new javax.swing.JEditorPane();
AboutDialog.java,okButton = new javax.swing.JButton();,if (javax != null ) okButton = new javax.swing.JButton();
AboutDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
AboutDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
AboutDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
AnalysisErrorDialog.java,errorLabel = new javax.swing.JLabel();,if (javax != null ) errorLabel = new javax.swing.JLabel();
AnalysisErrorDialog.java,errorMessageScrollPane = new javax.swing.JScrollPane();,if (javax != null ) errorMessageScrollPane = new javax.swing.JScrollPane();
AnalysisErrorDialog.java,errorMessageTextArea = new javax.swing.JTextPane();,if (javax != null ) errorMessageTextArea = new javax.swing.JTextPane();
AnalysisErrorDialog.java,leftSpacer = new javax.swing.JLabel();,if (javax != null ) leftSpacer = new javax.swing.JLabel();
AnalysisErrorDialog.java,rightSpacer = new javax.swing.JLabel();,if (javax != null ) rightSpacer = new javax.swing.JLabel();
AnalysisErrorDialog.java,okButton = new javax.swing.JButton();,if (javax != null ) okButton = new javax.swing.JButton();
AnalysisErrorDialog.java,editMenu = new javax.swing.JMenu();,if (javax != null ) editMenu = new javax.swing.JMenu();
AnalysisErrorDialog.java,selectAllMenuItem = new javax.swing.JMenuItem();,if (javax != null ) selectAllMenuItem = new javax.swing.JMenuItem();
AnalysisErrorDialog.java,copyMenuItem = new javax.swing.JMenuItem();,if (javax != null ) copyMenuItem = new javax.swing.JMenuItem();
AnalysisErrorDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
AnalysisErrorDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
AnalysisErrorDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
AnalysisErrorDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
AnalysisErrorDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
AnalysisRun.java,this.logger = frame.getLogger();,if (frame != null ) this.logger = frame.getLogger();
AnalysisRun.java,summary = html.toString();,if (html != null ) summary = html.toString();
AnalysisRun.java,summary = reporter.getBugCollection().getSummaryHTML();,if (reporter != null ) summary = reporter.getBugCollection().getSummaryHTML();
AnalysisRun.java,summary = reporter.getBugCollection().getSummaryHTML();,if (reporter != null ) summary = reporter.getBugCollection().getSummaryHTML();
BugCellRenderer.java,ClassLoader classLoader = this.getClass().getClassLoader();,if (this != null ) ClassLoader classLoader = this.getClass().getClassLoader();
BugCellRenderer.java,Object obj = node.getUserObject();,if (node != null ) Object obj = node.getUserObject();
BugCellRenderer.java,String groupType = groupNode.getGroupType();,if (groupNode != null ) String groupType = groupNode.getGroupType();
ConfigureDetectorsDialog.java,detectorTableScrollPane = new javax.swing.JScrollPane();,if (javax != null ) detectorTableScrollPane = new javax.swing.JScrollPane();
ConfigureDetectorsDialog.java,detectorTable = new javax.swing.JTable();,if (javax != null ) detectorTable = new javax.swing.JTable();
ConfigureDetectorsDialog.java,detectorDescriptionScrollPane = new javax.swing.JScrollPane();,if (javax != null ) detectorDescriptionScrollPane = new javax.swing.JScrollPane();
ConfigureDetectorsDialog.java,okButton = new javax.swing.JButton();,if (javax != null ) okButton = new javax.swing.JButton();
ConfigureDetectorsDialog.java,cancelButton = new javax.swing.JButton();,if (javax != null ) cancelButton = new javax.swing.JButton();
ConfigureDetectorsDialog.java,restoreDefaultsButton = new javax.swing.JButton();,if (javax != null ) restoreDefaultsButton = new javax.swing.JButton();
ConfigureDetectorsDialog.java,DefaultTableModel m = (DefaultTableModel)detectorTable.getModel();,if ((DefaultTableModel)detectorTable != null ) DefaultTableModel m = (DefaultTableModel)detectorTable.getModel();
ConfigureDetectorsDialog.java,"DefaultSortedTableModel sortedModel = new DefaultSortedTableModel(m, detectorTable.getTableHeader());","if (detectorTable != null ) DefaultSortedTableModel sortedModel = new DefaultSortedTableModel(m, detectorTable.getTableHeader());"
ConfigureDetectorsDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
ConfigureDetectorsDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
ConfigureDetectorsDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
ConfigureDetectorsDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
ConfigureDetectorsDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
ConfigureDetectorsDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
ConfigureDetectorsDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
ConfigureDetectorsDialog.java,Iterator<DetectorFactory> i = DetectorFactoryCollection.instance().factoryIterator();,if (DetectorFactoryCollection != null ) Iterator<DetectorFactory> i = DetectorFactoryCollection.instance().factoryIterator();
ConfigureDetectorsDialog.java,TableModel model = sorter.getBaseTableModel();,if (sorter != null ) TableModel model = sorter.getBaseTableModel();
ConfigureDetectorsDialog.java,int num = factoryList.size();,if (factoryList != null ) int num = factoryList.size();
ConfigureDetectorsDialog.java,TableModel model = sorter.getBaseTableModel();,if (sorter != null ) TableModel model = sorter.getBaseTableModel();
ConfigureDetectorsDialog.java,ListSelectionModel rowSM = detectorTable.getSelectionModel();,if (detectorTable != null ) ListSelectionModel rowSM = detectorTable.getSelectionModel();
ConfigureDetectorsDialog.java,ListSelectionModel lsm = (ListSelectionModel) e.getSource();,if (e != null ) ListSelectionModel lsm = (ListSelectionModel) e.getSource();
ConfigureDetectorsDialog.java,int selectedRow = lsm.getMinSelectionIndex();,if (lsm != null ) int selectedRow = lsm.getMinSelectionIndex();
ConfigureDetectorsDialog.java,String detailHTML = factory.getDetailHTML();,if (factory != null ) String detailHTML = factory.getDetailHTML();
ConfigureDetectorsDialog.java,Collection<BugPattern> patterns = factory.getReportedBugPatterns();,if (factory != null ) Collection<BugPattern> patterns = factory.getReportedBugPatterns();
ConfigureDetectorsDialog.java,Iterator<DetectorFactory> i = DetectorFactoryCollection.instance().factoryIterator();,if (DetectorFactoryCollection != null ) Iterator<DetectorFactory> i = DetectorFactoryCollection.instance().factoryIterator();
DefaultSortedTableModel.java,final TableCellRenderer baseRenderer = baseHeader.getDefaultRenderer();,if (baseHeader != null ) final TableCellRenderer baseRenderer = baseHeader.getDefaultRenderer();
DefaultSortedTableModel.java,ClassLoader classLoader = this.getClass().getClassLoader();,if (this != null ) ClassLoader classLoader = this.getClass().getClassLoader();
DefaultSortedTableModel.java,int numRows = baseModel.getRowCount();,if (baseModel != null ) int numRows = baseModel.getRowCount();
DefaultSortedTableModel.java,JTableHeader header = (JTableHeader)e.getSource();,if ((JTableHeader)e != null ) JTableHeader header = (JTableHeader)e.getSource();
DefaultSortedTableModel.java,int column = header.columnAtPoint(e.getPoint());,if (header != null ) int column = header.columnAtPoint(e.getPoint());
FindBugsFrame.java,String lhsString = lhs.toString();,if (lhs != null ) String lhsString = lhs.toString();
FindBugsFrame.java,String rhsString = rhs.toString();,if (rhs != null ) String rhsString = rhs.toString();
FindBugsFrame.java,BugPattern bugPattern = warning.getBugPattern();,if (warning != null ) BugPattern bugPattern = warning.getBugPattern();
FindBugsFrame.java,String fileName = file.getName();,if (file != null ) String fileName = file.getName();
FindBugsFrame.java,UserPreferences prefs = UserPreferences.getUserPreferences();,if (UserPreferences != null ) UserPreferences prefs = UserPreferences.getUserPreferences();
FindBugsFrame.java,priorityButtonGroup = new javax.swing.ButtonGroup();,if (javax != null ) priorityButtonGroup = new javax.swing.ButtonGroup();
FindBugsFrame.java,effortButtonGroup = new javax.swing.ButtonGroup();,if (javax != null ) effortButtonGroup = new javax.swing.ButtonGroup();
FindBugsFrame.java,emptyPanel = new javax.swing.JPanel();,if (javax != null ) emptyPanel = new javax.swing.JPanel();
FindBugsFrame.java,reportPanel = new javax.swing.JPanel();,if (javax != null ) reportPanel = new javax.swing.JPanel();
FindBugsFrame.java,editProjectPanel = new javax.swing.JPanel();,if (javax != null ) editProjectPanel = new javax.swing.JPanel();
FindBugsFrame.java,jarNameTextField = new javax.swing.JTextField();,if (javax != null ) jarNameTextField = new javax.swing.JTextField();
FindBugsFrame.java,addJarButton = new javax.swing.JButton();,if (javax != null ) addJarButton = new javax.swing.JButton();
FindBugsFrame.java,jarFileListLabel = new javax.swing.JLabel();,if (javax != null ) jarFileListLabel = new javax.swing.JLabel();
FindBugsFrame.java,srcDirTextField = new javax.swing.JTextField();,if (javax != null ) srcDirTextField = new javax.swing.JTextField();
FindBugsFrame.java,addSourceDirButton = new javax.swing.JButton();,if (javax != null ) addSourceDirButton = new javax.swing.JButton();
FindBugsFrame.java,sourceDirListLabel = new javax.swing.JLabel();,if (javax != null ) sourceDirListLabel = new javax.swing.JLabel();
FindBugsFrame.java,removeSrcDirButton = new javax.swing.JButton();,if (javax != null ) removeSrcDirButton = new javax.swing.JButton();
FindBugsFrame.java,browseJarButton = new javax.swing.JButton();,if (javax != null ) browseJarButton = new javax.swing.JButton();
FindBugsFrame.java,editProjectLabel = new javax.swing.JLabel();,if (javax != null ) editProjectLabel = new javax.swing.JLabel();
FindBugsFrame.java,findBugsButton = new javax.swing.JButton();,if (javax != null ) findBugsButton = new javax.swing.JButton();
FindBugsFrame.java,jarFileListScrollPane = new javax.swing.JScrollPane();,if (javax != null ) jarFileListScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,jarFileList = new javax.swing.JList();,if (javax != null ) jarFileList = new javax.swing.JList();
FindBugsFrame.java,sourceDirListScrollPane = new javax.swing.JScrollPane();,if (javax != null ) sourceDirListScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,classpathEntryLabel = new javax.swing.JLabel();,if (javax != null ) classpathEntryLabel = new javax.swing.JLabel();
FindBugsFrame.java,classpathEntryListLabel = new javax.swing.JLabel();,if (javax != null ) classpathEntryListLabel = new javax.swing.JLabel();
FindBugsFrame.java,classpathEntryTextField = new javax.swing.JTextField();,if (javax != null ) classpathEntryTextField = new javax.swing.JTextField();
FindBugsFrame.java,addClasspathEntryButton = new javax.swing.JButton();,if (javax != null ) addClasspathEntryButton = new javax.swing.JButton();
FindBugsFrame.java,removeClasspathEntryButton = new javax.swing.JButton();,if (javax != null ) removeClasspathEntryButton = new javax.swing.JButton();
FindBugsFrame.java,classpathEntryListScrollPane = new javax.swing.JScrollPane();,if (javax != null ) classpathEntryListScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,sourceUpButton = new javax.swing.JButton();,if (javax != null ) sourceUpButton = new javax.swing.JButton();
FindBugsFrame.java,sourceDownButton = new javax.swing.JButton();,if (javax != null ) sourceDownButton = new javax.swing.JButton();
FindBugsFrame.java,classpathDownButton = new javax.swing.JButton();,if (javax != null ) classpathDownButton = new javax.swing.JButton();
FindBugsFrame.java,bugTreePanel = new javax.swing.JPanel();,if (javax != null ) bugTreePanel = new javax.swing.JPanel();
FindBugsFrame.java,bugTreeBugDetailsSplitter = new javax.swing.JSplitPane();,if (javax != null ) bugTreeBugDetailsSplitter = new javax.swing.JSplitPane();
FindBugsFrame.java,byClassScrollPane = new javax.swing.JScrollPane();,if (javax != null ) byClassScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,byClassBugTree = new javax.swing.JTree();,if (javax != null ) byClassBugTree = new javax.swing.JTree();
FindBugsFrame.java,byPackageBugTree = new javax.swing.JTree();,if (javax != null ) byPackageBugTree = new javax.swing.JTree();
FindBugsFrame.java,byBugTypeScrollPane = new javax.swing.JScrollPane();,if (javax != null ) byBugTypeScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,byBugCategoryScrollPane = new javax.swing.JScrollPane();,if (javax != null ) byBugCategoryScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,byBugCategoryBugTree = new javax.swing.JTree();,if (javax != null ) byBugCategoryBugTree = new javax.swing.JTree();
FindBugsFrame.java,bySummary = new javax.swing.JScrollPane();,if (javax != null ) bySummary = new javax.swing.JScrollPane();
FindBugsFrame.java,bugSummaryEditorPane = new javax.swing.JEditorPane();,if (javax != null ) bugSummaryEditorPane = new javax.swing.JEditorPane();
FindBugsFrame.java,bugDetailsTabbedPane = new javax.swing.JTabbedPane();,if (javax != null ) bugDetailsTabbedPane = new javax.swing.JTabbedPane();
FindBugsFrame.java,bugDescriptionEditorPane = new javax.swing.JEditorPane();,if (javax != null ) bugDescriptionEditorPane = new javax.swing.JEditorPane();
FindBugsFrame.java,sourceTextAreaScrollPane = new javax.swing.JScrollPane();,if (javax != null ) sourceTextAreaScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,sourceTextArea = new javax.swing.JTextArea();,if (javax != null ) sourceTextArea = new javax.swing.JTextArea();
FindBugsFrame.java,annotationTextArea = new javax.swing.JTextArea();,if (javax != null ) annotationTextArea = new javax.swing.JTextArea();
FindBugsFrame.java,urlLabel = new javax.swing.JLabel();,if (javax != null ) urlLabel = new javax.swing.JLabel();
FindBugsFrame.java,growBoxSpacer = new javax.swing.JLabel();,if (javax != null ) growBoxSpacer = new javax.swing.JLabel();
FindBugsFrame.java,theMenuBar = new javax.swing.JMenuBar();,if (javax != null ) theMenuBar = new javax.swing.JMenuBar();
FindBugsFrame.java,fileMenu = new javax.swing.JMenu();,if (javax != null ) fileMenu = new javax.swing.JMenu();
FindBugsFrame.java,openProjectItem = new javax.swing.JMenuItem();,if (javax != null ) openProjectItem = new javax.swing.JMenuItem();
FindBugsFrame.java,recentProjectsMenu = new javax.swing.JMenu();,if (javax != null ) recentProjectsMenu = new javax.swing.JMenu();
FindBugsFrame.java,saveProjectItem = new javax.swing.JMenuItem();,if (javax != null ) saveProjectItem = new javax.swing.JMenuItem();
FindBugsFrame.java,saveProjectAsItem = new javax.swing.JMenuItem();,if (javax != null ) saveProjectAsItem = new javax.swing.JMenuItem();
FindBugsFrame.java,reloadProjectItem = new javax.swing.JMenuItem();,if (javax != null ) reloadProjectItem = new javax.swing.JMenuItem();
FindBugsFrame.java,loadBugsItem = new javax.swing.JMenuItem();,if (javax != null ) loadBugsItem = new javax.swing.JMenuItem();
FindBugsFrame.java,saveBugsItem = new javax.swing.JMenuItem();,if (javax != null ) saveBugsItem = new javax.swing.JMenuItem();
FindBugsFrame.java,editMenu = new javax.swing.JMenu();,if (javax != null ) editMenu = new javax.swing.JMenu();
FindBugsFrame.java,cutItem = new javax.swing.JMenuItem();,if (javax != null ) cutItem = new javax.swing.JMenuItem();
FindBugsFrame.java,copyItem = new javax.swing.JMenuItem();,if (javax != null ) copyItem = new javax.swing.JMenuItem();
FindBugsFrame.java,selectAllItem = new javax.swing.JMenuItem();,if (javax != null ) selectAllItem = new javax.swing.JMenuItem();
FindBugsFrame.java,viewMenu = new javax.swing.JMenu();,if (javax != null ) viewMenu = new javax.swing.JMenu();
FindBugsFrame.java,fullDescriptionsItem = new javax.swing.JCheckBoxMenuItem();,if (javax != null ) fullDescriptionsItem = new javax.swing.JCheckBoxMenuItem();
FindBugsFrame.java,filterWarningsMenu = new javax.swing.JMenu();,if (javax != null ) filterWarningsMenu = new javax.swing.JMenu();
FindBugsFrame.java,lowPriorityButton = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) lowPriorityButton = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,mediumPriorityButton = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) mediumPriorityButton = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,highPriorityButton = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) highPriorityButton = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,viewProjectItem = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) viewProjectItem = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,viewBugsItem = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) viewBugsItem = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,configureDetectorsItem = new javax.swing.JMenuItem();,if (javax != null ) configureDetectorsItem = new javax.swing.JMenuItem();
FindBugsFrame.java,effortMenu = new javax.swing.JMenu();,if (javax != null ) effortMenu = new javax.swing.JMenu();
FindBugsFrame.java,minEffortItem = new javax.swing.JCheckBoxMenuItem();,if (javax != null ) minEffortItem = new javax.swing.JCheckBoxMenuItem();
FindBugsFrame.java,maxEffortItem = new javax.swing.JCheckBoxMenuItem();,if (javax != null ) maxEffortItem = new javax.swing.JCheckBoxMenuItem();
FindBugsFrame.java,helpMenu = new javax.swing.JMenu();,if (javax != null ) helpMenu = new javax.swing.JMenu();
FindBugsFrame.java,aboutItem = new javax.swing.JMenuItem();,if (javax != null ) aboutItem = new javax.swing.JMenuItem();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,int[] indices = list.getSelectedIndices();,if (list != null ) int[] indices = list.getSelectedIndices();
FindBugsFrame.java,ListModel m = list.getModel();,if (list != null ) ListModel m = list.getModel();
FindBugsFrame.java,Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();,if (Toolkit != null ) Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();
FindBugsFrame.java,Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();,if (Toolkit != null ) Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();
FindBugsFrame.java,Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();,if (Toolkit != null ) Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();
FindBugsFrame.java,Component old = evt.getOppositeComponent();,if (evt != null ) Component old = evt.getOppositeComponent();
FindBugsFrame.java,selectedComponent = evt.getComponent();,if (evt != null ) selectedComponent = evt.getComponent();
FindBugsFrame.java,File selectedFile = chooser.getSelectedFile();,if (chooser != null ) File selectedFile = chooser.getSelectedFile();
FindBugsFrame.java,InputStream in = url.openStream();,if (url != null ) InputStream in = url.openStream();
FindBugsFrame.java,String filename = current.getProjectFileName();,if (current != null ) String filename = current.getProjectFileName();
FindBugsFrame.java,DefaultListModel listModel = (DefaultListModel) classpathEntryList.getModel();,if (classpathEntryList != null ) DefaultListModel listModel = (DefaultListModel) classpathEntryList.getModel();
FindBugsFrame.java,int[] selIndices = classpathEntryList.getSelectedIndices();,if (classpathEntryList != null ) int[] selIndices = classpathEntryList.getSelectedIndices();
FindBugsFrame.java,File[] selectedFileList = chooser.getSelectedFiles();,if (chooser != null ) File[] selectedFileList = chooser.getSelectedFiles();
FindBugsFrame.java,String entry = selectedFileList[i].getPath();,if (selectedFileList[i] != null ) String entry = selectedFileList[i].getPath();
FindBugsFrame.java,int numRows = bugTree.getRowCount();,if (bugTree != null ) int numRows = bugTree.getRowCount();
FindBugsFrame.java,DefaultMutableTreeNode node = (DefaultMutableTreeNode) path.getLastPathComponent();,if (path != null ) DefaultMutableTreeNode node = (DefaultMutableTreeNode) path.getLastPathComponent();
FindBugsFrame.java,String propertyName = evt.getPropertyName();,if (evt != null ) String propertyName = evt.getPropertyName();
FindBugsFrame.java,Exception e = dialog.getException();,if (dialog != null ) Exception e = dialog.getException();
FindBugsFrame.java,File[] selectedFileList = chooser.getSelectedFiles();,if (chooser != null ) File[] selectedFileList = chooser.getSelectedFiles();
FindBugsFrame.java,String entry = selectedFileList[i].getPath();,if (selectedFileList[i] != null ) String entry = selectedFileList[i].getPath();
FindBugsFrame.java,File[] selectedFileList = chooser.getSelectedFiles();,if (chooser != null ) File[] selectedFileList = chooser.getSelectedFiles();
FindBugsFrame.java,String entry = selectedFileList[i].getPath();,if (selectedFileList[i] != null ) String entry = selectedFileList[i].getPath();
FindBugsFrame.java,DefaultListModel listModel = (DefaultListModel) sourceDirList.getModel();,if (sourceDirList != null ) DefaultListModel listModel = (DefaultListModel) sourceDirList.getModel();
FindBugsFrame.java,int[] selIndices = sourceDirList.getSelectedIndices();,if (sourceDirList != null ) int[] selIndices = sourceDirList.getSelectedIndices();
FindBugsFrame.java,DefaultListModel listModel = (DefaultListModel) jarFileList.getModel();,if (jarFileList != null ) DefaultListModel listModel = (DefaultListModel) jarFileList.getModel();
FindBugsFrame.java,int[] selIndices = jarFileList.getSelectedIndices();,if (jarFileList != null ) int[] selIndices = jarFileList.getSelectedIndices();
FindBugsFrame.java,d = comp.getPreferredSize();,if (comp != null ) d = comp.getPreferredSize();
FindBugsFrame.java,JMenuItem recentProjectItem = (JMenuItem) evt.getSource();,if (evt != null ) JMenuItem recentProjectItem = (JMenuItem) evt.getSource();
FindBugsFrame.java,File file = new File(recentProjectItem.getText());,if (File(recentProjectItem != null ) File file = new File(recentProjectItem.getText());
FindBugsFrame.java,int[] selIndices = entryList.getSelectedIndices();,if (entryList != null ) int[] selIndices = entryList.getSelectedIndices();
FindBugsFrame.java,DefaultListModel model = (DefaultListModel) entryList.getModel();,if (entryList != null ) DefaultListModel model = (DefaultListModel) entryList.getModel();
FindBugsFrame.java,int[] selIndices = entryList.getSelectedIndices();,if (entryList != null ) int[] selIndices = entryList.getSelectedIndices();
FindBugsFrame.java,DefaultListModel model = (DefaultListModel) entryList.getModel();,if (entryList != null ) DefaultListModel model = (DefaultListModel) entryList.getModel();
FindBugsFrame.java,int lastInsertPos = model.getSize();,if (model != null ) int lastInsertPos = model.getSize();
FindBugsFrame.java,int numEntries = project.getNumAuxClasspathEntries();,if (project != null ) int numEntries = project.getNumAuxClasspathEntries();
FindBugsFrame.java,DefaultListModel model = (DefaultListModel) classpathEntryList.getModel();,if (classpathEntryList != null ) DefaultListModel model = (DefaultListModel) classpathEntryList.getModel();
FindBugsFrame.java,int numEntries = project.getNumSourceDirs();,if (project != null ) int numEntries = project.getNumSourceDirs();
FindBugsFrame.java,DefaultListModel model = (DefaultListModel) sourceDirList.getModel();,if (sourceDirList != null ) DefaultListModel model = (DefaultListModel) sourceDirList.getModel();
FindBugsFrame.java,viewPanelLayout = (CardLayout) viewPanel.getLayout();,if (viewPanel != null ) viewPanelLayout = (CardLayout) viewPanel.getLayout();
FindBugsFrame.java,Rectangle rect = extent.getBounds();,if (extent != null ) Rectangle rect = extent.getBounds();
FindBugsFrame.java,ClassLoader classLoader = this.getClass().getClassLoader();,if (this != null ) ClassLoader classLoader = this.getClass().getClassLoader();
FindBugsFrame.java,UserPreferences prefs = UserPreferences.getUserPreferences();,if (UserPreferences != null ) UserPreferences prefs = UserPreferences.getUserPreferences();
FindBugsFrame.java,TreePath selPath = tree.getSelectionPath();,if (tree != null ) TreePath selPath = tree.getSelectionPath();
FindBugsFrame.java,Object[] nodeList = selPath.getPath();,if (selPath != null ) Object[] nodeList = selPath.getPath();
FindBugsFrame.java,Object nodeInfo = node.getUserObject();,if (node != null ) Object nodeInfo = node.getUserObject();
FindBugsFrame.java,Integer location = (Integer) evt.getNewValue();,if (evt != null ) Integer location = (Integer) evt.getNewValue();
FindBugsFrame.java,int height = splitter.getHeight();,if (splitter != null ) int height = splitter.getHeight();
FindBugsFrame.java,JScrollPane selected = (JScrollPane) groupByTabbedPane.getSelectedComponent();,if (groupByTabbedPane != null ) JScrollPane selected = (JScrollPane) groupByTabbedPane.getSelectedComponent();
FindBugsFrame.java,Object view = selected.getViewport().getView();,if (selected != null ) Object view = selected.getViewport().getView();
FindBugsFrame.java,String fileName = project.getProjectFileName();,if (project != null ) String fileName = project.getProjectFileName();
FindBugsFrame.java,fileName = Project.transformFilename(file.getPath());,if (Project != null ) fileName = Project.transformFilename(file.getPath());
FindBugsFrame.java,useRelativePaths = relativePaths.isSelected();,if (relativePaths != null ) useRelativePaths = relativePaths.isSelected();
FindBugsFrame.java,UserPreferences prefs = UserPreferences.getUserPreferences();,if (UserPreferences != null ) UserPreferences prefs = UserPreferences.getUserPreferences();
FindBugsFrame.java,DefaultListModel jarListModel = (DefaultListModel) jarFileList.getModel();,if (jarFileList != null ) DefaultListModel jarListModel = (DefaultListModel) jarFileList.getModel();
FindBugsFrame.java,DefaultListModel srcDirListModel = (DefaultListModel) sourceDirList.getModel();,if (sourceDirList != null ) DefaultListModel srcDirListModel = (DefaultListModel) sourceDirList.getModel();
FindBugsFrame.java,DefaultListModel classpathEntryListModel = (DefaultListModel) classpathEntryList.getModel();,if (classpathEntryList != null ) DefaultListModel classpathEntryListModel = (DefaultListModel) classpathEntryList.getModel();
FindBugsFrame.java,Cursor orig = this.getCursor();,if (this != null ) Cursor orig = this.getCursor();
FindBugsFrame.java,final DefaultMutableTreeNode bugRootNode = (DefaultMutableTreeNode) bugTreeModel.getRoot();,if (bugTreeModel != null ) final DefaultMutableTreeNode bugRootNode = (DefaultMutableTreeNode) bugTreeModel.getRoot();
FindBugsFrame.java,groupName = member.getPrimaryClass().getPackageName();,if (member != null ) groupName = member.getPrimaryClass().getPackageName();
FindBugsFrame.java,String desc = member.toString();,if (member != null ) String desc = member.toString();
FindBugsFrame.java,BugPattern pattern = member.getBugPattern();,if (member != null ) BugPattern pattern = member.getBugPattern();
FindBugsFrame.java,int count = currentGroup.getMemberCount();,if (currentGroup != null ) int count = currentGroup.getMemberCount();
FindBugsFrame.java,Iterator<BugAnnotation> j = member.annotationIterator();,if (member != null ) Iterator<BugAnnotation> j = member.annotationIterator();
FindBugsFrame.java,String dirs = jarNameTextField.getText();,if (jarNameTextField != null ) String dirs = jarNameTextField.getText();
FindBugsFrame.java,DefaultListModel listModel = (DefaultListModel) sourceDirList.getModel();,if (sourceDirList != null ) DefaultListModel listModel = (DefaultListModel) sourceDirList.getModel();
FindBugsFrame.java,DefaultListModel listModel = (DefaultListModel) jarFileList.getModel();,if (jarFileList != null ) DefaultListModel listModel = (DefaultListModel) jarFileList.getModel();
FindBugsFrame.java,String dirs = srcDirTextField.getText();,if (srcDirTextField != null ) String dirs = srcDirTextField.getText();
FindBugsFrame.java,String dirs = classpathEntryTextField.getText();,if (classpathEntryTextField != null ) String dirs = classpathEntryTextField.getText();
FindBugsFrame.java,DefaultListModel listModel = (DefaultListModel) classpathEntryList.getModel();,if (classpathEntryList != null ) DefaultListModel listModel = (DefaultListModel) classpathEntryList.getModel();
FindBugsFrame.java,TreePath selPath = bugTree.getSelectionPath();,if (bugTree != null ) TreePath selPath = bugTree.getSelectionPath();
FindBugsFrame.java,srcLine = selected.getPrimarySourceLineAnnotation();,if (selected != null ) srcLine = selected.getPrimarySourceLineAnnotation();
FindBugsFrame.java,SourceFinder sourceFinder = project.getSourceFinder();,if (project != null ) SourceFinder sourceFinder = project.getSourceFinder();
FindBugsFrame.java,in = source.getInputStream();,if (source != null ) in = source.getInputStream();
FindBugsFrame.java,int endLine = srcLine.getEndLine();,if (srcLine != null ) int endLine = srcLine.getEndLine();
FindBugsFrame.java,JViewport viewport = sourceTextAreaScrollPane.getViewport();,if (sourceTextAreaScrollPane != null ) JViewport viewport = sourceTextAreaScrollPane.getViewport();
FindBugsFrame.java,Rectangle viewportRect = viewport.getViewRect();,if (viewport != null ) Rectangle viewportRect = viewport.getViewRect();
FindBugsFrame.java,String text = annotationTextArea.getText();,if (annotationTextArea != null ) String text = annotationTextArea.getText();
FindBugsFrame.java,String userAnnotation = selected.getAnnotationText();,if (selected != null ) String userAnnotation = selected.getAnnotationText();
FindBugsFrame.java,boolean selected = checkBox.isSelected();,if (checkBox != null ) boolean selected = checkBox.isSelected();
FindBugsFrame.java,File selectedFile = dialog.getSelectedFile();,if (dialog != null ) File selectedFile = dialog.getSelectedFile();
FindBugsFrame.java,File parent = pickedFile.getParentFile();,if (pickedFile != null ) File parent = pickedFile.getParentFile();
FindBugsFrame.java,theme = UIManager.getSystemLookAndFeelClassName();,if (UIManager != null ) theme = UIManager.getSystemLookAndFeelClassName();
FindBugsFrame.java,project = commandLine.getProject();,if (commandLine != null ) project = commandLine.getProject();
FindBugsFrame.java,File bugsFile = new File(commandLine.getBugsFilename());,if (File(commandLine != null ) File bugsFile = new File(commandLine.getBugsFilename());
FindBugsFrame.java,frame.settingList = commandLine.getSettingList();,if (commandLine != null ) frame.settingList = commandLine.getSettingList();
Grouper.java,Iterator<ElementType> i = collection.iterator();,if (collection != null ) Iterator<ElementType> i = collection.iterator();
LineNumberer.java,fm = this.getFontMetrics(ta.getFont());,if (this != null ) fm = this.getFontMetrics(ta.getFont());
OSXAdapter.java,theApplication = new com.apple.eawt.Application();,if (com != null ) theApplication = new com.apple.eawt.Application();
OSXAdapter.java,theApplication = new com.apple.eawt.Application();,if (com != null ) theApplication = new com.apple.eawt.Application();
RunAnalysisDialog.java,findBugsLabel = new javax.swing.JLabel();,if (javax != null ) findBugsLabel = new javax.swing.JLabel();
RunAnalysisDialog.java,countLabel = new javax.swing.JLabel();,if (javax != null ) countLabel = new javax.swing.JLabel();
RunAnalysisDialog.java,progressLabel = new javax.swing.JLabel();,if (javax != null ) progressLabel = new javax.swing.JLabel();
RunAnalysisDialog.java,cancelButton = new javax.swing.JButton();,if (javax != null ) cancelButton = new javax.swing.JButton();
RunAnalysisDialog.java,stageLabel = new javax.swing.JLabel();,if (javax != null ) stageLabel = new javax.swing.JLabel();
RunAnalysisDialog.java,topVerticalFiller = new javax.swing.JLabel();,if (javax != null ) topVerticalFiller = new javax.swing.JLabel();
RunAnalysisDialog.java,bottomVerticalFiller = new javax.swing.JLabel();,if (javax != null ) bottomVerticalFiller = new javax.swing.JLabel();
RunAnalysisDialog.java,countValueLabel = new javax.swing.JLabel();,if (javax != null ) countValueLabel = new javax.swing.JLabel();
RunAnalysisDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RunAnalysisDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RunAnalysisDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RunAnalysisDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RunAnalysisDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RunAnalysisDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RunAnalysisDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RunAnalysisDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
CheckClassfileVersion.java,String jarFileName = jarFile.getName();,if (jarFile != null ) String jarFileName = jarFile.getName();
CheckClassfileVersion.java,JarEntry ze = (JarEntry) e.nextElement();,if (e != null ) JarEntry ze = (JarEntry) e.nextElement();
CheckClassfileVersion.java,int majorVersion = zipIn.readUnsignedShort();,if (zipIn != null ) int majorVersion = zipIn.readUnsignedShort();
FilterAndCombineBitfieldPropertyDatabase.java,String s = in.readLine();,if (in != null ) String s = in.readLine();
FixIndentation.java,File next = todo.remove().getAbsoluteFile();,if (todo != null ) File next = todo.remove().getAbsoluteFile();
CheckClassfileVersion.java,String name = ze.getName();,if (ze != null ) String name = ze.getName();
CheckClassfileVersion.java,int magic = zipIn.readInt();,if (zipIn != null ) int magic = zipIn.readInt();
CheckClassfileVersion.java,int minorVersion = zipIn.readUnsignedShort();,if (zipIn != null ) int minorVersion = zipIn.readUnsignedShort();
FilterAndCombineBitfieldPropertyDatabase.java,String s = in.readLine();,if (in != null ) String s = in.readLine();
FilterPropertyDatabase.java,String s = in.readLine();,if (in != null ) String s = in.readLine();
FixIndentation.java,String rootPath = root.getAbsolutePath();,if (root != null ) String rootPath = root.getAbsolutePath();
FixIndentation.java,String nextPath = next.getAbsolutePath();,if (next != null ) String nextPath = next.getAbsolutePath();
FixIndentation.java,File[] contents = next.listFiles();,if (next != null ) File[] contents = next.listFiles();
FixIndentation.java,String s = in.readLine();,if (in != null ) String s = in.readLine();
FixIndentation.java,StringReader stringReader = new StringReader(stringWriter.toString());,if (StringReader(stringWriter != null ) StringReader stringReader = new StringReader(stringWriter.toString());
PrintBugDescriptions.java,DetectorFactoryCollection factories = DetectorFactoryCollection.instance();,if (DetectorFactoryCollection != null ) DetectorFactoryCollection factories = DetectorFactoryCollection.instance();
JUnitJarRunner.java,Enumeration<JarEntry> e = jarFile.entries();,if (jarFile != null ) Enumeration<JarEntry> e = jarFile.entries();
JUnitJarRunner.java,String entryName = entry.getName();,if (entry != null ) String entryName = entry.getName();
JUnitJarRunner.java,TestSuite suite = runner.buildTestSuite();,if (runner != null ) TestSuite suite = runner.buildTestSuite();
CheckMessages.java,String text = element.getText();,if (element != null ) String text = element.getText();
FilterBugsDialog.java,txt = pattern.getDetailText();,if (pattern != null ) txt = pattern.getDetailText();
BugPatternSection.java,String html = text.toString();,if (text != null ) String html = text.toString();
ClassContext.java,"firstHandler = Math.min(firstHandler, e.getHandlerPC());","if (e != null ) firstHandler = Math.min(firstHandler, e.getHandlerPC());"
FindNonSerializableStoreIntoSession.java,String refSig = refType.getSignature();,if (refType != null ) String refSig = refType.getSignature();
FindNonSerializableValuePassedToWriteObject.java,String refSig = refType.getSignature();,if (refType != null ) String refSig = refType.getSignature();
BugRanker.java,DetectorFactoryCollection factory = DetectorFactoryCollection.instance();,if (DetectorFactoryCollection != null ) DetectorFactoryCollection factory = DetectorFactoryCollection.instance();
DetectorFactoryCollection.java,corePlugin = corePluginLoader.getPlugin();,if (corePluginLoader != null ) corePlugin = corePluginLoader.getPlugin();
BuildNonNullAnnotationDatabase.java,n = NullnessAnnotation.Parser.parse(value.getClassString());,if (NullnessAnnotation != null ) n = NullnessAnnotation.Parser.parse(value.getClassString());
FindBadCast.java,String signature = it.getSignature();,if (it != null ) String signature = it.getSignature();
FindBadCast.java,int reg = it.getRegisterNumber();,if (it != null ) int reg = it.getRegisterNumber();
FindBadEqualsImplementation.java,database = AnalysisContext.currentAnalysisContext().getUnconditionalDerefParamDatabase();,if (AnalysisContext != null ) database = AnalysisContext.currentAnalysisContext().getUnconditionalDerefParamDatabase();
FindBadEqualsImplementation.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
FindBadEqualsImplementation.java,Method[] methodList = javaClass.getMethods();,if (javaClass != null ) Method[] methodList = javaClass.getMethods();
FindBadEqualsImplementation.java,ParameterProperty property = database.getProperty(xmethod.getMethodDescriptor());,if (database != null ) ParameterProperty property = database.getProperty(xmethod.getMethodDescriptor());
UserAnnotationsView.java,final BugInstance bugInstance = theBug.getBugInstance();,if (theBug != null ) final BugInstance bugInstance = theBug.getBugInstance();
UserAnnotationsView.java,BugInstance bug = theBug.getBugInstance();,if (theBug != null ) BugInstance bug = theBug.getBugInstance();
UserAnnotationsView.java,Cloud cloud = theBug.getBugCollection().getCloud();,if (theBug != null ) Cloud cloud = theBug.getBugCollection().getCloud();
UserAnnotationsView.java,int comboIndex = theBug.getBugInstance().getUserDesignationKeyIndex();,if (theBug != null ) int comboIndex = theBug.getBugInstance().getUserDesignationKeyIndex();
Project.java,String base = destination.getParent();,if (destination != null ) String base = destination.getParent();
Project.java,List<String> result = new ArrayList<String>(files.size());,if (ArrayList<String>(files != null ) List<String> result = new ArrayList<String>(files.size());
Project.java,String root = where.getParent();,if (where != null ) String root = where.getParent();
BugSet.java,"result = compare(oneSource.getStartLine(), twoSource.getStartLine());","if (twoSource != null ) result = compare(oneSource.getStartLine(), twoSource.getStartLine());"
BugSet.java,"result = compare(oneSource.getEndLine(), twoSource.getEndLine());","if (twoSource != null ) result = compare(oneSource.getEndLine(), twoSource.getEndLine());"
BugSet.java,"result = compare(oneSource.getStartBytecode(), twoSource.getStartBytecode());","if (twoSource != null ) result = compare(oneSource.getStartBytecode(), twoSource.getStartBytecode());"
BugSet.java,"result = compare(oneSource.getEndBytecode(), twoSource.getEndBytecode());","if (twoSource != null ) result = compare(oneSource.getEndBytecode(), twoSource.getEndBytecode());"
AbstractSwingGuiCallback.java,ProgressMonitor pm = pmin.getProgressMonitor();,if (pmin != null ) ProgressMonitor pm = pmin.getProgressMonitor();
AbstractSwingGuiCallback.java,String defaultValue = item.getDefaultValue();,if (item != null ) String defaultValue = item.getDefaultValue();
AbstractSwingGuiCallback.java,JComponent field = item.getField();,if (item != null ) JComponent field = item.getField();
UnreadFields.java,int flags = obj.getAccessFlags();,if (obj != null ) int flags = obj.getAccessFlags();
UnreadFields.java,XField f = item.getXField();,if (item != null ) XField f = item.getXField();
TypeFrameModelingVisitor.java,GenericSignatureParser p = new GenericSignatureParser(m.getSourceSignature());,if (GenericSignatureParser(m != null ) GenericSignatureParser p = new GenericSignatureParser(m.getSourceSignature());
CheckExpectedWarnings.java,BugCollection bugCollection = reporter.getBugCollection();,if (reporter != null ) BugCollection bugCollection = reporter.getBugCollection();
MergeSummarizeAndView.java,FindBugsLayoutManagerFactory factory = new FindBugsLayoutManagerFactory(SplitLayout.class.getName());,if (FindBugsLayoutManagerFactory(SplitLayout != null ) FindBugsLayoutManagerFactory factory = new FindBugsLayoutManagerFactory(SplitLayout.class.getName());
MergeSummarizeAndView.java,MainFrame instance = MainFrame.getInstance();,if (MainFrame != null ) MainFrame instance = MainFrame.getInstance();
PatternMatcher.java,dup = this.duplicate();,if (this != null ) dup = this.duplicate();
FilterFilesTab.java,this.control = viewer.getList();,if (viewer != null ) this.control = viewer.getList();
FilterFilesTab.java,filterPath = lastUsed.toOSString();,if (lastUsed != null ) filterPath = lastUsed.toOSString();
FilterFilesTab.java,IProject project = propertyPage.getProject();,if (propertyPage != null ) IProject project = propertyPage.getProject();
FilterFilesTab.java,IProject project = propertyPage.getProject();,if (propertyPage != null ) IProject project = propertyPage.getProject();
FindBugsAction.java,jobsRunning = projectMap.size();,if (projectMap != null ) jobsRunning = projectMap.size();
ReportConfigurationTab.java,String data = minPriorityCombo.getText();,if (minPriorityCombo != null ) String data = minPriorityCombo.getText();
ReportConfigurationTab.java,final IProject eclipseProj = propertyPage.getProject();,if (propertyPage != null ) final IProject eclipseProj = propertyPage.getProject();
ReportConfigurationTab.java,IProject eclipseProj = propertyPage.getProject();,if (propertyPage != null ) IProject eclipseProj = propertyPage.getProject();
ReportConfigurationTab.java,int rank = minRankSlider.getSelection();,if (minRankSlider != null ) int rank = minRankSlider.getSelection();
ReportConfigurationTab.java,int rank = minRankSlider.getSelection();,if (minRankSlider != null ) int rank = minRankSlider.getSelection();
ReportConfigurationTab.java,ProjectFilterSettings filterSettings = getCurrentProps().getFilterSettings();,if (getCurrentProps() != null ) ProjectFilterSettings filterSettings = getCurrentProps().getFilterSettings();
ReportConfigurationTab.java,String category = (String) checkBox.getData();,if (checkBox != null ) String category = (String) checkBox.getData();
ReportConfigurationTab.java,ProjectFilterSettings filterSettings = prefs.getFilterSettings();,if (prefs != null ) ProjectFilterSettings filterSettings = prefs.getFilterSettings();
ReportConfigurationTab.java,IProject eclipseProj = propertyPage.getProject();,if (propertyPage != null ) IProject eclipseProj = propertyPage.getProject();
ReportConfigurationTab.java,Project project = collection.getProject();,if (collection != null ) Project project = collection.getProject();
ReportConfigurationTab.java,CloudPlugin item = clouds.get(cloudCombo.getSelectionIndex());,if (clouds != null ) CloudPlugin item = clouds.get(cloudCombo.getSelectionIndex());
ReportConfigurationTab.java,IWorkbenchPage page = FindbugsPlugin.getActiveWorkbenchWindow().getActivePage();,if (FindbugsPlugin != null ) IWorkbenchPage page = FindbugsPlugin.getActiveWorkbenchWindow().getActivePage();
BugRanker.java,DetectorFactory detectorFactory = bug.getDetectorFactory();,if (bug != null ) DetectorFactory detectorFactory = bug.getDetectorFactory();
BugRanker.java,Plugin plugin = detectorFactory.getPlugin();,if (detectorFactory != null ) Plugin plugin = detectorFactory.getPlugin();
BugRanker.java,BugRanker pluginRanker = plugin.getBugRanker();,if (plugin != null ) BugRanker pluginRanker = plugin.getBugRanker();
BugRanker.java,BugRanker pluginRanker = plugin.getBugRanker();,if (plugin != null ) BugRanker pluginRanker = plugin.getBugRanker();
BugSet.java,SourceLineAnnotation oneSource = one.getBug().getPrimarySourceLineAnnotation();,if (one != null ) SourceLineAnnotation oneSource = one.getBug().getPrimarySourceLineAnnotation();
BugSet.java,SourceLineAnnotation twoSource = one.getBug().getPrimarySourceLineAnnotation();,if (one != null ) SourceLineAnnotation twoSource = one.getBug().getPrimarySourceLineAnnotation();
FindBugsAction.java,jobsRunning = projectMap.size();,if (projectMap != null ) jobsRunning = projectMap.size();
DetectorFactory.java,String className = detectorCreator.getDetectorClass().getName();,if (detectorCreator != null ) String className = detectorCreator.getDetectorClass().getName();
MethodAnnotation.java,className = ClassName.fromFieldSignature(item.getSignature());,if (ClassName != null ) className = ClassName.fromFieldSignature(item.getSignature());
SuppressDecorator.java,String s = in.readLine();,if (in != null ) String s = in.readLine();
SuppressDecorator.java,ClassAnnotation c = bugInstance.getPrimaryClass();,if (bugInstance != null ) ClassAnnotation c = bugInstance.getPrimaryClass();
TestingGround.java,Object value = top.getConstant();,if (top != null ) Object value = top.getConstant();
TestingGround.java,String bigDecimalString = new BigDecimal(arg).toString();,if (BigDecimal(arg) != null ) String bigDecimalString = new BigDecimal(arg).toString();
PluginLoader.java,String value = node.getText();,if (node != null ) String value = node.getText();
SuppressDecorator.java,String cat = bug.getBugPattern().getCategory();,if (bug != null ) String cat = bug.getBugPattern().getCategory();
MainFrame.java,Cloud plugin = getBugCollection().getCloud();,if (getBugCollection() != null ) Cloud plugin = getBugCollection().getCloud();
MainFrame.java,String pluginMsg = plugin.getStatusMsg();,if (plugin != null ) String pluginMsg = plugin.getStatusMsg();
MainFrame.java,SigninState state = plugin.getSigninState();,if (plugin != null ) SigninState state = plugin.getSigninState();
MainFrame.java,float size = Driver.getFontSize();,if (Driver != null ) float size = Driver.getFontSize();
MainFrame.java,Project project = bugs.getProject();,if (bugs != null ) Project project = bugs.getProject();
MainFrame.java,BugInstance bug  = mainFrameTree.getCurrentSelectedBugLeaf().getBug();,if (mainFrameTree != null ) BugInstance bug  = mainFrameTree.getCurrentSelectedBugLeaf().getBug();
MainFrame.java,boolean checked = signInAuto.isSelected();,if (signInAuto != null ) boolean checked = signInAuto.isSelected();
MainFrame.java,int countFilteredBugs = BugSet.countFilteredBugs();,if (BugSet != null ) int countFilteredBugs = BugSet.countFilteredBugs();
MainFrame.java,Cloud plugin = getBugCollection().getCloud();,if (getBugCollection() != null ) Cloud plugin = getBugCollection().getCloud();
MainFrame.java,String pluginMsg = plugin.getStatusMsg();,if (plugin != null ) String pluginMsg = plugin.getStatusMsg();
MainFrame.java,SigninState state = plugin.getSigninState();,if (plugin != null ) SigninState state = plugin.getSigninState();
MainFrame.java,int fontSize = (int) Driver.getFontSize();,if (Driver != null ) int fontSize = (int) Driver.getFontSize();
MainFrame.java,JComponent label = guiLayout.getSourceViewComponent();,if (guiLayout != null ) JComponent label = guiLayout.getSourceViewComponent();
MainFrame.java,Cloud plugin = this.bugCollection.getCloud();,if (this != null ) Cloud plugin = this.bugCollection.getCloud();
MainFrame.java,Filter suppressionMatcher = project.getSuppressionFilter();,if (project != null ) Filter suppressionMatcher = project.getSuppressionFilter();
MainFrame.java,Cloud plugin = this.bugCollection.getCloud();,if (this != null ) Cloud plugin = this.bugCollection.getCloud();
MainFrame.java,Cloud plugin = bugCollection.getCloud();,if (bugCollection != null ) Cloud plugin = bugCollection.getCloud();
MainFrame.java,SourceLineAnnotation link = bug.getPrimarySourceLineAnnotation();,if (bug != null ) SourceLineAnnotation link = bug.getPrimarySourceLineAnnotation();
MainFrame.java,ClassAnnotation primaryClass = bug.getPrimaryClass();,if (bug != null ) ClassAnnotation primaryClass = bug.getPrimaryClass();
MainFrame.java,int start = link.getStartLine();,if (link != null ) int start = link.getStartLine();
MainFrame.java,int end = link.getEndLine();,if (link != null ) int end = link.getEndLine();
MainFrame.java,final SourceLineAnnotation link = note.getSourceLines();,if (note != null ) final SourceLineAnnotation link = note.getSourceLines();
MainFrame.java,int start = link.getStartLine();,if (link != null ) int start = link.getStartLine();
MainFrame.java,int end = link.getEndLine();,if (link != null ) int end = link.getEndLine();
MainFrame.java,noteText = note.toString();,if (note != null ) noteText = note.toString();
MainFrame.java,Cloud plugin = this.bugCollection.getCloud();,if (this != null ) Cloud plugin = this.bugCollection.getCloud();
MainFrame.java,Cloud cloud = this.bugCollection.getCloud();,if (this != null ) Cloud cloud = this.bugCollection.getCloud();
MainFrame.java,String report = stringWriter.toString();,if (stringWriter != null ) String report = stringWriter.toString();
MainFrame.java,JToolTip tempToolTip = mainFrameTree.getTableheader().createToolTip();,if (mainFrameTree != null ) JToolTip tempToolTip = mainFrameTree.getTableheader().createToolTip();
MainFrame.java,JMenu windowMenu = guiLayout.createWindowMenu();,if (guiLayout != null ) JMenu windowMenu = guiLayout.createWindowMenu();
MainFrame.java,final ActionMap map = mainFrameTree.getTree().getActionMap();,if (mainFrameTree != null ) final ActionMap map = mainFrameTree.getTree().getActionMap();
MainFrame.java,JRadioButtonMenuItem rbMenuItem = new JRadioButtonMenuItem(r.toString());,if (JRadioButtonMenuItem(r != null ) JRadioButtonMenuItem rbMenuItem = new JRadioButtonMenuItem(r.toString());
MainFrame.java,JRadioButtonMenuItem rbMenuItem = new JRadioButtonMenuItem(r.toString());,if (JRadioButtonMenuItem(r != null ) JRadioButtonMenuItem rbMenuItem = new JRadioButtonMenuItem(r.toString());
MainFrame.java,JRadioButtonMenuItem rbMenuItem = new JRadioButtonMenuItem(r.toString());,if (JRadioButtonMenuItem(r != null ) JRadioButtonMenuItem rbMenuItem = new JRadioButtonMenuItem(r.toString());
MainFrame.java,JRadioButtonMenuItem rbMenuItem = new JRadioButtonMenuItem(r.toString());,if (JRadioButtonMenuItem(r != null ) JRadioButtonMenuItem rbMenuItem = new JRadioButtonMenuItem(r.toString());
MainFrame.java,ArrayList<File> xmlFiles=GUISaveState.getInstance().getRecentFiles();,if (xmlFiles=GUISaveState != null ) ArrayList<File> xmlFiles=GUISaveState.getInstance().getRecentFiles();
MainFrame.java,BugTreeModel model = (BugTreeModel) tree.getModel();,if (tree != null ) BugTreeModel model = (BugTreeModel) tree.getModel();
MainFrame.java,sorter = GUISaveState.getInstance().getStarterTable();,if (GUISaveState != null ) sorter = GUISaveState.getInstance().getStarterTable();
MainFrame.java,BugInstance bug  = currentSelectedBugLeaf.getBug();,if (currentSelectedBugLeaf != null ) BugInstance bug  = currentSelectedBugLeaf.getBug();
MainFrame.java,List<Sortables> sortables = sorter.getOrderBeforeDivider();,if (sorter != null ) List<Sortables> sortables = sorter.getOrderBeforeDivider();
MainFrame.java,deletePath=deletePath.getParentPath();,if (deletePath=deletePath != null ) deletePath=deletePath.getParentPath();
MainFrame.java,Matcher m = currentSelectedBugAspects.getMatcher();,if (currentSelectedBugAspects != null ) Matcher m = currentSelectedBugAspects.getMatcher();
MainFrame.java,BugTreeModel model=MainFrame.getInstance().getBugTreeModel();,if (model=MainFrame != null ) BugTreeModel model=MainFrame.getInstance().getBugTreeModel();
MainFrame.java,Matcher m = currentSelectedBugAspects.getMatcher();,if (currentSelectedBugAspects != null ) Matcher m = currentSelectedBugAspects.getMatcher();
MainFrame.java,final ActionMap map = tree.getActionMap();,if (tree != null ) final ActionMap map = tree.getActionMap();
MainFrame.java,int rows = jTree.getRowCount();,if (jTree != null ) int rows = jTree.getRowCount();
MainFrame.java,int rows = jTree.getRowCount();,if (jTree != null ) int rows = jTree.getRowCount();
MainFrame.java,Object lastPathComponent = treePath.getLastPathComponent();,if (treePath != null ) Object lastPathComponent = treePath.getLastPathComponent();
MainFrame.java,int rows = jTree.getRowCount();,if (jTree != null ) int rows = jTree.getRowCount();
MainFrame.java,Object lastPathComponent = treePath.getLastPathComponent();,if (treePath != null ) Object lastPathComponent = treePath.getLastPathComponent();
MainFrame.java,CardLayout layout = (CardLayout) cardPanel.getLayout();,if (cardPanel != null ) CardLayout layout = (CardLayout) cardPanel.getLayout();
MainFrame.java,JToolTip tempToolTip = tableheader.createToolTip();,if (tableheader != null ) JToolTip tempToolTip = tableheader.createToolTip();
MainFrame.java,TreePath path = selectionEvent.getNewLeadSelectionPath();,if (selectionEvent != null ) TreePath path = selectionEvent.getNewLeadSelectionPath();
MainFrame.java,Object lastPathComponent = path.getLastPathComponent();,if (path != null ) Object lastPathComponent = path.getLastPathComponent();
MainFrame.java,TreePath path = event.getPath();,if (event != null ) TreePath path = event.getPath();
MainFrame.java,Object lastPathComponent = path.getLastPathComponent();,if (path != null ) Object lastPathComponent = path.getLastPathComponent();
CheckExpectedWarnings.java,BugReporter realBugReporter = bugReporter.getRealBugReporter();,if (bugReporter != null ) BugReporter realBugReporter = bugReporter.getRealBugReporter();
FindBugs.java,BugReporter origBugReporter = bugReporter.getDelegate();,if (bugReporter != null ) BugReporter origBugReporter = bugReporter.getDelegate();
FindBugs.java,BugReporter origBugReporter = bugReporter.getDelegate();,if (bugReporter != null ) BugReporter origBugReporter = bugReporter.getDelegate();
FindBugs.java,BugReporter realBugReporter = findBugs.getBugReporter().getRealBugReporter();,if (findBugs != null ) BugReporter realBugReporter = findBugs.getBugReporter().getRealBugReporter();
FindBugs2.java,final BugReporter origBugReporter = bugReporter.getDelegate();,if (bugReporter != null ) final BugReporter origBugReporter = bugReporter.getDelegate();
FindBugs2.java,BugReporter origBugReporter = bugReporter.getDelegate();,if (bugReporter != null ) BugReporter origBugReporter = bugReporter.getDelegate();
AppEngineCloudNetworkClient.java,int bugCount = timestamps.size();,if (timestamps != null ) int bugCount = timestamps.size();
BugTreeModel.java,String[] values= key.getAllSorted();,if (key != null ) String[] values= key.getAllSorted();
Sortables.java,BugCollection bugCollection = MainFrame.getInstance().getBugCollection();,if (MainFrame != null ) BugCollection bugCollection = MainFrame.getInstance().getBugCollection();
MainFrame.java,next = base.next();,if (base != null ) next = base.next();
MainFrame.java,ProgressMonitor pm = pmin.getProgressMonitor();,if (pmin != null ) ProgressMonitor pm = pmin.getProgressMonitor();
MainFrame.java,String defaultValue = item.getDefaultValue();,if (item != null ) String defaultValue = item.getDefaultValue();
MainFrame.java,JComponent field = item.getField();,if (item != null ) JComponent field = item.getField();
CommentsArea.java,BugInstance bug = frame.currentSelectedBugLeaf.getBug();,if (frame != null ) BugInstance bug = frame.currentSelectedBugLeaf.getBug();
CommentsArea.java,BugInstance bug = frame.currentSelectedBugLeaf.getBug();,if (frame != null ) BugInstance bug = frame.currentSelectedBugLeaf.getBug();
CommentsArea.java,Cloud cloud = getMainFrame().bugCollection.getCloud();,if (getMainFrame() != null ) Cloud cloud = getMainFrame().bugCollection.getCloud();
CommentsArea.java,Cloud cloud = getMainFrame().bugCollection.getCloud();,if (getMainFrame() != null ) Cloud cloud = getMainFrame().bugCollection.getCloud();
CommentsArea.java,BugInstance bug = frame.currentSelectedBugLeaf.getBug();,if (frame != null ) BugInstance bug = frame.currentSelectedBugLeaf.getBug();
CommentsArea.java,TreePath path = model.getPathToBug(theNode.getBug());,if (model != null ) TreePath path = model.getPathToBug(theNode.getBug());
CommentsArea.java,Object[] objPath = path.getParentPath().getPath();,if (path != null ) Object[] objPath = path.getParentPath().getPath();
CommentsArea.java,TreePath pathToNode = new TreePath(reconstruct.toArray());,if (TreePath(reconstruct != null ) TreePath pathToNode = new TreePath(reconstruct.toArray());
CommentsArea.java,TreePath unsuppressPath = model.getPathToBug(theNode.getBug());,if (model != null ) TreePath unsuppressPath = model.getPathToBug(theNode.getBug());
CommentsArea.java,TreePath path = model.getPathToBug(theNode.getBug());,if (model != null ) TreePath path = model.getPathToBug(theNode.getBug());
MainFrame.java,Cloud cloud = this.bugCollection.getCloud();,if (this != null ) Cloud cloud = this.bugCollection.getCloud();
MainFrame.java,List<Sortables> sortables = sorter.getOrderBeforeDivider();,if (sorter != null ) List<Sortables> sortables = sorter.getOrderBeforeDivider();
MainFrame.java,Filter suppressionMatcher = project.getSuppressionFilter();,if (project != null ) Filter suppressionMatcher = project.getSuppressionFilter();
MainFrame.java,Cloud plugin = this.bugCollection.getCloud();,if (this != null ) Cloud plugin = this.bugCollection.getCloud();
MainFrame.java,Cloud plugin = bugCollection.getCloud();,if (bugCollection != null ) Cloud plugin = bugCollection.getCloud();
MainFrame.java,BugTreeModel model = (BugTreeModel) tree.getModel();,if (tree != null ) BugTreeModel model = (BugTreeModel) tree.getModel();
MainFrame.java,name = saveFile.getAbsolutePath();,if (saveFile != null ) name = saveFile.getAbsolutePath();
MainFrame.java,String oldTitle = MainFrame.this.getTitle();,if (MainFrame != null ) String oldTitle = MainFrame.this.getTitle();
MainFrame.java,Filter suppressionFilter = project.getSuppressionFilter();,if (project != null ) Filter suppressionFilter = project.getSuppressionFilter();
MainFrame.java,Filter suppressionFilter = project.getSuppressionFilter();,if (project != null ) Filter suppressionFilter = project.getSuppressionFilter();
MainFrame.java,deletePath=deletePath.getParentPath();,if (deletePath=deletePath != null ) deletePath=deletePath.getParentPath();
MainFrame.java,Matcher m = currentSelectedBugAspects.getMatcher();,if (currentSelectedBugAspects != null ) Matcher m = currentSelectedBugAspects.getMatcher();
MainFrame.java,BugTreeModel model=MainFrame.getInstance().getBugTreeModel();,if (model=MainFrame != null ) BugTreeModel model=MainFrame.getInstance().getBugTreeModel();
MainFrame.java,Matcher m = currentSelectedBugAspects.getMatcher();,if (currentSelectedBugAspects != null ) Matcher m = currentSelectedBugAspects.getMatcher();
MainFrame.java,JMenu windowMenu = guiLayout.createWindowMenu();,if (guiLayout != null ) JMenu windowMenu = guiLayout.createWindowMenu();
MainFrame.java,final ActionMap map = tree.getActionMap();,if (tree != null ) final ActionMap map = tree.getActionMap();
MainFrame.java,JRadioButtonMenuItem rbMenuItem = new JRadioButtonMenuItem(r.toString());,if (JRadioButtonMenuItem(r != null ) JRadioButtonMenuItem rbMenuItem = new JRadioButtonMenuItem(r.toString());
MainFrame.java,JRadioButtonMenuItem rbMenuItem = new JRadioButtonMenuItem(r.toString());,if (JRadioButtonMenuItem(r != null ) JRadioButtonMenuItem rbMenuItem = new JRadioButtonMenuItem(r.toString());
MainFrame.java,JRadioButtonMenuItem rbMenuItem = new JRadioButtonMenuItem(r.toString());,if (JRadioButtonMenuItem(r != null ) JRadioButtonMenuItem rbMenuItem = new JRadioButtonMenuItem(r.toString());
MainFrame.java,JRadioButtonMenuItem rbMenuItem = new JRadioButtonMenuItem(r.toString());,if (JRadioButtonMenuItem(r != null ) JRadioButtonMenuItem rbMenuItem = new JRadioButtonMenuItem(r.toString());
MainFrame.java,int rows = jTree.getRowCount();,if (jTree != null ) int rows = jTree.getRowCount();
MainFrame.java,int rows = jTree.getRowCount();,if (jTree != null ) int rows = jTree.getRowCount();
MainFrame.java,Object lastPathComponent = treePath.getLastPathComponent();,if (treePath != null ) Object lastPathComponent = treePath.getLastPathComponent();
MainFrame.java,int rows = jTree.getRowCount();,if (jTree != null ) int rows = jTree.getRowCount();
MainFrame.java,Object lastPathComponent = treePath.getLastPathComponent();,if (treePath != null ) Object lastPathComponent = treePath.getLastPathComponent();
MainFrame.java,List<String> fileList = curProject.getFileList();,if (curProject != null ) List<String> fileList = curProject.getFileList();
MainFrame.java,f = filterOpenFileChooser.getSelectedFile();,if (filterOpenFileChooser != null ) f = filterOpenFileChooser.getSelectedFile();
MainFrame.java,filter = Filter.parseFilter(f.getPath());,if (Filter != null ) filter = Filter.parseFilter(f.getPath());
MainFrame.java,fileType = convertFilterToType(saveOpenFileChooser.getFileFilter());,if (convertFilterToType(saveOpenFileChooser != null ) fileType = convertFilterToType(saveOpenFileChooser.getFileFilter());
MainFrame.java,final File f = saveOpenFileChooser.getSelectedFile();,if (saveOpenFileChooser != null ) final File f = saveOpenFileChooser.getSelectedFile();
MainFrame.java,f = filterOpenFileChooser.getSelectedFile();,if (filterOpenFileChooser != null ) f = filterOpenFileChooser.getSelectedFile();
MainFrame.java,Filter suppressionFilter = getProject().getSuppressionFilter();,if (getProject() != null ) Filter suppressionFilter = getProject().getSuppressionFilter();
MainFrame.java,fileType = convertFilterToType(saveOpenFileChooser.getFileFilter());,if (convertFilterToType(saveOpenFileChooser != null ) fileType = convertFilterToType(saveOpenFileChooser.getFileFilter());
MainFrame.java,f = saveOpenFileChooser.getSelectedFile();,if (saveOpenFileChooser != null ) f = saveOpenFileChooser.getSelectedFile();
MainFrame.java,sorter = GUISaveState.getInstance().getStarterTable();,if (GUISaveState != null ) sorter = GUISaveState.getInstance().getStarterTable();
MainFrame.java,treeUI = (BasicTreeUI) tree.getUI();,if (tree != null ) treeUI = (BasicTreeUI) tree.getUI();
MainFrame.java,int num = (int) (Driver.getFontSize());,if ((Driver != null ) int num = (int) (Driver.getFontSize());
MainFrame.java,TreePath path = event.getPath();,if (event != null ) TreePath path = event.getPath();
MainFrame.java,Object lastPathComponent = path.getLastPathComponent();,if (path != null ) Object lastPathComponent = path.getLastPathComponent();
MainFrame.java,TreePath path = selectionEvent.getNewLeadSelectionPath();,if (selectionEvent != null ) TreePath path = selectionEvent.getNewLeadSelectionPath();
MainFrame.java,Object lastPathComponent = path.getLastPathComponent();,if (path != null ) Object lastPathComponent = path.getLastPathComponent();
MainFrame.java,BugInstance bug  = currentSelectedBugLeaf.getBug();,if (currentSelectedBugLeaf != null ) BugInstance bug  = currentSelectedBugLeaf.getBug();
MainFrame.java,SigninState signinState = bugCollection.getCloud().getSigninState();,if (bugCollection != null ) SigninState signinState = bugCollection.getCloud().getSigninState();
MainFrame.java,boolean checked = signInAuto.isSelected();,if (signInAuto != null ) boolean checked = signInAuto.isSelected();
MainFrame.java,int countFilteredBugs = BugSet.countFilteredBugs();,if (BugSet != null ) int countFilteredBugs = BugSet.countFilteredBugs();
MainFrame.java,Cloud plugin = bugCollection.getCloud();,if (bugCollection != null ) Cloud plugin = bugCollection.getCloud();
MainFrame.java,String pluginMsg = plugin.getStatusMsg();,if (plugin != null ) String pluginMsg = plugin.getStatusMsg();
MainFrame.java,SigninState state = plugin.getSigninState();,if (plugin != null ) SigninState state = plugin.getSigninState();
MainFrame.java,int fontSize = (int) Driver.getFontSize();,if (Driver != null ) int fontSize = (int) Driver.getFontSize();
MainFrame.java,JToolTip tempToolTip = tableheader.createToolTip();,if (tableheader != null ) JToolTip tempToolTip = tableheader.createToolTip();
MainFrame.java,JComponent label = guiLayout.getSourceViewComponent();,if (guiLayout != null ) JComponent label = guiLayout.getSourceViewComponent();
MainFrame.java,Cloud plugin = this.bugCollection.getCloud();,if (this != null ) Cloud plugin = this.bugCollection.getCloud();
MainFrame.java,float size = Driver.getFontSize();,if (Driver != null ) float size = Driver.getFontSize();
MainFrame.java,Project project = bugs.getProject();,if (bugs != null ) Project project = bugs.getProject();
MainFrame.java,BugCollection bc=BugLoader.combineBugHistories();,if (bc=BugLoader != null ) BugCollection bc=BugLoader.combineBugHistories();
MainFrame.java,ArrayList<File> xmlFiles=GUISaveState.getInstance().getRecentFiles();,if (xmlFiles=GUISaveState != null ) ArrayList<File> xmlFiles=GUISaveState.getInstance().getRecentFiles();
MainFrame.java,ProgressMonitor pm = pmin.getProgressMonitor();,if (pmin != null ) ProgressMonitor pm = pmin.getProgressMonitor();
MainFrame.java,Cloud cloud = this.bugCollection.getCloud();,if (this != null ) Cloud cloud = this.bugCollection.getCloud();
MainFrame.java,String report = stringWriter.toString();,if (stringWriter != null ) String report = stringWriter.toString();
MainFrame.java,Iterator<BugInstance> base = bugCollection.getCollection().iterator();,if (bugCollection != null ) Iterator<BugInstance> base = bugCollection.getCollection().iterator();
MainFrame.java,String defaultValue = item.getDefaultValue();,if (item != null ) String defaultValue = item.getDefaultValue();
MainFrame.java,JComponent field = item.getField();,if (item != null ) JComponent field = item.getField();
SourceCodeDisplay.java,int startLine = sourceAnnotation.getStartLine();,if (sourceAnnotation != null ) int startLine = sourceAnnotation.getStartLine();
SourceCodeDisplay.java,Document doc = pane.getDocument();,if (pane != null ) Document doc = pane.getDocument();
ViewFilter.java,Cloud c = mf.bugCollection.getCloud();,if (mf != null ) Cloud c = mf.bugCollection.getCloud();
ViewFilter.java,Cloud c = mf.bugCollection.getCloud();,if (mf != null ) Cloud c = mf.bugCollection.getCloud();
UserAnnotationsView.java,final int selectionIndex = designationComboBox.getSelectionIndex();,if (designationComboBox != null ) final int selectionIndex = designationComboBox.getSelectionIndex();
OpcodeStack.java,int specialKind = topItem.getSpecialKind();,if (topItem != null ) int specialKind = topItem.getSpecialKind();
BugInstance.java,Cloud cloud = bugCollection.getCloud();,if (bugCollection != null ) Cloud cloud = bugCollection.getCloud();
TypeFrameModelingVisitor.java,instanceOfValueNumber = vnaFrame.getTopValue();,if (vnaFrame != null ) instanceOfValueNumber = vnaFrame.getTopValue();
FindBadCast2.java,Instruction nextIns = handle.getNext().getInstruction();,if (handle != null ) Instruction nextIns = handle.getNext().getInstruction();
ReportConfigurationTab.java,final IProject eclipseProj = propertyPage.getProject();,if (propertyPage != null ) final IProject eclipseProj = propertyPage.getProject();
ReportConfigurationTab.java,Project project = collection.getProject();,if (collection != null ) Project project = collection.getProject();
ReportConfigurationTab.java,CloudPlugin item = clouds.get(cloudCombo.getSelectionIndex());,if (clouds != null ) CloudPlugin item = clouds.get(cloudCombo.getSelectionIndex());
ReportConfigurationTab.java,IWorkbenchPage page = FindbugsPlugin.getActiveWorkbenchWindow().getActivePage();,if (FindbugsPlugin != null ) IWorkbenchPage page = FindbugsPlugin.getActiveWorkbenchWindow().getActivePage();
MainFrame.java,Project project = bugs.getProject();,if (bugs != null ) Project project = bugs.getProject();
MainFrame.java,CardLayout layout = (CardLayout) cardPanel.getLayout();,if (cardPanel != null ) CardLayout layout = (CardLayout) cardPanel.getLayout();
MainFrame.java,CardLayout layout = (CardLayout) cardPanel.getLayout();,if (cardPanel != null ) CardLayout layout = (CardLayout) cardPanel.getLayout();
ReportConfigurationTab.java,Project project = collection.getProject();,if (collection != null ) Project project = collection.getProject();
ReportConfigurationTab.java,CloudPlugin item = clouds.get(cloudCombo.getSelectionIndex());,if (clouds != null ) CloudPlugin item = clouds.get(cloudCombo.getSelectionIndex());
BugLoader.java,Iterator<BugInstance> i=collection.iterator();,if (i=collection != null ) Iterator<BugInstance> i=collection.iterator();
ReportConfigurationTab.java,IProject eclipseProj = propertyPage.getProject();,if (propertyPage != null ) IProject eclipseProj = propertyPage.getProject();
ReportConfigurationTab.java,IProject eclipseProj = propertyPage.getProject();,if (propertyPage != null ) IProject eclipseProj = propertyPage.getProject();
StandardTypeMerger.java,aRef = ObjectTypeFactory.getInstance( aRef.getSignature());,if (aRef != null ) aRef = ObjectTypeFactory.getInstance( aRef.getSignature());
StandardTypeMerger.java,bRef = ObjectTypeFactory.getInstance( bRef.getSignature());,if (bRef != null ) bRef = ObjectTypeFactory.getInstance( bRef.getSignature());
ReportServlet.java,List<DbEvaluation> evals = (List<DbEvaluation>) query.execute();,if (query != null ) List<DbEvaluation> evals = (List<DbEvaluation>) query.execute();
FindUnrelatedTypesInGenericContainer.java,String sig = xclass.getSourceSignature();,if (xclass != null ) String sig = xclass.getSourceSignature();
ReportServlet.java,String epkg = getPackageName(eval.getIssue().getPrimaryClass());,if (getPackageName(eval != null ) String epkg = getPackageName(eval.getIssue().getPrimaryClass());
ReportServlet.java,DbIssue issue = eval.getIssue();,if (eval != null ) DbIssue issue = eval.getIssue();
ReportServlet.java,String issueHash = issue.getHash();,if (issue != null ) String issueHash = issue.getHash();
ReportServlet.java,String pkg = getPackageName(issue.getPrimaryClass());,if (getPackageName(issue != null ) String pkg = getPackageName(issue.getPrimaryClass());
FlybushServletTestUtil.java,DbIssue foundIssue = persistenceHelper.createDbIssue();,if (persistenceHelper != null ) DbIssue foundIssue = persistenceHelper.createDbIssue();
StandardTypeMerger.java,ArrayList<ReferenceType> result = new ArrayList(aP.size());,if (ArrayList(aP != null ) ArrayList<ReferenceType> result = new ArrayList(aP.size());
OpcodeStack.java,IAnalysisCache analysisCache = Global.getAnalysisCache();,if (Global != null ) IAnalysisCache analysisCache = Global.getAnalysisCache();
ReportServlet.java,List<DbUser> userObjs = (List<DbUser>) userQuery.execute();,if (userQuery != null ) List<DbUser> userObjs = (List<DbUser>) userQuery.execute();
ReportServlet.java,Set<String> users = Sets.newHashSet();,if (Sets != null ) Set<String> users = Sets.newHashSet();
ReportServlet.java,String pkg = issue.getPrimaryClass();,if (issue != null ) String pkg = issue.getPrimaryClass();
ReportServlet.java,List<Double> data = Lists.newArrayList();,if (Lists != null ) List<Double> data = Lists.newArrayList();
ReportServlet.java,String issueHash = eval.getIssue().getHash();,if (eval != null ) String issueHash = eval.getIssue().getHash();
RejarClassesForAnalysis.java,String name = ze.getName();,if (ze != null ) String name = ze.getName();
MergeSummarizeAndView.java,cloud = results.reinitializeCloud();,if (results != null ) cloud = results.reinitializeCloud();
PackageMemberAnnotation.java,AnalysisContext context = AnalysisContext.currentAnalysisContext();,if (AnalysisContext != null ) AnalysisContext context = AnalysisContext.currentAnalysisContext();
PackageStats.java,ClassAnnotation primaryClass = bug.getPrimaryClass();,if (bug != null ) ClassAnnotation primaryClass = bug.getPrimaryClass();
ProjectStats.java,PackageStats stat = getPackageStats(bug.getPrimaryClass().getPackageName());,if (getPackageStats(bug != null ) PackageStats stat = getPackageStats(bug.getPrimaryClass().getPackageName());
FileBugHash.java,ClassAnnotation classAnnotation = bug.getPrimaryClass();,if (bug != null ) ClassAnnotation classAnnotation = bug.getPrimaryClass();
FileBugHash.java,MethodAnnotation methodAnnotation = bug.getPrimaryMethod();,if (bug != null ) MethodAnnotation methodAnnotation = bug.getPrimaryMethod();
FileBugHash.java,FieldAnnotation fieldAnnotation = bug.getPrimaryField();,if (bug != null ) FieldAnnotation fieldAnnotation = bug.getPrimaryField();
MainFrame.java,FieldAnnotation primeField = bug.getPrimaryField();,if (bug != null ) FieldAnnotation primeField = bug.getPrimaryField();
MainFrame.java,MethodAnnotation primeMethod = bug.getPrimaryMethod();,if (bug != null ) MethodAnnotation primeMethod = bug.getPrimaryMethod();
MainFrame.java,ClassAnnotation primeClass = bug.getPrimaryClass();,if (bug != null ) ClassAnnotation primeClass = bug.getPrimaryClass();
MainFrame.java,fieldClass = primeField.getClassName();,if (primeField != null ) fieldClass = primeField.getClassName();
MainFrame.java,methodClass = primeMethod.getClassName();,if (primeMethod != null ) methodClass = primeMethod.getClassName();
MainFrame.java,int start = note.getStartLine();,if (note != null ) int start = note.getStartLine();
MainFrame.java,int end = note.getEndLine();,if (note != null ) int end = note.getEndLine();
MainFrame.java,final SourceLineAnnotation noteSrc = note.getSourceLines();,if (note != null ) final SourceLineAnnotation noteSrc = note.getSourceLines();
MainFrame.java,int start = noteSrc.getStartLine();,if (noteSrc != null ) int start = noteSrc.getStartLine();
MainFrame.java,int end = noteSrc.getEndLine();,if (noteSrc != null ) int end = noteSrc.getEndLine();
MainFrame.java,SigninState signinState = bugCollection.getCloud().getSigninState();,if (bugCollection != null ) SigninState signinState = bugCollection.getCloud().getSigninState();
MainFrame.java,boolean checked = signInAuto.isSelected();,if (signInAuto != null ) boolean checked = signInAuto.isSelected();
ReportServlet.java,List<Double> data = Lists.newArrayList();,if (Lists != null ) List<Double> data = Lists.newArrayList();
MainFrame.java,Filter suppressionMatcher = project.getSuppressionFilter();,if (project != null ) Filter suppressionMatcher = project.getSuppressionFilter();
ReportServlet.java,long first = Collections.min(evalsByWeek.keySet());,if (Collections != null ) long first = Collections.min(evalsByWeek.keySet());
ReportServlet.java,Calendar cal = Calendar.getInstance();,if (Calendar != null ) Calendar cal = Calendar.getInstance();
ReportServlet.java,long last = Collections.max(evalsByWeek.keySet());,if (Collections != null ) long last = Collections.max(evalsByWeek.keySet());
ReportServlet.java,long first = Collections.min(evalsByWeek.keySet());,if (Collections != null ) long first = Collections.min(evalsByWeek.keySet());
ReportServlet.java,Calendar cal = Calendar.getInstance();,if (Calendar != null ) Calendar cal = Calendar.getInstance();
ReportServlet.java,long last = Collections.max(evalsByWeek.keySet());,if (Collections != null ) long last = Collections.max(evalsByWeek.keySet());
ReportServlet.java,int maxPerWeek = Collections.max(evalsByWeek.values());,if (Collections != null ) int maxPerWeek = Collections.max(evalsByWeek.values());
ReportServlet.java,Integer count = evalsByWeek.get(cal.getTimeInMillis());,if (evalsByWeek != null ) Integer count = evalsByWeek.get(cal.getTimeInMillis());
ReportServlet.java,int max = Collections.max(countByUser.values());,if (Collections != null ) int max = Collections.max(countByUser.values());
ReportServlet.java,int count = entry.getValue();,if (entry != null ) int count = entry.getValue();
UserAnnotationsView.java,int comboIndex = theBug.getBugInstance().getUserDesignationKeyIndex();,if (theBug != null ) int comboIndex = theBug.getBugInstance().getUserDesignationKeyIndex();
UserAnnotationsView.java,BugInstance bug = bci.getBugInstance();,if (bci != null ) BugInstance bug = bci.getBugInstance();
UserAnnotationsView.java,Cloud cloud = bci.getBugCollection().getCloud();,if (bci != null ) Cloud cloud = bci.getBugCollection().getCloud();
UnionResults.java,project = results.getProject();,if (results != null ) project = results.getProject();
PluginLoader.java,boolean deprecated = Boolean.valueOf(deprecatedStr).booleanValue();,if (Boolean != null ) boolean deprecated = Boolean.valueOf(deprecatedStr).booleanValue();
TypeFrameModelingVisitor.java,XMethod m = targets.iterator().next();,if (targets != null ) XMethod m = targets.iterator().next();
TypeFrameModelingVisitor.java,SignatureParser p = new SignatureParser(m.getSignature());,if (SignatureParser(m != null ) SignatureParser p = new SignatureParser(m.getSignature());
FindUnrelatedTypesInGenericContainer.java,String sig = xclass.getSourceSignature();,if (xclass != null ) String sig = xclass.getSourceSignature();
AnnotationVisitor.java,String name = obj.getName();,if (obj != null ) String name = obj.getName();
AnnotationVisitor.java,byte[] b = obj.getBytes();,if (obj != null ) byte[] b = obj.getBytes();
AnnotationVisitor.java,int numAnnotations = bytes.readUnsignedShort();,if (bytes != null ) int numAnnotations = bytes.readUnsignedShort();
AnnotationVisitor.java,int numPairs = bytes.readUnsignedShort();,if (bytes != null ) int numPairs = bytes.readUnsignedShort();
AnnotationVisitor.java,int numParameters = bytes.readUnsignedByte();,if (bytes != null ) int numParameters = bytes.readUnsignedByte();
AnnotationVisitor.java,int numAnnotations = bytes.readUnsignedShort();,if (bytes != null ) int numAnnotations = bytes.readUnsignedShort();
AnnotationVisitor.java,int numPairs = bytes.readUnsignedShort();,if (bytes != null ) int numPairs = bytes.readUnsignedShort();
TypeFrameModelingVisitor.java,GenericSignatureParser p = new GenericSignatureParser(m.getSourceSignature());,if (GenericSignatureParser(m != null ) GenericSignatureParser p = new GenericSignatureParser(m.getSourceSignature());
DetectorConfigurationTabTestSubclass.java,TableItem[] items = availableFactoriesTableViewer.getTable().getItems();,if (availableFactoriesTableViewer != null ) TableItem[] items = availableFactoriesTableViewer.getTable().getItems();
DetectorConfigurationTabTestSubclass.java,TableItem[] items = availableFactoriesTableViewer.getTable().getItems();,if (availableFactoriesTableViewer != null ) TableItem[] items = availableFactoriesTableViewer.getTable().getItems();
FilterFilesTabTestSubclass.java,this.fileName = file.getName();,if (file != null ) this.fileName = file.getName();
FilterFilesTabTestSubclass.java,this.parentPath = file.getParent();,if (file != null ) this.parentPath = file.getParent();
PropertiesPageTest.java,DetectorFactory detectorFactory = factories.next();,if (factories != null ) DetectorFactory detectorFactory = factories.next();
PropertiesPageTest.java,DetectorFactory detectorFactory = factories.next();,if (factories != null ) DetectorFactory detectorFactory = factories.next();
AbstractPluginTest.java,String[] testFilesPaths = scenario.getTestFilesPaths();,if (scenario != null ) String[] testFilesPaths = scenario.getTestFilesPaths();
AbstractQuickfixTest.java,input = url.openStream();,if (url != null ) input = url.openStream();
FilterBugsDialogTest.java,String selectedIds = dialog.getSelectedIds();,if (dialog != null ) String selectedIds = dialog.getSelectedIds();
ExpectedViewBugGroup.java,ExpectedViewElement expectedChild = iChildren.next();,if (iChildren != null ) ExpectedViewElement expectedChild = iChildren.next();
ExpectedViewBugGroup.java,IMarker actualMarker = iMarkers.next();,if (iMarkers != null ) IMarker actualMarker = iMarkers.next();
ExpectedViewBugGroup.java,ExpectedViewElement expectedMarker = iterator.next();,if (iterator != null ) ExpectedViewElement expectedMarker = iterator.next();
FindBugsPerspectiveTest.java,IWorkbenchWindow window = PlatformUI.getWorkbench().getActiveWorkbenchWindow();,if (PlatformUI != null ) IWorkbenchWindow window = PlatformUI.getWorkbench().getActiveWorkbenchWindow();
JavaProjectHelper.java,IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();,if (ResourcesPlugin != null ) IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();
JavaProjectHelper.java,outputLocation = binFolder.getFullPath();,if (binFolder != null ) outputLocation = binFolder.getFullPath();
JavaProjectHelper.java,outputLocation = project.getFullPath();,if (project != null ) outputLocation = project.getFullPath();
JavaProjectHelper.java,IResource[] resources = jproject.getProject().members();,if (jproject != null ) IResource[] resources = jproject.getProject().members();
JavaProjectHelper.java,IProject project = jproject.getProject();,if (jproject != null ) IProject project = jproject.getProject();
JavaProjectHelper.java,IProject project = jproject.getProject();,if (jproject != null ) IProject project = jproject.getProject();
JavaProjectHelper.java,IFile newFile = project.getFile(jarPath.lastSegment());,if (project != null ) IFile newFile = project.getFile(jarPath.lastSegment());
JavaProjectHelper.java,inputStream = new FileInputStream(jarPath.toFile());,if (FileInputStream(jarPath != null ) inputStream = new FileInputStream(jarPath.toFile());
JavaProjectHelper.java,IProject project = jproject.getProject();,if (jproject != null ) IProject project = jproject.getProject();
JavaProjectHelper.java,IWorkspace workspace = ResourcesPlugin.getWorkspace();,if (ResourcesPlugin != null ) IWorkspace workspace = ResourcesPlugin.getWorkspace();
JavaProjectHelper.java,IWorkspaceDescription desc = workspace.getDescription();,if (workspace != null ) IWorkspaceDescription desc = workspace.getDescription();
JavaProjectHelper.java,boolean result = desc.isAutoBuilding();,if (desc != null ) boolean result = desc.isAutoBuilding();
JavaProjectHelper.java,IClasspathEntry[] oldEntries = jproject.getRawClasspath();,if (jproject != null ) IClasspathEntry[] oldEntries = jproject.getRawClasspath();
JavaProjectHelper.java,IProjectDescription description = proj.getDescription();,if (proj != null ) IProjectDescription description = proj.getDescription();
JavaProjectHelper.java,String[] prevNatures = description.getNatureIds();,if (description != null ) String[] prevNatures = description.getNatureIds();
JavaProjectHelper.java,String path = (String) entryPaths.nextElement();,if (entryPaths != null ) String path = (String) entryPaths.nextElement();
AntPropertyValueProvider.java,String home = FindbugsPlugin.getFindBugsEnginePluginLocation();,if (FindbugsPlugin != null ) String home = FindbugsPlugin.getFindBugsEnginePluginLocation();
FindbugsPlugin.java,ImageDescriptor descriptor = getImageDescriptor(prio.iconName());,if (getImageDescriptor(prio != null ) ImageDescriptor descriptor = getImageDescriptor(prio.iconName());
FindbugsPlugin.java,ResourceBundle bundle = FindbugsPlugin.getDefault().getResourceBundle();,if (FindbugsPlugin != null ) ResourceBundle bundle = FindbugsPlugin.getDefault().getResourceBundle();
FindbugsPlugin.java,FindbugsPlugin.DEBUG = Boolean.valueOf(option).booleanValue();,if (Boolean != null ) FindbugsPlugin.DEBUG = Boolean.valueOf(option).booleanValue();
FindbugsPlugin.java,FindBugsBuilder.DEBUG = Boolean.valueOf(option).booleanValue();,if (Boolean != null ) FindBugsBuilder.DEBUG = Boolean.valueOf(option).booleanValue();
FindbugsPlugin.java,FindBugsNature.DEBUG = Boolean.valueOf(option).booleanValue();,if (Boolean != null ) FindBugsNature.DEBUG = Boolean.valueOf(option).booleanValue();
FindbugsPlugin.java,Reporter.DEBUG = Boolean.valueOf(option).booleanValue();,if (Boolean != null ) Reporter.DEBUG = Boolean.valueOf(option).booleanValue();
FindbugsPlugin.java,BugContentProvider.DEBUG = Boolean.valueOf(option).booleanValue();,if (Boolean != null ) BugContentProvider.DEBUG = Boolean.valueOf(option).booleanValue();
FindbugsPlugin.java,IPath path = getDefault().getStateLocation(); // user-specific but not project-specific,if (project-specific != null ) IPath path = getDefault().getStateLocation(); // user-specific but not project-specific
FindbugsPlugin.java,File bugCollectionFile = bugCollectionPath.toFile();,if (bugCollectionPath != null ) File bugCollectionFile = bugCollectionPath.toFile();
FindbugsPlugin.java,File bugCollectionFile = bugCollectionPath.toFile();,if (bugCollectionPath != null ) File bugCollectionFile = bugCollectionPath.toFile();
FindbugsPlugin.java,boolean projectPropsEnabled = file.isAccessible();,if (file != null ) boolean projectPropsEnabled = file.isAccessible();
FindbugsPlugin.java,UserPreferences userPrefs = FindBugsPreferenceInitializer.createDefaultUserPreferences();,if (FindBugsPreferenceInitializer != null ) UserPreferences userPrefs = FindBugsPreferenceInitializer.createDefaultUserPreferences();
FindbugsPlugin.java,File prefsFile = path.toFile();,if (path != null ) File prefsFile = path.toFile();
FindbugsPlugin.java,IPath path = getDefault().getStateLocation();,if (getDefault() != null ) IPath path = getDefault().getStateLocation();
FindbugsPlugin.java,UserPreferences userPrefs = FindBugsPreferenceInitializer.createDefaultUserPreferences();,if (FindBugsPreferenceInitializer != null ) UserPreferences userPrefs = FindBugsPreferenceInitializer.createDefaultUserPreferences();
FindbugsPlugin.java,final IPreferenceStore store = FindbugsPlugin.getDefault().getPreferenceStore();,if (FindbugsPlugin != null ) final IPreferenceStore store = FindbugsPlugin.getDefault().getPreferenceStore();
FindbugsPlugin.java,BugPattern next = patternIterator.next();,if (patternIterator != null ) BugPattern next = patternIterator.next();
FindbugsPlugin.java,String patternId = next.getType();,if (next != null ) String patternId = next.getType();
FindbugsPlugin.java,BugCode next = patternIterator.next();,if (patternIterator != null ) BugCode next = patternIterator.next();
FindbugsPlugin.java,String type = next.getAbbrev();,if (next != null ) String type = next.getAbbrev();
CopyMarkerDetailsAction.java,IResource resource = marker.getResource();,if (marker != null ) IResource resource = marker.getResource();
CopyMarkerDetailsAction.java,IPath location = resource.getLocation();,if (resource != null ) IPath location = resource.getLocation();
FilterBugsDialogAction.java,Set<BugPattern> filtered = FindbugsPlugin.getFilteredPatterns();,if (FindbugsPlugin != null ) Set<BugPattern> filtered = FindbugsPlugin.getFilteredPatterns();
FilterBugsDialogAction.java,Set<BugCode> filteredTypes = FindbugsPlugin.getFilteredPatternTypes();,if (FindbugsPlugin != null ) Set<BugCode> filteredTypes = FindbugsPlugin.getFilteredPatternTypes();
FilterBugsDialogAction.java,int result = dialog.open();,if (dialog != null ) int result = dialog.open();
FilterBugsDialogAction.java,String selectedIds = dialog.getSelectedIds();,if (dialog != null ) String selectedIds = dialog.getSelectedIds();
FilterBugsDialogAction.java,CommonViewer viewer = navigator.getCommonViewer();,if (navigator != null ) CommonViewer viewer = navigator.getCommonViewer();
FilterBugsDialogAction.java,Object[] expandedElements = viewer.getExpandedElements();,if (viewer != null ) Object[] expandedElements = viewer.getExpandedElements();
FilterPatternAction.java,Set<String> sortedIds = FindbugsPlugin.getFilteredIds();,if (FindbugsPlugin != null ) Set<String> sortedIds = FindbugsPlugin.getFilteredIds();
FilterPatternAction.java,final IPreferenceStore store = FindbugsPlugin.getDefault().getPreferenceStore();,if (FindbugsPlugin != null ) final IPreferenceStore store = FindbugsPlugin.getDefault().getPreferenceStore();
FilterPatternAction.java,CommonViewer viewer = navigator.getCommonViewer();,if (navigator != null ) CommonViewer viewer = navigator.getCommonViewer();
FilterPatternAction.java,Object[] expandedElements = viewer.getExpandedElements();,if (viewer != null ) Object[] expandedElements = viewer.getExpandedElements();
FilterPatternAction.java,Object firstElement = ss.getFirstElement();,if (ss != null ) Object firstElement = ss.getFirstElement();
FindBugsAction.java,jobsRunning = projectMap.size();,if (projectMap != null ) jobsRunning = projectMap.size();
FindBugsAction.java,IDialogSettings settings = FindbugsPlugin.getDefault().getDialogSettings();,if (FindbugsPlugin != null ) IDialogSettings settings = FindbugsPlugin.getDefault().getDialogSettings();
FindBugsAction.java,Object element = structuredSelection.getFirstElement();,if (structuredSelection != null ) Object element = structuredSelection.getFirstElement();
FindBugsAction.java,IProject project = resource.getProject();,if (resource != null ) IProject project = resource.getProject();
FindBugsAction.java,final IPreferenceStore store = FindbugsPlugin.getDefault().getPreferenceStore();,if (FindbugsPlugin != null ) final IPreferenceStore store = FindbugsPlugin.getDefault().getPreferenceStore();
FindBugsAction.java,boolean remember = dialog.getToggleState();,if (dialog != null ) boolean remember = dialog.getToggleState();
FindBugsAction.java,int returnCode = dialog.getReturnCode();,if (dialog != null ) int returnCode = dialog.getReturnCode();
FindBugsAction.java,window = currentSite.getWorkbenchWindow();,if (currentSite != null ) window = currentSite.getWorkbenchWindow();
FindBugsAction.java,window = FindbugsPlugin.getActiveWorkbenchWindow();,if (FindbugsPlugin != null ) window = FindbugsPlugin.getActiveWorkbenchWindow();
FindBugsAction.java,IWorkbenchPage page = window.getActivePage();,if (window != null ) IWorkbenchPage page = window.getActivePage();
FindBugsAction.java,input = page.getInput();,if (page != null ) input = page.getInput();
FindBugsAction.java,input= ResourcesPlugin.getWorkspace().getRoot();,if (ResourcesPlugin != null ) input= ResourcesPlugin.getWorkspace().getRoot();
FindBugsAction.java,final IPreferenceStore store = FindbugsPlugin.getDefault().getPreferenceStore();,if (FindbugsPlugin != null ) final IPreferenceStore store = FindbugsPlugin.getDefault().getPreferenceStore();
GoIntoAction.java,CommonViewer viewer = navigator.getCommonViewer();,if (navigator != null ) CommonViewer viewer = navigator.getCommonViewer();
GoIntoAction.java,Object[] expandedElements = viewer.getVisibleExpandedElements();,if (viewer != null ) Object[] expandedElements = viewer.getVisibleExpandedElements();
GoIntoAction.java,Object element = ssel.getFirstElement();,if (ssel != null ) Object element = ssel.getFirstElement();
GoUpAction.java,CommonViewer viewer = navigator.getCommonViewer();,if (navigator != null ) CommonViewer viewer = navigator.getCommonViewer();
GoUpAction.java,Object[] expandedElements = viewer.getVisibleExpandedElements();,if (viewer != null ) Object[] expandedElements = viewer.getVisibleExpandedElements();
GoUpAction.java,Object input = viewer.getInput();,if (viewer != null ) Object input = viewer.getInput();
GoUpAction.java,Object data = group.getParent();,if (group != null ) Object data = group.getParent();
GoUpAction.java,Object input = navigator.getCommonViewer().getInput();,if (navigator != null ) Object input = navigator.getCommonViewer().getInput();
GoUpAction.java,Grouping grouping = provider.getGrouping();,if (provider != null ) Grouping grouping = provider.getGrouping();
GroupByAction.java,Grouping grouping = getGrouping(action.getId());,if (getGrouping(action != null ) Grouping grouping = getGrouping(action.getId());
GroupByAction.java,CommonViewer viewer = navigator.getCommonViewer();,if (navigator != null ) CommonViewer viewer = navigator.getCommonViewer();
GroupByAction.java,Object[] expandedElements = viewer.getExpandedElements();,if (viewer != null ) Object[] expandedElements = viewer.getExpandedElements();
MarkerRulerAction.java,control = ruler.getControl();,if (ruler != null ) control = ruler.getControl();
MarkerRulerAction.java,control = ruler.getControl();,if (ruler != null ) control = ruler.getControl();
MarkerRulerAction.java,int markerLine = document.getLineOfOffset(position.getOffset());,if (document != null ) int markerLine = document.getLineOfOffset(position.getOffset());
MarkerRulerAction.java,int line = ruler.getLineOfLastMouseButtonActivity();,if (ruler != null ) int line = ruler.getLineOfLastMouseButtonActivity();
MarkerRulerAction.java,IDocumentProvider provider = editor.getDocumentProvider();,if (editor != null ) IDocumentProvider provider = editor.getDocumentProvider();
MarkerRulerAction.java,IAnnotationModel model = provider.getAnnotationModel(editor.getEditorInput());,if (provider != null ) IAnnotationModel model = provider.getAnnotationModel(editor.getEditorInput());
MarkerRulerAction.java,IDocumentProvider provider = editor.getDocumentProvider();,if (editor != null ) IDocumentProvider provider = editor.getDocumentProvider();
OpenGroupDialogAction.java,List<GroupType> list = provider.getGrouping().asList();,if (provider != null ) List<GroupType> list = provider.getGrouping().asList();
OpenGroupDialogAction.java,int result = dialog.open();,if (dialog != null ) int result = dialog.open();
OpenGroupDialogAction.java,Grouping grouping = Grouping.createFrom(dialog.getGroups());,if (Grouping != null ) Grouping grouping = Grouping.createFrom(dialog.getGroups());
OpenGroupDialogAction.java,CommonViewer viewer = navigator.getCommonViewer();,if (navigator != null ) CommonViewer viewer = navigator.getCommonViewer();
OpenGroupDialogAction.java,Object[] expandedElements = viewer.getExpandedElements();,if (viewer != null ) Object[] expandedElements = viewer.getExpandedElements();
OpenPropertiesAction.java,Object element = ssel.getFirstElement();,if (ssel != null ) Object element = ssel.getFirstElement();
RefreshAction.java,CommonViewer viewer = navigator.getCommonViewer();,if (navigator != null ) CommonViewer viewer = navigator.getCommonViewer();
RefreshAction.java,Object[] expandedElements = viewer.getExpandedElements();,if (viewer != null ) Object[] expandedElements = viewer.getExpandedElements();
RefreshAction.java,Object input = viewer.getInput();,if (viewer != null ) Object input = viewer.getInput();
ShowInPackageExplorerAction.java,site = targetPart.getSite();,if (targetPart != null ) site = targetPart.getSite();
ShowInPackageExplorerAction.java,Object firstElement = ss.getFirstElement();,if (ss != null ) Object firstElement = ss.getFirstElement();
ShowInPackageExplorerAction.java,data = marker.getResource();,if (marker != null ) data = marker.getResource();
ShowInPackageExplorerAction.java,data = group.getData();,if (group != null ) data = group.getData();
FindBugsWorker.java,Set<IPath> srcDirs = outLocations.keySet();,if (outLocations != null ) Set<IPath> srcDirs = outLocations.keySet();
FindBugsWorker.java,SortedBugCollection newBugCollection = bugReporter.getBugCollection();,if (bugReporter != null ) SortedBugCollection newBugCollection = bugReporter.getBugCollection();
FindBugsWorker.java,String filterName = path.toOSString();,if (path != null ) String filterName = path.toOSString();
FindBugsWorker.java,commonPath = project.getLocation();,if (project != null ) commonPath = project.getLocation();
FindBugsWorker.java,IPath defaultOutputLocation = ResourceUtils.relativeToAbsolute(javaProject.getOutputLocation());,if (ResourceUtils != null ) IPath defaultOutputLocation = ResourceUtils.relativeToAbsolute(javaProject.getOutputLocation());
FindBugsWorker.java,IPath srcLocation = ResourceUtils.relativeToAbsolute(classpathEntry.getPath());,if (ResourceUtils != null ) IPath srcLocation = ResourceUtils.relativeToAbsolute(classpathEntry.getPath());
PDEClassPathGenerator.java,IClasspathEntry[] rawClasspath = javaProject.getRawClasspath();,if (javaProject != null ) IClasspathEntry[] rawClasspath = javaProject.getRawClasspath();
PDEClassPathGenerator.java,IPluginModelBase model = PluginRegistry.findModel(javaProject.getProject());,if (PluginRegistry != null ) IPluginModelBase model = PluginRegistry.findModel(javaProject.getProject());
PDEClassPathGenerator.java,BundleDescription target = model.getBundleDescription();,if (model != null ) BundleDescription target = model.getBundleDescription();
PDEClassPathGenerator.java,location = cpe.getPath();,if (cpe != null ) location = cpe.getPath();
PDEClassPathGenerator.java,String locationStr = location.toOSString();,if (location != null ) String locationStr = location.toOSString();
ResourceUtils.java,IPath outputLocation = classpathEntry.getOutputLocation();,if (classpathEntry != null ) IPath outputLocation = classpathEntry.getOutputLocation();
ResourceUtils.java,IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();,if (ResourcesPlugin != null ) IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();
ResourceUtils.java,IResource child = childDelta.getResource();,if (childDelta != null ) IResource child = childDelta.getResource();
ResourceUtils.java,int childType = child.getType();,if (child != null ) int childType = child.getType();
ResourceUtils.java,int deltaKind = childDelta.getKind();,if (childDelta != null ) int deltaKind = childDelta.getKind();
ResourceUtils.java,IContainer parent = child.getParent();,if (child != null ) IContainer parent = child.getParent();
ResourceUtils.java,Object element = iter.next();,if (iter != null ) Object element = iter.next();
ResourceUtils.java,IProject project = resource.getProject();,if (resource != null ) IProject project = resource.getProject();
ResourceUtils.java,IResource[] resources = set.getResources();,if (set != null ) IResource[] resources = set.getResources();
ResourceUtils.java,IPath location = candidate.getPath();,if (candidate != null ) IPath location = candidate.getPath();
ResourceUtils.java,IPath parentLoc = resource.getPath();,if (resource != null ) IPath parentLoc = resource.getPath();
WorkItem.java,IPath path = folder.getLocation();,if (folder != null ) IPath path = folder.getLocation();
WorkItem.java,File directory = out.toFile();,if (out != null ) File directory = out.toFile();
WorkItem.java,IPath path = file.getLocation();,if (file != null ) IPath path = file.getLocation();
WorkItem.java,String fileName = path.removeFileExtension().lastSegment();,if (path != null ) String fileName = path.removeFileExtension().lastSegment();
WorkItem.java,IType[] types = cu.getTypes();,if (cu != null ) IType[] types = cu.getTypes();
WorkItem.java,IPath srcRoot = entry.getKey();,if (entry != null ) IPath srcRoot = entry.getKey();
WorkItem.java,File file = path.toFile();,if (path != null ) File file = path.toFile();
AccuracyClassificationPulldownAction.java,IProject project = marker.getResource().getProject();,if (marker != null ) IProject project = marker.getResource().getProject();
AccuracyClassificationPulldownAction.java,boolean isBug = isBugProperty.getValueAsBoolean();,if (isBugProperty != null ) boolean isBug = isBugProperty.getValueAsBoolean();
SeverityClassificationPulldownAction.java,int severity = severityProperty.getValueAsInt();,if (severityProperty != null ) int severity = severityProperty.getValueAsInt();
IO.java,ByteArrayInputStream bis = new ByteArrayInputStream(bos.toByteArray());,if (ByteArrayInputStream(bos != null ) ByteArrayInputStream bis = new ByteArrayInputStream(bos.toByteArray());
FindBugsMarker.java,Priority[] values = Priority.values();,if (Priority != null ) Priority[] values = Priority.values();
FindBugsMarker.java,Priority[] values = Priority.values();,if (Priority != null ) Priority[] values = Priority.values();
FindBugsNature.java,IProjectDescription description = getProject().getDescription();,if (getProject() != null ) IProjectDescription description = getProject().getDescription();
FindBugsNature.java,ICommand[] commands = description.getBuildSpec();,if (description != null ) ICommand[] commands = description.getBuildSpec();
FindBugsNature.java,IProjectDescription description = getProject().getDescription();,if (getProject() != null ) IProjectDescription description = getProject().getDescription();
FindBugsNature.java,ICommand newCommand = description.newCommand();,if (description != null ) ICommand newCommand = description.newCommand();
FindBugsNature.java,ICommand[] commands = description.getBuildSpec();,if (description != null ) ICommand[] commands = description.getBuildSpec();
FindBugsNature.java,ICommand[] oldCommands = description.getBuildSpec();,if (description != null ) ICommand[] oldCommands = description.getBuildSpec();
FindBugsConstants.java,string = string.trim();,if (string != null ) string = string.trim();
FindBugsPreferenceInitializer.java,IPreferenceStore store = FindbugsPlugin.getDefault().getPreferenceStore();,if (FindbugsPlugin != null ) IPreferenceStore store = FindbugsPlugin.getDefault().getPreferenceStore();
FindBugsPreferenceInitializer.java,UserPreferences prefs = UserPreferences.createDefaultUserPreferences();,if (UserPreferences != null ) UserPreferences prefs = UserPreferences.createDefaultUserPreferences();
FindBugsPreferenceInitializer.java,IPreferenceStore store = FindbugsPlugin.getDefault().getPreferenceStore();,if (FindbugsPlugin != null ) IPreferenceStore store = FindbugsPlugin.getDefault().getPreferenceStore();
FilterFilesTab.java,prefs = propertyPage.getCurrentUserPreferences();,if (propertyPage != null ) prefs = propertyPage.getCurrentUserPreferences();
FilterFilesTab.java,this.control = viewer.getList();,if (viewer != null ) this.control = viewer.getList();
FilterFilesTab.java,filterPath = lastUsed.toOSString();,if (lastUsed != null ) filterPath = lastUsed.toOSString();
FilterFilesTab.java,IProject project = propertyPage.getProject();,if (propertyPage != null ) IProject project = propertyPage.getProject();
FilterFilesTab.java,IProject project = propertyPage.getProject();,if (propertyPage != null ) IProject project = propertyPage.getProject();
FilterFilesTab.java,IProject project = propertyPage.getProject();,if (propertyPage != null ) IProject project = propertyPage.getProject();
FindbugsPropertyPage.java,setProjectEnabled(enableProjectCheck == null || enableProjectCheck.getSelection());,if (enableProjectCheck != null ) setProjectEnabled(enableProjectCheck == null || enableProjectCheck.getSelection());
FindbugsPropertyPage.java,currentUserPreferences = (UserPreferences) origUserPreferences.clone();,if (origUserPreferences != null ) currentUserPreferences = (UserPreferences) origUserPreferences.clone();
FindbugsPropertyPage.java,boolean enabled = chkEnableFindBugs.getSelection();,if (chkEnableFindBugs != null ) boolean enabled = chkEnableFindBugs.getSelection();
FindbugsPropertyPage.java,boolean selection = chkRunAtFullBuild.getSelection();,if (chkRunAtFullBuild != null ) boolean selection = chkRunAtFullBuild.getSelection();
FindbugsPropertyPage.java,boolean enabled = enableProjectCheck.getSelection();,if (enableProjectCheck != null ) boolean enabled = enableProjectCheck.getSelection();
FindbugsPropertyPage.java,currentUserPreferences = FindBugsPreferenceInitializer.createDefaultUserPreferences();,if (FindBugsPreferenceInitializer != null ) currentUserPreferences = FindBugsPreferenceInitializer.createDefaultUserPreferences();
FindbugsPropertyPage.java,boolean builderEnabled = chkEnableFindBugs.getSelection();,if (chkEnableFindBugs != null ) boolean builderEnabled = chkEnableFindBugs.getSelection();
FindbugsPropertyPage.java,builderEnabled &= chkRunAtFullBuild.getSelection();,if (chkRunAtFullBuild != null ) builderEnabled &= chkRunAtFullBuild.getSelection();
FindbugsPropertyPage.java,boolean newSelection = enableProjectCheck.getSelection();,if (enableProjectCheck != null ) boolean newSelection = enableProjectCheck.getSelection();
FindbugsPropertyPage.java,DetectorFactory factory = iterator.next();,if (iterator != null ) DetectorFactory factory = iterator.next();
ReportConfigurationTab.java,String data = minPriorityCombo.getText();,if (minPriorityCombo != null ) String data = minPriorityCombo.getText();
ReportConfigurationTab.java,int rank = minRankSlider.getSelection();,if (minRankSlider != null ) int rank = minRankSlider.getSelection();
ReportConfigurationTab.java,int rank = minRankSlider.getSelection();,if (minRankSlider != null ) int rank = minRankSlider.getSelection();
ReportConfigurationTab.java,ProjectFilterSettings filterSettings = getCurrentProps().getFilterSettings();,if (getCurrentProps() != null ) ProjectFilterSettings filterSettings = getCurrentProps().getFilterSettings();
ReportConfigurationTab.java,String category = (String) checkBox.getData();,if (checkBox != null ) String category = (String) checkBox.getData();
ReportConfigurationTab.java,ProjectFilterSettings filterSettings = prefs.getFilterSettings();,if (prefs != null ) ProjectFilterSettings filterSettings = prefs.getFilterSettings();
JdtUtils.java,compilePrio = prio.intValue();,if (prio != null ) compilePrio = prio.intValue();
JdtUtils.java,IJavaProject project = javaElt.getJavaProject();,if (javaElt != null ) IJavaProject project = javaElt.getJavaProject();
JdtUtils.java,declaringType = parentType.getDeclaringType();,if (parentType != null ) declaringType = parentType.getDeclaringType();
JdtUtils.java,IJavaElement[] children = parent.getChildren();,if (parent != null ) IJavaElement[] children = parent.getChildren();
JdtUtils.java,List<IType> keys = new ArrayList<IType>(map.keySet());,if (ArrayList<IType>(map != null ) List<IType> keys = new ArrayList<IType>(map.keySet());
JdtUtils.java,Object key = iterator.next();,if (iterator != null ) Object key = iterator.next();
JdtUtils.java,parent = javaElement.getParent();,if (javaElement != null ) parent = javaElement.getParent();
JdtUtils.java,IJavaElement parent = javaElement.getParent();,if (javaElement != null ) IJavaElement parent = javaElement.getParent();
JdtUtils.java,IJavaElement parent = javaElement.getParent();,if (javaElement != null ) IJavaElement parent = javaElement.getParent();
JdtUtils.java,topFlags = firstNonAnon.getFlags();,if (firstNonAnon != null ) topFlags = firstNonAnon.getFlags();
JdtUtils.java,IJavaElement parent = elt.getParent();,if (elt != null ) IJavaElement parent = elt.getParent();
JdtUtils.java,parent = parent.getParent();,if (parent != null ) parent = parent.getParent();
MarkerReporter.java,ProjectFilterSettings filterSettings = userPrefs.getFilterSettings();,if (userPrefs != null ) ProjectFilterSettings filterSettings = userPrefs.getFilterSettings();
MarkerReporter.java,IResource markerTarget = mp.resource.getMarkerTarget();,if (mp != null ) IResource markerTarget = mp.resource.getMarkerTarget();
MarkerReporter.java,long seqNum = mp.bug.getFirstVersion();,if (mp != null ) long seqNum = mp.bug.getFirstVersion();
MarkerReporter.java,String uniqueId = mp.bug.getInstanceHash();,if (mp != null ) String uniqueId = mp.bug.getInstanceHash();
MarkerReporter.java,IJavaElement javaElt = mp.resource.getCorespondingJavaElement();,if (mp != null ) IJavaElement javaElt = mp.resource.getCorespondingJavaElement();
MarkerUtil.java,IProject project = javaProject.getProject();,if (javaProject != null ) IProject project = javaProject.getProject();
MarkerUtil.java,Iterator<BugInstance> iterator = theCollection.iterator();,if (theCollection != null ) Iterator<BugInstance> iterator = theCollection.iterator();
MarkerUtil.java,BugInstance bug = iterator.next();,if (iterator != null ) BugInstance bug = iterator.next();
MarkerUtil.java,int primaryLine = bug.getPrimarySourceLineAnnotation().getStartLine();,if (bug != null ) int primaryLine = bug.getPrimarySourceLineAnnotation().getStartLine();
MarkerUtil.java,FieldAnnotation primaryField = bug.getPrimaryField();,if (bug != null ) FieldAnnotation primaryField = bug.getPrimaryField();
MarkerUtil.java,startLine = primaryField.getSourceLines().getStartLine();,if (primaryField != null ) startLine = primaryField.getSourceLines().getStartLine();
MarkerUtil.java,ClassAnnotation primaryClass = bug.getPrimaryClass();,if (bug != null ) ClassAnnotation primaryClass = bug.getPrimaryClass();
MarkerUtil.java,className = primaryClass.getClassName();,if (primaryClass != null ) className = primaryClass.getClassName();
MarkerUtil.java,packageName = primaryClass.getPackageName();,if (primaryClass != null ) packageName = primaryClass.getPackageName();
MarkerUtil.java,SourceLineAnnotation primarySourceLineAnnotation = bug.getPrimarySourceLineAnnotation();,if (bug != null ) SourceLineAnnotation primarySourceLineAnnotation = bug.getPrimarySourceLineAnnotation();
MarkerUtil.java,packageAnnotation = bug.getPrimaryClass();,if (bug != null ) packageAnnotation = bug.getPrimaryClass();
MarkerUtil.java,packageName = packageAnnotation.getPackageName();,if (packageAnnotation != null ) packageName = packageAnnotation.getPackageName();
MarkerUtil.java,qualifiedClassName = packageAnnotation.getClassName();,if (packageAnnotation != null ) qualifiedClassName = packageAnnotation.getClassName();
MarkerUtil.java,packageName = primarySourceLineAnnotation.getPackageName();,if (primarySourceLineAnnotation != null ) packageName = primarySourceLineAnnotation.getPackageName();
MarkerUtil.java,qualifiedClassName = primarySourceLineAnnotation.getClassName();,if (primarySourceLineAnnotation != null ) qualifiedClassName = primarySourceLineAnnotation.getClassName();
MarkerUtil.java,primarySourceLineAnnotation = bug.getPrimarySourceLineAnnotation();,if (bug != null ) primarySourceLineAnnotation = bug.getPrimarySourceLineAnnotation();
MarkerUtil.java,startLine = primarySourceLineAnnotation.getStartLine();,if (primarySourceLineAnnotation != null ) startLine = primarySourceLineAnnotation.getStartLine();
MarkerUtil.java,FieldAnnotation field = bug.getPrimaryField();,if (bug != null ) FieldAnnotation field = bug.getPrimaryField();
MarkerUtil.java,IField ifield = type.getField(field.getFieldName());,if (type != null ) IField ifield = type.getField(field.getFieldName());
MarkerUtil.java,sourceRange = ifield.getNameRange();,if (ifield != null ) sourceRange = ifield.getNameRange();
MarkerUtil.java,sourceRange = ifield.getSourceRange();,if (ifield != null ) sourceRange = ifield.getSourceRange();
MarkerUtil.java,int lineNbr = scanner.getLineNumber(sourceRange.getOffset());,if (scanner != null ) int lineNbr = scanner.getLineNumber(sourceRange.getOffset());
MarkerUtil.java,IJavaElement primaryElement = type.getPrimaryElement();,if (type != null ) IJavaElement primaryElement = type.getPrimaryElement();
MarkerUtil.java,ISourceRange range = source.getNameRange();,if (source != null ) ISourceRange range = source.getNameRange();
MarkerUtil.java,range = source.getSourceRange();,if (source != null ) range = source.getSourceRange();
MarkerUtil.java,int offset = range.getOffset();,if (range != null ) int offset = range.getOffset();
MarkerUtil.java,IOpenable op = source.getOpenable();,if (source != null ) IOpenable op = source.getOpenable();
MarkerUtil.java,String content = source.getSource();,if (source != null ) String content = source.getSource();
MarkerUtil.java,charContent = content.toCharArray();,if (content != null ) charContent = content.toCharArray();
MarkerUtil.java,String elemName = parentType.getElementName();,if (parentType != null ) String elemName = parentType.getElementName();
MarkerUtil.java,final IProject project = javaProject.getProject();,if (javaProject != null ) final IProject project = javaProject.getProject();
MarkerUtil.java,String id = elt.getHandleIdentifier();,if (elt != null ) String id = elt.getHandleIdentifier();
MarkerUtil.java,IResource resource = marker.getResource();,if (marker != null ) IResource resource = marker.getResource();
MarkerUtil.java,IProject project = resource.getProject();,if (resource != null ) IProject project = resource.getProject();
MarkerUtil.java,Object next = iter.next();,if (iter != null ) Object next = iter.next();
MarkerUtil.java,Set<IMarker> markers = getMarkers(classFile.getType());,if (getMarkers(classFile != null ) Set<IMarker> markers = getMarkers(classFile.getType());
MarkerUtil.java,Object next = sSelection.getFirstElement();,if (sSelection != null ) Object next = sSelection.getFirstElement();
Reporter.java,ProjectStats stats = bugCollection.getProjectStats();,if (bugCollection != null ) ProjectStats stats = bugCollection.getProjectStats();
Reporter.java,Profiler profiler = stats.getProfiler();,if (stats != null ) Profiler profiler = stats.getProfiler();
Reporter.java,String className = classDescriptor.getDottedClassName();,if (classDescriptor != null ) String className = classDescriptor.getDottedClassName();
ConfigurableXmlOutputStream.java,Iterator<NameValuePair> iterator = attributeList.iterator();,if (attributeList != null ) Iterator<NameValuePair> iterator = attributeList.iterator();
ConfigurableXmlOutputStream.java,XMLAttributeList.NameValuePair nameValuePair = iterator.next();,if (iterator != null ) XMLAttributeList.NameValuePair nameValuePair = iterator.next();
ConfigurableXmlOutputStream.java,Iterator<NameValuePair> iterator = attributeList.iterator();,if (attributeList != null ) Iterator<NameValuePair> iterator = attributeList.iterator();
ConfigurableXmlOutputStream.java,XMLAttributeList.NameValuePair nameValuePair = iterator.next();,if (iterator != null ) XMLAttributeList.NameValuePair nameValuePair = iterator.next();
ConfigurableXmlOutputStream.java,attributes = attributes.trim();,if (attributes != null ) attributes = attributes.trim();
ProjectUtilities.java,IProjectDescription description = project.getDescription();,if (project != null ) IProjectDescription description = project.getDescription();
ProjectUtilities.java,String[] prevNatures = description.getNatureIds();,if (description != null ) String[] prevNatures = description.getNatureIds();
ProjectUtilities.java,IProjectDescription description = project.getDescription();,if (project != null ) IProjectDescription description = project.getDescription();
ProjectUtilities.java,String[] prevNatures = description.getNatureIds();,if (description != null ) String[] prevNatures = description.getNatureIds();
Util.java,String ex = resource.getFileExtension();,if (resource != null ) String ex = resource.getFileExtension();
Util.java,String name = resource.getName();,if (resource != null ) String name = resource.getName();
Util.java,String ex = resource.getFileExtension();,if (resource != null ) String ex = resource.getFileExtension();
Util.java,String ex = resource.getFileExtension();,if (resource != null ) String ex = resource.getFileExtension();
Util.java,String name = resource.getName();,if (resource != null ) String name = resource.getName();
Util.java,Long time = Long.valueOf(System.currentTimeMillis());,if (Long != null ) Long time = Long.valueOf(System.currentTimeMillis());
Util.java,Long lastTime = stopTimes.lastKey();,if (stopTimes != null ) Long lastTime = stopTimes.lastKey();
Util.java,cb = new Clipboard(Display.getDefault());,if (Clipboard(Display != null ) cb = new Clipboard(Display.getDefault());
AbstractFindbugsView.java,IActionBars bars = getViewSite().getActionBars();,if (getViewSite() != null ) IActionBars bars = getViewSite().getActionBars();
AbstractFindbugsView.java,IWorkbenchPage page = FindbugsPlugin.getActiveWorkbenchWindow().getActivePage();,if (FindbugsPlugin != null ) IWorkbenchPage page = FindbugsPlugin.getActiveWorkbenchWindow().getActivePage();
AbstractFindbugsView.java,IWorkbenchPage page = FindbugsPlugin.getActiveWorkbenchWindow().getActivePage();,if (FindbugsPlugin != null ) IWorkbenchPage page = FindbugsPlugin.getActiveWorkbenchWindow().getActivePage();
AbstractFindbugsView.java,IWorkbenchPage page = FindbugsPlugin.getActiveWorkbenchWindow().getActivePage();,if (FindbugsPlugin != null ) IWorkbenchPage page = FindbugsPlugin.getActiveWorkbenchWindow().getActivePage();
AbstractFindbugsView.java,IWorkbenchPage page = getSite().getPage();,if (getSite() != null ) IWorkbenchPage page = getSite().getPage();
AbstractFindbugsView.java,IWorkbenchWindow window = getSite().getWorkbenchWindow();,if (getSite() != null ) IWorkbenchWindow window = getSite().getWorkbenchWindow();
AbstractFindbugsView.java,input = page.getInput();,if (page != null ) input = page.getInput();
AbstractFindbugsView.java,input= ResourcesPlugin.getWorkspace().getRoot();,if (ResourcesPlugin != null ) input= ResourcesPlugin.getWorkspace().getRoot();
BugExplorerView.java,IDialogSettings dialogSettings = FindbugsPlugin.getDefault().getDialogSettings();,if (FindbugsPlugin != null ) IDialogSettings dialogSettings = FindbugsPlugin.getDefault().getDialogSettings();
BugExplorerView.java,IDialogSettings dialogSettings = FindbugsPlugin.getDefault().getDialogSettings();,if (FindbugsPlugin != null ) IDialogSettings dialogSettings = FindbugsPlugin.getDefault().getDialogSettings();
BugExplorerView.java,IStructuredSelection selection = (IStructuredSelection) event.getSelection();,if (event != null ) IStructuredSelection selection = (IStructuredSelection) event.getSelection();
BugExplorerView.java,Object object = iter.next();,if (iter != null ) Object object = iter.next();
FindBugsConsole.java,IConsoleManager manager = ConsolePlugin.getDefault().getConsoleManager();,if (ConsolePlugin != null ) IConsoleManager manager = ConsolePlugin.getDefault().getConsoleManager();
FindBugsConsole.java,IConsoleManager manager = ConsolePlugin.getDefault().getConsoleManager();,if (ConsolePlugin != null ) IConsoleManager manager = ConsolePlugin.getDefault().getConsoleManager();
FindBugsConsole.java,IConsole[] existing = manager.getConsoles();,if (manager != null ) IConsole[] existing = manager.getConsoles();
FindBugsConsole.java,IActionBars bars = page.getSite().getActionBars();,if (page != null ) IActionBars bars = page.getSite().getActionBars();
FindBugsPerspectiveFactory.java,String editorArea = layout.getEditorArea();,if (layout != null ) String editorArea = layout.getEditorArea();
UserAnnotationsView.java,int comboIndex = theBug.getUserDesignationKeyIndex();,if (theBug != null ) int comboIndex = theBug.getUserDesignationKeyIndex();
UserAnnotationsView.java,annotation = bug.getAnnotationText();,if (bug != null ) annotation = bug.getAnnotationText();
UserAnnotationsView.java,Calendar theCalendar = Calendar.getInstance();,if (Calendar != null ) Calendar theCalendar = Calendar.getInstance();
UserAnnotationsView.java,long beginningOfToday = theCalendar.getTimeInMillis();,if (theCalendar != null ) long beginningOfToday = theCalendar.getTimeInMillis();
UserAnnotationsView.java,String timeString = theCalendar.getTime().toString();,if (theCalendar != null ) String timeString = theCalendar.getTime().toString();
BugActionProvider.java,ISelection selection = event.getSelection();,if (event != null ) ISelection selection = event.getSelection();
BugActionProvider.java,Object firstElement = ss.getFirstElement();,if (ss != null ) Object firstElement = ss.getFirstElement();
BugActionProvider.java,Object data = group.getData();,if (group != null ) Object data = group.getData();
BugActionProvider.java,final StructuredViewer viewer = aSite.getStructuredViewer();,if (aSite != null ) final StructuredViewer viewer = aSite.getStructuredViewer();
BugActionProvider.java,IWorkingSet oldWorkingSet = provider.getCurrentWorkingSet();,if (provider != null ) IWorkingSet oldWorkingSet = provider.getCurrentWorkingSet();
BugActionProvider.java,IWorkingSet newWorkingSet = (IWorkingSet) event.getNewValue();,if (event != null ) IWorkingSet newWorkingSet = (IWorkingSet) event.getNewValue();
BugActionProvider.java,IMenuManager menuManager = actionBars.getMenuManager();,if (actionBars != null ) IMenuManager menuManager = actionBars.getMenuManager();
BugActionProvider.java,IContributionItem[] items = menuManager.getItems();,if (menuManager != null ) IContributionItem[] items = menuManager.getItems();
BugByIdFilter.java,final IPreferenceStore store = FindbugsPlugin.getDefault().getPreferenceStore();,if (FindbugsPlugin != null ) final IPreferenceStore store = FindbugsPlugin.getDefault().getPreferenceStore();
BugByIdFilter.java,lastUsedFilter = FindbugsPlugin.getFilteredIds();,if (FindbugsPlugin != null ) lastUsedFilter = FindbugsPlugin.getFilteredIds();
BugByIdFilter.java,lastUsedFilter = FindbugsPlugin.getFilteredIds();,if (FindbugsPlugin != null ) lastUsedFilter = FindbugsPlugin.getFilteredIds();
BugContentProvider.java,IPreferenceStore store = FindbugsPlugin.getDefault().getPreferenceStore();,if (FindbugsPlugin != null ) IPreferenceStore store = FindbugsPlugin.getDefault().getPreferenceStore();
BugContentProvider.java,children = group.getChildren();,if (group != null ) children = group.getChildren();
BugContentProvider.java,Object[] objects = rootElement.getChildren();,if (rootElement != null ) Object[] objects = rootElement.getChildren();
BugContentProvider.java,IAdaptable[] elements = workingSet.getElements();,if (workingSet != null ) IAdaptable[] elements = workingSet.getElements();
BugContentProvider.java,IProject[] projects = workspaceRoot.getProjects();,if (workspaceRoot != null ) IProject[] projects = workspaceRoot.getProjects();
BugContentProvider.java,IPreferenceStore store = FindbugsPlugin.getDefault().getPreferenceStore();,if (FindbugsPlugin != null ) IPreferenceStore store = FindbugsPlugin.getDefault().getPreferenceStore();
BugContentProvider.java,Set<IMarker> allMarkers = parent.getAllMarkers();,if (parent != null ) Set<IMarker> allMarkers = parent.getAllMarkers();
BugContentProvider.java,GroupType childType = grouping.getChildType(mapper.getType());,if (grouping != null ) GroupType childType = grouping.getChildType(mapper.getType());
BugContentProvider.java,Identifier groupId = entry.getKey();,if (entry != null ) Identifier groupId = entry.getKey();
BugContentProvider.java,IWorkingSetManager workingSetManager = PlatformUI.getWorkbench().getWorkingSetManager();,if (PlatformUI != null ) IWorkingSetManager workingSetManager = PlatformUI.getWorkbench().getWorkingSetManager();
BugContentProvider.java,GroupType childType = grouping.getChildType(mapper.getType());,if (grouping != null ) GroupType childType = grouping.getChildType(mapper.getType());
BugContentProvider.java,child = (BugGroup) child.getParent();,if (child != null ) child = (BugGroup) child.getParent();
BugContentProvider.java,BugGroup parent = (BugGroup) element.getParent();,if (element != null ) BugGroup parent = (BugGroup) element.getParent();
BugContentProvider.java,Object[] rootObjects = rootElement.getChildren();,if (rootElement != null ) Object[] rootObjects = rootElement.getChildren();
BugContentProvider.java,rootObjects = group.getChildren();,if (group != null ) rootObjects = group.getChildren();
BugContentProvider.java,IContentProvider provider = extensionById.getContentProvider();,if (extensionById != null ) IContentProvider provider = extensionById.getContentProvider();
BugContentProvider.java,Object object = iter.next();,if (iter != null ) Object object = iter.next();
BugLabelProvider.java,FindBugsMarker.Priority prio = group.getPriority();,if (group != null ) FindBugsMarker.Priority prio = group.getPriority();
BugLabelProvider.java,ImageRegistry imageRegistry = FindbugsPlugin.getDefault().getImageRegistry();,if (FindbugsPlugin != null ) ImageRegistry imageRegistry = FindbugsPlugin.getDefault().getImageRegistry();
BugLabelProvider.java,provider = BugContentProvider.getProvider(config.getService());,if (BugContentProvider != null ) provider = BugContentProvider.getProvider(config.getService());
FilterBugsDialog.java,IStructuredSelection selection = (IStructuredSelection) event.getSelection();,if (event != null ) IStructuredSelection selection = (IStructuredSelection) event.getSelection();
FilterBugsDialog.java,Object element = event.getElement();,if (event != null ) Object element = event.getElement();
FilterBugsDialog.java,boolean checked = event.getChecked();,if (event != null ) boolean checked = event.getChecked();
FilterBugsDialog.java,Object[] array = children.toArray();,if (children != null ) Object[] array = children.toArray();
FilterBugsDialog.java,allowedPatterns = FindbugsPlugin.getKnownPatterns();,if (FindbugsPlugin != null ) allowedPatterns = FindbugsPlugin.getKnownPatterns();
FilterBugsDialog.java,allowedTypes = FindbugsPlugin.getKnownPatternTypes();,if (FindbugsPlugin != null ) allowedTypes = FindbugsPlugin.getKnownPatternTypes();
FilterBugsDialog.java,Iterator<BugPattern> patterns = preSelectedPatterns.iterator();,if (preSelectedPatterns != null ) Iterator<BugPattern> patterns = preSelectedPatterns.iterator();
FilterBugsDialog.java,BugPattern pattern = patterns.next();,if (patterns != null ) BugPattern pattern = patterns.next();
FilterBugsDialog.java,checkedElements = merged.toArray();,if (merged != null ) checkedElements = merged.toArray();
FilterBugsDialog.java,DetectorFactory factory = iterator.next();,if (iterator != null ) DetectorFactory factory = iterator.next();
FilterBugsDialog.java,Set<BugPattern> patterns = factory.getReportedBugPatterns();,if (factory != null ) Set<BugPattern> patterns = factory.getReportedBugPatterns();
FilterBugsDialog.java,String text = selectedIds.getText();,if (selectedIds != null ) String text = selectedIds.getText();
FilterBugsDialog.java,checkedElements = allowedTypes.toArray();,if (allowedTypes != null ) checkedElements = allowedTypes.toArray();
FilterBugsDialog.java,Object[] elements = checkList.getVisibleExpandedElements();,if (checkList != null ) Object[] elements = checkList.getVisibleExpandedElements();
FilterBugsDialog.java,Object[] elements = checkList.getVisibleExpandedElements();,if (checkList != null ) Object[] elements = checkList.getVisibleExpandedElements();
FilterBugsDialog.java,IDialogSettings dialogSettings = FindbugsPlugin.getDefault().getDialogSettings();,if (FindbugsPlugin != null ) IDialogSettings dialogSettings = FindbugsPlugin.getDefault().getDialogSettings();
FilterBugsDialog.java,checkedElements = selected.toArray();,if (selected != null ) checkedElements = selected.toArray();
FilterBugsDialog.java,Object element = selection.getFirstElement();,if (selection != null ) Object element = selection.getFirstElement();
FilterBugsDialog.java,txt = pattern.getDetailText();,if (pattern != null ) txt = pattern.getDetailText();
FilterBugsDialog.java,Rectangle size = htmlControl.getClientArea();,if (htmlControl != null ) Rectangle size = htmlControl.getClientArea();
FilterBugsDialog.java,StringBuilder sb = new StringBuilder(code.getDescription());,if (StringBuilder(code != null ) StringBuilder sb = new StringBuilder(code.getDescription());
GroupSelectionDialog.java,this.allowedGroups = GroupType.getVisible();,if (GroupType != null ) this.allowedGroups = GroupType.getVisible();
GroupSelectionDialog.java,Table table = checkList.getTable();,if (checkList != null ) Table table = checkList.getTable();
GroupSelectionDialog.java,boolean checked = event.getChecked();,if (event != null ) boolean checked = event.getChecked();
GroupSelectionDialog.java,GroupType element= (GroupType) event.getElement();,if (event != null ) GroupType element= (GroupType) event.getElement();
GroupSelectionDialog.java,IDialogSettings dialogSettings = FindbugsPlugin.getDefault().getDialogSettings();,if (FindbugsPlugin != null ) IDialogSettings dialogSettings = FindbugsPlugin.getDefault().getDialogSettings();
GroupType.java,javaElement = JavaCore.create(marker.getResource());,if (JavaCore != null ) javaElement = JavaCore.create(marker.getResource());
Grouping.java,GroupType type = GroupType.valueOf(st.nextToken());,if (GroupType != null ) GroupType type = GroupType.valueOf(st.nextToken());
RefreshJob.java,int totalWork = deltas.size();,if (deltas != null ) int totalWork = deltas.size();
RefreshJob.java,final boolean fullRefreshNeeded = changedParents.isEmpty();,if (changedParents != null ) final boolean fullRefreshNeeded = changedParents.isEmpty();
ResourceChangeListener.java,IMarker marker = mdelta.getMarker();,if (mdelta != null ) IMarker marker = mdelta.getMarker();
ResourceChangeListener.java,"DeltaInfo deltaInfo = new DeltaInfo(marker, mdelta.getKind());","if (mdelta != null ) DeltaInfo deltaInfo = new DeltaInfo(marker, mdelta.getKind());"
BugGroupSection.java,Object object = iter.next();,if (iter != null ) Object object = iter.next();
BugGroupSection.java,maxLength = name.length();,if (name != null ) maxLength = name.length();
BugInstanceSection.java,IEditorPart activeEditor = page.getActiveEditor();,if (page != null ) IEditorPart activeEditor = page.getActiveEditor();
BugInstanceSection.java,input = activeEditor.getEditorInput();,if (activeEditor != null ) input = activeEditor.getEditorInput();
BugInstanceSection.java,IJavaElement parent = javaElt.getParent();,if (javaElt != null ) IJavaElement parent = javaElt.getParent();
BugInstanceSection.java,parent = parent.getParent();,if (parent != null ) parent = parent.getParent();
BugInstanceSection.java,String shortDescription = bug.getAbridgedMessage();,if (bug != null ) String shortDescription = bug.getAbridgedMessage();
BugInstanceSection.java,Iterator<BugAnnotation> it = bug.annotationIterator();,if (bug != null ) Iterator<BugAnnotation> it = bug.annotationIterator();
BugInstanceSection.java,BugAnnotation ba = it.next();,if (it != null ) BugAnnotation ba = it.next();
BugInstanceSection.java,int index = annotationList.getSelectionIndex();,if (annotationList != null ) int index = annotationList.getSelectionIndex();
BugInstanceSection.java,Iterator<BugAnnotation> theIterator = bug.annotationIterator();,if (bug != null ) Iterator<BugAnnotation> theIterator = bug.annotationIterator();
BugInstanceSection.java,BugAnnotation theAnnotation = theIterator.next();,if (theIterator != null ) BugAnnotation theAnnotation = theIterator.next();
BugInstanceSection.java,theAnnotation = theIterator.next();,if (theIterator != null ) theAnnotation = theIterator.next();
BugInstanceSection.java,int startLine = sla.getStartLine();,if (sla != null ) int startLine = sla.getStartLine();
BugInstanceSection.java,Iterator<BugAnnotation> iterator = bug.annotationIterator();,if (bug != null ) Iterator<BugAnnotation> iterator = bug.annotationIterator();
BugInstanceSection.java,BugAnnotation bugAnnotation = iterator.next();,if (iterator != null ) BugAnnotation bugAnnotation = iterator.next();
BugPatternSection.java,FindbugsPlugin plugin = FindbugsPlugin.getDefault();,if (FindbugsPlugin != null ) FindbugsPlugin plugin = FindbugsPlugin.getDefault();
BugPatternSection.java,Point newScrollSize = scrolledComposite.getSize();,if (scrolledComposite != null ) Point newScrollSize = scrolledComposite.getSize();
BugPatternSection.java,Rectangle clientArea = scrolledComposite.getClientArea();,if (scrolledComposite != null ) Rectangle clientArea = scrolledComposite.getClientArea();
BugPatternSection.java,Point rootSize = rootComposite.getSize();,if (rootComposite != null ) Point rootSize = rootComposite.getSize();
BugPatternSection.java,String html = text.toString();,if (text != null ) String html = text.toString();
BugPatternSection.java,BugPattern data = (BugPattern) group.getData();,if (group != null ) BugPattern data = (BugPattern) group.getData();
BugPatternSection.java,IWorkbenchBrowserSupport support= PlatformUI.getWorkbench().getBrowserSupport();,if (PlatformUI != null ) IWorkbenchBrowserSupport support= PlatformUI.getWorkbench().getBrowserSupport();
BugPatternSection.java,browserId = newBrowser.getId();,if (newBrowser != null ) browserId = newBrowser.getId();
PropPageTitleProvider.java,element = selection.getFirstElement();,if (selection != null ) element = selection.getFirstElement();
PropPageTitleProvider.java,String name = pack.getElementName();,if (pack != null ) String name = pack.getElementName();
PropPageTitleProvider.java,BugPattern pattern = bug.getBugPattern();,if (bug != null ) BugPattern pattern = bug.getBugPattern();
PropertyPageAdapterFactory.java,Method[] methods = obj.getClass().getMethods();,if (obj != null ) Method[] methods = obj.getClass().getMethods();
PropertyPageAdapterFactory.java,String name = method.getName();,if (method != null ) String name = method.getName();
PropertyPageAdapterFactory.java,String name = method.getName();,if (method != null ) String name = method.getName();
ExportWizardPage.java,sortBy = sortByCombo.getSelectionIndex();,if (sortByCombo != null ) sortBy = sortByCombo.getSelectionIndex();
ExportWizardPage.java,sortBy = sortByCombo.getSelectionIndex();,if (sortByCombo != null ) sortBy = sortByCombo.getSelectionIndex();
ExportWizardPage.java,Set<BugPattern> filtered = FindbugsPlugin.getFilteredPatterns();,if (FindbugsPlugin != null ) Set<BugPattern> filtered = FindbugsPlugin.getFilteredPatterns();
ExportWizardPage.java,Set<BugCode> filteredTypes = FindbugsPlugin.getFilteredPatternTypes();,if (FindbugsPlugin != null ) Set<BugCode> filteredTypes = FindbugsPlugin.getFilteredPatternTypes();
ExportWizardPage.java,int result = dialog.open();,if (dialog != null ) int result = dialog.open();
ExportWizardPage.java,String selectedIds = dialog.getSelectedIds();,if (dialog != null ) String selectedIds = dialog.getSelectedIds();
ExportWizardPage.java,String text = filteredBugIdsText.getText();,if (filteredBugIdsText != null ) String text = filteredBugIdsText.getText();
ExportWizardPage.java,Clipboard clipboard = new Clipboard(Display.getCurrent());,if (Clipboard(Display != null ) Clipboard clipboard = new Clipboard(Display.getCurrent());
BugResolution.java,private String label = getClass().getSimpleName();,if (getClass() != null ) private String label = getClass().getSimpleName();
BugResolution.java,IProject project = marker.getResource().getProject();,if (marker != null ) IProject project = marker.getResource().getProject();
BugResolution.java,ASTRewrite rewrite = ASTRewrite.create(workingUnit.getAST());,if (ASTRewrite != null ) ASTRewrite rewrite = ASTRewrite.create(workingUnit.getAST());
BugResolution.java,IResource res = marker.getResource();,if (marker != null ) IResource res = marker.getResource();
BugResolutionAssociations.java,final String bugType = entry.getKey();,if (entry != null ) final String bugType = entry.getKey();
BugResolutionGenerator.java,BugResolutionAssociations resolutions = FindbugsPlugin.getDefault().getBugResolutions();,if (FindbugsPlugin != null ) BugResolutionAssociations resolutions = FindbugsPlugin.getDefault().getBugResolutions();
BugResolutionGenerator.java,BugResolutionAssociations resolutions = FindbugsPlugin.getDefault().getBugResolutions();,if (FindbugsPlugin != null ) BugResolutionAssociations resolutions = FindbugsPlugin.getDefault().getBugResolutions();
BugResolutionLoader.java,int length = bugFixList.getLength();,if (bugFixList != null ) int length = bugFixList.getLength();
BugResolutionLoader.java,int length = resolutionNodes.getLength();,if (resolutionNodes != null ) int length = resolutionNodes.getLength();
BugResolutionLoader.java,IMarkerResolution resolution = resolutionClass.newInstance();,if (resolutionClass != null ) IMarkerResolution resolution = resolutionClass.newInstance();
BugResolutionLoader.java,String name = attr.getKey();,if (attr != null ) String name = attr.getKey();
BugResolutionLoader.java,String value = attr.getValue();,if (attr != null ) String value = attr.getValue();
BugResolutionLoader.java,int length = attrList.getLength();,if (attrList != null ) int length = attrList.getLength();
BugResolutionLoader.java,String value = attrElement.getTextContent();,if (attrElement != null ) String value = attrElement.getTextContent();
BugResolutionLoader.java,DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();,if (DocumentBuilderFactory != null ) DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
BugResolutionLoader.java,builder = factory.newDocumentBuilder();,if (factory != null ) builder = factory.newDocumentBuilder();
ChangePublicToProtectedResolution.java,"TypeDeclaration type = getTypeDeclaration(workingUnit, bug.getPrimaryClass());","if (bug != null ) TypeDeclaration type = getTypeDeclaration(workingUnit, bug.getPrimaryClass());"
ChangePublicToProtectedResolution.java,"MethodDeclaration method = getMethodDeclaration(type, bug.getPrimaryMethod());","if (bug != null ) MethodDeclaration method = getMethodDeclaration(type, bug.getPrimaryMethod());"
CorrectOddnessCheckResolution.java,numberExpression = node.getLeftOperand();,if (node != null ) numberExpression = node.getLeftOperand();
CreateAndOddnessCheckResolution.java,final AST ast = rewrite.getAST();,if (rewrite != null ) final AST ast = rewrite.getAST();
CreateAndOddnessCheckResolution.java,InfixExpression andOddnessCheck = ast.newInfixExpression();,if (ast != null ) InfixExpression andOddnessCheck = ast.newInfixExpression();
CreateAndOddnessCheckResolution.java,ParenthesizedExpression parenthesizedExpression = ast.newParenthesizedExpression();,if (ast != null ) ParenthesizedExpression parenthesizedExpression = ast.newParenthesizedExpression();
CreateAndOddnessCheckResolution.java,InfixExpression andExpression = ast.newInfixExpression();,if (ast != null ) InfixExpression andExpression = ast.newInfixExpression();
CreateDoPrivilegedBlockResolution.java,final AST ast = rewrite.getAST();,if (rewrite != null ) final AST ast = rewrite.getAST();
CreateDoPrivilegedBlockResolution.java,ASTNode parent = fragment.getParent();,if (fragment != null ) ASTNode parent = fragment.getParent();
CreateDoPrivilegedBlockResolution.java,final AST ast = rewrite.getAST();,if (rewrite != null ) final AST ast = rewrite.getAST();
CreateDoPrivilegedBlockResolution.java,ImportDeclaration importDeclaration = ast.newImportDeclaration();,if (ast != null ) ImportDeclaration importDeclaration = ast.newImportDeclaration();
CreateDoPrivilegedBlockResolution.java,AST ast = rewrite.getAST();,if (rewrite != null ) AST ast = rewrite.getAST();
CreateDoPrivilegedBlockResolution.java,MethodInvocation doPrivilegedInvocation = ast.newMethodInvocation();,if (ast != null ) MethodInvocation doPrivilegedInvocation = ast.newMethodInvocation();
CreateDoPrivilegedBlockResolution.java,List<Expression> arguments = checkedList(doPrivilegedInvocation.arguments());,if (checkedList(doPrivilegedInvocation != null ) List<Expression> arguments = checkedList(doPrivilegedInvocation.arguments());
CreateDoPrivilegedBlockResolution.java,accessControllerName = ast.newSimpleName(AccessController.class.getSimpleName());,if (ast != null ) accessControllerName = ast.newSimpleName(AccessController.class.getSimpleName());
CreateDoPrivilegedBlockResolution.java,accessControllerName = ast.newName(AccessController.class.getName());,if (ast != null ) accessControllerName = ast.newName(AccessController.class.getName());
CreateDoPrivilegedBlockResolution.java,AST ast = rewrite.getAST();,if (rewrite != null ) AST ast = rewrite.getAST();
CreateDoPrivilegedBlockResolution.java,ClassInstanceCreation privilegedActionCreation = ast.newClassInstanceCreation();,if (ast != null ) ClassInstanceCreation privilegedActionCreation = ast.newClassInstanceCreation();
CreateDoPrivilegedBlockResolution.java,AST ast = rewrite.getAST();,if (rewrite != null ) AST ast = rewrite.getAST();
CreateDoPrivilegedBlockResolution.java,privilegedActionName = ast.newSimpleName(PrivilegedAction.class.getSimpleName());,if (ast != null ) privilegedActionName = ast.newSimpleName(PrivilegedAction.class.getSimpleName());
CreateDoPrivilegedBlockResolution.java,privilegedActionName = ast.newName(PrivilegedAction.class.getName());,if (ast != null ) privilegedActionName = ast.newName(PrivilegedAction.class.getName());
CreateDoPrivilegedBlockResolution.java,List<Type> typeArguments = checkedList(privilegedActionType.typeArguments());,if (checkedList(privilegedActionType != null ) List<Type> typeArguments = checkedList(privilegedActionType.typeArguments());
CreateDoPrivilegedBlockResolution.java,AST ast = rewrite.getAST();,if (rewrite != null ) AST ast = rewrite.getAST();
CreateDoPrivilegedBlockResolution.java,AnonymousClassDeclaration anonymousClassDeclaration = ast.newAnonymousClassDeclaration();,if (ast != null ) AnonymousClassDeclaration anonymousClassDeclaration = ast.newAnonymousClassDeclaration();
CreateDoPrivilegedBlockResolution.java,List<BodyDeclaration> bodyDeclarations = checkedList(anonymousClassDeclaration.bodyDeclarations());,if (checkedList(anonymousClassDeclaration != null ) List<BodyDeclaration> bodyDeclarations = checkedList(anonymousClassDeclaration.bodyDeclarations());
CreateDoPrivilegedBlockResolution.java,AST ast = rewrite.getAST();,if (rewrite != null ) AST ast = rewrite.getAST();
CreateDoPrivilegedBlockResolution.java,MethodDeclaration methodDeclaration = ast.newMethodDeclaration();,if (ast != null ) MethodDeclaration methodDeclaration = ast.newMethodDeclaration();
CreateDoPrivilegedBlockResolution.java,List<Modifier> modifiers = checkedList(methodDeclaration.modifiers());,if (checkedList(methodDeclaration != null ) List<Modifier> modifiers = checkedList(methodDeclaration.modifiers());
CreateDoPrivilegedBlockResolution.java,AST ast = rewrite.getAST();,if (rewrite != null ) AST ast = rewrite.getAST();
CreateDoPrivilegedBlockResolution.java,Block methodBody = ast.newBlock();,if (ast != null ) Block methodBody = ast.newBlock();
CreateDoPrivilegedBlockResolution.java,ReturnStatement returnStatement = ast.newReturnStatement();,if (ast != null ) ReturnStatement returnStatement = ast.newReturnStatement();
CreateDoPrivilegedBlockResolution.java,List<Statement> statements = checkedList(methodBody.statements());,if (checkedList(methodBody != null ) List<Statement> statements = checkedList(methodBody.statements());
CreateDoPrivilegedBlockResolution.java,ITypeBinding superclass = typeBinding.getSuperclass();,if (typeBinding != null ) ITypeBinding superclass = typeBinding.getSuperclass();
CreateMutableCloneResolution.java,"TypeDeclaration type = getTypeDeclaration(workingUnit, bug.getPrimaryClass());","if (bug != null ) TypeDeclaration type = getTypeDeclaration(workingUnit, bug.getPrimaryClass());"
CreateMutableCloneResolution.java,"MethodDeclaration method = getMethodDeclaration(type, bug.getPrimaryMethod());","if (bug != null ) MethodDeclaration method = getMethodDeclaration(type, bug.getPrimaryMethod());"
CreateMutableCloneResolution.java,String fieldName = bug.getPrimaryField().getFieldName();,if (bug != null ) String fieldName = bug.getPrimaryField().getFieldName();
CreateMutableCloneResolution.java,Statement stmt = (Statement) itr.next();,if (itr != null ) Statement stmt = (Statement) itr.next();
CreateMutableCloneResolution.java,cloneInvoke = workingUnit.getAST().newMethodInvocation();,if (workingUnit != null ) cloneInvoke = workingUnit.getAST().newMethodInvocation();
CreateMutableCloneResolution.java,castRet = workingUnit.getAST().newCastExpression();,if (workingUnit != null ) castRet = workingUnit.getAST().newCastExpression();
CreateRemainderOddnessCheckResolution.java,final AST ast = rewrite.getAST();,if (rewrite != null ) final AST ast = rewrite.getAST();
CreateRemainderOddnessCheckResolution.java,InfixExpression correctOddnessCheck = ast.newInfixExpression();,if (ast != null ) InfixExpression correctOddnessCheck = ast.newInfixExpression();
CreateRemainderOddnessCheckResolution.java,InfixExpression remainderExp = ast.newInfixExpression();,if (ast != null ) InfixExpression remainderExp = ast.newInfixExpression();
CreateSuperCallResolution.java,"TypeDeclaration type = getTypeDeclaration(workingUnit, bug.getPrimaryClass());","if (bug != null ) TypeDeclaration type = getTypeDeclaration(workingUnit, bug.getPrimaryClass());"
CreateSuperCallResolution.java,"MethodDeclaration method = getMethodDeclaration(type, bug.getPrimaryMethod());","if (bug != null ) MethodDeclaration method = getMethodDeclaration(type, bug.getPrimaryMethod());"
CreateSuperCallResolution.java,AST ast = rewrite.getAST();,if (rewrite != null ) AST ast = rewrite.getAST();
CreateSuperCallResolution.java,Block methodBody = method.getBody();,if (method != null ) Block methodBody = method.getBody();
CreateSuperCallResolution.java,AST ast = rewrite.getAST();,if (rewrite != null ) AST ast = rewrite.getAST();
CreateSuperCallResolution.java,SuperMethodInvocation invocation = ast.newSuperMethodInvocation();,if (ast != null ) SuperMethodInvocation invocation = ast.newSuperMethodInvocation();
FieldModifierResolution.java,"TypeDeclaration type = getTypeDeclaration(workingUnit, bug.getPrimaryClass());","if (bug != null ) TypeDeclaration type = getTypeDeclaration(workingUnit, bug.getPrimaryClass());"
FieldModifierResolution.java,"FieldDeclaration field = getFieldDeclaration(type, bug.getPrimaryField());","if (bug != null ) FieldDeclaration field = getFieldDeclaration(type, bug.getPrimaryField());"
MakeInnerTypeStaticResolution.java,"TypeDeclaration type = getTypeDeclaration(workingUnit, bug.getPrimaryClass());","if (bug != null ) TypeDeclaration type = getTypeDeclaration(workingUnit, bug.getPrimaryClass());"
RemoveUselessMethodResolution.java,"TypeDeclaration type = getTypeDeclaration(workingUnit, bug.getPrimaryClass());","if (bug != null ) TypeDeclaration type = getTypeDeclaration(workingUnit, bug.getPrimaryClass());"
RemoveUselessMethodResolution.java,"MethodDeclaration method = getMethodDeclaration(type, bug.getPrimaryMethod());","if (bug != null ) MethodDeclaration method = getMethodDeclaration(type, bug.getPrimaryMethod());"
UseValueOfResolution.java,final AST ast = rewrite.getAST();,if (rewrite != null ) final AST ast = rewrite.getAST();
UseValueOfResolution.java,MethodInvocation valueOfInvocation = ast.newMethodInvocation();,if (ast != null ) MethodInvocation valueOfInvocation = ast.newMethodInvocation();
UseValueOfResolution.java,ITypeBinding binding = primitiveTypeCreation.getType().resolveBinding();,if (primitiveTypeCreation != null ) ITypeBinding binding = primitiveTypeCreation.getType().resolveBinding();
UseValueOfResolution.java,List<Expression> newArguments = valueOfInvocation.arguments();,if (valueOfInvocation != null ) List<Expression> newArguments = valueOfInvocation.arguments();
ASTUtil.java,final AST ast = rewrite.getAST();,if (rewrite != null ) final AST ast = rewrite.getAST();
ASTUtil.java,ImportDeclaration importDeclaration = ast.newImportDeclaration();,if (ast != null ) ImportDeclaration importDeclaration = ast.newImportDeclaration();
ASTUtil.java,ImportDeclaration newImport = newImports.next();,if (newImports != null ) ImportDeclaration newImport = newImports.next();
ASTUtil.java,newImport = newImports.next();,if (newImports != null ) newImport = newImports.next();
ASTUtil.java,int lineNumber = compilationUnit.getLineNumber(statement.getStartPosition());,if (compilationUnit != null ) int lineNumber = compilationUnit.getLineNumber(statement.getStartPosition());
ASTUtil.java,String typeName = getPrettyTypeName(methodParams[i].getType());,if (getPrettyTypeName(methodParams[i] != null ) String typeName = getPrettyTypeName(methodParams[i].getType());
ASTUtil.java,String typeName = type.resolveBinding().getQualifiedName();,if (type != null ) String typeName = type.resolveBinding().getQualifiedName();
SourceLineVisitor.java,int lineNumber = compilationUnit.getLineNumber(node.getStartPosition());,if (compilationUnit != null ) int lineNumber = compilationUnit.getLineNumber(node.getStartPosition());
EclipseGuiCallback.java,IWorkbenchPage page = FindbugsPlugin.getActiveWorkbenchWindow().getActivePage();,if (FindbugsPlugin != null ) IWorkbenchPage page = FindbugsPlugin.getActiveWorkbenchWindow().getActivePage();
EclipseGuiCallback.java,IWorkbenchPart part = page.getActivePart();,if (page != null ) IWorkbenchPart part = page.getActivePart();
EclipseGuiCallback.java,SigninState state = cloud.getSigninState();,if (cloud != null ) SigninState state = cloud.getSigninState();
EclipseGuiCallback.java,final boolean origSelection = AppEngineNameLookup.isSavingSessionInfoEnabled();,if (AppEngineNameLookup != null ) final boolean origSelection = AppEngineNameLookup.isSavingSessionInfoEnabled();
EclipseGuiCallback.java,IViewSite btvsite = btv.getViewSite();,if (btv != null ) IViewSite btvsite = btv.getViewSite();
OverriddenMethodsVisitor.java,boolean bridged = xmethod.isBridged();,if (xmethod != null ) boolean bridged = xmethod.isBridged();
OverriddenMethodsVisitor.java,methodSignature = xmethod.getBridgeSignature();,if (xmethod != null ) methodSignature = xmethod.getBridgeSignature();
TypeFrameModelingVisitor.java,Type t = Type.getType(p.getReturnTypeSignature());,if (Type != null ) Type t = Type.getType(p.getReturnTypeSignature());
ClassInfo.java,MethodInfo method = mths.next();,if (mths != null ) MethodInfo method = mths.next();
ClassInfo.java,String signature = method.getSignature();,if (method != null ) String signature = method.getSignature();
CommandLineUiCallback.java,answer = br.readLine();,if (br != null ) answer = br.readLine();
DetectorConfigurationTabTestSubclass.java,TableItem[] items = availableFactoriesTableViewer.getTable().getItems();,if (availableFactoriesTableViewer != null ) TableItem[] items = availableFactoriesTableViewer.getTable().getItems();
DetectorConfigurationTabTestSubclass.java,TableItem[] items = availableFactoriesTableViewer.getTable().getItems();,if (availableFactoriesTableViewer != null ) TableItem[] items = availableFactoriesTableViewer.getTable().getItems();
UserAnnotationsView.java,int comboIndex = theBug.getUserDesignationKeyIndex();,if (theBug != null ) int comboIndex = theBug.getUserDesignationKeyIndex();
UserAnnotationsView.java,annotation = bug.getAnnotationText();,if (bug != null ) annotation = bug.getAnnotationText();
DetectorConfigurationTab.java,ProjectFilterSettings filterSettings = tab.getCurrentProps().getFilterSettings();,if (tab != null ) ProjectFilterSettings filterSettings = tab.getCurrentProps().getFilterSettings();
DetectorConfigurationTab.java,DetectorFactory factory = (DetectorFactory) item.getData();,if (item != null ) DetectorFactory factory = (DetectorFactory) item.getData();
DetectorConfigurationTab.java,StringBuffer sb = new StringBuffer(factory.getFullName());,if (StringBuffer(factory != null ) StringBuffer sb = new StringBuffer(factory.getFullName());
DetectorConfigurationTab.java,Collection<BugPattern> patterns = factory.getReportedBugPatterns();,if (factory != null ) Collection<BugPattern> patterns = factory.getReportedBugPatterns();
DetectorConfigurationTab.java,BugPattern pattern = iter.next();,if (iter != null ) BugPattern pattern = iter.next();
DetectorConfigurationTab.java,String detailHTML = factory.getDetailHTML();,if (factory != null ) String detailHTML = factory.getDetailHTML();
DetectorConfigurationTab.java,Collection<BugPattern> patterns = factory.getReportedBugPatterns();,if (factory != null ) Collection<BugPattern> patterns = factory.getReportedBugPatterns();
DetectorConfigurationTab.java,category = sb.toString();,if (sb != null ) category = sb.toString();
DetectorConfigurationTab.java,TableItem[] itemList = availableFactoriesTableViewer.getTable().getItems();,if (availableFactoriesTableViewer != null ) TableItem[] itemList = availableFactoriesTableViewer.getTable().getItems();
DetectorConfigurationTab.java,DetectorFactory factory = (DetectorFactory) item.getData();,if (item != null ) DetectorFactory factory = (DetectorFactory) item.getData();
DetectorConfigurationTab.java,TableItem[] itemList = availableFactoriesTableViewer.getTable().getItems();,if (availableFactoriesTableViewer != null ) TableItem[] itemList = availableFactoriesTableViewer.getTable().getItems();
DetectorConfigurationTab.java,Table factoriesTable = availableFactoriesTableViewer.getTable();,if (availableFactoriesTableViewer != null ) Table factoriesTable = availableFactoriesTableViewer.getTable();
DetectorConfigurationTab.java,Table factoriesTable = availableFactoriesTableViewer.getTable();,if (availableFactoriesTableViewer != null ) Table factoriesTable = availableFactoriesTableViewer.getTable();
DetectorConfigurationTab.java,DetectorFactory factory = iterator.next();,if (iterator != null ) DetectorFactory factory = iterator.next();
DetectorConfigurationTab.java,Collection<BugPattern> patterns = factory.getReportedBugPatterns();,if (factory != null ) Collection<BugPattern> patterns = factory.getReportedBugPatterns();
DetectorConfigurationTab.java,BugPattern pattern = iter.next();,if (iter != null ) BugPattern pattern = iter.next();
DetectorConfigurationTab.java,String abbr = pattern.getAbbrev();,if (pattern != null ) String abbr = pattern.getAbbrev();
DetectorConfigurationTab.java,String element = iter.next();,if (iter != null ) String element = iter.next();
FindbugsPropertyPage.java,String effortLevel = currentUserPreferences.getEffort();,if (currentUserPreferences != null ) String effortLevel = currentUserPreferences.getEffort();
SerializableIdiom.java,ClassDescriptor fieldType = DescriptorFactory.createClassDescriptorFromFieldSignature(obj.getSignature());,if (DescriptorFactory != null ) ClassDescriptor fieldType = DescriptorFactory.createClassDescriptorFromFieldSignature(obj.getSignature());
ReportConfigurationTab.java,String data = minPriorityCombo.getText();,if (minPriorityCombo != null ) String data = minPriorityCombo.getText();
SynchronizationOnSharedBuiltinConstant.java,String signature = top.getSignature();,if (top != null ) String signature = top.getSignature();
BugAccumulator.java,String hash = bug.getInstanceHash();,if (bug != null ) String hash = bug.getInstanceHash();
EvaluationsFromXmlUploader.java,String user = bd.getUser();,if (bd != null ) String user = bd.getUser();
EvaluationsFromXmlUploader.java,userString = users.iterator().next();,if (users != null ) userString = users.iterator().next();
EvaluationsFromXmlUploader.java,userString = users.toString();,if (users != null ) userString = users.toString();
AppEngineCloudClient.java,int num = designationsLoadedFromXML.size();,if (designationsLoadedFromXML != null ) int num = designationsLoadedFromXML.size();
AppEngineCloudClient.java,String user = bd.getUser();,if (bd != null ) String user = bd.getUser();
AppEngineCloudClient.java,userString = users.iterator().next();,if (users != null ) userString = users.iterator().next();
AppEngineCloudClient.java,userString  = users.toString();,if (users != null ) userString  = users.toString();
AppEngineCloudNetworkClient.java,String myUsername = cloudClient.getUser();,if (cloudClient != null ) String myUsername = cloudClient.getUser();
DetectorConfigurationTab.java,ProjectFilterSettings filterSettings = tab.getCurrentProps().getFilterSettings();,if (tab != null ) ProjectFilterSettings filterSettings = tab.getCurrentProps().getFilterSettings();
DetectorConfigurationTab.java,DetectorFactory factory = (DetectorFactory) item.getData();,if (item != null ) DetectorFactory factory = (DetectorFactory) item.getData();
DetectorConfigurationTab.java,StringBuffer sb = new StringBuffer(factory.getFullName());,if (StringBuffer(factory != null ) StringBuffer sb = new StringBuffer(factory.getFullName());
DetectorConfigurationTab.java,Collection<BugPattern> patterns = factory.getReportedBugPatterns();,if (factory != null ) Collection<BugPattern> patterns = factory.getReportedBugPatterns();
DetectorConfigurationTab.java,BugPattern pattern = iter.next();,if (iter != null ) BugPattern pattern = iter.next();
DetectorConfigurationTab.java,String detailHTML = factory.getDetailHTML();,if (factory != null ) String detailHTML = factory.getDetailHTML();
DetectorConfigurationTab.java,Collection<BugPattern> patterns = factory.getReportedBugPatterns();,if (factory != null ) Collection<BugPattern> patterns = factory.getReportedBugPatterns();
DetectorConfigurationTab.java,category = sb.toString();,if (sb != null ) category = sb.toString();
DetectorConfigurationTab.java,TableItem[] itemList = availableFactoriesTableViewer.getTable().getItems();,if (availableFactoriesTableViewer != null ) TableItem[] itemList = availableFactoriesTableViewer.getTable().getItems();
DetectorConfigurationTab.java,DetectorFactory factory = (DetectorFactory) item.getData();,if (item != null ) DetectorFactory factory = (DetectorFactory) item.getData();
DetectorConfigurationTab.java,TableItem[] itemList = availableFactoriesTableViewer.getTable().getItems();,if (availableFactoriesTableViewer != null ) TableItem[] itemList = availableFactoriesTableViewer.getTable().getItems();
DetectorConfigurationTab.java,Table factoriesTable = availableFactoriesTableViewer.getTable();,if (availableFactoriesTableViewer != null ) Table factoriesTable = availableFactoriesTableViewer.getTable();
DetectorConfigurationTab.java,Table factoriesTable = availableFactoriesTableViewer.getTable();,if (availableFactoriesTableViewer != null ) Table factoriesTable = availableFactoriesTableViewer.getTable();
DetectorConfigurationTab.java,DetectorFactory factory = iterator.next();,if (iterator != null ) DetectorFactory factory = iterator.next();
DetectorConfigurationTab.java,Collection<BugPattern> patterns = factory.getReportedBugPatterns();,if (factory != null ) Collection<BugPattern> patterns = factory.getReportedBugPatterns();
DetectorConfigurationTab.java,BugPattern pattern = iter.next();,if (iter != null ) BugPattern pattern = iter.next();
DetectorConfigurationTab.java,String abbr = pattern.getAbbrev();,if (pattern != null ) String abbr = pattern.getAbbrev();
DetectorConfigurationTab.java,String element = iter.next();,if (iter != null ) String element = iter.next();
FindbugsPropertyPage.java,String effortLevel = currentUserPreferences.getEffort();,if (currentUserPreferences != null ) String effortLevel = currentUserPreferences.getEffort();
AppEngineCloudEvalsTests.java,UploadEvaluation uploadMsg = UploadEvaluation.parseFrom(uploadBytes.toByteArray());,if (UploadEvaluation != null ) UploadEvaluation uploadMsg = UploadEvaluation.parseFrom(uploadBytes.toByteArray());
AppEngineCloudEvalsTests.java,UploadEvaluation uploadMsg = UploadEvaluation.parseFrom(uploadBytes.toByteArray());,if (UploadEvaluation != null ) UploadEvaluation uploadMsg = UploadEvaluation.parseFrom(uploadBytes.toByteArray());
AppEngineCloudEvalsTests.java,UploadEvaluation uploadMsg = UploadEvaluation.parseFrom(uploadBytes.toByteArray());,if (UploadEvaluation != null ) UploadEvaluation uploadMsg = UploadEvaluation.parseFrom(uploadBytes.toByteArray());
AbstractAppEngineCloudTest.java,Executor executor = Executors.newCachedThreadPool();,if (Executors != null ) Executor executor = Executors.newCachedThreadPool();
AppEngineCloudEvalsTests.java,UploadEvaluation uploadMsg = UploadEvaluation.parseFrom(uploadMsgData.toByteArray());,if (UploadEvaluation != null ) UploadEvaluation uploadMsg = UploadEvaluation.parseFrom(uploadMsgData.toByteArray());
MockAppEngineCloudClient.java,urlsRequested = Lists.newArrayList();,if (Lists != null ) urlsRequested = Lists.newArrayList();
AppEngineCloudEvalsTests.java,UploadEvaluation uploadMsg = UploadEvaluation.parseFrom(outputCollector.toByteArray());,if (UploadEvaluation != null ) UploadEvaluation uploadMsg = UploadEvaluation.parseFrom(outputCollector.toByteArray());
AppEngineCloudClient.java,int num = designationsLoadedFromXML.size();,if (designationsLoadedFromXML != null ) int num = designationsLoadedFromXML.size();
AppEngineCloudNetworkClient.java,FindIssuesResponse response = FindIssuesResponse.parseFrom(conn.getInputStream());,if (FindIssuesResponse != null ) FindIssuesResponse response = FindIssuesResponse.parseFrom(conn.getInputStream());
AbstractCloud.java,newMode = Mode.valueOf(modeString.toUpperCase());,if (Mode != null ) newMode = Mode.valueOf(modeString.toUpperCase());
AbstractCloud.java,UserDesignation d =	UserDesignation.valueOf(designation.getDesignationKey());,if (UserDesignation != null ) UserDesignation d =	UserDesignation.valueOf(designation.getDesignationKey());
AbstractCloud.java,UserDesignation d =	UserDesignation.valueOf(designation.getDesignationKey());,if (UserDesignation != null ) UserDesignation d =	UserDesignation.valueOf(designation.getDesignationKey());
AbstractCloud.java,UserDesignation d =	UserDesignation.valueOf(designation.getDesignationKey());,if (UserDesignation != null ) UserDesignation d =	UserDesignation.valueOf(designation.getDesignationKey());
AbstractCloud.java,totalSquares += d.score() * d.score();,if (d != null ) totalSquares += d.score() * d.score();
AbstractCloud.java,UserDesignation d = UserDesignation.valueOf(designation.getDesignationKey());,if (UserDesignation != null ) UserDesignation d = UserDesignation.valueOf(designation.getDesignationKey());
AbstractCloud.java,int num = ps.getNumClasses();,if (ps != null ) int num = ps.getNumClasses();
AbstractCloud.java,ncss += ps.size();,if (ps != null ) ncss += ps.size();
AbstractCloud.java,String result =  bd.getAnnotationText();,if (bd != null ) String result =  bd.getAnnotationText();
AbstractCloud.java,lookup = plugin.getUsernameClass().newInstance();,if (plugin != null ) lookup = plugin.getUsernameClass().newInstance();
AbstractCloud.java,ud = UserDesignation.valueOf(d.getDesignationKey());,if (UserDesignation != null ) ud = UserDesignation.valueOf(d.getDesignationKey());
BugFilingHelper.java,linkType = issue.getBugLinkTypeStr();,if (issue != null ) linkType = issue.getBugLinkTypeStr();
BugFilingHelper.java,final String bugLink = issue.getBugLink();,if (issue != null ) final String bugLink = issue.getBugLink();
BugFilingHelper.java,IGuiCallback callback = appEngineCloudClient.getGuiCallback();,if (appEngineCloudClient != null ) IGuiCallback callback = appEngineCloudClient.getGuiCallback();
BugFilingHelper.java,String viewUrl = googleCodeIssue.getHtmlLink().getHref();,if (googleCodeIssue != null ) String viewUrl = googleCodeIssue.getHtmlLink().getHref();
BugFilingHelper.java,dashboardUrl = dashboardUrl.trim();,if (dashboardUrl != null ) dashboardUrl = dashboardUrl.trim();
BugFilingHelper.java,IGuiCallback guiCallback = appEngineCloudClient.getGuiCallback();,if (appEngineCloudClient != null ) IGuiCallback guiCallback = appEngineCloudClient.getGuiCallback();
AppEngineCloudClient.java,int numBugs = bugsByHash.size();,if (bugsByHash != null ) int numBugs = bugsByHash.size();
AppEngineCloudClientTest.java,AppEngineCloudNetworkClient spyNetworkClient = cloud.createSpyNetworkClient();,if (cloud != null ) AppEngineCloudNetworkClient spyNetworkClient = cloud.createSpyNetworkClient();
AppEngineCloudClientTest.java,AppEngineCloudNetworkClient spyNetworkClient = cloud.createSpyNetworkClient();,if (cloud != null ) AppEngineCloudNetworkClient spyNetworkClient = cloud.createSpyNetworkClient();
AppEngineCloudClientTest.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
AppEngineCloudClientTest.java,Throwable t = bgThreadFuture.get();,if (bgThreadFuture != null ) Throwable t = bgThreadFuture.get();
AppEngineCloudClientTest.java,FindIssues hashes = FindIssues.parseFrom(findIssuesOutput.toByteArray());,if (FindIssues != null ) FindIssues hashes = FindIssues.parseFrom(findIssuesOutput.toByteArray());
AppEngineCloudClientTest.java,List<String> hashesFromFindIssues = AppEngineProtoUtil.decodeHashes(hashes.getMyIssueHashesList());,if (AppEngineProtoUtil != null ) List<String> hashesFromFindIssues = AppEngineProtoUtil.decodeHashes(hashes.getMyIssueHashesList());
AppEngineCloudClientTest.java,FindIssues hashes = FindIssues.parseFrom(findIssuesOutput.toByteArray());,if (FindIssues != null ) FindIssues hashes = FindIssues.parseFrom(findIssuesOutput.toByteArray());
AppEngineCloudClientTest.java,List<String> hashesFromFindIssues = AppEngineProtoUtil.decodeHashes(hashes.getMyIssueHashesList());,if (AppEngineProtoUtil != null ) List<String> hashesFromFindIssues = AppEngineProtoUtil.decodeHashes(hashes.getMyIssueHashesList());
AppEngineCloudClientTest.java,LogIn logIn = LogIn.parseFrom(logInOutput.toByteArray());,if (LogIn != null ) LogIn logIn = LogIn.parseFrom(logInOutput.toByteArray());
AppEngineCloudClientTest.java,UploadIssues uploadedIssues = UploadIssues.parseFrom(uploadIssuesBuffer.toByteArray());,if (UploadIssues != null ) UploadIssues uploadedIssues = UploadIssues.parseFrom(uploadIssuesBuffer.toByteArray());
AppEngineCloudClientTest.java,AppEngineCloudNetworkClient spyNetworkClient = cloud.createSpyNetworkClient();,if (cloud != null ) AppEngineCloudNetworkClient spyNetworkClient = cloud.createSpyNetworkClient();
AppEngineCloudClientTest.java,LogIn logIn = LogIn.parseFrom(findIssuesOutput.toByteArray());,if (LogIn != null ) LogIn logIn = LogIn.parseFrom(findIssuesOutput.toByteArray());
AppEngineCloudClientTest.java,AppEngineCloudNetworkClient spyNetworkClient = cloud.createSpyNetworkClient();,if (cloud != null ) AppEngineCloudNetworkClient spyNetworkClient = cloud.createSpyNetworkClient();
AppEngineCloudClientTest.java,LogIn logIn = LogIn.parseFrom(signInReq.toByteArray());,if (LogIn != null ) LogIn logIn = LogIn.parseFrom(signInReq.toByteArray());
AppEngineCloudClientTest.java,UploadEvaluation uploadMsg = UploadEvaluation.parseFrom(outputCollector.toByteArray());,if (UploadEvaluation != null ) UploadEvaluation uploadMsg = UploadEvaluation.parseFrom(outputCollector.toByteArray());
AppEngineCloudClientTest.java,FindIssuesResponse.Builder issueList = FindIssuesResponse.newBuilder();,if (FindIssuesResponse != null ) FindIssuesResponse.Builder issueList = FindIssuesResponse.newBuilder();
AppEngineCloudClientTest.java,urlsRequested = Lists.newArrayList();,if (Lists != null ) urlsRequested = Lists.newArrayList();
MainFrame.java,SigninState signinState = bugCollection.getCloud().getSignedInState();,if (bugCollection != null ) SigninState signinState = bugCollection.getCloud().getSignedInState();
MainFrame.java,SigninState state = plugin.getSignedInState();,if (plugin != null ) SigninState state = plugin.getSignedInState();
AppEngineNameLookup.java,PropertyBundle pluginProps = plugin.getProperties();,if (plugin != null ) PropertyBundle pluginProps = plugin.getProperties();
AppEngineCloudClientTest.java,AppEngineCloudNetworkClient spyNetworkClient = Mockito.spy(cloud.getNetworkClient());,if (Mockito != null ) AppEngineCloudNetworkClient spyNetworkClient = Mockito.spy(cloud.getNetworkClient());
DBCloud.java,Collection<BugDesignation> uniqueDesignations = bd.getUniqueDesignations();,if (bd != null ) Collection<BugDesignation> uniqueDesignations = bd.getUniqueDesignations();
MainFrame.java,SignedInState signedInState = bugCollection.getCloud().getSignedInState();,if (bugCollection != null ) SignedInState signedInState = bugCollection.getCloud().getSignedInState();
MainFrame.java,SignedInState state = plugin.getSignedInState();,if (plugin != null ) SignedInState state = plugin.getSignedInState();
SortedBugCollection.java,IGuiCallback callback = getProject().getGuiCallback();,if (getProject() != null ) IGuiCallback callback = getProject().getGuiCallback();
CloudFactory.java,String id = cloudPlugin.getId();,if (cloudPlugin != null ) String id = cloudPlugin.getId();
CommentsArea.java,BugInstance bug = frame.currentSelectedBugLeaf.getBug();,if (frame != null ) BugInstance bug = frame.currentSelectedBugLeaf.getBug();
CommentsArea.java,Cloud cloud = getMainFrame().bugCollection.getCloud();,if (getMainFrame() != null ) Cloud cloud = getMainFrame().bugCollection.getCloud();
CommentsArea.java,TreePath pathToNode = new TreePath(reconstruct.toArray());,if (TreePath(reconstruct != null ) TreePath pathToNode = new TreePath(reconstruct.toArray());
BugFilingHelper.java,linkType = issue.getBugLinkType();,if (issue != null ) linkType = issue.getBugLinkType();
ProtoClasses.java,int rawValue = input.readEnum();,if (input != null ) int rawValue = input.readEnum();
ProtoClasses.java,int rawValue = input.readEnum();,if (input != null ) int rawValue = input.readEnum();
QueryServlet.java,DbIssue.DbBugLinkType linkType = dbIssue.getBugLinkType();,if (dbIssue != null ) DbIssue.DbBugLinkType linkType = dbIssue.getBugLinkType();
QueryServlet.java,DbIssue.DbBugLinkType linkType = dbIssue.getBugLinkType();,if (dbIssue != null ) DbIssue.DbBugLinkType linkType = dbIssue.getBugLinkType();
UpdateServletTest.java,DbIssue.DbBugLinkType dbBugLinkType = issue.getBugLinkType();,if (issue != null ) DbIssue.DbBugLinkType dbBugLinkType = issue.getBugLinkType();
NewFilterFrame.java,Sortables[] sortables = MainFrame.getInstance().sortables();,if (MainFrame != null ) Sortables[] sortables = MainFrame.getInstance().sortables();
SorterDialog.java,Sortables[] sortables = MainFrame.getInstance().sortables();,if (MainFrame != null ) Sortables[] sortables = MainFrame.getInstance().sortables();
SorterTableColumnModel.java,TableColumn tc=new TableColumn(columnList.size());,if (TableColumn(columnList != null ) TableColumn tc=new TableColumn(columnList.size());
CommentsArea.java,BugInstance bug = frame.currentSelectedBugLeaf.getBug();,if (frame != null ) BugInstance bug = frame.currentSelectedBugLeaf.getBug();
CommentsArea.java,Cloud cloud = getMainFrame().bugCollection.getCloud();,if (getMainFrame() != null ) Cloud cloud = getMainFrame().bugCollection.getCloud();
AppEngineCloudClient.java,linkType = issue.getBugLinkType();,if (issue != null ) linkType = issue.getBugLinkType();
AppEngineCloudClient.java,final String bugLink = issue.getBugLink();,if (issue != null ) final String bugLink = issue.getBugLink();
AppEngineCloudClient.java,IGuiCallback callback = bugCollection.getProject().getGuiCallback();,if (bugCollection != null ) IGuiCallback callback = bugCollection.getProject().getGuiCallback();
AppEngineCloudClient.java,String viewUrl = googleCodeIssue.getHtmlLink().getHref();,if (googleCodeIssue != null ) String viewUrl = googleCodeIssue.getHtmlLink().getHref();
AppEngineCloudClient.java,IGuiCallback guiCallback = bugCollection.getProject().getGuiCallback();,if (bugCollection != null ) IGuiCallback guiCallback = bugCollection.getProject().getGuiCallback();
AppEngineCloudClient.java,dashboardUrl = dashboardUrl.trim();,if (dashboardUrl != null ) dashboardUrl = dashboardUrl.trim();
AppEngineCloudClient.java,IGuiCallback guiCallback = bugCollection.getProject().getGuiCallback();,if (bugCollection != null ) IGuiCallback guiCallback = bugCollection.getProject().getGuiCallback();
AppEngineCloudNetworkClient.java,final int bugCount = newBugs.size();,if (newBugs != null ) final int bugCount = newBugs.size();
AppEngineCloudNetworkClient.java,mostRecentEvaluationMillis = eval.getWhen();,if (eval != null ) mostRecentEvaluationMillis = eval.getWhen();
AppEngineCloudNetworkClient.java,OutputStream outputStream = conn.getOutputStream();,if (conn != null ) OutputStream outputStream = conn.getOutputStream();
AppEngineCloudNetworkClient.java,GetRecentEvaluations.Builder msgb = GetRecentEvaluations.newBuilder();,if (GetRecentEvaluations != null ) GetRecentEvaluations.Builder msgb = GetRecentEvaluations.newBuilder();
AppEngineCloudNetworkClient.java,Issue issue = issuesByHash.get(b.getInstanceHash());,if (issuesByHash != null ) Issue issue = issuesByHash.get(b.getInstanceHash());
AppEngineCloudNetworkClient.java,BugDesignation designation = bugInstance.getNonnullUserDesignation();,if (bugInstance != null ) BugDesignation designation = bugInstance.getNonnullUserDesignation();
AppEngineCloudNetworkClient.java,long timestamp = designation.getTimestamp();,if (designation != null ) long timestamp = designation.getTimestamp();
AppEngineCloudNetworkClient.java,String designationKey = designation.getDesignationKey();,if (designation != null ) String designationKey = designation.getDesignationKey();
AppEngineCloudNetworkClient.java,String comment = designation.getAnnotationText();,if (designation != null ) String comment = designation.getAnnotationText();
AppEngineCloudClient.java,String protoHash = decodeHash(issue.getHash());,if (decodeHash(issue != null ) String protoHash = decodeHash(issue.getHash());
AppEngineCloudClient.java,String newHash = decodeHash(newIssue.getHash());,if (decodeHash(newIssue != null ) String newHash = decodeHash(newIssue.getHash());
AppEngineCloudNetworkClient.java,ExecutorService updateExecutor = getGuiCallback().getBugUpdateExecutor();,if (getGuiCallback() != null ) ExecutorService updateExecutor = getGuiCallback().getBugUpdateExecutor();
AppEngineCloudClientTest.java,LogIn logIn = LogIn.parseFrom(logInOutput.toByteArray());,if (LogIn != null ) LogIn logIn = LogIn.parseFrom(logInOutput.toByteArray());
Project.java,inputFile = file.getAbsolutePath();,if (file != null ) inputFile = file.getAbsolutePath();
Project.java,projectFileName = new File(projectFileName).getAbsolutePath();,if (File(projectFileName) != null ) projectFileName = new File(projectFileName).getAbsolutePath();
Project.java,String base = new File(projectFileName).getParent();,if (File(projectFileName) != null ) String base = new File(projectFileName).getParent();
AppEngineCloudNetworkClient.java,final int bugCount = newBugs.size();,if (newBugs != null ) final int bugCount = newBugs.size();
AbstractCloud.java,this.properties = plugin.getProperties();,if (plugin != null ) this.properties = plugin.getProperties();
AppEngineCloudNetworkClient.java,Issue issue = issuesByHash.get(b.getInstanceHash());,if (issuesByHash != null ) Issue issue = issuesByHash.get(b.getInstanceHash());
AddAnnotation.java,String annotation = bugInstance.getAnnotationText();,if (bugInstance != null ) String annotation = bugInstance.getAnnotationText();
MainFrame.java,String name = getProject().getProjectName();,if (getProject() != null ) String name = getProject().getProjectName();
AppEngineTestHelper.java,ApiProxyLocalImpl proxy = (ApiProxyLocalImpl) ApiProxy.getDelegate();,if (ApiProxy != null ) ApiProxyLocalImpl proxy = (ApiProxyLocalImpl) ApiProxy.getDelegate();
AppEngineTestHelper.java,ApiProxyLocalImpl proxy = (ApiProxyLocalImpl) ApiProxy.getDelegate();,if (ApiProxy != null ) ApiProxyLocalImpl proxy = (ApiProxyLocalImpl) ApiProxy.getDelegate();
ProtoClasses.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
ProtoClasses.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
AppEngineNameLookup.java,PropertyBundle pluginProps = plugin.getProperties();,if (plugin != null ) PropertyBundle pluginProps = plugin.getProperties();
QueryServlet.java,long sessionId = loginMsg.getSessionId();,if (loginMsg != null ) long sessionId = loginMsg.getSessionId();
QueryServletTest.java,FindIssues findIssues = createAuthenticatedFindIssues(hashes).build();,if (createAuthenticatedFindIssues(hashes) != null ) FindIssues findIssues = createAuthenticatedFindIssues(hashes).build();
DetectorFactoryCollection.java,String value = (String) e.getValue();,if (e != null ) String value = (String) e.getValue();
DetectorFactoryCollection.java,String urlname = pluginList.toString();,if (pluginList != null ) String urlname = pluginList.toString();
DetectorFactoryCollection.java,String plugin = in.readLine();,if (in != null ) String plugin = in.readLine();
DetectorFactoryCollection.java,URLConnection connection = url.openConnection();,if (url != null ) URLConnection connection = url.openConnection();
DetectorFactoryCollection.java,String contentType = connection.getContentType();,if (connection != null ) String contentType = connection.getContentType();
MainFrame.java,Cloud plugin = this.bugCollection.getCloud();,if (this != null ) Cloud plugin = this.bugCollection.getCloud();
AbstractFlybushServletTest.java,ApiProxyLocalImpl proxy = (ApiProxyLocalImpl) ApiProxy.getDelegate();,if (ApiProxy != null ) ApiProxyLocalImpl proxy = (ApiProxyLocalImpl) ApiProxy.getDelegate();
AbstractFlybushServletTest.java,ApiProxyLocalImpl proxy = (ApiProxyLocalImpl) ApiProxy.getDelegate();,if (ApiProxy != null ) ApiProxyLocalImpl proxy = (ApiProxyLocalImpl) ApiProxy.getDelegate();
AbstractFlybushServletTest.java,actualPersistenceManager = pmf.getPersistenceManager();,if (pmf != null ) actualPersistenceManager = pmf.getPersistenceManager();
LocalFindBugsCloud.java,Logger logger = Logger.getRootLogger();,if (Logger != null ) Logger logger = Logger.getRootLogger();
DbEvaluation.java,"int whoCompare = comparePossiblyNull(getWho(), o.getWho());","if (o != null ) int whoCompare = comparePossiblyNull(getWho(), o.getWho());"
DbEvaluation.java,"int commentCompare = comparePossiblyNull(getComment(), o.getComment());","if (o != null ) int commentCompare = comparePossiblyNull(getComment(), o.getComment());"
QueryServletTest.java,RecentEvaluations evals = RecentEvaluations.parseFrom(outputCollector.toByteArray());,if (RecentEvaluations != null ) RecentEvaluations evals = RecentEvaluations.parseFrom(outputCollector.toByteArray());
QueryServletTest.java,RecentEvaluations evals = RecentEvaluations.parseFrom(outputCollector.toByteArray());,if (RecentEvaluations != null ) RecentEvaluations evals = RecentEvaluations.parseFrom(outputCollector.toByteArray());
QueryServletTest.java,RecentEvaluations evals = RecentEvaluations.parseFrom(outputCollector.toByteArray());,if (RecentEvaluations != null ) RecentEvaluations evals = RecentEvaluations.parseFrom(outputCollector.toByteArray());
QueryServletTest.java,RecentEvaluations evals = RecentEvaluations.parseFrom(outputCollector.toByteArray());,if (RecentEvaluations != null ) RecentEvaluations evals = RecentEvaluations.parseFrom(outputCollector.toByteArray());
UpdateServletTest.java,Key invocationId = dbEval.getInvocation();,if (dbEval != null ) Key invocationId = dbEval.getInvocation();
AuthServlet.java,Key invocationKey = invocation.getKey();,if (invocation != null ) Key invocationKey = invocation.getKey();
QueryServlet.java,List<String> hashes = decodeHashes(loginMsg.getMyIssueHashesList());,if (decodeHashes(loginMsg != null ) List<String> hashes = decodeHashes(loginMsg.getMyIssueHashesList());
QueryServlet.java,GetEvaluations evalsRequest = GetEvaluations.parseFrom(req.getInputStream());,if (GetEvaluations != null ) GetEvaluations evalsRequest = GetEvaluations.parseFrom(req.getInputStream());
QueryServlet.java,RecentEvaluations.Builder response = RecentEvaluations.newBuilder();,if (RecentEvaluations != null ) RecentEvaluations.Builder response = RecentEvaluations.newBuilder();
QueryServlet.java,ServletOutputStream output = resp.getOutputStream();,if (resp != null ) ServletOutputStream output = resp.getOutputStream();
UpdateServlet.java,DatastoreService ds = DatastoreServiceFactory.getDatastoreService();,if (DatastoreServiceFactory != null ) DatastoreService ds = DatastoreServiceFactory.getDatastoreService();
UpdateServlet.java,String hashStr = decodeHash(issue.getHash());,if (decodeHash(issue != null ) String hashStr = decodeHash(issue.getHash());
UpdateServlet.java,String decodedHash = decodeHash(setBugLinkMsg.getHash());,if (decodeHash(setBugLinkMsg != null ) String decodedHash = decodeHash(setBugLinkMsg.getHash());
UpdateServlet.java,Key invocationKey = session.getInvocation();,if (session != null ) Key invocationKey = session.getInvocation();
Tester.java,PersistenceManager pm = pmf.getPersistenceManager();,if (pmf != null ) PersistenceManager pm = pmf.getPersistenceManager();
QueryServlet.java,"Issue issueProto = buildFullIssueProto(issue, issue.getEvaluations());","if (issue != null ) Issue issueProto = buildFullIssueProto(issue, issue.getEvaluations());"
QueryServlet.java,boolean userIsNew = seenUsernames.add(dbEvaluation.getWho());,if (seenUsernames != null ) boolean userIsNew = seenUsernames.add(dbEvaluation.getWho());
AuthServlet.java,UserService userService = UserServiceFactory.getUserService();,if (UserServiceFactory != null ) UserService userService = UserServiceFactory.getUserService();
AuthServlet.java,User user = userService.getCurrentUser();,if (userService != null ) User user = userService.getCurrentUser();
AuthServlet.java,Transaction tx = pm.currentTransaction();,if (pm != null ) Transaction tx = pm.currentTransaction();
AuthServlet.java,PrintWriter writer = resp.getWriter();,if (resp != null ) PrintWriter writer = resp.getWriter();
AppEngineCloudClient.java,final String bugLink = networkClient.getIssueByHash(hash).getBugLink();,if (networkClient != null ) final String bugLink = networkClient.getIssueByHash(hash).getBugLink();
JiraBugFiler.java,String status = new JiraBugFiler().getBugStatus();,if (JiraBugFiler() != null ) String status = new JiraBugFiler().getBugStatus();
UnconditionalValueDerefAnalysis.java,ParameterNullnessProperty targetDerefParamSet = database.getProperty(target.getMethodDescriptor());,if (database != null ) ParameterNullnessProperty targetDerefParamSet = database.getProperty(target.getMethodDescriptor());
FindBadEqualsImplementation.java,ParameterNullnessProperty property = database.getProperty(xmethod.getMethodDescriptor());,if (database != null ) ParameterNullnessProperty property = database.getProperty(xmethod.getMethodDescriptor());
FindNullDeref.java,ParameterNullnessProperty property = unconditionalDerefParamDatabase.getProperty(targetMethod.toMethodDescriptor());,if (unconditionalDerefParamDatabase != null ) ParameterNullnessProperty property = unconditionalDerefParamDatabase.getProperty(targetMethod.toMethodDescriptor());
AbstractCloud.java,ncss += ps.size();,if (ps != null ) ncss += ps.size();
AbstractCloud.java,classCount += ps.getNumClasses();,if (ps != null ) classCount += ps.getNumClasses();
Obfuscate.java,TypeAnnotation result = new TypeAnnotation(m.getTypeDescriptor());,if (TypeAnnotation(m != null ) TypeAnnotation result = new TypeAnnotation(m.getTypeDescriptor());
AbstractFlybushServlet.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
QueryServlet.java,Builder issueBuilder = Issue.newBuilder();,if (Issue != null ) Builder issueBuilder = Issue.newBuilder();
AppEngineCloudClient.java,Collection<BugInstance> newBugs = bugsByHash.values();,if (bugsByHash != null ) Collection<BugInstance> newBugs = bugsByHash.values();
AppEngineCloudClient.java,backgroundExecutorService = Executors.newCachedThreadPool();,if (Executors != null ) backgroundExecutorService = Executors.newCachedThreadPool();
AppEngineCloudNetworkClient.java,int numBugs = hashes.size();,if (hashes != null ) int numBugs = hashes.size();
AppEngineCloudNetworkClient.java,OutputStream stream = conn.getOutputStream();,if (conn != null ) OutputStream stream = conn.getOutputStream();
AuthServlet.java,Transaction tx = pm.currentTransaction();,if (pm != null ) Transaction tx = pm.currentTransaction();
DBCloud.java,findbugsUser = getUsernameLookup().getUsername();,if (getUsernameLookup() != null ) findbugsUser = getUsernameLookup().getUsername();
AppEngineCloudNetworkClient.java,Builder issueList = UploadIssues.newBuilder();,if (UploadIssues != null ) Builder issueList = UploadIssues.newBuilder();
DBCloud.java,String fileName = src.getSourcePath();,if (src != null ) String fileName = src.getSourcePath();
DBCloud.java,int startLine = src.getStartLine();,if (src != null ) int startLine = src.getStartLine();
AppEngineCloudClient.java,int numBugs = bugsByHash.size();,if (bugsByHash != null ) int numBugs = bugsByHash.size();
AppEngineCloudClient.java,Collection<BugInstance> newBugs = bugsByHash.values();,if (bugsByHash != null ) Collection<BugInstance> newBugs = bugsByHash.values();
AppEngineCloud.java,backgroundExecutorService = Executors.newCachedThreadPool();,if (Executors != null ) backgroundExecutorService = Executors.newCachedThreadPool();
AppEngineCloud.java,sessionId = lookerupper.getSessionId();,if (lookerupper != null ) sessionId = lookerupper.getSessionId();
AppEngineCloud.java,user = lookerupper.getUsername();,if (lookerupper != null ) user = lookerupper.getUsername();
AppEngineCloud.java,host = lookerupper.getHost();,if (lookerupper != null ) host = lookerupper.getHost();
AppEngineCloud.java,String viewUrl = googleCodeIssue.getHtmlLink().getHref();,if (googleCodeIssue != null ) String viewUrl = googleCodeIssue.getHtmlLink().getHref();
AppEngineCloud.java,OutputStream outputStream = conn.getOutputStream();,if (conn != null ) OutputStream outputStream = conn.getOutputStream();
AppEngineCloud.java,IGuiCallback guiCallback = bugCollection.getProject().getGuiCallback();,if (bugCollection != null ) IGuiCallback guiCallback = bugCollection.getProject().getGuiCallback();
AppEngineCloud.java,Issue issue = issuesByHash.get(b.getInstanceHash());,if (issuesByHash != null ) Issue issue = issuesByHash.get(b.getInstanceHash());
AppEngineCloud.java,int numBugs = bugsByHash.size();,if (bugsByHash != null ) int numBugs = bugsByHash.size();
AppEngineCloud.java,Collection<BugInstance> newBugs = bugsByHash.values();,if (bugsByHash != null ) Collection<BugInstance> newBugs = bugsByHash.values();
AppEngineCloud.java,BugDesignation designation = bugInstance.getNonnullUserDesignation();,if (bugInstance != null ) BugDesignation designation = bugInstance.getNonnullUserDesignation();
AppEngineCloud.java,String comment = designation.getAnnotationText();,if (designation != null ) String comment = designation.getAnnotationText();
AppEngineCloud.java,OutputStream stream = conn.getOutputStream();,if (conn != null ) OutputStream stream = conn.getOutputStream();
AppEngineCloud.java,int responseCode = conn.getResponseCode();,if (conn != null ) int responseCode = conn.getResponseCode();
AppEngineCloud.java,int numBugs = hashes.size();,if (hashes != null ) int numBugs = hashes.size();
AppEngineCloud.java,Issue issue = issuesByHash.get(b.getInstanceHash());,if (issuesByHash != null ) Issue issue = issuesByHash.get(b.getInstanceHash());
AppEngineCloud.java,mostRecentEvaluationMillis = eval.getWhen();,if (eval != null ) mostRecentEvaluationMillis = eval.getWhen();
AppEngineCloud.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
AppEngineCloud.java,start = System.currentTimeMillis();,if (System != null ) start = System.currentTimeMillis();
AppEngineCloud.java,OutputStream stream = conn.getOutputStream();,if (conn != null ) OutputStream stream = conn.getOutputStream();
AppEngineCloud.java,start = System.currentTimeMillis();,if (System != null ) start = System.currentTimeMillis();
AppEngineCloud.java,int responseCode = conn.getResponseCode();,if (conn != null ) int responseCode = conn.getResponseCode();
AppEngineCloud.java,FindIssuesResponse response = FindIssuesResponse.parseFrom(conn.getInputStream());,if (FindIssuesResponse != null ) FindIssuesResponse response = FindIssuesResponse.parseFrom(conn.getInputStream());
AppEngineCloud.java,int foundIssues = response.getFoundIssuesCount();,if (response != null ) int foundIssues = response.getFoundIssuesCount();
AppEngineCloud.java,UploadIssues.Builder issueList = UploadIssues.newBuilder();,if (UploadIssues != null ) UploadIssues.Builder issueList = UploadIssues.newBuilder();
AppEngineCloud.java,Evaluation evaluation = it.previous();,if (it != null ) Evaluation evaluation = it.previous();
AppEngineCloud.java,boolean isNewUsername = seenUsernames.add(evaluation.getWho());,if (seenUsernames != null ) boolean isNewUsername = seenUsernames.add(evaluation.getWho());
AppEngineCloud.java,OutputStream outputStream = conn.getOutputStream();,if (conn != null ) OutputStream outputStream = conn.getOutputStream();
AppEngineCloud.java,Issue issue = issuesByHash.get(b.getInstanceHash());,if (issuesByHash != null ) Issue issue = issuesByHash.get(b.getInstanceHash());
AppEngineCloud.java,OutputStream stream = conn.getOutputStream();,if (conn != null ) OutputStream stream = conn.getOutputStream();
AppEngineCloud.java,int responseCode = conn.getResponseCode();,if (conn != null ) int responseCode = conn.getResponseCode();
QueryServlet.java,List<String> hashes = AppEngineProtoUtil.decodeHashes(loginMsg.getMyIssueHashesList());,if (AppEngineProtoUtil != null ) List<String> hashes = AppEngineProtoUtil.decodeHashes(loginMsg.getMyIssueHashesList());
QueryServlet.java,Issue.Builder issueBuilder = Issue.newBuilder();,if (Issue != null ) Issue.Builder issueBuilder = Issue.newBuilder();
QueryServlet.java,"Issue issueProto = buildIssueProto(issue, issue.getEvaluations());","if (issue != null ) Issue issueProto = buildIssueProto(issue, issue.getEvaluations());"
QueryServletTest.java,FindIssuesResponse result = FindIssuesResponse.parseFrom(outputCollector.toByteArray());,if (FindIssuesResponse != null ) FindIssuesResponse result = FindIssuesResponse.parseFrom(outputCollector.toByteArray());
QueryServletTest.java,FindIssuesResponse result = FindIssuesResponse.parseFrom(outputCollector.toByteArray());,if (FindIssuesResponse != null ) FindIssuesResponse result = FindIssuesResponse.parseFrom(outputCollector.toByteArray());
QueryServletTest.java,FindIssuesResponse result = FindIssuesResponse.parseFrom(outputCollector.toByteArray());,if (FindIssuesResponse != null ) FindIssuesResponse result = FindIssuesResponse.parseFrom(outputCollector.toByteArray());
AppEngineCloud.java,List<String> allHashes = new ArrayList<String>(bugsByHash.keySet());,if (ArrayList<String>(bugsByHash != null ) List<String> allHashes = new ArrayList<String>(bugsByHash.keySet());
AppEngineCloud.java,int numBugs = bugsByHash.size();,if (bugsByHash != null ) int numBugs = bugsByHash.size();
AppEngineCloud.java,List<BugInstance> newBugs = new ArrayList<BugInstance>(bugsByHash.values());,if (ArrayList<BugInstance>(bugsByHash != null ) List<BugInstance> newBugs = new ArrayList<BugInstance>(bugsByHash.values());
AppEngineCloud.java,OutputStream stream = conn.getOutputStream();,if (conn != null ) OutputStream stream = conn.getOutputStream();
AppEngineCloud.java,int responseCode = conn.getResponseCode();,if (conn != null ) int responseCode = conn.getResponseCode();
AppEngineCloud.java,int numBugs = hashes.size();,if (hashes != null ) int numBugs = hashes.size();
AppEngineCloud.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
AppEngineCloud.java,start = System.currentTimeMillis();,if (System != null ) start = System.currentTimeMillis();
FlybushServlet.java,String uri = req.getPathInfo();,if (req != null ) String uri = req.getPathInfo();
FlybushServlet.java,String uri = req.getPathInfo();,if (req != null ) String uri = req.getPathInfo();
FlybushServlet.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
FlybushServlet.java,UserService userService = UserServiceFactory.getUserService();,if (UserServiceFactory != null ) UserService userService = UserServiceFactory.getUserService();
FlybushServlet.java,User user = userService.getCurrentUser();,if (userService != null ) User user = userService.getCurrentUser();
FlybushServlet.java,Transaction tx = pm.currentTransaction();,if (pm != null ) Transaction tx = pm.currentTransaction();
FlybushServlet.java,PrintWriter writer = resp.getWriter();,if (resp != null ) PrintWriter writer = resp.getWriter();
FlybushServlet.java,Transaction tx = pm.currentTransaction();,if (pm != null ) Transaction tx = pm.currentTransaction();
FlybushServlet.java,LogIn loginMsg = LogIn.parseFrom(req.getInputStream());,if (LogIn != null ) LogIn loginMsg = LogIn.parseFrom(req.getInputStream());
FlybushServlet.java,Transaction tx = pm.currentTransaction();,if (pm != null ) Transaction tx = pm.currentTransaction();
FlybushServlet.java,Key invocationKey = invocation.getKey();,if (invocation != null ) Key invocationKey = invocation.getKey();
FlybushServlet.java,DatastoreService ds = DatastoreServiceFactory.getDatastoreService();,if (DatastoreServiceFactory != null ) DatastoreService ds = DatastoreServiceFactory.getDatastoreService();
FlybushServlet.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
FlybushServlet.java,FindIssues loginMsg = FindIssues.parseFrom(req.getInputStream());,if (FindIssues != null ) FindIssues loginMsg = FindIssues.parseFrom(req.getInputStream());
FlybushServlet.java,start = System.currentTimeMillis();,if (System != null ) start = System.currentTimeMillis();
FlybushServlet.java,long sessionId = loginMsg.getSessionId();,if (loginMsg != null ) long sessionId = loginMsg.getSessionId();
FlybushServlet.java,start = System.currentTimeMillis();,if (System != null ) start = System.currentTimeMillis();
FlybushServlet.java,List<String> hashes = AppEngineProtoUtil.decodeHashes(loginMsg.getMyIssueHashesList());,if (AppEngineProtoUtil != null ) List<String> hashes = AppEngineProtoUtil.decodeHashes(loginMsg.getMyIssueHashesList());
FlybushServlet.java,start = System.currentTimeMillis();,if (System != null ) start = System.currentTimeMillis();
FlybushServlet.java,FindIssuesResponse.Builder issueProtos = FindIssuesResponse.newBuilder();,if (FindIssuesResponse != null ) FindIssuesResponse.Builder issueProtos = FindIssuesResponse.newBuilder();
FlybushServlet.java,long istart = System.currentTimeMillis();,if (System != null ) long istart = System.currentTimeMillis();
FlybushServlet.java,Issue.Builder issueBuilder = Issue.newBuilder();,if (Issue != null ) Issue.Builder issueBuilder = Issue.newBuilder();
FlybushServlet.java,long estart = System.currentTimeMillis();,if (System != null ) long estart = System.currentTimeMillis();
FlybushServlet.java,estart = System.currentTimeMillis();,if (System != null ) estart = System.currentTimeMillis();
FlybushServlet.java,start = System.currentTimeMillis();,if (System != null ) start = System.currentTimeMillis();
FlybushServlet.java,UploadIssues issues = UploadIssues.parseFrom(req.getInputStream());,if (UploadIssues != null ) UploadIssues issues = UploadIssues.parseFrom(req.getInputStream());
FlybushServlet.java,Transaction tx = pm.currentTransaction();,if (pm != null ) Transaction tx = pm.currentTransaction();
FlybushServlet.java,UploadEvaluation uploadEvalMsg = UploadEvaluation.parseFrom(req.getInputStream());,if (UploadEvaluation != null ) UploadEvaluation uploadEvalMsg = UploadEvaluation.parseFrom(req.getInputStream());
FlybushServlet.java,DbEvaluation dbEvaluation = createDbEvaluation(uploadEvalMsg.getEvaluation());,if (createDbEvaluation(uploadEvalMsg != null ) DbEvaluation dbEvaluation = createDbEvaluation(uploadEvalMsg.getEvaluation());
FlybushServlet.java,Key invocationKey = session.getInvocation();,if (session != null ) Key invocationKey = session.getInvocation();
FlybushServlet.java,Transaction tx = pm.currentTransaction();,if (pm != null ) Transaction tx = pm.currentTransaction();
FlybushServlet.java,String hash = AppEngineProtoUtil.decodeHash(uploadEvalMsg.getHash());,if (AppEngineProtoUtil != null ) String hash = AppEngineProtoUtil.decodeHash(uploadEvalMsg.getHash());
FlybushServlet.java,GetRecentEvaluations recentEvalsRequest = GetRecentEvaluations.parseFrom(req.getInputStream());,if (GetRecentEvaluations != null ) GetRecentEvaluations recentEvalsRequest = GetRecentEvaluations.parseFrom(req.getInputStream());
FlybushServlet.java,long startTime = recentEvalsRequest.getTimestamp();,if (recentEvalsRequest != null ) long startTime = recentEvalsRequest.getTimestamp();
FlybushServlet.java,RecentEvaluations.Builder issueProtos = RecentEvaluations.newBuilder();,if (RecentEvaluations != null ) RecentEvaluations.Builder issueProtos = RecentEvaluations.newBuilder();
FlybushServlet.java,GetEvaluations evalsRequest = GetEvaluations.parseFrom(req.getInputStream());,if (GetEvaluations != null ) GetEvaluations evalsRequest = GetEvaluations.parseFrom(req.getInputStream());
FlybushServlet.java,RecentEvaluations.Builder response = RecentEvaluations.newBuilder();,if (RecentEvaluations != null ) RecentEvaluations.Builder response = RecentEvaluations.newBuilder();
FlybushServlet.java,"Issue issueProto = buildIssueProto(issue, issue.getEvaluations());","if (issue != null ) Issue issueProto = buildIssueProto(issue, issue.getEvaluations());"
FlybushServlet.java,ServletOutputStream output = resp.getOutputStream();,if (resp != null ) ServletOutputStream output = resp.getOutputStream();
FlybushServlet.java,int numEvaluations = evaluationsList.size();,if (evaluationsList != null ) int numEvaluations = evaluationsList.size();
FlybushServlet.java,DbEvaluation dbEvaluation = it.previous();,if (it != null ) DbEvaluation dbEvaluation = it.previous();
FlybushServlet.java,boolean userIsNew = seenUsernames.add(dbEvaluation.getWho());,if (seenUsernames != null ) boolean userIsNew = seenUsernames.add(dbEvaluation.getWho());
FlybushServlet.java,String issueHash = dbEvaluation.getIssue().getHash();,if (dbEvaluation != null ) String issueHash = dbEvaluation.getIssue().getHash();
FlybushServlet.java,DbEvaluation eval = it.next();,if (it != null ) DbEvaluation eval = it.next();
FlybushServletTest.java,ApiProxyLocalImpl proxy = (ApiProxyLocalImpl) ApiProxy.getDelegate();,if (ApiProxy != null ) ApiProxyLocalImpl proxy = (ApiProxyLocalImpl) ApiProxy.getDelegate();
FlybushServletTest.java,ApiProxyLocalImpl proxy = (ApiProxyLocalImpl) ApiProxy.getDelegate();,if (ApiProxy != null ) ApiProxyLocalImpl proxy = (ApiProxyLocalImpl) ApiProxy.getDelegate();
FlybushServletTest.java,FindIssuesResponse result = FindIssuesResponse.parseFrom(outputCollector.toByteArray());,if (FindIssuesResponse != null ) FindIssuesResponse result = FindIssuesResponse.parseFrom(outputCollector.toByteArray());
FlybushServletTest.java,FindIssuesResponse result = FindIssuesResponse.parseFrom(outputCollector.toByteArray());,if (FindIssuesResponse != null ) FindIssuesResponse result = FindIssuesResponse.parseFrom(outputCollector.toByteArray());
FlybushServletTest.java,FindIssuesResponse result = FindIssuesResponse.parseFrom(outputCollector.toByteArray());,if (FindIssuesResponse != null ) FindIssuesResponse result = FindIssuesResponse.parseFrom(outputCollector.toByteArray());
FlybushServletTest.java,List<DbInvocation> invocations = (List<DbInvocation>) query.execute();,if (query != null ) List<DbInvocation> invocations = (List<DbInvocation>) query.execute();
FlybushServletTest.java,FindIssuesResponse result = FindIssuesResponse.parseFrom(outputCollector.toByteArray());,if (FindIssuesResponse != null ) FindIssuesResponse result = FindIssuesResponse.parseFrom(outputCollector.toByteArray());
FlybushServletTest.java,FindIssuesResponse result = FindIssuesResponse.parseFrom(outputCollector.toByteArray());,if (FindIssuesResponse != null ) FindIssuesResponse result = FindIssuesResponse.parseFrom(outputCollector.toByteArray());
FlybushServletTest.java,FindIssuesResponse result = FindIssuesResponse.parseFrom(outputCollector.toByteArray());,if (FindIssuesResponse != null ) FindIssuesResponse result = FindIssuesResponse.parseFrom(outputCollector.toByteArray());
FlybushServletTest.java,RecentEvaluations result = RecentEvaluations.parseFrom(outputCollector.toByteArray());,if (RecentEvaluations != null ) RecentEvaluations result = RecentEvaluations.parseFrom(outputCollector.toByteArray());
FlybushServletTest.java,RecentEvaluations result = RecentEvaluations.parseFrom(outputCollector.toByteArray());,if (RecentEvaluations != null ) RecentEvaluations result = RecentEvaluations.parseFrom(outputCollector.toByteArray());
FlybushServletTest.java,RecentEvaluations result = RecentEvaluations.parseFrom(outputCollector.toByteArray());,if (RecentEvaluations != null ) RecentEvaluations result = RecentEvaluations.parseFrom(outputCollector.toByteArray());
FlybushServletTest.java,Key invocationId = dbEval.getInvocation();,if (dbEval != null ) Key invocationId = dbEval.getInvocation();
FlybushServletTest.java,RecentEvaluations evals = RecentEvaluations.parseFrom(outputCollector.toByteArray());,if (RecentEvaluations != null ) RecentEvaluations evals = RecentEvaluations.parseFrom(outputCollector.toByteArray());
FlybushServletTest.java,RecentEvaluations evals = RecentEvaluations.parseFrom(outputCollector.toByteArray());,if (RecentEvaluations != null ) RecentEvaluations evals = RecentEvaluations.parseFrom(outputCollector.toByteArray());
FlybushServletTest.java,RecentEvaluations evals = RecentEvaluations.parseFrom(outputCollector.toByteArray());,if (RecentEvaluations != null ) RecentEvaluations evals = RecentEvaluations.parseFrom(outputCollector.toByteArray());
FlybushServletTest.java,RecentEvaluations evals = RecentEvaluations.parseFrom(outputCollector.toByteArray());,if (RecentEvaluations != null ) RecentEvaluations evals = RecentEvaluations.parseFrom(outputCollector.toByteArray());
FlybushServletTest.java,Issue.Builder issueBuilder = Issue.newBuilder();,if (Issue != null ) Issue.Builder issueBuilder = Issue.newBuilder();
FlybushServletTest.java,actualPersistenceManager = pmf.getPersistenceManager();,if (pmf != null ) actualPersistenceManager = pmf.getPersistenceManager();
AppEngineCloud.java,OutputStream stream = conn.getOutputStream();,if (conn != null ) OutputStream stream = conn.getOutputStream();
AppEngineCloud.java,int responseCode = conn.getResponseCode();,if (conn != null ) int responseCode = conn.getResponseCode();
FlybushServlet.java,List<String> decodedHashes = AppEngineProtoUtil.decodeHashes(loginMsg.getMyIssueHashesList());,if (AppEngineProtoUtil != null ) List<String> decodedHashes = AppEngineProtoUtil.decodeHashes(loginMsg.getMyIssueHashesList());
FlybushServlet.java,"Issue issueProto = buildIssueProto(issue, issue.getEvaluations());","if (issue != null ) Issue issueProto = buildIssueProto(issue, issue.getEvaluations());"
FlybushServlet.java,ListIterator<DbEvaluation> it = evaluationsOrig.listIterator(evaluationsOrig.size());,if (evaluationsOrig != null ) ListIterator<DbEvaluation> it = evaluationsOrig.listIterator(evaluationsOrig.size());
FlybushServlet.java,DbEvaluation dbEvaluation = it.previous();,if (it != null ) DbEvaluation dbEvaluation = it.previous();
FlybushServlet.java,boolean userIsNew = seenUsernames.add(dbEvaluation.getWho());,if (seenUsernames != null ) boolean userIsNew = seenUsernames.add(dbEvaluation.getWho());
AppEngineCloud.java,String hash = AppEngineProtoUtil.decodeHash(issue.getHash());,if (AppEngineProtoUtil != null ) String hash = AppEngineProtoUtil.decodeHash(issue.getHash());
CloudFactory.java,IGuiCallback callback = bc.getProject().getGuiCallback();,if (bc != null ) IGuiCallback callback = bc.getProject().getGuiCallback();
FlybushServlet.java,deleted = query.deletePersistentAll();,if (query != null ) deleted = query.deletePersistentAll();
FlybushServlet.java,LogInResponse.Builder issueProtos = LogInResponse.newBuilder();,if (LogInResponse != null ) LogInResponse.Builder issueProtos = LogInResponse.newBuilder();
FlybushServlet.java,List<SqlCloudSession> sessions = (List<SqlCloudSession>) query.execute();,if (query != null ) List<SqlCloudSession> sessions = (List<SqlCloudSession>) query.execute();
FlybushServletTest.java,LogInResponse result = LogInResponse.parseFrom(outputCollector.toByteArray());,if (LogInResponse != null ) LogInResponse result = LogInResponse.parseFrom(outputCollector.toByteArray());
FlybushServletTest.java,LogInResponse result = LogInResponse.parseFrom(outputCollector.toByteArray());,if (LogInResponse != null ) LogInResponse result = LogInResponse.parseFrom(outputCollector.toByteArray());
FlybushServletTest.java,LogInResponse result = LogInResponse.parseFrom(outputCollector.toByteArray());,if (LogInResponse != null ) LogInResponse result = LogInResponse.parseFrom(outputCollector.toByteArray());
FlybushServletTest.java,LogInResponse result = LogInResponse.parseFrom(outputCollector.toByteArray());,if (LogInResponse != null ) LogInResponse result = LogInResponse.parseFrom(outputCollector.toByteArray());
FlybushServletTest.java,LogInResponse result = LogInResponse.parseFrom(outputCollector.toByteArray());,if (LogInResponse != null ) LogInResponse result = LogInResponse.parseFrom(outputCollector.toByteArray());
FlybushServletTest.java,LogInResponse result = LogInResponse.parseFrom(outputCollector.toByteArray());,if (LogInResponse != null ) LogInResponse result = LogInResponse.parseFrom(outputCollector.toByteArray());
AppEngineCloud.java,LogInResponse response = LogInResponse.parseFrom(conn.getInputStream());,if (LogInResponse != null ) LogInResponse response = LogInResponse.parseFrom(conn.getInputStream());
AppEngineCloudTest.java,LogIn hashes = LogIn.parseFrom(outputCollector.toByteArray());,if (LogIn != null ) LogIn hashes = LogIn.parseFrom(outputCollector.toByteArray());
AppEngineCloudTest.java,List<String> hashesFromLogIn = AppEngineProtoUtil.decodeHashes(hashes.getMyIssueHashesList());,if (AppEngineProtoUtil != null ) List<String> hashesFromLogIn = AppEngineProtoUtil.decodeHashes(hashes.getMyIssueHashesList());
AppEngineCloudTest.java,UploadIssues uploadedIssues = UploadIssues.parseFrom(uploadIssuesBuffer.toByteArray());,if (UploadIssues != null ) UploadIssues uploadedIssues = UploadIssues.parseFrom(uploadIssuesBuffer.toByteArray());
AppEngineProtoUtil.java,hashStr = builder.toString();,if (builder != null ) hashStr = builder.toString();
FlybushServlet.java,List<DbEvaluation> evaluations = (List<DbEvaluation>) query.execute();,if (query != null ) List<DbEvaluation> evaluations = (List<DbEvaluation>) query.execute();
FlybushServletTest.java,List<String> queries = installQueryCollector(DbIssue.class.getName());,if (installQueryCollector(DbIssue != null ) List<String> queries = installQueryCollector(DbIssue.class.getName());
FlybushServletTest.java,LogInResponse result = LogInResponse.parseFrom(outputCollector.toByteArray());,if (LogInResponse != null ) LogInResponse result = LogInResponse.parseFrom(outputCollector.toByteArray());
AppEngineNameLookup.java,HttpURLConnection connection = (HttpURLConnection) response.openConnection();,if (response != null ) HttpURLConnection connection = (HttpURLConnection) response.openConnection();
AppEngineNameLookup.java,int responseCode = connection.getResponseCode();,if (connection != null ) int responseCode = connection.getResponseCode();
AppEngineNameLookup.java,String status = in.readLine();,if (in != null ) String status = in.readLine();
AppEngineNameLookup.java,sessionId = Long.parseLong(in.readLine());,if (Long != null ) sessionId = Long.parseLong(in.readLine());
AppEngineNameLookup.java,username = in.readLine();,if (in != null ) username = in.readLine();
FlybushServlet.java,String hash = uploadEvalMsg.getHash();,if (uploadEvalMsg != null ) String hash = uploadEvalMsg.getHash();
AppEngineCloud.java,private ExecutorService backgroundExecutor = Executors.newCachedThreadPool();,if (Executors != null ) private ExecutorService backgroundExecutor = Executors.newCachedThreadPool();
AppEngineCloud.java,BugInstance bugInstance = bugsByHash.get(issue.getHash());,if (bugsByHash != null ) BugInstance bugInstance = bugsByHash.get(issue.getHash());
AppEngineCloud.java,Issue existingIssue = issuesByHash.get(issue.getHash());,if (issuesByHash != null ) Issue existingIssue = issuesByHash.get(issue.getHash());
AppEngineCloud.java,BugInstance bugInstance = getBugByHash(issue.getHash());,if (getBugByHash(issue != null ) BugInstance bugInstance = getBugByHash(issue.getHash());
AppEngineCloudTest.java,List<String> hashesFromLogIn = hashes.getMyIssueHashesList();,if (hashes != null ) List<String> hashesFromLogIn = hashes.getMyIssueHashesList();
AbstractCloud.java,this.properties = plugin.getProperties();,if (plugin != null ) this.properties = plugin.getProperties();
CloudFactory.java,String cloudClassName = cloudClass.getName();,if (cloudClass != null ) String cloudClassName = cloudClass.getName();
MainFrame.java,assert project == bc.getProject();,if (bc != null ) assert project == bc.getProject();
AppEngineCloud.java,BugInstance bugInstance = bugsByHash.remove(issue.getHash());,if (bugsByHash != null ) BugInstance bugInstance = bugsByHash.remove(issue.getHash());
AppEngineCloud.java,Collection<BugInstance> newBugs = bugsByHash.values();,if (bugsByHash != null ) Collection<BugInstance> newBugs = bugsByHash.values();
BugFilingHelper.java,PropertyBundle properties = cloud.getPlugin().getProperties();,if (cloud != null ) PropertyBundle properties = cloud.getPlugin().getProperties();
BugFilingHelper.java,String result = stringWriter.toString();,if (stringWriter != null ) String result = stringWriter.toString();
AppEngineCloud.java,Issue issue = issuesByHash.get(b.getInstanceHash());,if (issuesByHash != null ) Issue issue = issuesByHash.get(b.getInstanceHash());
GoogleCodeBugFiler.java,String messageWithPriorityTypeAbbreviation = bug.getMessageWithPriorityTypeAbbreviation();,if (bug != null ) String messageWithPriorityTypeAbbreviation = bug.getMessageWithPriorityTypeAbbreviation();
DBCloud.java,long lostTime = startTime - sbc.getTimeStartedLoading();,if (sbc != null ) long lostTime = startTime - sbc.getTimeStartedLoading();
DBCloud.java,int rowCount = insertSession.executeUpdate();,if (insertSession != null ) int rowCount = insertSession.executeUpdate();
DBCloud.java,Collection<String> projects = projectMapping.getProjects(primaryClass.getClassName());,if (projectMapping != null ) Collection<String> projects = projectMapping.getProjects(primaryClass.getClassName());
DBCloud.java,String projectList = projects.toString();,if (projects != null ) String projectList = projects.toString();
DBCloud.java,String detailPlainText = b.getBugPattern().getDetailPlainText();,if (b != null ) String detailPlainText = b.getBugPattern().getDetailPlainText();
DBCloud.java,String eval = getUserEvaluation(b).trim();,if (getUserEvaluation(b) != null ) String eval = getUserEvaluation(b).trim();
DBCloud.java,"firstLine = Math.min(firstLine, s.getStartLine());","if (s != null ) firstLine = Math.min(firstLine, s.getStartLine());"
DBCloud.java,"lastLine = Math.max(lastLine, s.getEndLine());","if (s != null ) lastLine = Math.max(lastLine, s.getEndLine());"
DBCloud.java,SourceLineAnnotation primarySource = primaryClass.getSourceLines();,if (primaryClass != null ) SourceLineAnnotation primarySource = primaryClass.getSourceLines();
DBCloud.java,String txt = in.readLine();,if (in != null ) String txt = in.readLine();
DBCloud.java,String trimmed = txt.trim();,if (txt != null ) String trimmed = txt.trim();
DBCloud.java,String result = stringWriter.toString();,if (stringWriter != null ) String result = stringWriter.toString();
FlybushServlet.java,Issue issueProto = issueBuilder.build();,if (issueBuilder != null ) Issue issueProto = issueBuilder.build();
DBCloud.java,findbugsUser = CloudFactory.getNameLookup(bugCollection).getUsername();,if (CloudFactory != null ) findbugsUser = CloudFactory.getNameLookup(bugCollection).getUsername();
FlybushServlet.java,GetRecentEvaluations recentEvalsRequest = GetRecentEvaluations.parseFrom(req.getInputStream());,if (GetRecentEvaluations != null ) GetRecentEvaluations recentEvalsRequest = GetRecentEvaluations.parseFrom(req.getInputStream());
FlybushServlet.java,long startTime = recentEvalsRequest.getTimestamp();,if (recentEvalsRequest != null ) long startTime = recentEvalsRequest.getTimestamp();
FlybushServlet.java,List<DbEvaluation> evaluations = (List<DbEvaluation>) query.execute();,if (query != null ) List<DbEvaluation> evaluations = (List<DbEvaluation>) query.execute();
FlybushServlet.java,RecentEvaluations.Builder issueProtos = RecentEvaluations.newBuilder();,if (RecentEvaluations != null ) RecentEvaluations.Builder issueProtos = RecentEvaluations.newBuilder();
UnionResults.java,project = more.getProject();,if (more != null ) project = more.getProject();
FindBugsTask.java,String unreadReference = auxClasspath.toString();,if (auxClasspath != null ) String unreadReference = auxClasspath.toString();
DBCloud.java,boolean canSeeCommentsByOthers = bd.canSeeCommentsByOthers();,if (bd != null ) boolean canSeeCommentsByOthers = bd.canSeeCommentsByOthers();
DBCloud.java,ProjectStats projectStats = bugCollection.getProjectStats();,if (bugCollection != null ) ProjectStats projectStats = bugCollection.getProjectStats();
DBCloud.java,ncss += ps.size();,if (ps != null ) ncss += ps.size();
DBCloud.java,classCount += ps.getNumClasses();,if (ps != null ) classCount += ps.getNumClasses();
DBCloud.java,String lst = Arrays.asList(packagePrefixes).toString();,if (Arrays != null ) String lst = Arrays.asList(packagePrefixes).toString();
AppEngineCloud.java,BugInstance bugInstance = findBugInstance(issue.getHash());,if (findBugInstance(issue != null ) BugInstance bugInstance = findBugInstance(issue.getHash());
DBCloud.java,findbugsUser = appEngineNameLookup.getUsername();,if (appEngineNameLookup != null ) findbugsUser = appEngineNameLookup.getUsername();
AppEngineCloud.java,mostRecentEvaluationMillis = eval.getWhen();,if (eval != null ) mostRecentEvaluationMillis = eval.getWhen();
CommentsArea.java,BugInstance bug = theNode.getBug();,if (theNode != null ) BugInstance bug = theNode.getBug();
FlybushServlet.java,String uri = req.getPathInfo();,if (req != null ) String uri = req.getPathInfo();
AppEngineCloud.java,OutputStream stream = conn.getOutputStream();,if (conn != null ) OutputStream stream = conn.getOutputStream();
FlybushServlet.java,Transaction tx = persistenceManager.currentTransaction();,if (persistenceManager != null ) Transaction tx = persistenceManager.currentTransaction();
FlybushServlet.java,Transaction tx = pm.currentTransaction();,if (pm != null ) Transaction tx = pm.currentTransaction();
AppEngineCloudTest.java,InputStream inputStream = new ByteArrayInputStream(issueList.toByteArray());,if (ByteArrayInputStream(issueList != null ) InputStream inputStream = new ByteArrayInputStream(issueList.toByteArray());
AppEngineCloudTest.java,LogIn hashes = LogIn.parseFrom(outputCollector.toByteArray());,if (LogIn != null ) LogIn hashes = LogIn.parseFrom(outputCollector.toByteArray());
AppEngineCloudTest.java,UploadIssues uploadedIssues = UploadIssues.parseFrom(uploadIssuesBuffer.toByteArray());,if (UploadIssues != null ) UploadIssues uploadedIssues = UploadIssues.parseFrom(uploadIssuesBuffer.toByteArray());
AppEngineCloud.java,findbugsUser = lookerupper.getUsername();,if (lookerupper != null ) findbugsUser = lookerupper.getUsername();
AppEngineCloud.java,OutputStream stream = conn.getOutputStream();,if (conn != null ) OutputStream stream = conn.getOutputStream();
AppEngineCloud.java,Issue issue = issuesByHash.get(b.getInstanceHash());,if (issuesByHash != null ) Issue issue = issuesByHash.get(b.getInstanceHash());
DBCloud.java,BugDesignation bd =  getBugData(b).getPrimaryDesignation();,if (getBugData(b) != null ) BugDesignation bd =  getBugData(b).getPrimaryDesignation();
DBCloud.java,BugDesignation bd =  getBugData(b).getPrimaryDesignation();,if (getBugData(b) != null ) BugDesignation bd =  getBugData(b).getPrimaryDesignation();
DBCloud.java,String result =  bd.getAnnotationText();,if (bd != null ) String result =  bd.getAnnotationText();
DBCloud.java,BugDesignation bd =  getBugData(b).getPrimaryDesignation();,if (getBugData(b) != null ) BugDesignation bd =  getBugData(b).getPrimaryDesignation();
DBCloud.java,BugDesignation bd = data.getUserDesignation();,if (data != null ) BugDesignation bd = data.getUserDesignation();
DBCloud.java,bd = data.getNonnullUserDesignation();,if (data != null ) bd = data.getNonnullUserDesignation();
DBCloud.java,BugDesignation bd = data.getUserDesignation();,if (data != null ) BugDesignation bd = data.getUserDesignation();
DBCloud.java,bd = data.getNonnullUserDesignation();,if (data != null ) bd = data.getNonnullUserDesignation();
DBCloud.java,BugDesignation bd = data.getNonnullUserDesignation();,if (data != null ) BugDesignation bd = data.getNonnullUserDesignation();
LockAnalysis.java,int lockNumber = frame.getTopValue().getNumber();,if (frame != null ) int lockNumber = frame.getTopValue().getNumber();
FilterPropertyDatabase.java,String s = in.readLine();,if (in != null ) String s = in.readLine();
FlybushServlet.java,UserService userService = UserServiceFactory.getUserService();,if (UserServiceFactory != null ) UserService userService = UserServiceFactory.getUserService();
FlybushServlet.java,User user = userService.getCurrentUser();,if (userService != null ) User user = userService.getCurrentUser();
FlybushServlet.java,PrintWriter writer = resp.getWriter();,if (resp != null ) PrintWriter writer = resp.getWriter();
FlybushServlet.java,PrintWriter writer = resp.getWriter();,if (resp != null ) PrintWriter writer = resp.getWriter();
FlybushServlet.java,RecentEvaluations.Builder issueProtos = RecentEvaluations.newBuilder();,if (RecentEvaluations != null ) RecentEvaluations.Builder issueProtos = RecentEvaluations.newBuilder();
FlybushServlet.java,String uri = req.getPathInfo();,if (req != null ) String uri = req.getPathInfo();
FlybushServlet.java,LogIn loginMsg = LogIn.parseFrom(req.getInputStream());,if (LogIn != null ) LogIn loginMsg = LogIn.parseFrom(req.getInputStream());
FlybushServlet.java,SqlCloudSession session = lookupCloudSessionById(loginMsg.getSessionId());,if (lookupCloudSessionById(loginMsg != null ) SqlCloudSession session = lookupCloudSessionById(loginMsg.getSessionId());
FlybushServlet.java,LogInResponse.Builder issueProtos = LogInResponse.newBuilder();,if (LogInResponse != null ) LogInResponse.Builder issueProtos = LogInResponse.newBuilder();
FlybushServlet.java,"Issue issueProto = buildIssueProto(issue, issue.getEvaluations());","if (issue != null ) Issue issueProto = buildIssueProto(issue, issue.getEvaluations());"
FlybushServlet.java,UploadIssues issues = UploadIssues.parseFrom(req.getInputStream());,if (UploadIssues != null ) UploadIssues issues = UploadIssues.parseFrom(req.getInputStream());
FlybushServlet.java,SqlCloudSession session = lookupCloudSessionById(issues.getSessionId());,if (lookupCloudSessionById(issues != null ) SqlCloudSession session = lookupCloudSessionById(issues.getSessionId());
FlybushServlet.java,UploadEvaluation uploadEvalMsg = UploadEvaluation.parseFrom(req.getInputStream());,if (UploadEvaluation != null ) UploadEvaluation uploadEvalMsg = UploadEvaluation.parseFrom(req.getInputStream());
FlybushServlet.java,SqlCloudSession session = lookupCloudSessionById(uploadEvalMsg.getSessionId());,if (lookupCloudSessionById(uploadEvalMsg != null ) SqlCloudSession session = lookupCloudSessionById(uploadEvalMsg.getSessionId());
FlybushServlet.java,DbEvaluation dbEvaluation = createDbEvaluation(uploadEvalMsg.getEvaluation());,if (createDbEvaluation(uploadEvalMsg != null ) DbEvaluation dbEvaluation = createDbEvaluation(uploadEvalMsg.getEvaluation());
FlybushServlet.java,Transaction tx = pm.currentTransaction();,if (pm != null ) Transaction tx = pm.currentTransaction();
FlybushServlet.java,String hash = uploadEvalMsg.getHash();,if (uploadEvalMsg != null ) String hash = uploadEvalMsg.getHash();
FlybushServletTest.java,PersistenceManager persistenceManager = pmf.getPersistenceManager();,if (pmf != null ) PersistenceManager persistenceManager = pmf.getPersistenceManager();
FlybushServletTest.java,PersistenceManager persistenceManager = pmf.getPersistenceManager();,if (pmf != null ) PersistenceManager persistenceManager = pmf.getPersistenceManager();
AppEngineNameLookup.java,String idString = in.readLine();,if (in != null ) String idString = in.readLine();
AppEngineNameLookup.java,String name = in.readLine();,if (in != null ) String name = in.readLine();
FlybushServlet.java,LogIn loginMsg = LogIn.parseFrom(req.getInputStream());,if (LogIn != null ) LogIn loginMsg = LogIn.parseFrom(req.getInputStream());
FlybushServlet.java,LogInResponse.Builder issueProtos = LogInResponse.newBuilder();,if (LogInResponse != null ) LogInResponse.Builder issueProtos = LogInResponse.newBuilder();
FlybushServlet.java,"Issue issueProto = buildIssueProto(issue, issue.getEvaluations());","if (issue != null ) Issue issueProto = buildIssueProto(issue, issue.getEvaluations());"
FlybushServletTest.java,PersistenceManager persistenceManager = pmf.getPersistenceManager();,if (pmf != null ) PersistenceManager persistenceManager = pmf.getPersistenceManager();
FlybushServlet.java,String uri = req.getServletPath();,if (req != null ) String uri = req.getServletPath();
FlybushServlet.java,LogIn loginMsg = LogIn.parseFrom(req.getInputStream());,if (LogIn != null ) LogIn loginMsg = LogIn.parseFrom(req.getInputStream());
FlybushServlet.java,LogInResponse.Builder issueProtos = LogInResponse.newBuilder();,if (LogInResponse != null ) LogInResponse.Builder issueProtos = LogInResponse.newBuilder();
FlybushServlet.java,"Issue issueProto = buildIssueProto(issue, issue.getEvaluations());","if (issue != null ) Issue issueProto = buildIssueProto(issue, issue.getEvaluations());"
FlybushServlet.java,String uri = req.getRequestURI();,if (req != null ) String uri = req.getRequestURI();
FlybushServlet.java,PrintWriter writer = resp.getWriter();,if (resp != null ) PrintWriter writer = resp.getWriter();
FlybushServlet.java,HashList hashes = HashList.parseFrom(req.getInputStream());,if (HashList != null ) HashList hashes = HashList.parseFrom(req.getInputStream());
FlybushServlet.java,Set<String> hashSet = new LinkedHashSet<String>(hashes.getHashesList());,if (LinkedHashSet<String>(hashes != null ) Set<String> hashSet = new LinkedHashSet<String>(hashes.getHashesList());
FlybushServlet.java,IssueList.Builder issueProtos = IssueList.newBuilder();,if (IssueList != null ) IssueList.Builder issueProtos = IssueList.newBuilder();
FlybushServlet.java,IssueList.Builder issueProtos = IssueList.newBuilder();,if (IssueList != null ) IssueList.Builder issueProtos = IssueList.newBuilder();
FlybushServlet.java,IssueList issues = IssueList.parseFrom(req.getInputStream());,if (IssueList != null ) IssueList issues = IssueList.parseFrom(req.getInputStream());
FlybushServletTest.java,IssueList result = IssueList.parseFrom(outputCollector.toByteArray());,if (IssueList != null ) IssueList result = IssueList.parseFrom(outputCollector.toByteArray());
FlybushServletTest.java,IssueList result = IssueList.parseFrom(outputCollector.toByteArray());,if (IssueList != null ) IssueList result = IssueList.parseFrom(outputCollector.toByteArray());
FlybushServletTest.java,IssueList result = IssueList.parseFrom(outputCollector.toByteArray());,if (IssueList != null ) IssueList result = IssueList.parseFrom(outputCollector.toByteArray());
FlybushServletTest.java,IssueList result = IssueList.parseFrom(outputCollector.toByteArray());,if (IssueList != null ) IssueList result = IssueList.parseFrom(outputCollector.toByteArray());
FlybushServletTest.java,IssueList result = IssueList.parseFrom(outputCollector.toByteArray());,if (IssueList != null ) IssueList result = IssueList.parseFrom(outputCollector.toByteArray());
FlybushServletTest.java,PersistenceManager persistenceManager = pmf.getPersistenceManager();,if (pmf != null ) PersistenceManager persistenceManager = pmf.getPersistenceManager();
FlybushServletTest.java,HashList.Builder hashes = HashList.newBuilder();,if (HashList != null ) HashList.Builder hashes = HashList.newBuilder();
FlybushServletTest.java,IssueList result = IssueList.parseFrom(outputCollector.toByteArray());,if (IssueList != null ) IssueList result = IssueList.parseFrom(outputCollector.toByteArray());
AppEngineCloudTest.java,HashList hashes = HashList.parseFrom(outputCollector.toByteArray());,if (HashList != null ) HashList hashes = HashList.parseFrom(outputCollector.toByteArray());
AppEngineCloudTest.java,IssueList uploadedIssues = IssueList.parseFrom(uploadIssuesBuffer.toByteArray());,if (IssueList != null ) IssueList uploadedIssues = IssueList.parseFrom(uploadIssuesBuffer.toByteArray());
AppEngineCloud.java,List<String> missingHashes = response.getMissingIssuesList();,if (response != null ) List<String> missingHashes = response.getMissingIssuesList();
AppEngineCloud.java,IssueList response = IssueList.parseFrom(conn.getInputStream());,if (IssueList != null ) IssueList response = IssueList.parseFrom(conn.getInputStream());
AppEngineCloud.java,IssueList.Builder issueList = IssueList.newBuilder();,if (IssueList != null ) IssueList.Builder issueList = IssueList.newBuilder();
ClassContext.java,List<Method> methodList = Arrays.asList(getJavaClass().getMethods());,if (Arrays != null ) List<Method> methodList = Arrays.asList(getJavaClass().getMethods());
ClassContext.java,final String thisClassName = getJavaClass().getClassName();,if (getJavaClass() != null ) final String thisClassName = getJavaClass().getClassName();
FindRefComparison.java,ClassSummary classSummary = AnalysisContext.currentAnalysisContext().getClassSummary();,if (AnalysisContext != null ) ClassSummary classSummary = AnalysisContext.currentAnalysisContext().getClassSummary();
FlybushServlet.java,PersistenceManager pm = getPMF().getPersistenceManager();,if (getPMF() != null ) PersistenceManager pm = getPMF().getPersistenceManager();
FlybushServlet.java,PersistenceManager pm = getPMF().getPersistenceManager();,if (getPMF() != null ) PersistenceManager pm = getPMF().getPersistenceManager();
FlybushServlet.java,PersistenceManager pm = getPMF().getPersistenceManager();,if (getPMF() != null ) PersistenceManager pm = getPMF().getPersistenceManager();
FlybushServlet.java,PersistenceManager pm = getPMF().getPersistenceManager();,if (getPMF() != null ) PersistenceManager pm = getPMF().getPersistenceManager();
FlybushServlet.java,Set<String> hashSet = new HashSet<String>(hashes.getHashesList());,if (HashSet<String>(hashes != null ) Set<String> hashSet = new HashSet<String>(hashes.getHashesList());
FlybushServlet.java,PersistenceManager pm = getPMF().getPersistenceManager();,if (getPMF() != null ) PersistenceManager pm = getPMF().getPersistenceManager();
FlybushServlet.java,IssueList.Builder issueProtos = IssueList.newBuilder();,if (IssueList != null ) IssueList.Builder issueProtos = IssueList.newBuilder();
FlybushServlet.java,String uri = req.getRequestURI();,if (req != null ) String uri = req.getRequestURI();
FlybushServlet.java,UserService userService = UserServiceFactory.getUserService();,if (UserServiceFactory != null ) UserService userService = UserServiceFactory.getUserService();
FlybushServlet.java,User user = userService.getCurrentUser();,if (userService != null ) User user = userService.getCurrentUser();
FlybushServlet.java,PersistenceManager pm = PMF.get().getPersistenceManager();,if (PMF != null ) PersistenceManager pm = PMF.get().getPersistenceManager();
FlybushServlet.java,PrintWriter writer = resp.getWriter();,if (resp != null ) PrintWriter writer = resp.getWriter();
FlybushServlet.java,PersistenceManager pm = PMF.get().getPersistenceManager();,if (PMF != null ) PersistenceManager pm = PMF.get().getPersistenceManager();
FlybushServlet.java,PrintWriter writer = resp.getWriter();,if (resp != null ) PrintWriter writer = resp.getWriter();
AppEngineCloud.java,Issue issue = new Issue(e.getValue());,if (Issue(e != null ) Issue issue = new Issue(e.getValue());
AppEngineCloud.java,Issue issue = issueMap.get(b.getInstanceHash());,if (issueMap != null ) Issue issue = issueMap.get(b.getInstanceHash());
AppEngineCloud.java,Issue issue = issueMap.get(b.getInstanceHash());,if (issueMap != null ) Issue issue = issueMap.get(b.getInstanceHash());
TestingGround.java,String sig = xField.getSignature();,if (xField != null ) String sig = xField.getSignature();
TestingGround.java,String sig = xField.getSignature();,if (xField != null ) String sig = xField.getSignature();
TestingGround.java,String name = fieldClass.getClassDescriptor().getClassName();,if (fieldClass != null ) String name = fieldClass.getClassDescriptor().getClassName();
TestingGround.java,fieldType = fieldClass.getSuperclassDescriptor();,if (fieldClass != null ) fieldType = fieldClass.getSuperclassDescriptor();
TypeFrameModelingVisitor.java,fieldSummary =  AnalysisContext.currentAnalysisContext().getFieldSummary();,if (AnalysisContext != null ) fieldSummary =  AnalysisContext.currentAnalysisContext().getFieldSummary();
TypeFrameModelingVisitor.java,Type resultType = frame.popValue();,if (frame != null ) Type resultType = frame.popValue();
TypeFrameModelingVisitor.java,argType = frame.popValue();,if (frame != null ) argType = frame.popValue();
TypeFrameModelingVisitor.java,Type topValue = frame.getTopValue();,if (frame != null ) Type topValue = frame.getTopValue();
TypeFrameModelingVisitor.java,Type resultType = frame.popValue();,if (frame != null ) Type resultType = frame.popValue();
TypeFrameModelingVisitor.java,int index = obj.getIndex();,if (obj != null ) int index = obj.getIndex();
TypeFrameModelingVisitor.java,Type value = frame.popValue();,if (frame != null ) Type value = frame.popValue();
TypeFrameModelingVisitor.java,Type t = getFrame().popValue();,if (getFrame() != null ) Type t = getFrame().popValue();
FieldMatcher.java,FieldAnnotation fieldAnnotation = bugInstance.getPrimaryField();,if (bugInstance != null ) FieldAnnotation fieldAnnotation = bugInstance.getPrimaryField();
MethodMatcher.java,MethodAnnotation methodAnnotation = bugInstance.getPrimaryMethod();,if (bugInstance != null ) MethodAnnotation methodAnnotation = bugInstance.getPrimaryMethod();
NullDerefAndRedundantComparisonFinder.java,IsNullValueFrame invSourceFact = invDataflow.getResultFact(edge.getSource());,if (invDataflow != null ) IsNullValueFrame invSourceFact = invDataflow.getResultFact(edge.getSource());
NullDerefAndRedundantComparisonFinder.java,IsNullValueFrame invTargetFact = invDataflow.getStartFact(edge.getTarget());,if (invDataflow != null ) IsNullValueFrame invTargetFact = invDataflow.getStartFact(edge.getTarget());
NullDerefAndRedundantComparisonFinder.java,UnconditionalValueDerefSet uvdSourceFact = uvdDataflow.getStartFact(edge.getSource());,if (uvdDataflow != null ) UnconditionalValueDerefSet uvdSourceFact = uvdDataflow.getStartFact(edge.getSource());
NullDerefAndRedundantComparisonFinder.java,UnconditionalValueDerefSet uvdTargetFact = uvdDataflow.getResultFact(edge.getTarget());,if (uvdDataflow != null ) UnconditionalValueDerefSet uvdTargetFact = uvdDataflow.getResultFact(edge.getTarget());
NullDerefAndRedundantComparisonFinder.java,Location location = Location.getLastLocation(edge.getSource());,if (Location != null ) Location location = Location.getLastLocation(edge.getSource());
FindNullDeref.java,ConstantPoolGen cpg = classContext.getConstantPoolGen();,if (classContext != null ) ConstantPoolGen cpg = classContext.getConstantPoolGen();
FindNullDeref.java,Instruction ins = location.getHandle().getInstruction();,if (location != null ) Instruction ins = location.getHandle().getInstruction();
FindNullDeref.java,ValueNumber valueNumber = vnaFrame.getTopValue();,if (vnaFrame != null ) ValueNumber valueNumber = vnaFrame.getTopValue();
FindNullDeref.java,Instruction ins = loc.getHandle().getInstruction();,if (loc != null ) Instruction ins = loc.getHandle().getInstruction();
FindNullDeref.java,String methodName = method.getName();,if (method != null ) String methodName = method.getName();
FindNullDeref.java,String methodSig = method.getSignature();,if (method != null ) String methodSig = method.getSignature();
FindNullDeref.java,XField nonNullField = pu.getNonNullField();,if (pu != null ) XField nonNullField = pu.getNonNullField();
FindNullDeref.java,XMethodParameter nonNullParameter = pu.getNonNullParameter();,if (pu != null ) XMethodParameter nonNullParameter = pu.getNonNullParameter();
FindNullDeref.java,invokedXMethod = mp.getMethod();,if (mp != null ) invokedXMethod = mp.getMethod();
FindNullDeref.java,invokedMethod =  MethodAnnotation.fromXMethod(mp.getMethod());,if (MethodAnnotation != null ) invokedMethod =  MethodAnnotation.fromXMethod(mp.getMethod());
FindNullDeref.java,parameterNumber = mp.getParameterNumber();,if (mp != null ) parameterNumber = mp.getParameterNumber();
FindNullDeref.java,InstructionHandle handle = doomed.getHandle();,if (doomed != null ) InstructionHandle handle = doomed.getHandle();
FindNullDeref.java,InstructionHandle first = doomed.getBasicBlock().getFirstInstruction();,if (doomed != null ) InstructionHandle first = doomed.getBasicBlock().getFirstInstruction();
FindNullDeref.java,BasicBlock prevBlock = doomed.getBasicBlock();,if (doomed != null ) BasicBlock prevBlock = doomed.getBasicBlock();
FindNullDeref.java,handle = doomed.getHandle();,if (doomed != null ) handle = doomed.getHandle();
FindNullDeref.java,handle = prevBlock.getLastInstruction();,if (prevBlock != null ) handle = prevBlock.getLastInstruction();
FindNullDeref.java,handle = handle.getPrev();,if (handle != null ) handle = handle.getPrev();
FindNullDeref.java,"doomed = new Location(handle, doomed.getBasicBlock());","if (doomed != null ) doomed = new Location(handle, doomed.getBasicBlock());"
FindNullDeref.java,CodeException[] exceptionTable = method.getCode().getExceptionTable();,if (method != null ) CodeException[] exceptionTable = method.getCode().getExceptionTable();
Dataflow.java,Edge edge = predEdgeIter.next();,if (predEdgeIter != null ) Edge edge = predEdgeIter.next();
FindNullDeref.java,int position = location.getHandle().getPosition();,if (location != null ) int position = location.getHandle().getPosition();
MarkerUtil.java,int offset = sourceRange.getOffset();,if (sourceRange != null ) int offset = sourceRange.getOffset();
MarkerUtil.java,ISourceRange sourceRange = ifield.getNameRange();,if (ifield != null ) ISourceRange sourceRange = ifield.getNameRange();
MarkerUtil.java,sourceRange = ifield.getSourceRange();,if (ifield != null ) sourceRange = ifield.getSourceRange();
MarkerUtil.java,String content = source.getSource();,if (source != null ) String content = source.getSource();
MarkerUtil.java,charContent = content.toCharArray();,if (content != null ) charContent = content.toCharArray();
MarkerUtil.java,IOpenable op = source.getOpenable();,if (source != null ) IOpenable op = source.getOpenable();
BugRanker.java,int priorityAdjustment = priorityAdjustment(bug.getPriority());,if (priorityAdjustment(bug != null ) int priorityAdjustment = priorityAdjustment(bug.getPriority());
BugLoader.java,MainFrame instance = MainFrame.getInstance();,if (MainFrame != null ) MainFrame instance = MainFrame.getInstance();
DetectorsTest.java,UserPreferences preferences = UserPreferences.getUserPreferences();,if (UserPreferences != null ) UserPreferences preferences = UserPreferences.getUserPreferences();
SourceLineAnnotation.java,SourceFinder mySourceFinder = sourceFinder.get();,if (sourceFinder != null ) SourceFinder mySourceFinder = sourceFinder.get();
FindNullDeref.java,Method[] methodList = jclass.getMethods();,if (jclass != null ) Method[] methodList = jclass.getMethods();
FindDeadLocalStores.java,String name = lvAnnotation.getName();,if (lvAnnotation != null ) String name = lvAnnotation.getName();
FindDeadLocalStores.java,String lvName = lvAnnotation.getName();,if (lvAnnotation != null ) String lvName = lvAnnotation.getName();
DBCloud.java,ResultSet rs = query.executeQuery();,if (query != null ) ResultSet rs = query.executeQuery();
JDBCUserAnnotationPlugin.java,final String hash = bug.getInstanceHash();,if (bug != null ) final String hash = bug.getInstanceHash();
JDBCUserAnnotationPlugin.java,bulkSynchronizations += bugs.size();,if (bugs != null ) bulkSynchronizations += bugs.size();
JDBCUserAnnotationPlugin.java,ResultSet rs = ps.executeQuery();,if (ps != null ) ResultSet rs = ps.executeQuery();
JDBCUserAnnotationPlugin.java,long now = System.currentTimeMillis();,if (System != null ) long now = System.currentTimeMillis();
JDBCUserAnnotationPlugin.java,BugDesignation bd = bug.getUserDesignation();,if (bug != null ) BugDesignation bd = bug.getUserDesignation();
JDBCUserAnnotationPlugin.java,BugDesignation bd = bug.getUserDesignation();,if (bug != null ) BugDesignation bd = bug.getUserDesignation();
JDBCUserAnnotationPlugin.java,ResultSet rs = queryByHash.executeQuery();,if (queryByHash != null ) ResultSet rs = queryByHash.executeQuery();
JDBCUserAnnotationPlugin.java,String annotationText = bd.getNonnullAnnotationText();,if (bd != null ) String annotationText = bd.getNonnullAnnotationText();
JDBCUserAnnotationPlugin.java,ClassAnnotation primaryClass = bug.getPrimaryClass();,if (bug != null ) ClassAnnotation primaryClass = bug.getPrimaryClass();
JDBCUserAnnotationPlugin.java,className = primaryClass.getClassName();,if (primaryClass != null ) className = primaryClass.getClassName();
JDBCUserAnnotationPlugin.java,BugDesignation bd = bug.getUserDesignation();,if (bug != null ) BugDesignation bd = bug.getUserDesignation();
JDBCUserAnnotationPlugin.java,ResultSet rs = queryByHash.executeQuery();,if (queryByHash != null ) ResultSet rs = queryByHash.executeQuery();
JDBCUserAnnotationPlugin.java,rs = queryByHash.executeQuery();,if (queryByHash != null ) rs = queryByHash.executeQuery();
JDBCUserAnnotationPlugin.java,String annotationText = bd.getNonnullAnnotationText();,if (bd != null ) String annotationText = bd.getNonnullAnnotationText();
JDBCUserAnnotationPlugin.java,int size = queue.size();,if (queue != null ) int size = queue.size();
XMLFileUserAnnotationPlugin.java,Element entry = (Element) i.next();,if (i != null ) Element entry = (Element) i.next();
XMLFileUserAnnotationPlugin.java,BugDesignation bugDesignation = bugInstance.getNonnullUserDesignation();,if (bugInstance != null ) BugDesignation bugDesignation = bugInstance.getNonnullUserDesignation();
XMLFileUserAnnotationPlugin.java,String text = node.getText();,if (node != null ) String text = node.getText();
XMLFileUserAnnotationPlugin.java,document = DocumentHelper.createDocument();,if (DocumentHelper != null ) document = DocumentHelper.createDocument();
XMLFileUserAnnotationPlugin.java,Element entry = (Element) i.next();,if (i != null ) Element entry = (Element) i.next();
XMLFileUserAnnotationPlugin.java,String instanceHash = updateEntry.getKey();,if (updateEntry != null ) String instanceHash = updateEntry.getKey();
XMLFileUserAnnotationPlugin.java,BugDesignation bugDesignation = updateEntry.getValue();,if (updateEntry != null ) BugDesignation bugDesignation = updateEntry.getValue();
XMLFileUserAnnotationPlugin.java,OutputFormat format = OutputFormat.createPrettyPrint();,if (OutputFormat != null ) OutputFormat format = OutputFormat.createPrettyPrint();
HashList.java,Set<Integer> s=map.get(elem.hashCode());,if (s=map != null ) Set<Integer> s=map.get(elem.hashCode());
HashList.java,E i = iterator.next();,if (iterator != null ) E i = iterator.next();
ClassPathBuilder.java,String path = pathname.getParent();,if (pathname != null ) String path = pathname.getParent();
SourceFinder.java,URLConnection connection = new URL(url).openConnection();,if (URL(url) != null ) URLConnection connection = new URL(url).openConnection();
SourceFinder.java,int size = connection.getContentLength();,if (connection != null ) int size = connection.getContentLength();
SourceFinder.java,in = connection.getInputStream();,if (connection != null ) in = connection.getInputStream();
DBCloud.java,rs = ps.executeQuery();,if (ps != null ) rs = ps.executeQuery();
DBCloud.java,BugData bd = getBugData(b.getInstanceHash());,if (getBugData(b != null ) BugData bd = getBugData(b.getInstanceHash());
NoiseNullDeref.java,int pc = location.getHandle().getPosition();,if (location != null ) int pc = location.getHandle().getPosition();
JDBCUserAnnotationPlugin.java,boolean result = updateUserAnnotation.execute();,if (updateUserAnnotation != null ) boolean result = updateUserAnnotation.execute();
Filter.java,DetectorFactoryCollection df = DetectorFactoryCollection.instance();,if (DetectorFactoryCollection != null ) DetectorFactoryCollection df = DetectorFactoryCollection.instance();
BugRanker.java,IAnalysisCache analysisCache = Global.getAnalysisCache();,if (Global != null ) IAnalysisCache analysisCache = Global.getAnalysisCache();
BugRanker.java,IAnalysisCache analysisCache = Global.getAnalysisCache();,if (Global != null ) IAnalysisCache analysisCache = Global.getAnalysisCache();
BugRanker.java,BugRanker pluginRanker = plugin.getBugRanker();,if (plugin != null ) BugRanker pluginRanker = plugin.getBugRanker();
IsNullValueAnalysis.java,IsNullConditionDecision decision = getResultFact(edge.getSource()).getDecision();,if (getResultFact(edge != null ) IsNullConditionDecision decision = getResultFact(edge.getSource()).getDecision();
BugRanker.java,BugPattern bugPattern = bug.getBugPattern();,if (bug != null ) BugPattern bugPattern = bug.getBugPattern();
BugRanker.java,int priority = bug.getPriority();,if (bug != null ) int priority = bug.getPriority();
BugRanker.java,int v = value.intValue();,if (value != null ) int v = value.intValue();
BugRanker.java,String type = bugPattern.getType();,if (bugPattern != null ) String type = bugPattern.getType();
BugRanker.java,value = bugKinds.get(bugPattern.getAbbrev());,if (bugKinds != null ) value = bugKinds.get(bugPattern.getAbbrev());
BugRanker.java,value = bugCategories.get(bugPattern.getCategory());,if (bugCategories != null ) value = bugCategories.get(bugPattern.getCategory());
DBCloud.java,count = insert.executeUpdate();,if (insert != null ) count = insert.executeUpdate();
DBCloud.java,count = updateBug.executeUpdate();,if (updateBug != null ) count = updateBug.executeUpdate();
MergeSummarizeAndView.java,boolean hasScaryBugs = !scaryBugs.isEmpty();,if (!scaryBugs != null ) boolean hasScaryBugs = !scaryBugs.isEmpty();
MergeSummarizeAndView.java,cloud = results.reinitializeCloud();,if (results != null ) cloud = results.reinitializeCloud();
DBCloud.java,long analysisTime = bugCollection.getTimestamp();,if (bugCollection != null ) long analysisTime = bugCollection.getTimestamp();
MergeSummarizeAndView.java,Cloud cloud = results.reinitializeCloud();,if (results != null ) Cloud cloud = results.reinitializeCloud();
MergeSummarizeAndView.java,Cloud.Mode originalMode = cloud.getMode();,if (cloud != null ) Cloud.Mode originalMode = cloud.getMode();
MergeSummarizeAndView.java,FindBugsLayoutManagerFactory factory = new FindBugsLayoutManagerFactory(SplitLayout.class.getName());,if (FindBugsLayoutManagerFactory(SplitLayout != null ) FindBugsLayoutManagerFactory factory = new FindBugsLayoutManagerFactory(SplitLayout.class.getName());
MergeSummarizeAndView.java,MainFrame instance = MainFrame.getInstance();,if (MainFrame != null ) MainFrame instance = MainFrame.getInstance();
DBCloud.java,firstSeen = System.currentTimeMillis();,if (System != null ) firstSeen = System.currentTimeMillis();
DBCloud.java,e = (Exception) e.getCause();,if (e != null ) e = (Exception) e.getCause();
FindUninitializedGet.java,FieldSummary fieldSummary = AnalysisContext.currentAnalysisContext().getFieldSummary();,if (AnalysisContext != null ) FieldSummary fieldSummary = AnalysisContext.currentAnalysisContext().getFieldSummary();
DBCloud.java,int num = uniqueDesignations.size();,if (uniqueDesignations != null ) int num = uniqueDesignations.size();
DBStats.java,int num = reviewsForIssue.getCount(e.getKey());,if (reviewsForIssue != null ) int num = reviewsForIssue.getCount(e.getKey());
IsNullValueAnalysis.java,ifcmpDecision = IsNullValue.pathSensitiveNullValue();,if (IsNullValue != null ) ifcmpDecision = IsNullValue.pathSensitiveNullValue();
IsNullValueAnalysis.java,fallThroughDecision = IsNullValue.pathSensitiveNullValue();,if (IsNullValue != null ) fallThroughDecision = IsNullValue.pathSensitiveNullValue();
DBCloud.java,count = updateBug.executeUpdate();,if (updateBug != null ) count = updateBug.executeUpdate();
DBCloud.java,ResultSet rs = query.executeQuery();,if (query != null ) ResultSet rs = query.executeQuery();
DBCloud.java,count = insert.executeUpdate();,if (insert != null ) count = insert.executeUpdate();
TestingGround.java,String sig = xField.getSignature();,if (xField != null ) String sig = xField.getSignature();
TestingGround.java,FieldSummary fieldSummary = AnalysisContext.currentAnalysisContext().getFieldSummary();,if (AnalysisContext != null ) FieldSummary fieldSummary = AnalysisContext.currentAnalysisContext().getFieldSummary();
DBCloud.java,int count = insert.executeUpdate();,if (insert != null ) int count = insert.executeUpdate();
DBCloud.java,BugDesignation primaryDesignation = bd.getPrimaryDesignation();,if (bd != null ) BugDesignation primaryDesignation = bd.getPrimaryDesignation();
DBStats.java,ResultSet rs = ps.executeQuery();,if (ps != null ) ResultSet rs = ps.executeQuery();
CommentsArea.java,BugInstance bug = frame.currentSelectedBugLeaf.getBug();,if (frame != null ) BugInstance bug = frame.currentSelectedBugLeaf.getBug();
DBCloud.java,long startTime = System.currentTimeMillis();,if (System != null ) long startTime = System.currentTimeMillis();
DBCloud.java,rs = ps.executeQuery();,if (ps != null ) rs = ps.executeQuery();
DBCloud.java,rs = ps.executeQuery();,if (ps != null ) rs = ps.executeQuery();
DBCloud.java,rs = ps.executeQuery();,if (ps != null ) rs = ps.executeQuery();
DBCloud.java,data.bugFiled = whenFiled.getTime();,if (whenFiled != null ) data.bugFiled = whenFiled.getTime();
DBCloud.java,long initialSyncTime = System.currentTimeMillis() -  sbc.getTimeFinishedLoading();,if (sbc != null ) long initialSyncTime = System.currentTimeMillis() -  sbc.getTimeFinishedLoading();
DBCloud.java,int rowCount = insertSession.executeUpdate();,if (insertSession != null ) int rowCount = insertSession.executeUpdate();
DBCloud.java,rs = insertSession.getGeneratedKeys();,if (insertSession != null ) rs = insertSession.getGeneratedKeys();
DBCloud.java,BugData bd  = getBugData(b.getInstanceHash());,if (getBugData(b != null ) BugData bd  = getBugData(b.getInstanceHash());
DBCloud.java,long firstSeen = bugCollection.getAppVersionFromSequenceNumber(firstVersion).getTimestamp();,if (bugCollection != null ) long firstSeen = bugCollection.getAppVersionFromSequenceNumber(firstVersion).getTimestamp();
DBCloud.java,BugDesignation designation = bd.getPrimaryDesignation();,if (bd != null ) BugDesignation designation = bd.getPrimaryDesignation();
DBCloud.java,ResultSet rs = ps.executeQuery();,if (ps != null ) ResultSet rs = ps.executeQuery();
DBCloud.java,long lastSeen = bugCollection.getAppVersionFromSequenceNumber(firstVersion).getTimestamp();,if (bugCollection != null ) long lastSeen = bugCollection.getAppVersionFromSequenceNumber(firstVersion).getTimestamp();
DBStats.java,ResultSet rs = queryInvocations.executeQuery();,if (queryInvocations != null ) ResultSet rs = queryInvocations.executeQuery();
DBCloud.java,ncss += cs.size();,if (cs != null ) ncss += cs.size();
ViewFilter.java,String packageName = b.getPrimaryClass().getClassName();,if (b != null ) String packageName = b.getPrimaryClass().getClassName();
MainFrame.java,final String paths = filter.toString();,if (filter != null ) final String paths = filter.toString();
DetectorFactoryCollection.java,URLConnection urlConnection = url.openConnection();,if (url != null ) URLConnection urlConnection = url.openConnection();
DetectorFactoryCollection.java,String type = urlConnection.getContentType();,if (urlConnection != null ) String type = urlConnection.getContentType();
MainFrame.java,String paths = filter.toString();,if (filter != null ) String paths = filter.toString();
MainFrame.java,String s = in.readLine();,if (in != null ) String s = in.readLine();
MergeSummarizeAndView.java,Project project = result.getProject();,if (result != null ) Project project = result.getProject();
MergeSummarizeAndView.java,Project project = results.getProject();,if (results != null ) Project project = results.getProject();
MergeSummarizeAndView.java,FindBugsLayoutManagerFactory factory = new FindBugsLayoutManagerFactory(SplitLayout.class.getName());,if (FindBugsLayoutManagerFactory(SplitLayout != null ) FindBugsLayoutManagerFactory factory = new FindBugsLayoutManagerFactory(SplitLayout.class.getName());
MergeSummarizeAndView.java,MainFrame instance = MainFrame.getInstance();,if (MainFrame != null ) MainFrame instance = MainFrame.getInstance();
MergeSummarizeAndfView.java,project = more.getProject();,if (more != null ) project = more.getProject();
CommentsArea.java,BugDesignation bd = bug.getNonnullUserDesignation();,if (bug != null ) BugDesignation bd = bug.getNonnullUserDesignation();
CommentsArea.java,String user = bd.getUser();,if (bd != null ) String user = bd.getUser();
CommentsArea.java,long time = bd.getTimestamp();,if (bd != null ) long time = bd.getTimestamp();
CommandLine.java,line = line.trim();,if (line != null ) line = line.trim();
DBCloud.java,BugData bd  = getBugData(b.getInstanceHash());,if (getBugData(b != null ) BugData bd  = getBugData(b.getInstanceHash());
DBCloud.java,long firstSeen = bugCollection.getAppVersionFromSequenceNumber(firstVersion).getTimestamp();,if (bugCollection != null ) long firstSeen = bugCollection.getAppVersionFromSequenceNumber(firstVersion).getTimestamp();
DBCloud.java,long lastSeen = bugCollection.getAppVersionFromSequenceNumber(firstVersion).getTimestamp();,if (bugCollection != null ) long lastSeen = bugCollection.getAppVersionFromSequenceNumber(firstVersion).getTimestamp();
DBCloud.java,BugDesignation designation = bd.getPrimaryDesignation();,if (bd != null ) BugDesignation designation = bd.getPrimaryDesignation();
IsNullValueAnalysis.java,fallThroughDecision = IsNullValue.pathSensitiveNonNullValue();,if (IsNullValue != null ) fallThroughDecision = IsNullValue.pathSensitiveNonNullValue();
IsNullValueAnalysis.java,ifcmpDecision = IsNullValue.pathSensitiveNonNullValue();,if (IsNullValue != null ) ifcmpDecision = IsNullValue.pathSensitiveNonNullValue();
DBCloud.java,bd.bugFiled = bugFiled.getTime();,if (bugFiled != null ) bd.bugFiled = bugFiled.getTime();
DBCloud.java,String className = b.getPrimaryClass().getClassName();,if (b != null ) String className = b.getPrimaryClass().getClassName();
DBCloud.java,boolean result = fileBug.execute();,if (fileBug != null ) boolean result = fileBug.execute();
CommentsArea.java,BugSet filteredSet = theAspects.getMatchingBugs(BugSet.getMainBugSet());,if (theAspects != null ) BugSet filteredSet = theAspects.getMatchingBugs(BugSet.getMainBugSet());
CommentsArea.java,String commentsOnThisBug = nextNode.getBug().getAnnotationText();,if (nextNode != null ) String commentsOnThisBug = nextNode.getBug().getAnnotationText();
SAXBugCollectionHandler.java,CompoundMatcher peek = matcherStack.peek();,if (matcherStack != null ) CompoundMatcher peek = matcherStack.peek();
GUISaveState.java,int size=recentFiles.size();,if (size=recentFiles != null ) int size=recentFiles.size();
TestDesktopIntegration.java,File file = fc.getSelectedFile();,if (fc != null ) File file = fc.getSelectedFile();
DBCloud.java,"firstLine = Math.min(firstLine, s.getStartLine());","if (s != null ) firstLine = Math.min(firstLine, s.getStartLine());"
DBCloud.java,"lastLine = Math.max(lastLine, s.getEndLine());","if (s != null ) lastLine = Math.max(lastLine, s.getEndLine());"
DBCloud.java,Collection<String> projects = projectMapping.getProjects(primaryClass.getClassName());,if (projectMapping != null ) Collection<String> projects = projectMapping.getProjects(primaryClass.getClassName());
DBCloud.java,String projectList = projects.toString();,if (projects != null ) String projectList = projects.toString();
DBCloud.java,SourceLineAnnotation primarySource = primaryClass.getSourceLines();,if (primaryClass != null ) SourceLineAnnotation primarySource = primaryClass.getSourceLines();
DBCloud.java,String txt = in.readLine();,if (in != null ) String txt = in.readLine();
DBCloud.java,String detailPlainText = b.getBugPattern().getDetailPlainText();,if (b != null ) String detailPlainText = b.getBugPattern().getDetailPlainText();
DBCloud.java,String result = stringWriter.toString();,if (stringWriter != null ) String result = stringWriter.toString();
MainFrame.java,int start = note.getStartLine();,if (note != null ) int start = note.getStartLine();
MainFrame.java,int end = note.getEndLine();,if (note != null ) int end = note.getEndLine();
MainFrame.java,final SourceLineAnnotation noteSrc = note.getSourceLines();,if (note != null ) final SourceLineAnnotation noteSrc = note.getSourceLines();
MainFrame.java,int start = noteSrc.getStartLine();,if (noteSrc != null ) int start = noteSrc.getStartLine();
MainFrame.java,int end = noteSrc.getEndLine();,if (noteSrc != null ) int end = noteSrc.getEndLine();
MainFrame.java,Cloud cloud = this.bugCollection.getCloud();,if (this != null ) Cloud cloud = this.bugCollection.getCloud();
SourceFinder.java,URLConnection connection = new URL(url).openConnection();,if (URL(url) != null ) URLConnection connection = new URL(url).openConnection();
SourceFinder.java,in = connection.getInputStream();,if (connection != null ) in = connection.getInputStream();
SourceFinder.java,int size = connection.getContentLength();,if (connection != null ) int size = connection.getContentLength();
SourceFinder.java,in = connection.getInputStream();,if (connection != null ) in = connection.getInputStream();
MainFrame.java,JComponent label = guiLayout.getSourceTitleComponent();,if (guiLayout != null ) JComponent label = guiLayout.getSourceTitleComponent();
ViewFilter.java,"value =value.replace('/','.').trim();","if (=value != null ) value =value.replace('/','.').trim();"
FindUnreleasedLock.java,ResourceValue topValue = frame.getTopValue();,if (frame != null ) ResourceValue topValue = frame.getTopValue();
FindUnreleasedLock.java,ResourceValue topValue = frame.getTopValue();,if (frame != null ) ResourceValue topValue = frame.getTopValue();
DetectorFactoryCollection.java,URLConnection urlConnection = url.openConnection();,if (url != null ) URLConnection urlConnection = url.openConnection();
DetectorFactoryCollection.java,String type = urlConnection.getContentType();,if (urlConnection != null ) String type = urlConnection.getContentType();
LaunchBrowser.java,Runtime r = Runtime.getRuntime();,if (Runtime != null ) Runtime r = Runtime.getRuntime();
HTML.java,String name = elem.getName();,if (elem != null ) String name = elem.getName();
ViewFilter.java,String packageName = b.getPrimaryClass().getPackageName();,if (b != null ) String packageName = b.getPrimaryClass().getPackageName();
DBCloud.java,Collection<String> projects = projectMapping.getProjects(primaryClass.getPackageName());,if (projectMapping != null ) Collection<String> projects = projectMapping.getProjects(primaryClass.getPackageName());
BugInstance.java,XField xField = item.getXField();,if (item != null ) XField xField = item.getXField();
BugInstance.java,XMethod xMethod = item.getReturnValueOf();,if (item != null ) XMethod xMethod = item.getReturnValueOf();
BugInstance.java,String className = visitor.getSuperclassName();,if (visitor != null ) String className = visitor.getSuperclassName();
CommentsArea.java,Cloud cloud = MainFrame.getInstance().bugCollection.getCloud();,if (MainFrame != null ) Cloud cloud = MainFrame.getInstance().bugCollection.getCloud();
MainFrame.java,String name = source.getFullFileName();,if (source != null ) String name = source.getFullFileName();
FindbugsPlugin.java,findbugsProject = bugCollection.getProject();,if (bugCollection != null ) findbugsProject = bugCollection.getProject();
FindBugsWorker.java,Profiler profiler = bugReporter.getProjectStats().getProfiler();,if (bugReporter != null ) Profiler profiler = bugReporter.getProjectStats().getProfiler();
FindBugsWorker.java,IPath path = folder.getLocation();,if (folder != null ) IPath path = folder.getLocation();
FindBugsWorker.java,IPath path = file.getLocation();,if (file != null ) IPath path = file.getLocation();
FindBugsWorker.java,String fileName = path.removeFileExtension().lastSegment();,if (path != null ) String fileName = path.removeFileExtension().lastSegment();
FindBugsWorker.java,IType[] types = cu.getTypes();,if (cu != null ) IType[] types = cu.getTypes();
FindBugsWorker.java,IPath srcRoot = entry.getKey();,if (entry != null ) IPath srcRoot = entry.getKey();
FindBugsWorker.java,File source = entry.getKey();,if (entry != null ) File source = entry.getKey();
FindBugsWorker.java,Pattern classNamesPattern = Pattern.compile(entry.getValue());,if (Pattern != null ) Pattern classNamesPattern = Pattern.compile(entry.getValue());
ResourceUtils.java,IPath location = candidate.getLocation();,if (candidate != null ) IPath location = candidate.getLocation();
ResourceUtils.java,IPath parentLoc = parent.getLocation();,if (parent != null ) IPath parentLoc = parent.getLocation();
MarkerUtil.java,ISourceRange sourceRange = ifield.getNameRange();,if (ifield != null ) ISourceRange sourceRange = ifield.getNameRange();
MarkerUtil.java,sourceRange = ifield.getSourceRange();,if (ifield != null ) sourceRange = ifield.getSourceRange();
MarkerUtil.java,int offset = sourceRange.getOffset();,if (sourceRange != null ) int offset = sourceRange.getOffset();
MarkerUtil.java,IResource res = type.getUnderlyingResource();,if (type != null ) IResource res = type.getUnderlyingResource();
MarkerUtil.java,sourceFileStr = res.getName();// res.getRawLocation().toOSString();,if (res != null ) sourceFileStr = res.getName();// res.getRawLocation().toOSString();
MarkerUtil.java,sourceFileStr = res.getRawLocation().toOSString();,if (res != null ) sourceFileStr = res.getRawLocation().toOSString();
MarkerUtil.java,IOpenable op = source.getOpenable();,if (source != null ) IOpenable op = source.getOpenable();
MarkerUtil.java,ISourceRange range = source.getNameRange();,if (source != null ) ISourceRange range = source.getNameRange();
MarkerUtil.java,range = source.getSourceRange();,if (source != null ) range = source.getSourceRange();
MarkerUtil.java,IOpenable op = source.getOpenable();,if (source != null ) IOpenable op = source.getOpenable();
MarkerUtil.java,int offset = range.getOffset();,if (range != null ) int offset = range.getOffset();
MarkerUtil.java,int tokenID = scanner.getNextToken();,if (scanner != null ) int tokenID = scanner.getNextToken();
MarkerUtil.java,tokenID = scanner.getNextToken();,if (scanner != null ) tokenID = scanner.getNextToken();
GroupType.java,IJavaElement javaElement = JavaCore.create(marker.getResource());,if (JavaCore != null ) IJavaElement javaElement = JavaCore.create(marker.getResource());
BugInstanceSection.java,input = activeEditor.getEditorInput();,if (activeEditor != null ) input = activeEditor.getEditorInput();
FindBugsWorker.java,Iterator<IResource> iter = files.iterator();,if (files != null ) Iterator<IResource> iter = files.iterator();
FindBugsWorker.java,IResource res = iter.next();,if (iter != null ) IResource res = iter.next();
BugLoader.java,Filter suppressionMatcher = project.getSuppressionFilter();,if (project != null ) Filter suppressionMatcher = project.getSuppressionFilter();
MainFrame.java,URLConnection urlConnection = url.openConnection();,if (url != null ) URLConnection urlConnection = url.openConnection();
Util.java,ProgressMonitor pm = pmin.getProgressMonitor();,if (pmin != null ) ProgressMonitor pm = pmin.getProgressMonitor();
CommentsArea.java,Cloud plugin = MainFrame.getInstance().bugCollection.getCloud();,if (MainFrame != null ) Cloud plugin = MainFrame.getInstance().bugCollection.getCloud();
MainFrame.java,sorter = GUISaveState.getInstance().getStarterTable();,if (GUISaveState != null ) sorter = GUISaveState.getInstance().getStarterTable();
MainFrame.java,treeUI = (BasicTreeUI) tree.getUI();,if (tree != null ) treeUI = (BasicTreeUI) tree.getUI();
SorterDialog.java,Sortables[] sortList = Sortables.availableValues();,if (Sortables != null ) Sortables[] sortList = Sortables.availableValues();
SorterDialog.java,Sortables[] sortList = Sortables.values();,if (Sortables != null ) Sortables[] sortList = Sortables.values();
BugSet.java,Filter suppressionFilter = ProjectSettings.getInstance().getSuppressionFilter();,if (ProjectSettings != null ) Filter suppressionFilter = ProjectSettings.getInstance().getSuppressionFilter();
MainFrame.java,Container container = treeScrollPane.getParent();,if (treeScrollPane != null ) Container container = treeScrollPane.getParent();
ProjectSettings.java,Project project = MainFrame.getInstance().getProject();,if (MainFrame != null ) Project project = MainFrame.getInstance().getProject();
BugSet.java,Filter suppressionFilter = ProjectSettings.getInstance().getSuppressionFilter();,if (ProjectSettings != null ) Filter suppressionFilter = ProjectSettings.getInstance().getSuppressionFilter();
BugSet.java,BugPattern bugP=bug.getBugPattern();,if (bugP=bug != null ) BugPattern bugP=bug.getBugPattern();
BugSet.java,Filter cm=ProjectSettings.getInstance().getSuppressionFilter();,if (cm=ProjectSettings != null ) Filter cm=ProjectSettings.getInstance().getSuppressionFilter();
BugSet.java,Matcher m=ProjectSettings.getInstance().getSuppressionFilter();,if (m=ProjectSettings != null ) Matcher m=ProjectSettings.getInstance().getSuppressionFilter();
BugRanker.java,Integer value = bugPatterns.get(bugPattern.getType());,if (bugPatterns != null ) Integer value = bugPatterns.get(bugPattern.getType());
BugRanker.java,value = bugKinds.get(bugPattern.getAbbrev());,if (bugKinds != null ) value = bugKinds.get(bugPattern.getAbbrev());
BugRanker.java,value = bugCategories.get(bugPattern.getCategory());,if (bugCategories != null ) value = bugCategories.get(bugPattern.getCategory());
BugInstance.java,XField xField = item.getXField();,if (item != null ) XField xField = item.getXField();
BugInstance.java,XMethod xMethod = item.getReturnValueOf();,if (item != null ) XMethod xMethod = item.getReturnValueOf();
BugCollectionBugReporter.java,UserAnnotationPlugin userAnnotationPlugin = bugCollection.getUserAnnotationPlugin();,if (bugCollection != null ) UserAnnotationPlugin userAnnotationPlugin = bugCollection.getUserAnnotationPlugin();
DBCloud.java,BugInstance b = bug.bugs.iterator().next();,if (bug != null ) BugInstance b = bug.bugs.iterator().next();
DBCloud.java,ResultSet rs = queryByHash.executeQuery();,if (queryByHash != null ) ResultSet rs = queryByHash.executeQuery();
DBCloud.java,ClassAnnotation primaryClass = bug.getPrimaryClass();,if (bug != null ) ClassAnnotation primaryClass = bug.getPrimaryClass();
DBCloud.java,className = primaryClass.getClassName();,if (primaryClass != null ) className = primaryClass.getClassName();
CommentsArea.java,BugDesignation bd = bug.getUserDesignation();,if (bug != null ) BugDesignation bd = bug.getUserDesignation();
MainFrame.java,UserAnnotationPlugin plugin = this.bugCollection.getUserAnnotationPlugin();,if (this != null ) UserAnnotationPlugin plugin = this.bugCollection.getUserAnnotationPlugin();
MainFrame.java,UserAnnotationPlugin plugin = bugCollection.getUserAnnotationPlugin();,if (bugCollection != null ) UserAnnotationPlugin plugin = bugCollection.getUserAnnotationPlugin();
MainFrame.java,UserAnnotationPlugin plugin = bugCollection.getUserAnnotationPlugin();,if (bugCollection != null ) UserAnnotationPlugin plugin = bugCollection.getUserAnnotationPlugin();
DBCloud.java,long now = System.currentTimeMillis();,if (System != null ) long now = System.currentTimeMillis();
DBCloud.java,BugDesignation bd = bug.getUserDesignation();,if (bug != null ) BugDesignation bd = bug.getUserDesignation();
DBCloud.java,BugDesignation bd = bug.getUserDesignation();,if (bug != null ) BugDesignation bd = bug.getUserDesignation();
DBCloud.java,ResultSet rs = queryByHash.executeQuery();,if (queryByHash != null ) ResultSet rs = queryByHash.executeQuery();
DBCloud.java,rs = queryByHash.executeQuery();,if (queryByHash != null ) rs = queryByHash.executeQuery();
DBCloud.java,String annotationText = bd.getNonnullAnnotationText();,if (bd != null ) String annotationText = bd.getNonnullAnnotationText();
DBCloud.java,boolean result = updateUserAnnotation.execute();,if (updateUserAnnotation != null ) boolean result = updateUserAnnotation.execute();
UserAnnotationsView.java,annotation = bug.getNonnullUserDesignation().getAnnotationText();,if (bug != null ) annotation = bug.getNonnullUserDesignation().getAnnotationText();
JDBCUserAnnotationPlugin.java,ResultSet rs = ps.executeQuery();,if (ps != null ) ResultSet rs = ps.executeQuery();
JDBCUserAnnotationPlugin.java,ResultSet rs = ps.executeQuery();,if (ps != null ) ResultSet rs = ps.executeQuery();
JDBCUserAnnotationPlugin.java,Update u = queue.take();,if (queue != null ) Update u = queue.take();
JDBCUserAnnotationPlugin.java,int size = queue.size();,if (queue != null ) int size = queue.size();
PluginLoader.java,String findBugsHome = DetectorFactoryCollection.getFindBugsHome();,if (DetectorFactoryCollection != null ) String findBugsHome = DetectorFactoryCollection.getFindBugsHome();
BugCollectionBugReporter.java,UserAnnotationPlugin userAnnotationPlugin = bugCollection.getUserAnnotationPlugin();,if (bugCollection != null ) UserAnnotationPlugin userAnnotationPlugin = bugCollection.getUserAnnotationPlugin();
SortedBugCollection.java,userAnnotationPlugin =  JDBCUserAnnotationPlugin.getPlugin();,if (JDBCUserAnnotationPlugin != null ) userAnnotationPlugin =  JDBCUserAnnotationPlugin.getPlugin();
IO.java,ProgressMonitor pm = pmin.getProgressMonitor();,if (pmin != null ) ProgressMonitor pm = pmin.getProgressMonitor();
MainFrame.java,UserAnnotationPlugin plugin = this.bugCollection.getUserAnnotationPlugin();,if (this != null ) UserAnnotationPlugin plugin = this.bugCollection.getUserAnnotationPlugin();
MainFrame.java,UserAnnotationPlugin plugin = bugCollection.getUserAnnotationPlugin();,if (bugCollection != null ) UserAnnotationPlugin plugin = bugCollection.getUserAnnotationPlugin();
MainFrame.java,String name = curProject.getProjectName();,if (curProject != null ) String name = curProject.getProjectName();
MainFrame.java,Filter suppressionFilter = curProject.getSuppressionFilter();,if (curProject != null ) Filter suppressionFilter = curProject.getSuppressionFilter();
MainFrame.java,UserAnnotationPlugin plugin = bugCollection.getUserAnnotationPlugin();,if (bugCollection != null ) UserAnnotationPlugin plugin = bugCollection.getUserAnnotationPlugin();
DetectorToDetector2Adapter.java,Profiler profiler = Profiler.getInstance();,if (Profiler != null ) Profiler profiler = Profiler.getInstance();
FindBugs2.java,Profiler profiler = Profiler.getInstance();,if (Profiler != null ) Profiler profiler = Profiler.getInstance();
FindBugs2.java,Profiler profiler = Profiler.getInstance();,if (Profiler != null ) Profiler profiler = Profiler.getInstance();
ResourceTrackingDetector.java,Profiler profiler = Profiler.getInstance();,if (Profiler != null ) Profiler profiler = Profiler.getInstance();
NullnessAnnotationDatabase.java,Profiler profiler = Profiler.getInstance();,if (Profiler != null ) Profiler profiler = Profiler.getInstance();
NullDerefAndRedundantComparisonFinder.java,Profiler profiler = Profiler.getInstance();,if (Profiler != null ) Profiler profiler = Profiler.getInstance();
TypeQualifierNullnessAnnotationDatabase.java,Profiler profiler = Profiler.getInstance();,if (Profiler != null ) Profiler profiler = Profiler.getInstance();
ObligationDataflowFactory.java,Profiler profiler = Profiler.getInstance();,if (Profiler != null ) Profiler profiler = Profiler.getInstance();
AnalysisCache.java,Profiler profiler = Profiler.getInstance();,if (Profiler != null ) Profiler profiler = Profiler.getInstance();
AnalysisCache.java,Profiler profiler = Profiler.getInstance();,if (Profiler != null ) Profiler profiler = Profiler.getInstance();
FindNullDeref.java,Profiler profiler = Profiler.getInstance();,if (Profiler != null ) Profiler profiler = Profiler.getInstance();
FindRefComparison.java,Profiler profiler = Profiler.getInstance();,if (Profiler != null ) Profiler profiler = Profiler.getInstance();
Profiler.java,Stack<Clock> stack = startTimes.get();,if (startTimes != null ) Stack<Clock> stack = startTimes.get();
Profiler.java,Stack<Clock> stack = startTimes.get();,if (startTimes != null ) Stack<Clock> stack = startTimes.get();
Profiler.java,long time = p.totalTime.get();,if (p != null ) long time = p.totalTime.get();
Profiler.java,int callCount = p.totalCalls.get();,if (p != null ) int callCount = p.totalCalls.get();
Profiler.java,long totalSquareMicros = p.totalSquareMicroseconds.get();,if (p != null ) long totalSquareMicros = p.totalSquareMicroseconds.get();
TopologicalSort.java,Profiler profile = Profiler.getInstance();,if (Profiler != null ) Profiler profile = Profiler.getInstance();
FindRefComparison.java,final String slashedClassName = ClassName.fromFieldSignature(type.getSignature());,if (ClassName != null ) final String slashedClassName = ClassName.fromFieldSignature(type.getSignature());
JDBCUserAnnotationPlugin.java,String annotationText = bd.getAnnotationText();,if (bd != null ) String annotationText = bd.getAnnotationText();
JDBCUserAnnotationPlugin.java,String annotationText = bd.getAnnotationText();,if (bd != null ) String annotationText = bd.getAnnotationText();
JDBCUserAnnotationPlugin.java,long startTime = System.currentTimeMillis();,if (System != null ) long startTime = System.currentTimeMillis();
JDBCUserAnnotationPlugin.java,ResultSet rs = stmt.executeQuery();,if (stmt != null ) ResultSet rs = stmt.executeQuery();
JDBCUserAnnotationPlugin.java,ClassAnnotation primaryClass = bug.getPrimaryClass();,if (bug != null ) ClassAnnotation primaryClass = bug.getPrimaryClass();
JDBCUserAnnotationPlugin.java,className = primaryClass.getClassName();,if (primaryClass != null ) className = primaryClass.getClassName();
JDBCUserAnnotationPlugin.java,BugDesignation bd = bug.getUserDesignation();,if (bug != null ) BugDesignation bd = bug.getUserDesignation();
JDBCUserAnnotationPlugin.java,String annotationText = bd.getAnnotationText();,if (bd != null ) String annotationText = bd.getAnnotationText();
JDBCUserAnnotationPlugin.java,boolean result = stmt.execute();,if (stmt != null ) boolean result = stmt.execute();
MainFrame.java,in = url.openConnection().getInputStream();,if (url != null ) in = url.openConnection().getInputStream();
FilterFilesTab.java,String pathStr = dialog.open();,if (dialog != null ) String pathStr = dialog.open();
FilterFilesTab.java,String[] names = dialog.getFileNames();,if (dialog != null ) String[] names = dialog.getFileNames();
FilterFilesTab.java,filterPath = dialog.getFilterPath();,if (dialog != null ) filterPath = dialog.getFilterPath();
OpcodeStack.java,jumpEntry = jumpEntries.get(dbc.getPC());,if (jumpEntries != null ) jumpEntry = jumpEntries.get(dbc.getPC());
OpcodeStack.java,List<Item> jumpStackEntry = jumpStackEntries.get(dbc.getPC());,if (jumpStackEntries != null ) List<Item> jumpStackEntry = jumpStackEntries.get(dbc.getPC());
OpcodeStack.java,int specialKind = top.getSpecialKind();,if (top != null ) int specialKind = top.getSpecialKind();
OpcodeStack.java,double d = (Double) it.getConstant();,if (it != null ) double d = (Double) it.getConstant();
OpcodeStack.java,float f = (Float) it.getConstant();,if (it != null ) float f = (Float) it.getConstant();
OpcodeStack.java,long l = (Long) it.getConstant();,if (it != null ) long l = (Long) it.getConstant();
OpcodeStack.java,Integer lhsValue = (Integer) lhs.getConstant();,if (lhs != null ) Integer lhsValue = (Integer) lhs.getConstant();
OpcodeStack.java,Integer rhsValue = (Integer) rhs.getConstant();,if (rhs != null ) Integer rhsValue = (Integer) rhs.getConstant();
OpcodeStack.java,int constant = (Integer) rhs.getConstant();,if (rhs != null ) int constant = (Integer) rhs.getConstant();
OpcodeStack.java,int constant = (Integer) lhs.getConstant();,if (lhs != null ) int constant = (Integer) lhs.getConstant();
OpcodeStack.java,int value = (Integer) lhs.getConstant();,if (lhs != null ) int value = (Integer) lhs.getConstant();
OpcodeStack.java,int value = (Integer) rhs.getConstant();,if (rhs != null ) int value = (Integer) rhs.getConstant();
OpcodeStack.java,int rhsValue = (Integer) rhs.getConstant();,if (rhs != null ) int rhsValue = (Integer) rhs.getConstant();
OpcodeStack.java,int constant = (Integer) rhs.getConstant();,if (rhs != null ) int constant = (Integer) rhs.getConstant();
OpcodeStack.java,int value = (Integer) lhs.getConstant();,if (lhs != null ) int value = (Integer) lhs.getConstant();
OpcodeStack.java,int value = (Integer) rhs.getConstant();,if (rhs != null ) int value = (Integer) rhs.getConstant();
FindBugsWorker.java,String filterName = path.toOSString();,if (path != null ) String filterName = path.toOSString();
FindBugsWorker.java,path = file.getLocation();,if (file != null ) path = file.getLocation();
FilterFilesTab.java,IStatus status = validator.validate(path.getPath());,if (validator != null ) IStatus status = validator.validate(path.getPath());
UnreadFields.java,JavaClass fieldClass = Repository.lookupClass(f.getClassName());,if (Repository != null ) JavaClass fieldClass = Repository.lookupClass(f.getClassName());
UnreadFields.java,JavaClass fieldClass = Repository.lookupClass(f.getClassName());,if (Repository != null ) JavaClass fieldClass = Repository.lookupClass(f.getClassName());
UnreadFields.java,superclassName = fieldClass.getSuperclassName();,if (fieldClass != null ) superclassName = fieldClass.getSuperclassName();
FindbugsPlugin.java,prefs = UserPreferences.createDefaultUserPreferences();,if (UserPreferences != null ) prefs = UserPreferences.createDefaultUserPreferences();
FindbugsPlugin.java,UserPreferences userPrefs = UserPreferences.createDefaultUserPreferences();,if (UserPreferences != null ) UserPreferences userPrefs = UserPreferences.createDefaultUserPreferences();
ClearMarkersAction.java,Object next = it.next();,if (it != null ) Object next = it.next();
ClearMarkersAction.java,ProgressMonitorDialog progress = new ProgressMonitorDialog(FindbugsPlugin.getShell());,if (ProgressMonitorDialog(FindbugsPlugin != null ) ProgressMonitorDialog progress = new ProgressMonitorDialog(FindbugsPlugin.getShell());
ClearMarkersEditorAction.java,ProgressMonitorDialog progress = new ProgressMonitorDialog(FindbugsPlugin.getShell());,if (ProgressMonitorDialog(FindbugsPlugin != null ) ProgressMonitorDialog progress = new ProgressMonitorDialog(FindbugsPlugin.getShell());
FindBugsWorker.java,String filterName = file.getLocation().toOSString();,if (file != null ) String filterName = file.getLocation().toOSString();
FilterFilesTab.java,Collection<String> filterFiles = kind.selectedFiles(propertyPage.getCurrentUserPreferences());,if (kind != null ) Collection<String> filterFiles = kind.selectedFiles(propertyPage.getCurrentUserPreferences());
FilterFilesTab.java,final IProject project = propertyPage.getProject();,if (propertyPage != null ) final IProject project = propertyPage.getProject();
FilterFilesTab.java,final UserPreferences currentUserPreferences = propertyPage.getCurrentUserPreferences();,if (propertyPage != null ) final UserPreferences currentUserPreferences = propertyPage.getCurrentUserPreferences();
FilterFilesTab.java,String fn = f.getFullPath().toString();,if (f != null ) String fn = f.getFullPath().toString();
FilterFilesTab.java,Object[] result = dialog.getResult();,if (dialog != null ) Object[] result = dialog.getResult();
FilterFilesTab.java,Object element = selectionIter.next();,if (selectionIter != null ) Object element = selectionIter.next();
FilterFilesTab.java,UserPreferences preferences = propertyPage.getCurrentUserPreferences();,if (propertyPage != null ) UserPreferences preferences = propertyPage.getCurrentUserPreferences();
FindbugsPropertyPage.java,boolean enabled = chkEnableFindBugs.getSelection();,if (chkEnableFindBugs != null ) boolean enabled = chkEnableFindBugs.getSelection();
FindbugsPropertyPage.java,boolean selection = chkRunAtFullBuild.getSelection();,if (chkRunAtFullBuild != null ) boolean selection = chkRunAtFullBuild.getSelection();
FindbugsPropertyPage.java,String effort = currentUserPreferences.getEffort();,if (currentUserPreferences != null ) String effort = currentUserPreferences.getEffort();
FindbugsPropertyPage.java,this.currentUserPreferences = (UserPreferences) origUserPreferences.clone();,if (origUserPreferences != null ) this.currentUserPreferences = (UserPreferences) origUserPreferences.clone();
FindbugsPropertyPage.java,boolean builderEnabled = chkEnableFindBugs.getSelection();,if (chkEnableFindBugs != null ) boolean builderEnabled = chkEnableFindBugs.getSelection();
FindbugsPropertyPage.java,builderEnabled &= chkRunAtFullBuild.getSelection();,if (chkRunAtFullBuild != null ) builderEnabled &= chkRunAtFullBuild.getSelection();
ReportConfigurationTab.java,ProjectFilterSettings defaultSettings = ProjectFilterSettings.createDefault();,if (ProjectFilterSettings != null ) ProjectFilterSettings defaultSettings = ProjectFilterSettings.createDefault();
ProjectUtilities.java,IProjectDescription description = project.getDescription();,if (project != null ) IProjectDescription description = project.getDescription();
ProjectUtilities.java,String[] prevNatures = description.getNatureIds();,if (description != null ) String[] prevNatures = description.getNatureIds();
ProjectUtilities.java,IProjectDescription description = project.getDescription();,if (project != null ) IProjectDescription description = project.getDescription();
ProjectUtilities.java,String[] prevNatures = description.getNatureIds();,if (description != null ) String[] prevNatures = description.getNatureIds();
FileSelectionDialog.java,IResource[] resources = container.members();,if (container != null ) IResource[] resources = container.members();
SortedBugCollection.java,userAnnotationPlugin =  JDBCUserAnnotationPlugin.getPlugin();,if (JDBCUserAnnotationPlugin != null ) userAnnotationPlugin =  JDBCUserAnnotationPlugin.getPlugin();
SortedBugCollection.java,private UserAnnotationPlugin userAnnotationPlugin =  JDBCUserAnnotationPlugin.getPlugin();,if (JDBCUserAnnotationPlugin != null ) private UserAnnotationPlugin userAnnotationPlugin =  JDBCUserAnnotationPlugin.getPlugin();
Sortables.java,MainFrame mf = MainFrame.getInstance();,if (MainFrame != null ) MainFrame mf = MainFrame.getInstance();
BugInstance.java,UserAnnotationPlugin plugin = bugCollection.getUserAnnotationPlugin();,if (bugCollection != null ) UserAnnotationPlugin plugin = bugCollection.getUserAnnotationPlugin();
BugInstance.java,UserAnnotationPlugin plugin = bugCollection.getUserAnnotationPlugin();,if (bugCollection != null ) UserAnnotationPlugin plugin = bugCollection.getUserAnnotationPlugin();
FindBugs2.java,Object instance = cls.newInstance();,if (cls != null ) Object instance = cls.newInstance();
FindBugs2.java,BugReporter realBugReporter = bugReporter.getRealBugReporter();,if (bugReporter != null ) BugReporter realBugReporter = bugReporter.getRealBugReporter();
FindBugs2.java,BugReporter origBugReporter = bugReporter.getDelegate();,if (bugReporter != null ) BugReporter origBugReporter = bugReporter.getDelegate();
SAXBugCollectionHandler.java,BugDesignation userDesignation = bugInstance.getNonnullUserDesignation();,if (bugInstance != null ) BugDesignation userDesignation = bugInstance.getNonnullUserDesignation();
CommentsArea.java,BugDesignation userDesignation = theNode.getBug().getNonnullUserDesignation();,if (theNode != null ) BugDesignation userDesignation = theNode.getBug().getNonnullUserDesignation();
FilterBugsDialog.java,txt = code.getDescription();,if (code != null ) txt = code.getDescription();
Profiler.java,long time = profile.get(c).get();,if (profile != null ) long time = profile.get(c).get();
Profiler.java,long time = profile.get(c).get();,if (profile != null ) long time = profile.get(c).get();
DetectorConfigurationTab.java,Collection<BugPattern> patterns = factory.getReportedBugPatterns();,if (factory != null ) Collection<BugPattern> patterns = factory.getReportedBugPatterns();
DetectorConfigurationTab.java,BugPattern pattern = iter.next();,if (iter != null ) BugPattern pattern = iter.next();
AbstractFindBugsTest.java,String bugsFileLocation = bugsFile.getLocation().toOSString();,if (bugsFile != null ) String bugsFileLocation = bugsFile.getLocation().toOSString();
TestingGround.java,s = s.substring(m.end());,if (s != null ) s = s.substring(m.end());
TestingGround.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
TestingGround.java,Method[] methodList = javaClass.getMethods();,if (javaClass != null ) Method[] methodList = javaClass.getMethods();
TestingGround.java,ConstantPoolGen cpg = classContext.getConstantPoolGen();,if (classContext != null ) ConstantPoolGen cpg = classContext.getConstantPoolGen();
TestingGround.java,"String fullMethodName = methodGen.getClassName() + ""."" + methodGen.getName();","if (methodGen != null ) String fullMethodName = methodGen.getClassName() + ""."" + methodGen.getName();"
TestingGround.java,String sourceFile = classContext.getJavaClass().getSourceFileName();,if (classContext != null ) String sourceFile = classContext.getJavaClass().getSourceFileName();
TestingGround.java,Location location = iter.next();,if (iter != null ) Location location = iter.next();
TestingGround.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
TestingGround.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
TestingGround.java,Type operandType = frame.getTopValue();,if (frame != null ) Type operandType = frame.getTopValue();
TestingGround.java,String topLevel = getTopLevel(xclass.getSourceSignature());,if (getTopLevel(xclass != null ) String topLevel = getTopLevel(xclass.getSourceSignature());
TestingGround.java,int typeArgument = nameToTypeArgumentIndex.get(m.getName());,if (nameToTypeArgumentIndex != null ) int typeArgument = nameToTypeArgumentIndex.get(m.getName());
TestingGround.java,Type operandType = frame.getTopValue();,if (frame != null ) Type operandType = frame.getTopValue();
TestingGround.java,int priority = matchResult.getPriority();,if (matchResult != null ) int priority = matchResult.getPriority();
TestingGround.java,ClassSummary classSummary = AnalysisContext.currentAnalysisContext().getClassSummary();,if (AnalysisContext != null ) ClassSummary classSummary = AnalysisContext.currentAnalysisContext().getClassSummary();
Bug2177967.java,FileInputStream in = reader.getStream();,if (reader != null ) FileInputStream in = reader.getStream();
LaunchBrowser.java,Runtime rt = Runtime.getRuntime();,if (Runtime != null ) Runtime rt = Runtime.getRuntime();
BugPatternSection.java,html += pattern.getDetailText();,if (pattern != null ) html += pattern.getDetailText();
DetailsView.java,FindbugsPlugin plugin = FindbugsPlugin.getDefault();,if (FindbugsPlugin != null ) FindbugsPlugin plugin = FindbugsPlugin.getDefault();
DetailsView.java,Rectangle size = myHtmlControl.getClientArea();,if (myHtmlControl != null ) Rectangle size = myHtmlControl.getClientArea();
DetailsView.java,String shortDescription = pattern.getShortDescription();,if (pattern != null ) String shortDescription = pattern.getShortDescription();
DetailsView.java,String detailText = pattern.getDetailText();,if (pattern != null ) String detailText = pattern.getDetailText();
DetailsView.java,viewPart = AbstractFindbugsView.showDetailsView();,if (AbstractFindbugsView != null ) viewPart = AbstractFindbugsView.showDetailsView();
DetailsView.java,Iterator<BugAnnotation> it = bug.annotationIterator();,if (bug != null ) Iterator<BugAnnotation> it = bug.annotationIterator();
DetailsView.java,BugAnnotation ba = it.next();,if (it != null ) BugAnnotation ba = it.next();
DetailsView.java,input = activeEditor.getEditorInput();,if (activeEditor != null ) input = activeEditor.getEditorInput();
DetailsView.java,int index = annotationList.getSelectionIndex();,if (annotationList != null ) int index = annotationList.getSelectionIndex();
DetailsView.java,Iterator<BugAnnotation> theIterator = theBug.annotationIterator();,if (theBug != null ) Iterator<BugAnnotation> theIterator = theBug.annotationIterator();
DetailsView.java,BugAnnotation theAnnotation = theIterator.next();,if (theIterator != null ) BugAnnotation theAnnotation = theIterator.next();
DetailsView.java,theAnnotation = theIterator.next();,if (theIterator != null ) theAnnotation = theIterator.next();
DetailsView.java,int startLine = sla.getStartLine();,if (sla != null ) int startLine = sla.getStartLine();
DetailsView.java,Iterator<BugAnnotation> iterator = theBug.annotationIterator();,if (theBug != null ) Iterator<BugAnnotation> iterator = theBug.annotationIterator();
DetailsView.java,BugAnnotation bugAnnotation = iterator.next();,if (iterator != null ) BugAnnotation bugAnnotation = iterator.next();
UserAnnotationsView.java,IWorkbenchPage page = getSite().getPage();,if (getSite() != null ) IWorkbenchPage page = getSite().getPage();
UserAnnotationsView.java,marker = detailsView.getMarker();,if (detailsView != null ) marker = detailsView.getMarker();
BugPatternSection.java,Composite p = parent.getParent();,if (parent != null ) Composite p = parent.getParent();
BugPatternSection.java,html = pattern.getDetailHTML();,if (pattern != null ) html = pattern.getDetailHTML();
BugPatternSection.java,Rectangle size = scrolledComposite.getClientArea();,if (scrolledComposite != null ) Rectangle size = scrolledComposite.getClientArea();
BugPatternSection.java,Composite p = rootComposite.getParent();,if (rootComposite != null ) Composite p = rootComposite.getParent();
MarkerUtil.java,fieldLine = primaryField.getSourceLines().getStartLine();,if (primaryField != null ) fieldLine = primaryField.getSourceLines().getStartLine();
AbstractFindBugsTask.java,int rc = getFindbugsEngine().executeJava();,if (getFindbugsEngine() != null ) int rc = getFindbugsEngine().executeJava();
LoadXmlAction.java,String fileName = dialog.open();,if (dialog != null ) String fileName = dialog.open();
SaveXmlAction.java,String fileName = fileDialog.open();,if (fileDialog != null ) String fileName = fileDialog.open();
RefreshJob.java,int totalWork = deltaToRefresh.size();,if (deltaToRefresh != null ) int totalWork = deltaToRefresh.size();
FindbugsPlugin.java,final IPreferenceStore store = getDefault().getPreferenceStore();,if (getDefault() != null ) final IPreferenceStore store = getDefault().getPreferenceStore();
FindbugsPlugin.java,String patternType = next.getAbbrev();,if (next != null ) String patternType = next.getAbbrev();
FilterBugsDialogAction.java,Set<BugPattern> patterns = dialog.getPatterns();,if (dialog != null ) Set<BugPattern> patterns = dialog.getPatterns();
FilterPatternAction.java,final IPreferenceStore store = FindbugsPlugin.getDefault().getPreferenceStore();,if (FindbugsPlugin != null ) final IPreferenceStore store = FindbugsPlugin.getDefault().getPreferenceStore();
FilterPatternAction.java,BugPattern pattern = (BugPattern) group.getData();,if (group != null ) BugPattern pattern = (BugPattern) group.getData();
MarkerUtil.java,String id = result.getAbbrev();,if (result != null ) String id = result.getAbbrev();
BugContentProvider.java,final IPreferenceStore store = FindbugsPlugin.getDefault().getPreferenceStore();,if (FindbugsPlugin != null ) final IPreferenceStore store = FindbugsPlugin.getDefault().getPreferenceStore();
FilterBugsDialog.java,this.allowedPatterns = FindbugsPlugin.getKnownPatterns();,if (FindbugsPlugin != null ) this.allowedPatterns = FindbugsPlugin.getKnownPatterns();
FilterBugsDialog.java,Table table = checkList.getTable();,if (checkList != null ) Table table = checkList.getTable();
FilterBugsDialog.java,boolean checked = event.getChecked();,if (event != null ) boolean checked = event.getChecked();
FilterBugsDialog.java,BugPattern element = (BugPattern) event.getElement();,if (event != null ) BugPattern element = (BugPattern) event.getElement();
BugInstanceSection.java,String shortDescription = pattern.getShortDescription();,if (pattern != null ) String shortDescription = pattern.getShortDescription();
BugPatternSection.java,Rectangle size = rootComposite.getClientArea();,if (rootComposite != null ) Rectangle size = rootComposite.getClientArea();
ShowInPackageExplorerAction.java,Object data = group.getData();,if (group != null ) Object data = group.getData();
FilterFilesTab.java,String fn = f.getProjectRelativePath().toString();,if (f != null ) String fn = f.getProjectRelativePath().toString();
MarkerUtil.java,SourceLineAnnotation sourceLines = bug.getPrimaryClass().getSourceLines();,if (bug != null ) SourceLineAnnotation sourceLines = bug.getPrimaryClass().getSourceLines();
MarkerUtil.java,IOpenable op = javaElement.getOpenable();,if (javaElement != null ) IOpenable op = javaElement.getOpenable();
MarkerUtil.java,int tokenID = scanner.getNextToken();,if (scanner != null ) int tokenID = scanner.getNextToken();
MarkerUtil.java,tokenID = scanner.getNextToken();,if (scanner != null ) tokenID = scanner.getNextToken();
MarkerUtil.java,int startClassPos = scanner.getCurrentTokenStartPosition();,if (scanner != null ) int startClassPos = scanner.getCurrentTokenStartPosition();
MarkerUtil.java,tokenID = scanner.getNextToken();,if (scanner != null ) tokenID = scanner.getNextToken();
MarkerUtil.java,tokenID = scanner.getNextToken();,if (scanner != null ) tokenID = scanner.getNextToken();
MarkerUtil.java,tokenID = scanner.getNextToken();,if (scanner != null ) tokenID = scanner.getNextToken();
MarkerUtil.java,tokenID = scanner.getNextToken();,if (scanner != null ) tokenID = scanner.getNextToken();
MarkerUtil.java,String elemName = javaElement.getElementName();,if (javaElement != null ) String elemName = javaElement.getElementName();
PluginInfo.java,boolean ok = outputFile.getParentFile().mkdirs();,if (outputFile != null ) boolean ok = outputFile.getParentFile().mkdirs();
PluginInfo.java,ok = outputFile.delete();,if (outputFile != null ) ok = outputFile.delete();
PluginInfo.java,ok = outputFile.createNewFile();,if (outputFile != null ) ok = outputFile.createNewFile();
PluginInfo.java,Attributes attributes = manifest.getMainAttributes();,if (manifest != null ) Attributes attributes = manifest.getMainAttributes();
UnreadFields.java,boolean b = withinAnonymousClass.matcher(getDottedClassName()).find();,if (withinAnonymousClass != null ) boolean b = withinAnonymousClass.matcher(getDottedClassName()).find();
Util.java,Constant catchType = constantPool.getConstant(catchBlock.getCatchType());,if (constantPool != null ) Constant catchType = constantPool.getConstant(catchBlock.getCatchType());
Noise.java,priority = hq.getPriority();,if (hq != null ) priority = hq.getPriority();
NoiseNullDeref.java,Instruction ins = loc.getHandle().getInstruction();,if (loc != null ) Instruction ins = loc.getHandle().getInstruction();
NoiseNullDeref.java,int position = location.getHandle().getPosition();,if (location != null ) int position = location.getHandle().getPosition();
NoiseNullDeref.java,ConstantPool constantPool = classContext.getJavaClass().getConstantPool();,if (classContext != null ) ConstantPool constantPool = classContext.getJavaClass().getConstantPool();
NoiseNullDeref.java,Code code = method.getCode();,if (method != null ) Code code = method.getCode();
ClearMarkersAction.java,IAdaptable adaptable = it.next();,if (it != null ) IAdaptable adaptable = it.next();
CreateDoPrivilegedBlockResolution.java,List<Expression> arguments = doPrivilegedInvocation.arguments();,if (doPrivilegedInvocation != null ) List<Expression> arguments = doPrivilegedInvocation.arguments();
CreateDoPrivilegedBlockResolution.java,List<Type> typeArguments = privilegedActionType.typeArguments();,if (privilegedActionType != null ) List<Type> typeArguments = privilegedActionType.typeArguments();
CreateDoPrivilegedBlockResolution.java,List<BodyDeclaration> bodyDeclarations = anonymousClassDeclaration.bodyDeclarations();,if (anonymousClassDeclaration != null ) List<BodyDeclaration> bodyDeclarations = anonymousClassDeclaration.bodyDeclarations();
CreateDoPrivilegedBlockResolution.java,List<Modifier> modifiers = methodDeclaration.modifiers();,if (methodDeclaration != null ) List<Modifier> modifiers = methodDeclaration.modifiers();
CreateDoPrivilegedBlockResolution.java,List<Statement> statements = methodBody.statements();,if (methodBody != null ) List<Statement> statements = methodBody.statements();
UseValueOfResolution.java,List<Expression> arguments = primitiveTypeCreation.arguments();,if (primitiveTypeCreation != null ) List<Expression> arguments = primitiveTypeCreation.arguments();
ASTUtil.java,List<ImportDeclaration> imports = importRewrite.getRewrittenList();,if (importRewrite != null ) List<ImportDeclaration> imports = importRewrite.getRewrittenList();
ASTUtil.java,List<VariableDeclarationFragment> fragments = field.fragments();,if (field != null ) List<VariableDeclarationFragment> fragments = field.fragments();
ZipCodeBaseFactory.java,long size = file.length();,if (file != null ) long size = file.length();
UnconditionalValueDerefAnalysis.java,ValueNumber vn = vnaFrame.getTopValue();,if (vnaFrame != null ) ValueNumber vn = vnaFrame.getTopValue();
UnconditionalValueDerefAnalysis.java,IsNullValue value = invFrame.getTopValue();,if (invFrame != null ) IsNullValue value = invFrame.getTopValue();
UnconditionalValueDerefAnalysis.java,ValueNumber vn = vnaFrame.getTopValue();,if (vnaFrame != null ) ValueNumber vn = vnaFrame.getTopValue();
FindUnrelatedTypesInGenericContainer.java,int typeArgument = nameToTypeArgumentIndex.get(invokedMethod.getName());,if (nameToTypeArgumentIndex != null ) int typeArgument = nameToTypeArgumentIndex.get(invokedMethod.getName());
FieldSummary.java,int length = mSignature.length();,if (mSignature != null ) int length = mSignature.length();
LoadXmlAction.java,String theFileName = theDialog.open();,if (theDialog != null ) String theFileName = theDialog.open();
LoadXmlAction.java,Object element = iter.next();,if (iter != null ) Object element = iter.next();
LoadXmlAction.java,IProject project = resource.getProject();,if (resource != null ) IProject project = resource.getProject();
LoadXmlAction.java,IEditorInput input = editor.getEditorInput();,if (editor != null ) IEditorInput input = editor.getEditorInput();
LoadXmlAction.java,selection = new StructuredSelection(editorInput.getFile());,if (StructuredSelection(editorInput != null ) selection = new StructuredSelection(editorInput.getFile());
MarkerShowDetailsAction.java,IMarker marker = (IMarker) iter.next();,if (iter != null ) IMarker marker = (IMarker) iter.next();
BugContentProvider.java,GroupType type = group.getType();,if (group != null ) GroupType type = group.getType();
BugContentProvider.java,children = group.getChildren();,if (group != null ) children = group.getChildren();
BugContentProvider.java,BugGroup group = (BugGroup) bugGroup.getParent();,if (bugGroup != null ) BugGroup group = (BugGroup) bugGroup.getParent();
BugGroup.java,parentGroup = (BugGroup) parentGroup.getParent();,if (parentGroup != null ) parentGroup = (BugGroup) parentGroup.getParent();
BugContentProvider.java,BugGroup group = (BugGroup) bugGroup.getParent();,if (bugGroup != null ) BugGroup group = (BugGroup) bugGroup.getParent();
BugContentProvider.java,final IPreferenceStore store = FindbugsPlugin.getDefault().getPreferenceStore();,if (FindbugsPlugin != null ) final IPreferenceStore store = FindbugsPlugin.getDefault().getPreferenceStore();
BugContentProvider.java,Object parent = group.getParent();,if (group != null ) Object parent = group.getParent();
BugContentProvider.java,currParent = (BugGroup) currParent.getParent();,if (currParent != null ) currParent = (BugGroup) currParent.getParent();
BugContentProvider.java,Object parent = group.getParent();,if (group != null ) Object parent = group.getParent();
BugContentProvider.java,Object[] rootObjects = rootElement.getChildren();,if (rootElement != null ) Object[] rootObjects = rootElement.getChildren();
BugContentProvider.java,Iterator<GroupType> iterator = grouping.iterator();,if (grouping != null ) Iterator<GroupType> iterator = grouping.iterator();
BugContentProvider.java,rootObjects = children.toArray();,if (children != null ) rootObjects = children.toArray();
TypeFrameModelingVisitor.java,instanceOfValueNumber = vnaFrame.getTopValue();,if (vnaFrame != null ) instanceOfValueNumber = vnaFrame.getTopValue();
TypeFrameModelingVisitor.java,instanceOfValueNumber = vnaFrame.getTopValue();,if (vnaFrame != null ) instanceOfValueNumber = vnaFrame.getTopValue();
BugContentProvider.java,children = group.getChildren();,if (group != null ) children = group.getChildren();
BugContentProvider.java,ViewerFilter[] filters = viewer.getFilters();,if (viewer != null ) ViewerFilter[] filters = viewer.getFilters();
BugLabelProvider.java,BugContentProvider provider = BugContentProvider.getProvider(config.getService());,if (BugContentProvider != null ) BugContentProvider provider = BugContentProvider.getProvider(config.getService());
ExportWizardPage.java,String id = result.getAbbrev();,if (result != null ) String id = result.getAbbrev();
FindNullDeref.java,LineNumberTable table = method.getLineNumberTable();,if (method != null ) LineNumberTable table = method.getLineNumberTable();
IncompatibleTypes.java,ClassDescriptor lhsDescriptor = DescriptorFactory.createClassDescriptorFromDottedClassName(lhsType.getClassName());,if (DescriptorFactory != null ) ClassDescriptor lhsDescriptor = DescriptorFactory.createClassDescriptorFromDottedClassName(lhsType.getClassName());
IncompatibleTypes.java,ClassDescriptor rhsDescriptor = DescriptorFactory.createClassDescriptorFromDottedClassName(rhsType.getClassName());,if (DescriptorFactory != null ) ClassDescriptor rhsDescriptor = DescriptorFactory.createClassDescriptorFromDottedClassName(rhsType.getClassName());
MarkerUtil.java,Object next = iter.next();,if (iter != null ) Object next = iter.next();
MarkerUtil.java,Object next = sSelection.getFirstElement();,if (sSelection != null ) Object next = sSelection.getFirstElement();
BugLinkHelper.java,resource = markerFromSelection.getResource();,if (markerFromSelection != null ) resource = markerFromSelection.getResource();
BugLinkHelper.java,Object element = selection.getFirstElement();,if (selection != null ) Object element = selection.getFirstElement();
BugLinkHelper.java,IEditorPart activeEditor = page.getActiveEditor();,if (page != null ) IEditorPart activeEditor = page.getActiveEditor();
BugLinkHelper.java,IEditorInput editorInput = activeEditor.getEditorInput();,if (activeEditor != null ) IEditorInput editorInput = activeEditor.getEditorInput();
BugLinkHelper.java,IEditorPart activeEditor = activePage.getActiveEditor();,if (activePage != null ) IEditorPart activeEditor = activePage.getActiveEditor();
ProjectDeltaVisitor.java,IResource resource = delta.getResource();,if (delta != null ) IResource resource = delta.getResource();
ProjectDeltaVisitor.java,int kind = delta.getKind();,if (delta != null ) int kind = delta.getKind();
ProjectDeltaVisitor.java,int flags = delta.getFlags();,if (delta != null ) int flags = delta.getFlags();
ResourceChangeListener.java,IResourceDelta delta = event.getDelta();,if (event != null ) IResourceDelta delta = event.getDelta();
ResourceChangeListener.java,projectsDelta = visitor.getProjectsDelta();,if (visitor != null ) projectsDelta = visitor.getProjectsDelta();
PruneUnconditionalExceptionThrowerEdges.java,boolean isUnconditionalThrower = xMethod.isUnconditionalThrower() && !xMethod.isUnsupported();,if (!xMethod != null ) boolean isUnconditionalThrower = xMethod.isUnconditionalThrower() && !xMethod.isUnsupported();
CFGFactory.java,changed = changed || pruner.wasCFGModified();,if (pruner != null ) changed = changed || pruner.wasCFGModified();
FindbugsPlugin.java,prefs = UserPreferences.createDefaultUserPreferences();,if (UserPreferences != null ) prefs = UserPreferences.createDefaultUserPreferences();
GoUpAction.java,CommonViewer viewer = navigator.getCommonViewer();,if (navigator != null ) CommonViewer viewer = navigator.getCommonViewer();
GoUpAction.java,Object input = viewer.getInput();,if (viewer != null ) Object input = viewer.getInput();
GoUpAction.java,Object data = group.getParent();,if (group != null ) Object data = group.getParent();
FindBugsWorker.java,SortedBugCollection newBugCollection = bugReporter.getBugCollection();,if (bugReporter != null ) SortedBugCollection newBugCollection = bugReporter.getBugCollection();
FindbugsPropertyPage.java,this.origUserPreferences = UserPreferences.createDefaultUserPreferences();,if (UserPreferences != null ) this.origUserPreferences = UserPreferences.createDefaultUserPreferences();
MarkerReporter.java,long seqNum = bug.getFirstVersion();,if (bug != null ) long seqNum = bug.getFirstVersion();
MarkerReporter.java,String uniqueId = bug.getInstanceHash();,if (bug != null ) String uniqueId = bug.getInstanceHash();
MarkerUtil.java,ClassAnnotation primaryClass = bug.getPrimaryClass();,if (bug != null ) ClassAnnotation primaryClass = bug.getPrimaryClass();
MarkerUtil.java,className = primaryClass.getClassName();,if (primaryClass != null ) className = primaryClass.getClassName();
MarkerUtil.java,packageName = primaryClass.getPackageName();,if (primaryClass != null ) packageName = primaryClass.getPackageName();
MarkerUtil.java,startLine = bug.getPrimarySourceLineAnnotation().getStartLine();,if (bug != null ) startLine = bug.getPrimarySourceLineAnnotation().getStartLine();
MarkerUtil.java,FieldAnnotation primaryField = bug.getPrimaryField();,if (bug != null ) FieldAnnotation primaryField = bug.getPrimaryField();
MarkerUtil.java,fieldLine = primaryField.getSourceLines().getStartLine();,if (primaryField != null ) fieldLine = primaryField.getSourceLines().getStartLine();
MarkerUtil.java,Iterator<BugAnnotation> annotationIter = bug.annotationIterator();,if (bug != null ) Iterator<BugAnnotation> annotationIter = bug.annotationIterator();
MarkerUtil.java,BugAnnotation theAnnotation = annotationIter.next();,if (annotationIter != null ) BugAnnotation theAnnotation = annotationIter.next();
MarkerUtil.java,theAnnotation = annotationIter.next();,if (annotationIter != null ) theAnnotation = annotationIter.next();
MarkerUtil.java,primarySourceLineAnnotation = bug.getPrimarySourceLineAnnotation();,if (bug != null ) primarySourceLineAnnotation = bug.getPrimarySourceLineAnnotation();
MarkerUtil.java,sourceFileStr = res.getRawLocation().toOSString();,if (res != null ) sourceFileStr = res.getRawLocation().toOSString();
MarkerUtil.java,IMarker[] children = group.getChildren();,if (group != null ) IMarker[] children = group.getChildren();
Reporter.java,this.userPrefs = FindbugsPlugin.getUserPreferences(project.getProject());,if (FindbugsPlugin != null ) this.userPrefs = FindbugsPlugin.getUserPreferences(project.getProject());
Reporter.java,this.userPrefs = UserPreferences.createDefaultUserPreferences();,if (UserPreferences != null ) this.userPrefs = UserPreferences.createDefaultUserPreferences();
UserAnnotationsView.java,viewPart = AbstractFindbugsView.showUserAnnotationView();,if (AbstractFindbugsView != null ) viewPart = AbstractFindbugsView.showUserAnnotationView();
BugContentProvider.java,IProject project = resource.getProject();,if (resource != null ) IProject project = resource.getProject();
BugContentProvider.java,IAdaptable[] elements = workingSet.getElements();,if (workingSet != null ) IAdaptable[] elements = workingSet.getElements();
BugContentProvider.java,IProject[] projects = workspaceRoot.getProjects();,if (workspaceRoot != null ) IProject[] projects = workspaceRoot.getProjects();
BugContentProvider.java,IResourceDelta delta = event.getDelta();,if (event != null ) IResourceDelta delta = event.getDelta();
BugContentProvider.java,IResource resource = delta.getResource();,if (delta != null ) IResource resource = delta.getResource();
BugContentProvider.java,int kind = delta.getKind();,if (delta != null ) int kind = delta.getKind();
BugContentProvider.java,int flags = delta.getFlags();,if (delta != null ) int flags = delta.getFlags();
BugContentProvider.java,project = resource.getProject();,if (resource != null ) project = resource.getProject();
BugContentProvider.java,project = resource.getProject();,if (resource != null ) project = resource.getProject();
BugContentProvider.java,final IResource resource = resourcesToRefresh.poll();,if (resourcesToRefresh != null ) final IResource resource = resourcesToRefresh.poll();
BugLabelProvider.java,IMarker firstElement = group.getFirstElement();,if (group != null ) IMarker firstElement = group.getFirstElement();
BugLinkHelper.java,IWorkbenchPart activePart = page.getActivePart();,if (page != null ) IWorkbenchPart activePart = page.getActivePart();
BugLinkHelper.java,IResource resource = entry.getKey();,if (entry != null ) IResource resource = entry.getKey();
BugLinkHelper.java,IResource resource = marker.getResource();,if (marker != null ) IResource resource = marker.getResource();
Update.java,BugInstance newBug = (BugInstance) bug.clone();,if (bug != null ) BugInstance newBug = (BugInstance) bug.clone();
Update.java,BugInstance newBug = (BugInstance) bug.clone();,if (bug != null ) BugInstance newBug = (BugInstance) bug.clone();
FindUnrelatedTypesInGenericContainer.java,Instruction nextIns = next.getInstruction();,if (next != null ) Instruction nextIns = next.getInstruction();
IncompatibleTypes.java,ClassDescriptor lhsDescriptor = DescriptorFactory.createClassDescriptorFromDottedClassName(lhsType.getClassName());,if (DescriptorFactory != null ) ClassDescriptor lhsDescriptor = DescriptorFactory.createClassDescriptorFromDottedClassName(lhsType.getClassName());
IncompatibleTypes.java,ClassDescriptor rhsDescriptor = DescriptorFactory.createClassDescriptorFromDottedClassName(rhsType.getClassName());,if (DescriptorFactory != null ) ClassDescriptor rhsDescriptor = DescriptorFactory.createClassDescriptorFromDottedClassName(rhsType.getClassName());
FindUnrelatedTypesInGenericContainer.java,int typeArgument = nameToTypeArgumentIndex.get(m.getName());,if (nameToTypeArgumentIndex != null ) int typeArgument = nameToTypeArgumentIndex.get(m.getName());
IncompatibleTypes.java,IAnalysisCache cache = Global.getAnalysisCache();,if (Global != null ) IAnalysisCache cache = Global.getAnalysisCache();
OpcodeStack.java,dims = dbc.getIntConstant();,if (dbc != null ) dims = dbc.getIntConstant();
FieldSummary.java,Type mergeType = Type.getType(mergeValue.getSignature());,if (Type != null ) Type mergeType = Type.getType(mergeValue.getSignature());
OpcodeStack.java,signature = dbc.getClassConstantOperand();,if (dbc != null ) signature = dbc.getClassConstantOperand();
CopyMarkerDetailsAction.java,Object next = iter.next();,if (iter != null ) Object next = iter.next();
CopyMarkerDetailsAction.java,IMarker[] children = group.getChildren();,if (group != null ) IMarker[] children = group.getChildren();
CopyMarkerDetailsAction.java,cb = new Clipboard(Display.getDefault());,if (Clipboard(Display != null ) cb = new Clipboard(Display.getDefault());
MarkerUtil.java,startLine = bug.getPrimarySourceLineAnnotation().getStartLine();,if (bug != null ) startLine = bug.getPrimarySourceLineAnnotation().getStartLine();
MarkerUtil.java,ISourceRange sourceRange = ifield.getSourceRange();,if (ifield != null ) ISourceRange sourceRange = ifield.getSourceRange();
MarkerUtil.java,ISourceRange range = source.getSourceRange();,if (source != null ) ISourceRange range = source.getSourceRange();
TypeFrameModelingVisitor.java,FieldStoreType property = database.getProperty(xfield.getFieldDescriptor());,if (database != null ) FieldStoreType property = database.getProperty(xfield.getFieldDescriptor());
TypeFrameModelingVisitor.java,loadType = Type.getType(summary.getSignature());,if (Type != null ) loadType = Type.getType(summary.getSignature());
ClassParser.java,interfaceDescriptorList[i] = getClassDescriptor(in.readUnsignedShort());,if (getClassDescriptor(in != null ) interfaceDescriptorList[i] = getClassDescriptor(in.readUnsignedShort());
IncompatibleTypes.java,IAnalysisCache cache = Global.getAnalysisCache();,if (Global != null ) IAnalysisCache cache = Global.getAnalysisCache();
IncompatibleTypes.java,AnalysisContext analysisContext = AnalysisContext.currentAnalysisContext();,if (AnalysisContext != null ) AnalysisContext analysisContext = AnalysisContext.currentAnalysisContext();
FindUnrelatedTypesInGenericContainer.java,"IncompatibleTypes result = compareTypes(parmGeneric.getObjectType(), argGeneric.getObjectType());","if (argGeneric != null ) IncompatibleTypes result = compareTypes(parmGeneric.getObjectType(), argGeneric.getObjectType());"
FindUnrelatedTypesInGenericContainer.java,int p = parmGeneric.getNumParameters();,if (parmGeneric != null ) int p = parmGeneric.getNumParameters();
FindUnrelatedTypesInGenericContainer.java,Type operandType = frame.getTopValue();,if (frame != null ) Type operandType = frame.getTopValue();
MethodGenFactory.java,int codeLength = method.getCode().getLength();,if (method != null ) int codeLength = method.getCode().getLength();
InstructionActionCache.java,actionList = Collections.emptyList();,if (Collections != null ) actionList = Collections.emptyList();
InstructionActionCache.java,actionList = Collections.emptyList();,if (Collections != null ) actionList = Collections.emptyList();
InstructionActionCache.java,actionList = Collections.emptyList();,if (Collections != null ) actionList = Collections.emptyList();
FindUnsatisfiedObligation.java,IAnalysisCache analysisCache = Global.getAnalysisCache();,if (Global != null ) IAnalysisCache analysisCache = Global.getAnalysisCache();
FindUnrelatedTypesInGenericContainer.java,ClassDescriptor interfaceOfInterest = nameToInterfaceMap.get(m.getName());,if (nameToInterfaceMap != null ) ClassDescriptor interfaceOfInterest = nameToInterfaceMap.get(m.getName());
FindUnrelatedTypesInGenericContainer.java,int typeArgument = nameToTypeArgumentIndex.get(m.getName());,if (nameToTypeArgumentIndex != null ) int typeArgument = nameToTypeArgumentIndex.get(m.getName());
FindUnrelatedTypesInGenericContainer.java,Type operandType = frame.getTopValue();,if (frame != null ) Type operandType = frame.getTopValue();
FindUnrelatedTypesInGenericContainer.java,int priority = matchResult.getPriority();,if (matchResult != null ) int priority = matchResult.getPriority();
FindUnrelatedTypesInGenericContainer.java,ClassDescriptor expectedClassDescriptor = DescriptorFactory.createClassOrObjectDescriptorFromSignature(parmType.getSignature());,if (DescriptorFactory != null ) ClassDescriptor expectedClassDescriptor = DescriptorFactory.createClassOrObjectDescriptorFromSignature(parmType.getSignature());
FindUnrelatedTypesInGenericContainer.java,ClassDescriptor actualClassDescriptor = DescriptorFactory.createClassOrObjectDescriptorFromSignature(argType.getSignature());,if (DescriptorFactory != null ) ClassDescriptor actualClassDescriptor = DescriptorFactory.createClassOrObjectDescriptorFromSignature(argType.getSignature());
FindUnrelatedTypesInGenericContainer.java,ClassSummary classSummary = AnalysisContext.currentAnalysisContext().getClassSummary();,if (AnalysisContext != null ) ClassSummary classSummary = AnalysisContext.currentAnalysisContext().getClassSummary();
DetectorFactoryCollection.java,String homeDir = FindBugs.getHome();,if (FindBugs != null ) String homeDir = FindBugs.getHome();
FindUnrelatedTypesInGenericContainer.java,ClassDescriptor expectedClassDescriptor = DescriptorFactory.createClassDescriptorFromSignature(parmType.getSignature());,if (DescriptorFactory != null ) ClassDescriptor expectedClassDescriptor = DescriptorFactory.createClassDescriptorFromSignature(parmType.getSignature());
FindUnrelatedTypesInGenericContainer.java,ClassDescriptor actualClassDescriptor = DescriptorFactory.createClassDescriptorFromSignature(argType.getSignature());,if (DescriptorFactory != null ) ClassDescriptor actualClassDescriptor = DescriptorFactory.createClassDescriptorFromSignature(argType.getSignature());
BugInstance.java,ClassSummary classSummary = AnalysisContext.currentAnalysisContext().getClassSummary();,if (AnalysisContext != null ) ClassSummary classSummary = AnalysisContext.currentAnalysisContext().getClassSummary();
FindUnrelatedTypesInGenericContainer.java,ClassDescriptor actualClassDescriptor =DescriptorFactory.createClassDescriptorFromSignature(argType.getSignature());,if (=DescriptorFactory != null ) ClassDescriptor actualClassDescriptor =DescriptorFactory.createClassDescriptorFromSignature(argType.getSignature());
Hierarchy2.java,AnalysisContext analysisContext = AnalysisContext.currentAnalysisContext();,if (AnalysisContext != null ) AnalysisContext analysisContext = AnalysisContext.currentAnalysisContext();
TypeFrameModelingVisitor.java,instanceOfValueNumber = vnaFrame.getTopValue();,if (vnaFrame != null ) instanceOfValueNumber = vnaFrame.getTopValue();
IncompatibleTypes.java,ClassDescriptor superclassDescriptor = xClass.getSuperclassDescriptor();,if (xClass != null ) ClassDescriptor superclassDescriptor = xClass.getSuperclassDescriptor();
IncompatibleTypes.java,ClassDescriptor lhsDescriptor = DescriptorFactory.createClassDescriptorFromDottedClassName(lhsType.getClassName());,if (DescriptorFactory != null ) ClassDescriptor lhsDescriptor = DescriptorFactory.createClassDescriptorFromDottedClassName(lhsType.getClassName());
IncompatibleTypes.java,ClassDescriptor rhsDescriptor = DescriptorFactory.createClassDescriptorFromDottedClassName(rhsType.getClassName());,if (DescriptorFactory != null ) ClassDescriptor rhsDescriptor = DescriptorFactory.createClassDescriptorFromDottedClassName(rhsType.getClassName());
IncompatibleTypes.java,IAnalysisCache cache = Global.getAnalysisCache();,if (Global != null ) IAnalysisCache cache = Global.getAnalysisCache();
IncompatibleTypes.java,String lhsClassName = lhsEquals.getClassName();,if (lhsEquals != null ) String lhsClassName = lhsEquals.getClassName();
TypeFrameModelingVisitor.java,lastOpcode = ins.getOpcode();,if (ins != null ) lastOpcode = ins.getOpcode();
ConfusionBetweenInheritedAndOuterMethod.java,String targetPackage = invokedMethod.getPackageName();,if (invokedMethod != null ) String targetPackage = invokedMethod.getPackageName();
ConfusionBetweenInheritedAndOuterMethod.java,String alternativePackage = alternativeMethod.getPackageName();,if (alternativeMethod != null ) String alternativePackage = alternativeMethod.getPackageName();
FindPuzzlers.java,int flags = xm.getAccessFlags();,if (xm != null ) int flags = xm.getAccessFlags();
ValueNumberFrameModelingVisitor.java,value = factory.createFreshValue();,if (factory != null ) value = factory.createFreshValue();
UselessSubclassMethod.java,argTypes = Type.getArgumentTypes(this.getMethodSig());,if (Type != null ) argTypes = Type.getArgumentTypes(this.getMethodSig());
UselessSubclassMethod.java,String signature = argTypes[curParm++].getSignature();,if (argTypes[curParm++] != null ) String signature = argTypes[curParm++].getSignature();
UselessSubclassMethod.java,Type returnType = getMethod().getReturnType();,if (getMethod() != null ) Type returnType = getMethod().getReturnType();
UselessSubclassMethod.java,subArgs = Type.getArgumentTypes(subclassMethod.getSignature());,if (Type != null ) subArgs = Type.getArgumentTypes(subclassMethod.getSignature());
UselessSubclassMethod.java,Type[] superArgs = Type.getArgumentTypes(m.getSignature());,if (Type != null ) Type[] superArgs = Type.getArgumentTypes(m.getSignature());
FilesystemCodeBaseLocator.java,pathName = file.getCanonicalPath();,if (file != null ) pathName = file.getCanonicalPath();
FilesystemCodeBaseLocator.java,pathName = new File(pathName).getCanonicalPath();,if (File(pathName) != null ) pathName = new File(pathName).getCanonicalPath();
RejarClassesForAnalysis.java,List<File> inputZipFiles = new ArrayList<File>(fileList.size());,if (ArrayList<File>(fileList != null ) List<File> inputZipFiles = new ArrayList<File>(fileList.size());
RejarClassesForAnalysis.java,List<File> auxZipFiles = new ArrayList<File>(fileList.size());,if (ArrayList<File>(fileList != null ) List<File> auxZipFiles = new ArrayList<File>(fileList.size());
RejarClassesForAnalysis.java,String name = ze.getName();,if (ze != null ) String name = ze.getName();
AnalysisContext.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
FindRefComparison.java,String methodName = method.getName();,if (method != null ) String methodName = method.getName();
FindBugsWorker.java,IPath outputLocation = classpathEntry.getOutputLocation();,if (classpathEntry != null ) IPath outputLocation = classpathEntry.getOutputLocation();
PDEClassPathGenerator.java,String location = cpe.getPath().toOSString();,if (cpe != null ) String location = cpe.getPath().toOSString();
FindDeadLocalStores.java,String sourceFile = javaClass.getSourceFileName();,if (javaClass != null ) String sourceFile = javaClass.getSourceFileName();
Analysis.java,InterproceduralCallGraphVertex called = i.next().getTarget();,if (i != null ) InterproceduralCallGraphVertex called = i.next().getTarget();
BugInstance.java,ConstantPoolGen cpg = methodGen.getConstantPool();,if (methodGen != null ) ConstantPoolGen cpg = methodGen.getConstantPool();
FileBugHash.java,SourceLineAnnotation source = bug.getPrimarySourceLineAnnotation();,if (bug != null ) SourceLineAnnotation source = bug.getPrimarySourceLineAnnotation();
FileBugHash.java,ClassAnnotation classAnnotation = bug.getPrimaryClass();,if (bug != null ) ClassAnnotation classAnnotation = bug.getPrimaryClass();
FileBugHash.java,MethodAnnotation methodAnnotation = bug.getPrimaryMethod();,if (bug != null ) MethodAnnotation methodAnnotation = bug.getPrimaryMethod();
FileBugHash.java,FieldAnnotation fieldAnnotation = bug.getPrimaryField();,if (bug != null ) FieldAnnotation fieldAnnotation = bug.getPrimaryField();
FileBugHash.java,source = bug.getPrimarySourceLineAnnotation();,if (bug != null ) source = bug.getPrimarySourceLineAnnotation();
FindUnrelatedTypesInGenericContainer.java,String className = ref.getClass(cpg.getConstantPool());,if (ref != null ) String className = ref.getClass(cpg.getConstantPool());
FindUnrelatedTypesInGenericContainer.java,String methodName = refNT.getName(cpg.getConstantPool());,if (refNT != null ) String methodName = refNT.getName(cpg.getConstantPool());
FindUnrelatedTypesInGenericContainer.java,String methodSignature = refNT.getSignature(cpg.getConstantPool());,if (refNT != null ) String methodSignature = refNT.getSignature(cpg.getConstantPool());
MarkerUtil.java,tokenID = scanner.getNextToken();,if (scanner != null ) tokenID = scanner.getNextToken();
Driver.java,float fontSize = commandLine.getFontSize();,if (commandLine != null ) float fontSize = commandLine.getFontSize();
Driver.java,fontSize = GUISaveState.getInstance().getFontSize();,if (GUISaveState != null ) fontSize = GUISaveState.getInstance().getFontSize();
Project.java,xr = XMLReaderFactory.createXMLReader();,if (XMLReaderFactory != null ) xr = XMLReaderFactory.createXMLReader();
ObligationAnalysis.java,BasicBlock sourceBlock = edge.getSource();,if (edge != null ) BasicBlock sourceBlock = edge.getSource();
ObligationAnalysis.java,InstructionHandle handle = sourceBlock.getExceptionThrower();,if (sourceBlock != null ) InstructionHandle handle = sourceBlock.getExceptionThrower();
FindUnsatisfiedObligation.java,BasicBlock sourceBlock = edge.getSource();,if (edge != null ) BasicBlock sourceBlock = edge.getSource();
FindUnsatisfiedObligation.java,InstructionHandle last = sourceBlock.getLastInstruction();,if (sourceBlock != null ) InstructionHandle last = sourceBlock.getLastInstruction();
FindUnsatisfiedObligation.java,short opcode = last.getInstruction().getOpcode();,if (last != null ) short opcode = last.getInstruction().getOpcode();
FindUnsatisfiedObligation.java,type = typeFrame.getTopValue();,if (typeFrame != null ) type = typeFrame.getTopValue();
FindUnsatisfiedObligation.java,BasicBlock sourceBlock = edge.getSource();,if (edge != null ) BasicBlock sourceBlock = edge.getSource();
FindUnsatisfiedObligation.java,InstructionHandle handle = sourceBlock.getExceptionThrower();,if (sourceBlock != null ) InstructionHandle handle = sourceBlock.getExceptionThrower();
ObligationAnalysis.java,"Collection<ObligationPolicyDatabaseAction> actionList = actionCache.getActions(handle, methodGen.getConstantPool());","if (methodGen != null ) Collection<ObligationPolicyDatabaseAction> actionList = actionCache.getActions(handle, methodGen.getConstantPool());"
BuildObligationPolicyDatabase.java,Type returnType = Type.getReturnType(xmethod.getSignature());,if (Type != null ) Type returnType = Type.getReturnType(xmethod.getSignature());
BuildObligationPolicyDatabase.java,StringMatcher nameMatcher = new ExactStringMatcher(xmethod.getName());,if (ExactStringMatcher(xmethod != null ) StringMatcher nameMatcher = new ExactStringMatcher(xmethod.getName());
BuildObligationPolicyDatabase.java,StringMatcher signatureMatcher = new ExactStringMatcher(xmethod.getSignature());,if (ExactStringMatcher(xmethod != null ) StringMatcher signatureMatcher = new ExactStringMatcher(xmethod.getSignature());
MatchObligationParametersEntry.java,IAnalysisCache analysisCache = Global.getAnalysisCache();,if (Global != null ) IAnalysisCache analysisCache = Global.getAnalysisCache();
BuildObligationPolicyDatabase.java,SplitCamelCaseIdentifier splitter = new SplitCamelCaseIdentifier(xmethod.getName());,if (SplitCamelCaseIdentifier(xmethod != null ) SplitCamelCaseIdentifier splitter = new SplitCamelCaseIdentifier(xmethod.getName());
BuildObligationPolicyDatabase.java,String sig = xmethod.getSignature();,if (xmethod != null ) String sig = xmethod.getSignature();
SortedBugCollection.java,String hash = bugInstance.getInstanceHash();,if (bugInstance != null ) String hash = bugInstance.getInstanceHash();
SortedBugCollection.java,hash = bugInstance.getInstanceKey();,if (bugInstance != null ) hash = bugInstance.getInstanceKey();
FindUnsatisfiedObligation.java,Path path = state.getPath();,if (state != null ) Path path = state.getPath();
FindUnsatisfiedObligation.java,StateSet factAtExit = dataflow.getStartFact(cfg.getExit());,if (dataflow != null ) StateSet factAtExit = dataflow.getStartFact(cfg.getExit());
FindUnsatisfiedObligation.java,Path path = state.getPath();,if (state != null ) Path path = state.getPath();
FindUnsatisfiedObligation.java,Instruction ins = loc.getHandle().getInstruction();,if (loc != null ) Instruction ins = loc.getHandle().getInstruction();
FindUnsatisfiedObligation.java,i = basicBlock.instructionIterator();,if (basicBlock != null ) i = basicBlock.instructionIterator();
BuildObligationPolicyDatabase.java,ObligationFactory factory = database.getFactory();,if (database != null ) ObligationFactory factory = database.getFactory();
FindUnsatisfiedObligation.java,List<State> stateList = entry.getValue();,if (entry != null ) List<State> stateList = entry.getValue();
ObligationPolicyDatabase.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
ObligationAnalysis.java,BasicBlock sourceBlock = edge.getSource();,if (edge != null ) BasicBlock sourceBlock = edge.getSource();
ObligationAnalysis.java,InstructionHandle handle = sourceBlock.getExceptionThrower();,if (sourceBlock != null ) InstructionHandle handle = sourceBlock.getExceptionThrower();
ObligationAnalysis.java,BasicBlock sourceBlock = edge.getSource();,if (edge != null ) BasicBlock sourceBlock = edge.getSource();
ObligationAnalysis.java,InstructionHandle last = sourceBlock.getLastInstruction();,if (sourceBlock != null ) InstructionHandle last = sourceBlock.getLastInstruction();
ObligationAnalysis.java,short opcode = last.getInstruction().getOpcode();,if (last != null ) short opcode = last.getInstruction().getOpcode();
ObligationAnalysis.java,type = typeFrame.getTopValue();,if (typeFrame != null ) type = typeFrame.getTopValue();
ObligationAnalysis.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
ObligationAnalysis.java,ConstantPoolGen cpg = methodGen.getConstantPool();,if (methodGen != null ) ConstantPoolGen cpg = methodGen.getConstantPool();
FindUnsatisfiedObligation.java,IAnalysisCache analysisCache = Global.getAnalysisCache();,if (Global != null ) IAnalysisCache analysisCache = Global.getAnalysisCache();
ObligationAnalysis.java,State dup = otherState.duplicate();,if (otherState != null ) State dup = otherState.duplicate();
ObligationAnalysis.java,State matchingState = inputFact.getStateWithObligationSet(state.getObligationSet());,if (inputFact != null ) State matchingState = inputFact.getStateWithObligationSet(state.getObligationSet());
CFGPrinter.java,JavaClass cls = new ClassParser(className).parse();,if (ClassParser(className) != null ) JavaClass cls = new ClassParser(className).parse();
CFGPrinter.java,Method[] methods = cls.getMethods();,if (cls != null ) Method[] methods = cls.getMethods();
DataflowTestDriver.java,JavaClass jclass = new RepositoryClassParser(filename).parse();,if (RepositoryClassParser(filename) != null ) JavaClass jclass = new RepositoryClassParser(filename).parse();
DataflowTestDriver.java,Method[] methods = jclass.getMethods();,if (jclass != null ) Method[] methods = jclass.getMethods();
LegacyAnalysisContext.java,URLClassPathRepository repos = (URLClassPathRepository) Repository.getRepository();,if (Repository != null ) URLClassPathRepository repos = (URLClassPathRepository) Repository.getRepository();
LegacyAnalysisContext.java,innerClassAccessMap = InnerClassAccessMap.create();,if (InnerClassAccessMap != null ) innerClassAccessMap = InnerClassAccessMap.create();
ResourceValueAnalysisTestDriver.java,JavaClass jclass = new ClassParser(classFile).parse();,if (ClassParser(classFile) != null ) JavaClass jclass = new ClassParser(classFile).parse();
ResourceValueAnalysisTestDriver.java,Method[] methodList = jclass.getMethods();,if (jclass != null ) Method[] methodList = jclass.getMethods();
ResourceValueAnalysisTestDriver.java,BasicBlock basicBlock = ii.next();,if (ii != null ) BasicBlock basicBlock = ii.next();
FindUnreleasedLock.java,RepositoryLookupFailureCallback lookupFailureCallback = classContext.getLookupFailureCallback();,if (classContext != null ) RepositoryLookupFailureCallback lookupFailureCallback = classContext.getLookupFailureCallback();
AnnotationDatabase.java,subtypes = AnalysisContext.currentAnalysisContext().getSubtypes();,if (AnalysisContext != null ) subtypes = AnalysisContext.currentAnalysisContext().getSubtypes();
InheritanceUnsafeGetResource.java,Subtypes subtypes = AnalysisContext.currentAnalysisContext().getSubtypes();,if (AnalysisContext != null ) Subtypes subtypes = AnalysisContext.currentAnalysisContext().getSubtypes();
InheritanceUnsafeGetResource.java,String myPackagename = getThisClass().getPackageName();,if (getThisClass() != null ) String myPackagename = getThisClass().getPackageName();
FindUnsatisfiedObligation.java,Profiler profiler = Profiler.getInstance();,if (Profiler != null ) Profiler profiler = Profiler.getInstance();
ObligationAnalysis.java,type = typeFrame.getTopValue();,if (typeFrame != null ) type = typeFrame.getTopValue();
ObligationAnalysis.java,fact = fact.duplicate();,if (fact != null ) fact = fact.duplicate();
ObligationAnalysis.java,fact = fact.duplicate();,if (fact != null ) fact = fact.duplicate();
FindUnsatisfiedObligation.java,Method[] methodList = classContext.getJavaClass().getMethods();,if (classContext != null ) Method[] methodList = classContext.getJavaClass().getMethods();
ObligationAnalysis.java,type = typeFrame.getTopValue();,if (typeFrame != null ) type = typeFrame.getTopValue();
DiscoverSourceDirectories.java,IClassFactory factory = ClassFactory.instance();,if (ClassFactory != null ) IClassFactory factory = ClassFactory.instance();
DetectorFactoryCollection.java,String t = tok.nextToken();,if (tok != null ) String t = tok.nextToken();
Driver.java,theme = UIManager.getSystemLookAndFeelClassName();,if (UIManager != null ) theme = UIManager.getSystemLookAndFeelClassName();
FindBugs.java,URLConnection u = urlToParse.openConnection();,if (urlToParse != null ) URLConnection u = urlToParse.openConnection();
FindBugs.java,URLConnection u = url.openConnection();,if (url != null ) URLConnection u = url.openConnection();
FindBugs.java,this.zipInputStream = new ZipInputStream(u.getInputStream());,if (ZipInputStream(u != null ) this.zipInputStream = new ZipInputStream(u.getInputStream());
FindBugs.java,ZipEntry zipEntry = zipInputStream.getNextEntry();,if (zipInputStream != null ) ZipEntry zipEntry = zipInputStream.getNextEntry();
FindBugs.java,String entryName = zipEntry.getName();,if (zipEntry != null ) String entryName = zipEntry.getName();
FindBugs.java,long modTime = zipEntry.getTime();,if (zipEntry != null ) long modTime = zipEntry.getTime();
FindBugs.java,String fileName = file.getName();,if (file != null ) String fileName = file.getName();
FindBugs.java,this.rfsIter = rfs.fileNameIterator();,if (rfs != null ) this.rfsIter = rfs.fileNameIterator();
FindBugs.java,fileName = rfsIter.next();,if (rfsIter != null ) fileName = rfsIter.next();
FindBugs.java,long modTime = new File(fileName).lastModified();,if (File(fileName) != null ) long modTime = new File(fileName).lastModified();
FindBugs.java,this.project = project.duplicate();,if (project != null ) this.project = project.duplicate();
FindBugs.java,ArchiveWorkListItem item = archiveWorkList.removeFirst();,if (archiveWorkList != null ) ArchiveWorkListItem item = archiveWorkList.removeFirst();
FindBugs.java,Iterator<AnalysisPass> i = executionPlan.passIterator();,if (executionPlan != null ) Iterator<AnalysisPass> i = executionPlan.passIterator();
FindBugs.java,Set<JavaClass> allReferencedClasses = analysisContext.getSubtypes().getAllClasses();,if (analysisContext != null ) Set<JavaClass> allReferencedClasses = analysisContext.getSubtypes().getAllClasses();
FindBugs.java,ArrayList<String> listOfReferencedClasses = new ArrayList<String>(allReferencedClasses.size());,if (ArrayList<String>(allReferencedClasses != null ) ArrayList<String> listOfReferencedClasses = new ArrayList<String>(allReferencedClasses.size());
FindBugs.java,userPreferences = UserPreferences.createDefaultUserPreferences();,if (UserPreferences != null ) userPreferences = UserPreferences.createDefaultUserPreferences();
FindBugs.java,String systemClassPath = ClassPath.getClassPath();,if (ClassPath != null ) String systemClassPath = ClassPath.getClassPath();
FindBugs.java,String entry = tok.nextToken();,if (tok != null ) String entry = tok.nextToken();
FindBugs.java,String fileName = item.getFileName();,if (item != null ) String fileName = item.getFileName();
FindBugs.java,JavaClass jclass = classProducer.getNextClass();,if (classProducer != null ) JavaClass jclass = classProducer.getNextClass();
FindBugs.java,total += aLong.longValue();,if (aLong != null ) total += aLong.longValue();
FindBugs.java,String detectorName = entry.getKey();,if (entry != null ) String detectorName = entry.getKey();
FindBugs.java,long detectorTime = entry.getValue().longValue();,if (entry != null ) long detectorTime = entry.getValue().longValue();
FindBugs.java,entireClassAnalysisStart = System.currentTimeMillis();,if (System != null ) entireClassAnalysisStart = System.currentTimeMillis();
FindBugs.java,start = System.currentTimeMillis();,if (System != null ) start = System.currentTimeMillis();
FindBugs.java,end = System.currentTimeMillis();,if (System != null ) end = System.currentTimeMillis();
FindBugs.java,String detectorName = detector.getClass().getName();,if (detector != null ) String detectorName = detector.getClass().getName();
FindBugs.java,String msg = re.getMessage();,if (re != null ) String msg = re.getMessage();
FindBugs.java,in = url.openStream();,if (url != null ) in = url.openStream();
FindBugs.java,String currentClass = findBugs.getCurrentClass();,if (findBugs != null ) String currentClass = findBugs.getCurrentClass();
CodeGen.java,int numChildren = node.jjtGetNumChildren();,if (node != null ) int numChildren = node.jjtGetNumChildren();
CodeGen.java,t = node.getFirstToken();,if (node != null ) t = node.getFirstToken();
CodeGen.java,t = nextChild.getFirstToken();,if (nextChild != null ) t = nextChild.getFirstToken();
CodeGen.java,t = node.getFirstToken();,if (node != null ) t = node.getFirstToken();
DetectorFactoryCollection.java,Plugin plugin = pluginLoader.getPlugin();,if (pluginLoader != null ) Plugin plugin = pluginLoader.getPlugin();
InconsistentAnnotations.java,JavaClass jclass = classContext.getJavaClass();,if (classContext != null ) JavaClass jclass = classContext.getJavaClass();
TextUICommandLine.java,String visitorName = tok.nextToken();,if (tok != null ) String visitorName = tok.nextToken();
TextUICommandLine.java,String what = tok.nextToken();,if (tok != null ) String what = tok.nextToken();
SourceDirectoryWizard.java,secondPanel = new javax.swing.JPanel();,if (javax != null ) secondPanel = new javax.swing.JPanel();
BackwardTypeQualifierDataflowFactory.java,CFG cfg = dataflow.getCFG();,if (dataflow != null ) CFG cfg = dataflow.getCFG();
BackwardTypeQualifierDataflowFactory.java,assert cfg == vnaDataflow.getCFG();,if (vnaDataflow != null ) assert cfg == vnaDataflow.getCFG();
AddMessages.java,Element element = elementIter.next();,if (elementIter != null ) Element element = elementIter.next();
AddMessages.java,Iterator<Element> annElementIter = element.elements().iterator();,if (element != null ) Iterator<Element> annElementIter = element.elements().iterator();
AddMessages.java,Element annElement = annElementIter.next();,if (annElementIter != null ) Element annElement = annElementIter.next();
BugInstance.java,primaryAnnotations = Collections.emptyMap();,if (Collections != null ) primaryAnnotations = Collections.emptyMap();
ClassNameAndSuperclassInfo.java,Collection<ClassDescriptor>  calledClassDescriptorList = Collections.emptyList();,if (Collections != null ) Collection<ClassDescriptor>  calledClassDescriptorList = Collections.emptyList();
ClassParser.java,data[i] = (Integer)in.readInt();,if ((Integer)in != null ) data[i] = (Integer)in.readInt();
ClassParser.java,data[i] = (Long)in.readLong();,if ((Long)in != null ) data[i] = (Long)in.readLong();
ClassParser.java,data[i] = (Integer)in.readUnsignedShort();,if ((Integer)in != null ) data[i] = (Integer)in.readUnsignedShort();
Filter.java,Iterator<Element> j = matchNode.elementIterator();,if (matchNode != null ) Iterator<Element> j = matchNode.elementIterator();
Filter.java,Iterator<Element> i = element.elementIterator();,if (element != null ) Iterator<Element> i = element.elementIterator();
Filter.java,Matcher child = (Matcher) i.next();,if (i != null ) Matcher child = (Matcher) i.next();
Filter.java,Matcher child = (Matcher) i.next();,if (i != null ) Matcher child = (Matcher) i.next();
FindBugs2.java,XFactory factory = AnalysisContext.currentXFactory();,if (AnalysisContext != null ) XFactory factory = AnalysisContext.currentXFactory();
FindBugs2.java,currentClassName = ClassName.toDottedClassName(classDescriptor.getClassName());,if (ClassName != null ) currentClassName = ClassName.toDottedClassName(classDescriptor.getClassName());
FindBugs2.java,final BugReporter origBugReporter = bugReporter.getDelegate();,if (bugReporter != null ) final BugReporter origBugReporter = bugReporter.getDelegate();
FindBugs2.java,String className = bugInstance.getPrimaryClass().getClassName();,if (bugInstance != null ) String className = bugInstance.getPrimaryClass().getClassName();
SerializableIdiom.java,XField fieldX = transientFields.get(e.getKey());,if (transientFields != null ) XField fieldX = transientFields.get(e.getKey());
SerializableIdiom.java,boolean isPutOfDefaultValue = first.isNull() || first.isInitialParameter();,if (first != null ) boolean isPutOfDefaultValue = first.isNull() || first.isInitialParameter();
GenericUtilities.java,StringBuffer b = new StringBuffer(obj.toPlainString());,if (StringBuffer(obj != null ) StringBuffer b = new StringBuffer(obj.toPlainString());
GenericUtilities.java,StringBuffer result = new StringBuffer(s.length());,if (StringBuffer(s != null ) StringBuffer result = new StringBuffer(s.length());
Project.java,xr = XMLReaderFactory.createXMLReader();,if (XMLReaderFactory != null ) xr = XMLReaderFactory.createXMLReader();
ExecutionPlan.java,DetectorNode start = j.next().getSource();,if (j != null ) DetectorNode start = j.next().getSource();
CheckTypeQualifiers.java,List<BugAnnotation> annotations = warning.getAnnotations();,if (warning != null ) List<BugAnnotation> annotations = warning.getAnnotations();
Analysis.java,final IAnalysisCache analysisCache = Global.getAnalysisCache();,if (Global != null ) final IAnalysisCache analysisCache = Global.getAnalysisCache();
CheckTypeQualifiers.java,InterproceduralCallGraphVertex callee = j.next().getTarget();,if (j != null ) InterproceduralCallGraphVertex callee = j.next().getTarget();
AnnotationDatabase.java,subtypes = AnalysisContext.currentAnalysisContext().getSubtypes();,if (AnalysisContext != null ) subtypes = AnalysisContext.currentAnalysisContext().getSubtypes();
InheritanceUnsafeGetResource.java,String myPackagename = getThisClass().getPackageName();,if (getThisClass() != null ) String myPackagename = getThisClass().getPackageName();
InheritanceUnsafeGetResource.java,subtypes = AnalysisContext.currentAnalysisContext().getSubtypes();,if (AnalysisContext != null ) subtypes = AnalysisContext.currentAnalysisContext().getSubtypes();
InheritanceUnsafeGetResource.java,String myPackagename = getThisClass().getPackageName();,if (getThisClass() != null ) String myPackagename = getThisClass().getPackageName();
ResolveAllReferences.java,allClasses = subtypes.getAllClasses();,if (subtypes != null ) allClasses = subtypes.getAllClasses();
InheritanceUnsafeGetResource.java,String myPackagename = getThisClass().getPackageName();,if (getThisClass() != null ) String myPackagename = getThisClass().getPackageName();
InconsistentAnnotations.java,String className = jclass.getClassName();,if (jclass != null ) String className = jclass.getClassName();
AbstractBugReporter.java,String dottedClassName = classDescriptor.toDottedClassName();,if (classDescriptor != null ) String dottedClassName = classDescriptor.toDottedClassName();
SourceFinder.java,boolean exists = file.exists();,if (file != null ) boolean exists = file.exists();
FindBugsAction.java,Set<IProject> keySet = projectMap.keySet();,if (projectMap != null ) Set<IProject> keySet = projectMap.keySet();
DetailsView.java,Rectangle size = htmlControl.getClientArea();,if (htmlControl != null ) Rectangle size = htmlControl.getClientArea();
ClassAnnotation.java,AnalysisContext currentAnalysisContext = AnalysisContext.currentAnalysisContext();,if (AnalysisContext != null ) AnalysisContext currentAnalysisContext = AnalysisContext.currentAnalysisContext();
PackageMemberAnnotation.java,sourceFileName = sourceLines.getSourceFile();,if (sourceLines != null ) sourceFileName = sourceLines.getSourceFile();
SAXBugCollectionHandler.java,CompoundMatcher peek = matcherStack.peek();,if (matcherStack != null ) CompoundMatcher peek = matcherStack.peek();
SAXBugCollectionHandler.java,BugDesignation userDesignation = bugInstance.getNonnullUserDesignation();,if (bugInstance != null ) BugDesignation userDesignation = bugInstance.getNonnullUserDesignation();
ClassContext.java,Method[] methodList = jclass.getMethods();,if (jclass != null ) Method[] methodList = jclass.getMethods();
ClassContext.java,List<Method> methodList = Arrays.asList(getJavaClass().getMethods());,if (Arrays != null ) List<Method> methodList = Arrays.asList(getJavaClass().getMethods());
ClassContext.java,final String thisClassName = getJavaClass().getClassName();,if (getJavaClass() != null ) final String thisClassName = getJavaClass().getClassName();
ClassContext.java,Code code = method.getCode();,if (method != null ) Code code = method.getCode();
ClassContext.java,byte[] instructionList = code.getCode();,if (code != null ) byte[] instructionList = code.getCode();
ClassContext.java,UnpackedCode unpackedCode = callback.getUnpackedCode();,if (callback != null ) UnpackedCode unpackedCode = callback.getUnpackedCode();
ClassContext.java,Code code = method.getCode();,if (method != null ) Code code = method.getCode();
ClassContext.java,byte[] instructionList = code.getCode();,if (code != null ) byte[] instructionList = code.getCode();
ClassContext.java,"result = TigerSubstitutes.emptySet(); // alas, emptySet() is @since 1.5","if (1 != null ) result = TigerSubstitutes.emptySet(); // alas, emptySet() is @since 1.5"
ClassContext.java,Code code = method.getCode();,if (method != null ) Code code = method.getCode();
ClassContext.java,CodeException[] exceptionTable = code.getExceptionTable();,if (code != null ) CodeException[] exceptionTable = code.getExceptionTable();
ClassContext.java,"firstHandler = Math.min(firstHandler, e.getHandlerPC());","if (e != null ) firstHandler = Math.min(firstHandler, e.getHandlerPC());"
ClassContext.java,LineNumberTable lineNumberTable = method.getLineNumberTable();,if (method != null ) LineNumberTable lineNumberTable = method.getLineNumberTable();
ClassContext.java,int newLine = line.getLineNumber();,if (line != null ) int newLine = line.getLineNumber();
ClassContext.java,Location loc = locs.next();,if (locs != null ) Location loc = locs.next();
ClassContext.java,Location loc = locs.next();,if (locs != null ) Location loc = locs.next();
UnresolvedXMethod.java,String returnTypeSig = parser.getReturnTypeSignature();,if (parser != null ) String returnTypeSig = parser.getReturnTypeSignature();
UnconditionalValueDerefSet.java,derefLocationSet = TigerSubstitutes.emptySet();,if (TigerSubstitutes != null ) derefLocationSet = TigerSubstitutes.emptySet();
IsNullValueFrame.java,IsNullValue otherKnownValue = otherFrame.knownValueMap.get(entry.getKey());,if (otherFrame != null ) IsNullValue otherKnownValue = otherFrame.knownValueMap.get(entry.getKey());
IsNullValueFrame.java,String result = super.toString();,if (super != null ) String result = super.toString();
IsNullValueFrame.java,value = value.downgradeOnControlSplit();,if (value != null ) value = value.downgradeOnControlSplit();
NullDerefAndRedundantComparisonFinder.java,assignedNullLocationSet = TigerSubstitutes.emptySet();,if (TigerSubstitutes != null ) assignedNullLocationSet = TigerSubstitutes.emptySet();
UserPreferences.java,this.filterSettings = ProjectFilterSettings.createDefault();,if (ProjectFilterSettings != null ) this.filterSettings = ProjectFilterSettings.createDefault();
UserPreferences.java,String key = (String) e.getKey();,if (e != null ) String key = (String) e.getKey();
UserPreferences.java,String detectorState = (String) e.getValue();,if (e != null ) String detectorState = (String) e.getValue();
UserPreferences.java,Iterator<String> it = recentProjectsList.iterator();,if (recentProjectsList != null ) Iterator<String> it = recentProjectsList.iterator();
UserPreferences.java,String detectorName = factory.getShortName();,if (factory != null ) String detectorName = factory.getShortName();
UserPreferences.java,enabled = factory.isDefaultEnabled();,if (factory != null ) enabled = factory.isDefaultEnabled();
UserPreferences.java,DetectorFactoryCollection factoryCollection = DetectorFactoryCollection.instance();,if (DetectorFactoryCollection != null ) DetectorFactoryCollection factoryCollection = DetectorFactoryCollection.instance();
UserPreferences.java,UserPreferences dup = (UserPreferences) super.clone();,if (super != null ) UserPreferences dup = (UserPreferences) super.clone();
Filter.java,AppVersion v = collection.getCurrentAppVersion();,if (collection != null ) AppVersion v = collection.getCurrentAppVersion();
Filter.java,BugPattern thisBugPattern = bug.getBugPattern();,if (bug != null ) BugPattern thisBugPattern = bug.getBugPattern();
Filter.java,SortedBugCollection resultCollection = origCollection.createEmptyCollectionWithMetadata();,if (origCollection != null ) SortedBugCollection resultCollection = origCollection.createEmptyCollectionWithMetadata();
Filter.java,Iterator<ClassStats> i = stats.getClassStats().iterator();,if (stats != null ) Iterator<ClassStats> i = stats.getClassStats().iterator();
Filter.java,String className = i.next().getName();,if (i != null ) String className = i.next().getName();
MineBugHistory.java,long sequenceNumber = bugCollection.getSequenceNumber();,if (bugCollection != null ) long sequenceNumber = bugCollection.getSequenceNumber();
MineBugHistory.java,long versionSequenceNumber = appVersion.getSequenceNumber();,if (appVersion != null ) long versionSequenceNumber = appVersion.getSequenceNumber();
MineBugHistory.java,AppVersion currentAppVersion = bugCollection.getCurrentAppVersion();,if (bugCollection != null ) AppVersion currentAppVersion = bugCollection.getCurrentAppVersion();
MineBugHistory.java,AppVersion appVersion = sequenceToAppVersionMap.get(version.getSequence());,if (sequenceToAppVersionMap != null ) AppVersion appVersion = sequenceToAppVersionMap.get(version.getSequence());
MineBugHistory.java,int padLen = width - s.length();,if (s != null ) int padLen = width - s.length();
MineBugHistory.java,AppVersion appVersion = sequenceToAppVersionMap.get(version.getSequence());,if (sequenceToAppVersionMap != null ) AppVersion appVersion = sequenceToAppVersionMap.get(version.getSequence());
MineBugHistory.java,AppVersion appVersion = sequenceToAppVersionMap.get(version.getSequence());,if (sequenceToAppVersionMap != null ) AppVersion appVersion = sequenceToAppVersionMap.get(version.getSequence());
Update.java,long lastSequence = origCollection.getSequenceNumber();,if (origCollection != null ) long lastSequence = origCollection.getSequenceNumber();
Update.java,AppVersion origCollectionVersion = origCollection.getCurrentAppVersion();,if (origCollection != null ) AppVersion origCollectionVersion = origCollection.getCurrentAppVersion();
Update.java,BugInstance newBug = (BugInstance) bug.clone();,if (bug != null ) BugInstance newBug = (BugInstance) bug.clone();
Update.java,BugInstance newBug = (BugInstance) bug.clone();,if (bug != null ) BugInstance newBug = (BugInstance) bug.clone();
Update.java,ClassAnnotation classBugFoundIn = bug.getPrimaryClass();,if (bug != null ) ClassAnnotation classBugFoundIn = bug.getPrimaryClass();
Update.java,String className = classBugFoundIn.getClassName();,if (classBugFoundIn != null ) String className = classBugFoundIn.getClassName();
Update.java,String sourceFile = classBugFoundIn.getSourceFileName();,if (classBugFoundIn != null ) String sourceFile = classBugFoundIn.getSourceFileName();
Update.java,BugInstance newBug = (BugInstance) bug.clone();,if (bug != null ) BugInstance newBug = (BugInstance) bug.clone();
Update.java,BugDesignation designation = newBug.getUserDesignation();,if (newBug != null ) BugDesignation designation = newBug.getUserDesignation();
Update.java,ClassAnnotation classBugFoundIn = bug.getPrimaryClass();,if (bug != null ) ClassAnnotation classBugFoundIn = bug.getPrimaryClass();
Update.java,String className = classBugFoundIn.getClassName();,if (classBugFoundIn != null ) String className = classBugFoundIn.getClassName();
Update.java,int oldSize = resultCollection.getCollection().size();,if (resultCollection != null ) int oldSize = resultCollection.getCollection().size();
Update.java,int newSize = resultCollection.getCollection().size();,if (resultCollection != null ) int newSize = resultCollection.getCollection().size();
MethodAnnotation.java,String className = visitor.getDottedClassName();,if (visitor != null ) String className = visitor.getDottedClassName();
MethodAnnotation.java,String className = visitor.getDottedClassConstantOperand();,if (visitor != null ) String className = visitor.getDottedClassConstantOperand();
MethodAnnotation.java,String methodName = visitor.getNameConstantOperand();,if (visitor != null ) String methodName = visitor.getNameConstantOperand();
MethodAnnotation.java,String methodSig = visitor.getSigConstantOperand();,if (visitor != null ) String methodSig = visitor.getSigConstantOperand();
XFactory.java,DescriptorFactory descriptorFactory = DescriptorFactory.instance();,if (DescriptorFactory != null ) DescriptorFactory descriptorFactory = DescriptorFactory.instance();
XFactory.java,IAnalysisCache analysisCache = Global.getAnalysisCache();,if (Global != null ) IAnalysisCache analysisCache = Global.getAnalysisCache();
XFactory.java,IAnalysisCache analysisCache = Global.getAnalysisCache();,if (Global != null ) IAnalysisCache analysisCache = Global.getAnalysisCache();
XFactory.java,String methodName = method.getName();,if (method != null ) String methodName = method.getName();
XFactory.java,String methodSig = method.getSignature();,if (method != null ) String methodSig = method.getSignature();
XFactory.java,int accessFlags = method.getAccessFlags();,if (method != null ) int accessFlags = method.getAccessFlags();
XFactory.java,XFactory xFactory = AnalysisContext.currentXFactory();,if (AnalysisContext != null ) XFactory xFactory = AnalysisContext.currentXFactory();
XFactory.java,XFactory xFactory = AnalysisContext.currentXFactory();,if (AnalysisContext != null ) XFactory xFactory = AnalysisContext.currentXFactory();
XFactory.java,ClassDescriptor superClass = xClass.getSuperclassDescriptor();,if (xClass != null ) ClassDescriptor superClass = xClass.getSuperclassDescriptor();
XFactory.java,int opcode = fieldInstruction.getOpcode();,if (fieldInstruction != null ) int opcode = fieldInstruction.getOpcode();
XFactory.java,String fieldName = field.getName();,if (field != null ) String fieldName = field.getName();
XFactory.java,String fieldSig = field.getSignature();,if (field != null ) String fieldSig = field.getSignature();
XFactory.java,XFactory xFactory = AnalysisContext.currentXFactory();,if (AnalysisContext != null ) XFactory xFactory = AnalysisContext.currentXFactory();
XFactory.java,XFactory xFactory = AnalysisContext.currentXFactory();,if (AnalysisContext != null ) XFactory xFactory = AnalysisContext.currentXFactory();
XFactory.java,ClassDescriptor superClass = xClass.getSuperclassDescriptor();,if (xClass != null ) ClassDescriptor superClass = xClass.getSuperclassDescriptor();
XFactory.java,JavaClass javaClass = visitor.getThisClass();,if (visitor != null ) JavaClass javaClass = visitor.getThisClass();
XFactory.java,Method method = visitor.getMethod();,if (visitor != null ) Method method = visitor.getMethod();
XFactory.java,JavaClass javaClass = visitor.getThisClass();,if (visitor != null ) JavaClass javaClass = visitor.getThisClass();
XFactory.java,Field field = visitor.getField();,if (visitor != null ) Field field = visitor.getField();
XFactory.java,String className = methodGen.getClassName();,if (methodGen != null ) String className = methodGen.getClassName();
XFactory.java,String methodName = methodGen.getName();,if (methodGen != null ) String methodName = methodGen.getName();
XFactory.java,String methodSig = methodGen.getSignature();,if (methodGen != null ) String methodSig = methodGen.getSignature();
XFactory.java,int accessFlags = methodGen.getAccessFlags();,if (methodGen != null ) int accessFlags = methodGen.getAccessFlags();
XFactory.java,IAnalysisCache analysisCache = Global.getAnalysisCache();,if (Global != null ) IAnalysisCache analysisCache = Global.getAnalysisCache();
UnconditionalValueDerefSet.java,resultForSkippedValue = valueNumbersUnconditionallyDereferenced.get(skipMe.getNumber());,if (valueNumbersUnconditionallyDereferenced != null ) resultForSkippedValue = valueNumbersUnconditionallyDereferenced.get(skipMe.getNumber());
UnconditionalValueDerefSet.java,derefLocationSet = TigerSubstitutes.emptySet();,if (TigerSubstitutes != null ) derefLocationSet = TigerSubstitutes.emptySet();
UnconditionalValueDerefSet.java,Set<ValueNumber> valueNumbers = new HashSet<ValueNumber>(vnaFrame.allSlots());,if (HashSet<ValueNumber>(vnaFrame != null ) Set<ValueNumber> valueNumbers = new HashSet<ValueNumber>(vnaFrame.allSlots());
GenericSignatureParser.java,genericSignature = sig.getSignature();,if (sig != null ) genericSignature = sig.getSignature();
FlowValue.java,When sourceWhen = source.getWhen();,if (source != null ) When sourceWhen = source.getWhen();
TypeQualifierDataflowAnalysis.java,ValueNumberFrame targetVnaFrame = vnaDataflow.getStartFact(edge.getTarget());,if (vnaDataflow != null ) ValueNumberFrame targetVnaFrame = vnaDataflow.getStartFact(edge.getTarget());
TypeQualifierDataflowAnalysis.java,ValueNumberFrame sourceVnaFrame = vnaDataflow.getResultFact(edge.getSource());,if (vnaDataflow != null ) ValueNumberFrame sourceVnaFrame = vnaDataflow.getResultFact(edge.getSource());
TypeQualifierDataflowAnalysis.java,Set<SourceSinkInfo> set = sourceSinkMap.get(sourceSinkInfo.getLocation());,if (sourceSinkMap != null ) Set<SourceSinkInfo> set = sourceSinkMap.get(sourceSinkInfo.getLocation());
IsNullValue.java,hashCode += locationOfKaBoom.hashCode();,if (locationOfKaBoom != null ) hashCode += locationOfKaBoom.hashCode();
ValueNumberSourceInfo.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
ClassParserUsingBCEL.java,ClassDescriptor classDescriptor = DescriptorFactory.createClassDescriptorFromDottedClassName(javaClass.getClassName());,if (DescriptorFactory != null ) ClassDescriptor classDescriptor = DescriptorFactory.createClassDescriptorFromDottedClassName(javaClass.getClassName());
ClassParserUsingBCEL.java,String signature = obj.getSignature(javaClass.getConstantPool());,if (obj != null ) String signature = obj.getSignature(javaClass.getConstantPool());
FindUnrelatedTypesInGenericContainer.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
FindUnrelatedTypesInGenericContainer.java,Method[] methodList = javaClass.getMethods();,if (javaClass != null ) Method[] methodList = javaClass.getMethods();
FindUnrelatedTypesInGenericContainer.java,ConstantPoolGen cpg = classContext.getConstantPoolGen();,if (classContext != null ) ConstantPoolGen cpg = classContext.getConstantPoolGen();
FindUnrelatedTypesInGenericContainer.java,String sourceFile = classContext.getJavaClass().getSourceFileName();,if (classContext != null ) String sourceFile = classContext.getJavaClass().getSourceFileName();
FindUnrelatedTypesInGenericContainer.java,Location location = iter.next();,if (iter != null ) Location location = iter.next();
FindUnrelatedTypesInGenericContainer.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
FindUnrelatedTypesInGenericContainer.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
FindUnrelatedTypesInGenericContainer.java,Type operandType = frame.getTopValue();,if (frame != null ) Type operandType = frame.getTopValue();
FindUnrelatedTypesInGenericContainer.java,String className = ref.getClass(cpg.getConstantPool());,if (ref != null ) String className = ref.getClass(cpg.getConstantPool());
FindUnrelatedTypesInGenericContainer.java,String methodName = refNT.getName(cpg.getConstantPool());,if (refNT != null ) String methodName = refNT.getName(cpg.getConstantPool());
FindUnrelatedTypesInGenericContainer.java,String methodSignature = refNT.getSignature(cpg.getConstantPool());,if (refNT != null ) String methodSignature = refNT.getSignature(cpg.getConstantPool());
DesignationMatcher.java,String value = matches.toString();,if (matches != null ) String value = matches.toString();
JAIFParser.java,JAIFToken t = scanner.nextToken();,if (scanner != null ) JAIFToken t = scanner.nextToken();
JAIFParser.java,JAIFToken t = scanner.nextToken();,if (scanner != null ) JAIFToken t = scanner.nextToken();
JAIFParser.java,t = scanner.peekToken();,if (scanner != null ) t = scanner.peekToken();
JAIFParser.java,JAIFToken t = scanner.nextToken();,if (scanner != null ) JAIFToken t = scanner.nextToken();
JAIFParser.java,t = scanner.peekToken();,if (scanner != null ) t = scanner.peekToken();
JAIFParser.java,JAIFToken t = scanner.peekToken();,if (scanner != null ) JAIFToken t = scanner.peekToken();
JAIFParser.java,t = scanner.peekToken();,if (scanner != null ) t = scanner.peekToken();
JAIFParser.java,t = scanner.peekToken();,if (scanner != null ) t = scanner.peekToken();
JAIFParser.java,JAIFToken t = scanner.peekToken();,if (scanner != null ) JAIFToken t = scanner.peekToken();
JAIFParser.java,t = scanner.peekToken();,if (scanner != null ) t = scanner.peekToken();
JAIFParser.java,t = scanner.peekToken();,if (scanner != null ) t = scanner.peekToken();
JAIFParser.java,JAIFToken t = scanner.peekToken();,if (scanner != null ) JAIFToken t = scanner.peekToken();
JAIFParser.java,t = scanner.nextToken();,if (scanner != null ) t = scanner.nextToken();
JAIFParser.java,t = scanner.nextToken();,if (scanner != null ) t = scanner.nextToken();
JAIFParser.java,t = scanner.nextToken();,if (scanner != null ) t = scanner.nextToken();
JAIFParser.java,t = scanner.nextToken();,if (scanner != null ) t = scanner.nextToken();
JAIFParser.java,t = scanner.nextToken();,if (scanner != null ) t = scanner.nextToken();
JAIFParser.java,JAIFToken t = scanner.peekToken();,if (scanner != null ) JAIFToken t = scanner.peekToken();
JAIFParser.java,JAIFToken t = scanner.peekToken();,if (scanner != null ) JAIFToken t = scanner.peekToken();
JAIFParser.java,t = scanner.peekToken();,if (scanner != null ) t = scanner.peekToken();
JAIFScanner.java,lineBuf = reader.readLine();,if (reader != null ) lineBuf = reader.readLine();
JAIFScanner.java,lineBuf = lineBuf.substring(lexeme.length());,if (lineBuf != null ) lineBuf = lineBuf.substring(lexeme.length());
GUISaveState.java,int size=recentFiles.size();,if (size=recentFiles != null ) int size=recentFiles.size();
FindBugs2.java,Profiler profiler = Profiler.getInstance();,if (Profiler != null ) Profiler profiler = Profiler.getInstance();
FindBugs2.java,classFactory = ClassFactory.instance();,if (ClassFactory != null ) classFactory = ClassFactory.instance();
FindBugs2.java,final BugReporter origBugReporter = bugReporter.getDelegate();,if (bugReporter != null ) final BugReporter origBugReporter = bugReporter.getDelegate();
FindBugs2.java,String className = bugInstance.getPrimaryClass().getClassName();,if (bugInstance != null ) String className = bugInstance.getPrimaryClass().getClassName();
FindBugs2.java,classPath = classFactory.createClassPath();,if (classFactory != null ) classPath = classFactory.createClassPath();
FindBugs2.java,IAnalysisEngineRegistrar engineRegistrar = engineRegistrarClass.newInstance();,if (engineRegistrarClass != null ) IAnalysisEngineRegistrar engineRegistrar = engineRegistrarClass.newInstance();
FindBugs2.java,appClassList = builder.getAppClassList();,if (builder != null ) appClassList = builder.getAppClassList();
FindBugs2.java,String pathName = appCodeBase.getPathName();,if (appCodeBase != null ) String pathName = appCodeBase.getPathName();
FindBugs2.java,ClassDescriptor classDesc = workList.removeFirst();,if (workList != null ) ClassDescriptor classDesc = workList.removeFirst();
FindBugs2.java,SourceInfoMap sourceInfoMap = analysisContext.getSourceInfoMap();,if (analysisContext != null ) SourceInfoMap sourceInfoMap = analysisContext.getSourceInfoMap();
FindBugs2.java,Profiler profiler = Profiler.getInstance();,if (Profiler != null ) Profiler profiler = Profiler.getInstance();
FindBugs2.java,XFactory factory = AnalysisContext.currentXFactory();,if (AnalysisContext != null ) XFactory factory = AnalysisContext.currentXFactory();
FindBugs2.java,currentClassName = ClassName.toDottedClassName(classDescriptor.getClassName());,if (ClassName != null ) currentClassName = ClassName.toDottedClassName(classDescriptor.getClassName());
SourceLineAnnotation.java,LineNumberTable lineNumberTable = methodGen.getLineNumberTable(methodGen.getConstantPool());,if (methodGen != null ) LineNumberTable lineNumberTable = methodGen.getLineNumberTable(methodGen.getConstantPool());
SourceLineAnnotation.java,String className = methodGen.getClassName();,if (methodGen != null ) String className = methodGen.getClassName();
SourceLineAnnotation.java,int codeSize = methodGen.getInstructionList().getLength();,if (methodGen != null ) int codeSize = methodGen.getInstructionList().getLength();
SourceLineAnnotation.java,LineNumber[] table = lineNumberTable.getLineNumberTable();,if (lineNumberTable != null ) LineNumber[] table = lineNumberTable.getLineNumberTable();
SourceLineAnnotation.java,String sourceFile = javaClass.getSourceFileName();,if (javaClass != null ) String sourceFile = javaClass.getSourceFileName();
SourceLineAnnotation.java,Code code = method.getCode();,if (method != null ) Code code = method.getCode();
SourceLineAnnotation.java,LineNumberTable lineNumberTable = method.getLineNumberTable();,if (method != null ) LineNumberTable lineNumberTable = method.getLineNumberTable();
SourceLineAnnotation.java,IAnalysisCache analysisCache = Global.getAnalysisCache();,if (Global != null ) IAnalysisCache analysisCache = Global.getAnalysisCache();
SourceLineAnnotation.java,LineNumberTable lineNumberTable = method.getCode().getLineNumberTable();,if (method != null ) LineNumberTable lineNumberTable = method.getCode().getLineNumberTable();
SourceLineAnnotation.java,String className = jclass.getClassName();,if (jclass != null ) String className = jclass.getClassName();
SourceLineAnnotation.java,String sourceFile = jclass.getSourceFileName();,if (jclass != null ) String sourceFile = jclass.getSourceFileName();
SourceLineAnnotation.java,String className = visitor.getDottedClassName();,if (visitor != null ) String className = visitor.getDottedClassName();
SourceLineAnnotation.java,String sourceFile = visitor.getSourceFile();,if (visitor != null ) String sourceFile = visitor.getSourceFile();
SourceLineAnnotation.java,String className = visitor.getDottedClassName();,if (visitor != null ) String className = visitor.getDottedClassName();
SourceLineAnnotation.java,String sourceFile = visitor.getSourceFile();,if (visitor != null ) String sourceFile = visitor.getSourceFile();
SourceLineAnnotation.java,LineNumberTable table = methodGen.getLineNumberTable(methodGen.getConstantPool());,if (methodGen != null ) LineNumberTable table = methodGen.getLineNumberTable(methodGen.getConstantPool());
SourceLineAnnotation.java,String className = methodGen.getClassName();,if (methodGen != null ) String className = methodGen.getClassName();
SourceLineAnnotation.java,int bytecodeOffset = handle.getPosition();,if (handle != null ) int bytecodeOffset = handle.getPosition();
SourceLineAnnotation.java,int lineNumber = table.getSourceLine(handle.getPosition());,if (table != null ) int lineNumber = table.getSourceLine(handle.getPosition());
SourceLineAnnotation.java,LineNumberTable lineNumberTable = methodGen.getLineNumberTable(methodGen.getConstantPool());,if (methodGen != null ) LineNumberTable lineNumberTable = methodGen.getLineNumberTable(methodGen.getConstantPool());
SourceLineAnnotation.java,String className = methodGen.getClassName();,if (methodGen != null ) String className = methodGen.getClassName();
SourceLineAnnotation.java,int startLine = lineNumberTable.getSourceLine(start.getPosition());,if (lineNumberTable != null ) int startLine = lineNumberTable.getSourceLine(start.getPosition());
SourceLineAnnotation.java,int endLine = lineNumberTable.getSourceLine(end.getPosition());,if (lineNumberTable != null ) int endLine = lineNumberTable.getSourceLine(end.getPosition());
SourceLineAnnotation.java,Code code = visitor.getMethod().getCode();,if (visitor != null ) Code code = visitor.getMethod().getCode();
SourceLineAnnotation.java,SourceFinder mySourceFinder = sourceFinder.get();,if (sourceFinder != null ) SourceFinder mySourceFinder = sourceFinder.get();
SourceLineAnnotation.java,String myRelativeSourceBase = relativeSourceBase.get();,if (relativeSourceBase != null ) String myRelativeSourceBase = relativeSourceBase.get();
SourceLineAnnotation.java,Method method = targetMethod.getMethod();,if (targetMethod != null ) Method method = targetMethod.getMethod();
SourceLineAnnotation.java,SourceInfoMap sourceInfoMap = AnalysisContext.currentAnalysisContext().getSourceInfoMap();,if (AnalysisContext != null ) SourceInfoMap sourceInfoMap = AnalysisContext.currentAnalysisContext().getSourceInfoMap();
SourceLineAnnotation.java,"lastLine = Math.max(lastLine, line.getLineNumber());","if (line != null ) lastLine = Math.max(lastLine, line.getLineNumber());"
SourceLineAnnotation.java,"firstLine = Math.min(firstLine, line.getLineNumber());","if (line != null ) firstLine = Math.min(firstLine, line.getLineNumber());"
AnalysisContext.java,IAnalysisCache analysisCache = Global.getAnalysisCache();,if (Global != null ) IAnalysisCache analysisCache = Global.getAnalysisCache();
AnalysisContext.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
AnalysisContext.java,String name = xClass.getSource();,if (xClass != null ) String name = xClass.getSource();
PruneInfeasibleExceptionEdges.java,int flags = edge.getFlags();,if (edge != null ) int flags = edge.getFlags();
PruneInfeasibleExceptionEdges.java,String className = cfg.getMethodGen().getClassName();,if (cfg != null ) String className = cfg.getMethodGen().getClassName();
PruneInfeasibleExceptionEdges.java,boolean someChecked = exceptionSet.containsCheckedExceptions();,if (exceptionSet != null ) boolean someChecked = exceptionSet.containsCheckedExceptions();
PruneInfeasibleExceptionEdges.java,boolean someExplicit = exceptionSet.containsExplicitExceptions();,if (exceptionSet != null ) boolean someExplicit = exceptionSet.containsExplicitExceptions();
URLClassPath.java,JavaClass javaClass = classParser.parse();,if (classParser != null ) JavaClass javaClass = classParser.parse();
TypeAnalysis.java,edgeExceptionSet = exceptionSetFactory.createExceptionSet();,if (exceptionSetFactory != null ) edgeExceptionSet = exceptionSetFactory.createExceptionSet();
TypeAnalysis.java,Code code = method.getCode();,if (method != null ) Code code = method.getCode();
TypeAnalysis.java,CachedExceptionSet cachedExceptionSet = thrownExceptionSetMap.get(edge.getSource());,if (thrownExceptionSetMap != null ) CachedExceptionSet cachedExceptionSet = thrownExceptionSetMap.get(edge.getSource());
TypeAnalysis.java,Type[] argumentTypes = methodGen.getArgumentTypes();,if (methodGen != null ) Type[] argumentTypes = methodGen.getArgumentTypes();
TypeAnalysis.java,int pos = handle.getPosition();,if (handle != null ) int pos = handle.getPosition();
TypeAnalysis.java,String signature = local.getSignature();,if (local != null ) String signature = local.getSignature();
TypeAnalysis.java,int index = local.getIndex();,if (local != null ) int index = local.getIndex();
TypeAnalysis.java,ExceptionSet thrownExceptionSet = cachedExceptionSet.getExceptionSet();,if (cachedExceptionSet != null ) ExceptionSet thrownExceptionSet = cachedExceptionSet.getExceptionSet();
TypeAnalysis.java,BasicBlock basicBlock = edge.getTarget();,if (edge != null ) BasicBlock basicBlock = edge.getTarget();
TypeAnalysis.java,CodeExceptionGen exceptionGen = basicBlock.getExceptionGen();,if (basicBlock != null ) CodeExceptionGen exceptionGen = basicBlock.getExceptionGen();
TypeAnalysis.java,CachedExceptionSet cachedExceptionSet = getCachedExceptionSet(edge.getSource());,if (getCachedExceptionSet(edge != null ) CachedExceptionSet cachedExceptionSet = getCachedExceptionSet(edge.getSource());
TypeAnalysis.java,catchType = exceptionGen.getCatchType();,if (exceptionGen != null ) catchType = exceptionGen.getCatchType();
TypeAnalysis.java,InstanceOfCheck check = instanceOfCheckMap.get(edge.getSource());,if (instanceOfCheckMap != null ) InstanceOfCheck check = instanceOfCheckMap.get(edge.getSource());
TypeAnalysis.java,ValueNumber instanceOfValueNumber = check.getValueNumber();,if (check != null ) ValueNumber instanceOfValueNumber = check.getValueNumber();
TypeAnalysis.java,ValueNumberFrame vnaFrame = valueNumberDataflow.getStartFact(edge.getTarget());,if (valueNumberDataflow != null ) ValueNumberFrame vnaFrame = valueNumberDataflow.getStartFact(edge.getTarget());
TypeAnalysis.java,Type instanceOfType = check.getType();,if (check != null ) Type instanceOfType = check.getType();
TypeAnalysis.java,int edgeType = edge.getType();,if (edge != null ) int edgeType = edge.getType();
TypeAnalysis.java,"cachedExceptionSet = new CachedExceptionSet(top, exceptionSetFactory.createExceptionSet());","if (exceptionSetFactory != null ) cachedExceptionSet = new CachedExceptionSet(top, exceptionSetFactory.createExceptionSet());"
TypeAnalysis.java,exceptionSet = exceptionSetFactory.createExceptionSet();,if (exceptionSetFactory != null ) exceptionSet = exceptionSetFactory.createExceptionSet();
TypeAnalysis.java,ExceptionSet result = exceptionSetFactory.createExceptionSet();,if (exceptionSetFactory != null ) ExceptionSet result = exceptionSetFactory.createExceptionSet();
TypeAnalysis.java,BasicBlock handlerBlock = edge.getTarget();,if (edge != null ) BasicBlock handlerBlock = edge.getTarget();
TypeAnalysis.java,CodeExceptionGen handler = handlerBlock.getExceptionGen();,if (handlerBlock != null ) CodeExceptionGen handler = handlerBlock.getExceptionGen();
TypeAnalysis.java,ObjectType catchType = handler.getCatchType();,if (handler != null ) ObjectType catchType = handler.getCatchType();
TypeAnalysis.java,ExceptionSet exceptionTypeSet = exceptionSetFactory.createExceptionSet();,if (exceptionSetFactory != null ) ExceptionSet exceptionTypeSet = exceptionSetFactory.createExceptionSet();
TypeAnalysis.java,InstructionHandle pei = basicBlock.getExceptionThrower();,if (basicBlock != null ) InstructionHandle pei = basicBlock.getExceptionThrower();
TypeAnalysis.java,Instruction ins = pei.getInstruction();,if (pei != null ) Instruction ins = pei.getInstruction();
TypeAnalysis.java,Type throwType = frame.getTopValue();,if (frame != null ) Type throwType = frame.getTopValue();
TypeAnalysis.java,ConstantPoolGen cpg = methodGen.getConstantPool();,if (methodGen != null ) ConstantPoolGen cpg = methodGen.getConstantPool();
StaticCalendarDetector.java,currentClass = someObj.getClassName();,if (someObj != null ) currentClass = someObj.getClassName();
StaticCalendarDetector.java,ClassDescriptor classOfField = DescriptorFactory.createClassDescriptorFromFieldSignature(aField.getSignature());,if (DescriptorFactory != null ) ClassDescriptor classOfField = DescriptorFactory.createClassDescriptorFromFieldSignature(aField.getSignature());
StaticCalendarDetector.java,XField field = invokedOn.getXField();,if (invokedOn != null ) XField field = invokedOn.getXField();
StaticCalendarDetector.java,field = passedAsArgument.getXField();,if (passedAsArgument != null ) field = passedAsArgument.getXField();
ConvertToARFF.java,String s = value.toString();,if (value != null ) String s = value.toString();
ConvertToARFF.java,String value = attribute.getValue();,if (attribute != null ) String value = attribute.getValue();
ConvertToARFF.java,nextId = uidAttr.getValue();,if (uidAttr != null ) nextId = uidAttr.getValue();
ConvertToARFF.java,value = uidAttr.getStringValue();,if (uidAttr != null ) value = uidAttr.getStringValue();
ConvertToARFF.java,String s = tok.nextToken();,if (tok != null ) String s = tok.nextToken();
ConvertToARFF.java,ConvertToARFF converter = commandLine.getConverter();,if (commandLine != null ) ConvertToARFF converter = commandLine.getConverter();
BugInstance.java,dup = (BugInstance) super.clone();,if (super != null ) dup = (BugInstance) super.clone();
BugInstance.java,BugPattern bugPattern = this.getBugPattern();,if (this != null ) BugPattern bugPattern = this.getBugPattern();
BugInstance.java,int value = this.getPriority();,if (this != null ) int value = this.getPriority();
BugInstance.java,String s = userDesignation.getAnnotationText();,if (userDesignation != null ) String s = userDesignation.getAnnotationText();
BugInstance.java,propertyListHead = cur.getNext();,if (cur != null ) propertyListHead = cur.getNext();
BugInstance.java,prop = prop.getNext();,if (prop != null ) prop = prop.getNext();
BugInstance.java,prop = prop.getNext();,if (prop != null ) prop = prop.getNext();
BugInstance.java,propertyListHead = prop.getNext();,if (prop != null ) propertyListHead = prop.getNext();
BugInstance.java,String className = visitor.getDottedClassName();,if (visitor != null ) String className = visitor.getDottedClassName();
BugInstance.java,String className = visitor.getSuperclassName();,if (visitor != null ) String className = visitor.getSuperclassName();
BugInstance.java,int register = item.getRegisterNumber();,if (item != null ) int register = item.getRegisterNumber();
BugInstance.java,String className = methodGen.getClassName();,if (methodGen != null ) String className = methodGen.getClassName();
BugInstance.java,ConstantPoolGen cpg = methodGen.getConstantPool();,if (methodGen != null ) ConstantPoolGen cpg = methodGen.getConstantPool();
BugInstance.java,IAnalysisCache analysisCache = Global.getAnalysisCache();,if (Global != null ) IAnalysisCache analysisCache = Global.getAnalysisCache();
BugInstance.java,shortPattern = bugPattern.getShortDescription();,if (bugPattern != null ) shortPattern = bugPattern.getShortDescription();
BugInstance.java,shortPattern = bugPattern.getShortDescription();,if (bugPattern != null ) shortPattern = bugPattern.getShortDescription();
BugInstance.java,primaryAnnotations = Collections.emptyMap();,if (Collections != null ) primaryAnnotations = Collections.emptyMap();
BugInstance.java,prop = prop.getNext();,if (prop != null ) prop = prop.getNext();
BugInstance.java,hashcode += i.next().hashCode();,if (i != null ) hashcode += i.next().hashCode();
BugInstance.java,int numAnnotations = annotationList.size();,if (annotationList != null ) int numAnnotations = annotationList.size();
DetectorFactory.java,JavaVersion runtimeVersion = JavaVersion.getRuntimeVersion();,if (JavaVersion != null ) JavaVersion runtimeVersion = JavaVersion.getRuntimeVersion();
DetectorFactory.java,String type = tok.nextToken();,if (tok != null ) String type = tok.nextToken();
DetectorFactory.java,String className = detectorCreator.getDetectorClass().getName();,if (detectorCreator != null ) String className = detectorCreator.getDetectorClass().getName();
PackageStats.java,ClassAnnotation primaryClass = bug.getPrimaryClass();,if (bug != null ) ClassAnnotation primaryClass = bug.getPrimaryClass();
PackageStats.java,size += classStats.size();,if (classStats != null ) size += classStats.size();
ProjectStats.java,PackageStats stat = getPackageStats(bug.getPrimaryClass().getPackageName());,if (getPackageStats(bug != null ) PackageStats stat = getPackageStats(bug.getPrimaryClass().getPackageName());
ProjectStats.java,int priority = bug.getPriority();,if (bug != null ) int priority = bug.getPriority();
ProjectStats.java,totalSize += stats.size();,if (stats != null ) totalSize += stats.size();
ProjectStats.java,long cpuTime = delta.getCpuTime(); // nanoseconds,if (nanoseconds != null ) long cpuTime = delta.getCpuTime(); // nanoseconds
ProjectStats.java,long clockTime = delta.getClockTime(); // milliseconds,if (milliseconds != null ) long clockTime = delta.getClockTime(); // milliseconds
ProjectStats.java,long peakMemory = delta.getPeakMemory(); // bytes,if (bytes != null ) long peakMemory = delta.getPeakMemory(); // bytes
ProjectStats.java,long gcTime = delta.getCollectionTime(); // milliseconds,if (milliseconds != null ) long gcTime = delta.getCollectionTime(); // milliseconds
ProjectStats.java,TransformerFactory tf = TransformerFactory.newInstance();,if (TransformerFactory != null ) TransformerFactory tf = TransformerFactory.newInstance();
ProjectStats.java,Reader rdr = in.getReader();,if (in != null ) Reader rdr = in.getReader();
ProjectStats.java,InputStream is = xsl.getInputStream();,if (xsl != null ) InputStream is = xsl.getInputStream();
ProjectStats.java,String key = entry.getKey();,if (entry != null ) String key = entry.getKey();
Hierarchy.java,short opcode = inv.getOpcode();,if (inv != null ) short opcode = inv.getOpcode();
Hierarchy.java,JavaClass sClass = jClass.getSuperClass();,if (jClass != null ) JavaClass sClass = jClass.getSuperClass();
Hierarchy.java,Method[] methodList = javaClass.getMethods();,if (javaClass != null ) Method[] methodList = javaClass.getMethods();
Hierarchy.java,Method[] methodList = javaClass.getMethods();,if (javaClass != null ) Method[] methodList = javaClass.getMethods();
Hierarchy.java,Method method = javaClassAndMethod.getMethod();,if (javaClassAndMethod != null ) Method method = javaClassAndMethod.getMethod();
Hierarchy.java,int accessFlags = method.getAccessFlags();,if (method != null ) int accessFlags = method.getAccessFlags();
Hierarchy.java,short opcode = invokeInstruction.getOpcode();,if (invokeInstruction != null ) short opcode = invokeInstruction.getOpcode();
Hierarchy.java,AnalysisContext analysisContext = AnalysisContext.currentAnalysisContext();,if (AnalysisContext != null ) AnalysisContext analysisContext = AnalysisContext.currentAnalysisContext();
Hierarchy.java,int accessFlags = xmethod.getAccessFlags();,if (xmethod != null ) int accessFlags = xmethod.getAccessFlags();
Hierarchy.java,Field[] fieldList = jclass.getFields();,if (jclass != null ) Field[] fieldList = jclass.getFields();
Hierarchy.java,jclass = jclass.getSuperClass();,if (jclass != null ) jclass = jclass.getSuperClass();
Hierarchy.java,short opcode = fins.getOpcode();,if (fins != null ) short opcode = fins.getOpcode();
PruneUnconditionalExceptionThrowerEdges.java,AnalysisContext currentAnalysisContext = AnalysisContext.currentAnalysisContext();,if (AnalysisContext != null ) AnalysisContext currentAnalysisContext = AnalysisContext.currentAnalysisContext();
PruneUnconditionalExceptionThrowerEdges.java,InstructionHandle instructionHandle = basicBlock.getExceptionThrower();,if (basicBlock != null ) InstructionHandle instructionHandle = basicBlock.getExceptionThrower();
PruneUnconditionalExceptionThrowerEdges.java,Instruction exceptionThrower = instructionHandle.getInstruction();,if (instructionHandle != null ) Instruction exceptionThrower = instructionHandle.getInstruction();
NullDerefAndRedundantComparisonFinder.java,this.assertionMethods = classContext.getAssertionMethods();,if (classContext != null ) this.assertionMethods = classContext.getAssertionMethods();
NullDerefAndRedundantComparisonFinder.java,Profiler profiler = Profiler.getInstance();,if (Profiler != null ) Profiler profiler = Profiler.getInstance();
NullDerefAndRedundantComparisonFinder.java,Iterator<BasicBlock> bbIter = invDataflow.getCFG().blockIterator();,if (invDataflow != null ) Iterator<BasicBlock> bbIter = invDataflow.getCFG().blockIterator();
NullDerefAndRedundantComparisonFinder.java,BasicBlock basicBlock = bbIter.next();,if (bbIter != null ) BasicBlock basicBlock = bbIter.next();
NullDerefAndRedundantComparisonFinder.java,InstructionHandle lastHandle = basicBlock.getLastInstruction();,if (basicBlock != null ) InstructionHandle lastHandle = basicBlock.getLastInstruction();
NullDerefAndRedundantComparisonFinder.java,Instruction last = lastHandle.getInstruction();,if (lastHandle != null ) Instruction last = lastHandle.getInstruction();
NullDerefAndRedundantComparisonFinder.java,Instruction in = location.getHandle().getInstruction();,if (location != null ) Instruction in = location.getHandle().getInstruction();
NullDerefAndRedundantComparisonFinder.java,IsNullValue isNullValue = invFrame.getTopValue();,if (invFrame != null ) IsNullValue isNullValue = invFrame.getTopValue();
NullDerefAndRedundantComparisonFinder.java,ValueNumber vn = vnaDataflow.getFactAfterLocation(location).getTopValue();,if (vnaDataflow != null ) ValueNumber vn = vnaDataflow.getFactAfterLocation(location).getTopValue();
NullDerefAndRedundantComparisonFinder.java,HashSet<ValueNumber> npeIfStatementCovered = new HashSet<ValueNumber>(nullValueGuaranteedDerefMap.keySet());,if (HashSet<ValueNumber>(nullValueGuaranteedDerefMap != null ) HashSet<ValueNumber> npeIfStatementCovered = new HashSet<ValueNumber>(nullValueGuaranteedDerefMap.keySet());
NullDerefAndRedundantComparisonFinder.java,ValueNumberFrame vnaFact = vnaDataflow.getResultFact(edge.getSource());,if (vnaDataflow != null ) ValueNumberFrame vnaFact = vnaDataflow.getResultFact(edge.getSource());
NullDerefAndRedundantComparisonFinder.java,ValueNumberFrame vnaTargetFact = vnaDataflow.getStartFact(edge.getTarget());,if (vnaDataflow != null ) ValueNumberFrame vnaTargetFact = vnaDataflow.getStartFact(edge.getTarget());
NullDerefAndRedundantComparisonFinder.java,IsNullValueFrame invSourceFact = invDataflow.getResultFact(edge.getSource());,if (invDataflow != null ) IsNullValueFrame invSourceFact = invDataflow.getResultFact(edge.getSource());
NullDerefAndRedundantComparisonFinder.java,IsNullValueFrame invTargetFact = invDataflow.getStartFact(edge.getTarget());,if (invDataflow != null ) IsNullValueFrame invTargetFact = invDataflow.getStartFact(edge.getTarget());
NullDerefAndRedundantComparisonFinder.java,UnconditionalValueDerefSet uvdSourceFact = uvdDataflow.getStartFact(edge.getSource());,if (uvdDataflow != null ) UnconditionalValueDerefSet uvdSourceFact = uvdDataflow.getStartFact(edge.getSource());
NullDerefAndRedundantComparisonFinder.java,UnconditionalValueDerefSet uvdTargetFact = uvdDataflow.getResultFact(edge.getTarget());,if (uvdDataflow != null ) UnconditionalValueDerefSet uvdTargetFact = uvdDataflow.getResultFact(edge.getTarget());
NullDerefAndRedundantComparisonFinder.java,Location location = Location.getLastLocation(edge.getSource());,if (Location != null ) Location location = Location.getLastLocation(edge.getSource());
NullDerefAndRedundantComparisonFinder.java,Instruction in = location.getHandle().getInstruction();,if (location != null ) Instruction in = location.getHandle().getInstruction();
NullDerefAndRedundantComparisonFinder.java,Set<Location> locationSet = nullValueAssignmentMap.get(lwvbn.getValueNumber());,if (nullValueAssignmentMap != null ) Set<Location> locationSet = nullValueAssignmentMap.get(lwvbn.getValueNumber());
NullDerefAndRedundantComparisonFinder.java,Set<Location> derefLocationSet = e.getValue().getDerefLocationSet();,if (e != null ) Set<Location> derefLocationSet = e.getValue().getDerefLocationSet();
NullDerefAndRedundantComparisonFinder.java,assignedNullLocationSet = TigerSubstitutes.emptySet();,if (TigerSubstitutes != null ) assignedNullLocationSet = TigerSubstitutes.emptySet();
NullDerefAndRedundantComparisonFinder.java,BitSet allDominatedBy = postDomAnalysis.getAllDominatedBy(loc.getBasicBlock());,if (postDomAnalysis != null ) BitSet allDominatedBy = postDomAnalysis.getAllDominatedBy(loc.getBasicBlock());
NullDerefAndRedundantComparisonFinder.java,ValueNumber valueNumber = entry.getKey();,if (entry != null ) ValueNumber valueNumber = entry.getKey();
NullDerefAndRedundantComparisonFinder.java,IsNullValue isNullValue = entry.getValue();,if (entry != null ) IsNullValue isNullValue = entry.getValue();
NullDerefAndRedundantComparisonFinder.java,int pc = redundantBranch.location.getHandle().getPosition();,if (redundantBranch != null ) int pc = redundantBranch.location.getHandle().getPosition();
NullDerefAndRedundantComparisonFinder.java,int numSlots = frame.getNumSlots();,if (frame != null ) int numSlots = frame.getNumSlots();
NullDerefAndRedundantComparisonFinder.java,boolean definitelySame = top.isDefinitelyNull() && topNext.isDefinitelyNull();,if (topNext != null ) boolean definitelySame = top.isDefinitelyNull() && topNext.isDefinitelyNull();
NullDerefAndRedundantComparisonFinder.java,IsNullValue top = frame.getTopValue();,if (frame != null ) IsNullValue top = frame.getTopValue();
NullDerefAndRedundantComparisonFinder.java,short opcode = lastHandle.getInstruction().getOpcode();,if (lastHandle != null ) short opcode = lastHandle.getInstruction().getOpcode();
NullDerefAndRedundantComparisonFinder.java,boolean definitelySame = top.isDefinitelyNull();,if (top != null ) boolean definitelySame = top.isDefinitelyNull();
NullDerefAndRedundantComparisonFinder.java,InstructionHandle exceptionThrowerHandle = basicBlock.getExceptionThrower();,if (basicBlock != null ) InstructionHandle exceptionThrowerHandle = basicBlock.getExceptionThrower();
NullDerefAndRedundantComparisonFinder.java,Instruction exceptionThrower = exceptionThrowerHandle.getInstruction();,if (exceptionThrowerHandle != null ) Instruction exceptionThrower = exceptionThrowerHandle.getInstruction();
NullDerefAndRedundantComparisonFinder.java,"IsNullValue refValue = frame.getInstance(exceptionThrower, classContext.getConstantPoolGen());","if (classContext != null ) IsNullValue refValue = frame.getInstance(exceptionThrower, classContext.getConstantPoolGen());"
NullDerefAndRedundantComparisonFinder.java,"ValueNumber valueNumber = vnaFrame.getInstance(exceptionThrower, classContext.getConstantPoolGen());","if (classContext != null ) ValueNumber valueNumber = vnaFrame.getInstance(exceptionThrower, classContext.getConstantPoolGen());"
NullDerefAndRedundantComparisonFinder.java,LineNumberTable table = method.getCode().getLineNumberTable();,if (method != null ) LineNumberTable table = method.getCode().getLineNumberTable();
NoteNonNullAnnotations.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
FindBugs2.java,IAnalysisCache analysisCache = Global.getAnalysisCache();,if (Global != null ) IAnalysisCache analysisCache = Global.getAnalysisCache();
FindBugs2.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
ValueNumberAnalysis.java,mergedValue = factory.createFreshValue();,if (factory != null ) mergedValue = factory.createFreshValue();
ValueNumberFrame.java,FieldSummary fieldSummary = AnalysisContext.currentAnalysisContext().getFieldSummary();,if (AnalysisContext != null ) FieldSummary fieldSummary = AnalysisContext.currentAnalysisContext().getFieldSummary();
ValueNumberFrame.java,XField field = availableLoad.getField();,if (availableLoad != null ) XField field = availableLoad.getField();
ValueNumberFrame.java,FieldSummary fieldSummary = AnalysisContext.currentAnalysisContext().getFieldSummary();,if (AnalysisContext != null ) FieldSummary fieldSummary = AnalysisContext.currentAnalysisContext().getFieldSummary();
ValueNumberFrame.java,XField field = availableLoad.getField();,if (availableLoad != null ) XField field = availableLoad.getField();
ValueNumberFrame.java,XField field = availableLoad.getField();,if (availableLoad != null ) XField field = availableLoad.getField();
ValueNumberFrame.java,String fieldPackageName = extractPackageName(field.getClassName());,if (extractPackageName(field != null ) String fieldPackageName = extractPackageName(field.getClassName());
ValueNumberFrame.java,phi = factory.createFreshValue();,if (factory != null ) phi = factory.createFreshValue();
ValueNumberFrameModelingVisitor.java,ValueNumber freshValue = factory.createFreshValue();,if (factory != null ) ValueNumber freshValue = factory.createFreshValue();
ValueNumberFrameModelingVisitor.java,value = factory.createFreshValue();,if (factory != null ) value = factory.createFreshValue();
OpcodeStack.java,int reg = item.getRegisterNumber();,if (item != null ) int reg = item.getRegisterNumber();
SynchronizationOnSharedBuiltinConstant.java,FieldItemSummary fieldItemSummary = AnalysisContext.currentAnalysisContext().getFieldItemSummary();,if (AnalysisContext != null ) FieldItemSummary fieldItemSummary = AnalysisContext.currentAnalysisContext().getFieldItemSummary();
OverridingEqualsNotSymmetrical.java,ClassAnnotation parentClass = ClassAnnotation.fromClassDescriptor(e.getKey());,if (ClassAnnotation != null ) ClassAnnotation parentClass = ClassAnnotation.fromClassDescriptor(e.getKey());
OpcodeStack.java,"result.userValue = new HttpParameterInjection(parameterName, dbc.getPC());","if (dbc != null ) result.userValue = new HttpParameterInjection(parameterName, dbc.getPC());"
FindBugsCommandLine.java,projectFileName = new File(projectFileName).getAbsolutePath();,if (File(projectFileName) != null ) projectFileName = new File(projectFileName).getAbsolutePath();
CrossSiteScripting.java,XMethod m = writing.getReturnValueOf();,if (writing != null ) XMethod m = writing.getReturnValueOf();
SynchronizationOnSharedBuiltinConstant.java,XMethod method = top.getReturnValueOf();,if (top != null ) XMethod method = top.getReturnValueOf();
CrossSiteScripting.java,XMethod method = writing.getReturnValueOf();,if (writing != null ) XMethod method = writing.getReturnValueOf();
CrossSiteScripting.java,XMethod method = writing.getReturnValueOf();,if (writing != null ) XMethod method = writing.getReturnValueOf();
BugTreeView.java,IResource resource = delta.getResource();,if (delta != null ) IResource resource = delta.getResource();
BugTreeView.java,int kind = delta.getKind();,if (delta != null ) int kind = delta.getKind();
BugTreeView.java,int flags = delta.getFlags();,if (delta != null ) int flags = delta.getFlags();
BugTreeView.java,boolean exists = resource.exists();,if (resource != null ) boolean exists = resource.exists();
BugTreeView.java,IProject project = resource.getProject();,if (resource != null ) IProject project = resource.getProject();
BugTreeView.java,IResourceDelta delta = event.getDelta();,if (event != null ) IResourceDelta delta = event.getDelta();
BugTreeView.java,final String projectName = theProject.getName();,if (theProject != null ) final String projectName = theProject.getName();
BugTreeView.java,final String projectName = theProject.getName();,if (theProject != null ) final String projectName = theProject.getName();
BugTreeView.java,TabItem[] items = rootControl.getItems();,if (rootControl != null ) TabItem[] items = rootControl.getItems();
BugTreeView.java,TreeItem[] groupItems = theTree.getItems();,if (theTree != null ) TreeItem[] groupItems = theTree.getItems();
BugTreeView.java,TreeItem[] items = groupItems[i].getItems();,if (groupItems[i] != null ) TreeItem[] items = groupItems[i].getItems();
BugTreeView.java,TreeItem[] treeItems = groupItem.getItems();,if (groupItem != null ) TreeItem[] treeItems = groupItem.getItems();
BugTreeView.java,TreeItem[] selection = tree.getSelection();,if (tree != null ) TreeItem[] selection = tree.getSelection();
SerializableIdiom.java,JavaClass huh = first.getJavaClass();,if (first != null ) JavaClass huh = first.getJavaClass();
CrossSiteScripting.java,XMethod method = writing.getReturnValueOf();,if (writing != null ) XMethod method = writing.getReturnValueOf();
CrossSiteScripting.java,XMethod writingSource = writing.getReturnValueOf();,if (writing != null ) XMethod writingSource = writing.getReturnValueOf();
CrossSiteScripting.java,XMethod writingToSource = writingTo.getReturnValueOf();,if (writingTo != null ) XMethod writingToSource = writingTo.getReturnValueOf();
FindbugsPlugin.java,InputStream in = userPrefsFile.getContents();,if (userPrefsFile != null ) InputStream in = userPrefsFile.getContents();
ClearMarkersAction.java,ProgressMonitorDialog progress = new ProgressMonitorDialog(FindbugsPlugin.getShell());,if (ProgressMonitorDialog(FindbugsPlugin != null ) ProgressMonitorDialog progress = new ProgressMonitorDialog(FindbugsPlugin.getShell());
ResourceUtils.java,IProject project = resource.getProject();,if (resource != null ) IProject project = resource.getProject();
FindBugsAction.java,Object element = iter.next();,if (iter != null ) Object element = iter.next();
LoadXmlAction.java,Object element = iter.next();,if (iter != null ) Object element = iter.next();
ContainerFilesCollector.java,int childType = child.getType();,if (child != null ) int childType = child.getType();
FilesCollectorFactory.java,IProject project = builder.getProject();,if (builder != null ) IProject project = builder.getProject();
FindBugsBuilder.java,Collection<IFile> files = collector.getFiles();,if (collector != null ) Collection<IFile> files = collector.getFiles();
FindBugsWorker.java,String findBugsHome = FindbugsPlugin.getFindBugsEnginePluginLocation();,if (FindbugsPlugin != null ) String findBugsHome = FindbugsPlugin.getFindBugsEnginePluginLocation();
FindBugsWorker.java,Iterator<IFile> iter = files.iterator();,if (files != null ) Iterator<IFile> iter = files.iterator();
FindBugsWorker.java,IFile res = iter.next();,if (iter != null ) IFile res = iter.next();
FindBugsWorker.java,IPath location = res.getLocation();,if (res != null ) IPath location = res.getLocation();
FindBugsWorker.java,String fileName = location.toOSString();,if (location != null ) String fileName = location.toOSString();
FindBugsWorker.java,cpe = pkgRoot.getRawClasspathEntry();,if (pkgRoot != null ) cpe = pkgRoot.getRawClasspathEntry();
FindBugsWorker.java,String fName = relativePath.lastSegment();,if (relativePath != null ) String fName = relativePath.lastSegment();
FindBugsWorker.java,File clzDir = clzLocation.toFile();,if (clzLocation != null ) File clzDir = clzLocation.toFile();
FindBugsWorker.java,File clzDir = entry.getKey();,if (entry != null ) File clzDir = entry.getKey();
FindBugsWorker.java,final Pattern pat = Pattern.compile(entry.getValue());,if (Pattern != null ) final Pattern pat = Pattern.compile(entry.getValue());
FindBugsWorker.java,IPath cpePath = cpe.getPath();,if (cpe != null ) IPath cpePath = cpe.getPath();
FindBugsWorker.java,IPath javaFilePath = res.getFullPath();,if (res != null ) IPath javaFilePath = res.getFullPath();
FindBugsWorker.java,IWorkspace workspace = ResourcesPlugin.getWorkspace();,if (ResourcesPlugin != null ) IWorkspace workspace = ResourcesPlugin.getWorkspace();
FindBugsWorker.java,IWorkspaceRoot root = workspace.getRoot();,if (workspace != null ) IWorkspaceRoot root = workspace.getRoot();
FindBugsWorker.java,IPath wkspLocation = root.getLocation();,if (root != null ) IPath wkspLocation = root.getLocation();
FindBugsWorker.java,IPath outLocation = cpe.getOutputLocation();,if (cpe != null ) IPath outLocation = cpe.getOutputLocation();
FindBugsWorker.java,IJavaProject proj = pkgRoot.getJavaProject();,if (pkgRoot != null ) IJavaProject proj = pkgRoot.getJavaProject();
FindBugsWorker.java,outLocation = proj.getOutputLocation();,if (proj != null ) outLocation = proj.getOutputLocation();
FindBugsWorker.java,SortedBugCollection newBugCollection = bugReporter.getBugCollection();,if (bugReporter != null ) SortedBugCollection newBugCollection = bugReporter.getBugCollection();
FindBugsWorker.java,String filterName = file.getLocation().toOSString();,if (file != null ) String filterName = file.getLocation().toOSString();
FindBugsWorker.java,String filterName = file.getLocation().toOSString();,if (file != null ) String filterName = file.getLocation().toOSString();
FindBugsWorker.java,IWorkspace workspace = ResourcesPlugin.getWorkspace();,if (ResourcesPlugin != null ) IWorkspace workspace = ResourcesPlugin.getWorkspace();
FindBugsWorker.java,IWorkspaceRoot root = workspace.getRoot();,if (workspace != null ) IWorkspaceRoot root = workspace.getRoot();
FindBugsWorker.java,IPath path = classpathEntry.getOutputLocation();,if (classpathEntry != null ) IPath path = classpathEntry.getOutputLocation();
FindBugsWorker.java,IPath def = javaProject.getOutputLocation();,if (javaProject != null ) IPath def = javaProject.getOutputLocation();
FindBugsWorker.java,IPath location = resource.getLocation();,if (resource != null ) IPath location = resource.getLocation();
NonRecursiveContainerFilesCollector.java,int childType = child.getType();,if (child != null ) int childType = child.getType();
ResourceDeltaFilesCollector.java,IResource child = childDelta.getResource();,if (childDelta != null ) IResource child = childDelta.getResource();
ResourceDeltaFilesCollector.java,int childType = child.getType();,if (child != null ) int childType = child.getType();
ResourceDeltaFilesCollector.java,int deltaKind = childDelta.getKind();,if (childDelta != null ) int deltaKind = childDelta.getKind();
Project.java,xr = XMLReaderFactory.createXMLReader();,if (XMLReaderFactory != null ) xr = XMLReaderFactory.createXMLReader();
Project.java,inputFile = file.getAbsolutePath();,if (file != null ) inputFile = file.getAbsolutePath();
Lookup.java,JavaClass c = clazz.getSuperClass();,if (clazz != null ) JavaClass c = clazz.getSuperClass();
FindBugs2.java,classFactory = ClassFactory.instance();,if (ClassFactory != null ) classFactory = ClassFactory.instance();
ClassPathBuilder.java,in = manifestEntry.openResource();,if (manifestEntry != null ) in = manifestEntry.openResource();
ClassPathBuilder.java,Attributes mainAttrs = manifest.getMainAttributes();,if (manifest != null ) Attributes mainAttrs = manifest.getMainAttributes();
NestedZipFileCodeBase.java,inputStream = parentCodeBase.lookupResource(resourceName).openResource();,if (parentCodeBase != null ) inputStream = parentCodeBase.lookupResource(resourceName).openResource();
Lookup.java,JavaClass c = clazz.getSuperClass();,if (clazz != null ) JavaClass c = clazz.getSuperClass();
PreorderVisitor.java,superclassName = obj.getSuperclassName();,if (obj != null ) superclassName = obj.getSuperclassName();
MethodReturnCheck.java,int priority = annotation.getPriority();,if (annotation != null ) int priority = annotation.getPriority();
FindbugsPlugin.java,settings = ProjectFilterSettings.createDefault();,if (ProjectFilterSettings != null ) settings = ProjectFilterSettings.createDefault();
FindbugsPlugin.java,UserPreferences userPrefs = UserPreferences.createDefaultUserPreferences();,if (UserPreferences != null ) UserPreferences userPrefs = UserPreferences.createDefaultUserPreferences();
FindbugsPlugin.java,DetectorFactoryCollection factoryCollection = DetectorFactoryCollection.instance();,if (DetectorFactoryCollection != null ) DetectorFactoryCollection factoryCollection = DetectorFactoryCollection.instance();
FindbugsPlugin.java,String factoryName = st.nextToken();,if (st != null ) String factoryName = st.nextToken();
FindBugsWorker.java,Iterator<IFile> it = files.iterator();,if (files != null ) Iterator<IFile> it = files.iterator();
FindBugsWorker.java,IResource res = it.next();,if (it != null ) IResource res = it.next();
MarkerUtil.java,String warningUID = warning.getInstanceHash();,if (warning != null ) String warningUID = warning.getInstanceHash();
EclipseClasspath.java,String line = lineList.getFirst();,if (lineList != null ) String line = lineList.getFirst();
EclipseClasspath.java,len = line.length();,if (line != null ) len = line.length();
EclipseClasspath.java,line = reader.readLine();,if (reader != null ) line = reader.readLine();
EclipseClasspath.java,Attributes attributes = manifest.getMainAttributes();,if (manifest != null ) Attributes attributes = manifest.getMainAttributes();
EclipseClasspath.java,String requiredPlugin = tok.nextToken();,if (tok != null ) String requiredPlugin = tok.nextToken();
EclipseClasspath.java,requiredPlugin = requiredPlugin.trim();,if (requiredPlugin != null ) requiredPlugin = requiredPlugin.trim();
EclipseClasspath.java,jar = jar.trim();,if (jar != null ) jar = jar.trim();
EclipseClasspath.java,String dirName = aDirList.getName();,if (aDirList != null ) String dirName = aDirList.getName();
EclipseClasspath.java,WorkListItem item = workList.removeFirst();,if (workList != null ) WorkListItem item = workList.removeFirst();
EclipseClasspath.java,String s = buf.toString();,if (buf != null ) String s = buf.toString();
EclipseClasspath.java,value = buf.toString();,if (buf != null ) value = buf.toString();
PluginInfo.java,OutputFormat outformat = OutputFormat.createPrettyPrint();,if (OutputFormat != null ) OutputFormat outformat = OutputFormat.createPrettyPrint();
ZipInputStreamCodeBase.java,long sz = ze.getSize();,if (ze != null ) long sz = ze.getSize();
ZipInputStreamCodeBase.java,byte[] bytes = out.toByteArray();,if (out != null ) byte[] bytes = out.toByteArray();
FindBugsWorker.java,Set<String> analyzedClassNameSet = bugReporter.getAnalyzedClassNames();,if (bugReporter != null ) Set<String> analyzedClassNameSet = bugReporter.getAnalyzedClassNames();
FindBugsWorker.java,ClassAnnotation warningClass = oldWarning.getPrimaryClass();,if (oldWarning != null ) ClassAnnotation warningClass = oldWarning.getPrimaryClass();
Reporter.java,filesNumber = analyzedClassNameSet.size();,if (analyzedClassNameSet != null ) filesNumber = analyzedClassNameSet.size();
Reporter.java,filesNumber = findBugsProject.getFileCount();,if (findBugsProject != null ) filesNumber = findBugsProject.getFileCount();
Reporter.java,String name = clazz.getClassName();,if (clazz != null ) String name = clazz.getClassName();
MarkerUtil.java,className = bug.getPrimaryClass().getClassName();,if (bug != null ) className = bug.getPrimaryClass().getClassName();
MarkerUtil.java,packageName = bug.getPrimaryClass().getPackageName();,if (bug != null ) packageName = bug.getPrimaryClass().getPackageName();
TypeAnalysis.java,ValueNumberFrame vnaFrame = valueNumberDataflow.getStartFact(edge.getTarget());,if (valueNumberDataflow != null ) ValueNumberFrame vnaFrame = valueNumberDataflow.getStartFact(edge.getTarget());
TypeAnalysis.java,Type instanceOfType = check.getType();,if (check != null ) Type instanceOfType = check.getType();
OpcodeStack.java,Object sbVal = sbItem.getConstant();,if (sbItem != null ) Object sbVal = sbItem.getConstant();
OpcodeStack.java,appenderValue = sbVal + sVal.toString();,if (sVal != null ) appenderValue = sbVal + sVal.toString();
FindbugsPropertyPage.java,String data = minPriorityCombo.getText();,if (minPriorityCombo != null ) String data = minPriorityCombo.getText();
FindbugsPropertyPage.java,String effort = currentUserPreferences.getEffort();,if (currentUserPreferences != null ) String effort = currentUserPreferences.getEffort();
FindbugsPropertyPage.java,String fn = f.getProjectRelativePath().toString();,if (f != null ) String fn = f.getProjectRelativePath().toString();
FindbugsPropertyPage.java,Object[] result = dialog.getResult();,if (dialog != null ) Object[] result = dialog.getResult();
FindbugsPropertyPage.java,Object element = selectionIter.next();,if (selectionIter != null ) Object element = selectionIter.next();
FindbugsPropertyPage.java,DetectorFactory factory = (DetectorFactory) item.getData();,if (item != null ) DetectorFactory factory = (DetectorFactory) item.getData();
FindbugsPropertyPage.java,Table factoriesTable = availableFactoriesTableViewer.getTable();,if (availableFactoriesTableViewer != null ) Table factoriesTable = availableFactoriesTableViewer.getTable();
FindbugsPropertyPage.java,DetectorFactory factory = iterator.next();,if (iterator != null ) DetectorFactory factory = iterator.next();
FindbugsPropertyPage.java,Collection<BugPattern> patterns = factory.getReportedBugPatterns();,if (factory != null ) Collection<BugPattern> patterns = factory.getReportedBugPatterns();
FindbugsPropertyPage.java,BugPattern pattern = iter.next();,if (iter != null ) BugPattern pattern = iter.next();
FindbugsPropertyPage.java,String abbr = pattern.getAbbrev();,if (pattern != null ) String abbr = pattern.getAbbrev();
FindbugsPropertyPage.java,String element = iter.next();,if (iter != null ) String element = iter.next();
FindbugsPropertyPage.java,boolean selection = this.chkEnableFindBugs.getSelection();,if (this != null ) boolean selection = this.chkEnableFindBugs.getSelection();
FindbugsPropertyPage.java,Collection<BugPattern> patterns = factory.getReportedBugPatterns();,if (factory != null ) Collection<BugPattern> patterns = factory.getReportedBugPatterns();
FindbugsPropertyPage.java,BugPattern pattern = iter.next();,if (iter != null ) BugPattern pattern = iter.next();
FindPuzzlers.java,int flags = xm.getAccessFlags();,if (xm != null ) int flags = xm.getAccessFlags();
DescriptorFactory.java,DescriptorFactory factory = instance.get();,if (instance != null ) DescriptorFactory factory = instance.get();
FindBugsWorker.java,Iterator<IFile> it = files.iterator();,if (files != null ) Iterator<IFile> it = files.iterator();
FindBugsWorker.java,IResource res = it.next();,if (it != null ) IResource res = it.next();
FindDeadLocalStores.java,typeOfValue = TypeFrame.getTopType();,if (TypeFrame != null ) typeOfValue = TypeFrame.getTopType();
Filter.java,commandLine.categoryKey = bugCategory.getCategory();,if (bugCategory != null ) commandLine.categoryKey = bugCategory.getCategory();
Filter.java,commandLine.categoryKey = bugCategory.getCategory();,if (bugCategory != null ) commandLine.categoryKey = bugCategory.getCategory();
Filter.java,Set<String> words = bug.getTextAnnotationWords();,if (bug != null ) Set<String> words = bug.getTextAnnotationWords();
Filter.java,Set<String> words = bug.getTextAnnotationWords();,if (bug != null ) Set<String> words = bug.getTextAnnotationWords();
FindbugsPlugin.java,File prefsFile = userPrefsFile.getLocation().toFile();,if (userPrefsFile != null ) File prefsFile = userPrefsFile.getLocation().toFile();
FindbugsPropertyPage.java,String effort = currentExtendedPreferences.getEffort();,if (currentExtendedPreferences != null ) String effort = currentExtendedPreferences.getEffort();
FindbugsPropertyPage.java,filterFiles      = currentExtendedPreferences.getIncludeFilterFiles();,if (currentExtendedPreferences != null ) filterFiles      = currentExtendedPreferences.getIncludeFilterFiles();
FindbugsPropertyPage.java,filterFilesOther = currentExtendedPreferences.getExcludeFilterFiles();,if (currentExtendedPreferences != null ) filterFilesOther = currentExtendedPreferences.getExcludeFilterFiles();
FindbugsPropertyPage.java,filterFiles      = currentExtendedPreferences.getExcludeFilterFiles();,if (currentExtendedPreferences != null ) filterFiles      = currentExtendedPreferences.getExcludeFilterFiles();
FindbugsPropertyPage.java,filterFilesOther = currentExtendedPreferences.getIncludeFilterFiles();,if (currentExtendedPreferences != null ) filterFilesOther = currentExtendedPreferences.getIncludeFilterFiles();
FindbugsPropertyPage.java,fFiles  = currentExtendedPreferences.getIncludeFilterFiles();,if (currentExtendedPreferences != null ) fFiles  = currentExtendedPreferences.getIncludeFilterFiles();
FindbugsPropertyPage.java,fOFiles = currentExtendedPreferences.getExcludeFilterFiles();,if (currentExtendedPreferences != null ) fOFiles = currentExtendedPreferences.getExcludeFilterFiles();
FindbugsPropertyPage.java,fFiles  = currentExtendedPreferences.getExcludeFilterFiles();,if (currentExtendedPreferences != null ) fFiles  = currentExtendedPreferences.getExcludeFilterFiles();
FindbugsPropertyPage.java,fOFiles = currentExtendedPreferences.getIncludeFilterFiles();,if (currentExtendedPreferences != null ) fOFiles = currentExtendedPreferences.getIncludeFilterFiles();
FindBugsTask.java,int rc = getFindbugsEngine().executeJava();,if (getFindbugsEngine() != null ) int rc = getFindbugsEngine().executeJava();
FindBugsTask.java,String[] pluginFileList = pluginList.list();,if (pluginList != null ) String[] pluginFileList = pluginList.list();
FindBugsTask.java,int rc = findbugsEngine.executeJava();,if (findbugsEngine != null ) int rc = findbugsEngine.executeJava();
GenericUtilities.java,String result = obj.toPlainString();,if (obj != null ) String result = obj.toPlainString();
XFactory.java,XFactory xFactory = AnalysisContext.currentXFactory();,if (AnalysisContext != null ) XFactory xFactory = AnalysisContext.currentXFactory();
ReflectiveClasses.java,XFactory xFactory = AnalysisContext.currentXFactory();,if (AnalysisContext != null ) XFactory xFactory = AnalysisContext.currentXFactory();
LazyInit.java,ClassDescriptor fieldType = DescriptorFactory.createClassDescriptorFromFieldSignature(xfield.getSignature());,if (DescriptorFactory != null ) ClassDescriptor fieldType = DescriptorFactory.createClassDescriptorFromFieldSignature(xfield.getSignature());
LazyInit.java,BitSet postStore = domAnalysis.getAllDominatedBy(store.getBasicBlock());,if (domAnalysis != null ) BitSet postStore = domAnalysis.getAllDominatedBy(store.getBasicBlock());
LazyInit.java,InstructionHandle nextHandle = handle.getNext();,if (handle != null ) InstructionHandle nextHandle = handle.getNext();
LazyInit.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
FindNullDeref.java,int position = location.getHandle().getPosition();,if (location != null ) int position = location.getHandle().getPosition();
FindNullDeref.java,ConstantPool constantPool = classContext.getJavaClass().getConstantPool();,if (classContext != null ) ConstantPool constantPool = classContext.getJavaClass().getConstantPool();
FindNullDeref.java,Code code = method.getCode();,if (method != null ) Code code = method.getCode();
Dataflow.java,Iterator<BasicBlock> i = blockOrder.blockIterator();,if (blockOrder != null ) Iterator<BasicBlock> i = blockOrder.blockIterator();
FindbugsPropertyPage.java,filterFiles = currentExtendedPreferences.getIncludeFilterFiles();,if (currentExtendedPreferences != null ) filterFiles = currentExtendedPreferences.getIncludeFilterFiles();
FindbugsPropertyPage.java,filterFiles = currentExtendedPreferences.getExcludeFilterFiles();,if (currentExtendedPreferences != null ) filterFiles = currentExtendedPreferences.getExcludeFilterFiles();
IsNullValueDataflowFactory.java,Location loc = locs.next();,if (locs != null ) Location loc = locs.next();
Strings.java,final int findLen = find.length();,if (find != null ) final int findLen = find.length();
UnreadFields.java,XFactory xFactory = currentAnalysisContext.currentXFactory();,if (currentAnalysisContext != null ) XFactory xFactory = currentAnalysisContext.currentXFactory();
VolatileUsage.java,int flags = obj.getAccessFlags();,if (obj != null ) int flags = obj.getAccessFlags();
Analysis.java,Instruction ins = location.getHandle().getInstruction();,if (location != null ) Instruction ins = location.getHandle().getInstruction();
FindBugs2.java,Collection<ClassDescriptor> referencedClassDescriptorList = classNameAndInfo.getReferencedClassDescriptorList();,if (classNameAndInfo != null ) Collection<ClassDescriptor> referencedClassDescriptorList = classNameAndInfo.getReferencedClassDescriptorList();
FieldOrMethodDescriptor.java,AnalysisContext analysisContext = AnalysisContext.currentAnalysisContext();,if (AnalysisContext != null ) AnalysisContext analysisContext = AnalysisContext.currentAnalysisContext();
XFactory.java,String returnTypeSig = parser.getReturnTypeSignature();,if (parser != null ) String returnTypeSig = parser.getReturnTypeSignature();
XFactory.java,IAnalysisCache analysisCache = Global.getAnalysisCache();,if (Global != null ) IAnalysisCache analysisCache = Global.getAnalysisCache();
XFactory.java,XFactory xFactory = AnalysisContext.currentXFactory();,if (AnalysisContext != null ) XFactory xFactory = AnalysisContext.currentXFactory();
XFactory.java,XFactory xFactory = AnalysisContext.currentXFactory();,if (AnalysisContext != null ) XFactory xFactory = AnalysisContext.currentXFactory();
XFactory.java,JavaClass superClass = Repository.lookupClass(classname).getSuperClass();,if (Repository != null ) JavaClass superClass = Repository.lookupClass(classname).getSuperClass();
XFactory.java,JavaClass superClass = javaClass.getSuperClass();,if (javaClass != null ) JavaClass superClass = javaClass.getSuperClass();
XFactory.java,String superClassName = superClass.getClassName();,if (superClass != null ) String superClassName = superClass.getClassName();
XFactory.java,XClass xclass = xFactory.getXClass(fieldDesc.getClassDescriptor());,if (xFactory != null ) XClass xclass = xFactory.getXClass(fieldDesc.getClassDescriptor());
Methods.java,private XFactory xFactory = AnalysisContext.currentXFactory();,if (AnalysisContext != null ) private XFactory xFactory = AnalysisContext.currentXFactory();
ClassDataAnalysisEngine.java,int length = codeBaseEntry.getNumBytes();,if (codeBaseEntry != null ) int length = codeBaseEntry.getNumBytes();
ClassDataAnalysisEngine.java,in = codeBaseEntry.openResource();,if (codeBaseEntry != null ) in = codeBaseEntry.openResource();
ClassDataAnalysisEngine.java,byte[] data = byteSink.toByteArray();,if (byteSink != null ) byte[] data = byteSink.toByteArray();
ClassPathBuilder.java,in = new DataInputStream(entry.openResource());,if (DataInputStream(entry != null ) in = new DataInputStream(entry.openResource());
IncompatibleTypes.java,ClassDescriptor lhsDescriptor = ClassDescriptor.createClassDescriptorFromDottedClassName(lhsType.getClassName());,if (ClassDescriptor != null ) ClassDescriptor lhsDescriptor = ClassDescriptor.createClassDescriptorFromDottedClassName(lhsType.getClassName());
IncompatibleTypes.java,ClassDescriptor rhsDescriptor = ClassDescriptor.createClassDescriptorFromDottedClassName(rhsType.getClassName());,if (ClassDescriptor != null ) ClassDescriptor rhsDescriptor = ClassDescriptor.createClassDescriptorFromDottedClassName(rhsType.getClassName());
ClassParserUsingBCEL.java,ClassDescriptor classDescriptor = ClassDescriptor.createClassDescriptorFromDottedClassName(javaClass.getClassName());,if (ClassDescriptor != null ) ClassDescriptor classDescriptor = ClassDescriptor.createClassDescriptorFromDottedClassName(javaClass.getClassName());
LazyInit.java,ClassDescriptor fieldType = ClassDescriptor.fromFieldSignature(xfield.getSignature());,if (ClassDescriptor != null ) ClassDescriptor fieldType = ClassDescriptor.fromFieldSignature(xfield.getSignature());
StaticCalendarDetector.java,ClassDescriptor classOfField = ClassDescriptor.fromFieldSignature(aField.getSignature());,if (ClassDescriptor != null ) ClassDescriptor classOfField = ClassDescriptor.fromFieldSignature(aField.getSignature());
InstantiateStaticClass.java,String superClassName = xClass.getSuperclassDescriptor().getClassName();,if (xClass != null ) String superClassName = xClass.getSuperclassDescriptor().getClassName();
FindHEmismatch.java,ineritedEqualsFromAbstractClass = we.isAbstract();,if (we != null ) ineritedEqualsFromAbstractClass = we.isAbstract();
InvalidJUnitTest.java,String sName = jClass.getSuperclassName();,if (jClass != null ) String sName = jClass.getSuperclassName();
InvalidJUnitTest.java,JavaClass sClass = jClass.getSuperClass();,if (jClass != null ) JavaClass sClass = jClass.getSuperClass();
SerializableIdiom.java,JavaClass superClass = obj.getSuperClass();,if (obj != null ) JavaClass superClass = obj.getSuperClass();
SerializableIdiom.java,Method[] superClassMethods = superClass.getMethods();,if (superClass != null ) Method[] superClassMethods = superClass.getMethods();
ClassContext.java,IAnalysisCache analysisCache = Global.getAnalysisCache();,if (Global != null ) IAnalysisCache analysisCache = Global.getAnalysisCache();
CloneIdiom.java,JavaClass superClass = obj.getSuperClass();,if (obj != null ) JavaClass superClass = obj.getSuperClass();
FindHEmismatch.java,whereEqual = we.getClassName();,if (we != null ) whereEqual = we.getClassName();
FindHEmismatch.java,classThatDefinesEqualsIsAbstract = we.isAbstract();,if (we != null ) classThatDefinesEqualsIsAbstract = we.isAbstract();
FindHEmismatch.java,whereHashCode = wh.getClassName();,if (wh != null ) whereHashCode = wh.getClassName();
InstantiateStaticClass.java,String superClassName = cls.getSuperclassName();,if (cls != null ) String superClassName = cls.getSuperclassName();
InstantiateStaticClass.java,Method[] methods = cls.getMethods();,if (cls != null ) Method[] methods = cls.getMethods();
InstantiateStaticClass.java,Field[] fields = cls.getFields();,if (cls != null ) Field[] fields = cls.getFields();
IteratorIdioms.java,JavaClass cls = classContext.getJavaClass();,if (classContext != null ) JavaClass cls = classContext.getJavaClass();
Naming.java,JavaClass clazz = Repository.lookupClass(m.getClassName());,if (Repository != null ) JavaClass clazz = Repository.lookupClass(m.getClassName());
ClassParser.java,fieldDescriptorList[i] = readField(builder.getClassDescriptor());,if (readField(builder != null ) fieldDescriptorList[i] = readField(builder.getClassDescriptor());
ClassParser.java,methodDescriptorList[i] = readMethod(builder.getClassDescriptor());,if (readMethod(builder != null ) methodDescriptorList[i] = readMethod(builder.getClassDescriptor());
FindMaskedFields.java,fieldName = field.getName();,if (field != null ) fieldName = field.getName();
FindMaskedFields.java,fields = superClass.getFields();,if (superClass != null ) fields = superClass.getFields();
FindMaskedFields.java,fieldName = fld.getName();,if (fld != null ) fieldName = fld.getName();
FindMaskedFields.java,String superClassName = superClass.getClassName();,if (superClass != null ) String superClassName = superClass.getClassName();
PruneUnconditionalExceptionThrowerEdges.java,JavaClass primaryJavaClass = Repository.lookupClass(primaryXMethod.getClassName());,if (Repository != null ) JavaClass primaryJavaClass = Repository.lookupClass(primaryXMethod.getClassName());
PruneUnconditionalExceptionThrowerEdges.java,Method method = primaryClassAndMethod.getMethod();,if (primaryClassAndMethod != null ) Method method = primaryClassAndMethod.getMethod();
PruneUnconditionalExceptionThrowerEdges.java,Method method = classAndMethod.getMethod();,if (classAndMethod != null ) Method method = classAndMethod.getMethod();
RuntimeExceptionCapture.java,Method[] methods = clazz.getMethods();,if (clazz != null ) Method[] methods = clazz.getMethods();
RuntimeExceptionCapture.java,ExceptionTable et = method.getExceptionTable();,if (method != null ) ExceptionTable et = method.getExceptionTable();
RuntimeExceptionCapture.java,String[] names = et.getExceptionNames();,if (et != null ) String[] names = et.getExceptionNames();
StaticCalendarDetector.java,String tFieldSig = aField.getSignature();,if (aField != null ) String tFieldSig = aField.getSignature();
StaticCalendarDetector.java,ObjectType tType = (ObjectType) aField.getType();,if (aField != null ) ObjectType tType = (ObjectType) aField.getType();
Hierarchy.java,ExceptionTable exTable = method.getMethod().getExceptionTable();,if (method != null ) ExceptionTable exTable = method.getMethod().getExceptionTable();
Hierarchy.java,String[] exNameList = exTable.getExceptionNames();,if (exTable != null ) String[] exNameList = exTable.getExceptionNames();
Hierarchy2.java,JavaClass sClass = jClass.getSuperClass();,if (jClass != null ) JavaClass sClass = jClass.getSuperClass();
UnconditionalValueDerefAnalysis.java,ParameterNullnessProperty targetDerefParamSet = database.getProperty(target.toMethodDescriptor());,if (database != null ) ParameterNullnessProperty targetDerefParamSet = database.getProperty(target.toMethodDescriptor());
NonNullContractCollector.java,String methodName = classAndMethod.getMethod().getName();,if (classAndMethod != null ) String methodName = classAndMethod.getMethod().getName();
NonNullContractCollector.java,String signature = classAndMethod.getMethod().getSignature();,if (classAndMethod != null ) String signature = classAndMethod.getMethod().getSignature();
NonNullReturnValueAnnotationChecker.java,XMethod xmethod = javaClassAndMethod.toXMethod();,if (javaClassAndMethod != null ) XMethod xmethod = javaClassAndMethod.toXMethod();
NonNullReturnValueAnnotationChecker.java,Boolean prop = database.getProperty(xmethod.getMethodDescriptor());,if (database != null ) Boolean prop = database.getProperty(xmethod.getMethodDescriptor());
AnalysisContext.java,String name = jc.getSourceFileName();,if (jc != null ) String name = jc.getSourceFileName();
Hierarchy.java,JavaClass[] superClassList = receiverClass.getSuperClasses();,if (receiverClass != null ) JavaClass[] superClassList = receiverClass.getSuperClasses();
Hierarchy.java,Field[] fieldList = jclass.getFields();,if (jclass != null ) Field[] fieldList = jclass.getFields();
Hierarchy.java,jclass = jclass.getSuperClass();,if (jclass != null ) jclass = jclass.getSuperClass();
LoadedFieldSetFactory.java,"JavaClass jclass = getJavaClass(analysisCache, descriptor.getClassDescriptor());","if (descriptor != null ) JavaClass jclass = getJavaClass(analysisCache, descriptor.getClassDescriptor());"
TopologicalSort.java,this.result = new ArrayList<E>(consider.size());,if (ArrayList<E>(consider != null ) this.result = new ArrayList<E>(consider.size());
OpcodeStack.java,AnalysisContext analysisContext = AnalysisContext.currentAnalysisContext();,if (AnalysisContext != null ) AnalysisContext analysisContext = AnalysisContext.currentAnalysisContext();
OpcodeStack.java,"JavaClass jclass = getJavaClass(analysisCache, descriptor.getClassDescriptor());","if (descriptor != null ) JavaClass jclass = getJavaClass(analysisCache, descriptor.getClassDescriptor());"
FindSqlInjection.java,BasicBlock block = loc.getBasicBlock();,if (loc != null ) BasicBlock block = loc.getBasicBlock();
FindSqlInjection.java,InstructionHandle lastInstruction = block.getLastInstruction();,if (block != null ) InstructionHandle lastInstruction = block.getLastInstruction();
GenericUtilities.java,String result = obj.toString();,if (obj != null ) String result = obj.toString();
PropertyDatabase.java,XFactory xFactory = AnalysisContext.currentXFactory();,if (AnalysisContext != null ) XFactory xFactory = AnalysisContext.currentXFactory();
OSXAdapter.java,theApplication = new com.apple.eawt.Application();,if (com != null ) theApplication = new com.apple.eawt.Application();
OSXAdapter.java,theApplication = new com.apple.eawt.Application();,if (com != null ) theApplication = new com.apple.eawt.Application();
Dataflow.java,String shortAnalysisName = analysis.getClass().getName();,if (analysis != null ) String shortAnalysisName = analysis.getClass().getName();
Subtypes.java,Constant[] constants = cp.getConstantPool();,if (cp != null ) Constant[] constants = cp.getConstantPool();
XFactory.java,IAnalysisCache analysisCache = Global.getAnalysisCache();,if (Global != null ) IAnalysisCache analysisCache = Global.getAnalysisCache();
AnalysisCache.java,allClassContexts = map.values();,if (map != null ) allClassContexts = map.values();
AnalysisCache.java,Collection<ClassContext> allClassContexts = getAllClassAnalysis(ClassContext.class).values();,if (getAllClassAnalysis(ClassContext != null ) Collection<ClassContext> allClassContexts = getAllClassAnalysis(ClassContext.class).values();
AnalysisError.java,StackTraceElement[] exceptionStackTrace = exception.getStackTrace();,if (exception != null ) StackTraceElement[] exceptionStackTrace = exception.getStackTrace();
ClassContext.java,final String thisClassName = getJavaClass().getClassName();,if (getJavaClass() != null ) final String thisClassName = getJavaClass().getClassName();
ClassParserUsingASM.java,ArrayList<ClassDescriptor> calledClasses = new ArrayList<ClassDescriptor>(referencedClasses.cardinality());,if (ArrayList<ClassDescriptor>(referencedClasses != null ) ArrayList<ClassDescriptor> calledClasses = new ArrayList<ClassDescriptor>(referencedClasses.cardinality());
TopologicalSort.java,List<E> result = new ArrayList<E>(elements.size());,if (ArrayList<E>(elements != null ) List<E> result = new ArrayList<E>(elements.size());
UnconditionalValueDerefAnalysis.java,NullnessAnnotationDatabase database = AnalysisContext.currentAnalysisContext().getNullnessAnnotationDatabase();,if (AnalysisContext != null ) NullnessAnnotationDatabase database = AnalysisContext.currentAnalysisContext().getNullnessAnnotationDatabase();
UnconditionalValueDerefAnalysis.java,NullnessAnnotationDatabase database = AnalysisContext.currentAnalysisContext().getNullnessAnnotationDatabase();,if (AnalysisContext != null ) NullnessAnnotationDatabase database = AnalysisContext.currentAnalysisContext().getNullnessAnnotationDatabase();
UnconditionalValueDerefAnalysis.java,NullnessAnnotationDatabase database = AnalysisContext.currentAnalysisContext().getNullnessAnnotationDatabase();,if (AnalysisContext != null ) NullnessAnnotationDatabase database = AnalysisContext.currentAnalysisContext().getNullnessAnnotationDatabase();
DerefFinder.java,NullnessAnnotationDatabase db = AnalysisContext.currentAnalysisContext().getNullnessAnnotationDatabase();,if (AnalysisContext != null ) NullnessAnnotationDatabase db = AnalysisContext.currentAnalysisContext().getNullnessAnnotationDatabase();
IsNullValueAnalysis.java,NullnessAnnotationDatabase db = AnalysisContext.currentAnalysisContext().getNullnessAnnotationDatabase();,if (AnalysisContext != null ) NullnessAnnotationDatabase db = AnalysisContext.currentAnalysisContext().getNullnessAnnotationDatabase();
TypeQualifierApplications.java,result = TypeQualifierResolver.resolveTypeQualifierNicknames(m.getAnnotations());,if (TypeQualifierResolver != null ) result = TypeQualifierResolver.resolveTypeQualifierNicknames(m.getAnnotations());
IsNullValueAnalysis.java,value = IsNullValue.nonNullValue();,if (IsNullValue != null ) value = IsNullValue.nonNullValue();
IsNullValueAnalysis.java,value = IsNullValue.nonReportingNotNullValue();,if (IsNullValue != null ) value = IsNullValue.nonReportingNotNullValue();
JAIFParser.java,t = scanner.peekToken();,if (scanner != null ) t = scanner.peekToken();
JAIFParser.java,int c = reader.read();,if (reader != null ) int c = reader.read();
TypeQualifierApplications.java,XMethod xmethod = accumulator.getXmethod();,if (accumulator != null ) XMethod xmethod = accumulator.getXmethod();
Subtypes2.java,ClassVertex vertex = workList.removeFirst();,if (workList != null ) ClassVertex vertex = workList.removeFirst();
Subtypes2.java,ClassDescriptor superclassDescriptor = vertex.getXClass().getSuperclassDescriptor();,if (vertex != null ) ClassDescriptor superclassDescriptor = vertex.getXClass().getSuperclassDescriptor();
TestingGround.java,ClassInfo xclass = (ClassInfo) classContext.getXClass();,if (classContext != null ) ClassInfo xclass = (ClassInfo) classContext.getXClass();
TestingGround.java,Collection<ClassDescriptor> annotations = xclass.getAnnotationDescriptors();,if (xclass != null ) Collection<ClassDescriptor> annotations = xclass.getAnnotationDescriptors();
TestingGround.java,JavaClass jClass = classContext.getJavaClass();,if (classContext != null ) JavaClass jClass = classContext.getJavaClass();
Analysis.java,IAnalysisCache analysisCache = Global.getAnalysisCache();,if (Global != null ) IAnalysisCache analysisCache = Global.getAnalysisCache();
Analysis.java,Instruction ins = location.getHandle().getInstruction();,if (location != null ) Instruction ins = location.getHandle().getInstruction();
CombineJarsForAnalysis.java,String s = in.readLine();,if (in != null ) String s = in.readLine();
CombineJarsForAnalysis.java,String name = ze.getName();,if (ze != null ) String name = ze.getName();
BackwardTypeQualifierDataflowAnalysis.java,ValueNumber vn = vnaFrameAtStore.getTopValue();,if (vnaFrameAtStore != null ) ValueNumber vn = vnaFrameAtStore.getTopValue();
BackwardTypeQualifierDataflowAnalysis.java,SignatureParser sigParser = new SignatureParser(calledMethod.getSignature());,if (SignatureParser(calledMethod != null ) SignatureParser sigParser = new SignatureParser(calledMethod.getSignature());
BackwardTypeQualifierDataflowAnalysis.java,ValueNumber vn = vnaFrameAtStore.getTopValue();,if (vnaFrameAtStore != null ) ValueNumber vn = vnaFrameAtStore.getTopValue();
BackwardTypeQualifierDataflowAnalysis.java,ValueNumber topValue = vnaFrameAtReturn.getTopValue();,if (vnaFrameAtReturn != null ) ValueNumber topValue = vnaFrameAtReturn.getTopValue();
ForwardTypeQualifierDataflowAnalysis.java,ValueNumberFrame vnaFrameAtEntry = vnaDataflow.getStartFact(cfg.getEntry());,if (vnaDataflow != null ) ValueNumberFrame vnaFrameAtEntry = vnaDataflow.getStartFact(cfg.getEntry());
ForwardTypeQualifierDataflowAnalysis.java,SignatureParser sigParser = new SignatureParser(xmethod.getSignature());,if (SignatureParser(xmethod != null ) SignatureParser sigParser = new SignatureParser(xmethod.getSignature());
ForwardTypeQualifierDataflowAnalysis.java,short opcode = handle.getInstruction().getOpcode();,if (handle != null ) short opcode = handle.getInstruction().getOpcode();
Subtypes2.java,Type aBaseType = aArrType.getBasicType();,if (aArrType != null ) Type aBaseType = aArrType.getBasicType();
Subtypes2.java,Type bBaseType = bArrType.getBasicType();,if (bArrType != null ) Type bBaseType = bArrType.getBasicType();
Subtypes2.java,int aNumDimensions = aArrType.getDimensions();,if (aArrType != null ) int aNumDimensions = aArrType.getDimensions();
Subtypes2.java,int bNumDimensions = bArrType.getDimensions();,if (bArrType != null ) int bNumDimensions = bArrType.getDimensions();
OpcodeStack.java,r+= getSignature().hashCode();,if (getSignature() != null ) r+= getSignature().hashCode();
OpcodeStack.java,int len = getSignature().length();,if (getSignature() != null ) int len = getSignature().length();
OpcodeStack.java,ArrayList<Item> result = new ArrayList<Item>(list.size());,if (ArrayList<Item>(list != null ) ArrayList<Item> result = new ArrayList<Item>(list.size());
OpcodeStack.java,r+= signature.hashCode();,if (signature != null ) r+= signature.hashCode();
OpcodeStack.java,int len = signature.length();,if (signature != null ) int len = signature.length();
OpcodeStack.java,Code code = v.getMethod().getCode();,if (v != null ) Code code = v.getMethod().getCode();
OpcodeStack.java,int count = jumpEntries.size();,if (jumpEntries != null ) int count = jumpEntries.size();
OpcodeStack.java,CodeException[] exceptionTable = code.getExceptionTable();,if (code != null ) CodeException[] exceptionTable = code.getExceptionTable();
OpcodeStack.java,reg += it.getSize();,if (it != null ) reg += it.getSize();
CheckTypeQualifiers.java,"checkLocation = ""Location "" + loc.toCompactString();","if (loc != null ) checkLocation = ""Location "" + loc.toCompactString();"
ExceptionSet.java,result = result.getFirstCommonSuperclass(i.next());,if (result != null ) result = result.getFirstCommonSuperclass(i.next());
Subtypes2.java,Type aBaseType = aArrType.getBasicType();,if (aArrType != null ) Type aBaseType = aArrType.getBasicType();
Subtypes2.java,Type bBaseType = bArrType.getBasicType();,if (bArrType != null ) Type bBaseType = bArrType.getBasicType();
Subtypes2.java,int aNumDimensions = aArrType.getDimensions();,if (aArrType != null ) int aNumDimensions = aArrType.getDimensions();
Subtypes2.java,int bNumDimensions = bArrType.getDimensions();,if (bArrType != null ) int bNumDimensions = bArrType.getDimensions();
Subtypes2.java,ClassVertex current = workList.removeFirst();,if (workList != null ) ClassVertex current = workList.removeFirst();
BackwardTypeQualifierDataflowAnalysis.java,ValueNumber vn = vnaFrameAtStore.getTopValue();,if (vnaFrameAtStore != null ) ValueNumber vn = vnaFrameAtStore.getTopValue();
BackwardTypeQualifierDataflowAnalysis.java,InvokeInstruction inv = (InvokeInstruction) handle.getInstruction();,if (handle != null ) InvokeInstruction inv = (InvokeInstruction) handle.getInstruction();
BackwardTypeQualifierDataflowAnalysis.java,short opcode = handle.getInstruction().getOpcode();,if (handle != null ) short opcode = handle.getInstruction().getOpcode();
ForwardTypeQualifierDataflowAnalysis.java,ValueNumber topValue = vnaFrameAfterInstruction.getTopValue();,if (vnaFrameAfterInstruction != null ) ValueNumber topValue = vnaFrameAfterInstruction.getTopValue();
TypeQualifierValueSet.java,"Set<Location> locSet = getOrCreateLocationSet(dest, entry.getKey());","if (entry != null ) Set<Location> locSet = getOrCreateLocationSet(dest, entry.getKey());"
NullDerefAndRedundantComparisonFinder.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
TypeAnalysis.java,Class[] exceptionList = exceptionThrower.getExceptions();,if (exceptionThrower != null ) Class[] exceptionList = exceptionThrower.getExceptions();
TigerSubstitutesTest.java,Class c = test.getClass();,if (test != null ) Class c = test.getClass();
BackwardTypeQualifierDataflowAnalysis.java,ValueNumberFrame targetVnaFrame = vnaDataflow.getStartFact(edge.getTarget());,if (vnaDataflow != null ) ValueNumberFrame targetVnaFrame = vnaDataflow.getStartFact(edge.getTarget());
BackwardTypeQualifierDataflowAnalysis.java,ValueNumberFrame sourceVnaFrame = vnaDataflow.getResultFact(edge.getSource());,if (vnaDataflow != null ) ValueNumberFrame sourceVnaFrame = vnaDataflow.getResultFact(edge.getSource());
BackwardTypeQualifierDataflowAnalysis.java,SignatureParser sigParser = new SignatureParser(calledMethod.getSignature());,if (SignatureParser(calledMethod != null ) SignatureParser sigParser = new SignatureParser(calledMethod.getSignature());
BackwardTypeQualifierDataflowAnalysis.java,ValueNumberFrame vnaFrameAtExit = vnaDataflow.getStartFact(cfg.getExit());,if (vnaDataflow != null ) ValueNumberFrame vnaFrameAtExit = vnaDataflow.getStartFact(cfg.getExit());
BackwardTypeQualifierDataflowAnalysis.java,ValueNumber returnValue = vnaFrameAtExit.getTopValue();,if (vnaFrameAtExit != null ) ValueNumber returnValue = vnaFrameAtExit.getTopValue();
ForwardTypeQualifierDataflowFactory.java,IAnalysisCache analysisCache = Global.getAnalysisCache();,if (Global != null ) IAnalysisCache analysisCache = Global.getAnalysisCache();
Analysis.java,InstructionList il = methodGen.getInstructionList();,if (methodGen != null ) InstructionList il = methodGen.getInstructionList();
Analysis.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
Analysis.java,Instruction ins = location.getHandle().getInstruction();,if (location != null ) Instruction ins = location.getHandle().getInstruction();
TypeQualifierDataflowFactory.java,IAnalysisCache analysisCache = Global.getAnalysisCache();,if (Global != null ) IAnalysisCache analysisCache = Global.getAnalysisCache();
TypeQualifierDataflowAnalysis.java,short opcode = handle.getInstruction().getOpcode();,if (handle != null ) short opcode = handle.getInstruction().getOpcode();
TypeQualifierDataflowAnalysis.java,ValueNumber topValue = vnaFrameAfterInstruction.getTopValue();,if (vnaFrameAfterInstruction != null ) ValueNumber topValue = vnaFrameAfterInstruction.getTopValue();
TypeQualifierDataflowAnalysis.java,ValueNumberFrame vnaFrameAtEntry = vnaDataflow.getStartFact(cfg.getEntry());,if (vnaDataflow != null ) ValueNumberFrame vnaFrameAtEntry = vnaDataflow.getStartFact(cfg.getEntry());
CombineJarsForAnalysis.java,String fInName = in.readLine();,if (in != null ) String fInName = in.readLine();
CombineJarsForAnalysis.java,ZipEntry ze = (ZipEntry) e.nextElement();,if (e != null ) ZipEntry ze = (ZipEntry) e.nextElement();
XFactory.java,XFactory xFactory = AnalysisContext.currentXFactory();,if (AnalysisContext != null ) XFactory xFactory = AnalysisContext.currentXFactory();
XFactory.java,XClass xclass = xFactory.getXClass(fieldDesc.getClassDescriptor());,if (xFactory != null ) XClass xclass = xFactory.getXClass(fieldDesc.getClassDescriptor());
NoteTypeQualifiers.java,String[] interfaceNames = obj.getInterfaceNames();,if (obj != null ) String[] interfaceNames = obj.getInterfaceNames();
AbstractClassMember.java,cmp = className.compareTo(other.getClassName());,if (className != null ) cmp = className.compareTo(other.getClassName());
AbstractClassMember.java,cmp = name.compareTo(other.getName());,if (name != null ) cmp = name.compareTo(other.getName());
AbstractClassMember.java,cmp = name.compareTo(other.getName());,if (name != null ) cmp = name.compareTo(other.getName());
AbstractClassMember.java,cmp = signature.compareTo(other.getSignature());,if (signature != null ) cmp = signature.compareTo(other.getSignature());
Hierarchy.java,Field[] fieldList = classDefiningField.getFields();,if (classDefiningField != null ) Field[] fieldList = classDefiningField.getFields();
Hierarchy.java,classDefiningField = classDefiningField.getSuperClass();,if (classDefiningField != null ) classDefiningField = classDefiningField.getSuperClass();
Hierarchy.java,String realClassName = classDefiningField.getClassName();,if (classDefiningField != null ) String realClassName = classDefiningField.getClassName();
Hierarchy.java,int accessFlags = field.getAccessFlags();,if (field != null ) int accessFlags = field.getAccessFlags();
XFactory.java,XFactory xFactory =AnalysisContext.currentXFactory();,if (=AnalysisContext != null ) XFactory xFactory =AnalysisContext.currentXFactory();
XFactory.java,int accessFlags = field.getAccessFlags();,if (field != null ) int accessFlags = field.getAccessFlags();
UnconditionalValueDerefAnalysis.java,ParameterNullnessProperty targetDerefParamSet = database.getProperty(target.toXMethod());,if (database != null ) ParameterNullnessProperty targetDerefParamSet = database.getProperty(target.toXMethod());
ClassParserUsingBCEL.java,String className = obj.getBytes(javaClass.getConstantPool());,if (obj != null ) String className = obj.getBytes(javaClass.getConstantPool());
AnalyzingDialog.java,MainFrame instance = MainFrame.getInstance();,if (MainFrame != null ) MainFrame instance = MainFrame.getInstance();
BugLoader.java,MainFrame instance = MainFrame.getInstance();,if (MainFrame != null ) MainFrame instance = MainFrame.getInstance();
IsNullValueAnalysis.java,Iterator<Edge> i = cfg.edgeIterator();,if (cfg != null ) Iterator<Edge> i = cfg.edgeIterator();
IsNullValueAnalysis.java,int srcBlockId = edge.getSource().getLabel();,if (edge != null ) int srcBlockId = edge.getSource().getLabel();
ClassParser.java,fieldDescriptorList[i] = readField(classInfo.getClassDescriptor());,if (readField(classInfo != null ) fieldDescriptorList[i] = readField(classInfo.getClassDescriptor());
ClassParser.java,methodDescriptorList[i] = readMethod(classInfo.getClassDescriptor());,if (readMethod(classInfo != null ) methodDescriptorList[i] = readMethod(classInfo.getClassDescriptor());
Subtypes2.java,Type typeBasicType = typeAsArrayType.getBasicType();,if (typeAsArrayType != null ) Type typeBasicType = typeAsArrayType.getBasicType();
Subtypes2.java,Type possibleSupertypeBasicType = possibleSupertypeAsArrayType.getBasicType();,if (possibleSupertypeAsArrayType != null ) Type possibleSupertypeBasicType = possibleSupertypeAsArrayType.getBasicType();
ClassInfo.java,String dottedClassName = getClassDescriptor().toDottedClassName();,if (getClassDescriptor() != null ) String dottedClassName = getClassDescriptor().toDottedClassName();
OpcodeStack.java,List<Item> jumpStackEntry = jumpStackEntries.get(dbc.getPC());,if (jumpStackEntries != null ) List<Item> jumpStackEntry = jumpStackEntries.get(dbc.getPC());
FindBugsWorker.java,Set analyzedClassNameSet = bugReporter.getAnalyzedClassNames();,if (bugReporter != null ) Set analyzedClassNameSet = bugReporter.getAnalyzedClassNames();
FindBugsWorker.java,BugInstance newWarning = (BugInstance) i.next();,if (i != null ) BugInstance newWarning = (BugInstance) i.next();
FindbugsPropertyPage.java,BugPattern pattern = (BugPattern) i.next();,if (i != null ) BugPattern pattern = (BugPattern) i.next();
FindbugsPropertyPage.java,DetectorFactory factory = (DetectorFactory) iterator.next();,if (iterator != null ) DetectorFactory factory = (DetectorFactory) iterator.next();
FindbugsPropertyPage.java,String element = (String) iter.next();,if (iter != null ) String element = (String) iter.next();
FindbugsPropertyPage.java,Collection patterns = factory.getReportedBugPatterns();,if (factory != null ) Collection patterns = factory.getReportedBugPatterns();
FindbugsPropertyPage.java,BugPattern pattern = (BugPattern) iter.next();,if (iter != null ) BugPattern pattern = (BugPattern) iter.next();
MarkerUtil.java,BugInstance bugInstance = (BugInstance) i.next();,if (i != null ) BugInstance bugInstance = (BugInstance) i.next();
FindbugsPlugin.java,boolean showUserLast = UserAnnotationsView.isVisible();,if (UserAnnotationsView != null ) boolean showUserLast = UserAnnotationsView.isVisible();
FindbugsPlugin.java,IWorkbenchPage[] pages = FindbugsPlugin.getActiveWorkbenchWindow().getPages();,if (FindbugsPlugin != null ) IWorkbenchPage[] pages = FindbugsPlugin.getActiveWorkbenchWindow().getPages();
FindbugsPlugin.java,IWorkbenchPage[] pages = FindbugsPlugin.getActiveWorkbenchWindow().getPages();,if (FindbugsPlugin != null ) IWorkbenchPage[] pages = FindbugsPlugin.getActiveWorkbenchWindow().getPages();
MarkerShowDetailsAction.java,IMarker marker = (IMarker) iter.next();,if (iter != null ) IMarker marker = (IMarker) iter.next();
FindBugsBuilder.java,Collection files = collector.getFiles();,if (collector != null ) Collection files = collector.getFiles();
FindBugsWorker.java,Iterator iter = files.iterator();,if (files != null ) Iterator iter = files.iterator();
FindBugsWorker.java,IResource res = (IResource) iter.next();,if (iter != null ) IResource res = (IResource) iter.next();
FindBugsWorker.java,Iterator it = files.iterator();,if (files != null ) Iterator it = files.iterator();
FindBugsWorker.java,IResource res = (IResource) it.next();,if (it != null ) IResource res = (IResource) it.next();
MarkerReporter.java,int priority = this.bug.getPriority();,if (this != null ) int priority = this.bug.getPriority();
MarkerReporter.java,BugTreeView theView = BugTreeView.getBugTreeView();,if (BugTreeView != null ) BugTreeView theView = BugTreeView.getBugTreeView();
MarkerUtil.java,BugTreeView bugTreeView = BugTreeView.getBugTreeView();,if (BugTreeView != null ) BugTreeView bugTreeView = BugTreeView.getBugTreeView();
MarkerUtil.java,BugInstance bugInstance = (BugInstance) i.next();,if (i != null ) BugInstance bugInstance = (BugInstance) i.next();
Util.java,String ex = resource.getFileExtension();,if (resource != null ) String ex = resource.getFileExtension();
Util.java,String ex = resource.getFileExtension();,if (resource != null ) String ex = resource.getFileExtension();
BugTreeView.java,IWorkspace workspace = ResourcesPlugin.getWorkspace();,if (ResourcesPlugin != null ) IWorkspace workspace = ResourcesPlugin.getWorkspace();
BugTreeView.java,String projectName = event.getResource().getName();,if (event != null ) String projectName = event.getResource().getName();
BugTreeView.java,Tree treeToRemove = projectTrees.get(currProject.getName());,if (projectTrees != null ) Tree treeToRemove = projectTrees.get(currProject.getName());
BugTreeView.java,Tree theTree = projectTrees.get(theProject.getName());,if (projectTrees != null ) Tree theTree = projectTrees.get(theProject.getName());
BugTreeView.java,String pattern = bug.getBugPattern().getShortDescription();,if (bug != null ) String pattern = bug.getBugPattern().getShortDescription();
DetailsView.java,int index = annotationList.getSelectionIndex();,if (annotationList != null ) int index = annotationList.getSelectionIndex();
DetailsView.java,Iterator<BugAnnotation> theIterator = theBug.annotationIterator();,if (theBug != null ) Iterator<BugAnnotation> theIterator = theBug.annotationIterator();
DetailsView.java,BugAnnotation theAnnotation = theIterator.next();,if (theIterator != null ) BugAnnotation theAnnotation = theIterator.next();
DetailsView.java,theAnnotation = theIterator.next();,if (theIterator != null ) theAnnotation = theIterator.next();
DetailsView.java,Rectangle size = this.control.getClientArea();,if (this != null ) Rectangle size = this.control.getClientArea();
DetailsView.java,IWorkbenchPage[] pages = FindbugsPlugin.getActiveWorkbenchWindow().getPages();,if (FindbugsPlugin != null ) IWorkbenchPage[] pages = FindbugsPlugin.getActiveWorkbenchWindow().getPages();
DetailsView.java,String shortDescription = pattern.getShortDescription();,if (pattern != null ) String shortDescription = pattern.getShortDescription();
DetailsView.java,String detailText = pattern.getDetailText();,if (pattern != null ) String detailText = pattern.getDetailText();
DetailsView.java,Iterator<BugAnnotation> it = bug.annotationIterator();,if (bug != null ) Iterator<BugAnnotation> it = bug.annotationIterator();
DetailsView.java,BugAnnotation ba = it.next();,if (it != null ) BugAnnotation ba = it.next();
UserAnnotationsView.java,userAnnotation = bug.getNonnullUserDesignation().getAnnotationText();,if (bug != null ) userAnnotation = bug.getNonnullUserDesignation().getAnnotationText();
SourceLineAnnotation.java,String className = classContext.getJavaClass().getClassName();,if (classContext != null ) String className = classContext.getJavaClass().getClassName();
SourceLineAnnotation.java,String sourceFile = classContext.getJavaClass().getSourceFileName();,if (classContext != null ) String sourceFile = classContext.getJavaClass().getSourceFileName();
ClassReaderAnalysisEngine.java,ClassReader classReader = new ClassReader(classData.getData());,if (ClassReader(classData != null ) ClassReader classReader = new ClassReader(classData.getData());
AnalysisCache.java,IMethodAnalysisEngine engine = methodAnalysisEngineMap.get(entry.getKey());,if (methodAnalysisEngineMap != null ) IMethodAnalysisEngine engine = methodAnalysisEngineMap.get(entry.getKey());
PatternMatcher.java,int destId = destBlock.getId();,if (destBlock != null ) int destId = destBlock.getId();
IsNullValueAnalysis.java,int srcBlockId = edge.getSource().getId();,if (edge != null ) int srcBlockId = edge.getSource().getId();
AssignedFieldMap.java,JavaClass jclass = classContext.getJavaClass();,if (classContext != null ) JavaClass jclass = classContext.getJavaClass();
AssignedFieldMap.java,JavaClass[] superClassList = jclass.getSuperClasses();,if (jclass != null ) JavaClass[] superClassList = jclass.getSuperClasses();
AssignedFieldMap.java,Method[] methodList = jclass.getMethods();,if (jclass != null ) Method[] methodList = jclass.getMethods();
AssignedFieldMap.java,JavaClass myClass = classContext.getJavaClass();,if (classContext != null ) JavaClass myClass = classContext.getJavaClass();
ClassContext.java,long begin = System.currentTimeMillis();,if (System != null ) long begin = System.currentTimeMillis();
ClassContext.java,long end = System.currentTimeMillis();,if (System != null ) long end = System.currentTimeMillis();
ClassContext.java,Instruction lastInstruction = last.getInstruction();,if (last != null ) Instruction lastInstruction = last.getInstruction();
ClassContext.java,InstructionHandle prev = last.getPrev();,if (last != null ) InstructionHandle prev = last.getPrev();
ClassContext.java,Instruction prevInstruction = prev.getInstruction();,if (prev != null ) Instruction prevInstruction = prev.getInstruction();
ClassContext.java,changed  = changed || pruner.wasCFGModified();,if (pruner != null ) changed  = changed || pruner.wasCFGModified();
ClassContext.java,changed = changed || pruner.wasCFGModified();,if (pruner != null ) changed = changed || pruner.wasCFGModified();
ClassContext.java,String methodName = method.getName();,if (method != null ) String methodName = method.getName();
ClassContext.java,int codeLength = method.getCode().getLength();,if (method != null ) int codeLength = method.getCode().getLength();
ClassContext.java,Location loc = locs.next();,if (locs != null ) Location loc = locs.next();
ClassContext.java,Location loc = locs.next();,if (locs != null ) Location loc = locs.next();
ClassContext.java,Code code = method.getCode();,if (method != null ) Code code = method.getCode();
ClassContext.java,byte[] instructionList = code.getCode();,if (code != null ) byte[] instructionList = code.getCode();
ClassContext.java,SignatureParser parser = new SignatureParser(method.getSignature());,if (SignatureParser(method != null ) SignatureParser parser = new SignatureParser(method.getSignature());
ClassContext.java,InstructionList il = methodGen.getInstructionList();,if (methodGen != null ) InstructionList il = methodGen.getInstructionList();
ClassContext.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
ClassContext.java,short opcode = ins.getOpcode();,if (ins != null ) short opcode = ins.getOpcode();
FindBugsWorker.java,IClasspathEntry cpe = pkgRoot.getRawClasspathEntry();,if (pkgRoot != null ) IClasspathEntry cpe = pkgRoot.getRawClasspathEntry();
FindBugsWorker.java,IJavaProject proj = pkgRoot.getJavaProject();,if (pkgRoot != null ) IJavaProject proj = pkgRoot.getJavaProject();
BugInstance.java,pattern = bugPattern.getLongDescription();,if (bugPattern != null ) pattern = bugPattern.getLongDescription();
MainFrame.java,BugTreeModel model=(BugTreeModel)tree.getModel();,if (model=(BugTreeModel)tree != null ) BugTreeModel model=(BugTreeModel)tree.getModel();
GUISaveState.java,int size=recentProjects.size();,if (size=recentProjects != null ) int size=recentProjects.size();
MainFrame.java,ArrayList<File> xmlFiles=GUISaveState.getInstance().getRecentProjects();,if (xmlFiles=GUISaveState != null ) ArrayList<File> xmlFiles=GUISaveState.getInstance().getRecentProjects();
StaticCalendarDetector.java,ObjectType tType = (ObjectType)aField.getType();,if ((ObjectType)aField != null ) ObjectType tType = (ObjectType)aField.getType();
StaticCalendarDetector.java,boolean tIsStatic = aField.isStatic();,if (aField != null ) boolean tIsStatic = aField.isStatic();
FindBugsCommandLine.java,File[] contents = projectFile.listFiles();,if (projectFile != null ) File[] contents = projectFile.listFiles();
MainFrame.java,Filter suppressionFilter = ProjectSettings.getInstance().getSuppressionFilter();,if (ProjectSettings != null ) Filter suppressionFilter = ProjectSettings.getInstance().getSuppressionFilter();
PreferencesFrame.java,int[] selected = filterCheckBoxList.getSelectedIndices();,if (filterCheckBoxList != null ) int[] selected = filterCheckBoxList.getSelectedIndices();
PreferencesFrame.java,ArrayList<FilterMatcher> theList = ProjectSettings.getInstance().getAllFilters();,if (ProjectSettings != null ) ArrayList<FilterMatcher> theList = ProjectSettings.getInstance().getAllFilters();
PreferencesFrame.java,int len = theList.size();,if (theList != null ) int len = theList.size();
PreferencesFrame.java,JCheckBox box = new JCheckBox(m.toString());,if (JCheckBox(m != null ) JCheckBox box = new JCheckBox(m.toString());
MainFrame.java,StackedFilterMatcher sfm = currentSelectedBugAspects.getStackedFilterMatcher();,if (currentSelectedBugAspects != null ) StackedFilterMatcher sfm = currentSelectedBugAspects.getStackedFilterMatcher();
PreferencesFrame.java,BugInstance b=bugLeaf.getBug();,if (b=bugLeaf != null ) BugInstance b=bugLeaf.getBug();
PreferencesFrame.java,int size=suppressionTableModel.getRowCount();,if (size=suppressionTableModel != null ) int size=suppressionTableModel.getRowCount();
BugSet.java,CompoundMatcher cm=ProjectSettings.getInstance().getAllMatchers();,if (cm=ProjectSettings != null ) CompoundMatcher cm=ProjectSettings.getInstance().getAllMatchers();
BugSet.java,Matcher m=ProjectSettings.getInstance().getAllMatchers();,if (m=ProjectSettings != null ) Matcher m=ProjectSettings.getInstance().getAllMatchers();
MainFrame.java,TreePath path=tree.getSelectionPath();,if (path=tree != null ) TreePath path=tree.getSelectionPath();
PreferencesFrame.java,int[] selectedBugs=table.getSelectedRows();,if (selectedBugs=table != null ) int[] selectedBugs=table.getSelectedRows();
NewFilterFromBug.java,selectedRadioButton = (JRadioButton) evt.getSource();,if (evt != null ) selectedRadioButton = (JRadioButton) evt.getSource();
NewFilterFromBug.java,ArrayList<FilterMatcher> filters=ProjectSettings.getInstance().getAllFilters();,if (filters=ProjectSettings != null ) ArrayList<FilterMatcher> filters=ProjectSettings.getInstance().getAllFilters();
PreferencesFrame.java,JCheckBox box = new JCheckBox(i.toString());,if (JCheckBox(i != null ) JCheckBox box = new JCheckBox(i.toString());
FindBugsCommandLine.java,projectFile = new File(projectFile).getAbsolutePath();,if (File(projectFile) != null ) projectFile = new File(projectFile).getAbsolutePath();
Filter.java,AndMatcher child = (AndMatcher) i.next();,if (i != null ) AndMatcher child = (AndMatcher) i.next();
IsNullValueAnalysis.java,final int numSlots = fact.getNumSlots();,if (fact != null ) final int numSlots = fact.getNumSlots();
UnconditionalDerefAnalysis.java,boolean isBackEdge = edge.isBackwardInBytecode();,if (edge != null ) boolean isBackEdge = edge.isBackwardInBytecode();
FindHEmismatch.java,classThatDefinesHashCodeIsAbstract = wh.isAbstract();,if (wh != null ) classThatDefinesHashCodeIsAbstract = wh.isAbstract();
SAXBugCollectionHandler.java,BugDesignation userDesignation = bugInstance.getNonnullUserDesignation();,if (bugInstance != null ) BugDesignation userDesignation = bugInstance.getNonnullUserDesignation();
OpcodeStack.java,r+= xfield.hashCode();,if (xfield != null ) r+= xfield.hashCode();
OpcodeStack.java,r+= returnValueOf.hashCode();,if (returnValueOf != null ) r+= returnValueOf.hashCode();
FindPuzzlers.java,Object o = item.getConstant();,if (item != null ) Object o = item.getConstant();
FindPuzzlers.java,String signature = item.getSignature();,if (item != null ) String signature = item.getSignature();
FindPuzzlers.java,String classNameForPreviousMethod = previousMethodInvocation.getClassName();,if (previousMethodInvocation != null ) String classNameForPreviousMethod = previousMethodInvocation.getClassName();
Bug20070301.java,stm = conn.createStatement();,if (conn != null ) stm = conn.createStatement();
BadSetter.java,Class getterType = getter.getReturnType();,if (getter != null ) Class getterType = getter.getReturnType();
NullPointerCategories.java,int b = in.read();,if (in != null ) int b = in.read();
NullPointerCategories.java,int b = in.read();,if (in != null ) int b = in.read();
NullPointerCategories.java,int b = in.read();,if (in != null ) int b = in.read();
NullPointerCategories.java,int b = in.read();,if (in != null ) int b = in.read();
UnconditionalThrower.java,if (x == null) a.foo();,if (a != null ) if (x == null) a.foo();
Bug1006704.java,PreparedStatement ps = con.prepareStatement(sql.toString());,if (con != null ) PreparedStatement ps = con.prepareStatement(sql.toString());
Bug1006704.java,ResultSet rs = ps.executeQuery();,if (ps != null ) ResultSet rs = ps.executeQuery();
Bug1557886.java,Component c = (Component) e.getSource();,if (e != null ) Component c = (Component) e.getSource();
Bug1562060.java,Statement stmt = conn.createStatement();,if (conn != null ) Statement stmt = conn.createStatement();
Bug1648646.java,Class superclass = clzz.getSuperclass();,if (clzz != null ) Class superclass = clzz.getSuperclass();
Bug1648646.java,clzz = clzz.getSuperclass();,if (clzz != null ) clzz = clzz.getSuperclass();
Bug1669047.java,Object checkForNullResult = fProvider.getSession();,if (fProvider != null ) Object checkForNullResult = fProvider.getSession();
Bug1678229.java,staticDevice = staticDeviceFactory.toString();,if (staticDeviceFactory != null ) staticDevice = staticDeviceFactory.toString();
Bug1678229.java,device = deviceFactory.toString();,if (deviceFactory != null ) device = deviceFactory.toString();
Bug1686615.java,boolean b = new Boolean(s).booleanValue();,if (Boolean(s) != null ) boolean b = new Boolean(s).booleanValue();
FindPuzzlers.java,String classNameForPreviousMethod = previousMethodInvocation.getClassName();,if (previousMethodInvocation != null ) String classNameForPreviousMethod = previousMethodInvocation.getClassName();
FindbugsPlugin.java,boolean showUserLast = UserAnnotationsView.isVisible();,if (UserAnnotationsView != null ) boolean showUserLast = UserAnnotationsView.isVisible();
FindbugsPlugin.java,IWorkbenchPage[] pages = FindbugsPlugin.getActiveWorkbenchWindow().getPages();,if (FindbugsPlugin != null ) IWorkbenchPage[] pages = FindbugsPlugin.getActiveWorkbenchWindow().getPages();
FindbugsPlugin.java,IWorkbenchPage[] pages = FindbugsPlugin.getActiveWorkbenchWindow().getPages();,if (FindbugsPlugin != null ) IWorkbenchPage[] pages = FindbugsPlugin.getActiveWorkbenchWindow().getPages();
FindBugsWorker.java,String fileName = location.toOSString();,if (location != null ) String fileName = location.toOSString();
FindBugsWorker.java,IClasspathEntry cpe = pkgRoot.getRawClasspathEntry();,if (pkgRoot != null ) IClasspathEntry cpe = pkgRoot.getRawClasspathEntry();
FindBugsWorker.java,String fName = relativePath.lastSegment();,if (relativePath != null ) String fName = relativePath.lastSegment();
FindBugsWorker.java,File clzDir = clzLocation.toFile();,if (clzLocation != null ) File clzDir = clzLocation.toFile();
FindBugsWorker.java,File clzDir = entry.getKey();,if (entry != null ) File clzDir = entry.getKey();
FindBugsWorker.java,final Pattern pat = Pattern.compile(entry.getValue());,if (Pattern != null ) final Pattern pat = Pattern.compile(entry.getValue());
FindBugsWorker.java,IPath cpePath = cpe.getPath();,if (cpe != null ) IPath cpePath = cpe.getPath();
FindBugsWorker.java,IPath javaFilePath = res.getFullPath();,if (res != null ) IPath javaFilePath = res.getFullPath();
FindBugsWorker.java,IWorkspace workspace = ResourcesPlugin.getWorkspace();,if (ResourcesPlugin != null ) IWorkspace workspace = ResourcesPlugin.getWorkspace();
FindBugsWorker.java,IWorkspaceRoot root = workspace.getRoot();,if (workspace != null ) IWorkspaceRoot root = workspace.getRoot();
FindBugsWorker.java,IPath outLocation = cpe.getOutputLocation();,if (cpe != null ) IPath outLocation = cpe.getOutputLocation();
FindBugsWorker.java,outLocation = proj.getOutputLocation();,if (proj != null ) outLocation = proj.getOutputLocation();
FindBugsWorker.java,IWorkspace workspace = ResourcesPlugin.getWorkspace();,if (ResourcesPlugin != null ) IWorkspace workspace = ResourcesPlugin.getWorkspace();
FindBugsWorker.java,IWorkspaceRoot root = workspace.getRoot();,if (workspace != null ) IWorkspaceRoot root = workspace.getRoot();
FindBugsWorker.java,IPath path = classpathEntry.getOutputLocation();,if (classpathEntry != null ) IPath path = classpathEntry.getOutputLocation();
FindBugsWorker.java,IPath def = javaProject.getOutputLocation();,if (javaProject != null ) IPath def = javaProject.getOutputLocation();
FindBugsWorker.java,IPath location = resource.getLocation();,if (resource != null ) IPath location = resource.getLocation();
BugTreeView.java,Tree theTree = projectTrees.get(theProject.getName());,if (projectTrees != null ) Tree theTree = projectTrees.get(theProject.getName());
DetailsView.java,int index = annotationList.getSelectionIndex();,if (annotationList != null ) int index = annotationList.getSelectionIndex();
DetailsView.java,Iterator<BugAnnotation> theIterator = theBug.annotationIterator();,if (theBug != null ) Iterator<BugAnnotation> theIterator = theBug.annotationIterator();
DetailsView.java,theAnnotation = theIterator.next();,if (theIterator != null ) theAnnotation = theIterator.next();
DetailsView.java,IWorkbenchPage[] pages = FindbugsPlugin.getActiveWorkbenchWindow().getPages();,if (FindbugsPlugin != null ) IWorkbenchPage[] pages = FindbugsPlugin.getActiveWorkbenchWindow().getPages();
DetailsView.java,String detailText = pattern.getDetailText();,if (pattern != null ) String detailText = pattern.getDetailText();
DetailsView.java,BugAnnotation ba = it.next();,if (it != null ) BugAnnotation ba = it.next();
BugResolution.java,IProject project = marker.getResource().getProject();,if (marker != null ) IProject project = marker.getResource().getProject();
BugResolution.java,ASTRewrite rewrite = ASTRewrite.create(workingUnit.getAST());,if (ASTRewrite != null ) ASTRewrite rewrite = ASTRewrite.create(workingUnit.getAST());
BugResolution.java,IResource res = marker.getResource();,if (marker != null ) IResource res = marker.getResource();
BugResolutionAssociations.java,final String bugType = entry.getKey();,if (entry != null ) final String bugType = entry.getKey();
BugResolutionLoader.java,int length = bugFixList.getLength();,if (bugFixList != null ) int length = bugFixList.getLength();
BugResolutionLoader.java,int length = resolutionNodes.getLength();,if (resolutionNodes != null ) int length = resolutionNodes.getLength();
BugResolutionLoader.java,String name = attr.getKey();,if (attr != null ) String name = attr.getKey();
BugResolutionLoader.java,int length = attrList.getLength();,if (attrList != null ) int length = attrList.getLength();
BugResolutionLoader.java,DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();,if (DocumentBuilderFactory != null ) DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
BugResolutionLoader.java,builder = factory.newDocumentBuilder();,if (factory != null ) builder = factory.newDocumentBuilder();
ChangePublicToProtectedResolution.java,"TypeDeclaration type = getTypeDeclaration(workingUnit, bug.getPrimaryClass());","if (bug != null ) TypeDeclaration type = getTypeDeclaration(workingUnit, bug.getPrimaryClass());"
ChangePublicToProtectedResolution.java,"MethodDeclaration method = getMethodDeclaration(type, bug.getPrimaryMethod());","if (bug != null ) MethodDeclaration method = getMethodDeclaration(type, bug.getPrimaryMethod());"
CorrectOddnessCheckResolution.java,numberExpression = node.getLeftOperand();,if (node != null ) numberExpression = node.getLeftOperand();
CreateAndOddnessCheckResolution.java,final AST ast = rewrite.getAST();,if (rewrite != null ) final AST ast = rewrite.getAST();
CreateAndOddnessCheckResolution.java,InfixExpression andOddnessCheck = ast.newInfixExpression();,if (ast != null ) InfixExpression andOddnessCheck = ast.newInfixExpression();
CreateAndOddnessCheckResolution.java,ParenthesizedExpression parenthesizedExpression = ast.newParenthesizedExpression();,if (ast != null ) ParenthesizedExpression parenthesizedExpression = ast.newParenthesizedExpression();
CreateDoPrivilegedBlockResolution.java,final AST ast = rewrite.getAST();,if (rewrite != null ) final AST ast = rewrite.getAST();
CreateDoPrivilegedBlockResolution.java,final AST ast = rewrite.getAST();,if (rewrite != null ) final AST ast = rewrite.getAST();
CreateDoPrivilegedBlockResolution.java,ImportDeclaration importDeclaration = ast.newImportDeclaration();,if (ast != null ) ImportDeclaration importDeclaration = ast.newImportDeclaration();
CreateDoPrivilegedBlockResolution.java,AST ast = rewrite.getAST();,if (rewrite != null ) AST ast = rewrite.getAST();
CreateDoPrivilegedBlockResolution.java,MethodInvocation doPrivilegedInvocation = ast.newMethodInvocation();,if (ast != null ) MethodInvocation doPrivilegedInvocation = ast.newMethodInvocation();
CreateDoPrivilegedBlockResolution.java,List<Expression> arguments = doPrivilegedInvocation.arguments();,if (doPrivilegedInvocation != null ) List<Expression> arguments = doPrivilegedInvocation.arguments();
CreateDoPrivilegedBlockResolution.java,accessControllerName = ast.newName(AccessController.class.getName());,if (ast != null ) accessControllerName = ast.newName(AccessController.class.getName());
CreateDoPrivilegedBlockResolution.java,AST ast = rewrite.getAST();,if (rewrite != null ) AST ast = rewrite.getAST();
CreateDoPrivilegedBlockResolution.java,ClassInstanceCreation privilegedActionCreation = ast.newClassInstanceCreation();,if (ast != null ) ClassInstanceCreation privilegedActionCreation = ast.newClassInstanceCreation();
CreateDoPrivilegedBlockResolution.java,AST ast = rewrite.getAST();,if (rewrite != null ) AST ast = rewrite.getAST();
CreateDoPrivilegedBlockResolution.java,privilegedActionName = ast.newName(PrivilegedAction.class.getName());,if (ast != null ) privilegedActionName = ast.newName(PrivilegedAction.class.getName());
CreateDoPrivilegedBlockResolution.java,List<Type> typeArguments = privilegedActionType.typeArguments();,if (privilegedActionType != null ) List<Type> typeArguments = privilegedActionType.typeArguments();
CreateDoPrivilegedBlockResolution.java,AST ast = rewrite.getAST();,if (rewrite != null ) AST ast = rewrite.getAST();
CreateDoPrivilegedBlockResolution.java,AnonymousClassDeclaration anonymousClassDeclaration = ast.newAnonymousClassDeclaration();,if (ast != null ) AnonymousClassDeclaration anonymousClassDeclaration = ast.newAnonymousClassDeclaration();
CreateDoPrivilegedBlockResolution.java,List<BodyDeclaration> bodyDeclarations = anonymousClassDeclaration.bodyDeclarations();,if (anonymousClassDeclaration != null ) List<BodyDeclaration> bodyDeclarations = anonymousClassDeclaration.bodyDeclarations();
CreateDoPrivilegedBlockResolution.java,AST ast = rewrite.getAST();,if (rewrite != null ) AST ast = rewrite.getAST();
CreateDoPrivilegedBlockResolution.java,MethodDeclaration methodDeclaration = ast.newMethodDeclaration();,if (ast != null ) MethodDeclaration methodDeclaration = ast.newMethodDeclaration();
CreateDoPrivilegedBlockResolution.java,List<Modifier> modifiers = methodDeclaration.modifiers();,if (methodDeclaration != null ) List<Modifier> modifiers = methodDeclaration.modifiers();
CreateDoPrivilegedBlockResolution.java,AST ast = rewrite.getAST();,if (rewrite != null ) AST ast = rewrite.getAST();
CreateDoPrivilegedBlockResolution.java,Block methodBody = ast.newBlock();,if (ast != null ) Block methodBody = ast.newBlock();
CreateDoPrivilegedBlockResolution.java,ReturnStatement returnStatement = ast.newReturnStatement();,if (ast != null ) ReturnStatement returnStatement = ast.newReturnStatement();
CreateDoPrivilegedBlockResolution.java,List<Statement> statements = methodBody.statements();,if (methodBody != null ) List<Statement> statements = methodBody.statements();
CreateDoPrivilegedBlockResolution.java,ITypeBinding superclass = typeBinding.getSuperclass();,if (typeBinding != null ) ITypeBinding superclass = typeBinding.getSuperclass();
CreateMutableCloneResolution.java,"TypeDeclaration type = getTypeDeclaration(workingUnit, bug.getPrimaryClass());","if (bug != null ) TypeDeclaration type = getTypeDeclaration(workingUnit, bug.getPrimaryClass());"
CreateMutableCloneResolution.java,"MethodDeclaration method = getMethodDeclaration(type, bug.getPrimaryMethod());","if (bug != null ) MethodDeclaration method = getMethodDeclaration(type, bug.getPrimaryMethod());"
CreateMutableCloneResolution.java,String fieldName = bug.getPrimaryField().getFieldName();,if (bug != null ) String fieldName = bug.getPrimaryField().getFieldName();
CreateMutableCloneResolution.java,Statement stmt = (Statement) itr.next();,if (itr != null ) Statement stmt = (Statement) itr.next();
CreateMutableCloneResolution.java,cloneInvoke = workingUnit.getAST().newMethodInvocation();,if (workingUnit != null ) cloneInvoke = workingUnit.getAST().newMethodInvocation();
CreateMutableCloneResolution.java,castRet = workingUnit.getAST().newCastExpression();,if (workingUnit != null ) castRet = workingUnit.getAST().newCastExpression();
CreateRemainderOddnessCheckResolution.java,final AST ast = rewrite.getAST();,if (rewrite != null ) final AST ast = rewrite.getAST();
CreateRemainderOddnessCheckResolution.java,InfixExpression correctOddnessCheck = ast.newInfixExpression();,if (ast != null ) InfixExpression correctOddnessCheck = ast.newInfixExpression();
CreateRemainderOddnessCheckResolution.java,InfixExpression remainderExp = ast.newInfixExpression();,if (ast != null ) InfixExpression remainderExp = ast.newInfixExpression();
CreateSuperCallResolution.java,"TypeDeclaration type = getTypeDeclaration(workingUnit, bug.getPrimaryClass());","if (bug != null ) TypeDeclaration type = getTypeDeclaration(workingUnit, bug.getPrimaryClass());"
CreateSuperCallResolution.java,"MethodDeclaration method = getMethodDeclaration(type, bug.getPrimaryMethod());","if (bug != null ) MethodDeclaration method = getMethodDeclaration(type, bug.getPrimaryMethod());"
CreateSuperCallResolution.java,AST ast = rewrite.getAST();,if (rewrite != null ) AST ast = rewrite.getAST();
CreateSuperCallResolution.java,Block methodBody = method.getBody();,if (method != null ) Block methodBody = method.getBody();
CreateSuperCallResolution.java,AST ast = rewrite.getAST();,if (rewrite != null ) AST ast = rewrite.getAST();
CreateSuperCallResolution.java,SuperMethodInvocation invocation = ast.newSuperMethodInvocation();,if (ast != null ) SuperMethodInvocation invocation = ast.newSuperMethodInvocation();
FieldModifierResolution.java,"TypeDeclaration type = getTypeDeclaration(workingUnit, bug.getPrimaryClass());","if (bug != null ) TypeDeclaration type = getTypeDeclaration(workingUnit, bug.getPrimaryClass());"
FieldModifierResolution.java,"FieldDeclaration field = getFieldDeclaration(type, bug.getPrimaryField());","if (bug != null ) FieldDeclaration field = getFieldDeclaration(type, bug.getPrimaryField());"
MakeInnerTypeStaticResolution.java,"TypeDeclaration type = getTypeDeclaration(workingUnit, bug.getPrimaryClass());","if (bug != null ) TypeDeclaration type = getTypeDeclaration(workingUnit, bug.getPrimaryClass());"
RemoveUselessMethodResolution.java,"TypeDeclaration type = getTypeDeclaration(workingUnit, bug.getPrimaryClass());","if (bug != null ) TypeDeclaration type = getTypeDeclaration(workingUnit, bug.getPrimaryClass());"
RemoveUselessMethodResolution.java,"MethodDeclaration method = getMethodDeclaration(type, bug.getPrimaryMethod());","if (bug != null ) MethodDeclaration method = getMethodDeclaration(type, bug.getPrimaryMethod());"
UseValueOfResolution.java,final AST ast = rewrite.getAST();,if (rewrite != null ) final AST ast = rewrite.getAST();
UseValueOfResolution.java,MethodInvocation valueOfInvocation = ast.newMethodInvocation();,if (ast != null ) MethodInvocation valueOfInvocation = ast.newMethodInvocation();
UseValueOfResolution.java,ITypeBinding binding = primitiveTypeCreation.getType().resolveBinding();,if (primitiveTypeCreation != null ) ITypeBinding binding = primitiveTypeCreation.getType().resolveBinding();
UseValueOfResolution.java,List<Expression> arguments = primitiveTypeCreation.arguments();,if (primitiveTypeCreation != null ) List<Expression> arguments = primitiveTypeCreation.arguments();
UseValueOfResolution.java,List<Expression> newArguments = valueOfInvocation.arguments();,if (valueOfInvocation != null ) List<Expression> newArguments = valueOfInvocation.arguments();
ASTUtil.java,final AST ast = rewrite.getAST();,if (rewrite != null ) final AST ast = rewrite.getAST();
ASTUtil.java,ImportDeclaration newImport = newImports.next();,if (newImports != null ) ImportDeclaration newImport = newImports.next();
ASTUtil.java,newImport = newImports.next();,if (newImports != null ) newImport = newImports.next();
ASTUtil.java,List<VariableDeclarationFragment> fragments = field.fragments();,if (field != null ) List<VariableDeclarationFragment> fragments = field.fragments();
ASTUtil.java,int lineNumber = compilationUnit.getLineNumber(statement.getStartPosition());,if (compilationUnit != null ) int lineNumber = compilationUnit.getLineNumber(statement.getStartPosition());
ASTUtil.java,String typeName = getPrettyTypeName(methodParams[i].getType());,if (getPrettyTypeName(methodParams[i] != null ) String typeName = getPrettyTypeName(methodParams[i].getType());
ASTUtil.java,String typeName = type.resolveBinding().getQualifiedName();,if (type != null ) String typeName = type.resolveBinding().getQualifiedName();
BugInstance.java,shortPattern = bugPattern.getShortDescription();,if (bugPattern != null ) shortPattern = bugPattern.getShortDescription();
FieldAnnotation.java,String thisPackageName = this.getPackageName();,if (this != null ) String thisPackageName = this.getPackageName();
OpcodeStack.java,int reg = item.getRegisterNumber();,if (item != null ) int reg = item.getRegisterNumber();
OpcodeStack.java,int value = (Integer) lhs.getConstant();,if (lhs != null ) int value = (Integer) lhs.getConstant();
OpcodeStack.java,int value = (Integer) rhs.getConstant();,if (rhs != null ) int value = (Integer) rhs.getConstant();
TextUIBugReporter.java,long last = bugInstance.getLastVersion();,if (bugInstance != null ) long last = bugInstance.getLastVersion();
ClassContext.java,Location loc = locs.next();,if (locs != null ) Location loc = locs.next();
ClassContext.java,SignatureParser parser = new SignatureParser(method.getSignature());,if (SignatureParser(method != null ) SignatureParser parser = new SignatureParser(method.getSignature());
ClassContext.java,final String thisClassName = getJavaClass().getClassName();,if (getJavaClass() != null ) final String thisClassName = getJavaClass().getClassName();
XFactory.java,JavaClass superClass = Repository.lookupClass(classname).getSuperClass();,if (Repository != null ) JavaClass superClass = Repository.lookupClass(classname).getSuperClass();
XFactory.java,JavaClass superClass = javaClass.getSuperClass();,if (javaClass != null ) JavaClass superClass = javaClass.getSuperClass();
UnconditionalValueDerefAnalysis.java,int numParams = sigParser.getNumParameters();,if (sigParser != null ) int numParams = sigParser.getNumParameters();
UnconditionalValueDerefAnalysis.java,IsNullValue value = invFrame.getTopValue();,if (invFrame != null ) IsNullValue value = invFrame.getTopValue();
DerefFinder.java,ConstantPoolGen cpg = classContext.getConstantPoolGen();,if (classContext != null ) ConstantPoolGen cpg = classContext.getConstantPoolGen();
DerefFinder.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
NullDerefAndRedundantComparisonFinder.java,ValueNumber vn = vnaDataflow.getFactAfterLocation(location).getTopValue();,if (vnaDataflow != null ) ValueNumber vn = vnaDataflow.getFactAfterLocation(location).getTopValue();
NullDerefAndRedundantComparisonFinder.java,UnconditionalValueDerefSet uvdSourceFact = uvdDataflow.getStartFact(edge.getSource());,if (uvdDataflow != null ) UnconditionalValueDerefSet uvdSourceFact = uvdDataflow.getStartFact(edge.getSource());
NullDerefAndRedundantComparisonFinder.java,BitSet allDominatedBy = postDomAnalysis.getAllDominatedBy(loc.getBasicBlock());,if (postDomAnalysis != null ) BitSet allDominatedBy = postDomAnalysis.getAllDominatedBy(loc.getBasicBlock());
ValueNumberFrame.java,String fieldPackageName = extractPackageName(field.getClassName());,if (extractPackageName(field != null ) String fieldPackageName = extractPackageName(field.getClassName());
BadSyntaxForRegularExpression.java,Object topValue = top.getConstant();,if (top != null ) Object topValue = top.getConstant();
BuildNonnullReturnDatabase.java,IsNullValue value = frame.getTopValue();,if (frame != null ) IsNullValue value = frame.getTopValue();
ConfusionBetweenInheritedAndOuterMethod.java,String alternativePackage = alternativeMethod.getPackageName();,if (alternativeMethod != null ) String alternativePackage = alternativeMethod.getPackageName();
FindNullDeref.java,Instruction ins = location.getHandle().getInstruction();,if (location != null ) Instruction ins = location.getHandle().getInstruction();
FindNullDeref.java,ValueNumber valueNumber = vnaFrame.getTopValue();,if (vnaFrame != null ) ValueNumber valueNumber = vnaFrame.getTopValue();
FindNullDeref.java,BasicBlock target = infeasibleEdge.getTarget();,if (infeasibleEdge != null ) BasicBlock target = infeasibleEdge.getTarget();
FindNullDeref.java,String methodSig = method.getSignature();,if (method != null ) String methodSig = method.getSignature();
FindOpenStream.java,int classIndex = cmr.getClassIndex();,if (cmr != null ) int classIndex = cmr.getClassIndex();
FindSqlInjection.java,handle = handle.getPrev();,if (handle != null ) handle = handle.getPrev();
FindSqlInjection.java,InstructionHandle lastInstruction = block.getLastInstruction();,if (block != null ) InstructionHandle lastInstruction = block.getLastInstruction();
FindSqlInjection.java,InstructionHandle lastInstruction = block.getLastInstruction();,if (block != null ) InstructionHandle lastInstruction = block.getLastInstruction();
FindSqlInjection.java,ConstantPoolGen cpg = methodGen.getConstantPool();,if (methodGen != null ) ConstantPoolGen cpg = methodGen.getConstantPool();
FindSqlInjection.java,Instruction ins = location.getHandle().getInstruction();,if (location != null ) Instruction ins = location.getHandle().getInstruction();
InvalidJUnitTest.java,Method[] methods = jClass.getMethods();,if (jClass != null ) Method[] methods = jClass.getMethods();
IteratorIdioms.java,JavaClass cls = classContext.getJavaClass();,if (classContext != null ) JavaClass cls = classContext.getJavaClass();
StaticCalendarDetector.java,ObjectType tType = (ObjectType)aField.getType();,if ((ObjectType)aField != null ) ObjectType tType = (ObjectType)aField.getType();
XMLFactoryBypass.java,curClass = classContext.getJavaClass();,if (classContext != null ) curClass = classContext.getJavaClass();
XMLFactoryBypass.java,JavaClass superCls = curClass.getSuperClass();,if (curClass != null ) JavaClass superCls = curClass.getSuperClass();
XMLFactoryBypass.java,JavaClass[] infs = newCls.getAllInterfaces();,if (newCls != null ) JavaClass[] infs = newCls.getAllInterfaces();
AboutDialog.java,licenseScrollPane = new javax.swing.JScrollPane();,if (javax != null ) licenseScrollPane = new javax.swing.JScrollPane();
AboutDialog.java,URL url = evt.getURL();,if (evt != null ) URL url = evt.getURL();
ConfigureDetectorsDialog.java,detectorDescription = new javax.swing.JEditorPane();,if (javax != null ) detectorDescription = new javax.swing.JEditorPane();
ConfigureDetectorsDialog.java,spacer = new javax.swing.JLabel();,if (javax != null ) spacer = new javax.swing.JLabel();
FindBugsFrame.java,viewPanel = new javax.swing.JPanel();,if (javax != null ) viewPanel = new javax.swing.JPanel();
FindBugsFrame.java,jarFileLabel = new javax.swing.JLabel();,if (javax != null ) jarFileLabel = new javax.swing.JLabel();
FindBugsFrame.java,sourceDirLabel = new javax.swing.JLabel();,if (javax != null ) sourceDirLabel = new javax.swing.JLabel();
FindBugsFrame.java,removeJarButton = new javax.swing.JButton();,if (javax != null ) removeJarButton = new javax.swing.JButton();
FindBugsFrame.java,browseSrcDirButton = new javax.swing.JButton();,if (javax != null ) browseSrcDirButton = new javax.swing.JButton();
FindBugsFrame.java,sourceDirList = new javax.swing.JList();,if (javax != null ) sourceDirList = new javax.swing.JList();
FindBugsFrame.java,browseClasspathEntryButton = new javax.swing.JButton();,if (javax != null ) browseClasspathEntryButton = new javax.swing.JButton();
FindBugsFrame.java,classpathEntryList = new javax.swing.JList();,if (javax != null ) classpathEntryList = new javax.swing.JList();
FindBugsFrame.java,classpathUpButton = new javax.swing.JButton();,if (javax != null ) classpathUpButton = new javax.swing.JButton();
FindBugsFrame.java,groupByTabbedPane = new javax.swing.JTabbedPane();,if (javax != null ) groupByTabbedPane = new javax.swing.JTabbedPane();
FindBugsFrame.java,byPackageScrollPane = new javax.swing.JScrollPane();,if (javax != null ) byPackageScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,byBugTypeBugTree = new javax.swing.JTree();,if (javax != null ) byBugTypeBugTree = new javax.swing.JTree();
FindBugsFrame.java,bugDescriptionScrollPane = new javax.swing.JScrollPane();,if (javax != null ) bugDescriptionScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,annotationTextAreaScrollPane = new javax.swing.JScrollPane();,if (javax != null ) annotationTextAreaScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,logoLabel = new javax.swing.JLabel();,if (javax != null ) logoLabel = new javax.swing.JLabel();
FindBugsFrame.java,newProjectItem = new javax.swing.JMenuItem();,if (javax != null ) newProjectItem = new javax.swing.JMenuItem();
FindBugsFrame.java,closeProjectItem = new javax.swing.JMenuItem();,if (javax != null ) closeProjectItem = new javax.swing.JMenuItem();
FindBugsFrame.java,exitItem = new javax.swing.JMenuItem();,if (javax != null ) exitItem = new javax.swing.JMenuItem();
FindBugsFrame.java,pasteItem = new javax.swing.JMenuItem();,if (javax != null ) pasteItem = new javax.swing.JMenuItem();
FindBugsFrame.java,viewBugDetailsItem = new javax.swing.JCheckBoxMenuItem();,if (javax != null ) viewBugDetailsItem = new javax.swing.JCheckBoxMenuItem();
FindBugsFrame.java,expPriorityButton = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) expPriorityButton = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,settingsMenu = new javax.swing.JMenu();,if (javax != null ) settingsMenu = new javax.swing.JMenu();
FindBugsFrame.java,normalEffortItem = new javax.swing.JCheckBoxMenuItem();,if (javax != null ) normalEffortItem = new javax.swing.JCheckBoxMenuItem();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
TestGenericSignatureParser.java,Iterator<String> iter = parser.parameterSignatureIterator();,if (parser != null ) Iterator<String> iter = parser.parameterSignatureIterator();
BugPattern.java,categoryAbbrev = bcat.getAbbrev();,if (bcat != null ) categoryAbbrev = bcat.getAbbrev();
FieldAnnotation.java,String givenPackageName = primaryClass.getPackageName();,if (primaryClass != null ) String givenPackageName = primaryClass.getPackageName();
OpcodeStack.java,int len = signature.length();,if (signature != null ) int len = signature.length();
OpcodeStack.java,jumpEntry = jumpEntries.get(dbc.getPC());,if (jumpEntries != null ) jumpEntry = jumpEntries.get(dbc.getPC());
OpcodeStack.java,List<Item> jumpStackEntry = jumpStackEntries.get(dbc.getPC());,if (jumpStackEntries != null ) List<Item> jumpStackEntry = jumpStackEntries.get(dbc.getPC());
OpcodeStack.java,cons = dbc.getConstantRefOperand();,if (dbc != null ) cons = dbc.getConstantRefOperand();
OpcodeStack.java,int pc = dbc.getBranchTarget() - dbc.getBranchOffset();,if (dbc != null ) int pc = dbc.getBranchTarget() - dbc.getBranchOffset();
OpcodeStack.java,register = dbc.getRegisterOperand();,if (dbc != null ) register = dbc.getRegisterOperand();
OpcodeStack.java,String castTo = dbc.getClassConstantOperand();,if (dbc != null ) String castTo = dbc.getClassConstantOperand();
OpcodeStack.java,int dims = dbc.getIntConstant();,if (dbc != null ) int dims = dbc.getIntConstant();
OpcodeStack.java,String clsName = dbc.getClassConstantOperand();,if (dbc != null ) String clsName = dbc.getClassConstantOperand();
OpcodeStack.java,String methodName = dbc.getNameConstantOperand();,if (dbc != null ) String methodName = dbc.getNameConstantOperand();
OpcodeStack.java,String signature = dbc.getSigConstantOperand();,if (dbc != null ) String signature = dbc.getSigConstantOperand();
OpcodeStack.java,appenderValue = (String)i.getConstant();,if ((String)i != null ) appenderValue = (String)i.getConstant();
OpcodeStack.java,appenderValue = (String)i.getConstant();,if ((String)i != null ) appenderValue = (String)i.getConstant();
OpcodeStack.java,Object sbVal = sbItem.getConstant();,if (sbItem != null ) Object sbVal = sbItem.getConstant();
OpcodeStack.java,appenderValue = sbVal + sVal.toString();,if (sVal != null ) appenderValue = sbVal + sVal.toString();
OpcodeStack.java,Code code = v.getMethod().getCode();,if (v != null ) Code code = v.getMethod().getCode();
PrintingBugReporter.java,Exception e = reporter.getFatalException();,if (reporter != null ) Exception e = reporter.getFatalException();
SortedBugCollection.java,xr = XMLReaderFactory.createXMLReader();,if (XMLReaderFactory != null ) xr = XMLReaderFactory.createXMLReader();
SourceLineAnnotation.java,Method method = targetMethod.getMethod();,if (targetMethod != null ) Method method = targetMethod.getMethod();
TextUIBugReporter.java,long first = bugInstance.getFirstVersion();,if (bugInstance != null ) long first = bugInstance.getFirstVersion();
TextUICommandLine.java,userPreferences = UserPreferences.createDefaultUserPreferences();,if (UserPreferences != null ) userPreferences = UserPreferences.createDefaultUserPreferences();
ClassContext.java,Location loc = locs.next();,if (locs != null ) Location loc = locs.next();
ClassContext.java,Code code = method.getCode();,if (method != null ) Code code = method.getCode();
ClassContext.java,byte[] instructionList = code.getCode();,if (code != null ) byte[] instructionList = code.getCode();
ClassContext.java,List<Method> methodList = Arrays.asList(getJavaClass().getMethods());,if (Arrays != null ) List<Method> methodList = Arrays.asList(getJavaClass().getMethods());
ClassContext.java,Code code = method.getCode();,if (method != null ) Code code = method.getCode();
ClassContext.java,byte[] instructionList = code.getCode();,if (code != null ) byte[] instructionList = code.getCode();
ClassContext.java,UnpackedCode unpackedCode = callback.getUnpackedCode();,if (callback != null ) UnpackedCode unpackedCode = callback.getUnpackedCode();
ClassContext.java,Code code = method.getCode();,if (method != null ) Code code = method.getCode();
ClassContext.java,byte[] instructionList = code.getCode();,if (code != null ) byte[] instructionList = code.getCode();
ClassContext.java,"result = TigerSubstitutes.emptySet(); // alas, emptySet() is @since 1.5","if (1 != null ) result = TigerSubstitutes.emptySet(); // alas, emptySet() is @since 1.5"
ClassContext.java,int newLine = line.getLineNumber();,if (line != null ) int newLine = line.getLineNumber();
Hierarchy.java,Method[] methodList = javaClass.getMethods();,if (javaClass != null ) Method[] methodList = javaClass.getMethods();
PruneUnconditionalExceptionThrowerEdges.java,AnalysisContext currentAnalysisContext = AnalysisContext.currentAnalysisContext();,if (AnalysisContext != null ) AnalysisContext currentAnalysisContext = AnalysisContext.currentAnalysisContext();
PruneUnconditionalExceptionThrowerEdges.java,InstructionHandle instructionHandle = basicBlock.getExceptionThrower();,if (basicBlock != null ) InstructionHandle instructionHandle = basicBlock.getExceptionThrower();
PruneUnconditionalExceptionThrowerEdges.java,Instruction exceptionThrower = instructionHandle.getInstruction();,if (instructionHandle != null ) Instruction exceptionThrower = instructionHandle.getInstruction();
PruneUnconditionalExceptionThrowerEdges.java,Method method = classAndMethod.getMethod();,if (classAndMethod != null ) Method method = classAndMethod.getMethod();
ResourceValueFrameModelingVisitor.java,topValue = frame.getTopValue();,if (frame != null ) topValue = frame.getTopValue();
XFactory.java,XFactory xFactory = AnalysisContext.currentXFactory();,if (AnalysisContext != null ) XFactory xFactory = AnalysisContext.currentXFactory();
XFactory.java,String superClassName = superClass.getClassName();,if (superClass != null ) String superClassName = superClass.getClassName();
XFactory.java,XFactory xFactory = AnalysisContext.currentXFactory();,if (AnalysisContext != null ) XFactory xFactory = AnalysisContext.currentXFactory();
XFactory.java,String methodName = methodGen.getName();,if (methodGen != null ) String methodName = methodGen.getName();
XFactory.java,String methodSig = methodGen.getSignature();,if (methodGen != null ) String methodSig = methodGen.getSignature();
XFactory.java,int accessFlags = methodGen.getAccessFlags();,if (methodGen != null ) int accessFlags = methodGen.getAccessFlags();
UnconditionalValueDerefAnalysis.java,Instruction instruction = handle.getInstruction();,if (handle != null ) Instruction instruction = handle.getInstruction();
UnconditionalValueDerefAnalysis.java,NullnessAnnotationDatabase database = AnalysisContext.currentAnalysisContext().getNullnessAnnotationDatabase();,if (AnalysisContext != null ) NullnessAnnotationDatabase database = AnalysisContext.currentAnalysisContext().getNullnessAnnotationDatabase();
UnconditionalValueDerefAnalysis.java,IsNullValue value = invFrame.getTopValue();,if (invFrame != null ) IsNullValue value = invFrame.getTopValue();
UnconditionalValueDerefAnalysis.java,ValueNumber vn = vnaFrame.getTopValue();,if (vnaFrame != null ) ValueNumber vn = vnaFrame.getTopValue();
UnconditionalValueDerefAnalysis.java,NullnessAnnotationDatabase database = AnalysisContext.currentAnalysisContext().getNullnessAnnotationDatabase();,if (AnalysisContext != null ) NullnessAnnotationDatabase database = AnalysisContext.currentAnalysisContext().getNullnessAnnotationDatabase();
UnconditionalValueDerefAnalysis.java,"XField field = XFactory.createXField(fieldIns, methodGen.getConstantPool());","if (methodGen != null ) XField field = XFactory.createXField(fieldIns, methodGen.getConstantPool());"
UnconditionalValueDerefAnalysis.java,ValueNumber vn = vnaFrame.getTopValue();,if (vnaFrame != null ) ValueNumber vn = vnaFrame.getTopValue();
GenericUtilities.java,String result = obj.toString();,if (obj != null ) String result = obj.toString();
GenericUtilities.java,Type obj = atype.getBasicType();,if (atype != null ) Type obj = atype.getBasicType();
GenericUtilities.java,Iterator<String> iter = parser.parameterSignatureIterator();,if (parser != null ) Iterator<String> iter = parser.parameterSignatureIterator();
GenericUtilities.java,String parameterString = iter.next();,if (iter != null ) String parameterString = iter.next();
DerefFinder.java,NullnessAnnotationDatabase db = AnalysisContext.currentAnalysisContext().getNullnessAnnotationDatabase();,if (AnalysisContext != null ) NullnessAnnotationDatabase db = AnalysisContext.currentAnalysisContext().getNullnessAnnotationDatabase();
DerefFinder.java,Iterator<BasicBlock> bbIter = cfg.blockIterator();,if (cfg != null ) Iterator<BasicBlock> bbIter = cfg.blockIterator();
DerefFinder.java,ValueNumberFrame frameAtEntry = vna.getStartFact(cfg.getEntry());,if (vna != null ) ValueNumberFrame frameAtEntry = vna.getStartFact(cfg.getEntry());
DerefFinder.java,BasicBlock basicBlock = bbIter.next();,if (bbIter != null ) BasicBlock basicBlock = bbIter.next();
DerefFinder.java,InstructionHandle exceptionThrowerHandle = basicBlock.getExceptionThrower();,if (basicBlock != null ) InstructionHandle exceptionThrowerHandle = basicBlock.getExceptionThrower();
DerefFinder.java,Instruction exceptionThrower = exceptionThrowerHandle.getInstruction();,if (exceptionThrowerHandle != null ) Instruction exceptionThrower = exceptionThrowerHandle.getInstruction();
DerefFinder.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
DerefFinder.java,SignatureParser sigParser = new SignatureParser(m.getSignature());,if (SignatureParser(m != null ) SignatureParser sigParser = new SignatureParser(m.getSignature());
DerefFinder.java,int numParams = sigParser.getNumParameters();,if (sigParser != null ) int numParams = sigParser.getNumParameters();
DerefFinder.java,BitSet foo = property.getAsBitSet();,if (property != null ) BitSet foo = property.getAsBitSet();
DerefFinder.java,ValueNumber valueNumber = valueNumberFrame.getTopValue();,if (valueNumberFrame != null ) ValueNumber valueNumber = valueNumberFrame.getTopValue();
DerefFinder.java,ValueNumber valueNumber = valueNumberFrame.getTopValue();,if (valueNumberFrame != null ) ValueNumber valueNumber = valueNumberFrame.getTopValue();
IsNullValueFrameModelingVisitor.java,pushValue = IsNullValue.nonReportingNotNullValue();,if (IsNullValue != null ) pushValue = IsNullValue.nonReportingNotNullValue();
NullDerefAndRedundantComparisonFinder.java,IsNullValue isNullValue = invFrame.getTopValue();,if (invFrame != null ) IsNullValue isNullValue = invFrame.getTopValue();
NullDerefAndRedundantComparisonFinder.java,ValueNumberFrame vnaTargetFact = vnaDataflow.getStartFact(edge.getTarget());,if (vnaDataflow != null ) ValueNumberFrame vnaTargetFact = vnaDataflow.getStartFact(edge.getTarget());
NullDerefAndRedundantComparisonFinder.java,IsNullValueFrame invSourceFact = invDataflow.getResultFact(edge.getSource());,if (invDataflow != null ) IsNullValueFrame invSourceFact = invDataflow.getResultFact(edge.getSource());
NullDerefAndRedundantComparisonFinder.java,IsNullValueFrame invTargetFact = invDataflow.getStartFact(edge.getTarget());,if (invDataflow != null ) IsNullValueFrame invTargetFact = invDataflow.getStartFact(edge.getTarget());
NullDerefAndRedundantComparisonFinder.java,UnconditionalValueDerefSet uvdTargetFact = uvdDataflow.getResultFact(edge.getTarget());,if (uvdDataflow != null ) UnconditionalValueDerefSet uvdTargetFact = uvdDataflow.getResultFact(edge.getTarget());
NullDerefAndRedundantComparisonFinder.java,Location location = Location.getLastLocation(edge.getSource());,if (Location != null ) Location location = Location.getLastLocation(edge.getSource());
NullDerefAndRedundantComparisonFinder.java,ValueNumber valueNumber = entry.getKey();,if (entry != null ) ValueNumber valueNumber = entry.getKey();
NullDerefAndRedundantComparisonFinder.java,IsNullValue isNullValue = entry.getValue();,if (entry != null ) IsNullValue isNullValue = entry.getValue();
NullDerefAndRedundantComparisonFinder.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
FieldStoreTypeDatabase.java,Type fieldType = Type.getType(f.getSignature());,if (Type != null ) Type fieldType = Type.getType(f.getSignature());
StandardTypeMerger.java,byte aType = aRef.getType();,if (aRef != null ) byte aType = aRef.getType();
StandardTypeMerger.java,byte bType = bRef.getType();,if (bRef != null ) byte bType = bRef.getType();
TypeAnalysis.java,Code code = method.getCode();,if (method != null ) Code code = method.getCode();
ValueNumberFrame.java,XField field = availableLoad.getField();,if (availableLoad != null ) XField field = availableLoad.getField();
UserPreferences.java,String key = (String) e.getKey();,if (e != null ) String key = (String) e.getKey();
UserPreferences.java,String detectorState = (String) e.getValue();,if (e != null ) String detectorState = (String) e.getValue();
CompoundMatcher.java,int result = this.getClass().hashCode();,if (this != null ) int result = this.getClass().hashCode();
AboutDialog.java,aboutTabPane = new javax.swing.JTabbedPane();,if (javax != null ) aboutTabPane = new javax.swing.JTabbedPane();
AboutDialog.java,aboutScrollPane = new javax.swing.JScrollPane();,if (javax != null ) aboutScrollPane = new javax.swing.JScrollPane();
AboutDialog.java,aboutEditorPane = new javax.swing.JEditorPane();,if (javax != null ) aboutEditorPane = new javax.swing.JEditorPane();
AboutDialog.java,licenseEditorPane = new javax.swing.JEditorPane();,if (javax != null ) licenseEditorPane = new javax.swing.JEditorPane();
AboutDialog.java,acknowledgmentsScrollPane = new javax.swing.JScrollPane();,if (javax != null ) acknowledgmentsScrollPane = new javax.swing.JScrollPane();
AboutDialog.java,acknowldgementsEditorPane = new javax.swing.JEditorPane();,if (javax != null ) acknowldgementsEditorPane = new javax.swing.JEditorPane();
AboutDialog.java,okButton = new javax.swing.JButton();,if (javax != null ) okButton = new javax.swing.JButton();
AboutDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
AboutDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
AboutDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
ConfigureDetectorsDialog.java,detectorTableScrollPane = new javax.swing.JScrollPane();,if (javax != null ) detectorTableScrollPane = new javax.swing.JScrollPane();
ConfigureDetectorsDialog.java,detectorTable = new javax.swing.JTable();,if (javax != null ) detectorTable = new javax.swing.JTable();
ConfigureDetectorsDialog.java,detectorDescriptionScrollPane = new javax.swing.JScrollPane();,if (javax != null ) detectorDescriptionScrollPane = new javax.swing.JScrollPane();
ConfigureDetectorsDialog.java,okButton = new javax.swing.JButton();,if (javax != null ) okButton = new javax.swing.JButton();
ConfigureDetectorsDialog.java,cancelButton = new javax.swing.JButton();,if (javax != null ) cancelButton = new javax.swing.JButton();
ConfigureDetectorsDialog.java,restoreDefaultsButton = new javax.swing.JButton();,if (javax != null ) restoreDefaultsButton = new javax.swing.JButton();
ConfigureDetectorsDialog.java,DefaultTableModel m = (DefaultTableModel)detectorTable.getModel();,if ((DefaultTableModel)detectorTable != null ) DefaultTableModel m = (DefaultTableModel)detectorTable.getModel();
ConfigureDetectorsDialog.java,"DefaultSortedTableModel sortedModel = new DefaultSortedTableModel(m, detectorTable.getTableHeader());","if (detectorTable != null ) DefaultSortedTableModel sortedModel = new DefaultSortedTableModel(m, detectorTable.getTableHeader());"
ConfigureDetectorsDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
ConfigureDetectorsDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
ConfigureDetectorsDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
ConfigureDetectorsDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
ConfigureDetectorsDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
ConfigureDetectorsDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
ConfigureDetectorsDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,priorityButtonGroup = new javax.swing.ButtonGroup();,if (javax != null ) priorityButtonGroup = new javax.swing.ButtonGroup();
FindBugsFrame.java,effortButtonGroup = new javax.swing.ButtonGroup();,if (javax != null ) effortButtonGroup = new javax.swing.ButtonGroup();
FindBugsFrame.java,emptyPanel = new javax.swing.JPanel();,if (javax != null ) emptyPanel = new javax.swing.JPanel();
FindBugsFrame.java,reportPanel = new javax.swing.JPanel();,if (javax != null ) reportPanel = new javax.swing.JPanel();
FindBugsFrame.java,editProjectPanel = new javax.swing.JPanel();,if (javax != null ) editProjectPanel = new javax.swing.JPanel();
FindBugsFrame.java,jarNameTextField = new javax.swing.JTextField();,if (javax != null ) jarNameTextField = new javax.swing.JTextField();
FindBugsFrame.java,addJarButton = new javax.swing.JButton();,if (javax != null ) addJarButton = new javax.swing.JButton();
FindBugsFrame.java,jarFileListLabel = new javax.swing.JLabel();,if (javax != null ) jarFileListLabel = new javax.swing.JLabel();
FindBugsFrame.java,srcDirTextField = new javax.swing.JTextField();,if (javax != null ) srcDirTextField = new javax.swing.JTextField();
FindBugsFrame.java,addSourceDirButton = new javax.swing.JButton();,if (javax != null ) addSourceDirButton = new javax.swing.JButton();
FindBugsFrame.java,sourceDirListLabel = new javax.swing.JLabel();,if (javax != null ) sourceDirListLabel = new javax.swing.JLabel();
FindBugsFrame.java,removeSrcDirButton = new javax.swing.JButton();,if (javax != null ) removeSrcDirButton = new javax.swing.JButton();
FindBugsFrame.java,browseJarButton = new javax.swing.JButton();,if (javax != null ) browseJarButton = new javax.swing.JButton();
FindBugsFrame.java,editProjectLabel = new javax.swing.JLabel();,if (javax != null ) editProjectLabel = new javax.swing.JLabel();
FindBugsFrame.java,findBugsButton = new javax.swing.JButton();,if (javax != null ) findBugsButton = new javax.swing.JButton();
FindBugsFrame.java,jarFileListScrollPane = new javax.swing.JScrollPane();,if (javax != null ) jarFileListScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,jarFileList = new javax.swing.JList();,if (javax != null ) jarFileList = new javax.swing.JList();
FindBugsFrame.java,sourceDirListScrollPane = new javax.swing.JScrollPane();,if (javax != null ) sourceDirListScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,classpathEntryLabel = new javax.swing.JLabel();,if (javax != null ) classpathEntryLabel = new javax.swing.JLabel();
FindBugsFrame.java,classpathEntryListLabel = new javax.swing.JLabel();,if (javax != null ) classpathEntryListLabel = new javax.swing.JLabel();
FindBugsFrame.java,classpathEntryTextField = new javax.swing.JTextField();,if (javax != null ) classpathEntryTextField = new javax.swing.JTextField();
FindBugsFrame.java,addClasspathEntryButton = new javax.swing.JButton();,if (javax != null ) addClasspathEntryButton = new javax.swing.JButton();
FindBugsFrame.java,removeClasspathEntryButton = new javax.swing.JButton();,if (javax != null ) removeClasspathEntryButton = new javax.swing.JButton();
FindBugsFrame.java,classpathEntryListScrollPane = new javax.swing.JScrollPane();,if (javax != null ) classpathEntryListScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,sourceUpButton = new javax.swing.JButton();,if (javax != null ) sourceUpButton = new javax.swing.JButton();
FindBugsFrame.java,sourceDownButton = new javax.swing.JButton();,if (javax != null ) sourceDownButton = new javax.swing.JButton();
FindBugsFrame.java,classpathDownButton = new javax.swing.JButton();,if (javax != null ) classpathDownButton = new javax.swing.JButton();
FindBugsFrame.java,bugTreePanel = new javax.swing.JPanel();,if (javax != null ) bugTreePanel = new javax.swing.JPanel();
FindBugsFrame.java,bugTreeBugDetailsSplitter = new javax.swing.JSplitPane();,if (javax != null ) bugTreeBugDetailsSplitter = new javax.swing.JSplitPane();
FindBugsFrame.java,byClassScrollPane = new javax.swing.JScrollPane();,if (javax != null ) byClassScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,byClassBugTree = new javax.swing.JTree();,if (javax != null ) byClassBugTree = new javax.swing.JTree();
FindBugsFrame.java,byPackageBugTree = new javax.swing.JTree();,if (javax != null ) byPackageBugTree = new javax.swing.JTree();
FindBugsFrame.java,byBugTypeScrollPane = new javax.swing.JScrollPane();,if (javax != null ) byBugTypeScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,byBugCategoryScrollPane = new javax.swing.JScrollPane();,if (javax != null ) byBugCategoryScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,byBugCategoryBugTree = new javax.swing.JTree();,if (javax != null ) byBugCategoryBugTree = new javax.swing.JTree();
FindBugsFrame.java,bySummary = new javax.swing.JScrollPane();,if (javax != null ) bySummary = new javax.swing.JScrollPane();
FindBugsFrame.java,bugSummaryEditorPane = new javax.swing.JEditorPane();,if (javax != null ) bugSummaryEditorPane = new javax.swing.JEditorPane();
FindBugsFrame.java,bugDetailsTabbedPane = new javax.swing.JTabbedPane();,if (javax != null ) bugDetailsTabbedPane = new javax.swing.JTabbedPane();
FindBugsFrame.java,bugDescriptionEditorPane = new javax.swing.JEditorPane();,if (javax != null ) bugDescriptionEditorPane = new javax.swing.JEditorPane();
FindBugsFrame.java,sourceTextAreaScrollPane = new javax.swing.JScrollPane();,if (javax != null ) sourceTextAreaScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,sourceTextArea = new javax.swing.JTextArea();,if (javax != null ) sourceTextArea = new javax.swing.JTextArea();
FindBugsFrame.java,annotationTextArea = new javax.swing.JTextArea();,if (javax != null ) annotationTextArea = new javax.swing.JTextArea();
FindBugsFrame.java,urlLabel = new javax.swing.JLabel();,if (javax != null ) urlLabel = new javax.swing.JLabel();
FindBugsFrame.java,growBoxSpacer = new javax.swing.JLabel();,if (javax != null ) growBoxSpacer = new javax.swing.JLabel();
FindBugsFrame.java,theMenuBar = new javax.swing.JMenuBar();,if (javax != null ) theMenuBar = new javax.swing.JMenuBar();
FindBugsFrame.java,fileMenu = new javax.swing.JMenu();,if (javax != null ) fileMenu = new javax.swing.JMenu();
FindBugsFrame.java,openProjectItem = new javax.swing.JMenuItem();,if (javax != null ) openProjectItem = new javax.swing.JMenuItem();
FindBugsFrame.java,recentProjectsMenu = new javax.swing.JMenu();,if (javax != null ) recentProjectsMenu = new javax.swing.JMenu();
FindBugsFrame.java,saveProjectItem = new javax.swing.JMenuItem();,if (javax != null ) saveProjectItem = new javax.swing.JMenuItem();
FindBugsFrame.java,saveProjectAsItem = new javax.swing.JMenuItem();,if (javax != null ) saveProjectAsItem = new javax.swing.JMenuItem();
FindBugsFrame.java,reloadProjectItem = new javax.swing.JMenuItem();,if (javax != null ) reloadProjectItem = new javax.swing.JMenuItem();
FindBugsFrame.java,loadBugsItem = new javax.swing.JMenuItem();,if (javax != null ) loadBugsItem = new javax.swing.JMenuItem();
FindBugsFrame.java,saveBugsItem = new javax.swing.JMenuItem();,if (javax != null ) saveBugsItem = new javax.swing.JMenuItem();
FindBugsFrame.java,editMenu = new javax.swing.JMenu();,if (javax != null ) editMenu = new javax.swing.JMenu();
FindBugsFrame.java,cutItem = new javax.swing.JMenuItem();,if (javax != null ) cutItem = new javax.swing.JMenuItem();
FindBugsFrame.java,copyItem = new javax.swing.JMenuItem();,if (javax != null ) copyItem = new javax.swing.JMenuItem();
FindBugsFrame.java,selectAllItem = new javax.swing.JMenuItem();,if (javax != null ) selectAllItem = new javax.swing.JMenuItem();
FindBugsFrame.java,viewMenu = new javax.swing.JMenu();,if (javax != null ) viewMenu = new javax.swing.JMenu();
FindBugsFrame.java,fullDescriptionsItem = new javax.swing.JCheckBoxMenuItem();,if (javax != null ) fullDescriptionsItem = new javax.swing.JCheckBoxMenuItem();
FindBugsFrame.java,filterWarningsMenu = new javax.swing.JMenu();,if (javax != null ) filterWarningsMenu = new javax.swing.JMenu();
FindBugsFrame.java,lowPriorityButton = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) lowPriorityButton = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,mediumPriorityButton = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) mediumPriorityButton = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,highPriorityButton = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) highPriorityButton = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,viewProjectItem = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) viewProjectItem = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,viewBugsItem = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) viewBugsItem = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,configureDetectorsItem = new javax.swing.JMenuItem();,if (javax != null ) configureDetectorsItem = new javax.swing.JMenuItem();
FindBugsFrame.java,effortMenu = new javax.swing.JMenu();,if (javax != null ) effortMenu = new javax.swing.JMenu();
FindBugsFrame.java,minEffortItem = new javax.swing.JCheckBoxMenuItem();,if (javax != null ) minEffortItem = new javax.swing.JCheckBoxMenuItem();
FindBugsFrame.java,maxEffortItem = new javax.swing.JCheckBoxMenuItem();,if (javax != null ) maxEffortItem = new javax.swing.JCheckBoxMenuItem();
FindBugsFrame.java,helpMenu = new javax.swing.JMenu();,if (javax != null ) helpMenu = new javax.swing.JMenu();
FindBugsFrame.java,aboutItem = new javax.swing.JMenuItem();,if (javax != null ) aboutItem = new javax.swing.JMenuItem();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
ExecutionPlan.java,DetectorNode start = j.next().getSource();,if (j != null ) DetectorNode start = j.next().getSource();
ExecutionPlan.java,DetectorFactory startFactory = start.getFactory();,if (start != null ) DetectorFactory startFactory = start.getFactory();
LaunchBrowser.java,Runtime rt = Runtime.getRuntime();,if (Runtime != null ) Runtime rt = Runtime.getRuntime();
TopologicalSort.java,List<E> result = new ArrayList<E>(elements.size());,if (ArrayList<E>(elements != null ) List<E> result = new ArrayList<E>(elements.size());
SourceSearcher.java,String cName = srcLine.getClassName();,if (srcLine != null ) String cName = srcLine.getClassName();
Update.java,BugInstance newBug = (BugInstance) bug.clone();,if (bug != null ) BugInstance newBug = (BugInstance) bug.clone();
Update.java,ClassAnnotation classBugFoundIn = bug.getPrimaryClass();,if (bug != null ) ClassAnnotation classBugFoundIn = bug.getPrimaryClass();
Update.java,String className = classBugFoundIn.getClassName();,if (classBugFoundIn != null ) String className = classBugFoundIn.getClassName();
BadSyntaxForRegularExpression.java,Object value = it.getConstant();,if (it != null ) Object value = it.getConstant();
BadSyntaxForRegularExpression.java,Object value = it.getConstant();,if (it != null ) Object value = it.getConstant();
BadSyntaxForRegularExpression.java,Object value = it.getConstant();,if (it != null ) Object value = it.getConstant();
BuildNonnullReturnDatabase.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
BuildNonnullReturnDatabase.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
BuildUnconditionalParamDerefDatabase.java,SignatureParser parser =  new SignatureParser(method.getSignature());,if (SignatureParser(method != null ) SignatureParser parser =  new SignatureParser(method.getSignature());
BuildUnconditionalParamDerefDatabase.java,Iterator<String> paramIterator = parser.parameterSignatureIterator();,if (parser != null ) Iterator<String> paramIterator = parser.parameterSignatureIterator();
BuildUnconditionalParamDerefDatabase.java,String paramSig = paramIterator.next();,if (paramIterator != null ) String paramSig = paramIterator.next();
BuildUnconditionalParamDerefDatabase.java,nonnullReferenceParameters += unconditionalDerefSet.cardinality();,if (unconditionalDerefSet != null ) nonnullReferenceParameters += unconditionalDerefSet.cardinality();
ConfusionBetweenInheritedAndOuterMethod.java,String targetPackage = invokedMethod.getPackageName();,if (invokedMethod != null ) String targetPackage = invokedMethod.getPackageName();
DumbMethods.java,String superclassName = obj.getSuperclassName();,if (obj != null ) String superclassName = obj.getSuperclassName();
DumbMethods.java,Attribute[] attributes = obj.getAttributes();,if (obj != null ) Attribute[] attributes = obj.getAttributes();
FindBadCast2.java,LineNumberTable lineNumberTable = methodGen.getLineNumberTable(methodGen.getConstantPool());,if (methodGen != null ) LineNumberTable lineNumberTable = methodGen.getLineNumberTable(methodGen.getConstantPool());
FindBadCast2.java,int line = lineNumberTable.getSourceLine(handle.getPosition());,if (lineNumberTable != null ) int line = lineNumberTable.getSourceLine(handle.getPosition());
FindHEmismatch.java,String superclassName = obj.getSuperclassName();,if (obj != null ) String superclassName = obj.getSuperclassName();
FindHEmismatch.java,type = item.getJavaClass();,if (item != null ) type = item.getJavaClass();
FindHEmismatch.java,String sig = obj.getSignature();,if (obj != null ) String sig = obj.getSignature();
FindNullDeref.java,JavaClass jclass = classContext.getJavaClass();,if (classContext != null ) JavaClass jclass = classContext.getJavaClass();
FindNullDeref.java,String className = jclass.getClassName();,if (jclass != null ) String className = jclass.getClassName();
FindNullDeref.java,Method[] methodList = jclass.getMethods();,if (jclass != null ) Method[] methodList = jclass.getMethods();
FindNullDeref.java,ConstantPoolGen cpg = classContext.getConstantPoolGen();,if (classContext != null ) ConstantPoolGen cpg = classContext.getConstantPoolGen();
FindNullDeref.java,IsNullValue tos = frame.getTopValue();,if (frame != null ) IsNullValue tos = frame.getTopValue();
FindNullDeref.java,ValueNumber valueNumber = vnaFrame.getTopValue();,if (vnaFrame != null ) ValueNumber valueNumber = vnaFrame.getTopValue();
FindNullDeref.java,IsNullValue tos = frame.getTopValue();,if (frame != null ) IsNullValue tos = frame.getTopValue();
FindNullDeref.java,String methodName = method.getName();,if (method != null ) String methodName = method.getName();
FindNullDeref.java,boolean onExceptionPath = refValue.isException();,if (refValue != null ) boolean onExceptionPath = refValue.isException();
FindNullDeref.java,int pc = location.getHandle().getPosition();,if (location != null ) int pc = location.getHandle().getPosition();
FindNullDeref.java,InstructionHandle ins = target.getFirstInstruction();,if (target != null ) InstructionHandle ins = target.getFirstInstruction();
FindNullDeref.java,Instruction i = ins.getInstruction();,if (ins != null ) Instruction i = ins.getInstruction();
FindNullDeref.java,ins = ins.getNext();,if (ins != null ) ins = ins.getNext();
FindNullDeref.java,boolean isChecked = redundantBranch.firstValue.isChecked();,if (redundantBranch != null ) boolean isChecked = redundantBranch.firstValue.isChecked();
FindNullDeref.java,createdDeadCode = invFrame.isTop();,if (invFrame != null ) createdDeadCode = invFrame.isTop();
FindNullDeref.java,Instruction ins = location.getHandle().getInstruction();,if (location != null ) Instruction ins = location.getHandle().getInstruction();
FindNullDeref.java,Instruction ins = location.getHandle().getInstruction();,if (location != null ) Instruction ins = location.getHandle().getInstruction();
FindNullDeref.java,LineNumberTable table = method.getLineNumberTable();,if (method != null ) LineNumberTable table = method.getLineNumberTable();
FindNullDeref.java,int startLine = sourceLineAnnotation.getStartLine();,if (sourceLineAnnotation != null ) int startLine = sourceLineAnnotation.getStartLine();
FindNullDeref.java,Location loc = derefLocationSet.iterator().next();,if (derefLocationSet != null ) Location loc = derefLocationSet.iterator().next();
FindNullDeref.java,String methodName = method.getName();,if (method != null ) String methodName = method.getName();
FindNullDeref.java,XField nonNullField = pu.getNonNullField();,if (pu != null ) XField nonNullField = pu.getNonNullField();
FindNullDeref.java,XMethodParameter nonNullParameter = pu.getNonNullParameter();,if (pu != null ) XMethodParameter nonNullParameter = pu.getNonNullParameter();
FindNullDeref.java,invokedMethod =  MethodAnnotation.fromXMethod(mp.getMethod());,if (MethodAnnotation != null ) invokedMethod =  MethodAnnotation.fromXMethod(mp.getMethod());
FindNullDeref.java,parameterNumber = mp.getParameterNumber();,if (mp != null ) parameterNumber = mp.getParameterNumber();
FindNullDeref.java,int pc = loc.getHandle().getPosition();,if (loc != null ) int pc = loc.getHandle().getPosition();
FindPuzzlers.java,Object o = item.getConstant();,if (item != null ) Object o = item.getConstant();
FindPuzzlers.java,String classNameForPreviousMethod = previousMethodInvocation.getClassName();,if (previousMethodInvocation != null ) String classNameForPreviousMethod = previousMethodInvocation.getClassName();
FindSelfComparison2.java,Instruction ins = location.getHandle().getInstruction();,if (location != null ) Instruction ins = location.getHandle().getInstruction();
FindSelfComparison2.java,int opcode = ins.getOpcode();,if (ins != null ) int opcode = ins.getOpcode();
FindSelfComparison2.java,int line = sourceLine.getStartLine();,if (sourceLine != null ) int line = sourceLine.getStartLine();
FindSqlInjection.java,"sawOpenQuote = Math.min(sawOpenQuote, handle.getPosition());","if (handle != null ) sawOpenQuote = Math.min(sawOpenQuote, handle.getPosition());"
FindSqlInjection.java,"sawCloseQuote = Math.min(sawCloseQuote, handle.getPosition());","if (handle != null ) sawCloseQuote = Math.min(sawCloseQuote, handle.getPosition());"
FindSqlInjection.java,"sawComma = Math.min(sawComma, handle.getPosition());","if (handle != null ) sawComma = Math.min(sawComma, handle.getPosition());"
FindSqlInjection.java,"sawAppend = Math.min(sawAppend, handle.getPosition());","if (handle != null ) sawAppend = Math.min(sawAppend, handle.getPosition());"
FindSqlInjection.java,"sawUnsafeAppend = Math.min(sawUnsafeAppend, handle.getPosition());","if (handle != null ) sawUnsafeAppend = Math.min(sawUnsafeAppend, handle.getPosition());"
FindSqlInjection.java,"sawTaint = Math.min(sawTaint, handle.getPosition());","if (handle != null ) sawTaint = Math.min(sawTaint, handle.getPosition());"
FindSqlInjection.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
FindSqlInjection.java,Method[] methodList = javaClass.getMethods();,if (javaClass != null ) Method[] methodList = javaClass.getMethods();
FindSqlInjection.java,Instruction ins = location.getHandle().getInstruction();,if (location != null ) Instruction ins = location.getHandle().getInstruction();
FindSqlInjection.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
FindSqlInjection.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
FindSqlInjection.java,String sig = method.getSignature();,if (method != null ) String sig = method.getSignature();
FindSqlInjection.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
FindSqlInjection.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
FindSqlInjection.java,Type operandType = frame.getTopValue();,if (frame != null ) Type operandType = frame.getTopValue();
FindSqlInjection.java,Instruction prevIns = location.getHandle().getInstruction();,if (location != null ) Instruction prevIns = location.getHandle().getInstruction();
FindSqlInjection.java,Instruction prevIns = handle.getInstruction();,if (handle != null ) Instruction prevIns = handle.getInstruction();
FindSqlInjection.java,BasicBlock block = loc.getBasicBlock();,if (loc != null ) BasicBlock block = loc.getBasicBlock();
FindSqlInjection.java,BasicBlock block = loc.getBasicBlock();,if (loc != null ) BasicBlock block = loc.getBasicBlock();
FindSqlInjection.java,Instruction instruction = handle.getInstruction();,if (handle != null ) Instruction instruction = handle.getInstruction();
FindSqlInjection.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
FindSqlInjection.java,ConstantPoolGen cpg = methodGen.getConstantPool();,if (methodGen != null ) ConstantPoolGen cpg = methodGen.getConstantPool();
FindUnrelatedTypesInGenericContainer.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
FindUnrelatedTypesInGenericContainer.java,Method[] methodList = javaClass.getMethods();,if (javaClass != null ) Method[] methodList = javaClass.getMethods();
FindUnrelatedTypesInGenericContainer.java,ConstantPoolGen cpg = classContext.getConstantPoolGen();,if (classContext != null ) ConstantPoolGen cpg = classContext.getConstantPoolGen();
FindUnrelatedTypesInGenericContainer.java,String sourceFile = classContext.getJavaClass().getSourceFileName();,if (classContext != null ) String sourceFile = classContext.getJavaClass().getSourceFileName();
FindUnrelatedTypesInGenericContainer.java,Location location = iter.next();,if (iter != null ) Location location = iter.next();
FindUnrelatedTypesInGenericContainer.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
FindUnrelatedTypesInGenericContainer.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
FindUnrelatedTypesInGenericContainer.java,Type operandType = frame.getTopValue();,if (frame != null ) Type operandType = frame.getTopValue();
FindUnrelatedTypesInGenericContainer.java,String className = ref.getClass(cpg.getConstantPool());,if (ref != null ) String className = ref.getClass(cpg.getConstantPool());
FindUnrelatedTypesInGenericContainer.java,String methodName = refNT.getName(cpg.getConstantPool());,if (refNT != null ) String methodName = refNT.getName(cpg.getConstantPool());
FindUnrelatedTypesInGenericContainer.java,String methodSignature = refNT.getSignature(cpg.getConstantPool());,if (refNT != null ) String methodSignature = refNT.getSignature(cpg.getConstantPool());
InvalidJUnitTest.java,String sName = jClass.getSuperclassName();,if (jClass != null ) String sName = jClass.getSuperclassName();
InvalidJUnitTest.java,JavaClass sClass = jClass.getSuperClass();,if (jClass != null ) JavaClass sClass = jClass.getSuperClass();
InvalidJUnitTest.java,JavaClass sClass = jClass.getSuperClass();,if (jClass != null ) JavaClass sClass = jClass.getSuperClass();
NumberConstructor.java,int majorVersion = classContext.getJavaClass().getMajor();,if (classContext != null ) int majorVersion = classContext.getJavaClass().getMajor();
StaticCalendarDetector.java,currentClass = someObj.getClassName();,if (someObj != null ) currentClass = someObj.getClassName();
StaticCalendarDetector.java,String tFieldSig = aField.getSignature();,if (aField != null ) String tFieldSig = aField.getSignature();
StaticCalendarDetector.java,boolean tIsStatic = aField.isStatic();,if (aField != null ) boolean tIsStatic = aField.isStatic();
UncallableMethodOfAnonymousClass.java,String methodName = obj.getName();,if (obj != null ) String methodName = obj.getName();
UncallableMethodOfAnonymousClass.java,String sig = obj.getSignature();,if (obj != null ) String sig = obj.getSignature();
XMLFactoryBypass.java,String invokerClsName = this.getClassName();,if (this != null ) String invokerClsName = this.getClassName();
FindBugsTask.java,String[] elementList = src.list();,if (src != null ) String[] elementList = src.list();
FindBugsViewerTask.java,int rc = findbugsEngine.executeJava();,if (findbugsEngine != null ) int rc = findbugsEngine.executeJava();
FilterPropertyDatabase.java,String s = in.readLine();,if (in != null ) String s = in.readLine();
AboutDialog.java,licenseScrollPane = new javax.swing.JScrollPane();,if (javax != null ) licenseScrollPane = new javax.swing.JScrollPane();
AboutDialog.java,URL url = evt.getURL();,if (evt != null ) URL url = evt.getURL();
NumberedParagraphView.java,String lineNumberString = lineNumber.toString();,if (lineNumber != null ) String lineNumberString = lineNumber.toString();
NumberedParagraphView.java,int count = parent.getViewCount();,if (parent != null ) int count = parent.getViewCount();
AboutDialog.java,aboutTabPane = new javax.swing.JTabbedPane();,if (javax != null ) aboutTabPane = new javax.swing.JTabbedPane();
AboutDialog.java,aboutScrollPane = new javax.swing.JScrollPane();,if (javax != null ) aboutScrollPane = new javax.swing.JScrollPane();
AboutDialog.java,aboutEditorPane = new javax.swing.JEditorPane();,if (javax != null ) aboutEditorPane = new javax.swing.JEditorPane();
AboutDialog.java,licenseEditorPane = new javax.swing.JEditorPane();,if (javax != null ) licenseEditorPane = new javax.swing.JEditorPane();
AboutDialog.java,acknowledgmentsScrollPane = new javax.swing.JScrollPane();,if (javax != null ) acknowledgmentsScrollPane = new javax.swing.JScrollPane();
AboutDialog.java,acknowldgementsEditorPane = new javax.swing.JEditorPane();,if (javax != null ) acknowldgementsEditorPane = new javax.swing.JEditorPane();
AboutDialog.java,okButton = new javax.swing.JButton();,if (javax != null ) okButton = new javax.swing.JButton();
AboutDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
AboutDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
AboutDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
AnalyzingDialog.java,MainFrame instance = MainFrame.getInstance();,if (MainFrame != null ) MainFrame instance = MainFrame.getInstance();
HashList.java,E i = iterator.next();,if (iterator != null ) E i = iterator.next();
MainFrame.java,CardLayout layout = (CardLayout) cardPanel.getLayout();,if (cardPanel != null ) CardLayout layout = (CardLayout) cardPanel.getLayout();
MainFrame.java,CardLayout layout = (CardLayout) cardPanel.getLayout();,if (cardPanel != null ) CardLayout layout = (CardLayout) cardPanel.getLayout();
SourceCodeDisplay.java,String sourceFile = thisSource.getSourceFile();,if (thisSource != null ) String sourceFile = thisSource.getSourceFile();
SourceCodeDisplay.java,sourceFile = thisSource.getSimpleClassName();,if (thisSource != null ) sourceFile = thisSource.getSimpleClassName();
SpringUtilities.java,layout = (SpringLayout)parent.getLayout();,if ((SpringLayout)parent != null ) layout = (SpringLayout)parent.getLayout();
SpringUtilities.java,"maxWidthSpring = Spring.max(maxWidthSpring, cons.getWidth());","if (cons != null ) maxWidthSpring = Spring.max(maxWidthSpring, cons.getWidth());"
SpringUtilities.java,"maxHeightSpring = Spring.max(maxHeightSpring, cons.getHeight());","if (cons != null ) maxHeightSpring = Spring.max(maxHeightSpring, cons.getHeight());"
SpringUtilities.java,SpringLayout layout = (SpringLayout) parent.getLayout();,if (parent != null ) SpringLayout layout = (SpringLayout) parent.getLayout();
SpringUtilities.java,layout = (SpringLayout)parent.getLayout();,if ((SpringLayout)parent != null ) layout = (SpringLayout)parent.getLayout();
NavigableTextPane.java,int y = pq.remove();,if (pq != null ) int y = pq.remove();
NumberedParagraphView.java,int numberY = r.y + metrics.getAscent();,if (metrics != null ) int numberY = r.y + metrics.getAscent();
NumberedParagraphView.java,View parent = this.getParent();,if (this != null ) View parent = this.getParent();
NumberedParagraphView.java,lineCount += parent.getView(i).getViewCount();,if (parent != null ) lineCount += parent.getView(i).getViewCount();
NumberedParagraphView.java,Element element = this.getElement();,if (this != null ) Element element = this.getElement();
NumberedParagraphView.java,Element parent = element.getParentElement();,if (element != null ) Element parent = element.getParentElement();
NumberedParagraphView.java,int count = parent.getElementCount();,if (parent != null ) int count = parent.getElementCount();
NumberedViewFactory.java,String kind = elem.getName();,if (elem != null ) String kind = elem.getName();
TigerSubstitutesTest.java,Class c = test.getClass();,if (test != null ) Class c = test.getClass();
FixIndentation.java,String s = in.readLine();,if (in != null ) String s = in.readLine();
ReturnPathTypeTest.java,boolean b = top.canReturnNormally();// should throw exception,if (exception != null ) boolean b = top.canReturnNormally();// should throw exception
SourceLineAnnotation.java,Method method = targetMethod.getMethod();,if (targetMethod != null ) Method method = targetMethod.getMethod();
SourceLineAnnotation.java,code = targetMethod.getMethod().getCode();,if (targetMethod != null ) code = targetMethod.getMethod().getCode();
MethodAnnotation.java,SourceInfoMap sourceInfoMap = AnalysisContext.currentAnalysisContext().getSourceInfoMap();,if (AnalysisContext != null ) SourceInfoMap sourceInfoMap = AnalysisContext.currentAnalysisContext().getSourceInfoMap();
SourceLineAnnotation.java,String className = visitor.getDottedClassName();,if (visitor != null ) String className = visitor.getDottedClassName();
SourceLineAnnotation.java,String sourceFile = visitor.getSourceFile();,if (visitor != null ) String sourceFile = visitor.getSourceFile();
SourceLineAnnotation.java,Code code = visitor.getMethod().getCode();,if (visitor != null ) Code code = visitor.getMethod().getCode();
SourceLineAnnotation.java,SourceInfoMap sourceInfoMap = AnalysisContext.currentAnalysisContext().getSourceInfoMap();,if (AnalysisContext != null ) SourceInfoMap sourceInfoMap = AnalysisContext.currentAnalysisContext().getSourceInfoMap();
BugTreeView.java,Tree treeToRemove = projectTrees.get(theProject.getName());,if (projectTrees != null ) Tree treeToRemove = projectTrees.get(theProject.getName());
BugTreeView.java,Tree theTree = projectTrees.get(theProject.getName());,if (projectTrees != null ) Tree theTree = projectTrees.get(theProject.getName());
FindDeadLocalStores.java,prevOpCode = prev.getInstruction().getOpcode();,if (prev != null ) prevOpCode = prev.getInstruction().getOpcode();
FindDeadLocalStores.java,int local = ins.getIndex();,if (ins != null ) int local = ins.getIndex();
FindDeadLocalStores.java,String name = lvAnnotation.getName();,if (lvAnnotation != null ) String name = lvAnnotation.getName();
FindDeadLocalStores.java,InstructionHandle prevInsHandle = location.getHandle().getPrev();,if (location != null ) InstructionHandle prevInsHandle = location.getHandle().getPrev();
FindDeadLocalStores.java,Instruction prevIns = prevInsHandle.getInstruction();,if (prevInsHandle != null ) Instruction prevIns = prevInsHandle.getInstruction();
FindDeadLocalStores.java,prevOpCode = prev.getInstruction().getOpcode();,if (prev != null ) prevOpCode = prev.getInstruction().getOpcode();
FindDeadLocalStores.java,Instruction prevIns = prev.getInstruction();,if (prev != null ) Instruction prevIns = prev.getInstruction();
FindBugsWorker.java,String[] includeFilterFiles = extendedPrefs.getIncludeFilterFiles();,if (extendedPrefs != null ) String[] includeFilterFiles = extendedPrefs.getIncludeFilterFiles();
FindBugsWorker.java,String[] excludeFilterFiles = extendedPrefs.getExcludeFilterFiles();,if (extendedPrefs != null ) String[] excludeFilterFiles = extendedPrefs.getExcludeFilterFiles();
FindDeadLocalStores.java,int local = ins.getIndex();,if (ins != null ) int local = ins.getIndex();
InfiniteRecursiveLoop2.java,String sourceFile = javaClass.getSourceFileName();,if (javaClass != null ) String sourceFile = javaClass.getSourceFileName();
UserPreferences.java,Iterator propKeysIter = props.keySet().iterator();,if (props != null ) Iterator propKeysIter = props.keySet().iterator();
UserPreferences.java,String key = (String) propKeysIter.next();,if (propKeysIter != null ) String key = (String) propKeysIter.next();
FindInconsistentSync2.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
FindInconsistentSync2.java,String sourceFile = javaClass.getSourceFileName();,if (javaClass != null ) String sourceFile = javaClass.getSourceFileName();
InfiniteRecursiveLoop2.java,String sourceFile = javaClass.getSourceFileName();,if (javaClass != null ) String sourceFile = javaClass.getSourceFileName();
FindJSR166LockMonitorenter.java,String sourceFile = classContext.getJavaClass().getSourceFileName();,if (classContext != null ) String sourceFile = classContext.getJavaClass().getSourceFileName();
FindSleepWithLockHeld.java,String sourceFile = classContext.getJavaClass().getSourceFileName();,if (classContext != null ) String sourceFile = classContext.getJavaClass().getSourceFileName();
MainFrame.java,String name = curProject.getProjectName();,if (curProject != null ) String name = curProject.getProjectName();
MainFrame.java,name = saveFile.getAbsolutePath();,if (saveFile != null ) name = saveFile.getAbsolutePath();
MainFrame.java,String name = curProject.getProjectName();,if (curProject != null ) String name = curProject.getProjectName();
MainFrame.java,name = saveFile.getAbsolutePath();,if (saveFile != null ) name = saveFile.getAbsolutePath();
MainFrame.java,BugTreeModel model=(BugTreeModel)tree.getModel();,if (model=(BugTreeModel)tree != null ) BugTreeModel model=(BugTreeModel)tree.getModel();
MainFrame.java,String name = project.getProjectName();,if (project != null ) String name = project.getProjectName();
MainFrame.java,String name = curProject.getProjectName();,if (curProject != null ) String name = curProject.getProjectName();
MethodAnnotation.java,pkgName = primaryClass.getPackageName();,if (primaryClass != null ) pkgName = primaryClass.getPackageName();
FindNullDeref.java,String sourceFile = classContext.getJavaClass().getSourceFileName();,if (classContext != null ) String sourceFile = classContext.getJavaClass().getSourceFileName();
FindNullDeref.java,String sourceFile = classContext.getJavaClass().getSourceFileName();,if (classContext != null ) String sourceFile = classContext.getJavaClass().getSourceFileName();
FindNullDeref.java,String sourceFile = classContext.getJavaClass().getSourceFileName();,if (classContext != null ) String sourceFile = classContext.getJavaClass().getSourceFileName();
FindNullDeref.java,String sourceFile = classContext.getJavaClass().getSourceFileName();,if (classContext != null ) String sourceFile = classContext.getJavaClass().getSourceFileName();
MainFrame.java,BugTreeModel model=(BugTreeModel)tree.getModel();,if (model=(BugTreeModel)tree != null ) BugTreeModel model=(BugTreeModel)tree.getModel();
AnalyzingDialog.java,JTree tree = MainFrame.getInstance().getTree();,if (MainFrame != null ) JTree tree = MainFrame.getInstance().getTree();
AnalyzingDialog.java,TreeModel treeModel = tree.getModel();,if (tree != null ) TreeModel treeModel = tree.getModel();
BugLoader.java,BugInstance bug=node.getBug();,if (bug=node != null ) BugInstance bug=node.getBug();
MainFrame.java,curProject=BugLoader.getLoadedProject();,if (curProject=BugLoader != null ) curProject=BugLoader.getLoadedProject();
MainFrame.java,BugTreeModel model=(BugTreeModel)tree.getModel();,if (model=(BugTreeModel)tree != null ) BugTreeModel model=(BugTreeModel)tree.getModel();
MainFrame.java,ArrayList<File> xmlFiles=GUISaveState.getInstance().getRecentAnalyses();,if (xmlFiles=GUISaveState != null ) ArrayList<File> xmlFiles=GUISaveState.getInstance().getRecentAnalyses();
SourceLineAnnotation.java,String className = visitor.getDottedClassName();,if (visitor != null ) String className = visitor.getDottedClassName();
SourceLineAnnotation.java,String sourceFile = visitor.getSourceFile();,if (visitor != null ) String sourceFile = visitor.getSourceFile();
SourceLineAnnotation.java,Code code = visitor.getMethod().getCode();,if (visitor != null ) Code code = visitor.getMethod().getCode();
BugLoader.java,List<String> possibleDirectories=project.getSourceDirList();,if (possibleDirectories=project != null ) List<String> possibleDirectories=project.getSourceDirList();
BugSaver.java,Iterator<BugLeafNode> iter = data.iterator();,if (data != null ) Iterator<BugLeafNode> iter = data.iterator();
MainFrame.java,dir = jfc.getSelectedFile();,if (jfc != null ) dir = jfc.getSelectedFile();
MainFrame.java,exists=xmlFile.exists() && fasFile.exists();,if (fasFile != null ) exists=xmlFile.exists() && fasFile.exists();
MainFrame.java,File file = jfc.getSelectedFile();,if (jfc != null ) File file = jfc.getSelectedFile();
MainFrame.java,BugSet bs=BugLoader.combineBugHistories();,if (bs=BugLoader != null ) BugSet bs=BugLoader.combineBugHistories();
MainFrame.java,curProject=BugLoader.getLoadedProject();,if (curProject=BugLoader != null ) curProject=BugLoader.getLoadedProject();
MainFrame.java,final File dir = jfc.getSelectedFile();,if (jfc != null ) final File dir = jfc.getSelectedFile();
MainFrame.java,BugTreeModel model=(BugTreeModel)tree.getModel();,if (model=(BugTreeModel)tree != null ) BugTreeModel model=(BugTreeModel)tree.getModel();
MainFrame.java,ArrayList<File> xmlFiles=GUISaveState.getInstance().getRecentProjects();,if (xmlFiles=GUISaveState != null ) ArrayList<File> xmlFiles=GUISaveState.getInstance().getRecentProjects();
MainFrame.java,dir = jfc.getSelectedFile();,if (jfc != null ) dir = jfc.getSelectedFile();
MainFrame.java,exists=xmlFile.exists() && fasFile.exists();,if (fasFile != null ) exists=xmlFile.exists() && fasFile.exists();
DuplicateBranches.java,endPos = last.getPosition(); // don't store the goto,if (goto != null ) endPos = last.getPosition(); // don't store the goto
DetailsView.java,IWorkbenchPage[] pages = FindbugsPlugin.getActiveWorkbenchWindow().getPages();,if (FindbugsPlugin != null ) IWorkbenchPage[] pages = FindbugsPlugin.getActiveWorkbenchWindow().getPages();
BugTreeView.java,Tree theTree = projectTrees.get(theProject.getName());,if (projectTrees != null ) Tree theTree = projectTrees.get(theProject.getName());
MainFrame.java,File xmlFile = chooser.getSelectedFile();,if (chooser != null ) File xmlFile = chooser.getSelectedFile();
MainFrame.java,File file = jfc.getSelectedFile();,if (jfc != null ) File file = jfc.getSelectedFile();
MainFrame.java,final File dir = jfc.getSelectedFile();,if (jfc != null ) final File dir = jfc.getSelectedFile();
MainFrame.java,BugTreeModel model=(BugTreeModel)tree.getModel();,if (model=(BugTreeModel)tree != null ) BugTreeModel model=(BugTreeModel)tree.getModel();
MainFrame.java,ArrayList<File> xmlFiles=GUISaveState.getInstance().getRecentProjects();,if (xmlFiles=GUISaveState != null ) ArrayList<File> xmlFiles=GUISaveState.getInstance().getRecentProjects();
Update.java,BugInstance newBug = (BugInstance) bug.clone();,if (bug != null ) BugInstance newBug = (BugInstance) bug.clone();
Update.java,ClassAnnotation classBugFoundIn = bug.getPrimaryClass();,if (bug != null ) ClassAnnotation classBugFoundIn = bug.getPrimaryClass();
Update.java,String className = classBugFoundIn.getClassName();,if (classBugFoundIn != null ) String className = classBugFoundIn.getClassName();
FindNullDeref.java,invokedMethod =  MethodAnnotation.fromXMethod(mp.getMethod());,if (MethodAnnotation != null ) invokedMethod =  MethodAnnotation.fromXMethod(mp.getMethod());
FindNullDeref.java,parameterNumber = mp.getParameterNumber();,if (mp != null ) parameterNumber = mp.getParameterNumber();
NullDerefAndRedundantComparisonFinder.java,Location location = Location.getLastLocation(edge.getSource());,if (Location != null ) Location location = Location.getLastLocation(edge.getSource());
NullDerefAndRedundantComparisonFinder.java,IsNullValueFrame invSourceFact = invDataflow.getResultFact(edge.getSource());,if (invDataflow != null ) IsNullValueFrame invSourceFact = invDataflow.getResultFact(edge.getSource());
NullDerefAndRedundantComparisonFinder.java,IsNullValueFrame invTargetFact = invDataflow.getStartFact(edge.getTarget());,if (invDataflow != null ) IsNullValueFrame invTargetFact = invDataflow.getStartFact(edge.getTarget());
NullDerefAndRedundantComparisonFinder.java,UnconditionalValueDerefSet uvdSourceFact = uvdDataflow.getResultFact(edge.getSource());,if (uvdDataflow != null ) UnconditionalValueDerefSet uvdSourceFact = uvdDataflow.getResultFact(edge.getSource());
NullDerefAndRedundantComparisonFinder.java,UnconditionalValueDerefSet uvdTargetFact = uvdDataflow.getStartFact(edge.getTarget());,if (uvdDataflow != null ) UnconditionalValueDerefSet uvdTargetFact = uvdDataflow.getStartFact(edge.getTarget());
NullDerefAndRedundantComparisonFinder.java,UnconditionalValueDerefSet uvdFact = uvdDataflow.getStartFact(edge.getTarget());,if (uvdDataflow != null ) UnconditionalValueDerefSet uvdFact = uvdDataflow.getStartFact(edge.getTarget());
UnconditionalValueDerefSet.java,Collection<ValueNumber> valueNumbers = vnaFrame.allSlots();,if (vnaFrame != null ) Collection<ValueNumber> valueNumbers = vnaFrame.allSlots();
OpcodeStack.java,List<Item> jumpEntry = jumpEntries.get(dbc.getPC());,if (jumpEntries != null ) List<Item> jumpEntry = jumpEntries.get(dbc.getPC());
UnconditionalValueDerefSet.java,Set<ValueNumber> valueNumbers = new HashSet<ValueNumber>(vnaFrame.allSlots());,if (HashSet<ValueNumber>(vnaFrame != null ) Set<ValueNumber> valueNumbers = new HashSet<ValueNumber>(vnaFrame.allSlots());
ValueNumberFrame.java,int size = previouslyKnownAsOther.size();,if (previouslyKnownAsOther != null ) int size = previouslyKnownAsOther.size();
XFactory.java,XFactory xFactory = AnalysisContext.currentXFactory();,if (AnalysisContext != null ) XFactory xFactory = AnalysisContext.currentXFactory();
ClassContext.java,Code code = methodGen.getMethod().getCode();,if (methodGen != null ) Code code = methodGen.getMethod().getCode();
PruneUnconditionalExceptionThrowerEdges.java,TypeDataflow typeDataflow = classContext.getTypeDataflow(methodGen.getMethod());,if (classContext != null ) TypeDataflow typeDataflow = classContext.getTypeDataflow(methodGen.getMethod());
XFactory.java,XFactory xFactory = AnalysisContext.currentXFactory();,if (AnalysisContext != null ) XFactory xFactory = AnalysisContext.currentXFactory();
XFactory.java,boolean isStatic = method.isStatic();,if (method != null ) boolean isStatic = method.isStatic();
FindRefComparison.java,Method method = methodGen.getMethod();,if (methodGen != null ) Method method = methodGen.getMethod();
FindSelfComparison2.java,BitSet occursMultipleTimes = ClassContext.linesMentionedMultipleTimes(methodGen.getMethod());,if (ClassContext != null ) BitSet occursMultipleTimes = ClassContext.linesMentionedMultipleTimes(methodGen.getMethod());
FindBugsWorker.java,IResource projRes = proj.getResource();,if (proj != null ) IResource projRes = proj.getResource();
FindBugsWorker.java,IPath projectLocation = javaProject.getProject().getLocation();,if (javaProject != null ) IPath projectLocation = javaProject.getProject().getLocation();
FindBugsWorker.java,IPath path = classpathEntry.getOutputLocation();,if (classpathEntry != null ) IPath path = classpathEntry.getOutputLocation();
FindBugsWorker.java,IPath def = javaProject.getOutputLocation();,if (javaProject != null ) IPath def = javaProject.getOutputLocation();
Extension.java,DerInputStream in = derVal.toDerInputStream();,if (derVal != null ) DerInputStream in = derVal.toDerInputStream();
Extension.java,extensionId = in.getOID();,if (in != null ) extensionId = in.getOID();
Extension.java,DerValue val = in.getDerValue();,if (in != null ) DerValue val = in.getDerValue();
Extension.java,critical = val.getBoolean();,if (val != null ) critical = val.getBoolean();
Extension.java,val = in.getDerValue();,if (in != null ) val = in.getDerValue();
Extension.java,extensionValue = val.getOctetString();,if (val != null ) extensionValue = val.getOctetString();
Extension.java,extensionValue = val.getOctetString();,if (val != null ) extensionValue = val.getOctetString();
Extension.java,this.extensionValue = inDerVal.getOctetString();,if (inDerVal != null ) this.extensionValue = inDerVal.getOctetString();
Extension.java,"String s = ""ObjectId: "" + extensionId.toString();","if (extensionId != null ) String s = ""ObjectId: "" + extensionId.toString();"
FindBugs2.java,List<ClassDescriptor> result = new ArrayList<ClassDescriptor>(classList.size());,if (ArrayList<ClassDescriptor>(classList != null ) List<ClassDescriptor> result = new ArrayList<ClassDescriptor>(classList.size());
ClassContext.java,String thisClassName = getJavaClass().getClassName();,if (getJavaClass() != null ) String thisClassName = getJavaClass().getClassName();
ClassContext.java,String thisClassName = getJavaClass().getClassName();,if (getJavaClass() != null ) String thisClassName = getJavaClass().getClassName();
BuildUnconditionalParamDerefDatabase.java,String thisClassName = classContext.getJavaClass().getClassName();,if (classContext != null ) String thisClassName = classContext.getJavaClass().getClassName();
BuildUnconditionalParamDerefDatabase.java,ConstantPoolGen cpg = classContext.getConstantPoolGen();,if (classContext != null ) ConstantPoolGen cpg = classContext.getConstantPoolGen();
BuildUnconditionalParamDerefDatabase.java,String thisClassName = classContext.getJavaClass().getClassName();,if (classContext != null ) String thisClassName = classContext.getJavaClass().getClassName();
BuildUnconditionalParamDerefDatabase.java,ConstantPoolGen cpg = classContext.getConstantPoolGen();,if (classContext != null ) ConstantPoolGen cpg = classContext.getConstantPoolGen();
InvalidJUnitTest.java,JavaClass superClass = jClass.getSuperClass();,if (jClass != null ) JavaClass superClass = jClass.getSuperClass();
MarkerUtil.java,String markerType = marker.getType();,if (marker != null ) String markerType = marker.getType();
BugTreeView.java,String pattern = bug.getBugPattern().getType();,if (bug != null ) String pattern = bug.getBugPattern().getType();
FindBugsWorker.java,String fileName = location.toOSString();,if (location != null ) String fileName = location.toOSString();
BugResolution.java,IProject project = marker.getResource().getProject();,if (marker != null ) IProject project = marker.getResource().getProject();
BugResolution.java,ASTRewrite rewrite = ASTRewrite.create(workingUnit.getAST());,if (ASTRewrite != null ) ASTRewrite rewrite = ASTRewrite.create(workingUnit.getAST());
BugResolutionLoader.java,int length = attrList.getLength();,if (attrList != null ) int length = attrList.getLength();
CorrectOddnessCheckResolution.java,"TypeDeclaration type = getTypeDeclaration(workingUnit, bug.getPrimaryClass());","if (bug != null ) TypeDeclaration type = getTypeDeclaration(workingUnit, bug.getPrimaryClass());"
CorrectOddnessCheckResolution.java,"MethodDeclaration method = getMethodDeclaration(type, bug.getPrimaryMethod());","if (bug != null ) MethodDeclaration method = getMethodDeclaration(type, bug.getPrimaryMethod());"
CorrectOddnessCheckResolution.java,AST ast = workingUnit.getAST();,if (workingUnit != null ) AST ast = workingUnit.getAST();
CorrectOddnessCheckResolution.java,InfixExpression originalExpression = (InfixExpression) originalStatement.getExpression();,if (originalStatement != null ) InfixExpression originalExpression = (InfixExpression) originalStatement.getExpression();
CorrectOddnessCheckResolution.java,Expression leftOperand = originalExpression.getLeftOperand();,if (originalExpression != null ) Expression leftOperand = originalExpression.getLeftOperand();
CorrectOddnessCheckResolution.java,ParenthesizedExpression parEx = (ParenthesizedExpression) originalExpression.getLeftOperand();,if (originalExpression != null ) ParenthesizedExpression parEx = (ParenthesizedExpression) originalExpression.getLeftOperand();
CorrectOddnessCheckResolution.java,originalLeftOperand = (InfixExpression) parEx.getExpression();,if (parEx != null ) originalLeftOperand = (InfixExpression) parEx.getExpression();
CorrectOddnessCheckResolution.java,originalLeftOperand = (InfixExpression) originalExpression.getLeftOperand();,if (originalExpression != null ) originalLeftOperand = (InfixExpression) originalExpression.getLeftOperand();
CorrectOddnessCheckResolution.java,SimpleName originalField = (SimpleName) originalLeftOperand.getLeftOperand();,if (originalLeftOperand != null ) SimpleName originalField = (SimpleName) originalLeftOperand.getLeftOperand();
CreateAndOddnessCheckResolution.java,InfixExpression replaceExpression = ast.newInfixExpression();,if (ast != null ) InfixExpression replaceExpression = ast.newInfixExpression();
CreateAndOddnessCheckResolution.java,InfixExpression replaceExLeftOperand = ast.newInfixExpression();,if (ast != null ) InfixExpression replaceExLeftOperand = ast.newInfixExpression();
CreateDoPrivilegedBlockResolution.java,"TypeDeclaration type = getTypeDeclaration(workingUnit, bug.getPrimaryClass());","if (bug != null ) TypeDeclaration type = getTypeDeclaration(workingUnit, bug.getPrimaryClass());"
CreateDoPrivilegedBlockResolution.java,"MethodDeclaration method = getMethodDeclaration(type, bug.getPrimaryMethod());","if (bug != null ) MethodDeclaration method = getMethodDeclaration(type, bug.getPrimaryMethod());"
CreateDoPrivilegedBlockResolution.java,AST ast = importRewrite.getASTRewrite().getAST();,if (importRewrite != null ) AST ast = importRewrite.getASTRewrite().getAST();
CreateDoPrivilegedBlockResolution.java,List<ImportDeclaration> imports = importRewrite.getRewrittenList();,if (importRewrite != null ) List<ImportDeclaration> imports = importRewrite.getRewrittenList();
CreateDoPrivilegedBlockResolution.java,String fullyQualifiedName = importDeclaration.getName().getFullyQualifiedName();,if (importDeclaration != null ) String fullyQualifiedName = importDeclaration.getName().getFullyQualifiedName();
CreateDoPrivilegedBlockResolution.java,String fqn = impDec.getName().getFullyQualifiedName();,if (impDec != null ) String fqn = impDec.getName().getFullyQualifiedName();
CreateDoPrivilegedBlockResolution.java,ImportDeclaration importDeclaration = ast.newImportDeclaration();,if (ast != null ) ImportDeclaration importDeclaration = ast.newImportDeclaration();
CreateDoPrivilegedBlockResolution.java,accessControllerName = ast.newName(AccessController.class.getName());,if (ast != null ) accessControllerName = ast.newName(AccessController.class.getName());
CreateDoPrivilegedBlockResolution.java,Expression exp = fragment.getInitializer();,if (fragment != null ) Expression exp = fragment.getInitializer();
CreateDoPrivilegedBlockResolution.java,ITypeBinding superclass = typeBinding.getSuperclass();,if (typeBinding != null ) ITypeBinding superclass = typeBinding.getSuperclass();
CreateRemainderOddnessCheckResolution.java,InfixExpression replaceExpression = ast.newInfixExpression();,if (ast != null ) InfixExpression replaceExpression = ast.newInfixExpression();
CreateRemainderOddnessCheckResolution.java,InfixExpression replaceExLeftOperand = ast.newInfixExpression();,if (ast != null ) InfixExpression replaceExLeftOperand = ast.newInfixExpression();
RemoveUselessStatementResolution.java,"TypeDeclaration type = getTypeDeclaration(workingUnit, bug.getPrimaryClass());","if (bug != null ) TypeDeclaration type = getTypeDeclaration(workingUnit, bug.getPrimaryClass());"
RemoveUselessStatementResolution.java,"MethodDeclaration method = getMethodDeclaration(type, bug.getPrimaryMethod());","if (bug != null ) MethodDeclaration method = getMethodDeclaration(type, bug.getPrimaryMethod());"
UseValueOfResolution.java,"TypeDeclaration type = getTypeDeclaration(workingUnit, bug.getPrimaryClass());","if (bug != null ) TypeDeclaration type = getTypeDeclaration(workingUnit, bug.getPrimaryClass());"
UseValueOfResolution.java,"MethodDeclaration method = getMethodDeclaration(type, bug.getPrimaryMethod());","if (bug != null ) MethodDeclaration method = getMethodDeclaration(type, bug.getPrimaryMethod());"
UseValueOfResolution.java,Expression initializer = variableDeclaration.getInitializer();,if (variableDeclaration != null ) Expression initializer = variableDeclaration.getInitializer();
UseValueOfResolution.java,AST ast = rewrite.getAST();,if (rewrite != null ) AST ast = rewrite.getAST();
UseValueOfResolution.java,List<Expression> arguments = primitiveTypeCreation.arguments();,if (primitiveTypeCreation != null ) List<Expression> arguments = primitiveTypeCreation.arguments();
InvalidJUnitTest.java,Method[] methods = jClass.getMethods();,if (jClass != null ) Method[] methods = jClass.getMethods();
UsagesRequiringNonNullValues.java,Iterator<Pair> i = values.iterator();,if (values != null ) Iterator<Pair> i = values.iterator();
FindPuzzlers.java,Object o = item.getConstant();,if (item != null ) Object o = item.getConstant();
MainFrame.java,TreePath path = selectionEvent.getNewLeadSelectionPath();,if (selectionEvent != null ) TreePath path = selectionEvent.getNewLeadSelectionPath();
BugTreeModel.java,TreePath path=event.getPath();,if (path=event != null ) TreePath path=event.getPath();
BuildUnconditionalParamDerefDatabase.java,String token = m.getName()+m.getSignature();,if (m != null ) String token = m.getName()+m.getSignature();
BuildUnconditionalParamDerefDatabase.java,Method[] methodList = classContext.getJavaClass().getMethods();,if (classContext != null ) Method[] methodList = classContext.getJavaClass().getMethods();
FindNullDeref.java,SignatureParser sigParser = new SignatureParser(method.getSignature());,if (SignatureParser(method != null ) SignatureParser sigParser = new SignatureParser(method.getSignature());
FindSqlInjection.java,Instruction prevIns = prev.getInstruction();,if (prev != null ) Instruction prevIns = prev.getInstruction();
UnconditionalValueDerefAnalysis.java,int numParams = sigParser.getNumParameters();,if (sigParser != null ) int numParams = sigParser.getNumParameters();
UnconditionalValueDerefAnalysis.java,ParameterNullnessProperty targetDerefParamSet = database.getProperty(target.toXMethod());,if (database != null ) ParameterNullnessProperty targetDerefParamSet = database.getProperty(target.toXMethod());
SourceSearcher.java,String sourceFile = srcLine.getSourceFile();,if (srcLine != null ) String sourceFile = srcLine.getSourceFile();
SourceSearcher.java,String cName = srcLine.getClassName();,if (srcLine != null ) String cName = srcLine.getClassName();
NullDerefAndRedundantComparisonFinder.java,assignedNullLocationSet = Collections.emptySet();,if (Collections != null ) assignedNullLocationSet = Collections.emptySet();
FindSelfComparison2.java,BitSet occursMultipleTimes = classContext.linesMentionedMultipleTimes(methodGen.getMethod());,if (classContext != null ) BitSet occursMultipleTimes = classContext.linesMentionedMultipleTimes(methodGen.getMethod());
FindSqlInjection.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
FindSqlInjection.java,Method[] methodList = javaClass.getMethods();,if (javaClass != null ) Method[] methodList = javaClass.getMethods();
FindSqlInjection.java,Instruction ins = location.getHandle().getInstruction();,if (location != null ) Instruction ins = location.getHandle().getInstruction();
FindSqlInjection.java,Instruction prevIns = prev.getInstruction();,if (prev != null ) Instruction prevIns = prev.getInstruction();
FindSqlInjection.java,BasicBlock block =  loc.getBasicBlock();,if (loc != null ) BasicBlock block =  loc.getBasicBlock();
FindSqlInjection.java,ConstantPoolGen cpg = methodGen.getConstantPool();,if (methodGen != null ) ConstantPoolGen cpg = methodGen.getConstantPool();
FindSqlInjection.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
FindSqlInjection.java,ConstantPoolGen cpg = methodGen.getConstantPool();,if (methodGen != null ) ConstantPoolGen cpg = methodGen.getConstantPool();
FindSqlInjection.java,Instruction ins = location.getHandle().getInstruction();,if (location != null ) Instruction ins = location.getHandle().getInstruction();
FindSqlInjection.java,InstructionHandle previousHandle = startHandle.getPrev();,if (startHandle != null ) InstructionHandle previousHandle = startHandle.getPrev();
FindSqlInjection.java,Instruction prevIns = previousHandle.getInstruction();,if (previousHandle != null ) Instruction prevIns = previousHandle.getInstruction();
FindSqlInjection.java,previousHandle = previousHandle.getPrev();,if (previousHandle != null ) previousHandle = previousHandle.getPrev();
UnreadFields.java,private XFactory xFactory = AnalysisContext.currentXFactory();,if (AnalysisContext != null ) private XFactory xFactory = AnalysisContext.currentXFactory();
FindSqlInjection.java,InstructionHandle prev = location.getHandle().getPrev();,if (location != null ) InstructionHandle prev = location.getHandle().getPrev();
FindHEmismatch.java,type = item.getJavaClass();,if (item != null ) type = item.getJavaClass();
MarkerUtil.java,SourceLineAnnotation primarySourceLineAnnotation = bug.getPrimarySourceLineAnnotation();,if (bug != null ) SourceLineAnnotation primarySourceLineAnnotation = bug.getPrimarySourceLineAnnotation();
DetailsView.java,String shortDescription = pattern.getShortDescription();,if (pattern != null ) String shortDescription = pattern.getShortDescription();
DetailsView.java,String detailText = pattern.getDetailText();,if (pattern != null ) String detailText = pattern.getDetailText();
DetailsView.java,Iterator<BugAnnotation> it = bug.annotationIterator();,if (bug != null ) Iterator<BugAnnotation> it = bug.annotationIterator();
DetailsView.java,BugAnnotation ba = it.next();,if (it != null ) BugAnnotation ba = it.next();
FindNullDeref.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
FindNullDeref.java,JavaClass jclass = classContext.getJavaClass();,if (classContext != null ) JavaClass jclass = classContext.getJavaClass();
FindNullDeref.java,String className = jclass.getClassName();,if (jclass != null ) String className = jclass.getClassName();
FindNullDeref.java,Method[] methodList = jclass.getMethods();,if (jclass != null ) Method[] methodList = jclass.getMethods();
FindNullDeref.java,AnalysisContext analysisContext = AnalysisContext.currentAnalysisContext();,if (AnalysisContext != null ) AnalysisContext analysisContext = AnalysisContext.currentAnalysisContext();
FindNullDeref.java,unconditionalDerefParamDatabase = analysisContext.getUnconditionalDerefParamDatabase();,if (analysisContext != null ) unconditionalDerefParamDatabase = analysisContext.getUnconditionalDerefParamDatabase();
FindNullDeref.java,ConstantPoolGen cpg = classContext.getConstantPoolGen();,if (classContext != null ) ConstantPoolGen cpg = classContext.getConstantPoolGen();
FindNullDeref.java,Instruction ins = location.getHandle().getInstruction();,if (location != null ) Instruction ins = location.getHandle().getInstruction();
FindNullDeref.java,IsNullValue tos = frame.getTopValue();,if (frame != null ) IsNullValue tos = frame.getTopValue();
FindNullDeref.java,String sourceFile = classContext.getJavaClass().getSourceFileName();,if (classContext != null ) String sourceFile = classContext.getJavaClass().getSourceFileName();
FindNullDeref.java,IsNullValue tos = frame.getTopValue();,if (frame != null ) IsNullValue tos = frame.getTopValue();
FindNullDeref.java,String sourceFile = classContext.getJavaClass().getSourceFileName();,if (classContext != null ) String sourceFile = classContext.getJavaClass().getSourceFileName();
FindNullDeref.java,ParameterNullnessProperty property = unconditionalDerefParamDatabase.getProperty(targetMethod.toXMethod());,if (unconditionalDerefParamDatabase != null ) ParameterNullnessProperty property = unconditionalDerefParamDatabase.getProperty(targetMethod.toXMethod());
FindNullDeref.java,String sourceFile = classContext.getJavaClass().getSourceFileName();,if (classContext != null ) String sourceFile = classContext.getJavaClass().getSourceFileName();
FindNullDeref.java,String sourceFile = classContext.getJavaClass().getSourceFileName();,if (classContext != null ) String sourceFile = classContext.getJavaClass().getSourceFileName();
FindNullDeref.java,boolean onExceptionPath = refValue.isException();,if (refValue != null ) boolean onExceptionPath = refValue.isException();
FindNullDeref.java,int pc = location.getHandle().getPosition();,if (location != null ) int pc = location.getHandle().getPosition();
FindNullDeref.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
FindNullDeref.java,String sourceFile = classContext.getJavaClass().getSourceFileName();,if (classContext != null ) String sourceFile = classContext.getJavaClass().getSourceFileName();
FindNullDeref.java,InstructionHandle ins = target.getFirstInstruction();,if (target != null ) InstructionHandle ins = target.getFirstInstruction();
FindNullDeref.java,Instruction i = ins.getInstruction();,if (ins != null ) Instruction i = ins.getInstruction();
FindNullDeref.java,ins = ins.getNext();,if (ins != null ) ins = ins.getNext();
FindNullDeref.java,String sourceFile = classContext.getJavaClass().getSourceFileName();,if (classContext != null ) String sourceFile = classContext.getJavaClass().getSourceFileName();
FindNullDeref.java,boolean isChecked = redundantBranch.firstValue.isChecked();,if (redundantBranch != null ) boolean isChecked = redundantBranch.firstValue.isChecked();
FindNullDeref.java,boolean wouldHaveBeenAKaboom = redundantBranch.firstValue.wouldHaveBeenAKaboom();,if (redundantBranch != null ) boolean wouldHaveBeenAKaboom = redundantBranch.firstValue.wouldHaveBeenAKaboom();
FindNullDeref.java,Location locationOfKaBoom = redundantBranch.firstValue.getLocationOfKaBoom();,if (redundantBranch != null ) Location locationOfKaBoom = redundantBranch.firstValue.getLocationOfKaBoom();
FindNullDeref.java,BasicBlock target = infeasibleEdge.getTarget();,if (infeasibleEdge != null ) BasicBlock target = infeasibleEdge.getTarget();
FindNullDeref.java,createdDeadCode = invFrame.isTop();,if (invFrame != null ) createdDeadCode = invFrame.isTop();
FindNullDeref.java,locationOfKaBoom = redundantBranch.secondValue.getLocationOfKaBoom();,if (redundantBranch != null ) locationOfKaBoom = redundantBranch.secondValue.getLocationOfKaBoom();
FindNullDeref.java,Instruction ins = location.getHandle().getInstruction();,if (location != null ) Instruction ins = location.getHandle().getInstruction();
FindNullDeref.java,"ValueNumber valueNumber = vnaFrame.getInstance(ins, classContext.getConstantPoolGen());","if (classContext != null ) ValueNumber valueNumber = vnaFrame.getInstance(ins, classContext.getConstantPoolGen());"
FindNullDeref.java,int startLine = sourceLineAnnotation.getStartLine();,if (sourceLineAnnotation != null ) int startLine = sourceLineAnnotation.getStartLine();
FindNullDeref.java,int pc = loc.getHandle().getPosition();,if (loc != null ) int pc = loc.getHandle().getPosition();
Project.java,fileName = file.getAbsolutePath();,if (file != null ) fileName = file.getAbsolutePath();
SAXBugCollectionHandler.java,XMLReader xr = XMLReaderFactory.createXMLReader();,if (XMLReaderFactory != null ) XMLReader xr = XMLReaderFactory.createXMLReader();
UnconditionalValueDerefAnalysis.java,Iterator<String> paramSigIterator = sigParser.parameterSignatureIterator();,if (sigParser != null ) Iterator<String> paramSigIterator = sigParser.parameterSignatureIterator();
UnconditionalValueDerefAnalysis.java,String paramSig = paramSigStack.pop();,if (paramSigStack != null ) String paramSig = paramSigStack.pop();
FindNullDeref.java,words += args[paramNum++].getSize();,if (args[paramNum++] != null ) words += args[paramNum++].getSize();
UnconditionalValueDerefAnalysis.java,Iterator<String> paramSigIterator = sigParser.parameterSignatureIterator();,if (sigParser != null ) Iterator<String> paramSigIterator = sigParser.parameterSignatureIterator();
UnconditionalValueDerefAnalysis.java,String paramSig = paramSigStack.pop();,if (paramSigStack != null ) String paramSig = paramSigStack.pop();
UnconditionalValueDerefAnalysis.java,ParameterNullnessProperty targetDerefParamSet = database.getProperty(target.toXMethod());,if (database != null ) ParameterNullnessProperty targetDerefParamSet = database.getProperty(target.toXMethod());
FindNullDeref.java,XFactory xFactory = AnalysisContext.currentXFactory();,if (AnalysisContext != null ) XFactory xFactory = AnalysisContext.currentXFactory();
UnconditionalValueDerefSet.java,resultForSkippedValue = valueNumberSet.get(skipMe.getNumber());,if (valueNumberSet != null ) resultForSkippedValue = valueNumberSet.get(skipMe.getNumber());
ClassContext.java,int newLine = line.getLineNumber();,if (line != null ) int newLine = line.getLineNumber();
PruneUnconditionalExceptionThrowerEdges.java,AnalysisContext currentAnalysisContext = AnalysisContext.currentAnalysisContext();,if (AnalysisContext != null ) AnalysisContext currentAnalysisContext = AnalysisContext.currentAnalysisContext();
PruneUnconditionalExceptionThrowerEdges.java,Instruction exceptionThrower = basicBlock.getExceptionThrower().getInstruction();,if (basicBlock != null ) Instruction exceptionThrower = basicBlock.getExceptionThrower().getInstruction();
PruneUnconditionalExceptionThrowerEdges.java,JavaClass javaClass = Repository.lookupClass(xMethod.getClassName());,if (Repository != null ) JavaClass javaClass = Repository.lookupClass(xMethod.getClassName());
PruneUnconditionalExceptionThrowerEdges.java,Method method = classAndMethod.getMethod();,if (classAndMethod != null ) Method method = classAndMethod.getMethod();
FindSqlInjection.java,Instruction ins = location.getHandle().getInstruction();,if (location != null ) Instruction ins = location.getHandle().getInstruction();
FindSqlInjection.java,InstructionHandle prev = location.getHandle().getPrev();,if (location != null ) InstructionHandle prev = location.getHandle().getPrev();
FindSqlInjection.java,Instruction prevIns = prev.getInstruction();,if (prev != null ) Instruction prevIns = prev.getInstruction();
BugResolutionLoader.java,String value = attrElement.getNodeValue(); // TODO: Was getTextValue() -- is this compatible?,if (compatible? != null ) String value = attrElement.getNodeValue(); // TODO: Was getTextValue() -- is this compatible?
UncallableMethodOfAnonymousClass.java,String methodName = obj.getName();,if (obj != null ) String methodName = obj.getName();
XFactory.java,javaClass = javaClass.getSuperClass();,if (javaClass != null ) javaClass = javaClass.getSuperClass();
XFactory.java,javaClass = javaClass.getSuperClass();,if (javaClass != null ) javaClass = javaClass.getSuperClass();
FindBugs.java,this.userPreferences = UserPreferences.createDefaultUserPreferences();,if (UserPreferences != null ) this.userPreferences = UserPreferences.createDefaultUserPreferences();
ResolveAllReferences.java,target = target.getSuperClass();,if (target != null ) target = target.getSuperClass();
BugResolutionLoader.java,String value = attrElement.getTextContent();,if (attrElement != null ) String value = attrElement.getTextContent();
XFactory.java,javaClass = javaClass.getSuperClass();,if (javaClass != null ) javaClass = javaClass.getSuperClass();
XFactory.java,javaClass = javaClass.getSuperClass();,if (javaClass != null ) javaClass = javaClass.getSuperClass();
FindRefComparison.java,Method method = methodGen.getMethod();,if (methodGen != null ) Method method = methodGen.getMethod();
OpcodeStack.java,List<Item> jumpStackEntry = jumpStackEntries.get(dbc.getPC());,if (jumpStackEntries != null ) List<Item> jumpStackEntry = jumpStackEntries.get(dbc.getPC());
OpcodeStack.java,int pc = dbc.getBranchOffset() - dbc.getBranchTarget();,if (dbc != null ) int pc = dbc.getBranchOffset() - dbc.getBranchTarget();
FindNullDeref.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
FindNullDeref.java,XField field = load.getField();,if (load != null ) XField field = load.getField();
FindSelfComparison2.java,Instruction ins = location.getHandle().getInstruction();,if (location != null ) Instruction ins = location.getHandle().getInstruction();
FindSelfComparison2.java,int opcode = ins.getOpcode();,if (ins != null ) int opcode = ins.getOpcode();
TextUICommandLine.java,private UserPreferences userPreferences = UserPreferences.createDefaultUserPreferences();,if (UserPreferences != null ) private UserPreferences userPreferences = UserPreferences.createDefaultUserPreferences();
TigerSubstitutesTest.java,Class c = bar.getClass();,if (bar != null ) Class c = bar.getClass();
BugResolution.java,private String label = getClass().getSimpleName();,if (getClass() != null ) private String label = getClass().getSimpleName();
CreateDoPrivilegedBlockResolution.java,accessControllerName = ast.newSimpleName(AccessController.class.getSimpleName());,if (ast != null ) accessControllerName = ast.newSimpleName(AccessController.class.getSimpleName());
CreateDoPrivilegedBlockResolution.java,privilegedActionName = ast.newSimpleName(PrivilegedAction.class.getSimpleName());,if (ast != null ) privilegedActionName = ast.newSimpleName(PrivilegedAction.class.getSimpleName());
DetailsView.java,Rectangle size = this.control.getClientArea();,if (this != null ) Rectangle size = this.control.getClientArea();
MarkerUtil.java,String warningUID = warning.getUniqueId();,if (warning != null ) String warningUID = warning.getUniqueId();
MarkerReporter.java,String uniqueId = bug.getUniqueId();,if (bug != null ) String uniqueId = bug.getUniqueId();
SortedBugCollection.java,"String value =  getQuickInstanceHash(bug)+""-""+ bug.getInstanceOccurrenceNum();","if (bug != null ) String value =  getQuickInstanceHash(bug)+""-""+ bug.getInstanceOccurrenceNum();"
SortedBugCollection.java,String hash = bugInstance.getInstanceKey();,if (bugInstance != null ) String hash = bugInstance.getInstanceKey();
SortedBugCollection.java,String id = bug.getUniqueId();,if (bug != null ) String id = bug.getUniqueId();
SortedBugCollection.java,String uniqueId = bugInstance.getUniqueId();,if (bugInstance != null ) String uniqueId = bugInstance.getUniqueId();
MainFrame.java,curProject=BugLoader.getLoadedProject();,if (curProject=BugLoader != null ) curProject=BugLoader.getLoadedProject();
EIFixer.java,String className = bug.getPrimaryClass().getClassName();,if (bug != null ) String className = bug.getPrimaryClass().getClassName();
EIFixer.java,String fieldName = bug.getPrimaryField().getFieldName();,if (bug != null ) String fieldName = bug.getPrimaryField().getFieldName();
EIFixer.java,Statement stmt = (Statement)itr.next();,if ((Statement)itr != null ) Statement stmt = (Statement)itr.next();
EIFixer.java,cloneInvoke = astRoot.getAST().newMethodInvocation();,if (astRoot != null ) cloneInvoke = astRoot.getAST().newMethodInvocation();
EIFixer.java,castRet = astRoot.getAST().newCastExpression();,if (astRoot != null ) castRet = astRoot.getAST().newCastExpression();
FieldModifierFixer.java,String className = bug.getPrimaryClass().getClassName();,if (bug != null ) String className = bug.getPrimaryClass().getClassName();
FieldModifierFixer.java,String fieldName = bug.getPrimaryField().getFieldName();,if (bug != null ) String fieldName = bug.getPrimaryField().getFieldName();
FindBugsFixer.java,IProject project = marker.getResource().getProject();,if (marker != null ) IProject project = marker.getResource().getProject();
FindBugsFixer.java,oldSource = unit.getBuffer().getContents();,if (unit != null ) oldSource = unit.getBuffer().getContents();
FindBugsFixer.java,rewrite = ASTRewrite.create(astRoot.getAST());,if (ASTRewrite != null ) rewrite = ASTRewrite.create(astRoot.getAST());
FindBugsFixer.java,newSource = doc.get();,if (doc != null ) newSource = doc.get();
FindBugsFixer.java,IResource res = marker.getResource();,if (marker != null ) IResource res = marker.getResource();
FindBugsFixer.java,itr = astRoot.types().iterator();,if (astRoot != null ) itr = astRoot.types().iterator();
FindBugsFixer.java,node = (ASTNode)itr.next();,if ((ASTNode)itr != null ) node = (ASTNode)itr.next();
FindBugsFixer.java,String simple = node.getName().getIdentifier();,if (node != null ) String simple = node.getName().getIdentifier();
FindBugsFixer.java,TypeDeclaration[] types = node.getTypes();,if (node != null ) TypeDeclaration[] types = node.getTypes();
FindBugsFixer.java,FieldDeclaration[] fields = type.getFields();,if (type != null ) FieldDeclaration[] fields = type.getFields();
FindBugsFixer.java,List fragments = ret.fragments();,if (ret != null ) List fragments = ret.fragments();
FindBugsFixer.java,MethodDeclaration[] methods = type.getMethods();,if (type != null ) MethodDeclaration[] methods = type.getMethods();
FindBugsFixer.java,paramTypes[ndx] = paramTypes[ndx].trim();,if (paramTypes[ndx] != null ) paramTypes[ndx] = paramTypes[ndx].trim();
FindBugsFixer.java,Iterator typeItr = ret.parameters().iterator();,if (ret != null ) Iterator typeItr = ret.parameters().iterator();
FindBugsFixer.java,Iterator itr = type.typeArguments().iterator();,if (type != null ) Iterator itr = type.typeArguments().iterator();
FindBugsFixer.java,Type arg = (Type)itr.next();,if ((Type)itr != null ) Type arg = (Type)itr.next();
FindBugsQuickFix.java,QuickFixAssociations fixer = FindbugsPlugin.getDefault().getQuickFixes();,if (FindbugsPlugin != null ) QuickFixAssociations fixer = FindbugsPlugin.getDefault().getQuickFixes();
QuickFixAssociations.java,DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();,if (DocumentBuilderFactory != null ) DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();
QuickFixAssociations.java,res[ndx] = classes.get(ndx).newInstance();,if (classes != null ) res[ndx] = classes.get(ndx).newInstance();
SICFixer.java,String className = bug.getPrimaryClass().getClassName();,if (bug != null ) String className = bug.getPrimaryClass().getClassName();
BugCodeMatcher.java,String bugCode = bugInstance.getAbbrev();,if (bugInstance != null ) String bugCode = bugInstance.getAbbrev();
ClassRegexMatcher.java,ClassAnnotation primaryClassAnnotation = bugInstance.getPrimaryClass();,if (bugInstance != null ) ClassAnnotation primaryClassAnnotation = bugInstance.getPrimaryClass();
ClassRegexMatcher.java,String bugClassName = primaryClassAnnotation.getClassName();,if (primaryClassAnnotation != null ) String bugClassName = primaryClassAnnotation.getClassName();
CommentsArea.java,Iterator<BugLeafNode> filteredIter = filteredSet.iterator();,if (filteredSet != null ) Iterator<BugLeafNode> filteredIter = filteredSet.iterator();
OpcodeStack.java,r+= field.hashCode();,if (field != null ) r+= field.hashCode();
CommentsArea.java,Iterator<BugLeafNode> filteredIter = filteredSet.iterator();,if (filteredSet != null ) Iterator<BugLeafNode> filteredIter = filteredSet.iterator();
TestingGround.java,Object constantValue = item.getConstant();,if (item != null ) Object constantValue = item.getConstant();
PluginLoader.java,Locale locale = Locale.getDefault();,if (Locale != null ) Locale locale = Locale.getDefault();
CommentsArea.java,String commentsOnThisBug = nextNode.getBug().getAnnotationText();,if (nextNode != null ) String commentsOnThisBug = nextNode.getBug().getAnnotationText();
LoadOfKnownNullValue.java,InstructionHandle handle = i.next().getHandle();,if (i != null ) InstructionHandle handle = i.next().getHandle();
DetailsView.java,Rectangle size = this.control.getClientArea();,if (this != null ) Rectangle size = this.control.getClientArea();
FindBugs2.java,classesPerPass[i] = appClassList.size();,if (appClassList != null ) classesPerPass[i] = appClassList.size();
Methods.java,XFactory xFactory = AnalysisContext.currentXFactory();,if (AnalysisContext != null ) XFactory xFactory = AnalysisContext.currentXFactory();
MainFrame.java,dir = jfc.getSelectedFile();,if (jfc != null ) dir = jfc.getSelectedFile();
MainFrame.java,exists=xmlFile.exists() && fasFile.exists();,if (fasFile != null ) exists=xmlFile.exists() && fasFile.exists();
CommentsArea.java,Iterator<BugLeafNode> filteredIter = filteredSet.iterator();,if (filteredSet != null ) Iterator<BugLeafNode> filteredIter = filteredSet.iterator();
FindRefComparison.java,AnalysisContext analysisContext = AnalysisContext.currentAnalysisContext();,if (AnalysisContext != null ) AnalysisContext analysisContext = AnalysisContext.currentAnalysisContext();
FindRefComparison.java,JavaClass lhsClass = analysisContext.lookupClass(lhsType.getClassName());,if (analysisContext != null ) JavaClass lhsClass = analysisContext.lookupClass(lhsType.getClassName());
FindRefComparison.java,JavaClass rhsClass = analysisContext.lookupClass(rhsType.getClassName());,if (analysisContext != null ) JavaClass rhsClass = analysisContext.lookupClass(rhsType.getClassName());
GenericSignatureParser.java,Iterator<String> iter = parser.parameterSignatureIterator();,if (parser != null ) Iterator<String> iter = parser.parameterSignatureIterator();
TypeAnalysis.java,Type[] argumentTypes = methodGen.getArgumentTypes();,if (methodGen != null ) Type[] argumentTypes = methodGen.getArgumentTypes();
OpcodeStack.java,List<Item> stackToMerge = jumpStack.pop();,if (jumpStack != null ) List<Item> stackToMerge = jumpStack.pop();
OpcodeStack.java,jumpTarget = dbc.getBranchTarget();,if (dbc != null ) jumpTarget = dbc.getBranchTarget();
FindBugsWorker.java,String fileName = res.getLocation().toOSString();,if (res != null ) String fileName = res.getLocation().toOSString();
AnalysisLocal.java,Map m = AnalysisContext.currentAnalysisContext().getAnalysisLocals();,if (AnalysisContext != null ) Map m = AnalysisContext.currentAnalysisContext().getAnalysisLocals();
UserPreferences.java,Iterator it = recentProjectsList.iterator();,if (recentProjectsList != null ) Iterator it = recentProjectsList.iterator();
PrintClass.java,ZipEntry ze = (ZipEntry) i.next();,if (i != null ) ZipEntry ze = (ZipEntry) i.next();
ClearMarkersAction.java,Object element = structuredSelection.getFirstElement();,if (structuredSelection != null ) Object element = structuredSelection.getFirstElement();
ClearMarkersAction.java,IProject project = resource.getProject();,if (resource != null ) IProject project = resource.getProject();
MainFrame.java,BugLeafNode bugLeaf = (BugLeafNode)path.getLastPathComponent();,if ((BugLeafNode)path != null ) BugLeafNode bugLeaf = (BugLeafNode)path.getLastPathComponent();
MainFrame.java,BugInstance bug = bugLeaf.getBug();,if (bugLeaf != null ) BugInstance bug = bugLeaf.getBug();
MainFrame.java,currentSelectedBugAspects = (BugAspects)path.getLastPathComponent();,if ((BugAspects)path != null ) currentSelectedBugAspects = (BugAspects)path.getLastPathComponent();
MainFrame.java,BugSet filteredSet = theAspects.getMatchingBugs(BugSet.getMainBugSet());,if (theAspects != null ) BugSet filteredSet = theAspects.getMatchingBugs(BugSet.getMainBugSet());
MainFrame.java,Iterator<BugLeafNode> filteredIter = filteredSet.iterator();,if (filteredSet != null ) Iterator<BugLeafNode> filteredIter = filteredSet.iterator();
MainFrame.java,BugSet filteredSet = currentSelectedBugAspects.getMatchingBugs(BugSet.getMainBugSet());,if (currentSelectedBugAspects != null ) BugSet filteredSet = currentSelectedBugAspects.getMatchingBugs(BugSet.getMainBugSet());
MainFrame.java,int itemCount = designationComboBox.getItemCount();,if (designationComboBox != null ) int itemCount = designationComboBox.getItemCount();
MainFrame.java,int numItems = designationComboBox.getItemCount();,if (designationComboBox != null ) int numItems = designationComboBox.getItemCount();
MainFrame.java,BugTreeModel model= (BugTreeModel)tree.getModel();,if ((BugTreeModel)tree != null ) BugTreeModel model= (BugTreeModel)tree.getModel();
MainFrame.java,TreePath path=model.getPathToBug(theNode.getBug());,if (path=model != null ) TreePath path=model.getPathToBug(theNode.getBug());
MainFrame.java,Object[] objPath=path.getParentPath().getPath();,if (objPath=path != null ) Object[] objPath=path.getParentPath().getPath();
MainFrame.java,TreePath pathToNode=new TreePath(reconstruct.toArray());,if (TreePath(reconstruct != null ) TreePath pathToNode=new TreePath(reconstruct.toArray());
MainFrame.java,TreePath unsuppressPath=model.getPathToBug(theNode.getBug());,if (unsuppressPath=model != null ) TreePath unsuppressPath=model.getPathToBug(theNode.getBug());
MainFrame.java,BugTreeModel model = (BugTreeModel)tree.getModel();,if ((BugTreeModel)tree != null ) BugTreeModel model = (BugTreeModel)tree.getModel();
MainFrame.java,TreePath path=model.getPathToBug(theNode.getBug());,if (path=model != null ) TreePath path=model.getPathToBug(theNode.getBug());
MainFrame.java,userCommentsTextUnenabledColor = centerPanel.getBackground();,if (centerPanel != null ) userCommentsTextUnenabledColor = centerPanel.getBackground();
MainFrame.java,BugInstance bug = node.getBug();,if (node != null ) BugInstance bug = node.getBug();
NewProjectWizard.java,File f = new File(directory.getText());,if (File(directory != null ) File f = new File(directory.getText());
NewProjectWizard.java,File f = new File(directory.getText());,if (File(directory != null ) File f = new File(directory.getText());
OpcodeStack.java,signature = it.getSignature();,if (it != null ) signature = it.getSignature();
OpcodeStack.java,long l = (Long) it.getConstant();,if (it != null ) long l = (Long) it.getConstant();
OpcodeStack.java,float f = (Float) it.getConstant();,if (it != null ) float f = (Float) it.getConstant();
OpcodeStack.java,double d = (Double) it.getConstant();,if (it != null ) double d = (Double) it.getConstant();
BugInstance.java,else pattern = bugPattern.getLongDescription();,if (bugPattern != null ) else pattern = bugPattern.getLongDescription();
MainFrame.java,Iterator<BugLeafNode> filteredIter = filteredSet.iterator();,if (filteredSet != null ) Iterator<BugLeafNode> filteredIter = filteredSet.iterator();
MainFrame.java,BugLeafNode nextNode = filteredIter.next();,if (filteredIter != null ) BugLeafNode nextNode = filteredIter.next();
MainFrame.java,int index = designationComboBox.getSelectedIndex();,if (designationComboBox != null ) int index = designationComboBox.getSelectedIndex();
MainFrame.java,int index = designationComboBox.getSelectedIndex();,if (designationComboBox != null ) int index = designationComboBox.getSelectedIndex();
MainFrame.java,TreePath path=model.getPathToBug(currentSelectedBugLeaf.getBug());,if (path=model != null ) TreePath path=model.getPathToBug(currentSelectedBugLeaf.getBug());
MainFrame.java,TreePath unsuppressPath=model.getPathToBug(currentSelectedBugLeaf.getBug());,if (unsuppressPath=model != null ) TreePath unsuppressPath=model.getPathToBug(currentSelectedBugLeaf.getBug());
MainFrame.java,int index = designationComboBox.getSelectedIndex();,if (designationComboBox != null ) int index = designationComboBox.getSelectedIndex();
JavaScanner.java,char c = iterator.next();,if (iterator != null ) char c = iterator.next();
JavaScanner.java,c = iterator.next();,if (iterator != null ) c = iterator.next();
DocumentCharacterIterator.java,size = doc.getLength();,if (doc != null ) size = doc.getLength();
DocumentCharacterIterator.java,nextChar = text.next();,if (text != null ) nextChar = text.next();
DocumentCharacterIterator.java,nextChar = text.current();,if (text != null ) nextChar = text.current();
FindbugsPlugin.java,IPath path = getDefault().getStateLocation(); // user-specific but not project-specific,if (project-specific != null ) IPath path = getDefault().getStateLocation(); // user-specific but not project-specific
FindbugsPlugin.java,File userPrefsFile = userPrefsPath.toFile();,if (userPrefsPath != null ) File userPrefsFile = userPrefsPath.toFile();
FindbugsPlugin.java,File prefsFile = userPrefsFile.toFile();,if (userPrefsFile != null ) File prefsFile = userPrefsFile.toFile();
FindbugsPlugin.java,File userPrefsFile = userPrefsPath.toFile();,if (userPrefsPath != null ) File userPrefsFile = userPrefsPath.toFile();
FindbugsPlugin.java,File userPrefsFile = userPrefsPath.toFile();,if (userPrefsPath != null ) File userPrefsFile = userPrefsPath.toFile();
ClassContext.java,Location loc = locs.next();,if (locs != null ) Location loc = locs.next();
MethodMatcher.java,String param = tok.nextToken();,if (tok != null ) String param = tok.nextToken();
VersionInsensitiveBugComparator.java,String description = srcLine.getDescription();,if (srcLine != null ) String description = srcLine.getDescription();
VersionInsensitiveBugComparator.java,cmp = lhsSource.getStartBytecode() - rhsSource.getStartBytecode();,if (rhsSource != null ) cmp = lhsSource.getStartBytecode() - rhsSource.getStartBytecode();
VersionInsensitiveBugComparator.java,cmp = lhsSource.getEndBytecode() - rhsSource.getEndBytecode();,if (rhsSource != null ) cmp = lhsSource.getEndBytecode() - rhsSource.getEndBytecode();
MethodAnnotation.java,String methodSig = visitor.getDottedSigConstantOperand();,if (visitor != null ) String methodSig = visitor.getDottedSigConstantOperand();
FindbugsPlugin.java,File prefsFile = userPrefsFile.getLocation().toFile();,if (userPrefsFile != null ) File prefsFile = userPrefsFile.getLocation().toFile();
FindbugsPlugin.java,InputStream in = userPrefsFile.getContents();,if (userPrefsFile != null ) InputStream in = userPrefsFile.getContents();
PruneInfeasibleExceptionEdges2.java,int flags = edge.getFlags();,if (edge != null ) int flags = edge.getFlags();
PruneInfeasibleExceptionEdges2.java,InstructionHandle thrower = basicBlock.getExceptionThrower();,if (basicBlock != null ) InstructionHandle thrower = basicBlock.getExceptionThrower();
PruneInfeasibleExceptionEdges2.java,Instruction ins = thrower.getInstruction();,if (thrower != null ) Instruction ins = thrower.getInstruction();
PruneInfeasibleExceptionEdges2.java,Type tos = frame.getTopValue();,if (frame != null ) Type tos = frame.getTopValue();
PruneInfeasibleExceptionEdges2.java,BasicBlock catchBlock = edge.getTarget();,if (edge != null ) BasicBlock catchBlock = edge.getTarget();
PruneInfeasibleExceptionEdges2.java,ObjectType catchType = catchBlock.getExceptionGen().getCatchType();,if (catchBlock != null ) ObjectType catchType = catchBlock.getExceptionGen().getCatchType();
PruneInfeasibleExceptionEdges2.java,BasicBlock sourceBlock = edge.getSource();,if (edge != null ) BasicBlock sourceBlock = edge.getSource();
ClassContext.java,result = Collections.emptySet();,if (Collections != null ) result = Collections.emptySet();
ClassParser.java,data[i] = new Integer(in.readInt());,if (Integer(in != null ) data[i] = new Integer(in.readInt());
ClassParser.java,data[i] = new Long(in.readLong());,if (Long(in != null ) data[i] = new Long(in.readLong());
ClassParser.java,data[i] = new Integer(in.readUnsignedShort());,if (Integer(in != null ) data[i] = new Integer(in.readUnsignedShort());
AboutDialog.java,Runtime rt = Runtime.getRuntime();,if (Runtime != null ) Runtime rt = Runtime.getRuntime();
AboutDialog.java,Runtime rt = Runtime.getRuntime();,if (Runtime != null ) Runtime rt = Runtime.getRuntime();
MainFrame.java,File file=jfc.getSelectedFile();,if (file=jfc != null ) File file=jfc.getSelectedFile();
MainFrame.java,BugTreeModel model=(BugTreeModel)tree.getModel();,if (model=(BugTreeModel)tree != null ) BugTreeModel model=(BugTreeModel)tree.getModel();
BugLoader.java,List<String> possibleDirectories=loadedProject.getSourceDirList();,if (possibleDirectories=loadedProject != null ) List<String> possibleDirectories=loadedProject.getSourceDirList();
BugLoader.java,List<String> possibleDirectories=loadedProject.getSourceDirList();,if (possibleDirectories=loadedProject != null ) List<String> possibleDirectories=loadedProject.getSourceDirList();
BugLoader.java,List<String> possibleDirectories=loadedProject.getSourceDirList();,if (possibleDirectories=loadedProject != null ) List<String> possibleDirectories=loadedProject.getSourceDirList();
MainFrame.java,curProject=BugLoader.getLoadedProject();,if (curProject=BugLoader != null ) curProject=BugLoader.getLoadedProject();
MainFrame.java,final File dir = jfc.getSelectedFile();,if (jfc != null ) final File dir = jfc.getSelectedFile();
MainFrame.java,BugTreeModel model=(BugTreeModel)tree.getModel();,if (model=(BugTreeModel)tree != null ) BugTreeModel model=(BugTreeModel)tree.getModel();
MainFrame.java,curProject=BugLoader.getLoadedProject();,if (curProject=BugLoader != null ) curProject=BugLoader.getLoadedProject();
MainFrame.java,ArrayList<File> xmlFiles=GUISaveState.getInstance().getRecentProjects();,if (xmlFiles=GUISaveState != null ) ArrayList<File> xmlFiles=GUISaveState.getInstance().getRecentProjects();
MainFrame.java,BugSet bs=BugLoader.combineBugHistories();,if (bs=BugLoader != null ) BugSet bs=BugLoader.combineBugHistories();
MainFrame.java,curProject=BugLoader.getLoadedProject();,if (curProject=BugLoader != null ) curProject=BugLoader.getLoadedProject();
MainFrame.java,curProject=BugLoader.getLoadedProject();,if (curProject=BugLoader != null ) curProject=BugLoader.getLoadedProject();
MainFrame.java,File file=jfc.getSelectedFile();,if (file=jfc != null ) File file=jfc.getSelectedFile();
MainFrame.java,BugTreeModel model=(BugTreeModel)tree.getModel();,if (model=(BugTreeModel)tree != null ) BugTreeModel model=(BugTreeModel)tree.getModel();
MainFrame.java,curProject=BugLoader.getLoadedProject();,if (curProject=BugLoader != null ) curProject=BugLoader.getLoadedProject();
MainFrame.java,File xmlFile = chooser.getSelectedFile();,if (chooser != null ) File xmlFile = chooser.getSelectedFile();
MainFrame.java,BasicTreeUI treeUI = (BasicTreeUI) tree.getUI();,if (tree != null ) BasicTreeUI treeUI = (BasicTreeUI) tree.getUI();
NullDerefAndRedundantComparisonFinder.java,HashSet<ValueNumber> npeIfStatementCovered = new HashSet(nullValueGuaranteedDerefMap.keySet());,if (HashSet(nullValueGuaranteedDerefMap != null ) HashSet<ValueNumber> npeIfStatementCovered = new HashSet(nullValueGuaranteedDerefMap.keySet());
FindBadCast2.java,Method[] methodList = classContext.getJavaClass().getMethods();,if (classContext != null ) Method[] methodList = classContext.getJavaClass().getMethods();
VersionInsensitiveBugComparator.java,cmp = lhs.getPriority() - rhs.getPriority();,if (rhs != null ) cmp = lhs.getPriority() - rhs.getPriority();
Update.java,BugInstance newBug = (BugInstance) bug.clone();,if (bug != null ) BugInstance newBug = (BugInstance) bug.clone();
Update.java,ClassAnnotation classBugFoundIn = bug.getPrimaryClass();,if (bug != null ) ClassAnnotation classBugFoundIn = bug.getPrimaryClass();
Update.java,String className = classBugFoundIn.getClassName();,if (classBugFoundIn != null ) String className = classBugFoundIn.getClassName();
ValueNumberFrameModelingVisitor.java,value = factory.createFreshValue();,if (factory != null ) value = factory.createFreshValue();
SuppressionMatcher.java,ClassAnnotation clazz = suppressor.getClassAnnotation();,if (suppressor != null ) ClassAnnotation clazz = suppressor.getClassAnnotation();
ValueNumberFrame.java,Iterator<AvailableLoad> i = availableLoadMap.keySet().iterator();,if (availableLoadMap != null ) Iterator<AvailableLoad> i = availableLoadMap.keySet().iterator();
ValueNumberFrame.java,changed = !this.availableLoadMap.isEmpty();,if (!this != null ) changed = !this.availableLoadMap.isEmpty();
ValueNumberFrame.java,Iterator<AvailableLoad> i = availableLoadMap.keySet().iterator();,if (availableLoadMap != null ) Iterator<AvailableLoad> i = availableLoadMap.keySet().iterator();
Dataflow.java,Fact origStart = analysis.createFact();,if (analysis != null ) Fact origStart = analysis.createFact();
Dataflow.java,Fact origResult = analysis.createFact();,if (analysis != null ) Fact origResult = analysis.createFact();
Dataflow.java,Edge edge = predEdgeIter.next();,if (predEdgeIter != null ) Edge edge = predEdgeIter.next();
Dataflow.java,Fact edgeFact = analysis.createFact();,if (analysis != null ) Fact edgeFact = analysis.createFact();
NullDerefAndRedundantComparisonFinder.java,Set<Location> locationSet = nullValueAssignmentMap.get(lwvbn.getValueNumber());,if (nullValueAssignmentMap != null ) Set<Location> locationSet = nullValueAssignmentMap.get(lwvbn.getValueNumber());
Dataflow.java,Fact result = analysis.createFact();,if (analysis != null ) Fact result = analysis.createFact();
Dataflow.java,Fact origResult = analysis.createFact();,if (analysis != null ) Fact origResult = analysis.createFact();
Dataflow.java,Iterator<BasicBlock> i = blockOrder.blockIterator();,if (blockOrder != null ) Iterator<BasicBlock> i = blockOrder.blockIterator();
FindNullDeref.java,AnalysisContext analysisContext = AnalysisContext.currentAnalysisContext();,if (AnalysisContext != null ) AnalysisContext analysisContext = AnalysisContext.currentAnalysisContext();
FindNullDeref.java,unconditionalDerefParamDatabase = analysisContext.getUnconditionalDerefParamDatabase();,if (analysisContext != null ) unconditionalDerefParamDatabase = analysisContext.getUnconditionalDerefParamDatabase();
TextUIBugReporter.java,String categoryAbbrev = categoryMap.get(pattern.getCategory());,if (categoryMap != null ) String categoryAbbrev = categoryMap.get(pattern.getCategory());
ClassContext.java,Location loc = locs.next();,if (locs != null ) Location loc = locs.next();
IsNullValueAnalysis.java,ifcmpDecision = IsNullValue.pathSensitiveNonNullValue();,if (IsNullValue != null ) ifcmpDecision = IsNullValue.pathSensitiveNonNullValue();
IsNullValueAnalysis.java,fallThroughDecision = IsNullValue.pathSensitiveNonNullValue();,if (IsNullValue != null ) fallThroughDecision = IsNullValue.pathSensitiveNonNullValue();
IsNullValueAnalysis.java,ifcmpDecision = IsNullValue.pathSensitiveNonNullValue();,if (IsNullValue != null ) ifcmpDecision = IsNullValue.pathSensitiveNonNullValue();
IsNullValueAnalysis.java,fallThroughDecision = IsNullValue.pathSensitiveNonNullValue();,if (IsNullValue != null ) fallThroughDecision = IsNullValue.pathSensitiveNonNullValue();
IsNullValueAnalysis.java,boolean nextToTOSNull = nextToTOS.isDefinitelyNull();,if (nextToTOS != null ) boolean nextToTOSNull = nextToTOS.isDefinitelyNull();
UseOfNonHashableClassInHashDataStructure.java,type = item.getJavaClass();,if (item != null ) type = item.getJavaClass();
XFactory.java,String className = javaClass.getClassName();,if (javaClass != null ) String className = javaClass.getClassName();
XFactory.java,String className = javaClass.getClassName();,if (javaClass != null ) String className = javaClass.getClassName();
ConfusionBetweenInheritedAndOuterMethod.java,Set<XMethod> definedMethods = Methods.getMethods();,if (Methods != null ) Set<XMethod> definedMethods = Methods.getMethods();
UnreadFields.java,FieldAnnotation f = item.getField();,if (item != null ) FieldAnnotation f = item.getField();
UnreadFields.java,FieldAnnotation f = item.getField();,if (item != null ) FieldAnnotation f = item.getField();
FindBugs.java,TextUICommandLine commandLine = new TextUICommandLine(DetectorFactoryCollection.instance());,if (TextUICommandLine(DetectorFactoryCollection != null ) TextUICommandLine commandLine = new TextUICommandLine(DetectorFactoryCollection.instance());
PreorderVisitor.java,int startPC = catchBlock.getStartPC();,if (catchBlock != null ) int startPC = catchBlock.getStartPC();
PreorderVisitor.java,int endPC = catchBlock.getEndPC();,if (catchBlock != null ) int endPC = catchBlock.getEndPC();
PreorderVisitor.java,LineNumberTable lineNumberTable = code.getLineNumberTable();,if (code != null ) LineNumberTable lineNumberTable = code.getLineNumberTable();
BCELRepositoryClassResolver.java,JavaClass javaClass = Repository.lookupClass(type.getClassName());,if (Repository != null ) JavaClass javaClass = Repository.lookupClass(type.getClassName());
BCELRepositoryClassResolver.java,int superclassIndex = javaClass.getSuperclassNameIndex();,if (javaClass != null ) int superclassIndex = javaClass.getSuperclassNameIndex();
BCELRepositoryClassResolver.java,int[] interfaceIndexList = javaClass.getInterfaceIndices();,if (javaClass != null ) int[] interfaceIndexList = javaClass.getInterfaceIndices();
BetterTypeAnalysis.java,CodeExceptionGen exceptionGen = edge.getTarget().getExceptionGen();,if (edge != null ) CodeExceptionGen exceptionGen = edge.getTarget().getExceptionGen();
BetterTypeFrameModelingVisitor.java,Type arrayType = frame.popValue(); // arrayref,if (arrayref != null ) Type arrayType = frame.popValue(); // arrayref
SubtypeQueryResult.java,boolean isSupertype = supertypeSet.get(type.getLabel());,if (supertypeSet != null ) boolean isSupertype = supertypeSet.get(type.getLabel());
TypeRepository.java,baseType = arrayType.getBaseType();,if (arrayType != null ) baseType = arrayType.getBaseType();
TypeRepository.java,ObjectType supertype = edge.getTarget();,if (edge != null ) ObjectType supertype = edge.getTarget();
TypeRepository.java,SubtypeQueryResult cachedResult = subtype.getSubtypeQueryResult();,if (subtype != null ) SubtypeQueryResult cachedResult = subtype.getSubtypeQueryResult();
TypeRepository.java,ObjectType type = work.removeFirst();,if (work != null ) ObjectType type = work.removeFirst();
TypeRepositoryTest.java,topType = repos.getTopType();,if (repos != null ) topType = repos.getTopType();
TypeRepositoryTest.java,bottomType = repos.getBottomType();,if (repos != null ) bottomType = repos.getBottomType();
TypeRepositoryTest.java,nullType = repos.getNullType();,if (repos != null ) nullType = repos.getNullType();
TypeRepositoryTest.java,longExtraType = repos.getLongExtraType();,if (repos != null ) longExtraType = repos.getLongExtraType();
TypeRepositoryTest.java,doubleExtraType = repos.getDoubleExtraType();,if (repos != null ) doubleExtraType = repos.getDoubleExtraType();
FindNullDeref.java,Location firstLoc = doomedLocations.first();,if (doomedLocations != null ) Location firstLoc = doomedLocations.first();
NullDerefAndRedundantComparisonFinder.java,Location location = Location.getLastLocation(edge.getTarget());,if (Location != null ) Location location = Location.getLastLocation(edge.getTarget());
UnconditionalValueDerefAnalysis.java,NullnessAnnotationDatabase database = AnalysisContext.currentAnalysisContext().getNullnessAnnotationDatabase();,if (AnalysisContext != null ) NullnessAnnotationDatabase database = AnalysisContext.currentAnalysisContext().getNullnessAnnotationDatabase();
UnconditionalValueDerefAnalysis.java,InvokeInstruction inv = (InvokeInstruction) handle.getInstruction();,if (handle != null ) InvokeInstruction inv = (InvokeInstruction) handle.getInstruction();
UnconditionalValueDerefAnalysis.java,SignatureParser sigParser = new SignatureParser(called.getSignature());,if (SignatureParser(called != null ) SignatureParser sigParser = new SignatureParser(called.getSignature());
UnconditionalValueDerefAnalysis.java,int numParams = sigParser.getNumParameters();,if (sigParser != null ) int numParams = sigParser.getNumParameters();
FindNullDeref.java,JavaClass jclass = classContext.getJavaClass();,if (classContext != null ) JavaClass jclass = classContext.getJavaClass();
FindNullDeref.java,Method[] methodList = jclass.getMethods();,if (jclass != null ) Method[] methodList = jclass.getMethods();
UnconditionalDerefAnalysis.java,boolean isBackEdge = edge.isBackwardinBytecode();,if (edge != null ) boolean isBackEdge = edge.isBackwardinBytecode();
UnconditionalValueDerefAnalysis.java,boolean isBackEdge = edge.isBackwardinBytecode();,if (edge != null ) boolean isBackEdge = edge.isBackwardinBytecode();
BuildUnconditionalParamDerefDatabase.java,UnconditionalDerefSet unconditionalDerefSet = dataflow.getResultFact(cfg.getEntry());,if (dataflow != null ) UnconditionalDerefSet unconditionalDerefSet = dataflow.getResultFact(cfg.getEntry());
FindMismatchedWaitOrNotify.java,String sourceFile = classContext.getJavaClass().getSourceFileName();,if (classContext != null ) String sourceFile = classContext.getJavaClass().getSourceFileName();
TypeAnalysis.java,ValueNumber instanceOfValueNumber = check.getValueNumber(); //fact.getInstanceOfValueNumber();,if (//fact != null ) ValueNumber instanceOfValueNumber = check.getValueNumber(); //fact.getInstanceOfValueNumber();
TypeAnalysis.java,Type instanceOfType = check.getType(); //fact.getInstanceOfType();,if (//fact != null ) Type instanceOfType = check.getType(); //fact.getInstanceOfType();
TypeAnalysis.java,ValueNumber instanceOfValueNumber = fact.getInstanceOfValueNumber();,if (fact != null ) ValueNumber instanceOfValueNumber = fact.getInstanceOfValueNumber();
TypeAnalysis.java,Type instanceOfType = fact.getInstanceOfType();,if (fact != null ) Type instanceOfType = fact.getInstanceOfType();
DefinitelyNullSetAnalysis.java,InstructionHandle last = edge.getSource().getLastInstruction();,if (edge != null ) InstructionHandle last = edge.getSource().getLastInstruction();
DefinitelyNullSetAnalysis.java,"Location cmpLoc = new Location(last, edge.getSource());","if (edge != null ) Location cmpLoc = new Location(last, edge.getSource());"
DefinitelyNullSetAnalysis.java,short opcode = last.getInstruction().getOpcode();,if (last != null ) short opcode = last.getInstruction().getOpcode();
StateSet.java,State initState = new State(factory.getMaxObligationTypes());,if (State(factory != null ) State initState = new State(factory.getMaxObligationTypes());
BlockTypeAnalysis.java,Method[] methodList = jclass.getMethods();,if (jclass != null ) Method[] methodList = jclass.getMethods();
DominatorsAnalysis.java,Method[] methodList = jclass.getMethods();,if (jclass != null ) Method[] methodList = jclass.getMethods();
IsNullValueAnalysis.java,value = IsNullValue.nullOnComplexPathValue();,if (IsNullValue != null ) value = IsNullValue.nullOnComplexPathValue();
IsNullValueAnalysis.java,value = IsNullValue.nullOnComplexPathValue();,if (IsNullValue != null ) value = IsNullValue.nullOnComplexPathValue();
ClassInfoAnalysisEngine.java,ClassInfo classInfo = parser.parse();,if (parser != null ) ClassInfo classInfo = parser.parse();
ClassPathBuilder.java,ClassInfo classInfo = parser.parse();,if (parser != null ) ClassInfo classInfo = parser.parse();
SingleFileCodeBase.java,ClassInfo classInfo = classParser.parse();,if (classParser != null ) ClassInfo classInfo = classParser.parse();
FindNullDeref.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
Update.java,String annotation = newBug.getAnnotationText();,if (newBug != null ) String annotation = newBug.getAnnotationText();
SerializableIdiom.java,double isSerializable = Analyze.isDeepSerializable(fieldX.getSignature());,if (Analyze != null ) double isSerializable = Analyze.isDeepSerializable(fieldX.getSignature());
SingleFileCodeBase.java,resourceName = classInfo.getClassDescriptor().toResourceName();,if (classInfo != null ) resourceName = classInfo.getClassDescriptor().toResourceName();
ClassPathBuilder.java,boolean isAppCodeBase = item.isAppCodeBase();,if (item != null ) boolean isAppCodeBase = item.isAppCodeBase();
FindBugs2.java,allClassSet = builder.getAllClassSet();,if (builder != null ) allClassSet = builder.getAllClassSet();
DetectorFactoryCollection.java,final URL url = file.toURI().toURL();,if (file != null ) final URL url = file.toURI().toURL();
MethodAnnotation.java,nameInClass = result.toString();,if (result != null ) nameInClass = result.toString();
ClassInfoAnalysisEngine.java,InputStream classDataIn = new ByteArrayInputStream(classData.getData());,if (ByteArrayInputStream(classData != null ) InputStream classDataIn = new ByteArrayInputStream(classData.getData());
ClassInfoAnalysisEngine.java,int magic = in.readInt();,if (in != null ) int magic = in.readInt();
ClassInfoAnalysisEngine.java,int tag = in.readUnsignedByte();,if (in != null ) int tag = in.readUnsignedByte();
ClassInfoAnalysisEngine.java,data[i] = in.readUTF();,if (in != null ) data[i] = in.readUTF();
ClassInfoAnalysisEngine.java,data[i] = new Integer(in.readInt());,if (Integer(in != null ) data[i] = new Integer(in.readInt());
ClassInfoAnalysisEngine.java,data[i] = new Float(in.readFloat());,if (Float(in != null ) data[i] = new Float(in.readFloat());
ClassInfoAnalysisEngine.java,data[i] = new Long(in.readLong());,if (Long(in != null ) data[i] = new Long(in.readLong());
ClassInfoAnalysisEngine.java,data[i] = new Double(in.readDouble());,if (Double(in != null ) data[i] = new Double(in.readDouble());
ClassInfoAnalysisEngine.java,data[i] = new Integer(in.readUnsignedShort());,if (Integer(in != null ) data[i] = new Integer(in.readUnsignedShort());
EmacsBugReporter.java,"String sourceFileName = fileNameFor(javaClass.getPackageName(), javaClass.getSourceFileName());","if (javaClass != null ) String sourceFileName = fileNameFor(javaClass.getPackageName(), javaClass.getSourceFileName());"
FindBugs.java,bugCollectionBugReporter = (BugCollectionBugReporter) bugReporter.getRealBugReporter();,if (bugReporter != null ) bugCollectionBugReporter = (BugCollectionBugReporter) bugReporter.getRealBugReporter();
FindBugs.java,BugReporter origBugReporter = bugReporter.getDelegate();,if (bugReporter != null ) BugReporter origBugReporter = bugReporter.getDelegate();
FindBugs.java,String s = in.readLine();,if (in != null ) String s = in.readLine();
FindBugs.java,BugPattern bugPattern = bugInstance.getBugPattern();,if (bugInstance != null ) BugPattern bugPattern = bugInstance.getBugPattern();
FindBugs.java,String category = bugPattern.getCategory();,if (bugPattern != null ) String category = bugPattern.getCategory();
FindBugs.java,private UserPreferences userPreferences = UserPreferences.createDefaultUserPreferences();,if (UserPreferences != null ) private UserPreferences userPreferences = UserPreferences.createDefaultUserPreferences();
FindBugs.java,String visitorName = tok.nextToken();,if (tok != null ) String visitorName = tok.nextToken();
FindBugs.java,String token = tok.nextToken();,if (tok != null ) String token = tok.nextToken();
FindBugs.java,String item = tok.nextToken();,if (tok != null ) String item = tok.nextToken();
FindBugs.java,String what = tok.nextToken();,if (tok != null ) String what = tok.nextToken();
ClassPathBuilder.java,ICodeBase codeBase = item.getCodeBaseLocator().openCodeBase();,if (item != null ) ICodeBase codeBase = item.getCodeBaseLocator().openCodeBase();
FindBugs.java,this.project = project.duplicate();,if (project != null ) this.project = project.duplicate();
Filter.java,String sourceFile = srcLine.getSourceFile();,if (srcLine != null ) String sourceFile = srcLine.getSourceFile();
Filter.java,String cName = srcLine.getClassName();,if (srcLine != null ) String cName = srcLine.getClassName();
AnalysisCacheToAnalysisContextAdapter.java,ClassDescriptor classDescriptor = new ClassDescriptor(javaClass.getClassName());,if (ClassDescriptor(javaClass != null ) ClassDescriptor classDescriptor = new ClassDescriptor(javaClass.getClassName());
HugeSharedStringConstants.java,String className = field.getClassName();,if (field != null ) String className = field.getClassName();
ClassContextClassAnalysisEngine.java,JavaClass javaClass = Repository.lookupClass(descriptor.getClassName());,if (Repository != null ) JavaClass javaClass = Repository.lookupClass(descriptor.getClassName());
FindBugs2.java,String extDir = st.nextToken();,if (st != null ) String extDir = st.nextToken();
FindBugs2.java,String entry = st.nextToken();,if (st != null ) String entry = st.nextToken();
FindBugs2.java,String path = pathname.getParent();,if (pathname != null ) String path = pathname.getParent();
FindBugs2.java,WorkListItem item = workList.removeFirst();,if (workList != null ) WorkListItem item = workList.removeFirst();
FindBugs2.java,boolean isAppCodeBase = item.isAppCodeBase();,if (item != null ) boolean isAppCodeBase = item.isAppCodeBase();
FindBugs2.java,ICodeBase codeBase = item.getCodeBaseLocator().openCodeBase();,if (item != null ) ICodeBase codeBase = item.getCodeBaseLocator().openCodeBase();
FindBugs2.java,ICodeBaseIterator i = codeBase.iterator();,if (codeBase != null ) ICodeBaseIterator i = codeBase.iterator();
FindBugs2.java,in = manifestEntry.openResource();,if (manifestEntry != null ) in = manifestEntry.openResource();
FindBugs2.java,Attributes mainAttrs = manifest.getMainAttributes();,if (manifest != null ) Attributes mainAttrs = manifest.getMainAttributes();
FindBugs2.java,ListIterator<WorkListItem> i = workList.listIterator();,if (workList != null ) ListIterator<WorkListItem> i = workList.listIterator();
LegacyAnalysisContext.java,String name = jc.getSourceFileName();,if (jc != null ) String name = jc.getSourceFileName();
FindUnreleasedLock.java,boolean notNull = receiver.isDefinitelyNotNull();,if (receiver != null ) boolean notNull = receiver.isDefinitelyNotNull();
BuildUnconditionalParamDerefDatabase.java,database = AnalysisContext.currentAnalysisContext().getUnconditionalDerefParamDatabase();,if (AnalysisContext != null ) database = AnalysisContext.currentAnalysisContext().getUnconditionalDerefParamDatabase();
FindInconsistentSync2.java,InnerClassAccessMap icam = InnerClassAccessMap.instance();,if (InnerClassAccessMap != null ) InnerClassAccessMap icam = InnerClassAccessMap.instance();
AnalysisContext.java,URLClassPathRepository repos = (URLClassPathRepository) Repository.getRepository();,if (Repository != null ) URLClassPathRepository repos = (URLClassPathRepository) Repository.getRepository();
AnalysisContext.java,String name = jc.getSourceFileName();,if (jc != null ) String name = jc.getSourceFileName();
FindBugs.java,Detector[] detectors = analysisPass.getDetectorList();,if (analysisPass != null ) Detector[] detectors = analysisPass.getDetectorList();
UnionResults.java,Set<String> oldWords = matching.getTextAnnotationWords();,if (matching != null ) Set<String> oldWords = matching.getTextAnnotationWords();
UnionResults.java,Set<String> newWords = bugInstance.getTextAnnotationWords();,if (bugInstance != null ) Set<String> newWords = bugInstance.getTextAnnotationWords();
DetectorFactory.java,String className = detectorClass.getName();,if (detectorClass != null ) String className = detectorClass.getName();
IsNullValueAnalysis.java,value = IsNullValue.nullOnSimplePathValue();,if (IsNullValue != null ) value = IsNullValue.nullOnSimplePathValue();
IsNullValueFrameModelingVisitor.java,pushValue = IsNullValue.nullOnSimplePathValue().toMayReturnNullValue();,if (IsNullValue != null ) pushValue = IsNullValue.nullOnSimplePathValue().toMayReturnNullValue();
IsNullValueFrameModelingVisitor.java,pushValue = IsNullValue.nullOnSimplePathValue().toMayReturnNullValue();,if (IsNullValue != null ) pushValue = IsNullValue.nullOnSimplePathValue().toMayReturnNullValue();
IsNullValueFrameModelingVisitor.java,pushValue = IsNullValue.nonNullValue().toMayReturnNullValue();,if (IsNullValue != null ) pushValue = IsNullValue.nonNullValue().toMayReturnNullValue();
DuplicateBranches.java,int thenStartPos = thenBB.getFirstInstruction().getPosition();,if (thenBB != null ) int thenStartPos = thenBB.getFirstInstruction().getPosition();
DuplicateBranches.java,int elseStartPos = elseBB.getFirstInstruction().getPosition();,if (elseBB != null ) int elseStartPos = elseBB.getFirstInstruction().getPosition();
DuplicateBranches.java,InstructionHandle firstIns = target.getFirstInstruction();,if (target != null ) InstructionHandle firstIns = target.getFirstInstruction();
DuplicateBranches.java,InstructionHandle firstIns = target.getFirstInstruction();,if (target != null ) InstructionHandle firstIns = target.getFirstInstruction();
Dataflow.java,String method = a.getClassAndMethod().toString();,if (a != null ) String method = a.getClassAndMethod().toString();
JXPathMetaModuleExample.java,Object[] obj = values.toArray();,if (values != null ) Object[] obj = values.toArray();
FindBugsWorker.java,BugInstance oldWarning = (BugInstance) i.next();,if (i != null ) BugInstance oldWarning = (BugInstance) i.next();
FindBugsFrame.java,String sourceFile = srcLine.getSourceFile();,if (srcLine != null ) String sourceFile = srcLine.getSourceFile();
FindDeadLocalStores.java,int local = ins.getIndex();,if (ins != null ) int local = ins.getIndex();
FindDeadLocalStores.java,LocalVariableTable localVariableTable = method.getLocalVariableTable();,if (method != null ) LocalVariableTable localVariableTable = method.getLocalVariableTable();
FindDeadLocalStores.java,position = location.getHandle().getPosition();,if (location != null ) position = location.getHandle().getPosition();
FindBugs2.java,classPath = classFactory.createClassPath();,if (classFactory != null ) classPath = classFactory.createClassPath();
FindBugs2.java,ICodeBase codeBase = item.getCodeBaseLocator().openCodeBase();,if (item != null ) ICodeBase codeBase = item.getCodeBaseLocator().openCodeBase();
FindBugs2.java,classPath = ClassFactory.instance().createClassPath();,if (ClassFactory != null ) classPath = ClassFactory.instance().createClassPath();
FindBugs2.java,ICodeBase codeBase = item.getCodeBase();,if (item != null ) ICodeBase codeBase = item.getCodeBase();
FindBugs2.java,String url = appWorkList.removeFirst();,if (appWorkList != null ) String url = appWorkList.removeFirst();
ZipFileCodeBase.java,String result = nextEntry.getName();,if (nextEntry != null ) String result = nextEntry.getName();
ZipFileCodeBase.java,nextEntry = zipEntryEnumerator.nextElement();,if (zipEntryEnumerator != null ) nextEntry = zipEntryEnumerator.nextElement();
OpcodeStack.java,String sbVal = (String)sbItem.getConstant();,if ((String)sbItem != null ) String sbVal = (String)sbItem.getConstant();
OpcodeStack.java,Object sVal = (Object)i.getConstant();,if ((Object)i != null ) Object sVal = (Object)i.getConstant();
SerializableIdiom.java,JavaClass classStored = first.getJavaClass();,if (first != null ) JavaClass classStored = first.getJavaClass();
OpcodeStack.java,String sbVal = (String)sb.getConstant();,if ((String)sb != null ) String sbVal = (String)sb.getConstant();
CheckBoxMenuBuilder.java,BProject project = pckg.getProject();,if (pckg != null ) BProject project = pckg.getProject();
RunFindbugs.java,SourceLineAnnotation source = bug.getPrimarySourceLineAnnotation();,if (bug != null ) SourceLineAnnotation source = bug.getPrimarySourceLineAnnotation();
ResultsFrame.java,SourceLineAnnotation srcLine = instance.getPrimarySourceLineAnnotation();,if (instance != null ) SourceLineAnnotation srcLine = instance.getPrimarySourceLineAnnotation();
ResultsFrame.java,int srcEndLine = srcLine.getEndLine();,if (srcLine != null ) int srcEndLine = srcLine.getEndLine();
ClassLister.java,startTime = new Date().getTime();,if (Date() != null ) startTime = new Date().getTime();
ClassLister.java,startTime = new Date().getTime();,if (Date() != null ) startTime = new Date().getTime();
FindUnreleasedLock.java,RepositoryLookupFailureCallback lookupFailureCallback = classContext.getLookupFailureCallback();,if (classContext != null ) RepositoryLookupFailureCallback lookupFailureCallback = classContext.getLookupFailureCallback();
NullDerefAndRedundantComparisonFinder.java,LineNumberTable lineNumberTable = method.getLineNumberTable();,if (method != null ) LineNumberTable lineNumberTable = method.getLineNumberTable();
NullDerefAndRedundantComparisonFinder.java,int newLine = line.getLineNumber();,if (line != null ) int newLine = line.getLineNumber();
BadResultSetAccess.java,Object cons = item.getConstant();,if (item != null ) Object cons = item.getConstant();
MethodReturnCheck.java,checkReturnAnnotationDatabase = AnalysisContext.currentAnalysisContext().getCheckReturnAnnotationDatabase();,if (AnalysisContext != null ) checkReturnAnnotationDatabase = AnalysisContext.currentAnalysisContext().getCheckReturnAnnotationDatabase();
MethodReturnCheck.java,int priority = annotation.getPriority();,if (annotation != null ) int priority = annotation.getPriority();
MapCache.java,K key = eldest.getKey();,if (eldest != null ) K key = eldest.getKey();
DetectorFactoryCollection.java,URL url = file.toURI().toURL();,if (file != null ) URL url = file.toURI().toURL();
FindBugsAction.java,JobManager manager = JobManager.getInstance();,if (JobManager != null ) JobManager manager = JobManager.getInstance();
WillBeDereferencedAnalysis.java,this.maxBit = methodGen.getMaxLocals();,if (methodGen != null ) this.maxBit = methodGen.getMaxLocals();
TypeAnalysis.java,ExceptionSet thrownExceptionSet = cachedExceptionSet.getExceptionSet().duplicate();,if (cachedExceptionSet != null ) ExceptionSet thrownExceptionSet = cachedExceptionSet.getExceptionSet().duplicate();
MarkerUtil.java,IResource res = type.getUnderlyingResource();,if (type != null ) IResource res = type.getUnderlyingResource();
MarkerUtil.java,String warningUID = warning.getUniqueId();,if (warning != null ) String warningUID = warning.getUniqueId();
PreorderVisitor.java,fieldName = getStringFromIndex(field.getNameIndex());,if (getStringFromIndex(field != null ) fieldName = getStringFromIndex(field.getNameIndex());
PreorderVisitor.java,fieldSig = getStringFromIndex(field.getSignatureIndex());,if (getStringFromIndex(field != null ) fieldSig = getStringFromIndex(field.getSignatureIndex());
PreorderVisitor.java,methodName = getStringFromIndex(method.getNameIndex());,if (getStringFromIndex(method != null ) methodName = getStringFromIndex(method.getNameIndex());
PreorderVisitor.java,methodSig = getStringFromIndex(method.getSignatureIndex());,if (getStringFromIndex(method != null ) methodSig = getStringFromIndex(method.getSignatureIndex());
PreorderVisitor.java,fullyQualifiedMethodName = ref.toString();,if (ref != null ) fullyQualifiedMethodName = ref.toString();
DismantleBytecode.java,refConstantOperand = ref.toString();,if (ref != null ) refConstantOperand = ref.toString();
IsNullValueAnalysis.java,String methodName = methodGen.getMethod().getName();,if (methodGen != null ) String methodName = methodGen.getMethod().getName();
ClassContext.java,String methodName = method.getName();,if (method != null ) String methodName = method.getName();
ClassContext.java,int codeLength = method.getCode().getLength();,if (method != null ) int codeLength = method.getCode().getLength();
ClassContext.java,Runtime runtime = Runtime.getRuntime();,if (Runtime != null ) Runtime runtime = Runtime.getRuntime();
TestingGround.java,JavaClass superClass = clazz.getSuperClass();,if (clazz != null ) JavaClass superClass = clazz.getSuperClass();
TestingGround.java,Object constantValue = item.getConstant();,if (item != null ) Object constantValue = item.getConstant();
TestingGround.java,Object constantValue = item.getConstant();,if (item != null ) Object constantValue = item.getConstant();
FindBadCast2.java,String castSig = castType.getSignature();,if (castType != null ) String castSig = castType.getSignature();
IsNullValueAnalysis.java,IsNullValue tos = lastFrame.getTopValue();,if (lastFrame != null ) IsNullValue tos = lastFrame.getTopValue();
IsNullValueAnalysis.java,ifcmpDecision = IsNullValue.pathSensitiveNonNullValue();,if (IsNullValue != null ) ifcmpDecision = IsNullValue.pathSensitiveNonNullValue();
Footprint.java,heap = new MemoryBeanWrapper().getHeapMemoryUsage();,if (MemoryBeanWrapper() != null ) heap = new MemoryBeanWrapper().getHeapMemoryUsage();
FindNonSerializableStoreIntoSession.java,int pc = handle.getPosition();,if (handle != null ) int pc = handle.getPosition();
MethodAnnotation.java,fullMethod = result.toString();,if (result != null ) fullMethod = result.toString();
FindBugsAction.java,Object element =  iter.next();,if (iter != null ) Object element =  iter.next();
FindBugsAction.java,ProgressMonitorDialog progress = new ProgressMonitorDialog(FindbugsPlugin.getShell());,if (ProgressMonitorDialog(FindbugsPlugin != null ) ProgressMonitorDialog progress = new ProgressMonitorDialog(FindbugsPlugin.getShell());
OpcodeStack.java,List<Item> stackToMerge = jumpStack.pop();,if (jumpStack != null ) List<Item> stackToMerge = jumpStack.pop();
Filter.java,BugCollection resultCollection = origCollection.createEmptyCollectionWithMetadata();,if (origCollection != null ) BugCollection resultCollection = origCollection.createEmptyCollectionWithMetadata();
AbstractBugCollection.java,long analysisTimestamp = System.currentTimeMillis();,if (System != null ) long analysisTimestamp = System.currentTimeMillis();
AbstractBugCollection.java,Document document = docFactory.createDocument();,if (docFactory != null ) Document document = docFactory.createDocument();
XMLBugReporter.java,String hash = bugInstance.getInstanceKey();,if (bugInstance != null ) String hash = bugInstance.getInstanceKey();
XMLBugReporter.java,BugPattern bugPattern = bugInstance.getBugPattern();,if (bugInstance != null ) BugPattern bugPattern = bugInstance.getBugPattern();
XMLBugReporter.java,String bugCode = bugInstance.getAbbrev();,if (bugInstance != null ) String bugCode = bugInstance.getAbbrev();
XMLBugReporter.java,BugPattern bugPattern = bugInstance.getBugPattern();,if (bugInstance != null ) BugPattern bugPattern = bugInstance.getBugPattern();
SourceInfoMap.java,Integer value = Integer.valueOf(tokenizer.nextToken());,if (Integer != null ) Integer value = Integer.valueOf(tokenizer.nextToken());
FindBugsFrame.java,consoleSplitter = new javax.swing.JSplitPane();,if (javax != null ) consoleSplitter = new javax.swing.JSplitPane();
FindBugsFrame.java,consoleScrollPane = new javax.swing.JScrollPane();,if (javax != null ) consoleScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,consoleMessageArea = new javax.swing.JTextArea();,if (javax != null ) consoleMessageArea = new javax.swing.JTextArea();
FindBugsFrame.java,viewConsoleItem = new javax.swing.JCheckBoxMenuItem();,if (javax != null ) viewConsoleItem = new javax.swing.JCheckBoxMenuItem();
FindBugsFrame.java,String propertyName = evt.getPropertyName();,if (evt != null ) String propertyName = evt.getPropertyName();
MethodAnnotation.java,String className = xmethod.getClassName();,if (xmethod != null ) String className = xmethod.getClassName();
BugInstance.java,String className = visitor.getDottedClassConstantOperand();,if (visitor != null ) String className = visitor.getDottedClassConstantOperand();
BugInstance.java,String methodName = visitor.getNameConstantOperand();,if (visitor != null ) String methodName = visitor.getNameConstantOperand();
BugInstance.java,String methodSig = visitor.getDottedSigConstantOperand();,if (visitor != null ) String methodSig = visitor.getDottedSigConstantOperand();
SourceLineAnnotation.java,this.surroundingOpcodes = buf.toString();,if (buf != null ) this.surroundingOpcodes = buf.toString();
FindBugs.java,InputStream in = url.openStream();,if (url != null ) InputStream in = url.openStream();
DetectorFactoryCollection.java,String homeDir = FindBugs.getHome();,if (FindBugs != null ) String homeDir = FindBugs.getHome();
DetectorFactoryCollection.java,File[] contentList = pluginDir.listFiles();,if (pluginDir != null ) File[] contentList = pluginDir.listFiles();
SerializableIdiom.java,JavaClass classStored = first.getJavaClass();,if (first != null ) JavaClass classStored = first.getJavaClass();
FindBugsTask.java,SystemProperty systemProperty = (SystemProperty) i.next();,if (i != null ) SystemProperty systemProperty = (SystemProperty) i.next();
FindBugsTask.java,SystemProperty systemProperty = (SystemProperty) i.next();,if (i != null ) SystemProperty systemProperty = (SystemProperty) i.next();
FindBugsTask.java,Iterator itr = classLocations.iterator();,if (classLocations != null ) Iterator itr = classLocations.iterator();
ConvertToARFF.java,final Element element = (Element) i.next();,if (i != null ) final Element element = (Element) i.next();
EclipseClasspath.java,String dirName = dirList[i].getName();,if (dirList[i] != null ) String dirName = dirList[i].getName();
BadCast.java,Set s = (Set) m.values();,if (m != null ) Set s = (Set) m.values();
BadResultSetAccessTest.java,ResultSetMetaData rsmd = rs.getMetaData();,if (rs != null ) ResultSetMetaData rsmd = rs.getMetaData();
BadResultSetAccessTest.java,int numCols = rsmd.getColumnCount();,if (rsmd != null ) int numCols = rsmd.getColumnCount();
DatabaseStreams.java,statement = connection.createStatement();,if (connection != null ) statement = connection.createStatement();
Doublecheck.java,s = Thread.currentThread().toString();,if (Thread != null ) s = Thread.currentThread().toString();
Doublecheck.java,i = Thread.currentThread().hashCode();,if (Thread != null ) i = Thread.currentThread().hashCode();
Doublecheck.java,j = System.currentTimeMillis();,if (System != null ) j = System.currentTimeMillis();
Extension.java,DerInputStream in = derVal.toDerInputStream();,if (derVal != null ) DerInputStream in = derVal.toDerInputStream();
Extension.java,extensionId = in.getOID();,if (in != null ) extensionId = in.getOID();
Extension.java,DerValue val = in.getDerValue();,if (in != null ) DerValue val = in.getDerValue();
Extension.java,critical = val.getBoolean();,if (val != null ) critical = val.getBoolean();
Extension.java,val = in.getDerValue();,if (in != null ) val = in.getDerValue();
Extension.java,extensionValue = val.getOctetString();,if (val != null ) extensionValue = val.getOctetString();
Extension.java,extensionValue = val.getOctetString();,if (val != null ) extensionValue = val.getOctetString();
Extension.java,this.extensionValue = inDerVal.getOctetString();,if (inDerVal != null ) this.extensionValue = inDerVal.getOctetString();
Extension.java,"String s = ""ObjectId: "" + extensionId.toString();","if (extensionId != null ) String s = ""ObjectId: "" + extensionId.toString();"
ExternalizableTest.java,Object o = oin.readObject();,if (oin != null ) Object o = oin.readObject();
ExternalizableTest2.java,Object o = oin.readObject();,if (oin != null ) Object o = oin.readObject();
FaultyPublicSemaphore.java,Iterator<String> it = basket.iterator();,if (basket != null ) Iterator<String> it = basket.iterator();
FaultyPublicSemaphore.java,s = it.next();,if (it != null ) s = it.next();
NewForGetClass.java,Class c = new NewForGetClass().getClass();,if (NewForGetClass() != null ) Class c = new NewForGetClass().getClass();
OpenDatabase.java,Statement statement = conn.createStatement();,if (conn != null ) Statement statement = conn.createStatement();
OpenDatabase.java,statement = connection.createStatement();,if (connection != null ) statement = connection.createStatement();
PublicReadObject.java,x = ois.readInt();,if (ois != null ) x = ois.readInt();
SBConcatTest.java,tokens[i] = tokens[i].trim();,if (tokens[i] != null ) tokens[i] = tokens[i].trim();
Serializable2.java,Object o = oin.readObject();,if (oin != null ) Object o = oin.readObject();
SkipBufferedInputStream.java,long available = bis.available();,if (bis != null ) long available = bis.available();
SkipBufferedInputStream2.java,long available = bis.available();,if (bis != null ) long available = bis.available();
StringComparision.java,String internedName = name.intern();,if (name != null ) String internedName = name.intern();
TwoLockWait.java,while (value == null) lock.wait();,if (lock != null ) while (value == null) lock.wait();
UselessCurrentThread.java,Thread t = Thread.currentThread();,if (Thread != null ) Thread t = Thread.currentThread();
WMITest.java,Iterator it = m.keySet().iterator();,if (m != null ) Iterator it = m.keySet().iterator();
WMITest.java,String name = (String)it.next();,if ((String)it != null ) String name = (String)it.next();
WMITest.java,Iterator it = m.keySet().iterator();,if (m != null ) Iterator it = m.keySet().iterator();
WMITest.java,String name = (String)it.next();,if ((String)it != null ) String name = (String)it.next();
WMITest.java,String name = (String)it.next();,if ((String)it != null ) String name = (String)it.next();
WMITest.java,Iterator it = m.keySet().iterator();,if (m != null ) Iterator it = m.keySet().iterator();
WMITest.java,Object name = it.next();,if (it != null ) Object name = it.next();
ListBugDatabaseInfo.java,AppVersion appVersion = origCollection.getCurrentAppVersion();,if (origCollection != null ) AppVersion appVersion = origCollection.getCurrentAppVersion();
MineBugHistory.java,int maxSequence = (int)bugCollection.getSequenceNumber();,if ((int)bugCollection != null ) int maxSequence = (int)bugCollection.getSequenceNumber();
AliasedWarnings.java,int comparatorType = commandLine.getComparatorType();,if (commandLine != null ) int comparatorType = commandLine.getComparatorType();
AliasedWarnings.java,comparator = VersionInsensitiveBugComparator.instance();,if (VersionInsensitiveBugComparator != null ) comparator = VersionInsensitiveBugComparator.instance();
CategorizeBugs.java,Iterator<BugInstance> i = bugCollection.iterator();,if (bugCollection != null ) Iterator<BugInstance> i = bugCollection.iterator();
CategorizeBugs.java,String annotation = bugInstance.getAnnotationText();,if (bugInstance != null ) String annotation = bugInstance.getAnnotationText();
CategorizeBugs.java,SourceLineAnnotation srcLine = bugInstance.getPrimarySourceLineAnnotation();,if (bugInstance != null ) SourceLineAnnotation srcLine = bugInstance.getPrimarySourceLineAnnotation();
CategorizeBugs.java,String key = entry.getKey();,if (entry != null ) String key = entry.getKey();
CategorizeBugs.java,Stats stats = entry.getValue();,if (entry != null ) Stats stats = entry.getValue();
ClassifyBugs.java,Set<String> annotationWords =bugInstance.getTextAnnotationWords();,if (=bugInstance != null ) Set<String> annotationWords =bugInstance.getTextAnnotationWords();
CountBugs.java,String category = tok.nextToken();,if (tok != null ) String category = tok.nextToken();
CountBugs.java,BugPattern bugPattern = bugInstance.getBugPattern();,if (bugInstance != null ) BugPattern bugPattern = bugInstance.getBugPattern();
CountBugs.java,String legend = tok.nextToken();,if (tok != null ) String legend = tok.nextToken();
CountBugs.java,total += integer.intValue();,if (integer != null ) total += integer.intValue();
CountBugs.java,Iterator<BugInstance> i = bugCollection.iterator();,if (bugCollection != null ) Iterator<BugInstance> i = bugCollection.iterator();
CountBugs.java,Key key = keyFactory.createKey(bugInstance);//bugInstance.getAbbrev();,if (keyFactory != null ) Key key = keyFactory.createKey(bugInstance);//bugInstance.getAbbrev();
CountBugs.java,Set<String> annotationWords =bugInstance.getTextAnnotationWords();,if (=bugInstance != null ) Set<String> annotationWords =bugInstance.getTextAnnotationWords();
CountBugs.java,int count = countMap.get(key).intValue();,if (countMap != null ) int count = countMap.get(key).intValue();
CountBugs2.java,iter = set.iterator();,if (set != null ) iter = set.iterator();
CountBugs2.java,iter = bugCollection.iterator();,if (bugCollection != null ) iter = bugCollection.iterator();
CountBugs2.java,BugInstance warning = iter.next();,if (iter != null ) BugInstance warning = iter.next();
CountBugs2.java,BugPattern pattern = warning.getBugPattern();,if (warning != null ) BugPattern pattern = warning.getBugPattern();
CountBugs2.java,comparator = VersionInsensitiveBugComparator.instance();,if (VersionInsensitiveBugComparator != null ) comparator = VersionInsensitiveBugComparator.instance();
CountBugsFast.java,fileName = fileName.trim();,if (fileName != null ) fileName = fileName.trim();
FindExamples.java,SourceLineAnnotation srcLine = bugInstance.getPrimarySourceLineAnnotation();,if (bugInstance != null ) SourceLineAnnotation srcLine = bugInstance.getPrimarySourceLineAnnotation();
FindExamples.java,line = line.trim();,if (line != null ) line = line.trim();
FindExamples.java,MethodAnnotation method = bugInstance.getPrimaryMethod();,if (bugInstance != null ) MethodAnnotation method = bugInstance.getPrimaryMethod();
FindExamples.java,SourceLineAnnotation srcLine = bugInstance.getPrimarySourceLineAnnotation();,if (bugInstance != null ) SourceLineAnnotation srcLine = bugInstance.getPrimarySourceLineAnnotation();
GraphIS2FalsePositives.java,Set<String> words = bugInstance.getTextAnnotationWords();,if (bugInstance != null ) Set<String> words = bugInstance.getTextAnnotationWords();
RandomSubset.java,this.resultCollection = bugCollection.createEmptyCollectionWithMetadata();,if (bugCollection != null ) this.resultCollection = bugCollection.createEmptyCollectionWithMetadata();
PreorderVisitor.java,constantPool = obj.getConstantPool();,if (obj != null ) constantPool = obj.getConstantPool();
PreorderVisitor.java,className = getStringFromIndex(c.getNameIndex());,if (getStringFromIndex(c != null ) className = getStringFromIndex(c.getNameIndex());
PreorderVisitor.java,packageName = obj.getPackageName();,if (obj != null ) packageName = obj.getPackageName();
PreorderVisitor.java,sourceFile = obj.getSourceFileName();,if (obj != null ) sourceFile = obj.getSourceFileName();
PreorderVisitor.java,superclassName = obj.getSuperclassName();,if (obj != null ) superclassName = obj.getSuperclassName();
Update.java,resultCollection = newCollection.createEmptyCollectionWithMetadata();,if (newCollection != null ) resultCollection = newCollection.createEmptyCollectionWithMetadata();
FindNonSerializableStoreIntoSession.java,String sourceFile = classContext.getJavaClass().getSourceFileName();,if (classContext != null ) String sourceFile = classContext.getJavaClass().getSourceFileName();
FindNonSerializableStoreIntoSession.java,"String methodName = methodGen.getClassName() + ""."" + methodGen.getName();","if (methodGen != null ) String methodName = methodGen.getClassName() + ""."" + methodGen.getName();"
FindNonSerializableStoreIntoSession.java,boolean isParameter = paramValueNumberSet.contains(vFrame.getTopValue());,if (paramValueNumberSet != null ) boolean isParameter = paramValueNumberSet.contains(vFrame.getTopValue());
AnnotationDatabase.java,Annotation min = inheritedAnnotations.first();,if (inheritedAnnotations != null ) Annotation min = inheritedAnnotations.first();
PreorderVisitor.java,int thisSize = catchBlock.getEndPC() - catchBlock.getStartPC();,if (catchBlock != null ) int thisSize = catchBlock.getEndPC() - catchBlock.getStartPC();
AnnotationDatabase.java,c = Repository.lookupClass(m.getClassName());,if (Repository != null ) c = Repository.lookupClass(m.getClassName());
MethodReturnCheck.java,PolicyDatabase database = policyDatabaseLocal.get();,if (policyDatabaseLocal != null ) PolicyDatabase database = policyDatabaseLocal.get();
IsNullValueAnalysis.java,value = IsNullValue.nullOnSimplePathValue();,if (IsNullValue != null ) value = IsNullValue.nullOnSimplePathValue();
IsNullValueAnalysis.java,value = IsNullValue.nonNullValue();,if (IsNullValue != null ) value = IsNullValue.nonNullValue();
IsNullValueFrameModelingVisitor.java,prop = annotationChecker.getProperty();,if (annotationChecker != null ) prop = annotationChecker.getProperty();
IsNullValueFrameModelingVisitor.java,pushValue = IsNullValue.nullOnSimplePathValue().toMayReturnNullValue();,if (IsNullValue != null ) pushValue = IsNullValue.nullOnSimplePathValue().toMayReturnNullValue();
IsNullValueFrameModelingVisitor.java,pushValue = IsNullValue.nonNullValue().toMayReturnNullValue();,if (IsNullValue != null ) pushValue = IsNullValue.nonNullValue().toMayReturnNullValue();
FindBadCast.java,String signature = it.getSignature();,if (it != null ) String signature = it.getSignature();
FindBadCast.java,int reg = it.getRegisterNumber();,if (it != null ) int reg = it.getRegisterNumber();
ClassContext.java,long end = System.currentTimeMillis();,if (System != null ) long end = System.currentTimeMillis();
BuildNonNullAnnotationDatabase.java,AnalysisContext analysisContext = AnalysisContext.currentAnalysisContext();,if (AnalysisContext != null ) AnalysisContext analysisContext = AnalysisContext.currentAnalysisContext();
FindNullDeref.java,unconditionalDerefParamDatabase = analysisContext.getUnconditionalDerefParamDatabase();,if (analysisContext != null ) unconditionalDerefParamDatabase = analysisContext.getUnconditionalDerefParamDatabase();
FindNullDeref.java,nonNullParamDatabase = analysisContext.getNonNullParamDatabase();,if (analysisContext != null ) nonNullParamDatabase = analysisContext.getNonNullParamDatabase();
FindNullDeref.java,checkForNullParamDatabase = analysisContext.getCheckForNullParamDatabase();,if (analysisContext != null ) checkForNullParamDatabase = analysisContext.getCheckForNullParamDatabase();
FindNullDeref.java,nullReturnValueAnnotationDatabase = analysisContext.getNullReturnValueAnnotationDatabase();,if (analysisContext != null ) nullReturnValueAnnotationDatabase = analysisContext.getNullReturnValueAnnotationDatabase();
FindNullDeref.java,nonNullReturn = annotationChecker.getAnnotatedMethod();,if (annotationChecker != null ) nonNullReturn = annotationChecker.getAnnotatedMethod();
FindNullDeref.java,String sourceFile = classContext.getJavaClass().getSourceFileName();,if (classContext != null ) String sourceFile = classContext.getJavaClass().getSourceFileName();
MergeResults.java,comparator = new SortedBugCollection.BugInstanceComparator();,if (SortedBugCollection != null ) comparator = new SortedBugCollection.BugInstanceComparator();
MergeResults.java,comparator = VersionInsensitiveBugComparator.instance();,if (VersionInsensitiveBugComparator != null ) comparator = VersionInsensitiveBugComparator.instance();
MergeResults.java,BugInstance matching = tailSet.first();,if (tailSet != null ) BugInstance matching = tailSet.first();
MergeResults.java,SourceLineAnnotation srcLine = bugInstance.getPrimarySourceLineAnnotation();,if (bugInstance != null ) SourceLineAnnotation srcLine = bugInstance.getPrimarySourceLineAnnotation();
MergeResults.java,SortedBugCollection result = mergeResults.getNewCollection();,if (mergeResults != null ) SortedBugCollection result = mergeResults.getNewCollection();
BuildNullReturnValueDatabase.java,database = AnalysisContext.currentAnalysisContext().getMayReturnNullDatabase();,if (AnalysisContext != null ) database = AnalysisContext.currentAnalysisContext().getMayReturnNullDatabase();
BuildNullReturnValueDatabase.java,Method[] methodList = classContext.getJavaClass().getMethods();,if (classContext != null ) Method[] methodList = classContext.getJavaClass().getMethods();
BuildNullReturnValueDatabase.java,String methodSig = method.getSignature();,if (method != null ) String methodSig = method.getSignature();
BuildNullReturnValueDatabase.java,BasicBlock exit = cfg.getExit();,if (cfg != null ) BasicBlock exit = cfg.getExit();
BuildNullReturnValueDatabase.java,BasicBlock source = edge.getSource();,if (edge != null ) BasicBlock source = edge.getSource();
BuildNullReturnValueDatabase.java,InstructionHandle last = source.getLastInstruction();,if (source != null ) InstructionHandle last = source.getLastInstruction();
BuildNullReturnValueDatabase.java,Instruction ins = last.getInstruction();,if (last != null ) Instruction ins = last.getInstruction();
BuildNullReturnValueDatabase.java,IsNullValue tos = frame.getTopValue();,if (frame != null ) IsNullValue tos = frame.getTopValue();
FindNullDeref.java,NonNullParamProperty property = unconditionalDerefParamDatabase.getProperty(targetMethod.toXMethod());,if (unconditionalDerefParamDatabase != null ) NonNullParamProperty property = unconditionalDerefParamDatabase.getProperty(targetMethod.toXMethod());
Filter.java,SourceLineAnnotation srcLine = bug.getPrimarySourceLineAnnotation();,if (bug != null ) SourceLineAnnotation srcLine = bug.getPrimarySourceLineAnnotation();
Filter.java,String sourceFile = srcLine.getSourceFile();,if (srcLine != null ) String sourceFile = srcLine.getSourceFile();
FindCircularDependencies.java,cIt = loop.iterator();,if (loop != null ) cIt = loop.iterator();
TestingGround.java,formatter = NumberFormat.getIntegerInstance();,if (NumberFormat != null ) formatter = NumberFormat.getIntegerInstance();
AbstractBugCollection.java,Iterator<BugInstance> i = collection.iterator();,if (collection != null ) Iterator<BugInstance> i = collection.iterator();
AbstractBugReporter.java,Iterator<BugReporterObserver> i = observerList.iterator();,if (observerList != null ) Iterator<BugReporterObserver> i = observerList.iterator();
AddMessages.java,String bugType = bugTypeIter.next();,if (bugTypeIter != null ) String bugType = bugTypeIter.next();
BugInstance.java,Iterator<BugAnnotation> i = annotationList.iterator();,if (annotationList != null ) Iterator<BugAnnotation> i = annotationList.iterator();
CountBugs.java,total += i.next().intValue();,if (i != null ) total += i.next().intValue();
CountBugs.java,Iterator<Key> j = countMap.keySet().iterator();,if (countMap != null ) Iterator<Key> j = countMap.keySet().iterator();
FindBugs.java,Iterator<Long> timingsIt = detectorTimings.values().iterator();,if (detectorTimings != null ) Iterator<Long> timingsIt = detectorTimings.values().iterator();
FindBugs.java,total += timingsIt.next().longValue();,if (timingsIt != null ) total += timingsIt.next().longValue();
FindBugs.java,String detectorName = detector.getClass().getName();,if (detector != null ) String detectorName = detector.getClass().getName();
MergeResults.java,Iterator<BugInstance> i = origSet.iterator();,if (origSet != null ) Iterator<BugInstance> i = origSet.iterator();
PackageStats.java,Iterator<ClassStats> i = packageMembers.values().iterator();,if (packageMembers != null ) Iterator<ClassStats> i = packageMembers.values().iterator();
PluginLoader.java,Node bugCodeNode = (Node) j.next();,if (j != null ) Node bugCodeNode = (Node) j.next();
ProjectStats.java,Iterator<PackageStats> i = packageStatsMap.values().iterator();,if (packageStatsMap != null ) Iterator<PackageStats> i = packageStatsMap.values().iterator();
ProjectStats.java,Iterator<PackageStats> i = packageStatsMap.values().iterator();,if (packageStatsMap != null ) Iterator<PackageStats> i = packageStatsMap.values().iterator();
BetterCFGBuilder2.java,Iterator<CodeExceptionGen> i = exceptionHandlerList.iterator();,if (exceptionHandlerList != null ) Iterator<CodeExceptionGen> i = exceptionHandlerList.iterator();
ExceptionHandlerMap.java,int startOfRange = exceptionHandler.getStartPC().getPosition();,if (exceptionHandler != null ) int startOfRange = exceptionHandler.getStartPC().getPosition();
ExceptionHandlerMap.java,int endOfRange = exceptionHandler.getEndPC().getPosition();,if (exceptionHandler != null ) int endOfRange = exceptionHandler.getEndPC().getPosition();
ResourceValueAnalysisTestDriver.java,BasicBlock basicBlock = ii.next();,if (ii != null ) BasicBlock basicBlock = ii.next();
SourceFinder.java,Iterator<String> i = sourceBaseList.iterator();,if (sourceBaseList != null ) Iterator<String> i = sourceBaseList.iterator();
SourceFinder.java,Iterator<SourceRepository> i = repositoryList.iterator();,if (repositoryList != null ) Iterator<SourceRepository> i = repositoryList.iterator();
URLClassPath.java,Iterator<Entry> i = entryList.iterator();,if (entryList != null ) Iterator<Entry> i = entryList.iterator();
NullDerefAndRedundantComparisonFinder.java,Iterator<RedundantBranch> i = redundantBranchList.iterator();,if (redundantBranchList != null ) Iterator<RedundantBranch> i = redundantBranchList.iterator();
BadlyOverriddenAdapter.java,Iterator<BugInstance> it = badOverrideMap.values().iterator();,if (badOverrideMap != null ) Iterator<BugInstance> it = badOverrideMap.values().iterator();
BadlyOverriddenAdapter.java,BugInstance bi = it.next();,if (it != null ) BugInstance bi = it.next();
DroppedException.java,int handled = exp[i].getHandlerPC();,if (exp[i] != null ) int handled = exp[i].getHandlerPC();
DroppedException.java,int start = exp[i].getStartPC();,if (exp[i] != null ) int start = exp[i].getStartPC();
DroppedException.java,int end = exp[i].getEndPC();,if (exp[i] != null ) int end = exp[i].getEndPC();
DroppedException.java,int cause = exp[i].getCatchType();,if (exp[i] != null ) int cause = exp[i].getCatchType();
FindCircularDependencies.java,Iterator<String> lIt = loop.iterator();,if (loop != null ) Iterator<String> lIt = loop.iterator();
FindCircularDependencies.java,String loopCls = lIt.next();,if (lIt != null ) String loopCls = lIt.next();
FindCircularDependencies.java,Iterator<String> cIt = loop.iterator();,if (loop != null ) Iterator<String> cIt = loop.iterator();
FindCircularDependencies.java,String clsName = cIt.next();,if (cIt != null ) String clsName = cIt.next();
FindCircularDependencies.java,Iterator<String> dit = dependencies.iterator();,if (dependencies != null ) Iterator<String> dit = dependencies.iterator();
FindCircularDependencies.java,String depClass = dit.next();,if (dit != null ) String depClass = dit.next();
FindInconsistentSync2.java,Iterator<Method> i = publicReachableMethods.iterator();,if (publicReachableMethods != null ) Iterator<Method> i = publicReachableMethods.iterator();
FindMaskedFields.java,fieldName = fields[f].getName();,if (fields[f] != null ) fieldName = fields[f].getName();
FindMaskedFields.java,fields = superClasses[c].getFields();,if (superClasses[c] != null ) fields = superClasses[c].getFields();
FindUnsyncGet.java,String propName = (String) i.next();,if (i != null ) String propName = (String) i.next();
MultithreadedInstanceAccess.java,Iterator<JavaClass> it = getMtClasses().iterator();,if (getMtClasses() != null ) Iterator<JavaClass> it = getMtClasses().iterator();
MultithreadedInstanceAccess.java,JavaClass mtClass = it.next();,if (it != null ) JavaClass mtClass = it.next();
RedundantInterfaces.java,Iterator<String> it = redundantInfNames.iterator();,if (redundantInfNames != null ) Iterator<String> it = redundantInfNames.iterator();
RuntimeExceptionCapture.java,CaughtException caughtException = iterator.next();,if (iterator != null ) CaughtException caughtException = iterator.next();
SerializableIdiom.java,Iterator<BugInstance> i = fieldWarningList.iterator();,if (fieldWarningList != null ) Iterator<BugInstance> i = fieldWarningList.iterator();
UselessSubclassMethod.java,Method[] infMethods = interfaces[i].getMethods();,if (interfaces[i] != null ) Method[] infMethods = interfaces[i].getMethods();
UselessSubclassMethod.java,Iterator<String> it = interfaceMethods.iterator();,if (interfaceMethods != null ) Iterator<String> it = interfaceMethods.iterator();
UselessSubclassMethod.java,String infMethodDetail = it.next();,if (it != null ) String infMethodDetail = it.next();
BugCodeMatcher.java,Iterator<String> i = bugCodeList.iterator();,if (bugCodeList != null ) Iterator<String> i = bugCodeList.iterator();
AbstractGraph.java,Iterator<VertexType> i = vertexList.iterator();,if (vertexList != null ) Iterator<VertexType> i = vertexList.iterator();
Transpose.java,VertexType v = (VertexType) i.next();,if (i != null ) VertexType v = (VertexType) i.next();
ConfigureDetectorsDialog.java,Iterator<BugPattern> it = patterns.iterator();,if (patterns != null ) Iterator<BugPattern> it = patterns.iterator();
ConfigureDetectorsDialog.java,BugPattern pattern = it.next();,if (it != null ) BugPattern pattern = it.next();
ConvertToARFF.java,final Element element = (Element) i.next();,if (i != null ) final Element element = (Element) i.next();
WarningPropertySet.java,PriorityAdjustment adj = i.next().getPriorityAdjustment();,if (i != null ) PriorityAdjustment adj = i.next().getPriorityAdjustment();
Dom4JXMLOutput.java,Iterator<String> i = listValues.iterator();,if (listValues != null ) Iterator<String> i = listValues.iterator();
FindNullDeref.java,InstructionHandle ins = target.getFirstInstruction();,if (target != null ) InstructionHandle ins = target.getFirstInstruction();
FindNullDeref.java,Instruction i = ins.getInstruction();,if (ins != null ) Instruction i = ins.getInstruction();
FindNullDeref.java,ins = ins.getNext();,if (ins != null ) ins = ins.getNext();
FindNullDeref.java,InstructionHandle ins = target.getFirstInstruction();,if (target != null ) InstructionHandle ins = target.getFirstInstruction();
FindNullDeref.java,ins = ins.getNext();,if (ins != null ) ins = ins.getNext();
BetterCFGBuilder2.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
BetterCFGBuilder2.java,short opcode = ins.getOpcode();,if (ins != null ) short opcode = ins.getOpcode();
BetterCFGBuilder2.java,short opcode = ins.getOpcode();,if (ins != null ) short opcode = ins.getOpcode();
FindbugsPropertyPage.java,String category = (String) i.next();,if (i != null ) String category = (String) i.next();
FindbugsPropertyPage.java,Collection patterns = factory.getReportedBugPatterns();,if (factory != null ) Collection patterns = factory.getReportedBugPatterns();
FindbugsPropertyPage.java,BugPattern pattern = (BugPattern) iter.next();,if (iter != null ) BugPattern pattern = (BugPattern) iter.next();
UselessSubclassMethod.java,superclassName = classContext.getJavaClass().getSuperclassName();,if (classContext != null ) superclassName = classContext.getJavaClass().getSuperclassName();
BugCollection.java,Iterator<BugInstance> i = collection.iterator();,if (collection != null ) Iterator<BugInstance> i = collection.iterator();
BugCollection.java,Document document = docFactory.createDocument();,if (docFactory != null ) Document document = docFactory.createDocument();
Reporter.java,int filesNumber = findBugsProject.getFileCount();,if (findBugsProject != null ) int filesNumber = findBugsProject.getFileCount();
FindNullDeref.java,possiblyNullParamDatabase = analysisContext.getPossiblyNullParamDatabase();,if (analysisContext != null ) possiblyNullParamDatabase = analysisContext.getPossiblyNullParamDatabase();
FindBugsFrame.java,UserPreferences prefs = UserPreferences.getUserPreferences();,if (UserPreferences != null ) UserPreferences prefs = UserPreferences.getUserPreferences();
InvalidJUnitTest.java,Method[] methods = jClass.getMethods();,if (jClass != null ) Method[] methods = jClass.getMethods();
ClassContext.java,int codeLength = method.getCode().getLength();,if (method != null ) int codeLength = method.getCode().getLength();
ClassContext.java,Runtime runtime = Runtime.getRuntime();,if (Runtime != null ) Runtime runtime = Runtime.getRuntime();
InvalidJUnitTest.java,JavaClass[] superClasses = classContext.getJavaClass().getSuperClasses();,if (classContext != null ) JavaClass[] superClasses = classContext.getJavaClass().getSuperClasses();
InvalidJUnitTest.java,methodName = obj.getName();,if (obj != null ) methodName = obj.getName();
DetectorFactoryCollection.java,URL url = file.toURL();,if (file != null ) URL url = file.toURL();
PruneUnconditionalExceptionThrowerEdges.java,ReturnPath pathValue = pathDataflow.getStartFact(calledCFG.getExit());,if (pathDataflow != null ) ReturnPath pathValue = pathDataflow.getStartFact(calledCFG.getExit());
FindBugs.java,this.zipInputStream = new ZipInputStream(url.openStream());,if (ZipInputStream(url != null ) this.zipInputStream = new ZipInputStream(url.openStream());
MineBugHistory.java,SequenceIntervalCollection whenActive = bugInstance.getActiveIntervalCollection();,if (bugInstance != null ) SequenceIntervalCollection whenActive = bugInstance.getActiveIntervalCollection();
SequenceIntervalCollection.java,int max = intervalList.size();,if (intervalList != null ) int max = intervalList.size();
SequenceIntervalCollection.java,int origSize = intervalList.size();,if (intervalList != null ) int origSize = intervalList.size();
UpdateBugCollection.java,this.comparator = VersionInsensitiveBugComparator.instance();,if (VersionInsensitiveBugComparator != null ) this.comparator = VersionInsensitiveBugComparator.instance();
UpdateBugCollection.java,resultCollection = newCollection.createEmptyCollectionWithMetadata();,if (newCollection != null ) resultCollection = newCollection.createEmptyCollectionWithMetadata();
UpdateBugCollection.java,AppVersion origCollectionVersion = new AppVersion(origCollection.getSequenceNumber());,if (AppVersion(origCollection != null ) AppVersion origCollectionVersion = new AppVersion(origCollection.getSequenceNumber());
UpdateBugCollection.java,long lastSequence = origCollection.getSequenceNumber();,if (origCollection != null ) long lastSequence = origCollection.getSequenceNumber();
UpdateBugCollection.java,origWarning = (BugInstance) origWarning.clone(); // make a fresh copy,if (copy != null ) origWarning = (BugInstance) origWarning.clone(); // make a fresh copy
UpdateBugCollection.java,warningToAdd = (BugInstance) matchingNewWarning.clone();,if (matchingNewWarning != null ) warningToAdd = (BugInstance) matchingNewWarning.clone();
UpdateBugCollection.java,SequenceIntervalCollection whenActive = origWarning.getActiveIntervalCollection();,if (origWarning != null ) SequenceIntervalCollection whenActive = origWarning.getActiveIntervalCollection();
UpdateBugCollection.java,warningToAdd = (BugInstance) origWarning.clone();,if (origWarning != null ) warningToAdd = (BugInstance) origWarning.clone();
UpdateBugCollection.java,BugInstance warningToAdd = (BugInstance) newWarning.clone();,if (newWarning != null ) BugInstance warningToAdd = (BugInstance) newWarning.clone();
UpdateBugCollection.java,BugProperty prop = propIter.next();,if (propIter != null ) BugProperty prop = propIter.next();
UpdateBugCollection.java,BugInstance correspondingBugInstance = tailSet.first();,if (tailSet != null ) BugInstance correspondingBugInstance = tailSet.first();
UpdateBugCollection.java,comparator = VersionInsensitiveBugComparator.instance();,if (VersionInsensitiveBugComparator != null ) comparator = VersionInsensitiveBugComparator.instance();
IsNullValueTest.java,IsNullValue nullValue = IsNullValue.nullValue();,if (IsNullValue != null ) IsNullValue nullValue = IsNullValue.nullValue();
FindBugs.java,BugReporter origBugReporter = bugReporter.getRealBugReporter();,if (bugReporter != null ) BugReporter origBugReporter = bugReporter.getRealBugReporter();
IsNullValueTest.java,IsNullValue noKaboom = IsNullValue.noKaboomNonNullValue();,if (IsNullValue != null ) IsNullValue noKaboom = IsNullValue.noKaboomNonNullValue();
SloppyBugComparator.java,String lhsClassName = rewriteClassName(lhs.getClassName());,if (rewriteClassName(lhs != null ) String lhsClassName = rewriteClassName(lhs.getClassName());
SloppyBugComparator.java,String rhsClassName = rewriteClassName(rhs.getClassName());,if (rewriteClassName(rhs != null ) String rhsClassName = rewriteClassName(rhs.getClassName());
SloppyBugComparator.java,"cmp = compareAllowingNull(lhs.getPrimaryMethod(), rhs.getPrimaryMethod());","if (rhs != null ) cmp = compareAllowingNull(lhs.getPrimaryMethod(), rhs.getPrimaryMethod());"
SloppyBugComparator.java,"cmp = compareAllowingNull(lhs.getPrimaryField(), rhs.getPrimaryField());","if (rhs != null ) cmp = compareAllowingNull(lhs.getPrimaryField(), rhs.getPrimaryField());"
BugHistory.java,comparator = VersionInsensitiveBugComparator.instance();,if (VersionInsensitiveBugComparator != null ) comparator = VersionInsensitiveBugComparator.instance();
SloppyBugComparator.java,"cmp = compareAllowingNull(lhs.getPrimaryClass(), rhs.getPrimaryClass());","if (rhs != null ) cmp = compareAllowingNull(lhs.getPrimaryClass(), rhs.getPrimaryClass());"
FuzzyBugComparator.java,"ClassHash lhsClassHash = getClassHash(lhsCollection, lhsMethod.getClassName());","if (lhsMethod != null ) ClassHash lhsClassHash = getClassHash(lhsCollection, lhsMethod.getClassName());"
FuzzyBugComparator.java,"ClassHash rhsClassHash = getClassHash(rhsCollection, rhsMethod.getClassName());","if (rhsMethod != null ) ClassHash rhsClassHash = getClassHash(rhsCollection, rhsMethod.getClassName());"
FuzzyBugComparator.java,MethodHash lhsHash = lhsClassHash.getMethodHash(lhsMethod.toXMethod());,if (lhsClassHash != null ) MethodHash lhsHash = lhsClassHash.getMethodHash(lhsMethod.toXMethod());
FuzzyBugComparator.java,MethodHash rhsHash = rhsClassHash.getMethodHash(rhsMethod.toXMethod());,if (rhsClassHash != null ) MethodHash rhsHash = rhsClassHash.getMethodHash(rhsMethod.toXMethod());
DuplicateBranches.java,Instruction lastFinishIns = thenFinishBlock.getLastInstruction().getInstruction();,if (thenFinishBlock != null ) Instruction lastFinishIns = thenFinishBlock.getLastInstruction().getInstruction();
DuplicateBranches.java,int thenFinishPos = thenFinishBlock.getLastInstruction().getPosition();,if (thenFinishBlock != null ) int thenFinishPos = thenFinishBlock.getLastInstruction().getPosition();
DuplicateBranches.java,Edge e = ie.next();,if (ie != null ) Edge e = ie.next();
DuplicateBranches.java,InstructionHandle firstInsH = e.getTarget().getFirstInstruction();,if (e != null ) InstructionHandle firstInsH = e.getTarget().getFirstInstruction();
DuplicateBranches.java,int targetPos = firstInsH.getPosition();,if (firstInsH != null ) int targetPos = firstInsH.getPosition();
DuplicateBranches.java,Edge e = ie.next();,if (ie != null ) Edge e = ie.next();
DuplicateBranches.java,int targetPos = target.getFirstInstruction().getPosition();,if (target != null ) int targetPos = target.getFirstInstruction().getPosition();
FuzzyBugComparator.java,String lhsCode = getCode(a.getType());,if (getCode(a != null ) String lhsCode = getCode(a.getType());
FuzzyBugComparator.java,String rhsCode = getCode(b.getType());,if (getCode(b != null ) String rhsCode = getCode(b.getType());
FuzzyBugComparator.java,Iterator<BugAnnotation> lhsIter = new FilteringBugAnnotationIterator(a.annotationIterator());,if (FilteringBugAnnotationIterator(a != null ) Iterator<BugAnnotation> lhsIter = new FilteringBugAnnotationIterator(a.annotationIterator());
FuzzyBugComparator.java,Iterator<BugAnnotation> rhsIter = new FilteringBugAnnotationIterator(b.annotationIterator());,if (FilteringBugAnnotationIterator(b != null ) Iterator<BugAnnotation> rhsIter = new FilteringBugAnnotationIterator(b.annotationIterator());
FuzzyBugComparator.java,BugAnnotation lhs = lhsIter.next();,if (lhsIter != null ) BugAnnotation lhs = lhsIter.next();
FuzzyBugComparator.java,BugAnnotation rhs = rhsIter.next();,if (rhsIter != null ) BugAnnotation rhs = rhsIter.next();
FindOpenStream.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
LoadOfKnownNullValue.java,ConstantPoolGen cpg = classContext.getConstantPoolGen();,if (classContext != null ) ConstantPoolGen cpg = classContext.getConstantPoolGen();
FuzzyBugComparator.java,"ClassHash lhsClassHash = getClassHash(lhsCollection, lhsMethod.getClassName());","if (lhsMethod != null ) ClassHash lhsClassHash = getClassHash(lhsCollection, lhsMethod.getClassName());"
FuzzyBugComparator.java,"ClassHash rhsClassHash = getClassHash(rhsCollection, rhsMethod.getClassName());","if (rhsMethod != null ) ClassHash rhsClassHash = getClassHash(rhsCollection, rhsMethod.getClassName());"
FuzzyBugComparator.java,MethodHash lhsHash = lhsClassHash.getMethodHash(lhsMethod.toXMethod());,if (lhsClassHash != null ) MethodHash lhsHash = lhsClassHash.getMethodHash(lhsMethod.toXMethod());
FuzzyBugComparator.java,MethodHash rhsHash = rhsClassHash.getMethodHash(rhsMethod.toXMethod());,if (rhsClassHash != null ) MethodHash rhsHash = rhsClassHash.getMethodHash(rhsMethod.toXMethod());
UselessSubclassMethod.java,Type[] subArgs = Type.getArgumentTypes(subclassMethod.getSignature());,if (Type != null ) Type[] subArgs = Type.getArgumentTypes(subclassMethod.getSignature());
UselessSubclassMethod.java,Attribute[] atts = getMethod().getAttributes();,if (getMethod() != null ) Attribute[] atts = getMethod().getAttributes();
FindBugsFrame.java,File selectedFile = chooser.getSelectedFile();,if (chooser != null ) File selectedFile = chooser.getSelectedFile();
BugHistory.java,comparator = VersionInsensitiveBugComparator.instance();,if (VersionInsensitiveBugComparator != null ) comparator = VersionInsensitiveBugComparator.instance();
BugHistory.java,SortedBugCollection result = bugHistory.performSetOperation(commandLine.getSetOp());,if (bugHistory != null ) SortedBugCollection result = bugHistory.performSetOperation(commandLine.getSetOp());
CountBugs2.java,BugPattern pattern = warning.getBugPattern();,if (warning != null ) BugPattern pattern = warning.getBugPattern();
DismantleBytecode.java,classConstantOperand = getStringFromIndex(clazz.getNameIndex()).intern();,if (getStringFromIndex(clazz != null ) classConstantOperand = getStringFromIndex(clazz.getNameIndex()).intern();
DismantleBytecode.java,classConstantOperand = getStringFromIndex(clazz.getNameIndex()).intern();,if (getStringFromIndex(clazz != null ) classConstantOperand = getStringFromIndex(clazz.getNameIndex()).intern();
DismantleBytecode.java,sigConstantOperand = getStringFromIndex(sig.getSignatureIndex()).intern();,if (getStringFromIndex(sig != null ) sigConstantOperand = getStringFromIndex(sig.getSignatureIndex()).intern();
UnionResults.java,SortedBugCollection result = unionResults.execute();,if (unionResults != null ) SortedBugCollection result = unionResults.execute();
UpdateBugCollection.java,long lastTimestamp = collectionToUpdate.getSequenceNumber();,if (collectionToUpdate != null ) long lastTimestamp = collectionToUpdate.getSequenceNumber();
UpdateBugCollection.java,SequenceIntervalCollection updatedActiveCollection = origInstance.getActiveIntervalCollection();,if (origInstance != null ) SequenceIntervalCollection updatedActiveCollection = origInstance.getActiveIntervalCollection();
UpdateBugCollection.java,ClassAnnotation primaryClass = origInstance.getPrimaryClass();,if (origInstance != null ) ClassAnnotation primaryClass = origInstance.getPrimaryClass();
UpdateBugCollection.java,SortedBugCollection result = newCollection.duplicate();,if (newCollection != null ) SortedBugCollection result = newCollection.duplicate();
SAXBugCollectionHandler.java,tsval = System.currentTimeMillis();,if (System != null ) tsval = System.currentTimeMillis();
UpdateBugCollection.java,long lastTimestamp = collectionToUpdate.getTimestamp();,if (collectionToUpdate != null ) long lastTimestamp = collectionToUpdate.getTimestamp();
UpdateBugCollection.java,TimestampIntervalCollection updatedActiveCollection = origInstance.getActiveIntervalCollection();,if (origInstance != null ) TimestampIntervalCollection updatedActiveCollection = origInstance.getActiveIntervalCollection();
BugHistory.java,comparator = VersionInsensitiveBugComparator.instance();,if (VersionInsensitiveBugComparator != null ) comparator = VersionInsensitiveBugComparator.instance();
UpdateBugCollection.java,long currentTimestamp = newCollection.getTimestamp();,if (newCollection != null ) long currentTimestamp = newCollection.getTimestamp();
UpdateBugCollection.java,TreeSet<BugInstance> set = new TreeSet<BugInstance>(VersionInsensitiveBugComparator.instance());,if (TreeSet<BugInstance>(VersionInsensitiveBugComparator != null ) TreeSet<BugInstance> set = new TreeSet<BugInstance>(VersionInsensitiveBugComparator.instance());
SortedBugCollection.java,timestamp = System.currentTimeMillis();,if (System != null ) timestamp = System.currentTimeMillis();
ClassHash.java,int nbytes = buf.remaining();,if (buf != null ) int nbytes = buf.remaining();
FindBugsFrame.java,minEffortItem = new javax.swing.JMenuItem();,if (javax != null ) minEffortItem = new javax.swing.JMenuItem();
FindBugsFrame.java,normalEffortItem = new javax.swing.JMenuItem();,if (javax != null ) normalEffortItem = new javax.swing.JMenuItem();
FindBugsFrame.java,maxEffortItem = new javax.swing.JMenuItem();,if (javax != null ) maxEffortItem = new javax.swing.JMenuItem();
FuzzyBugComparator.java,"ClassHash lhsHash = getClassHash(lhsCollection, lhsClass.getClassName());","if (lhsClass != null ) ClassHash lhsHash = getClassHash(lhsCollection, lhsClass.getClassName());"
FuzzyBugComparator.java,"ClassHash rhsHash = getClassHash(rhsCollection, rhsClass.getClassName());","if (rhsClass != null ) ClassHash rhsHash = getClassHash(rhsCollection, rhsClass.getClassName());"
ClassContext.java,byte[] instructionList = code.getCode();,if (code != null ) byte[] instructionList = code.getCode();
MergeResults.java,SourceLineAnnotation srcLine = bugInstance.getPrimarySourceLineAnnotation();,if (bugInstance != null ) SourceLineAnnotation srcLine = bugInstance.getPrimarySourceLineAnnotation();
MergeResults.java,SortedBugCollection result = mergeResults.getNewCollection();,if (mergeResults != null ) SortedBugCollection result = mergeResults.getNewCollection();
BugHistory.java,TreeSet<BugInstance> result = new TreeSet<BugInstance>(VersionInsensitiveBugComparator.instance());,if (TreeSet<BugInstance>(VersionInsensitiveBugComparator != null ) TreeSet<BugInstance> result = new TreeSet<BugInstance>(VersionInsensitiveBugComparator.instance());
FuzzyBugComparator.java,ClassHash lhsHash = bugCollection.getClassHash(lhsClass.getClassName());,if (bugCollection != null ) ClassHash lhsHash = bugCollection.getClassHash(lhsClass.getClassName());
FuzzyBugComparator.java,ClassHash rhsHash = bugCollection.getClassHash(rhsClass.getClassName());,if (bugCollection != null ) ClassHash rhsHash = bugCollection.getClassHash(rhsClass.getClassName());
FuzzyBugComparator.java,ClassHash lhsClassHash = bugCollection.getClassHash(lhsMethod.getClassName());,if (bugCollection != null ) ClassHash lhsClassHash = bugCollection.getClassHash(lhsMethod.getClassName());
FuzzyBugComparator.java,ClassHash rhsClassHash = bugCollection.getClassHash(rhsMethod.getClassName());,if (bugCollection != null ) ClassHash rhsClassHash = bugCollection.getClassHash(rhsMethod.getClassName());
FuzzyBugComparator.java,ClassHash aHash = bugCollection.getClassHash(aClass.getClassName());,if (bugCollection != null ) ClassHash aHash = bugCollection.getClassHash(aClass.getClassName());
FuzzyBugComparator.java,ClassHash bHash = bugCollection.getClassHash(bClass.getClassName());,if (bugCollection != null ) ClassHash bHash = bugCollection.getClassHash(bClass.getClassName());
FuzzyBugComparator.java,ClassHash aClassHash = bugCollection.getClassHash(aMethod.getClassName());,if (bugCollection != null ) ClassHash aClassHash = bugCollection.getClassHash(aMethod.getClassName());
FuzzyBugComparator.java,ClassHash bClassHash = bugCollection.getClassHash(bMethod.getClassName());,if (bugCollection != null ) ClassHash bClassHash = bugCollection.getClassHash(bMethod.getClassName());
FuzzyBugComparator.java,MethodHash aHash = aClassHash.getMethodHash(aMethod.toXMethod());,if (aClassHash != null ) MethodHash aHash = aClassHash.getMethodHash(aMethod.toXMethod());
FuzzyBugComparator.java,MethodHash bHash = bClassHash.getMethodHash(bMethod.toXMethod());,if (bClassHash != null ) MethodHash bHash = bClassHash.getMethodHash(bMethod.toXMethod());
ClassContext.java,classHash = new ClassHash(jclass).computeHash();,if (ClassHash(jclass) != null ) classHash = new ClassHash(jclass).computeHash();
ClassHash.java,hash = digest.digest();,if (digest != null ) hash = digest.digest();
FindBugs.java,projectFile = new File(projectFile).getAbsolutePath();,if (File(projectFile) != null ) projectFile = new File(projectFile).getAbsolutePath();
FindRefComparison.java,boolean relaxed = FindBugsAnalysisProperties.isRelaxedMode();,if (FindBugsAnalysisProperties != null ) boolean relaxed = FindBugsAnalysisProperties.isRelaxedMode();
WarningPropertySet.java,boolean relaxedReporting = FindBugsAnalysisProperties.isRelaxedMode();,if (FindBugsAnalysisProperties != null ) boolean relaxedReporting = FindBugsAnalysisProperties.isRelaxedMode();
InfiniteRecursiveLoop2.java,report = entryPostDominators.get(basicBlock.getId());,if (entryPostDominators != null ) report = entryPostDominators.get(basicBlock.getId());
InfiniteRecursiveLoop2.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
InfiniteRecursiveLoop2.java,String sourceFile = javaClass.getSourceFileName();,if (javaClass != null ) String sourceFile = javaClass.getSourceFileName();
MultithreadedInstanceAccess.java,Iterator<JavaClass> it = mtClasses.iterator();,if (mtClasses != null ) Iterator<JavaClass> it = mtClasses.iterator();
AnalysisLocal.java,AnalysisContext t = AnalysisContext.currentAnalysisContext();,if (AnalysisContext != null ) AnalysisContext t = AnalysisContext.currentAnalysisContext();
IsNullValueFrameModelingVisitor.java,pushValue = IsNullValue.nullOnSimplePathValue();,if (IsNullValue != null ) pushValue = IsNullValue.nullOnSimplePathValue();
IsNullValue.java,int andFlags = a.getFlags() & b.getFlags(); // FIXME: union appropriate for all flags?,if (flags? != null ) int andFlags = a.getFlags() & b.getFlags(); // FIXME: union appropriate for all flags?
IsNullValue.java,int orFlags = a.getFlags() | b.getFlags(); // FIXME: union appropriate for all flags?,if (flags? != null ) int orFlags = a.getFlags() | b.getFlags(); // FIXME: union appropriate for all flags?
FindNullDeref.java,NonNullParamPropertyDatabase database = AnalysisContext.currentAnalysisContext().getUnconditionalDerefParamDatabase();,if (AnalysisContext != null ) NonNullParamPropertyDatabase database = AnalysisContext.currentAnalysisContext().getUnconditionalDerefParamDatabase();
FindNullDeref.java,NonNullParamProperty property = database.getProperty(targetMethod.toXMethod());,if (database != null ) NonNullParamProperty property = database.getProperty(targetMethod.toXMethod());
FindNullDeref.java,final NonNullParamPropertyDatabase nonNullParamDatabase = AnalysisContext.currentAnalysisContext().getNonNullParamDatabase();,if (AnalysisContext != null ) final NonNullParamPropertyDatabase nonNullParamDatabase = AnalysisContext.currentAnalysisContext().getNonNullParamDatabase();
FindNullDeref.java,final NonNullParamPropertyDatabase possiblyNullParamDatabase = AnalysisContext.currentAnalysisContext().getPossiblyNullParamDatabase();,if (AnalysisContext != null ) final NonNullParamPropertyDatabase possiblyNullParamDatabase = AnalysisContext.currentAnalysisContext().getPossiblyNullParamDatabase();
IsNullValue.java,int combinedFlags = a.getFlags() & b.getFlags(); // FIXME: union appropriate for all flags?,if (flags? != null ) int combinedFlags = a.getFlags() & b.getFlags(); // FIXME: union appropriate for all flags?
TrainNullReturnValues.java,Method[] methodList = classContext.getJavaClass().getMethods();,if (classContext != null ) Method[] methodList = classContext.getJavaClass().getMethods();
TrainNullReturnValues.java,String methodSig = method.getSignature();,if (method != null ) String methodSig = method.getSignature();
TrainNullReturnValues.java,BasicBlock exit = cfg.getExit();,if (cfg != null ) BasicBlock exit = cfg.getExit();
TrainNullReturnValues.java,BasicBlock source = edge.getSource();,if (edge != null ) BasicBlock source = edge.getSource();
TrainNullReturnValues.java,InstructionHandle last = source.getLastInstruction();,if (source != null ) InstructionHandle last = source.getLastInstruction();
TrainNullReturnValues.java,Instruction ins = last.getInstruction();,if (last != null ) Instruction ins = last.getInstruction();
TrainNullReturnValues.java,IsNullValue tos = frame.getTopValue();,if (frame != null ) IsNullValue tos = frame.getTopValue();
FindNullDeref.java,NonNullParamPropertyDatabase database = unconditionalDerefDatabase.get();,if (unconditionalDerefDatabase != null ) NonNullParamPropertyDatabase database = unconditionalDerefDatabase.get();
TrainUnconditionalDerefParams.java,Method[] methodList = classContext.getJavaClass().getMethods();,if (classContext != null ) Method[] methodList = classContext.getJavaClass().getMethods();
TrainUnconditionalDerefParams.java,UnconditionalDerefSet unconditionalDerefSet = dataflow.getResultFact(cfg.getEntry());,if (dataflow != null ) UnconditionalDerefSet unconditionalDerefSet = dataflow.getResultFact(cfg.getEntry());
IsNullValue.java,int combinedFlags = a.getFlags() | b.getFlags(); // FIXME: union appropriate for all flags?,if (flags? != null ) int combinedFlags = a.getFlags() | b.getFlags(); // FIXME: union appropriate for all flags?
IsNullValueAnalysis.java,int numLocals = methodGen.getMaxLocals();,if (methodGen != null ) int numLocals = methodGen.getMaxLocals();
IsNullValueAnalysis.java,boolean instanceMethod = !methodGen.isStatic();,if (!methodGen != null ) boolean instanceMethod = !methodGen.isStatic();
IsNullValueFrameModelingVisitor.java,XMethod xmethod = javaClassAndMethod.toXMethod();,if (javaClassAndMethod != null ) XMethod xmethod = javaClassAndMethod.toXMethod();
ClassContext.java,MayReturnNullPropertyDatabase mayReturnNullDatabase = analysisContext.getMayReturnNullDatabase();,if (analysisContext != null ) MayReturnNullPropertyDatabase mayReturnNullDatabase = analysisContext.getMayReturnNullDatabase();
IsNullValueFrameModelingVisitor.java,pushValue = IsNullValue.nullOnSimplePathValue().toMayReturnNullValue();,if (IsNullValue != null ) pushValue = IsNullValue.nullOnSimplePathValue().toMayReturnNullValue();
Hierarchy.java,int accessFlags = xmethod.getAccessFlags();,if (xmethod != null ) int accessFlags = xmethod.getAccessFlags();
NullDerefAndRedundantComparisonFinder.java,boolean redundantNullCheck = top.isChecked();,if (top != null ) boolean redundantNullCheck = top.isChecked();
NullDerefAndRedundantComparisonFinder.java,boolean checkedValue = top.isChecked() || topNext.isChecked();,if (topNext != null ) boolean checkedValue = top.isChecked() || topNext.isChecked();
AnnotationVisitor.java,int numAnnotations = bytes.readUnsignedShort();,if (bytes != null ) int numAnnotations = bytes.readUnsignedShort();
AnnotationVisitor.java,int annotationNameIndex = bytes.readUnsignedShort();,if (bytes != null ) int annotationNameIndex = bytes.readUnsignedShort();
AnnotationVisitor.java,int numPairs = bytes.readUnsignedShort();,if (bytes != null ) int numPairs = bytes.readUnsignedShort();
AnnotationVisitor.java,int memberNameIndex = bytes.readUnsignedShort();,if (bytes != null ) int memberNameIndex = bytes.readUnsignedShort();
AnnotationVisitor.java,int numAnnotations = bytes.readUnsignedShort();,if (bytes != null ) int numAnnotations = bytes.readUnsignedShort();
AnnotationVisitor.java,int annotationNameIndex = bytes.readUnsignedShort();,if (bytes != null ) int annotationNameIndex = bytes.readUnsignedShort();
AnnotationVisitor.java,int numPairs = bytes.readUnsignedShort();,if (bytes != null ) int numPairs = bytes.readUnsignedShort();
AnnotationVisitor.java,int memberNameIndex = bytes.readUnsignedShort();,if (bytes != null ) int memberNameIndex = bytes.readUnsignedShort();
AnnotationVisitor.java,char tag = (char) bytes.readUnsignedByte();,if (bytes != null ) char tag = (char) bytes.readUnsignedByte();
AnnotationVisitor.java,int sz = bytes.readUnsignedShort();,if (bytes != null ) int sz = bytes.readUnsignedShort();
FindBugs.java,Iterator<Long> timingsIt = detectorTimings.values().iterator();,if (detectorTimings != null ) Iterator<Long> timingsIt = detectorTimings.values().iterator();
FindBugs.java,total += timingsIt.next().longValue();,if (timingsIt != null ) total += timingsIt.next().longValue();
FindBugs.java,String detectorName = entry.getKey();,if (entry != null ) String detectorName = entry.getKey();
FindBugs.java,long detectorTime = entry.getValue().longValue();,if (entry != null ) long detectorTime = entry.getValue().longValue();
FindBugs.java,Iterator<DetectorFactory> i = DetectorFactoryCollection.instance().factoryIterator();,if (DetectorFactoryCollection != null ) Iterator<DetectorFactory> i = DetectorFactoryCollection.instance().factoryIterator();
ExecutionPlan.java,HashSet<DetectorFactory> unassignedSet = new HashSet<DetectorFactory>(factoryMap.values());,if (HashSet<DetectorFactory>(factoryMap != null ) HashSet<DetectorFactory> unassignedSet = new HashSet<DetectorFactory>(factoryMap.values());
ExecutionPlan.java,HashSet<DetectorFactory> availableSet = new HashSet<DetectorFactory>(factoryMap.values());,if (HashSet<DetectorFactory>(factoryMap != null ) HashSet<DetectorFactory> availableSet = new HashSet<DetectorFactory>(factoryMap.values());
PluginLoader.java,"String earlierClass = lookupDetectorClass(plugin, earlierAttr.getValue());","if (earlierAttr != null ) String earlierClass = lookupDetectorClass(plugin, earlierAttr.getValue());"
PluginLoader.java,"String laterClass = lookupDetectorClass(plugin, laterAttr.getValue());","if (laterAttr != null ) String laterClass = lookupDetectorClass(plugin, laterAttr.getValue());"
PluginLoader.java,"String detectorClass = lookupDetectorClass(plugin, detectorAttr.getValue());","if (detectorAttr != null ) String detectorClass = lookupDetectorClass(plugin, detectorAttr.getValue());"
ReportingDetectorFactorySelector.java,return plugin == factory.getPlugin() && factory.isReportingDetector();,if (factory != null ) return plugin == factory.getPlugin() && factory.isReportingDetector();
ExecutionPlan.java,AnalysisPass finalPass = passList.getLast();,if (passList != null ) AnalysisPass finalPass = passList.getLast();
HierarchyWalkDirection.java,AnalysisContext analysisContext = AnalysisContext.currentAnalysisContext();,if (AnalysisContext != null ) AnalysisContext analysisContext = AnalysisContext.currentAnalysisContext();
HierarchyWalkDirection.java,JavaClass[] superTypeSet = source.getSuperClasses();,if (source != null ) JavaClass[] superTypeSet = source.getSuperClasses();
MethodPropertyDatabase.java,line = line.trim();,if (line != null ) line = line.trim();
BetterTypeAnalysis.java,CodeExceptionGen exceptionGen = edge.getTarget().getExceptionGen();,if (edge != null ) CodeExceptionGen exceptionGen = edge.getTarget().getExceptionGen();
BetterTypeFrameModelingVisitor.java,Type arrayType = frame.popValue(); // arrayref,if (arrayref != null ) Type arrayType = frame.popValue(); // arrayref
TrainUnconditionalDerefParams.java,BitSet entryPostDominators = postDominators.getResultFact(cfg.getEntry());,if (postDominators != null ) BitSet entryPostDominators = postDominators.getResultFact(cfg.getEntry());
TrainUnconditionalDerefParams.java,InstructionHandle handle = basicBlock.getExceptionThrower();,if (basicBlock != null ) InstructionHandle handle = basicBlock.getExceptionThrower();
UnconditionalDerefAnalysis.java,ValueNumberFrame vnaFrameAtEntry = vnaDataflow.getStartFact(cfg.getEntry());,if (vnaDataflow != null ) ValueNumberFrame vnaFrameAtEntry = vnaDataflow.getStartFact(cfg.getEntry());
UnconditionalDerefAnalysis.java,MergeTree mergeTree = vnaDataflow.getAnalysis().getMergeTree();,if (vnaDataflow != null ) MergeTree mergeTree = vnaDataflow.getAnalysis().getMergeTree();
UnconditionalDerefAnalysis.java,ValueNumber paramValueNumber = entry.getKey();,if (entry != null ) ValueNumber paramValueNumber = entry.getKey();
UnconditionalDerefAnalysis.java,Integer param = entry.getValue();,if (entry != null ) Integer param = entry.getValue();
SourceLineAnnotation.java,LineNumberTable lineNumberTable = method.getLineNumberTable();,if (method != null ) LineNumberTable lineNumberTable = method.getLineNumberTable();
LoadOfKnownNullValue.java,Instruction ins = location.getHandle().getInstruction();,if (location != null ) Instruction ins = location.getHandle().getInstruction();
TrainUnconditionalDerefParams.java,UnconditionalDerefSet unconditionalDerefSet = dataflow.getResultFact(cfg.getEntry());,if (dataflow != null ) UnconditionalDerefSet unconditionalDerefSet = dataflow.getResultFact(cfg.getEntry());
DumbMethods.java,Object o = item.getConstant();,if (item != null ) Object o = item.getConstant();
TrainUnconditionalDerefParams.java,final ValueNumberAnalysis valueNumberAnalysis = classContext.getValueNumberDataflow(method).getAnalysis();,if (classContext != null ) final ValueNumberAnalysis valueNumberAnalysis = classContext.getValueNumberDataflow(method).getAnalysis();
UnconditionalDerefAnalysis.java,ValueNumberFrame vnaFrameAtEntry = vnaDataflow.getStartFact(cfg.getEntry());,if (vnaDataflow != null ) ValueNumberFrame vnaFrameAtEntry = vnaDataflow.getStartFact(cfg.getEntry());
MethodPropertyDatabase.java,XMethod sourceMethod = entry.getKey();,if (entry != null ) XMethod sourceMethod = entry.getKey();
MethodPropertyDatabase.java,Property sourceProperty = entry.getValue();,if (entry != null ) Property sourceProperty = entry.getValue();
MethodPropertyDatabase.java,AnalysisContext analysisContext = AnalysisContext.currentAnalysisContext();,if (AnalysisContext != null ) AnalysisContext analysisContext = AnalysisContext.currentAnalysisContext();
MethodPropertyDatabase.java,JavaClass javaClass = analysisContext.lookupClass(method.getClassName());,if (analysisContext != null ) JavaClass javaClass = analysisContext.lookupClass(method.getClassName());
FindNullDeref.java,int numParams = calledMethod.getNumParams();,if (calledMethod != null ) int numParams = calledMethod.getNumParams();
FindNullDeref.java,String sourceFile = classContext.getJavaClass().getSourceFileName();,if (classContext != null ) String sourceFile = classContext.getJavaClass().getSourceFileName();
MethodPropertyDatabase.java,Subtypes subtypes = AnalysisContext.currentAnalysisContext().getSubtypes();,if (AnalysisContext != null ) Subtypes subtypes = AnalysisContext.currentAnalysisContext().getSubtypes();
HierarchyWalkDirection.java,AnalysisContext analysisContext = AnalysisContext.currentAnalysisContext();,if (AnalysisContext != null ) AnalysisContext analysisContext = AnalysisContext.currentAnalysisContext();
TrainUnconditionalDerefParams.java,BasicBlock entry = cfg.getEntry();,if (cfg != null ) BasicBlock entry = cfg.getEntry();
TrainUnconditionalDerefParams.java,InstructionHandle checkedHandle = successorBlock.getFirstInstruction();,if (successorBlock != null ) InstructionHandle checkedHandle = successorBlock.getFirstInstruction();
FindNullDeref.java,Iterator<BasicBlock> bbIter = invDataflow.getCFG().blockIterator();,if (invDataflow != null ) Iterator<BasicBlock> bbIter = invDataflow.getCFG().blockIterator();
FindNullDeref.java,BasicBlock basicBlock = bbIter.next();,if (bbIter != null ) BasicBlock basicBlock = bbIter.next();
FindNullDeref.java,InstructionHandle lastHandle = basicBlock.getLastInstruction();,if (basicBlock != null ) InstructionHandle lastHandle = basicBlock.getLastInstruction();
FindNullDeref.java,Instruction last = lastHandle.getInstruction();,if (lastHandle != null ) Instruction last = lastHandle.getInstruction();
FindNullDeref.java,Iterator<RedundantBranch> i = redundantBranchList.iterator();,if (redundantBranchList != null ) Iterator<RedundantBranch> i = redundantBranchList.iterator();
FindNullDeref.java,InstructionHandle exceptionThrowerHandle = basicBlock.getExceptionThrower();,if (basicBlock != null ) InstructionHandle exceptionThrowerHandle = basicBlock.getExceptionThrower();
FindNullDeref.java,Instruction exceptionThrower = exceptionThrowerHandle.getInstruction();,if (exceptionThrowerHandle != null ) Instruction exceptionThrower = exceptionThrowerHandle.getInstruction();
FindNullDeref.java,int consumed = exceptionThrower.consumeStack(classContext.getConstantPoolGen());,if (exceptionThrower != null ) int consumed = exceptionThrower.consumeStack(classContext.getConstantPoolGen());
FindNullDeref.java,int numSlots = frame.getNumSlots();,if (frame != null ) int numSlots = frame.getNumSlots();
FindNullDeref.java,boolean definitelySame = top.isDefinitelyNull() && topNext.isDefinitelyNull();,if (topNext != null ) boolean definitelySame = top.isDefinitelyNull() && topNext.isDefinitelyNull();
FindNullDeref.java,boolean checkedValue = top.isChecked() || topNext.isChecked();,if (topNext != null ) boolean checkedValue = top.isChecked() || topNext.isChecked();
FindNullDeref.java,IsNullValue top = frame.getTopValue();,if (frame != null ) IsNullValue top = frame.getTopValue();
FindNullDeref.java,short opcode = lastHandle.getInstruction().getOpcode();,if (lastHandle != null ) short opcode = lastHandle.getInstruction().getOpcode();
FindNullDeref.java,boolean definitelySame = top.isDefinitelyNull();,if (top != null ) boolean definitelySame = top.isDefinitelyNull();
FindNullDeref.java,boolean redundantNullCheck = top.isChecked();,if (top != null ) boolean redundantNullCheck = top.isChecked();
FindNullDeref.java,LineNumberTable table = method.getCode().getLineNumberTable();,if (method != null ) LineNumberTable table = method.getCode().getLineNumberTable();
IsNullValueAnalysis.java,paramValue = IsNullValue.nullOnSimplePathValue();,if (IsNullValue != null ) paramValue = IsNullValue.nullOnSimplePathValue();
IsNullValueAnalysis.java,paramValue = IsNullValue.nonReportingNotNullValue();,if (IsNullValue != null ) paramValue = IsNullValue.nonReportingNotNullValue();
DuplicateBranches.java,defaultPos = target.getFirstInstruction().getPosition();,if (target != null ) defaultPos = target.getFirstInstruction().getPosition();
DuplicateBranches.java,j = switchPos.size();,if (switchPos != null ) j = switchPos.size();
IsNullValueFrameModelingVisitor.java,pushValue = IsNullValue.nullOnSimplePathValue();,if (IsNullValue != null ) pushValue = IsNullValue.nullOnSimplePathValue();
DuplicateBranches.java,Edge e = iei.next();,if (iei != null ) Edge e = iei.next();
DuplicateBranches.java,int thenStartPos = thenBB.getFirstInstruction().getPosition();,if (thenBB != null ) int thenStartPos = thenBB.getFirstInstruction().getPosition();
DuplicateBranches.java,int elseStartPos = elseBB.getFirstInstruction().getPosition();,if (elseBB != null ) int elseStartPos = elseBB.getFirstInstruction().getPosition();
DuplicateBranches.java,Instruction lastFinishIns = thenFinishBlock.getLastInstruction().getInstruction();,if (thenFinishBlock != null ) Instruction lastFinishIns = thenFinishBlock.getLastInstruction().getInstruction();
DuplicateBranches.java,int thenFinishPos = thenFinishBlock.getLastInstruction().getPosition();,if (thenFinishBlock != null ) int thenFinishPos = thenFinishBlock.getLastInstruction().getPosition();
XMethodFactory.java,String className = classContext.getJavaClass().getClassName();,if (classContext != null ) String className = classContext.getJavaClass().getClassName();
MethodPropertyDatabase.java,XMethod sourceMethod = entry.getKey();,if (entry != null ) XMethod sourceMethod = entry.getKey();
MethodPropertyDatabase.java,Property sourceProperty = entry.getValue();,if (entry != null ) Property sourceProperty = entry.getValue();
MethodPropertyDatabase.java,String sourceClassName = sourceMethod.getClassName();,if (sourceMethod != null ) String sourceClassName = sourceMethod.getClassName();
MethodPropertyDatabase.java,AnalysisContext analysisContext = AnalysisContext.currentAnalysisContext();,if (AnalysisContext != null ) AnalysisContext analysisContext = AnalysisContext.currentAnalysisContext();
MethodPropertyDatabase.java,AnalysisContext analysisContext = AnalysisContext.currentAnalysisContext();,if (AnalysisContext != null ) AnalysisContext analysisContext = AnalysisContext.currentAnalysisContext();
MethodPropertyDatabase.java,JavaClass[] superTypeSet = source.getSuperClasses();,if (source != null ) JavaClass[] superTypeSet = source.getSuperClasses();
IsNullValue.java,boolean isException = a.isException() || b.isException();,if (b != null ) boolean isException = a.isException() || b.isException();
IsNullValue.java,resultValue = resultValue.toExceptionValue();,if (resultValue != null ) resultValue = resultValue.toExceptionValue();
AbstractField.java,cmp = className.compareTo(other.getClassName());,if (className != null ) cmp = className.compareTo(other.getClassName());
AbstractField.java,cmp = fieldName.compareTo(other.getName());,if (fieldName != null ) cmp = fieldName.compareTo(other.getName());
AbstractField.java,cmp = fieldName.compareTo(other.getFieldName());,if (fieldName != null ) cmp = fieldName.compareTo(other.getFieldName());
ResolveAllReferences.java,allClasses = subtypes.getAllClasses();,if (subtypes != null ) allClasses = subtypes.getAllClasses();
BugHistory.java,TreeSet<BugInstance> result = new TreeSet<BugInstance>(VersionInsensitiveBugComparator.instance());,if (TreeSet<BugInstance>(VersionInsensitiveBugComparator != null ) TreeSet<BugInstance> result = new TreeSet<BugInstance>(VersionInsensitiveBugComparator.instance());
FindBugsFrame.java,ClassLoader classLoader = this.getClass().getClassLoader();,if (this != null ) ClassLoader classLoader = this.getClass().getClassLoader();
FindBugsFrame.java,Object obj = node.getUserObject();,if (node != null ) Object obj = node.getUserObject();
FindBugsFrame.java,String groupType = groupNode.getGroupType();,if (groupNode != null ) String groupType = groupNode.getGroupType();
FindBugsFrame.java,priorityButtonGroup = new javax.swing.ButtonGroup();,if (javax != null ) priorityButtonGroup = new javax.swing.ButtonGroup();
FindBugsFrame.java,consoleSplitter = new javax.swing.JSplitPane();,if (javax != null ) consoleSplitter = new javax.swing.JSplitPane();
FindBugsFrame.java,viewPanel = new javax.swing.JPanel();,if (javax != null ) viewPanel = new javax.swing.JPanel();
FindBugsFrame.java,emptyPanel = new javax.swing.JPanel();,if (javax != null ) emptyPanel = new javax.swing.JPanel();
FindBugsFrame.java,reportPanel = new javax.swing.JPanel();,if (javax != null ) reportPanel = new javax.swing.JPanel();
FindBugsFrame.java,editProjectPanel = new javax.swing.JPanel();,if (javax != null ) editProjectPanel = new javax.swing.JPanel();
FindBugsFrame.java,jarFileLabel = new javax.swing.JLabel();,if (javax != null ) jarFileLabel = new javax.swing.JLabel();
FindBugsFrame.java,jarNameTextField = new javax.swing.JTextField();,if (javax != null ) jarNameTextField = new javax.swing.JTextField();
FindBugsFrame.java,addJarButton = new javax.swing.JButton();,if (javax != null ) addJarButton = new javax.swing.JButton();
FindBugsFrame.java,jarFileListLabel = new javax.swing.JLabel();,if (javax != null ) jarFileListLabel = new javax.swing.JLabel();
FindBugsFrame.java,sourceDirLabel = new javax.swing.JLabel();,if (javax != null ) sourceDirLabel = new javax.swing.JLabel();
FindBugsFrame.java,srcDirTextField = new javax.swing.JTextField();,if (javax != null ) srcDirTextField = new javax.swing.JTextField();
FindBugsFrame.java,addSourceDirButton = new javax.swing.JButton();,if (javax != null ) addSourceDirButton = new javax.swing.JButton();
FindBugsFrame.java,sourceDirListLabel = new javax.swing.JLabel();,if (javax != null ) sourceDirListLabel = new javax.swing.JLabel();
FindBugsFrame.java,removeJarButton = new javax.swing.JButton();,if (javax != null ) removeJarButton = new javax.swing.JButton();
FindBugsFrame.java,removeSrcDirButton = new javax.swing.JButton();,if (javax != null ) removeSrcDirButton = new javax.swing.JButton();
FindBugsFrame.java,browseJarButton = new javax.swing.JButton();,if (javax != null ) browseJarButton = new javax.swing.JButton();
FindBugsFrame.java,browseSrcDirButton = new javax.swing.JButton();,if (javax != null ) browseSrcDirButton = new javax.swing.JButton();
FindBugsFrame.java,editProjectLabel = new javax.swing.JLabel();,if (javax != null ) editProjectLabel = new javax.swing.JLabel();
FindBugsFrame.java,findBugsButton = new javax.swing.JButton();,if (javax != null ) findBugsButton = new javax.swing.JButton();
FindBugsFrame.java,jarFileListScrollPane = new javax.swing.JScrollPane();,if (javax != null ) jarFileListScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,jarFileList = new javax.swing.JList();,if (javax != null ) jarFileList = new javax.swing.JList();
FindBugsFrame.java,sourceDirListScrollPane = new javax.swing.JScrollPane();,if (javax != null ) sourceDirListScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,sourceDirList = new javax.swing.JList();,if (javax != null ) sourceDirList = new javax.swing.JList();
FindBugsFrame.java,classpathEntryLabel = new javax.swing.JLabel();,if (javax != null ) classpathEntryLabel = new javax.swing.JLabel();
FindBugsFrame.java,classpathEntryListLabel = new javax.swing.JLabel();,if (javax != null ) classpathEntryListLabel = new javax.swing.JLabel();
FindBugsFrame.java,classpathEntryTextField = new javax.swing.JTextField();,if (javax != null ) classpathEntryTextField = new javax.swing.JTextField();
FindBugsFrame.java,browseClasspathEntryButton = new javax.swing.JButton();,if (javax != null ) browseClasspathEntryButton = new javax.swing.JButton();
FindBugsFrame.java,addClasspathEntryButton = new javax.swing.JButton();,if (javax != null ) addClasspathEntryButton = new javax.swing.JButton();
FindBugsFrame.java,removeClasspathEntryButton = new javax.swing.JButton();,if (javax != null ) removeClasspathEntryButton = new javax.swing.JButton();
FindBugsFrame.java,classpathEntryListScrollPane = new javax.swing.JScrollPane();,if (javax != null ) classpathEntryListScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,classpathEntryList = new javax.swing.JList();,if (javax != null ) classpathEntryList = new javax.swing.JList();
FindBugsFrame.java,sourceUpButton = new javax.swing.JButton();,if (javax != null ) sourceUpButton = new javax.swing.JButton();
FindBugsFrame.java,sourceDownButton = new javax.swing.JButton();,if (javax != null ) sourceDownButton = new javax.swing.JButton();
FindBugsFrame.java,classpathUpButton = new javax.swing.JButton();,if (javax != null ) classpathUpButton = new javax.swing.JButton();
FindBugsFrame.java,classpathDownButton = new javax.swing.JButton();,if (javax != null ) classpathDownButton = new javax.swing.JButton();
FindBugsFrame.java,bugTreePanel = new javax.swing.JPanel();,if (javax != null ) bugTreePanel = new javax.swing.JPanel();
FindBugsFrame.java,bugTreeBugDetailsSplitter = new javax.swing.JSplitPane();,if (javax != null ) bugTreeBugDetailsSplitter = new javax.swing.JSplitPane();
FindBugsFrame.java,groupByTabbedPane = new javax.swing.JTabbedPane();,if (javax != null ) groupByTabbedPane = new javax.swing.JTabbedPane();
FindBugsFrame.java,byClassScrollPane = new javax.swing.JScrollPane();,if (javax != null ) byClassScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,byClassBugTree = new javax.swing.JTree();,if (javax != null ) byClassBugTree = new javax.swing.JTree();
FindBugsFrame.java,byPackageScrollPane = new javax.swing.JScrollPane();,if (javax != null ) byPackageScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,byPackageBugTree = new javax.swing.JTree();,if (javax != null ) byPackageBugTree = new javax.swing.JTree();
FindBugsFrame.java,byBugTypeScrollPane = new javax.swing.JScrollPane();,if (javax != null ) byBugTypeScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,byBugTypeBugTree = new javax.swing.JTree();,if (javax != null ) byBugTypeBugTree = new javax.swing.JTree();
FindBugsFrame.java,byBugCategoryScrollPane = new javax.swing.JScrollPane();,if (javax != null ) byBugCategoryScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,byBugCategoryBugTree = new javax.swing.JTree();,if (javax != null ) byBugCategoryBugTree = new javax.swing.JTree();
FindBugsFrame.java,bySummary = new javax.swing.JScrollPane();,if (javax != null ) bySummary = new javax.swing.JScrollPane();
FindBugsFrame.java,bugSummaryEditorPane = new javax.swing.JEditorPane();,if (javax != null ) bugSummaryEditorPane = new javax.swing.JEditorPane();
FindBugsFrame.java,bugDetailsTabbedPane = new javax.swing.JTabbedPane();,if (javax != null ) bugDetailsTabbedPane = new javax.swing.JTabbedPane();
FindBugsFrame.java,bugDescriptionScrollPane = new javax.swing.JScrollPane();,if (javax != null ) bugDescriptionScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,bugDescriptionEditorPane = new javax.swing.JEditorPane();,if (javax != null ) bugDescriptionEditorPane = new javax.swing.JEditorPane();
FindBugsFrame.java,sourceTextAreaScrollPane = new javax.swing.JScrollPane();,if (javax != null ) sourceTextAreaScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,sourceTextArea = new javax.swing.JTextArea();,if (javax != null ) sourceTextArea = new javax.swing.JTextArea();
FindBugsFrame.java,annotationTextAreaScrollPane = new javax.swing.JScrollPane();,if (javax != null ) annotationTextAreaScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,annotationTextArea = new javax.swing.JTextArea();,if (javax != null ) annotationTextArea = new javax.swing.JTextArea();
FindBugsFrame.java,consoleScrollPane = new javax.swing.JScrollPane();,if (javax != null ) consoleScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,consoleMessageArea = new javax.swing.JTextArea();,if (javax != null ) consoleMessageArea = new javax.swing.JTextArea();
FindBugsFrame.java,urlLabel = new javax.swing.JLabel();,if (javax != null ) urlLabel = new javax.swing.JLabel();
FindBugsFrame.java,logoLabel = new javax.swing.JLabel();,if (javax != null ) logoLabel = new javax.swing.JLabel();
FindBugsFrame.java,growBoxSpacer = new javax.swing.JLabel();,if (javax != null ) growBoxSpacer = new javax.swing.JLabel();
FindBugsFrame.java,theMenuBar = new javax.swing.JMenuBar();,if (javax != null ) theMenuBar = new javax.swing.JMenuBar();
FindBugsFrame.java,fileMenu = new javax.swing.JMenu();,if (javax != null ) fileMenu = new javax.swing.JMenu();
FindBugsFrame.java,newProjectItem = new javax.swing.JMenuItem();,if (javax != null ) newProjectItem = new javax.swing.JMenuItem();
FindBugsFrame.java,openProjectItem = new javax.swing.JMenuItem();,if (javax != null ) openProjectItem = new javax.swing.JMenuItem();
FindBugsFrame.java,recentProjectsMenu = new javax.swing.JMenu();,if (javax != null ) recentProjectsMenu = new javax.swing.JMenu();
FindBugsFrame.java,closeProjectItem = new javax.swing.JMenuItem();,if (javax != null ) closeProjectItem = new javax.swing.JMenuItem();
FindBugsFrame.java,saveProjectItem = new javax.swing.JMenuItem();,if (javax != null ) saveProjectItem = new javax.swing.JMenuItem();
FindBugsFrame.java,saveProjectAsItem = new javax.swing.JMenuItem();,if (javax != null ) saveProjectAsItem = new javax.swing.JMenuItem();
FindBugsFrame.java,reloadProjectItem = new javax.swing.JMenuItem();,if (javax != null ) reloadProjectItem = new javax.swing.JMenuItem();
FindBugsFrame.java,loadBugsItem = new javax.swing.JMenuItem();,if (javax != null ) loadBugsItem = new javax.swing.JMenuItem();
FindBugsFrame.java,saveBugsItem = new javax.swing.JMenuItem();,if (javax != null ) saveBugsItem = new javax.swing.JMenuItem();
FindBugsFrame.java,exitItem = new javax.swing.JMenuItem();,if (javax != null ) exitItem = new javax.swing.JMenuItem();
FindBugsFrame.java,editMenu = new javax.swing.JMenu();,if (javax != null ) editMenu = new javax.swing.JMenu();
FindBugsFrame.java,cutItem = new javax.swing.JMenuItem();,if (javax != null ) cutItem = new javax.swing.JMenuItem();
FindBugsFrame.java,copyItem = new javax.swing.JMenuItem();,if (javax != null ) copyItem = new javax.swing.JMenuItem();
FindBugsFrame.java,pasteItem = new javax.swing.JMenuItem();,if (javax != null ) pasteItem = new javax.swing.JMenuItem();
FindBugsFrame.java,selectAllItem = new javax.swing.JMenuItem();,if (javax != null ) selectAllItem = new javax.swing.JMenuItem();
FindBugsFrame.java,viewMenu = new javax.swing.JMenu();,if (javax != null ) viewMenu = new javax.swing.JMenu();
FindBugsFrame.java,viewConsoleItem = new javax.swing.JCheckBoxMenuItem();,if (javax != null ) viewConsoleItem = new javax.swing.JCheckBoxMenuItem();
FindBugsFrame.java,viewBugDetailsItem = new javax.swing.JCheckBoxMenuItem();,if (javax != null ) viewBugDetailsItem = new javax.swing.JCheckBoxMenuItem();
FindBugsFrame.java,fullDescriptionsItem = new javax.swing.JCheckBoxMenuItem();,if (javax != null ) fullDescriptionsItem = new javax.swing.JCheckBoxMenuItem();
FindBugsFrame.java,filterWarningsMenu = new javax.swing.JMenu();,if (javax != null ) filterWarningsMenu = new javax.swing.JMenu();
FindBugsFrame.java,expPriorityButton = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) expPriorityButton = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,lowPriorityButton = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) lowPriorityButton = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,mediumPriorityButton = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) mediumPriorityButton = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,highPriorityButton = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) highPriorityButton = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,viewProjectItem = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) viewProjectItem = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,viewBugsItem = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) viewBugsItem = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,settingsMenu = new javax.swing.JMenu();,if (javax != null ) settingsMenu = new javax.swing.JMenu();
FindBugsFrame.java,configureDetectorsItem = new javax.swing.JMenuItem();,if (javax != null ) configureDetectorsItem = new javax.swing.JMenuItem();
FindBugsFrame.java,helpMenu = new javax.swing.JMenu();,if (javax != null ) helpMenu = new javax.swing.JMenu();
FindBugsFrame.java,aboutItem = new javax.swing.JMenuItem();,if (javax != null ) aboutItem = new javax.swing.JMenuItem();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsAction.java,Object element = (Object) iter.next();,if (iter != null ) Object element = (Object) iter.next();
AddMessages.java,Iterator annElementIter = element.elements().iterator();,if (element != null ) Iterator annElementIter = element.elements().iterator();
AddMessages.java,Element annElement = (Element) annElementIter.next();,if (annElementIter != null ) Element annElement = (Element) annElementIter.next();
Filter.java,Iterator i = element.elementIterator();,if (element != null ) Iterator i = element.elementIterator();
PluginLoader.java,Node detectorNode = (Node) i.next();,if (i != null ) Node detectorNode = (Node) i.next();
PluginLoader.java,Element firstInPassElement = (Element) i.next();,if (i != null ) Element firstInPassElement = (Element) i.next();
PluginLoader.java,Node bugPatternNode = (Node) i.next();,if (i != null ) Node bugPatternNode = (Node) i.next();
BadlyOverriddenAdapter.java,Iterator it = badOverrideMap.values().iterator();,if (badOverrideMap != null ) Iterator it = badOverrideMap.values().iterator();
BadlyOverriddenAdapter.java,BugInstance bi = (BugInstance) it.next();,if (it != null ) BugInstance bi = (BugInstance) it.next();
FindBadCast2.java,String sourceFile = classContext.getJavaClass().getSourceFileName();,if (classContext != null ) String sourceFile = classContext.getJavaClass().getSourceFileName();
FindBadCast2.java,int occurrences = cfg.getLocationsContainingInstructionWithOffset(pc).size();,if (cfg != null ) int occurrences = cfg.getLocationsContainingInstructionWithOffset(pc).size();
FindBadCast2.java,boolean isParameter = paramValueNumberSet.contains(vFrame.getTopValue());,if (paramValueNumberSet != null ) boolean isParameter = paramValueNumberSet.contains(vFrame.getTopValue());
FindInconsistentSync2.java,Iterator it = il.iterator();,if (il != null ) Iterator it = il.iterator();
FindInconsistentSync2.java,InstructionHandle ih = (InstructionHandle) it.next();,if (it != null ) InstructionHandle ih = (InstructionHandle) it.next();
InitializationChain.java,String c = (String) i.next();,if (i != null ) String c = (String) i.next();
InitializationChain.java,String c = (String) i.next();,if (i != null ) String c = (String) i.next();
RuntimeExceptionCapture.java,CaughtException caughtException = (CaughtException) iterator.next();,if (iterator != null ) CaughtException caughtException = (CaughtException) iterator.next();
ConvertToARFF.java,final Element element = (Element) i.next();,if (i != null ) final Element element = (Element) i.next();
ConvertToARFF.java,Element element = (Element) i.next();,if (i != null ) Element element = (Element) i.next();
XPathFind.java,Attribute attribute = (Attribute) i.next();,if (i != null ) Attribute attribute = (Attribute) i.next();
EclipseClasspath.java,Node node = (Node) i.next();,if (i != null ) Node node = (Node) i.next();
EclipseClasspath.java,Node node = (Node) i.next();,if (i != null ) Node node = (Node) i.next();
CheckMessages.java,Node node = (Node) i.next();,if (i != null ) Node node = (Node) i.next();
CheckMessages.java,Node node = (Node) i.next();,if (i != null ) Node node = (Node) i.next();
CheckMessages.java,Node node = (Node) i.next();,if (i != null ) Node node = (Node) i.next();
CheckMessages.java,Node node = (Node) i.next();,if (i != null ) Node node = (Node) i.next();
FindBadCast2.java,int pc = handle.getPosition();,if (handle != null ) int pc = handle.getPosition();
AddMessages.java,Element element = (Element) elementIter.next();,if (elementIter != null ) Element element = (Element) elementIter.next();
AddMessages.java,Iterator<Element> annElementIter = element.elements().iterator();,if (element != null ) Iterator<Element> annElementIter = element.elements().iterator();
AddMessages.java,Element annElement = annElementIter.next();,if (annElementIter != null ) Element annElement = annElementIter.next();
Filter.java,Element matchNode = (Element) i.next();,if (i != null ) Element matchNode = (Element) i.next();
Filter.java,Iterator<Element> i = element.elementIterator();,if (element != null ) Iterator<Element> i = element.elementIterator();
PluginLoader.java,Element constraintElement = (Element) i.next();,if (i != null ) Element constraintElement = (Element) i.next();
Analyze.java,Subtypes subtypes= AnalysisContext.currentAnalysisContext().getSubtypes();,if (AnalysisContext != null ) Subtypes subtypes= AnalysisContext.currentAnalysisContext().getSubtypes();
GenerateUIDs.java,Element element = (Element) i.next();,if (i != null ) Element element = (Element) i.next();
JUnitJarRunner.java,Enumeration e = jarFile.entries();,if (jarFile != null ) Enumeration e = jarFile.entries();
JUnitJarRunner.java,JarEntry entry = (JarEntry) e.nextElement();,if (e != null ) JarEntry entry = (JarEntry) e.nextElement();
FindBugsFrame.java,Iterator j = member.annotationIterator();,if (member != null ) Iterator j = member.annotationIterator();
FindBugsFrame.java,BugAnnotation annotation = (BugAnnotation) j.next();,if (j != null ) BugAnnotation annotation = (BugAnnotation) j.next();
AddMessages.java,Iterator annElementIter = element.elements().iterator();,if (element != null ) Iterator annElementIter = element.elements().iterator();
AddMessages.java,Element annElement = (Element) annElementIter.next();,if (annElementIter != null ) Element annElement = (Element) annElementIter.next();
Filter.java,Iterator j = matchNode.elementIterator();,if (matchNode != null ) Iterator j = matchNode.elementIterator();
Filter.java,Element child = (Element) j.next();,if (j != null ) Element child = (Element) j.next();
Filter.java,Iterator i = element.elementIterator();,if (element != null ) Iterator i = element.elementIterator();
PluginLoader.java,Node detectorNode = (Node) i.next();,if (i != null ) Node detectorNode = (Node) i.next();
PluginLoader.java,Node bugPatternNode = (Node) i.next();,if (i != null ) Node bugPatternNode = (Node) i.next();
PluginLoader.java,Node bugCodeNode = (Node) j.next();,if (j != null ) Node bugCodeNode = (Node) j.next();
DuplicateBranches.java,InstructionIterator thenII = thenBB.instructionIterator();,if (thenBB != null ) InstructionIterator thenII = thenBB.instructionIterator();
DuplicateBranches.java,InstructionIterator elseII = elseBB.instructionIterator();,if (elseBB != null ) InstructionIterator elseII = elseBB.instructionIterator();
AnalysisContext.java,this.className = javaClass.getClassName();,if (javaClass != null ) this.className = javaClass.getClassName();
AnalysisContext.java,WorkListItem item = workList.removeFirst();,if (workList != null ) WorkListItem item = workList.removeFirst();
AnalysisContext.java,JavaClass javaClass = item.getJavaClass();,if (item != null ) JavaClass javaClass = item.getJavaClass();
AnalysisContext.java,javaClass = Repository.lookupClass(item.getClassName());,if (Repository != null ) javaClass = Repository.lookupClass(item.getClassName());
AnalysisContext.java,String superclassName = javaClass.getSuperclassName();,if (javaClass != null ) String superclassName = javaClass.getSuperclassName();
AnalysisContext.java,String[] interfaceNameList = javaClass.getInterfaceNames();,if (javaClass != null ) String[] interfaceNameList = javaClass.getInterfaceNames();
AnalysisContext.java,ClassHierarchyGraphVertex vertex = workList.removeFirst();,if (workList != null ) ClassHierarchyGraphVertex vertex = workList.removeFirst();
AnalysisContext.java,ClassHierarchyGraphVertex vertex = classHierarchyGraph.lookupVertex(item.getClassName());,if (classHierarchyGraph != null ) ClassHierarchyGraphVertex vertex = classHierarchyGraph.lookupVertex(item.getClassName());
AnalysisContext.java,javaClass = item.getJavaClass();,if (item != null ) javaClass = item.getJavaClass();
AnalysisContext.java,String superclassName = javaClass.getSuperclassName();,if (javaClass != null ) String superclassName = javaClass.getSuperclassName();
AnalysisContext.java,String[] interfaceNameList = javaClass.getInterfaceNames();,if (javaClass != null ) String[] interfaceNameList = javaClass.getInterfaceNames();
AnalysisContext.java,JavaClass javaClass = Repository.lookupClass(item.getClassName());,if (Repository != null ) JavaClass javaClass = Repository.lookupClass(item.getClassName());
FindCircularDependencies.java,String clsName = entry.getKey();,if (entry != null ) String clsName = entry.getKey();
FindCircularDependencies.java,Set<String> dependencies = entry.getValue();,if (entry != null ) Set<String> dependencies = entry.getValue();
FindCircularDependencies.java,Iterator dit = dependencies.iterator();,if (dependencies != null ) Iterator dit = dependencies.iterator();
TypeAnalysis.java,CodeExceptionGen exceptionGen = basicBlock.getExceptionGen();,if (basicBlock != null ) CodeExceptionGen exceptionGen = basicBlock.getExceptionGen();
TypeAnalysis.java,CachedExceptionSet cachedExceptionSet = getCachedExceptionSet(edge.getSource());,if (getCachedExceptionSet(edge != null ) CachedExceptionSet cachedExceptionSet = getCachedExceptionSet(edge.getSource());
TypeAnalysis.java,catchType = exceptionGen.getCatchType();,if (exceptionGen != null ) catchType = exceptionGen.getCatchType();
TypeFrameModelingVisitor.java,instanceOfValueNumber = vnaFrame.getTopValue();,if (vnaFrame != null ) instanceOfValueNumber = vnaFrame.getTopValue();
TypeAnalysis.java,short opcode = handle.getInstruction().getOpcode();,if (handle != null ) short opcode = handle.getInstruction().getOpcode();
TypeAnalysis.java,tosValueNumber = vnaFrameBefore.getTopValue();,if (vnaFrameBefore != null ) tosValueNumber = vnaFrameBefore.getTopValue();
TypeAnalysis.java,Type instanceOfType = visitor.getInstanceOfType();,if (visitor != null ) Type instanceOfType = visitor.getInstanceOfType();
TypeAnalysis.java,int numSlots = fact.getNumSlots();,if (fact != null ) int numSlots = fact.getNumSlots();
URLClassPathRepository.java,String systemClassPath = ClassPath.getClassPath();,if (ClassPath != null ) String systemClassPath = ClassPath.getClassPath();
URLClassPathRepository.java,String entryName = tok.nextToken();,if (tok != null ) String entryName = tok.nextToken();
ResourceValueAnalysis.java,InstructionHandle exceptionThrower = source.getExceptionThrower();,if (source != null ) InstructionHandle exceptionThrower = source.getExceptionThrower();
BugCollectionBugReporter.java,String html = writer.toString();,if (writer != null ) String html = writer.toString();
PackageStats.java,Iterator<String> itr = packageClasses.iterator();,if (packageClasses != null ) Iterator<String> itr = packageClasses.iterator();
PackageStats.java,String name = itr.next();,if (itr != null ) String name = itr.next();
PackageStats.java,int numInterfaces = packageInterfaces.size();,if (packageInterfaces != null ) int numInterfaces = packageInterfaces.size();
PackageStats.java,Iterator<BugInstance> itr = packageErrors.iterator();,if (packageErrors != null ) Iterator<BugInstance> itr = packageErrors.iterator();
PackageStats.java,BugInstance bug = itr.next();,if (itr != null ) BugInstance bug = itr.next();
PackageStats.java,String clss = bug.getPrimaryClass().getClassName();,if (bug != null ) String clss = bug.getPrimaryClass().getClassName();
PackageStats.java,Iterator<BugInstance> itr = classErrorList.iterator();,if (classErrorList != null ) Iterator<BugInstance> itr = classErrorList.iterator();
PackageStats.java,BugInstance bug = itr.next();,if (itr != null ) BugInstance bug = itr.next();
PackageStats.java,Iterator<BugInstance> itr = interfaceErrorList.iterator();,if (interfaceErrorList != null ) Iterator<BugInstance> itr = interfaceErrorList.iterator();
PackageStats.java,BugInstance bug = itr.next();,if (itr != null ) BugInstance bug = itr.next();
ProjectStats.java,Document document = DocumentHelper.createDocument();,if (DocumentHelper != null ) Document document = DocumentHelper.createDocument();
ProjectStats.java,"XMLWriter writer = new XMLWriter(out, OutputFormat.createPrettyPrint());","if (OutputFormat != null ) XMLWriter writer = new XMLWriter(out, OutputFormat.createPrettyPrint());"
FindMismatchedWaitOrNotify.java,BasicBlock basicBlock = location.getBasicBlock();,if (location != null ) BasicBlock basicBlock = location.getBasicBlock();
DroppedException.java,SourceFinder sourceFinder = analysisContext.getSourceFinder();,if (analysisContext != null ) SourceFinder sourceFinder = analysisContext.getSourceFinder();
SwitchFallthrough.java,SourceFinder sourceFinder = analysisContext.getSourceFinder();,if (analysisContext != null ) SourceFinder sourceFinder = analysisContext.getSourceFinder();
FindTwoLockWait.java,ConstantPoolGen cpg = methodGen.getConstantPool();,if (methodGen != null ) ConstantPoolGen cpg = methodGen.getConstantPool();
FindTwoLockWait.java,int count = dataflow.getFactAtLocation(location).getNumLockedObjects();,if (dataflow != null ) int count = dataflow.getFactAtLocation(location).getNumLockedObjects();
FindTwoLockWait.java,String sourceFile = javaClass.getSourceFileName();,if (javaClass != null ) String sourceFile = javaClass.getSourceFileName();
FindTwoLockWait.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
FindJSR166LockMonitorenter.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
FindJSR166LockMonitorenter.java,String sourceFile = classContext.getJavaClass().getSourceFileName();,if (classContext != null ) String sourceFile = classContext.getJavaClass().getSourceFileName();
FindJSR166LockMonitorenter.java,ConstantPoolGen cpg = classContext.getConstantPoolGen();,if (classContext != null ) ConstantPoolGen cpg = classContext.getConstantPoolGen();
FindJSR166LockMonitorenter.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
FindJSR166LockMonitorenter.java,String sourceFile = classContext.getJavaClass().getSourceFileName();,if (classContext != null ) String sourceFile = classContext.getJavaClass().getSourceFileName();
SwitchFallthrough.java,String line = r.readLine().toLowerCase();,if (r != null ) String line = r.readLine().toLowerCase();
AbstractBugReporter.java,Throwable cause = error.getCause();,if (error != null ) Throwable cause = error.getCause();
AbstractBugReporter.java,StackTraceElement[] stackTrace = cause.getStackTrace();,if (cause != null ) StackTraceElement[] stackTrace = cause.getStackTrace();
AnalysisRun.java,summary = reporter.bugCollection.getSummaryHTML();,if (reporter != null ) summary = reporter.bugCollection.getSummaryHTML();
FindBugsFrame.java,String lhsString = lhs.getBugPattern().getCategory();,if (lhs != null ) String lhsString = lhs.getBugPattern().getCategory();
FindBugsFrame.java,String rhsString = rhs.getBugPattern().getCategory();,if (rhs != null ) String rhsString = rhs.getBugPattern().getCategory();
BCPDoubleCheck.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
BCPDoubleCheck.java,BindingSet bindingSet = match.getBindingSet();,if (match != null ) BindingSet bindingSet = match.getBindingSet();
BCPDoubleCheck.java,FieldVariable field = (FieldVariable) binding.getVariable();,if (binding != null ) FieldVariable field = (FieldVariable) binding.getVariable();
BCPDoubleCheck.java,String sourceFile = javaClass.getSourceFileName();,if (javaClass != null ) String sourceFile = javaClass.getSourceFileName();
FindLocalSelfAssignment.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
FindLocalSelfAssignment.java,Method[] methodList = javaClass.getMethods();,if (javaClass != null ) Method[] methodList = javaClass.getMethods();
FindLocalSelfAssignment.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
FindLocalSelfAssignment.java,loaded = load.getIndex();,if (load != null ) loaded = load.getIndex();
FindLocalSelfAssignment.java,stored = store.getIndex();,if (store != null ) stored = store.getIndex();
FindLocalSelfAssignment.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
FindLocalSelfAssignment.java,String sourceFile = javaClass.getSourceFileName();,if (javaClass != null ) String sourceFile = javaClass.getSourceFileName();
AnalysisLocal.java,AnalysisContext t = AnalysisContext.currentAnalysisContext();,if (AnalysisContext != null ) AnalysisContext t = AnalysisContext.currentAnalysisContext();
FindCircularDependencies.java,Iterator<String> vIt = visited.iterator();,if (visited != null ) Iterator<String> vIt = visited.iterator();
FindCircularDependencies.java,String loopCls = vIt.next();,if (vIt != null ) String loopCls = vIt.next();
FindCircularDependencies.java,Iterator<String> dit = dependencies.iterator();,if (dependencies != null ) Iterator<String> dit = dependencies.iterator();
FindCircularDependencies.java,String depClass = dit.next();,if (dit != null ) String depClass = dit.next();
FindCircularDependencies.java,String clsName = entry.getKey();,if (entry != null ) String clsName = entry.getKey();
FindCircularDependencies.java,Set<String> dependencies = entry.getValue();,if (entry != null ) Set<String> dependencies = entry.getValue();
FindCircularDependencies.java,Iterator dit = dependencies.iterator();,if (dependencies != null ) Iterator dit = dependencies.iterator();
FindCircularDependencies.java,clsName = (String)dit.next();,if ((String)dit != null ) clsName = (String)dit.next();
FindCircularDependencies.java,String clsName = entry.getKey();,if (entry != null ) String clsName = entry.getKey();
FindCircularDependencies.java,Set<String> dependencies = entry.getValue();,if (entry != null ) Set<String> dependencies = entry.getValue();
FindCircularDependencies.java,Iterator dit = dependencies.iterator();,if (dependencies != null ) Iterator dit = dependencies.iterator();
FindCircularDependencies.java,clsName = (String)dit.next();,if ((String)dit != null ) clsName = (String)dit.next();
FindCircularDependencies.java,String clsName = entry.getKey();,if (entry != null ) String clsName = entry.getKey();
FindCircularDependencies.java,Set<String> dependencies = entry.getValue();,if (entry != null ) Set<String> dependencies = entry.getValue();
FindCircularDependencies.java,Iterator dit = dependencies.iterator();,if (dependencies != null ) Iterator dit = dependencies.iterator();
FindCircularDependencies.java,foundClass = dependencyGraph.containsKey(dit.next());,if (dependencyGraph != null ) foundClass = dependencyGraph.containsKey(dit.next());
FindCircularDependencies.java,String clsName = entry.getKey();,if (entry != null ) String clsName = entry.getKey();
FindCircularDependencies.java,Set<String> dependencies = entry.getValue();,if (entry != null ) Set<String> dependencies = entry.getValue();
FindCircularDependencies.java,Iterator dit = dependencies.iterator();,if (dependencies != null ) Iterator dit = dependencies.iterator();
FindCircularDependencies.java,String clsName = entry.getKey();,if (entry != null ) String clsName = entry.getKey();
FindCircularDependencies.java,Set<String> dependencies = entry.getValue();,if (entry != null ) Set<String> dependencies = entry.getValue();
FindCircularDependencies.java,Iterator dit = dependencies.iterator();,if (dependencies != null ) Iterator dit = dependencies.iterator();
UserPreferences.java,Iterator it = detectorEnablementMap.entrySet().iterator();,if (detectorEnablementMap != null ) Iterator it = detectorEnablementMap.entrySet().iterator();
UserPreferences.java,Map.Entry entry = (Map.Entry) it.next();,if (it != null ) Map.Entry entry = (Map.Entry) it.next();
FindBugs.java,Iterator it = detectorTimings.values().iterator();,if (detectorTimings != null ) Iterator it = detectorTimings.values().iterator();
FindBugs.java,it = detectorTimings.entrySet().iterator();,if (detectorTimings != null ) it = detectorTimings.entrySet().iterator();
FindBugs.java,Map.Entry entry = (Map.Entry)it.next();,if ((Map != null ) Map.Entry entry = (Map.Entry)it.next();
FindBugs.java,String detectorName = (String)entry.getKey();,if ((String)entry != null ) String detectorName = (String)entry.getKey();
FindCircularDependencies.java,Iterator it = dependencyGraph.entrySet().iterator();,if (dependencyGraph != null ) Iterator it = dependencyGraph.entrySet().iterator();
FindCircularDependencies.java,Map.Entry entry = (Map.Entry)it.next();,if ((Map != null ) Map.Entry entry = (Map.Entry)it.next();
FindCircularDependencies.java,String clsName = (String)entry.getKey();,if ((String)entry != null ) String clsName = (String)entry.getKey();
FindCircularDependencies.java,Set<String> dependencies = (Set<String>)entry.getValue();,if ((Set<String>)entry != null ) Set<String> dependencies = (Set<String>)entry.getValue();
FindCircularDependencies.java,Iterator it = dependencyGraph.entrySet().iterator();,if (dependencyGraph != null ) Iterator it = dependencyGraph.entrySet().iterator();
FindCircularDependencies.java,Map.Entry entry = (Map.Entry)it.next();,if ((Map != null ) Map.Entry entry = (Map.Entry)it.next();
FindCircularDependencies.java,String clsName = (String)entry.getKey();,if ((String)entry != null ) String clsName = (String)entry.getKey();
FindCircularDependencies.java,Set<String> dependencies = (Set<String>)entry.getValue();,if ((Set<String>)entry != null ) Set<String> dependencies = (Set<String>)entry.getValue();
FindCircularDependencies.java,Iterator it = dependencyGraph.entrySet().iterator();,if (dependencyGraph != null ) Iterator it = dependencyGraph.entrySet().iterator();
FindCircularDependencies.java,Map.Entry entry = (Map.Entry)it.next();,if ((Map != null ) Map.Entry entry = (Map.Entry)it.next();
FindCircularDependencies.java,String clsName = (String)entry.getKey();,if ((String)entry != null ) String clsName = (String)entry.getKey();
FindCircularDependencies.java,Set<String> dependencies = (Set<String>)entry.getValue();,if ((Set<String>)entry != null ) Set<String> dependencies = (Set<String>)entry.getValue();
SchemaValidatorTask.java,SAXParserFactory spf = SAXParserFactory.newInstance();,if (SAXParserFactory != null ) SAXParserFactory spf = SAXParserFactory.newInstance();
SchemaValidatorTask.java,SAXParser parser = spf.newSAXParser();,if (spf != null ) SAXParser parser = spf.newSAXParser();
SchemaValidatorTask.java,XMLReader reader = parser.getXMLReader();,if (parser != null ) XMLReader reader = parser.getXMLReader();
SchemaValidatorTask.java,exLineNo = ex.getLineNumber();,if (ex != null ) exLineNo = ex.getLineNumber();
FindRefComparison.java,Instruction ins = location.getHandle().getInstruction();,if (location != null ) Instruction ins = location.getHandle().getInstruction();
FindRefComparison.java,short opcode = ins.getOpcode();,if (ins != null ) short opcode = ins.getOpcode();
FindRefComparison.java,String sourceFile = jclass.getSourceFileName();,if (jclass != null ) String sourceFile = jclass.getSourceFileName();
FindRefComparison.java,String sourceFile = jclass.getSourceFileName();,if (jclass != null ) String sourceFile = jclass.getSourceFileName();
XMLBugReporter.java,"XMLWriter writer = new XMLWriter(outputStream, OutputFormat.createPrettyPrint());","if (OutputFormat != null ) XMLWriter writer = new XMLWriter(outputStream, OutputFormat.createPrettyPrint());"
FindRefComparison.java,String sourceFile = jclass.getSourceFileName();,if (jclass != null ) String sourceFile = jclass.getSourceFileName();
FindInconsistentSync2.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
FindInconsistentSync2.java,Iterator<Method> i = publicReachableMethods.iterator();,if (publicReachableMethods != null ) Iterator<Method> i = publicReachableMethods.iterator();
UseObjectEquals.java,JavaClass cls = item.getJavaClass();,if (item != null ) JavaClass cls = item.getJavaClass();
FindNullDeref.java,boolean redundantNullCheck = top.isChecked() || topNext.isChecked();,if (topNext != null ) boolean redundantNullCheck = top.isChecked() || topNext.isChecked();
FindNullDeref.java,boolean onExceptionPath = refValue.isException();,if (refValue != null ) boolean onExceptionPath = refValue.isException();
StronglyConnectedComponents.java,Iterator i = tree.childIterator();,if (tree != null ) Iterator i = tree.childIterator();
StronglyConnectedComponents.java,SearchTree<VertexType> child = (SearchTree<VertexType>) i.next();,if (i != null ) SearchTree<VertexType> child = (SearchTree<VertexType>) i.next();
FindbugsPropertyPage.java,this.origUserPreferences = UserPreferences.createDefaultUserPreferences();,if (UserPreferences != null ) this.origUserPreferences = UserPreferences.createDefaultUserPreferences();
FindbugsPropertyPage.java,UserPreferences updatedUserPreferences = UserPreferences.createDefaultUserPreferences();,if (UserPreferences != null ) UserPreferences updatedUserPreferences = UserPreferences.createDefaultUserPreferences();
FindbugsPropertyPage.java,DetectorFactory factory = (DetectorFactory) i.next();,if (i != null ) DetectorFactory factory = (DetectorFactory) i.next();
FindbugsPropertyPage.java,Object factory = itemList[i].getData();,if (itemList[i] != null ) Object factory = itemList[i].getData();
FindbugsPropertyPage.java,ProjectFilterSettings settings = ProjectFilterSettings.createDefault();,if (ProjectFilterSettings != null ) ProjectFilterSettings settings = ProjectFilterSettings.createDefault();
LockCountAnalysis.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
ValueNumberAnalysis.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
WarningPropertySet.java,PriorityAdjustment adj = i.next().getPriorityAdjustment();,if (i != null ) PriorityAdjustment adj = i.next().getPriorityAdjustment();
MethodReturnCheck.java,int pc = i.next().intValue();,if (i != null ) int pc = i.next().intValue();
FindBugs.java,Collection<BugPattern> reported = factory.getReportedBugPatterns();,if (factory != null ) Collection<BugPattern> reported = factory.getReportedBugPatterns();
FindbugsPropertyPage.java,Iterator i = factoryList.iterator();,if (factoryList != null ) Iterator i = factoryList.iterator();
FindbugsPropertyPage.java,DetectorFactory rule = (DetectorFactory) i.next();,if (i != null ) DetectorFactory rule = (DetectorFactory) i.next();
FindbugsPropertyPage.java,this.origFilterSettings = ProjectFilterSettings.createDefault();,if (ProjectFilterSettings != null ) this.origFilterSettings = ProjectFilterSettings.createDefault();
Reporter.java,this.filterSettings = ProjectFilterSettings.createDefault();,if (ProjectFilterSettings != null ) this.filterSettings = ProjectFilterSettings.createDefault();
FindbugsPlugin.java,UserPreferences prefs = UserPreferences.createDefaultUserPreferences();,if (UserPreferences != null ) UserPreferences prefs = UserPreferences.createDefaultUserPreferences();
FindBugsWorker.java,selectedDetectorFactories = FindbugsPlugin.getProjectFilterSettings(project).getDetectorFactories();,if (FindbugsPlugin != null ) selectedDetectorFactories = FindbugsPlugin.getProjectFilterSettings(project).getDetectorFactories();
FindBugsWorker.java,Iterator iterator = DetectorFactoryCollection.instance().factoryIterator();,if (DetectorFactoryCollection != null ) Iterator iterator = DetectorFactoryCollection.instance().factoryIterator();
FindBugsWorker.java,DetectorFactory factory = (DetectorFactory) iterator.next();,if (iterator != null ) DetectorFactory factory = (DetectorFactory) iterator.next();
FindbugsPropertyPage.java,this.oldFilterSettings = ProjectFilterSettings.createDefault();,if (ProjectFilterSettings != null ) this.oldFilterSettings = ProjectFilterSettings.createDefault();
FindbugsPropertyPage.java,BugPattern pattern = (BugPattern) it.next();,if (it != null ) BugPattern pattern = (BugPattern) it.next();
FindbugsPropertyPage.java,List selectedFactoryList = this.filterSettings.getDetectorFactories();,if (this != null ) List selectedFactoryList = this.filterSettings.getDetectorFactories();
FindbugsPropertyPage.java,Object rule = itemList[i].getData();,if (itemList[i] != null ) Object rule = itemList[i].getData();
FindbugsPropertyPage.java,List factories = settings.getDetectorFactories();,if (settings != null ) List factories = settings.getDetectorFactories();
PrettyPrintBugDescriptions.java,DetectorFactoryCollection factories = DetectorFactoryCollection.instance();,if (DetectorFactoryCollection != null ) DetectorFactoryCollection factories = DetectorFactoryCollection.instance();
DetectorFactoryCollection.java,Iterator<DetectorFactory> i = DetectorFactoryCollection.instance().factoryIterator();,if (DetectorFactoryCollection != null ) Iterator<DetectorFactory> i = DetectorFactoryCollection.instance().factoryIterator();
ProjectFilterSettings.java,DetectorFactory factory = (DetectorFactory) iterator.next();,if (iterator != null ) DetectorFactory factory = (DetectorFactory) iterator.next();
ProjectFilterSettings.java,List<DetectorFactory> myFactories = this.getDetectorFactories();,if (this != null ) List<DetectorFactory> myFactories = this.getDetectorFactories();
ProjectFilterSettings.java,List<DetectorFactory> theirFactories = other.getDetectorFactories();,if (other != null ) List<DetectorFactory> theirFactories = other.getDetectorFactories();
UserPreferences.java,Iterator it = detectorStateList.entrySet().iterator();,if (detectorStateList != null ) Iterator it = detectorStateList.entrySet().iterator();
UserPreferences.java,Iterator<DetectorFactory> i = DetectorFactoryCollection.instance().factoryIterator();,if (DetectorFactoryCollection != null ) Iterator<DetectorFactory> i = DetectorFactoryCollection.instance().factoryIterator();
UserPreferences.java,Boolean enabled = detectorStateList.get(factory.getShortName());,if (detectorStateList != null ) Boolean enabled = detectorStateList.get(factory.getShortName());
UserPreferences.java,Iterator<DetectorFactory> i = DetectorFactoryCollection.instance().factoryIterator();,if (DetectorFactoryCollection != null ) Iterator<DetectorFactory> i = DetectorFactoryCollection.instance().factoryIterator();
FindBugsWorker.java,SortedBugCollection newBugCollection = bugReporter.getBugCollection();,if (bugReporter != null ) SortedBugCollection newBugCollection = bugReporter.getBugCollection();
FindBugsWorker.java,Set analyzedClassNameSet = bugReporter.getAnalyzedClassNames();,if (bugReporter != null ) Set analyzedClassNameSet = bugReporter.getAnalyzedClassNames();
FindBugsWorker.java,BugInstance oldWarning = (BugInstance) i.next();,if (i != null ) BugInstance oldWarning = (BugInstance) i.next();
FindBugsWorker.java,ClassAnnotation warningClass = oldWarning.getPrimaryClass();,if (oldWarning != null ) ClassAnnotation warningClass = oldWarning.getPrimaryClass();
FindBugsWorker.java,BugInstance newWarning = (BugInstance) i.next();,if (i != null ) BugInstance newWarning = (BugInstance) i.next();
TimestampIntervalCollection.java,int max = intervalList.size();,if (intervalList != null ) int max = intervalList.size();
SortedBugCollection.java,activeIntervalCollection = bugInstance.getActiveIntervalCollection();,if (bugInstance != null ) activeIntervalCollection = bugInstance.getActiveIntervalCollection();
BugInstance.java,next = next.getNext();,if (next != null ) next = next.getNext();
FindDeadLocalStores.java,LocalVariableTable lvt = method.getLocalVariableTable();,if (method != null ) LocalVariableTable lvt = method.getLocalVariableTable();
FindDeadLocalStores.java,int local = ins.getIndex();,if (ins != null ) int local = ins.getIndex();
FindDeadLocalStores.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
FindDeadLocalStores.java,IndexedInstruction ins = (IndexedInstruction) handle.getInstruction();,if (handle != null ) IndexedInstruction ins = (IndexedInstruction) handle.getInstruction();
FindDeadLocalStores.java,int pc = handle.getPosition();,if (handle != null ) int pc = handle.getPosition();
FindDeadLocalStores.java,String localName = lv.getName();,if (lv != null ) String localName = lv.getName();
FindDeadLocalStores.java,String localName = lv.getName();,if (lv != null ) String localName = lv.getName();
IsNullValueAnalysis.java,paramValue = IsNullValue.nullOnSomePathValue();,if (IsNullValue != null ) paramValue = IsNullValue.nullOnSomePathValue();
IsNullValueAnalysis.java,ifcmpDecision = IsNullValue.flowSensitiveNullValue();,if (IsNullValue != null ) ifcmpDecision = IsNullValue.flowSensitiveNullValue();
IsNullValueAnalysis.java,fallThroughDecision = IsNullValue.flowSensitiveNullValue();,if (IsNullValue != null ) fallThroughDecision = IsNullValue.flowSensitiveNullValue();
IsNullValueAnalysis.java,fallThroughDecision = IsNullValue.flowSensitiveNonNullValue();,if (IsNullValue != null ) fallThroughDecision = IsNullValue.flowSensitiveNonNullValue();
IsNullValueAnalysis.java,ifcmpDecision = IsNullValue.flowSensitiveNonNullValue();,if (IsNullValue != null ) ifcmpDecision = IsNullValue.flowSensitiveNonNullValue();
IsNullValueAnalysis.java,ifcmpDecision = IsNullValue.flowSensitiveNullValue();,if (IsNullValue != null ) ifcmpDecision = IsNullValue.flowSensitiveNullValue();
IsNullValueAnalysis.java,fallThroughDecision = IsNullValue.flowSensitiveNullValue();,if (IsNullValue != null ) fallThroughDecision = IsNullValue.flowSensitiveNullValue();
SuspectStruts.java,JavaClass cls = classContext.getJavaClass();,if (classContext != null ) JavaClass cls = classContext.getJavaClass();
SuspectStruts.java,String superClsName = cls.getSuperclassName();,if (cls != null ) String superClsName = cls.getSuperclassName();
SuspectStruts.java,int nameAndTypeIdx = fieldRef.getNameAndTypeIndex();,if (fieldRef != null ) int nameAndTypeIdx = fieldRef.getNameAndTypeIndex();
SuspectStruts.java,int nameIdx = ntc.getNameIndex();,if (ntc != null ) int nameIdx = ntc.getNameIndex();
AccuracyClassificationPulldownAction.java,IResource resource = marker.getResource();,if (marker != null ) IResource resource = marker.getResource();
AccuracyClassificationPulldownAction.java,IProject project = resource.getProject();,if (resource != null ) IProject project = resource.getProject();
AccuracyClassificationPulldownAction.java,String markerType = marker.getType();,if (marker != null ) String markerType = marker.getType();
SchemaValidatorTask.java,BuildException be = new BuildException(e.getMessage());,if (BuildException(e != null ) BuildException be = new BuildException(e.getMessage());
FindUnsyncGet.java,HashSet<String> commonProperties = new HashSet<String>(getMethods.keySet());,if (HashSet<String>(getMethods != null ) HashSet<String> commonProperties = new HashSet<String>(getMethods.keySet());
FindDeadLocalStores.java,LocalVariable[] lvs = lvt.getLocalVariableTable();,if (lvt != null ) LocalVariable[] lvs = lvt.getLocalVariableTable();
FindDeadLocalStores.java,localName = lvs[j].getName();,if (lvs[j] != null ) localName = lvs[j].getName();
FindbugsPropertyPage.java,List<DetectorFactory> selectedFactoryList = this.filterSettings.getDetectorFactories();,if (this != null ) List<DetectorFactory> selectedFactoryList = this.filterSettings.getDetectorFactories();
FindbugsPropertyPage.java,List<DetectorFactory> factories = settings.getDetectorFactories();,if (settings != null ) List<DetectorFactory> factories = settings.getDetectorFactories();
FindbugsPlugin.java,DetectorFactory factory = (DetectorFactory) iterator.next();,if (iterator != null ) DetectorFactory factory = (DetectorFactory) iterator.next();
FindbugsPropertyPage.java,this.origFilterSettings = ProjectFilterSettings.createDefault();,if (ProjectFilterSettings != null ) this.origFilterSettings = ProjectFilterSettings.createDefault();
FindbugsPropertyPage.java,Object factory = itemList[i].getData();,if (itemList[i] != null ) Object factory = itemList[i].getData();
FindbugsPropertyPage.java,ProjectFilterSettings settings = ProjectFilterSettings.createDefault();,if (ProjectFilterSettings != null ) ProjectFilterSettings settings = ProjectFilterSettings.createDefault();
FindbugsPropertyPage.java,Iterator i = factoryList.iterator();,if (factoryList != null ) Iterator i = factoryList.iterator();
FindbugsPropertyPage.java,DetectorFactory rule = (DetectorFactory) i.next();,if (i != null ) DetectorFactory rule = (DetectorFactory) i.next();
ObligationAnalysis.java,BasicBlock sourceBlock = edge.getSource();,if (edge != null ) BasicBlock sourceBlock = edge.getSource();
ObligationAnalysis.java,InstructionHandle handle = sourceBlock.getExceptionThrower();,if (sourceBlock != null ) InstructionHandle handle = sourceBlock.getExceptionThrower();
ObligationAnalysis.java,fact = fact.duplicate();,if (fact != null ) fact = fact.duplicate();
FindBugsAction.java,final Collection files = collector.getFiles();,if (collector != null ) final Collection files = collector.getFiles();
ProjectStats.java,String summaryXML = summaryOut.toString();,if (summaryOut != null ) String summaryXML = summaryOut.toString();
ObligationAnalysis.java,State matchingState = fact.getStateWithObligationSet(state.getObligationSet());,if (fact != null ) State matchingState = fact.getStateWithObligationSet(state.getObligationSet());
DefaultSortedTableModel.java,ClassLoader classLoader = this.getClass().getClassLoader();,if (this != null ) ClassLoader classLoader = this.getClass().getClassLoader();
DefaultSortedTableModel.java,baseRenderer = baseHeader.getDefaultRenderer();,if (baseHeader != null ) baseRenderer = baseHeader.getDefaultRenderer();
FindBugsFrame.java,priorityButtonGroup = new javax.swing.ButtonGroup();,if (javax != null ) priorityButtonGroup = new javax.swing.ButtonGroup();
FindBugsFrame.java,consoleSplitter = new javax.swing.JSplitPane();,if (javax != null ) consoleSplitter = new javax.swing.JSplitPane();
FindBugsFrame.java,viewPanel = new javax.swing.JPanel();,if (javax != null ) viewPanel = new javax.swing.JPanel();
FindBugsFrame.java,emptyPanel = new javax.swing.JPanel();,if (javax != null ) emptyPanel = new javax.swing.JPanel();
FindBugsFrame.java,reportPanel = new javax.swing.JPanel();,if (javax != null ) reportPanel = new javax.swing.JPanel();
FindBugsFrame.java,editProjectPanel = new javax.swing.JPanel();,if (javax != null ) editProjectPanel = new javax.swing.JPanel();
FindBugsFrame.java,jarFileLabel = new javax.swing.JLabel();,if (javax != null ) jarFileLabel = new javax.swing.JLabel();
FindBugsFrame.java,jarNameTextField = new javax.swing.JTextField();,if (javax != null ) jarNameTextField = new javax.swing.JTextField();
FindBugsFrame.java,addJarButton = new javax.swing.JButton();,if (javax != null ) addJarButton = new javax.swing.JButton();
FindBugsFrame.java,jarFileListLabel = new javax.swing.JLabel();,if (javax != null ) jarFileListLabel = new javax.swing.JLabel();
FindBugsFrame.java,sourceDirLabel = new javax.swing.JLabel();,if (javax != null ) sourceDirLabel = new javax.swing.JLabel();
FindBugsFrame.java,srcDirTextField = new javax.swing.JTextField();,if (javax != null ) srcDirTextField = new javax.swing.JTextField();
FindBugsFrame.java,addSourceDirButton = new javax.swing.JButton();,if (javax != null ) addSourceDirButton = new javax.swing.JButton();
FindBugsFrame.java,sourceDirListLabel = new javax.swing.JLabel();,if (javax != null ) sourceDirListLabel = new javax.swing.JLabel();
FindBugsFrame.java,removeJarButton = new javax.swing.JButton();,if (javax != null ) removeJarButton = new javax.swing.JButton();
FindBugsFrame.java,removeSrcDirButton = new javax.swing.JButton();,if (javax != null ) removeSrcDirButton = new javax.swing.JButton();
FindBugsFrame.java,browseJarButton = new javax.swing.JButton();,if (javax != null ) browseJarButton = new javax.swing.JButton();
FindBugsFrame.java,browseSrcDirButton = new javax.swing.JButton();,if (javax != null ) browseSrcDirButton = new javax.swing.JButton();
FindBugsFrame.java,editProjectLabel = new javax.swing.JLabel();,if (javax != null ) editProjectLabel = new javax.swing.JLabel();
FindBugsFrame.java,findBugsButton = new javax.swing.JButton();,if (javax != null ) findBugsButton = new javax.swing.JButton();
FindBugsFrame.java,jarFileListScrollPane = new javax.swing.JScrollPane();,if (javax != null ) jarFileListScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,jarFileList = new javax.swing.JList();,if (javax != null ) jarFileList = new javax.swing.JList();
FindBugsFrame.java,sourceDirListScrollPane = new javax.swing.JScrollPane();,if (javax != null ) sourceDirListScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,sourceDirList = new javax.swing.JList();,if (javax != null ) sourceDirList = new javax.swing.JList();
FindBugsFrame.java,classpathEntryLabel = new javax.swing.JLabel();,if (javax != null ) classpathEntryLabel = new javax.swing.JLabel();
FindBugsFrame.java,classpathEntryListLabel = new javax.swing.JLabel();,if (javax != null ) classpathEntryListLabel = new javax.swing.JLabel();
FindBugsFrame.java,classpathEntryTextField = new javax.swing.JTextField();,if (javax != null ) classpathEntryTextField = new javax.swing.JTextField();
FindBugsFrame.java,browseClasspathEntryButton = new javax.swing.JButton();,if (javax != null ) browseClasspathEntryButton = new javax.swing.JButton();
FindBugsFrame.java,addClasspathEntryButton = new javax.swing.JButton();,if (javax != null ) addClasspathEntryButton = new javax.swing.JButton();
FindBugsFrame.java,removeClasspathEntryButton = new javax.swing.JButton();,if (javax != null ) removeClasspathEntryButton = new javax.swing.JButton();
FindBugsFrame.java,classpathEntryListScrollPane = new javax.swing.JScrollPane();,if (javax != null ) classpathEntryListScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,classpathEntryList = new javax.swing.JList();,if (javax != null ) classpathEntryList = new javax.swing.JList();
FindBugsFrame.java,sourceUpButton = new javax.swing.JButton();,if (javax != null ) sourceUpButton = new javax.swing.JButton();
FindBugsFrame.java,sourceDownButton = new javax.swing.JButton();,if (javax != null ) sourceDownButton = new javax.swing.JButton();
FindBugsFrame.java,classpathUpButton = new javax.swing.JButton();,if (javax != null ) classpathUpButton = new javax.swing.JButton();
FindBugsFrame.java,classpathDownButton = new javax.swing.JButton();,if (javax != null ) classpathDownButton = new javax.swing.JButton();
FindBugsFrame.java,bugTreePanel = new javax.swing.JPanel();,if (javax != null ) bugTreePanel = new javax.swing.JPanel();
FindBugsFrame.java,bugTreeBugDetailsSplitter = new javax.swing.JSplitPane();,if (javax != null ) bugTreeBugDetailsSplitter = new javax.swing.JSplitPane();
FindBugsFrame.java,groupByTabbedPane = new javax.swing.JTabbedPane();,if (javax != null ) groupByTabbedPane = new javax.swing.JTabbedPane();
FindBugsFrame.java,byClassScrollPane = new javax.swing.JScrollPane();,if (javax != null ) byClassScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,byClassBugTree = new javax.swing.JTree();,if (javax != null ) byClassBugTree = new javax.swing.JTree();
FindBugsFrame.java,byPackageScrollPane = new javax.swing.JScrollPane();,if (javax != null ) byPackageScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,byPackageBugTree = new javax.swing.JTree();,if (javax != null ) byPackageBugTree = new javax.swing.JTree();
FindBugsFrame.java,byBugTypeScrollPane = new javax.swing.JScrollPane();,if (javax != null ) byBugTypeScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,byBugTypeBugTree = new javax.swing.JTree();,if (javax != null ) byBugTypeBugTree = new javax.swing.JTree();
FindBugsFrame.java,byBugCategoryScrollPane = new javax.swing.JScrollPane();,if (javax != null ) byBugCategoryScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,byBugCategoryBugTree = new javax.swing.JTree();,if (javax != null ) byBugCategoryBugTree = new javax.swing.JTree();
FindBugsFrame.java,bySummary = new javax.swing.JScrollPane();,if (javax != null ) bySummary = new javax.swing.JScrollPane();
FindBugsFrame.java,bugSummaryEditorPane = new javax.swing.JEditorPane();,if (javax != null ) bugSummaryEditorPane = new javax.swing.JEditorPane();
FindBugsFrame.java,bugDetailsTabbedPane = new javax.swing.JTabbedPane();,if (javax != null ) bugDetailsTabbedPane = new javax.swing.JTabbedPane();
FindBugsFrame.java,bugDescriptionScrollPane = new javax.swing.JScrollPane();,if (javax != null ) bugDescriptionScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,bugDescriptionEditorPane = new javax.swing.JEditorPane();,if (javax != null ) bugDescriptionEditorPane = new javax.swing.JEditorPane();
FindBugsFrame.java,sourceTextAreaScrollPane = new javax.swing.JScrollPane();,if (javax != null ) sourceTextAreaScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,sourceTextArea = new javax.swing.JTextArea();,if (javax != null ) sourceTextArea = new javax.swing.JTextArea();
FindBugsFrame.java,annotationTextAreaScrollPane = new javax.swing.JScrollPane();,if (javax != null ) annotationTextAreaScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,annotationTextArea = new javax.swing.JTextArea();,if (javax != null ) annotationTextArea = new javax.swing.JTextArea();
FindBugsFrame.java,consoleScrollPane = new javax.swing.JScrollPane();,if (javax != null ) consoleScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,consoleMessageArea = new javax.swing.JTextArea();,if (javax != null ) consoleMessageArea = new javax.swing.JTextArea();
FindBugsFrame.java,urlLabel = new javax.swing.JLabel();,if (javax != null ) urlLabel = new javax.swing.JLabel();
FindBugsFrame.java,logoLabel = new javax.swing.JLabel();,if (javax != null ) logoLabel = new javax.swing.JLabel();
FindBugsFrame.java,growBoxSpacer = new javax.swing.JLabel();,if (javax != null ) growBoxSpacer = new javax.swing.JLabel();
FindBugsFrame.java,theMenuBar = new javax.swing.JMenuBar();,if (javax != null ) theMenuBar = new javax.swing.JMenuBar();
FindBugsFrame.java,fileMenu = new javax.swing.JMenu();,if (javax != null ) fileMenu = new javax.swing.JMenu();
FindBugsFrame.java,newProjectItem = new javax.swing.JMenuItem();,if (javax != null ) newProjectItem = new javax.swing.JMenuItem();
FindBugsFrame.java,openProjectItem = new javax.swing.JMenuItem();,if (javax != null ) openProjectItem = new javax.swing.JMenuItem();
FindBugsFrame.java,recentProjectsMenu = new javax.swing.JMenu();,if (javax != null ) recentProjectsMenu = new javax.swing.JMenu();
FindBugsFrame.java,closeProjectItem = new javax.swing.JMenuItem();,if (javax != null ) closeProjectItem = new javax.swing.JMenuItem();
FindBugsFrame.java,saveProjectItem = new javax.swing.JMenuItem();,if (javax != null ) saveProjectItem = new javax.swing.JMenuItem();
FindBugsFrame.java,saveProjectAsItem = new javax.swing.JMenuItem();,if (javax != null ) saveProjectAsItem = new javax.swing.JMenuItem();
FindBugsFrame.java,reloadProjectItem = new javax.swing.JMenuItem();,if (javax != null ) reloadProjectItem = new javax.swing.JMenuItem();
FindBugsFrame.java,loadBugsItem = new javax.swing.JMenuItem();,if (javax != null ) loadBugsItem = new javax.swing.JMenuItem();
FindBugsFrame.java,saveBugsItem = new javax.swing.JMenuItem();,if (javax != null ) saveBugsItem = new javax.swing.JMenuItem();
FindBugsFrame.java,exitItem = new javax.swing.JMenuItem();,if (javax != null ) exitItem = new javax.swing.JMenuItem();
FindBugsFrame.java,editMenu = new javax.swing.JMenu();,if (javax != null ) editMenu = new javax.swing.JMenu();
FindBugsFrame.java,cutItem = new javax.swing.JMenuItem();,if (javax != null ) cutItem = new javax.swing.JMenuItem();
FindBugsFrame.java,copyItem = new javax.swing.JMenuItem();,if (javax != null ) copyItem = new javax.swing.JMenuItem();
FindBugsFrame.java,pasteItem = new javax.swing.JMenuItem();,if (javax != null ) pasteItem = new javax.swing.JMenuItem();
FindBugsFrame.java,selectAllItem = new javax.swing.JMenuItem();,if (javax != null ) selectAllItem = new javax.swing.JMenuItem();
FindBugsFrame.java,viewMenu = new javax.swing.JMenu();,if (javax != null ) viewMenu = new javax.swing.JMenu();
FindBugsFrame.java,viewConsoleItem = new javax.swing.JCheckBoxMenuItem();,if (javax != null ) viewConsoleItem = new javax.swing.JCheckBoxMenuItem();
FindBugsFrame.java,viewBugDetailsItem = new javax.swing.JCheckBoxMenuItem();,if (javax != null ) viewBugDetailsItem = new javax.swing.JCheckBoxMenuItem();
FindBugsFrame.java,fullDescriptionsItem = new javax.swing.JCheckBoxMenuItem();,if (javax != null ) fullDescriptionsItem = new javax.swing.JCheckBoxMenuItem();
FindBugsFrame.java,filterWarningsMenu = new javax.swing.JMenu();,if (javax != null ) filterWarningsMenu = new javax.swing.JMenu();
FindBugsFrame.java,expPriorityButton = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) expPriorityButton = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,lowPriorityButton = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) lowPriorityButton = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,mediumPriorityButton = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) mediumPriorityButton = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,highPriorityButton = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) highPriorityButton = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,viewProjectItem = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) viewProjectItem = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,viewBugsItem = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) viewBugsItem = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,settingsMenu = new javax.swing.JMenu();,if (javax != null ) settingsMenu = new javax.swing.JMenu();
FindBugsFrame.java,configureDetectorsItem = new javax.swing.JMenuItem();,if (javax != null ) configureDetectorsItem = new javax.swing.JMenuItem();
FindBugsFrame.java,helpMenu = new javax.swing.JMenu();,if (javax != null ) helpMenu = new javax.swing.JMenu();
FindBugsFrame.java,aboutItem = new javax.swing.JMenuItem();,if (javax != null ) aboutItem = new javax.swing.JMenuItem();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
MarkerRulerAction.java,IWorkbenchPage[] pages = FindbugsPlugin.getActiveWorkbenchWindow().getPages();,if (FindbugsPlugin != null ) IWorkbenchPage[] pages = FindbugsPlugin.getActiveWorkbenchWindow().getPages();
MarkerRulerAction.java,String shortDescription = pattern.getShortDescription();,if (pattern != null ) String shortDescription = pattern.getShortDescription();
MarkerRulerAction.java,String detailText = pattern.getDetailText();,if (pattern != null ) String detailText = pattern.getDetailText();
RuntimeExceptionCapture.java,String signature = item.getSignature();,if (item != null ) String signature = item.getSignature();
TableSorter.java,TableCellRenderer defaultRenderer = this.tableHeader.getDefaultRenderer();,if (this != null ) TableCellRenderer defaultRenderer = this.tableHeader.getDefaultRenderer();
TableSorter.java,int tableModelRowCount = tableModel.getRowCount();,if (tableModel != null ) int tableModelRowCount = tableModel.getRowCount();
TableSorter.java,Directive directive = (Directive) it.next();,if (it != null ) Directive directive = (Directive) it.next();
TableSorter.java,JTableHeader h = (JTableHeader) e.getSource();,if (e != null ) JTableHeader h = (JTableHeader) e.getSource();
TableSorter.java,int viewColumn = columnModel.getColumnIndexAtX(e.getX());,if (columnModel != null ) int viewColumn = columnModel.getColumnIndexAtX(e.getX());
TableSorter.java,int column = columnModel.getColumn(viewColumn).getModelIndex();,if (columnModel != null ) int column = columnModel.getColumn(viewColumn).getModelIndex();
ConfigureDetectorsDialog.java,TableSorter sorter = (TableSorter) detectorTable.getModel();,if (detectorTable != null ) TableSorter sorter = (TableSorter) detectorTable.getModel();
ConfigureDetectorsDialog.java,TableModel model = sorter.getTableModel();,if (sorter != null ) TableModel model = sorter.getTableModel();
ConfigureDetectorsDialog.java,TableSorter sorter = (TableSorter) detectorTable.getModel();,if (detectorTable != null ) TableSorter sorter = (TableSorter) detectorTable.getModel();
ConfigureDetectorsDialog.java,TableModel model = sorter.getTableModel();,if (sorter != null ) TableModel model = sorter.getTableModel();
ConfigureDetectorsDialog.java,TableSorter sorter = (TableSorter) detectorTable.getModel();,if (detectorTable != null ) TableSorter sorter = (TableSorter) detectorTable.getModel();
FindBugsFrame.java,priorityThreshold = prefs.getUserDetectorThreshold();,if (prefs != null ) priorityThreshold = prefs.getUserDetectorThreshold();
FindBugsFrame.java,priorityButtonGroup = new javax.swing.ButtonGroup();,if (javax != null ) priorityButtonGroup = new javax.swing.ButtonGroup();
FindBugsFrame.java,consoleSplitter = new javax.swing.JSplitPane();,if (javax != null ) consoleSplitter = new javax.swing.JSplitPane();
FindBugsFrame.java,viewPanel = new javax.swing.JPanel();,if (javax != null ) viewPanel = new javax.swing.JPanel();
FindBugsFrame.java,emptyPanel = new javax.swing.JPanel();,if (javax != null ) emptyPanel = new javax.swing.JPanel();
FindBugsFrame.java,reportPanel = new javax.swing.JPanel();,if (javax != null ) reportPanel = new javax.swing.JPanel();
FindBugsFrame.java,editProjectPanel = new javax.swing.JPanel();,if (javax != null ) editProjectPanel = new javax.swing.JPanel();
FindBugsFrame.java,jarFileLabel = new javax.swing.JLabel();,if (javax != null ) jarFileLabel = new javax.swing.JLabel();
FindBugsFrame.java,jarNameTextField = new javax.swing.JTextField();,if (javax != null ) jarNameTextField = new javax.swing.JTextField();
FindBugsFrame.java,addJarButton = new javax.swing.JButton();,if (javax != null ) addJarButton = new javax.swing.JButton();
FindBugsFrame.java,jarFileListLabel = new javax.swing.JLabel();,if (javax != null ) jarFileListLabel = new javax.swing.JLabel();
FindBugsFrame.java,sourceDirLabel = new javax.swing.JLabel();,if (javax != null ) sourceDirLabel = new javax.swing.JLabel();
FindBugsFrame.java,srcDirTextField = new javax.swing.JTextField();,if (javax != null ) srcDirTextField = new javax.swing.JTextField();
FindBugsFrame.java,addSourceDirButton = new javax.swing.JButton();,if (javax != null ) addSourceDirButton = new javax.swing.JButton();
FindBugsFrame.java,sourceDirListLabel = new javax.swing.JLabel();,if (javax != null ) sourceDirListLabel = new javax.swing.JLabel();
FindBugsFrame.java,removeJarButton = new javax.swing.JButton();,if (javax != null ) removeJarButton = new javax.swing.JButton();
FindBugsFrame.java,removeSrcDirButton = new javax.swing.JButton();,if (javax != null ) removeSrcDirButton = new javax.swing.JButton();
FindBugsFrame.java,browseJarButton = new javax.swing.JButton();,if (javax != null ) browseJarButton = new javax.swing.JButton();
FindBugsFrame.java,browseSrcDirButton = new javax.swing.JButton();,if (javax != null ) browseSrcDirButton = new javax.swing.JButton();
FindBugsFrame.java,editProjectLabel = new javax.swing.JLabel();,if (javax != null ) editProjectLabel = new javax.swing.JLabel();
FindBugsFrame.java,findBugsButton = new javax.swing.JButton();,if (javax != null ) findBugsButton = new javax.swing.JButton();
FindBugsFrame.java,jarFileListScrollPane = new javax.swing.JScrollPane();,if (javax != null ) jarFileListScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,jarFileList = new javax.swing.JList();,if (javax != null ) jarFileList = new javax.swing.JList();
FindBugsFrame.java,sourceDirListScrollPane = new javax.swing.JScrollPane();,if (javax != null ) sourceDirListScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,sourceDirList = new javax.swing.JList();,if (javax != null ) sourceDirList = new javax.swing.JList();
FindBugsFrame.java,classpathEntryLabel = new javax.swing.JLabel();,if (javax != null ) classpathEntryLabel = new javax.swing.JLabel();
FindBugsFrame.java,classpathEntryListLabel = new javax.swing.JLabel();,if (javax != null ) classpathEntryListLabel = new javax.swing.JLabel();
FindBugsFrame.java,classpathEntryTextField = new javax.swing.JTextField();,if (javax != null ) classpathEntryTextField = new javax.swing.JTextField();
FindBugsFrame.java,browseClasspathEntryButton = new javax.swing.JButton();,if (javax != null ) browseClasspathEntryButton = new javax.swing.JButton();
FindBugsFrame.java,addClasspathEntryButton = new javax.swing.JButton();,if (javax != null ) addClasspathEntryButton = new javax.swing.JButton();
FindBugsFrame.java,removeClasspathEntryButton = new javax.swing.JButton();,if (javax != null ) removeClasspathEntryButton = new javax.swing.JButton();
FindBugsFrame.java,classpathEntryListScrollPane = new javax.swing.JScrollPane();,if (javax != null ) classpathEntryListScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,classpathEntryList = new javax.swing.JList();,if (javax != null ) classpathEntryList = new javax.swing.JList();
FindBugsFrame.java,sourceUpButton = new javax.swing.JButton();,if (javax != null ) sourceUpButton = new javax.swing.JButton();
FindBugsFrame.java,sourceDownButton = new javax.swing.JButton();,if (javax != null ) sourceDownButton = new javax.swing.JButton();
FindBugsFrame.java,classpathUpButton = new javax.swing.JButton();,if (javax != null ) classpathUpButton = new javax.swing.JButton();
FindBugsFrame.java,classpathDownButton = new javax.swing.JButton();,if (javax != null ) classpathDownButton = new javax.swing.JButton();
FindBugsFrame.java,bugTreePanel = new javax.swing.JPanel();,if (javax != null ) bugTreePanel = new javax.swing.JPanel();
FindBugsFrame.java,bugTreeBugDetailsSplitter = new javax.swing.JSplitPane();,if (javax != null ) bugTreeBugDetailsSplitter = new javax.swing.JSplitPane();
FindBugsFrame.java,groupByTabbedPane = new javax.swing.JTabbedPane();,if (javax != null ) groupByTabbedPane = new javax.swing.JTabbedPane();
FindBugsFrame.java,byClassScrollPane = new javax.swing.JScrollPane();,if (javax != null ) byClassScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,byClassBugTree = new javax.swing.JTree();,if (javax != null ) byClassBugTree = new javax.swing.JTree();
FindBugsFrame.java,byPackageScrollPane = new javax.swing.JScrollPane();,if (javax != null ) byPackageScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,byPackageBugTree = new javax.swing.JTree();,if (javax != null ) byPackageBugTree = new javax.swing.JTree();
FindBugsFrame.java,byBugTypeScrollPane = new javax.swing.JScrollPane();,if (javax != null ) byBugTypeScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,byBugTypeBugTree = new javax.swing.JTree();,if (javax != null ) byBugTypeBugTree = new javax.swing.JTree();
FindBugsFrame.java,bySummary = new javax.swing.JScrollPane();,if (javax != null ) bySummary = new javax.swing.JScrollPane();
FindBugsFrame.java,bugSummaryEditorPane = new javax.swing.JEditorPane();,if (javax != null ) bugSummaryEditorPane = new javax.swing.JEditorPane();
FindBugsFrame.java,bugDetailsTabbedPane = new javax.swing.JTabbedPane();,if (javax != null ) bugDetailsTabbedPane = new javax.swing.JTabbedPane();
FindBugsFrame.java,bugDescriptionScrollPane = new javax.swing.JScrollPane();,if (javax != null ) bugDescriptionScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,bugDescriptionEditorPane = new javax.swing.JEditorPane();,if (javax != null ) bugDescriptionEditorPane = new javax.swing.JEditorPane();
FindBugsFrame.java,sourceTextAreaScrollPane = new javax.swing.JScrollPane();,if (javax != null ) sourceTextAreaScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,sourceTextArea = new javax.swing.JTextArea();,if (javax != null ) sourceTextArea = new javax.swing.JTextArea();
FindBugsFrame.java,annotationTextAreaScrollPane = new javax.swing.JScrollPane();,if (javax != null ) annotationTextAreaScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,annotationTextArea = new javax.swing.JTextArea();,if (javax != null ) annotationTextArea = new javax.swing.JTextArea();
FindBugsFrame.java,consoleScrollPane = new javax.swing.JScrollPane();,if (javax != null ) consoleScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,consoleMessageArea = new javax.swing.JTextArea();,if (javax != null ) consoleMessageArea = new javax.swing.JTextArea();
FindBugsFrame.java,urlLabel = new javax.swing.JLabel();,if (javax != null ) urlLabel = new javax.swing.JLabel();
FindBugsFrame.java,logoLabel = new javax.swing.JLabel();,if (javax != null ) logoLabel = new javax.swing.JLabel();
FindBugsFrame.java,growBoxSpacer = new javax.swing.JLabel();,if (javax != null ) growBoxSpacer = new javax.swing.JLabel();
FindBugsFrame.java,theMenuBar = new javax.swing.JMenuBar();,if (javax != null ) theMenuBar = new javax.swing.JMenuBar();
FindBugsFrame.java,fileMenu = new javax.swing.JMenu();,if (javax != null ) fileMenu = new javax.swing.JMenu();
FindBugsFrame.java,newProjectItem = new javax.swing.JMenuItem();,if (javax != null ) newProjectItem = new javax.swing.JMenuItem();
FindBugsFrame.java,openProjectItem = new javax.swing.JMenuItem();,if (javax != null ) openProjectItem = new javax.swing.JMenuItem();
FindBugsFrame.java,recentProjectsMenu = new javax.swing.JMenu();,if (javax != null ) recentProjectsMenu = new javax.swing.JMenu();
FindBugsFrame.java,closeProjectItem = new javax.swing.JMenuItem();,if (javax != null ) closeProjectItem = new javax.swing.JMenuItem();
FindBugsFrame.java,saveProjectItem = new javax.swing.JMenuItem();,if (javax != null ) saveProjectItem = new javax.swing.JMenuItem();
FindBugsFrame.java,saveProjectAsItem = new javax.swing.JMenuItem();,if (javax != null ) saveProjectAsItem = new javax.swing.JMenuItem();
FindBugsFrame.java,reloadProjectItem = new javax.swing.JMenuItem();,if (javax != null ) reloadProjectItem = new javax.swing.JMenuItem();
FindBugsFrame.java,loadBugsItem = new javax.swing.JMenuItem();,if (javax != null ) loadBugsItem = new javax.swing.JMenuItem();
FindBugsFrame.java,saveBugsItem = new javax.swing.JMenuItem();,if (javax != null ) saveBugsItem = new javax.swing.JMenuItem();
FindBugsFrame.java,exitItem = new javax.swing.JMenuItem();,if (javax != null ) exitItem = new javax.swing.JMenuItem();
FindBugsFrame.java,editMenu = new javax.swing.JMenu();,if (javax != null ) editMenu = new javax.swing.JMenu();
FindBugsFrame.java,cutItem = new javax.swing.JMenuItem();,if (javax != null ) cutItem = new javax.swing.JMenuItem();
FindBugsFrame.java,copyItem = new javax.swing.JMenuItem();,if (javax != null ) copyItem = new javax.swing.JMenuItem();
FindBugsFrame.java,pasteItem = new javax.swing.JMenuItem();,if (javax != null ) pasteItem = new javax.swing.JMenuItem();
FindBugsFrame.java,selectAllItem = new javax.swing.JMenuItem();,if (javax != null ) selectAllItem = new javax.swing.JMenuItem();
FindBugsFrame.java,viewMenu = new javax.swing.JMenu();,if (javax != null ) viewMenu = new javax.swing.JMenu();
FindBugsFrame.java,viewConsoleItem = new javax.swing.JCheckBoxMenuItem();,if (javax != null ) viewConsoleItem = new javax.swing.JCheckBoxMenuItem();
FindBugsFrame.java,viewBugDetailsItem = new javax.swing.JCheckBoxMenuItem();,if (javax != null ) viewBugDetailsItem = new javax.swing.JCheckBoxMenuItem();
FindBugsFrame.java,fullDescriptionsItem = new javax.swing.JCheckBoxMenuItem();,if (javax != null ) fullDescriptionsItem = new javax.swing.JCheckBoxMenuItem();
FindBugsFrame.java,filterWarningsMenu = new javax.swing.JMenu();,if (javax != null ) filterWarningsMenu = new javax.swing.JMenu();
FindBugsFrame.java,expPriorityButton = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) expPriorityButton = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,lowPriorityButton = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) lowPriorityButton = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,mediumPriorityButton = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) mediumPriorityButton = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,highPriorityButton = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) highPriorityButton = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,viewProjectItem = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) viewProjectItem = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,viewBugsItem = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) viewBugsItem = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,settingsMenu = new javax.swing.JMenu();,if (javax != null ) settingsMenu = new javax.swing.JMenu();
FindBugsFrame.java,configureDetectorsItem = new javax.swing.JMenuItem();,if (javax != null ) configureDetectorsItem = new javax.swing.JMenuItem();
FindBugsFrame.java,helpMenu = new javax.swing.JMenu();,if (javax != null ) helpMenu = new javax.swing.JMenu();
FindBugsFrame.java,aboutItem = new javax.swing.JMenuItem();,if (javax != null ) aboutItem = new javax.swing.JMenuItem();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,priorityButtonGroup = new javax.swing.ButtonGroup();,if (javax != null ) priorityButtonGroup = new javax.swing.ButtonGroup();
FindBugsFrame.java,consoleSplitter = new javax.swing.JSplitPane();,if (javax != null ) consoleSplitter = new javax.swing.JSplitPane();
FindBugsFrame.java,viewPanel = new javax.swing.JPanel();,if (javax != null ) viewPanel = new javax.swing.JPanel();
FindBugsFrame.java,emptyPanel = new javax.swing.JPanel();,if (javax != null ) emptyPanel = new javax.swing.JPanel();
FindBugsFrame.java,reportPanel = new javax.swing.JPanel();,if (javax != null ) reportPanel = new javax.swing.JPanel();
FindBugsFrame.java,editProjectPanel = new javax.swing.JPanel();,if (javax != null ) editProjectPanel = new javax.swing.JPanel();
FindBugsFrame.java,jarFileLabel = new javax.swing.JLabel();,if (javax != null ) jarFileLabel = new javax.swing.JLabel();
FindBugsFrame.java,jarNameTextField = new javax.swing.JTextField();,if (javax != null ) jarNameTextField = new javax.swing.JTextField();
FindBugsFrame.java,addJarButton = new javax.swing.JButton();,if (javax != null ) addJarButton = new javax.swing.JButton();
FindBugsFrame.java,jarFileListLabel = new javax.swing.JLabel();,if (javax != null ) jarFileListLabel = new javax.swing.JLabel();
FindBugsFrame.java,sourceDirLabel = new javax.swing.JLabel();,if (javax != null ) sourceDirLabel = new javax.swing.JLabel();
FindBugsFrame.java,srcDirTextField = new javax.swing.JTextField();,if (javax != null ) srcDirTextField = new javax.swing.JTextField();
FindBugsFrame.java,addSourceDirButton = new javax.swing.JButton();,if (javax != null ) addSourceDirButton = new javax.swing.JButton();
FindBugsFrame.java,sourceDirListLabel = new javax.swing.JLabel();,if (javax != null ) sourceDirListLabel = new javax.swing.JLabel();
FindBugsFrame.java,removeJarButton = new javax.swing.JButton();,if (javax != null ) removeJarButton = new javax.swing.JButton();
FindBugsFrame.java,removeSrcDirButton = new javax.swing.JButton();,if (javax != null ) removeSrcDirButton = new javax.swing.JButton();
FindBugsFrame.java,browseJarButton = new javax.swing.JButton();,if (javax != null ) browseJarButton = new javax.swing.JButton();
FindBugsFrame.java,browseSrcDirButton = new javax.swing.JButton();,if (javax != null ) browseSrcDirButton = new javax.swing.JButton();
FindBugsFrame.java,editProjectLabel = new javax.swing.JLabel();,if (javax != null ) editProjectLabel = new javax.swing.JLabel();
FindBugsFrame.java,findBugsButton = new javax.swing.JButton();,if (javax != null ) findBugsButton = new javax.swing.JButton();
FindBugsFrame.java,jarFileListScrollPane = new javax.swing.JScrollPane();,if (javax != null ) jarFileListScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,jarFileList = new javax.swing.JList();,if (javax != null ) jarFileList = new javax.swing.JList();
FindBugsFrame.java,sourceDirListScrollPane = new javax.swing.JScrollPane();,if (javax != null ) sourceDirListScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,sourceDirList = new javax.swing.JList();,if (javax != null ) sourceDirList = new javax.swing.JList();
FindBugsFrame.java,classpathEntryLabel = new javax.swing.JLabel();,if (javax != null ) classpathEntryLabel = new javax.swing.JLabel();
FindBugsFrame.java,classpathEntryListLabel = new javax.swing.JLabel();,if (javax != null ) classpathEntryListLabel = new javax.swing.JLabel();
FindBugsFrame.java,classpathEntryTextField = new javax.swing.JTextField();,if (javax != null ) classpathEntryTextField = new javax.swing.JTextField();
FindBugsFrame.java,browseClasspathEntryButton = new javax.swing.JButton();,if (javax != null ) browseClasspathEntryButton = new javax.swing.JButton();
FindBugsFrame.java,addClasspathEntryButton = new javax.swing.JButton();,if (javax != null ) addClasspathEntryButton = new javax.swing.JButton();
FindBugsFrame.java,removeClasspathEntryButton = new javax.swing.JButton();,if (javax != null ) removeClasspathEntryButton = new javax.swing.JButton();
FindBugsFrame.java,classpathEntryListScrollPane = new javax.swing.JScrollPane();,if (javax != null ) classpathEntryListScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,classpathEntryList = new javax.swing.JList();,if (javax != null ) classpathEntryList = new javax.swing.JList();
FindBugsFrame.java,sourceUpButton = new javax.swing.JButton();,if (javax != null ) sourceUpButton = new javax.swing.JButton();
FindBugsFrame.java,sourceDownButton = new javax.swing.JButton();,if (javax != null ) sourceDownButton = new javax.swing.JButton();
FindBugsFrame.java,classpathUpButton = new javax.swing.JButton();,if (javax != null ) classpathUpButton = new javax.swing.JButton();
FindBugsFrame.java,classpathDownButton = new javax.swing.JButton();,if (javax != null ) classpathDownButton = new javax.swing.JButton();
FindBugsFrame.java,bugTreePanel = new javax.swing.JPanel();,if (javax != null ) bugTreePanel = new javax.swing.JPanel();
FindBugsFrame.java,bugTreeBugDetailsSplitter = new javax.swing.JSplitPane();,if (javax != null ) bugTreeBugDetailsSplitter = new javax.swing.JSplitPane();
FindBugsFrame.java,groupByTabbedPane = new javax.swing.JTabbedPane();,if (javax != null ) groupByTabbedPane = new javax.swing.JTabbedPane();
FindBugsFrame.java,byClassScrollPane = new javax.swing.JScrollPane();,if (javax != null ) byClassScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,byClassBugTree = new javax.swing.JTree();,if (javax != null ) byClassBugTree = new javax.swing.JTree();
FindBugsFrame.java,byPackageScrollPane = new javax.swing.JScrollPane();,if (javax != null ) byPackageScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,byPackageBugTree = new javax.swing.JTree();,if (javax != null ) byPackageBugTree = new javax.swing.JTree();
FindBugsFrame.java,byBugTypeScrollPane = new javax.swing.JScrollPane();,if (javax != null ) byBugTypeScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,byBugTypeBugTree = new javax.swing.JTree();,if (javax != null ) byBugTypeBugTree = new javax.swing.JTree();
FindBugsFrame.java,bySummary = new javax.swing.JScrollPane();,if (javax != null ) bySummary = new javax.swing.JScrollPane();
FindBugsFrame.java,bugSummaryEditorPane = new javax.swing.JEditorPane();,if (javax != null ) bugSummaryEditorPane = new javax.swing.JEditorPane();
FindBugsFrame.java,bugDetailsTabbedPane = new javax.swing.JTabbedPane();,if (javax != null ) bugDetailsTabbedPane = new javax.swing.JTabbedPane();
FindBugsFrame.java,bugDescriptionScrollPane = new javax.swing.JScrollPane();,if (javax != null ) bugDescriptionScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,bugDescriptionEditorPane = new javax.swing.JEditorPane();,if (javax != null ) bugDescriptionEditorPane = new javax.swing.JEditorPane();
FindBugsFrame.java,sourceTextAreaScrollPane = new javax.swing.JScrollPane();,if (javax != null ) sourceTextAreaScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,sourceTextArea = new javax.swing.JTextArea();,if (javax != null ) sourceTextArea = new javax.swing.JTextArea();
FindBugsFrame.java,annotationTextAreaScrollPane = new javax.swing.JScrollPane();,if (javax != null ) annotationTextAreaScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,annotationTextArea = new javax.swing.JTextArea();,if (javax != null ) annotationTextArea = new javax.swing.JTextArea();
FindBugsFrame.java,consoleScrollPane = new javax.swing.JScrollPane();,if (javax != null ) consoleScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,consoleMessageArea = new javax.swing.JTextArea();,if (javax != null ) consoleMessageArea = new javax.swing.JTextArea();
FindBugsFrame.java,urlLabel = new javax.swing.JLabel();,if (javax != null ) urlLabel = new javax.swing.JLabel();
FindBugsFrame.java,logoLabel = new javax.swing.JLabel();,if (javax != null ) logoLabel = new javax.swing.JLabel();
FindBugsFrame.java,growBoxSpacer = new javax.swing.JLabel();,if (javax != null ) growBoxSpacer = new javax.swing.JLabel();
FindBugsFrame.java,theMenuBar = new javax.swing.JMenuBar();,if (javax != null ) theMenuBar = new javax.swing.JMenuBar();
FindBugsFrame.java,fileMenu = new javax.swing.JMenu();,if (javax != null ) fileMenu = new javax.swing.JMenu();
FindBugsFrame.java,newProjectItem = new javax.swing.JMenuItem();,if (javax != null ) newProjectItem = new javax.swing.JMenuItem();
FindBugsFrame.java,openProjectItem = new javax.swing.JMenuItem();,if (javax != null ) openProjectItem = new javax.swing.JMenuItem();
FindBugsFrame.java,recentProjectsMenu = new javax.swing.JMenu();,if (javax != null ) recentProjectsMenu = new javax.swing.JMenu();
FindBugsFrame.java,closeProjectItem = new javax.swing.JMenuItem();,if (javax != null ) closeProjectItem = new javax.swing.JMenuItem();
FindBugsFrame.java,saveProjectItem = new javax.swing.JMenuItem();,if (javax != null ) saveProjectItem = new javax.swing.JMenuItem();
FindBugsFrame.java,saveProjectAsItem = new javax.swing.JMenuItem();,if (javax != null ) saveProjectAsItem = new javax.swing.JMenuItem();
FindBugsFrame.java,reloadProjectItem = new javax.swing.JMenuItem();,if (javax != null ) reloadProjectItem = new javax.swing.JMenuItem();
FindBugsFrame.java,loadBugsItem = new javax.swing.JMenuItem();,if (javax != null ) loadBugsItem = new javax.swing.JMenuItem();
FindBugsFrame.java,saveBugsItem = new javax.swing.JMenuItem();,if (javax != null ) saveBugsItem = new javax.swing.JMenuItem();
FindBugsFrame.java,exitItem = new javax.swing.JMenuItem();,if (javax != null ) exitItem = new javax.swing.JMenuItem();
FindBugsFrame.java,editMenu = new javax.swing.JMenu();,if (javax != null ) editMenu = new javax.swing.JMenu();
FindBugsFrame.java,cutItem = new javax.swing.JMenuItem();,if (javax != null ) cutItem = new javax.swing.JMenuItem();
FindBugsFrame.java,copyItem = new javax.swing.JMenuItem();,if (javax != null ) copyItem = new javax.swing.JMenuItem();
FindBugsFrame.java,pasteItem = new javax.swing.JMenuItem();,if (javax != null ) pasteItem = new javax.swing.JMenuItem();
FindBugsFrame.java,selectAllItem = new javax.swing.JMenuItem();,if (javax != null ) selectAllItem = new javax.swing.JMenuItem();
FindBugsFrame.java,viewMenu = new javax.swing.JMenu();,if (javax != null ) viewMenu = new javax.swing.JMenu();
FindBugsFrame.java,viewConsoleItem = new javax.swing.JCheckBoxMenuItem();,if (javax != null ) viewConsoleItem = new javax.swing.JCheckBoxMenuItem();
FindBugsFrame.java,viewBugDetailsItem = new javax.swing.JCheckBoxMenuItem();,if (javax != null ) viewBugDetailsItem = new javax.swing.JCheckBoxMenuItem();
FindBugsFrame.java,fullDescriptionsItem = new javax.swing.JCheckBoxMenuItem();,if (javax != null ) fullDescriptionsItem = new javax.swing.JCheckBoxMenuItem();
FindBugsFrame.java,filterWarningsMenu = new javax.swing.JMenu();,if (javax != null ) filterWarningsMenu = new javax.swing.JMenu();
FindBugsFrame.java,expPriorityButton = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) expPriorityButton = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,lowPriorityButton = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) lowPriorityButton = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,mediumPriorityButton = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) mediumPriorityButton = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,highPriorityButton = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) highPriorityButton = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,viewProjectItem = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) viewProjectItem = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,viewBugsItem = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) viewBugsItem = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,settingsMenu = new javax.swing.JMenu();,if (javax != null ) settingsMenu = new javax.swing.JMenu();
FindBugsFrame.java,configureDetectorsItem = new javax.swing.JMenuItem();,if (javax != null ) configureDetectorsItem = new javax.swing.JMenuItem();
FindBugsFrame.java,helpMenu = new javax.swing.JMenu();,if (javax != null ) helpMenu = new javax.swing.JMenu();
FindBugsFrame.java,aboutItem = new javax.swing.JMenuItem();,if (javax != null ) aboutItem = new javax.swing.JMenuItem();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,int[] indices = list.getSelectedIndices();,if (list != null ) int[] indices = list.getSelectedIndices();
FindBugsFrame.java,ListModel m = list.getModel();,if (list != null ) ListModel m = list.getModel();
FindBugsFrame.java,Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();,if (Toolkit != null ) Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();
FindBugsFrame.java,Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();,if (Toolkit != null ) Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();
FindBugsFrame.java,Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();,if (Toolkit != null ) Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();
FindBugsFrame.java,Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();,if (Toolkit != null ) Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();
FindBugsFrame.java,Component old = evt.getOppositeComponent();,if (evt != null ) Component old = evt.getOppositeComponent();
FindBugsFrame.java,selectedComponent = evt.getComponent();,if (evt != null ) selectedComponent = evt.getComponent();
FindBugsFrame.java,Rectangle rect = extent.getBounds();,if (extent != null ) Rectangle rect = extent.getBounds();
FindBugsFrame.java,String dirs = jarNameTextField.getText();,if (jarNameTextField != null ) String dirs = jarNameTextField.getText();
FindBugsFrame.java,String dirs = srcDirTextField.getText();,if (srcDirTextField != null ) String dirs = srcDirTextField.getText();
FindBugsFrame.java,DefaultListModel listModel = (DefaultListModel) sourceDirList.getModel();,if (sourceDirList != null ) DefaultListModel listModel = (DefaultListModel) sourceDirList.getModel();
FindBugsFrame.java,String dirs = classpathEntryTextField.getText();,if (classpathEntryTextField != null ) String dirs = classpathEntryTextField.getText();
FindBugsWorker.java,Set analyzedClassNameSet = bugReporter.getAnalyzedClassNames();,if (bugReporter != null ) Set analyzedClassNameSet = bugReporter.getAnalyzedClassNames();
FindBugsWorker.java,BugInstance oldWarning = (BugInstance) i.next();,if (i != null ) BugInstance oldWarning = (BugInstance) i.next();
FindBugsWorker.java,ClassAnnotation warningClass = oldWarning.getPrimaryClass();,if (oldWarning != null ) ClassAnnotation warningClass = oldWarning.getPrimaryClass();
FindbugsPlugin.java,ResourceBundle bundle = FindbugsPlugin.getDefault().getResourceBundle();,if (FindbugsPlugin != null ) ResourceBundle bundle = FindbugsPlugin.getDefault().getResourceBundle();
FindbugsPlugin.java,"URL u = plugin.getDescriptor().getInstallURL(); //$NON-NLS-1$  // .getBundle().getEntry(""/"");","if ( != null ) URL u = plugin.getDescriptor().getInstallURL(); //$NON-NLS-1$  // .getBundle().getEntry(""/"");"
FindbugsPlugin.java,DetectorFactory factory = (DetectorFactory) iterator.next();,if (iterator != null ) DetectorFactory factory = (DetectorFactory) iterator.next();
FindBugsAction.java,Object element = (Object) iter.next();,if (iter != null ) Object element = (Object) iter.next();
FindBugsAction.java,final Collection files = collector.getFiles();,if (collector != null ) final Collection files = collector.getFiles();
FindBugsAction.java,ProgressMonitorDialog progress = new ProgressMonitorDialog(FindbugsPlugin.getShell());,if (ProgressMonitorDialog(FindbugsPlugin != null ) ProgressMonitorDialog progress = new ProgressMonitorDialog(FindbugsPlugin.getShell());
MarkerRulerAction.java,control = ruler.getControl();,if (ruler != null ) control = ruler.getControl();
MarkerRulerAction.java,control = ruler.getControl();,if (ruler != null ) control = ruler.getControl();
MarkerRulerAction.java,IWorkbenchPage[] pages = FindbugsPlugin.getActiveWorkbenchWindow().getPages();,if (FindbugsPlugin != null ) IWorkbenchPage[] pages = FindbugsPlugin.getActiveWorkbenchWindow().getPages();
MarkerRulerAction.java,String shortDescription = pattern.getShortDescription();,if (pattern != null ) String shortDescription = pattern.getShortDescription();
MarkerRulerAction.java,String detailText = pattern.getDetailText();,if (pattern != null ) String detailText = pattern.getDetailText();
MarkerRulerAction.java,int markerLine = document.getLineOfOffset(position.getOffset());,if (document != null ) int markerLine = document.getLineOfOffset(position.getOffset());
MarkerRulerAction.java,int line = ruler.getLineOfLastMouseButtonActivity();,if (ruler != null ) int line = ruler.getLineOfLastMouseButtonActivity();
MarkerRulerAction.java,IDocumentProvider provider = editor.getDocumentProvider();,if (editor != null ) IDocumentProvider provider = editor.getDocumentProvider();
MarkerRulerAction.java,IDocumentProvider provider = editor.getDocumentProvider();,if (editor != null ) IDocumentProvider provider = editor.getDocumentProvider();
ContainerFilesCollector.java,int childType = child.getType();,if (child != null ) int childType = child.getType();
FilesCollectorFactory.java,IProject project = builder.getProject();,if (builder != null ) IProject project = builder.getProject();
FindBugsBuilder.java,Collection files = collector.getFiles();,if (collector != null ) Collection files = collector.getFiles();
FindBugsWorker.java,String findBugsHome = FindbugsPlugin.getFindBugsEnginePluginLocation();,if (FindbugsPlugin != null ) String findBugsHome = FindbugsPlugin.getFindBugsEnginePluginLocation();
FindBugsWorker.java,Iterator iter = files.iterator();,if (files != null ) Iterator iter = files.iterator();
FindBugsWorker.java,IResource res = (IResource) iter.next();,if (iter != null ) IResource res = (IResource) iter.next();
FindBugsWorker.java,String fileName = res.getLocation().toOSString();,if (res != null ) String fileName = res.getLocation().toOSString();
FindBugsWorker.java,Iterator iterator = DetectorFactoryCollection.instance().factoryIterator();,if (DetectorFactoryCollection != null ) Iterator iterator = DetectorFactoryCollection.instance().factoryIterator();
FindBugsWorker.java,DetectorFactory factory = (DetectorFactory) iterator.next();,if (iterator != null ) DetectorFactory factory = (DetectorFactory) iterator.next();
ResourceDeltaFilesCollector.java,IResource child = childDelta.getResource();,if (childDelta != null ) IResource child = childDelta.getResource();
ResourceDeltaFilesCollector.java,int childType = child.getType();,if (child != null ) int childType = child.getType();
ResourceDeltaFilesCollector.java,int deltaKind = childDelta.getKind();,if (childDelta != null ) int deltaKind = childDelta.getKind();
FindBugsNature.java,IProjectDescription description = getProject().getDescription();,if (getProject() != null ) IProjectDescription description = getProject().getDescription();
FindBugsNature.java,ICommand[] commands = description.getBuildSpec();,if (description != null ) ICommand[] commands = description.getBuildSpec();
FindBugsNature.java,IProjectDescription description = getProject().getDescription();,if (getProject() != null ) IProjectDescription description = getProject().getDescription();
FindBugsNature.java,ICommand newCommand = description.newCommand();,if (description != null ) ICommand newCommand = description.newCommand();
FindBugsNature.java,ICommand[] commands = description.getBuildSpec();,if (description != null ) ICommand[] commands = description.getBuildSpec();
FindBugsNature.java,ICommand[] oldCommands = description.getBuildSpec();,if (description != null ) ICommand[] oldCommands = description.getBuildSpec();
FindbugsPropertyPage.java,Table factoriesTable = availableFactoriesTableViewer.getTable();,if (availableFactoriesTableViewer != null ) Table factoriesTable = availableFactoriesTableViewer.getTable();
FindbugsPropertyPage.java,DetectorFactory factory = (DetectorFactory) iterator.next();,if (iterator != null ) DetectorFactory factory = (DetectorFactory) iterator.next();
FindbugsPropertyPage.java,Object rule = itemList[i].getData();,if (itemList[i] != null ) Object rule = itemList[i].getData();
FindbugsPropertyPage.java,Collection patterns = factory.getReportedBugPatterns();,if (factory != null ) Collection patterns = factory.getReportedBugPatterns();
FindbugsPropertyPage.java,BugPattern pattern = (BugPattern) iter.next();,if (iter != null ) BugPattern pattern = (BugPattern) iter.next();
FindbugsPropertyPage.java,String abbr = pattern.getAbbrev();,if (pattern != null ) String abbr = pattern.getAbbrev();
FindbugsPropertyPage.java,String element = (String) iter.next();,if (iter != null ) String element = (String) iter.next();
FindbugsPropertyPage.java,boolean selection = this.chkEnableFindBugs.getSelection();,if (this != null ) boolean selection = this.chkEnableFindBugs.getSelection();
FindbugsPropertyPage.java,Object factory = itemList[i].getData();,if (itemList[i] != null ) Object factory = itemList[i].getData();
FindbugsPropertyPage.java,Iterator i = factoryList.iterator();,if (factoryList != null ) Iterator i = factoryList.iterator();
FindbugsPropertyPage.java,DetectorFactory rule = (DetectorFactory) i.next();,if (i != null ) DetectorFactory rule = (DetectorFactory) i.next();
FindbugsPropertyPage.java,Collection patterns = factory.getReportedBugPatterns();,if (factory != null ) Collection patterns = factory.getReportedBugPatterns();
FindbugsPropertyPage.java,BugPattern pattern = (BugPattern) iter.next();,if (iter != null ) BugPattern pattern = (BugPattern) iter.next();
Reporter.java,className = bug.getPrimaryClass().getClassName();,if (bug != null ) className = bug.getPrimaryClass().getClassName();
Reporter.java,packageName = bug.getPrimaryClass().getPackageName();,if (bug != null ) packageName = bug.getPrimaryClass().getPackageName();
Reporter.java,startLine = bug.getPrimarySourceLineAnnotation().getStartLine();,if (bug != null ) startLine = bug.getPrimarySourceLineAnnotation().getStartLine();
Reporter.java,SourceLineAnnotation primarySourceLineAnnotation = bug.getPrimarySourceLineAnnotation();,if (bug != null ) SourceLineAnnotation primarySourceLineAnnotation = bug.getPrimarySourceLineAnnotation();
Reporter.java,packageAnnotation = bug.getPrimaryClass();,if (bug != null ) packageAnnotation = bug.getPrimaryClass();
Reporter.java,packageName = packageAnnotation.getPackageName();,if (packageAnnotation != null ) packageName = packageAnnotation.getPackageName();
Reporter.java,qualifiedClassName = packageAnnotation.getClassName();,if (packageAnnotation != null ) qualifiedClassName = packageAnnotation.getClassName();
Reporter.java,packageName = primarySourceLineAnnotation.getPackageName();,if (primarySourceLineAnnotation != null ) packageName = primarySourceLineAnnotation.getPackageName();
Reporter.java,qualifiedClassName = primarySourceLineAnnotation.getClassName();,if (primarySourceLineAnnotation != null ) qualifiedClassName = primarySourceLineAnnotation.getClassName();
Reporter.java,IResource res = type.getUnderlyingResource();,if (type != null ) IResource res = type.getUnderlyingResource();
Reporter.java,sourceFileStr = res.getRawLocation().toOSString();,if (res != null ) sourceFileStr = res.getRawLocation().toOSString();
Reporter.java,IOpenable op = source.getOpenable();,if (source != null ) IOpenable op = source.getOpenable();
Reporter.java,ISourceRange range = source.getSourceRange();,if (source != null ) ISourceRange range = source.getSourceRange();
Reporter.java,IOpenable op = javaElement.getOpenable();,if (javaElement != null ) IOpenable op = javaElement.getOpenable();
Reporter.java,int tokenID = scanner.getNextToken();,if (scanner != null ) int tokenID = scanner.getNextToken();
Reporter.java,tokenID = scanner.getNextToken();,if (scanner != null ) tokenID = scanner.getNextToken();
Reporter.java,int startClassPos = scanner.getCurrentTokenStartPosition();,if (scanner != null ) int startClassPos = scanner.getCurrentTokenStartPosition();
Reporter.java,tokenID = scanner.getNextToken();,if (scanner != null ) tokenID = scanner.getNextToken();
Reporter.java,tokenID = scanner.getNextToken();,if (scanner != null ) tokenID = scanner.getNextToken();
Reporter.java,tokenID = scanner.getNextToken();,if (scanner != null ) tokenID = scanner.getNextToken();
Reporter.java,tokenID = scanner.getNextToken();,if (scanner != null ) tokenID = scanner.getNextToken();
Reporter.java,tokenID = scanner.getNextToken();,if (scanner != null ) tokenID = scanner.getNextToken();
Reporter.java,String elemName = javaElement.getElementName();,if (javaElement != null ) String elemName = javaElement.getElementName();
Reporter.java,int filesNumber = findBugsProject.getFileCount();,if (findBugsProject != null ) int filesNumber = findBugsProject.getFileCount();
Reporter.java,int bugsNbr = getBugList().size();,if (getBugList() != null ) int bugsNbr = getBugList().size();
Reporter.java,String name = clazz.getClassName();,if (clazz != null ) String name = clazz.getClassName();
ProjectUtilities.java,IProjectDescription description = project.getDescription();,if (project != null ) IProjectDescription description = project.getDescription();
ProjectUtilities.java,String[] prevNatures = description.getNatureIds();,if (description != null ) String[] prevNatures = description.getNatureIds();
ProjectUtilities.java,IProjectDescription description = project.getDescription();,if (project != null ) IProjectDescription description = project.getDescription();
ProjectUtilities.java,String[] prevNatures = description.getNatureIds();,if (description != null ) String[] prevNatures = description.getNatureIds();
DetailsView.java,Rectangle size = this.control.getClientArea();,if (this != null ) Rectangle size = this.control.getClientArea();
RuntimeExceptionCapture.java,Method[] methods = clazz.getMethods();,if (clazz != null ) Method[] methods = clazz.getMethods();
RuntimeExceptionCapture.java,ExceptionTable et = method.getExceptionTable();,if (method != null ) ExceptionTable et = method.getExceptionTable();
RuntimeExceptionCapture.java,String[] names = et.getExceptionNames();,if (et != null ) String[] names = et.getExceptionNames();
BugCollectionBugReporter.java,String html = writer.toString();,if (writer != null ) String html = writer.toString();
UseObjectEquals.java,JavaClass cls = item.getJavaClass();,if (item != null ) JavaClass cls = item.getJavaClass();
FindDeadLocalStores.java,int local = store.getIndex();,if (store != null ) int local = store.getIndex();
ExecutionPlan.java,Set<String> remainingDetectorSet = factoryMap.keySet();,if (factoryMap != null ) Set<String> remainingDetectorSet = factoryMap.keySet();
AbstractDepthFirstSearch.java,int numBlocks = cfg.getNumBasicBlocks();,if (cfg != null ) int numBlocks = cfg.getNumBasicBlocks();
AbstractDepthFirstSearch.java,int maxEdgeId = cfg.getMaxEdgeId();,if (cfg != null ) int maxEdgeId = cfg.getMaxEdgeId();
AbstractDepthFirstSearch.java,ArrayList<Visit> stack = new ArrayList<Visit>(cfg.getNumBasicBlocks());,if (ArrayList<Visit>(cfg != null ) ArrayList<Visit> stack = new ArrayList<Visit>(cfg.getNumBasicBlocks());
AbstractDepthFirstSearch.java,Edge edge = visit.getNextEdge();,if (visit != null ) Edge edge = visit.getNextEdge();
AbstractDepthFirstSearch.java,BasicBlock block = visit.getBlock();,if (visit != null ) BasicBlock block = visit.getBlock();
AbstractDepthFirstSearch.java,Iterator<Edge> edgeIter = cfg.edgeIterator();,if (cfg != null ) Iterator<Edge> edgeIter = cfg.edgeIterator();
AbstractDepthFirstSearch.java,Edge edge = edgeIter.next();,if (edgeIter != null ) Edge edge = edgeIter.next();
DepthFirstSearch.java,VertexType v = (VertexType) vertexIter.next();,if (vertexIter != null ) VertexType v = (VertexType) vertexIter.next();
CategorizeBugs.java,Iterator<String> i = map.keySet().iterator();,if (map != null ) Iterator<String> i = map.keySet().iterator();
Reporter.java,startLine = bug.getPrimarySourceLineAnnotation().getStartLine();,if (bug != null ) startLine = bug.getPrimarySourceLineAnnotation().getStartLine();
FindDeadLocalStores.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
FindDeadLocalStores.java,Method[] methodList = javaClass.getMethods();,if (javaClass != null ) Method[] methodList = javaClass.getMethods();
FindDeadLocalStores.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
FindDeadLocalStores.java,int local = store.getIndex();,if (store != null ) int local = store.getIndex();
FindDeadLocalStores.java,Instruction ins = location.getHandle().getInstruction();,if (location != null ) Instruction ins = location.getHandle().getInstruction();
FindMaskedFields.java,JavaClass obj = classContext.getJavaClass();,if (classContext != null ) JavaClass obj = classContext.getJavaClass();
FindMaskedFields.java,Field[] fields = obj.getFields();,if (obj != null ) Field[] fields = obj.getFields();
FindMaskedFields.java,fieldName = fields[f].getName();,if (fields[f] != null ) fieldName = fields[f].getName();
FindMaskedFields.java,fields = superClasses[c].getFields();,if (superClasses[c] != null ) fields = superClasses[c].getFields();
FindMaskedFields.java,fieldName = fld.getName();,if (fld != null ) fieldName = fld.getName();
FindMaskedFields.java,staticMethod = obj.isStatic();,if (obj != null ) staticMethod = obj.isStatic();
FindMaskedFields.java,LocalVariable[] vars = obj.getLocalVariableTable();,if (obj != null ) LocalVariable[] vars = obj.getLocalVariableTable();
FindMaskedFields.java,String varName = var.getName();,if (var != null ) String varName = var.getName();
FindBugs.java,String visitorName = tok.nextToken();,if (tok != null ) String visitorName = tok.nextToken();
DetectorFactoryCollection.java,DetectorFactory[] detectorFactoryList = pluginLoader.getDetectorFactoryList();,if (pluginLoader != null ) DetectorFactory[] detectorFactoryList = pluginLoader.getDetectorFactoryList();
DetectorFactoryCollection.java,BugPattern[] bugPatternList = pluginLoader.getBugPatternList();,if (pluginLoader != null ) BugPattern[] bugPatternList = pluginLoader.getBugPatternList();
DetectorFactoryCollection.java,BugCode[] bugCodeList = pluginLoader.getBugCodeList();,if (pluginLoader != null ) BugCode[] bugCodeList = pluginLoader.getBugCodeList();
FindDeadLocalStores.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
FindDeadLocalStores.java,Method[] methodList = javaClass.getMethods();,if (javaClass != null ) Method[] methodList = javaClass.getMethods();
FindDeadLocalStores.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
FindDeadLocalStores.java,int local = store.getIndex();,if (store != null ) int local = store.getIndex();
FindDeadLocalStores.java,Instruction ins = location.getHandle().getInstruction();,if (location != null ) Instruction ins = location.getHandle().getInstruction();
FindMaskedFields.java,JavaClass obj = classContext.getJavaClass();,if (classContext != null ) JavaClass obj = classContext.getJavaClass();
FindMaskedFields.java,Field[] fields = obj.getFields();,if (obj != null ) Field[] fields = obj.getFields();
FindMaskedFields.java,fieldName = fields[f].getName();,if (fields[f] != null ) fieldName = fields[f].getName();
FindMaskedFields.java,fields = superClasses[c].getFields();,if (superClasses[c] != null ) fields = superClasses[c].getFields();
FindMaskedFields.java,fieldName = fld.getName();,if (fld != null ) fieldName = fld.getName();
FindMaskedFields.java,staticMethod = obj.isStatic();,if (obj != null ) staticMethod = obj.isStatic();
FindMaskedFields.java,LocalVariable[] vars = obj.getLocalVariableTable();,if (obj != null ) LocalVariable[] vars = obj.getLocalVariableTable();
FindMaskedFields.java,String varName = var.getName();,if (var != null ) String varName = var.getName();
SuperfluousInstanceOf.java,String objSignature = lv.getSignature();,if (lv != null ) String objSignature = lv.getSignature();
OpcodeStack.java,register = dbc.getRegisterOperand();,if (dbc != null ) register = dbc.getRegisterOperand();
OpcodeStack.java,register = dbc.getRegisterOperand();,if (dbc != null ) register = dbc.getRegisterOperand();
OpcodeStack.java,String signature = lv.getSignature();,if (lv != null ) String signature = lv.getSignature();
OpcodeStack.java,signature = it.getSignature();,if (it != null ) signature = it.getSignature();
OpcodeStack.java,register = dbc.getRegisterOperand();,if (dbc != null ) register = dbc.getRegisterOperand();
OpcodeStack.java,m = dbc.getMethod();,if (dbc != null ) m = dbc.getMethod();
OpcodeStack.java,signature = lv.getSignature();,if (lv != null ) signature = lv.getSignature();
OpcodeStack.java,m = dbc.getMethod();,if (dbc != null ) m = dbc.getMethod();
OpcodeStack.java,signature = lv.getSignature();,if (lv != null ) signature = lv.getSignature();
OpcodeStack.java,signature = dbc.getSigConstantOperand();,if (dbc != null ) signature = dbc.getSigConstantOperand();
OpcodeStack.java,Constant c = dbc.getConstantRefOperand();,if (dbc != null ) Constant c = dbc.getConstantRefOperand();
OpcodeStack.java,Method m = dbc.getMethod();,if (dbc != null ) Method m = dbc.getMethod();
OpcodeStack.java,Method m = dbc.getMethod();,if (dbc != null ) Method m = dbc.getMethod();
OpcodeStack.java,String signature = dbc.getSigConstantOperand();,if (dbc != null ) String signature = dbc.getSigConstantOperand();
Reporter.java,int filesNumber = findBugsProject.getNumJarFiles();,if (findBugsProject != null ) int filesNumber = findBugsProject.getNumJarFiles();
FindBugsFrame.java,String filename = current.getFileName();,if (current != null ) String filename = current.getFileName();
FindBugsFrame.java,String fileName = project.getFileName();,if (project != null ) String fileName = project.getFileName();
InvalidJUnitTest.java,JavaClass[] superClasses = obj.getSuperClasses();,if (obj != null ) JavaClass[] superClasses = obj.getSuperClasses();
ConvertToARFF.java,String s = tok.nextToken();,if (tok != null ) String s = tok.nextToken();
FindBugsFrame.java,clearItem = new javax.swing.JMenuItem();,if (javax != null ) clearItem = new javax.swing.JMenuItem();
FindBugsFrame.java,String jarFile = jarNameTextField.getText();,if (jarNameTextField != null ) String jarFile = jarNameTextField.getText();
FindBugsFrame.java,String sourceDir = srcDirTextField.getText();,if (srcDirTextField != null ) String sourceDir = srcDirTextField.getText();
FindBugsFrame.java,DefaultListModel listModel = (DefaultListModel) sourceDirList.getModel();,if (sourceDirList != null ) DefaultListModel listModel = (DefaultListModel) sourceDirList.getModel();
FindBugsFrame.java,String classpathEntry = classpathEntryTextField.getText();,if (classpathEntryTextField != null ) String classpathEntry = classpathEntryTextField.getText();
FindBugsFrame.java,consoleSplitter = new javax.swing.JSplitPane();,if (javax != null ) consoleSplitter = new javax.swing.JSplitPane();
FindBugsFrame.java,viewPanel = new javax.swing.JPanel();,if (javax != null ) viewPanel = new javax.swing.JPanel();
FindBugsFrame.java,emptyPanel = new javax.swing.JPanel();,if (javax != null ) emptyPanel = new javax.swing.JPanel();
FindBugsFrame.java,reportPanel = new javax.swing.JPanel();,if (javax != null ) reportPanel = new javax.swing.JPanel();
FindBugsFrame.java,editProjectPanel = new javax.swing.JPanel();,if (javax != null ) editProjectPanel = new javax.swing.JPanel();
FindBugsFrame.java,jarFileLabel = new javax.swing.JLabel();,if (javax != null ) jarFileLabel = new javax.swing.JLabel();
FindBugsFrame.java,jarNameTextField = new javax.swing.JTextField();,if (javax != null ) jarNameTextField = new javax.swing.JTextField();
FindBugsFrame.java,addJarButton = new javax.swing.JButton();,if (javax != null ) addJarButton = new javax.swing.JButton();
FindBugsFrame.java,jarFileListLabel = new javax.swing.JLabel();,if (javax != null ) jarFileListLabel = new javax.swing.JLabel();
FindBugsFrame.java,sourceDirLabel = new javax.swing.JLabel();,if (javax != null ) sourceDirLabel = new javax.swing.JLabel();
FindBugsFrame.java,srcDirTextField = new javax.swing.JTextField();,if (javax != null ) srcDirTextField = new javax.swing.JTextField();
FindBugsFrame.java,addSourceDirButton = new javax.swing.JButton();,if (javax != null ) addSourceDirButton = new javax.swing.JButton();
FindBugsFrame.java,sourceDirListLabel = new javax.swing.JLabel();,if (javax != null ) sourceDirListLabel = new javax.swing.JLabel();
FindBugsFrame.java,removeJarButton = new javax.swing.JButton();,if (javax != null ) removeJarButton = new javax.swing.JButton();
FindBugsFrame.java,removeSrcDirButton = new javax.swing.JButton();,if (javax != null ) removeSrcDirButton = new javax.swing.JButton();
FindBugsFrame.java,browseJarButton = new javax.swing.JButton();,if (javax != null ) browseJarButton = new javax.swing.JButton();
FindBugsFrame.java,browseSrcDirButton = new javax.swing.JButton();,if (javax != null ) browseSrcDirButton = new javax.swing.JButton();
FindBugsFrame.java,editProjectLabel = new javax.swing.JLabel();,if (javax != null ) editProjectLabel = new javax.swing.JLabel();
FindBugsFrame.java,findBugsButton = new javax.swing.JButton();,if (javax != null ) findBugsButton = new javax.swing.JButton();
FindBugsFrame.java,jarFileListScrollPane = new javax.swing.JScrollPane();,if (javax != null ) jarFileListScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,jarFileList = new javax.swing.JList();,if (javax != null ) jarFileList = new javax.swing.JList();
FindBugsFrame.java,sourceDirListScrollPane = new javax.swing.JScrollPane();,if (javax != null ) sourceDirListScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,sourceDirList = new javax.swing.JList();,if (javax != null ) sourceDirList = new javax.swing.JList();
FindBugsFrame.java,classpathEntryLabel = new javax.swing.JLabel();,if (javax != null ) classpathEntryLabel = new javax.swing.JLabel();
FindBugsFrame.java,classpathEntryListLabel = new javax.swing.JLabel();,if (javax != null ) classpathEntryListLabel = new javax.swing.JLabel();
FindBugsFrame.java,classpathEntryTextField = new javax.swing.JTextField();,if (javax != null ) classpathEntryTextField = new javax.swing.JTextField();
FindBugsFrame.java,browseClasspathEntryButton = new javax.swing.JButton();,if (javax != null ) browseClasspathEntryButton = new javax.swing.JButton();
FindBugsFrame.java,addClasspathEntryButton = new javax.swing.JButton();,if (javax != null ) addClasspathEntryButton = new javax.swing.JButton();
FindBugsFrame.java,removeClasspathEntryButton = new javax.swing.JButton();,if (javax != null ) removeClasspathEntryButton = new javax.swing.JButton();
FindBugsFrame.java,classpathEntryListScrollPane = new javax.swing.JScrollPane();,if (javax != null ) classpathEntryListScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,classpathEntryList = new javax.swing.JList();,if (javax != null ) classpathEntryList = new javax.swing.JList();
FindBugsFrame.java,sourceUpButton = new javax.swing.JButton();,if (javax != null ) sourceUpButton = new javax.swing.JButton();
FindBugsFrame.java,sourceDownButton = new javax.swing.JButton();,if (javax != null ) sourceDownButton = new javax.swing.JButton();
FindBugsFrame.java,classpathUpButton = new javax.swing.JButton();,if (javax != null ) classpathUpButton = new javax.swing.JButton();
FindBugsFrame.java,classpathDownButton = new javax.swing.JButton();,if (javax != null ) classpathDownButton = new javax.swing.JButton();
FindBugsFrame.java,bugTreePanel = new javax.swing.JPanel();,if (javax != null ) bugTreePanel = new javax.swing.JPanel();
FindBugsFrame.java,bugTreeBugDetailsSplitter = new javax.swing.JSplitPane();,if (javax != null ) bugTreeBugDetailsSplitter = new javax.swing.JSplitPane();
FindBugsFrame.java,groupByTabbedPane = new javax.swing.JTabbedPane();,if (javax != null ) groupByTabbedPane = new javax.swing.JTabbedPane();
FindBugsFrame.java,byClassScrollPane = new javax.swing.JScrollPane();,if (javax != null ) byClassScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,byClassBugTree = new javax.swing.JTree();,if (javax != null ) byClassBugTree = new javax.swing.JTree();
FindBugsFrame.java,byPackageScrollPane = new javax.swing.JScrollPane();,if (javax != null ) byPackageScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,byPackageBugTree = new javax.swing.JTree();,if (javax != null ) byPackageBugTree = new javax.swing.JTree();
FindBugsFrame.java,byBugTypeScrollPane = new javax.swing.JScrollPane();,if (javax != null ) byBugTypeScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,byBugTypeBugTree = new javax.swing.JTree();,if (javax != null ) byBugTypeBugTree = new javax.swing.JTree();
FindBugsFrame.java,bySummary = new javax.swing.JScrollPane();,if (javax != null ) bySummary = new javax.swing.JScrollPane();
FindBugsFrame.java,bugSummaryEditorPane = new javax.swing.JEditorPane();,if (javax != null ) bugSummaryEditorPane = new javax.swing.JEditorPane();
FindBugsFrame.java,bugDetailsTabbedPane = new javax.swing.JTabbedPane();,if (javax != null ) bugDetailsTabbedPane = new javax.swing.JTabbedPane();
FindBugsFrame.java,bugDescriptionScrollPane = new javax.swing.JScrollPane();,if (javax != null ) bugDescriptionScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,bugDescriptionEditorPane = new javax.swing.JEditorPane();,if (javax != null ) bugDescriptionEditorPane = new javax.swing.JEditorPane();
FindBugsFrame.java,sourceTextAreaScrollPane = new javax.swing.JScrollPane();,if (javax != null ) sourceTextAreaScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,sourceTextArea = new javax.swing.JTextArea();,if (javax != null ) sourceTextArea = new javax.swing.JTextArea();
FindBugsFrame.java,annotationTextAreaScrollPane = new javax.swing.JScrollPane();,if (javax != null ) annotationTextAreaScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,annotationTextArea = new javax.swing.JTextArea();,if (javax != null ) annotationTextArea = new javax.swing.JTextArea();
FindBugsFrame.java,consoleScrollPane = new javax.swing.JScrollPane();,if (javax != null ) consoleScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,consoleMessageArea = new javax.swing.JTextArea();,if (javax != null ) consoleMessageArea = new javax.swing.JTextArea();
FindBugsFrame.java,urlLabel = new javax.swing.JLabel();,if (javax != null ) urlLabel = new javax.swing.JLabel();
FindBugsFrame.java,logoLabel = new javax.swing.JLabel();,if (javax != null ) logoLabel = new javax.swing.JLabel();
FindBugsFrame.java,growBoxSpacer = new javax.swing.JLabel();,if (javax != null ) growBoxSpacer = new javax.swing.JLabel();
FindBugsFrame.java,theMenuBar = new javax.swing.JMenuBar();,if (javax != null ) theMenuBar = new javax.swing.JMenuBar();
FindBugsFrame.java,fileMenu = new javax.swing.JMenu();,if (javax != null ) fileMenu = new javax.swing.JMenu();
FindBugsFrame.java,newProjectItem = new javax.swing.JMenuItem();,if (javax != null ) newProjectItem = new javax.swing.JMenuItem();
FindBugsFrame.java,openProjectItem = new javax.swing.JMenuItem();,if (javax != null ) openProjectItem = new javax.swing.JMenuItem();
FindBugsFrame.java,recentProjectsMenu = new javax.swing.JMenu();,if (javax != null ) recentProjectsMenu = new javax.swing.JMenu();
FindBugsFrame.java,closeProjectItem = new javax.swing.JMenuItem();,if (javax != null ) closeProjectItem = new javax.swing.JMenuItem();
FindBugsFrame.java,saveProjectItem = new javax.swing.JMenuItem();,if (javax != null ) saveProjectItem = new javax.swing.JMenuItem();
FindBugsFrame.java,saveProjectAsItem = new javax.swing.JMenuItem();,if (javax != null ) saveProjectAsItem = new javax.swing.JMenuItem();
FindBugsFrame.java,reloadProjectItem = new javax.swing.JMenuItem();,if (javax != null ) reloadProjectItem = new javax.swing.JMenuItem();
FindBugsFrame.java,loadBugsItem = new javax.swing.JMenuItem();,if (javax != null ) loadBugsItem = new javax.swing.JMenuItem();
FindBugsFrame.java,saveBugsItem = new javax.swing.JMenuItem();,if (javax != null ) saveBugsItem = new javax.swing.JMenuItem();
FindBugsFrame.java,exitItem = new javax.swing.JMenuItem();,if (javax != null ) exitItem = new javax.swing.JMenuItem();
FindBugsFrame.java,viewMenu = new javax.swing.JMenu();,if (javax != null ) viewMenu = new javax.swing.JMenu();
FindBugsFrame.java,viewConsoleItem = new javax.swing.JCheckBoxMenuItem();,if (javax != null ) viewConsoleItem = new javax.swing.JCheckBoxMenuItem();
FindBugsFrame.java,viewBugDetailsItem = new javax.swing.JCheckBoxMenuItem();,if (javax != null ) viewBugDetailsItem = new javax.swing.JCheckBoxMenuItem();
FindBugsFrame.java,fullDescriptionsItem = new javax.swing.JCheckBoxMenuItem();,if (javax != null ) fullDescriptionsItem = new javax.swing.JCheckBoxMenuItem();
FindBugsFrame.java,lowPriorityButton = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) lowPriorityButton = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,mediumPriorityButton = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) mediumPriorityButton = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,highPriorityButton = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) highPriorityButton = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,viewProjectItem = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) viewProjectItem = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,viewBugsItem = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) viewBugsItem = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,settingsMenu = new javax.swing.JMenu();,if (javax != null ) settingsMenu = new javax.swing.JMenu();
FindBugsFrame.java,configureDetectorsItem = new javax.swing.JMenuItem();,if (javax != null ) configureDetectorsItem = new javax.swing.JMenuItem();
FindBugsFrame.java,helpMenu = new javax.swing.JMenu();,if (javax != null ) helpMenu = new javax.swing.JMenu();
FindBugsFrame.java,aboutItem = new javax.swing.JMenuItem();,if (javax != null ) aboutItem = new javax.swing.JMenuItem();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
CloneIdiom.java,ExceptionTable tbl = obj.getExceptionTable();,if (obj != null ) ExceptionTable tbl = obj.getExceptionTable();
FindNullDeref.java,JavaClass jclass = classContext.getJavaClass();,if (classContext != null ) JavaClass jclass = classContext.getJavaClass();
LiveLocalStoreAnalysis.java,this.topBit = methodGen.getMaxLocals();,if (methodGen != null ) this.topBit = methodGen.getMaxLocals();
FindDeadLocalStores.java,Type tos = frame.getTopValue();,if (frame != null ) Type tos = frame.getTopValue();
AboutDialog.java,Runtime rt = Runtime.getRuntime();,if (Runtime != null ) Runtime rt = Runtime.getRuntime();
FindBugsFrame.java,int height = sourceTextArea.getHeight();,if (sourceTextArea != null ) int height = sourceTextArea.getHeight();
QueryBugAnnotations.java,String annotation = bugInstance.getAnnotationText();,if (bugInstance != null ) String annotation = bugInstance.getAnnotationText();
InnerClassAccessMap.java,String fieldSig = field.getFieldSignature();,if (field != null ) String fieldSig = field.getFieldSignature();
CFGPrinter.java,ConstantPoolGen cp = new ConstantPoolGen(cls.getConstantPool());,if (ConstantPoolGen(cls != null ) ConstantPoolGen cp = new ConstantPoolGen(cls.getConstantPool());
CFGPrinter.java,Iterator<InstructionHandle> j = bb.instructionIterator();,if (bb != null ) Iterator<InstructionHandle> j = bb.instructionIterator();
DeadLocalStoreAnalysis.java,this.topBit = methodGen.getMaxLocals();,if (methodGen != null ) this.topBit = methodGen.getMaxLocals();
DeadLocalStoreAnalysis.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
DeadLocalStoreAnalysis.java,int local = load.getIndex();,if (load != null ) int local = load.getIndex();
HTMLBugReporter.java,Document document = docFactory.createDocument();,if (docFactory != null ) Document document = docFactory.createDocument();
ConfigureDetectorsDialog.java,DefaultTableModel model = (DefaultTableModel) detectorTable.getModel();,if (detectorTable != null ) DefaultTableModel model = (DefaultTableModel) detectorTable.getModel();
BugCollection.java,Element element = (Element) i.next();,if (i != null ) Element element = (Element) i.next();
BugCollection.java,String elementName = element.getName();,if (element != null ) String elementName = element.getName();
BugCollection.java,String className = annotation.getClassName();,if (annotation != null ) String className = annotation.getClassName();
BugCollection.java,Iterator i = element.elements().iterator();,if (element != null ) Iterator i = element.elements().iterator();
BugCollection.java,Element child = (Element) i.next();,if (i != null ) Element child = (Element) i.next();
BugCollection.java,String elementName = child.getName();,if (child != null ) String elementName = child.getName();
BugCollection.java,Document document = DocumentHelper.createDocument();,if (DocumentHelper != null ) Document document = DocumentHelper.createDocument();
BugCollection.java,"XMLWriter writer = new XMLWriter(out, OutputFormat.createPrettyPrint());","if (OutputFormat != null ) XMLWriter writer = new XMLWriter(out, OutputFormat.createPrettyPrint());"
BugInstance.java,Iterator i = element.elements().iterator();,if (element != null ) Iterator i = element.elements().iterator();
BugInstance.java,Element child = (Element) i.next();,if (i != null ) Element child = (Element) i.next();
BugInstance.java,String childName = child.getName();,if (child != null ) String childName = child.getName();
BugInstance.java,Iterator<BugAnnotation> i = annotationList.iterator();,if (annotationList != null ) Iterator<BugAnnotation> i = annotationList.iterator();
MethodAnnotation.java,Element child = (Element) i.next();,if (i != null ) Element child = (Element) i.next();
MethodAnnotation.java,String childName = child.getName();,if (child != null ) String childName = child.getName();
Project.java,Iterator i = element.elements().iterator();,if (element != null ) Iterator i = element.elements().iterator();
Project.java,Element child = (Element) i.next();,if (i != null ) Element child = (Element) i.next();
Project.java,String name = child.getName();,if (child != null ) String name = child.getName();
Project.java,String text = child.getText();,if (child != null ) String text = child.getText();
XMLBugReporter.java,Document document = docFactory.createDocument();,if (docFactory != null ) Document document = docFactory.createDocument();
AboutDialog.java,aboutTabPane = new javax.swing.JTabbedPane();,if (javax != null ) aboutTabPane = new javax.swing.JTabbedPane();
AboutDialog.java,aboutScrollPane = new javax.swing.JScrollPane();,if (javax != null ) aboutScrollPane = new javax.swing.JScrollPane();
AboutDialog.java,aboutEditorPane = new javax.swing.JEditorPane();,if (javax != null ) aboutEditorPane = new javax.swing.JEditorPane();
AboutDialog.java,licenseScrollPane = new javax.swing.JScrollPane();,if (javax != null ) licenseScrollPane = new javax.swing.JScrollPane();
AboutDialog.java,licenseEditorPane = new javax.swing.JEditorPane();,if (javax != null ) licenseEditorPane = new javax.swing.JEditorPane();
AboutDialog.java,acknowledgmentsScrollPane = new javax.swing.JScrollPane();,if (javax != null ) acknowledgmentsScrollPane = new javax.swing.JScrollPane();
AboutDialog.java,acknowldgementsEditorPane = new javax.swing.JEditorPane();,if (javax != null ) acknowldgementsEditorPane = new javax.swing.JEditorPane();
AboutDialog.java,okButton = new javax.swing.JButton();,if (javax != null ) okButton = new javax.swing.JButton();
AboutDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
AboutDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
AboutDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,closeProjectItem = new javax.swing.JMenuItem();,if (javax != null ) closeProjectItem = new javax.swing.JMenuItem();
ConfigureDetectorsDialog.java,detectorTableScrollPane = new javax.swing.JScrollPane();,if (javax != null ) detectorTableScrollPane = new javax.swing.JScrollPane();
ConfigureDetectorsDialog.java,detectorTable = new javax.swing.JTable();,if (javax != null ) detectorTable = new javax.swing.JTable();
ConfigureDetectorsDialog.java,detectorDescriptionScrollPane = new javax.swing.JScrollPane();,if (javax != null ) detectorDescriptionScrollPane = new javax.swing.JScrollPane();
ConfigureDetectorsDialog.java,detectorDescription = new javax.swing.JEditorPane();,if (javax != null ) detectorDescription = new javax.swing.JEditorPane();
ConfigureDetectorsDialog.java,okButton = new javax.swing.JButton();,if (javax != null ) okButton = new javax.swing.JButton();
ConfigureDetectorsDialog.java,cancelButton = new javax.swing.JButton();,if (javax != null ) cancelButton = new javax.swing.JButton();
ConfigureDetectorsDialog.java,spacer = new javax.swing.JLabel();,if (javax != null ) spacer = new javax.swing.JLabel();
ConfigureDetectorsDialog.java,restoreDefaultsButton = new javax.swing.JButton();,if (javax != null ) restoreDefaultsButton = new javax.swing.JButton();
ConfigureDetectorsDialog.java,DefaultTableModel m = (DefaultTableModel) detectorTable.getModel();,if (detectorTable != null ) DefaultTableModel m = (DefaultTableModel) detectorTable.getModel();
ConfigureDetectorsDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
ConfigureDetectorsDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
ConfigureDetectorsDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
ConfigureDetectorsDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
ConfigureDetectorsDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
ConfigureDetectorsDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
ConfigureDetectorsDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
Project.java,file = file.getCanonicalFile();,if (file != null ) file = file.getCanonicalFile();
Project.java,file = file.getAbsoluteFile();,if (file != null ) file = file.getAbsoluteFile();
Project.java,File parent = file.getParentFile();,if (file != null ) File parent = file.getParentFile();
Project.java,final Manifest manifest = jar.getManifest();,if (jar != null ) final Manifest manifest = jar.getManifest();
Project.java,final Attributes mainAttrs = manifest.getMainAttributes();,if (manifest != null ) final Attributes mainAttrs = manifest.getMainAttributes();
Project.java,jarClassPath = jarClassPath.trim();,if (jarClassPath != null ) jarClassPath = jarClassPath.trim();
Project.java,final String curJarPath = curJar.toString();,if (curJar != null ) final String curJarPath = curJar.toString();
InnerClassAccessMap.java,String expectedMethodSig = buf.toString();,if (buf != null ) String expectedMethodSig = buf.toString();
FindBugs.java,ClassPath classPath = new ClassPath(buf.toString());,if (ClassPath(buf != null ) ClassPath classPath = new ClassPath(buf.toString());
FindBugs.java,Iterator i = collection.iterator();,if (collection != null ) Iterator i = collection.iterator();
FindBugs.java,String entry = (String) i.next();,if (i != null ) String entry = (String) i.next();
CountBugs.java,int count = entry.getValue().intValue();,if (entry != null ) int count = entry.getValue().intValue();
FindInconsistentSync2.java,XField xfield = entry.getKey();,if (entry != null ) XField xfield = entry.getKey();
FindInconsistentSync2.java,FieldStats stats = entry.getValue();,if (entry != null ) FieldStats stats = entry.getValue();
CategorizeBugs.java,String key = entry.getKey();,if (entry != null ) String key = entry.getKey();
CategorizeBugs.java,Stats stats = entry.getValue();,if (entry != null ) Stats stats = entry.getValue();
SuperfluousInstanceOf.java,repository = org.apache.bcel.Repository.getRepository();,if (org != null ) repository = org.apache.bcel.Repository.getRepository();
FindBugs.java,String fileName = rfsIter.next();,if (rfsIter != null ) String fileName = rfsIter.next();
FindBugs.java,String archive = archiveWorkList.removeFirst();,if (archiveWorkList != null ) String archive = archiveWorkList.removeFirst();
FindBugs.java,this.entries = zipFile.entries();,if (zipFile != null ) this.entries = zipFile.entries();
FindBugs.java,ZipEntry entry = zipStream.getNextEntry();,if (zipStream != null ) ZipEntry entry = zipStream.getNextEntry();
FindBugs.java,entry = zipStream.getNextEntry();,if (zipStream != null ) entry = zipStream.getNextEntry();
FindBugs.java,ZipEntry entry = (ZipEntry) entries.nextElement();,if (entries != null ) ZipEntry entry = (ZipEntry) entries.nextElement();
FindBugs.java,String name = entry.getName();,if (entry != null ) String name = entry.getName();
FindBugs.java,String[] argv = project.getJarFileArray();,if (project != null ) String[] argv = project.getJarFileArray();
SwitchFallthrough.java,lineNumbers = obj.getLineNumberTable();,if (obj != null ) lineNumbers = obj.getLineNumberTable();
FindBugsFrame.java,closeProjectItem = new javax.swing.JMenuItem();,if (javax != null ) closeProjectItem = new javax.swing.JMenuItem();
SourceFinder.java,fileName = fullName.toString();,if (fullName != null ) fileName = fullName.toString();
SourceFinder.java,Iterator<SourceRepository> i = repositoryList.iterator();,if (repositoryList != null ) Iterator<SourceRepository> i = repositoryList.iterator();
InheritanceUnsafeGetResource.java,methodIsFinal = obj.isFinal();,if (obj != null ) methodIsFinal = obj.isFinal();
InheritanceUnsafeGetResource.java,methodIsVisibleToOtherPackages = obj.isPublic() || obj.isProtected();,if (obj != null ) methodIsVisibleToOtherPackages = obj.isPublic() || obj.isProtected();
FindBugsAction.java,final IProject project = javaProject.getProject();,if (javaProject != null ) final IProject project = javaProject.getProject();
FindBugsAction.java,final Collection files = collector.getFiles();,if (collector != null ) final Collection files = collector.getFiles();
FindBugsAction.java,ProgressMonitorDialog progress = new ProgressMonitorDialog(FindbugsPlugin.getShell());,if (ProgressMonitorDialog(FindbugsPlugin != null ) ProgressMonitorDialog progress = new ProgressMonitorDialog(FindbugsPlugin.getShell());
FindbugsPropertyPage.java,this.project = javaProject.getProject();,if (javaProject != null ) this.project = javaProject.getProject();
FindBugs.java,this.entries = zipFile.entries();,if (zipFile != null ) this.entries = zipFile.entries();
FindBugs.java,ZipEntry entry = zipStream.getNextEntry();,if (zipStream != null ) ZipEntry entry = zipStream.getNextEntry();
FindBugs.java,entry = zipStream.getNextEntry();,if (zipStream != null ) entry = zipStream.getNextEntry();
FindBugs.java,ZipEntry entry = (ZipEntry) entries.nextElement();,if (entries != null ) ZipEntry entry = (ZipEntry) entries.nextElement();
FindBugs.java,String name = entry.getName();,if (entry != null ) String name = entry.getName();
FindBugs.java,String fileName = file.getName();,if (file != null ) String fileName = file.getName();
FindBugs.java,this.rfsIter = rfs.fileNameIterator();,if (rfs != null ) this.rfsIter = rfs.fileNameIterator();
FindBugs.java,String fileName = rfsIter.next();,if (rfsIter != null ) String fileName = rfsIter.next();
FindBugs.java,String visitorName = tok.nextToken();,if (tok != null ) String visitorName = tok.nextToken();
FindBugs.java,projectFile = new File(projectFile).getAbsolutePath();,if (File(projectFile) != null ) projectFile = new File(projectFile).getAbsolutePath();
FindBugs.java,BugReporter origBugReporter = bugReporter.getRealBugReporter();,if (bugReporter != null ) BugReporter origBugReporter = bugReporter.getRealBugReporter();
FindBugs.java,String[] argv = project.getJarFileArray();,if (project != null ) String[] argv = project.getJarFileArray();
FindBugs.java,Iterator<DetectorFactory> i = DetectorFactoryCollection.instance().factoryIterator();,if (DetectorFactoryCollection != null ) Iterator<DetectorFactory> i = DetectorFactoryCollection.instance().factoryIterator();
FindBugs.java,ClassPath classPath = new ClassPath(buf.toString());,if (ClassPath(buf != null ) ClassPath classPath = new ClassPath(buf.toString());
FindBugs.java,Iterator i = collection.iterator();,if (collection != null ) Iterator i = collection.iterator();
FindBugs.java,String entry = (String) i.next();,if (i != null ) String entry = (String) i.next();
FindBugs.java,JavaClass jclass = classProducer.getNextClass();,if (classProducer != null ) JavaClass jclass = classProducer.getNextClass();
FindBugs.java,Collection<BugPattern> reported = factory.getReportedBugPatterns();,if (factory != null ) Collection<BugPattern> reported = factory.getReportedBugPatterns();
FindBugs.java,String currentClass = findBugs.getCurrentClass();,if (findBugs != null ) String currentClass = findBugs.getCurrentClass();
FindBugs.java,Project project = commandLine.getProject();,if (commandLine != null ) Project project = commandLine.getProject();
FindBugs.java,int bugCount = findBugs.getBugCount();,if (findBugs != null ) int bugCount = findBugs.getBugCount();
FindBugs.java,int missingClassCount = findBugs.getMissingClassCount();,if (findBugs != null ) int missingClassCount = findBugs.getMissingClassCount();
FindBugs.java,int errorCount = findBugs.getErrorCount();,if (findBugs != null ) int errorCount = findBugs.getErrorCount();
PackageStats.java,Iterator<String> itr = packageClasses.iterator();,if (packageClasses != null ) Iterator<String> itr = packageClasses.iterator();
PackageStats.java,String name = itr.next();,if (itr != null ) String name = itr.next();
PackageStats.java,int numInterfaces = packageInterfaces.size();,if (packageInterfaces != null ) int numInterfaces = packageInterfaces.size();
PackageStats.java,Iterator<BugInstance> itr = packageErrors.iterator();,if (packageErrors != null ) Iterator<BugInstance> itr = packageErrors.iterator();
PackageStats.java,BugInstance bug = itr.next();,if (itr != null ) BugInstance bug = itr.next();
PackageStats.java,String clss = bug.getPrimaryClass().getClassName();,if (bug != null ) String clss = bug.getPrimaryClass().getClassName();
PackageStats.java,Iterator<BugInstance> itr = classErrorList.iterator();,if (classErrorList != null ) Iterator<BugInstance> itr = classErrorList.iterator();
PackageStats.java,BugInstance bug = itr.next();,if (itr != null ) BugInstance bug = itr.next();
PackageStats.java,Iterator<BugInstance> itr = interfaceErrorList.iterator();,if (interfaceErrorList != null ) Iterator<BugInstance> itr = interfaceErrorList.iterator();
PackageStats.java,BugInstance bug = itr.next();,if (itr != null ) BugInstance bug = itr.next();
ProjectStats.java,Iterator<PackageStats> i = packageStatsMap.values().iterator();,if (packageStatsMap != null ) Iterator<PackageStats> i = packageStatsMap.values().iterator();
ProjectStats.java,Document document = DocumentHelper.createDocument();,if (DocumentHelper != null ) Document document = DocumentHelper.createDocument();
ProjectStats.java,"XMLWriter writer = new XMLWriter(out, OutputFormat.createPrettyPrint());","if (OutputFormat != null ) XMLWriter writer = new XMLWriter(out, OutputFormat.createPrettyPrint());"
ProjectStats.java,String summaryXML = summaryOut.toString();,if (summaryOut != null ) String summaryXML = summaryOut.toString();
ProjectStats.java,TransformerFactory tf = TransformerFactory.newInstance();,if (TransformerFactory != null ) TransformerFactory tf = TransformerFactory.newInstance();
ProjectStats.java,Reader rdr = in.getReader();,if (in != null ) Reader rdr = in.getReader();
ProjectStats.java,InputStream is = xsl.getInputStream();,if (xsl != null ) InputStream is = xsl.getInputStream();
Tokenizer.java,int c = reader.read();,if (reader != null ) int c = reader.read();
UserPreferences.java,Map.Entry entry = (Map.Entry) it.next();,if (it != null ) Map.Entry entry = (Map.Entry) it.next();
UserPreferences.java,Iterator<DetectorFactory> i = DetectorFactoryCollection.instance().factoryIterator();,if (DetectorFactoryCollection != null ) Iterator<DetectorFactory> i = DetectorFactoryCollection.instance().factoryIterator();
UserPreferences.java,Boolean enabled = detectorStateList.get( factory.getShortName());,if (factory != null ) Boolean enabled = detectorStateList.get( factory.getShortName());
UserPreferences.java,Iterator<DetectorFactory> i = DetectorFactoryCollection.instance().factoryIterator();,if (DetectorFactoryCollection != null ) Iterator<DetectorFactory> i = DetectorFactoryCollection.instance().factoryIterator();
XDocsBugReporter.java,this.document = DocumentHelper.createDocument();,if (DocumentHelper != null ) this.document = DocumentHelper.createDocument();
XDocsBugReporter.java,"XMLWriter writer = new XMLWriter(out, OutputFormat.createPrettyPrint());","if (OutputFormat != null ) XMLWriter writer = new XMLWriter(out, OutputFormat.createPrettyPrint());"
XDocsBugReporter.java,String className = bugInstance.getPrimaryClass().getClassName();,if (bugInstance != null ) String className = bugInstance.getPrimaryClass().getClassName();
ClassContext.java,Code code = method.getCode();,if (method != null ) Code code = method.getCode();
ClassContext.java,byte[] instructionList = code.getCode();,if (code != null ) byte[] instructionList = code.getCode();
ClassContext.java,SignatureParser parser = new SignatureParser(method.getSignature());,if (SignatureParser(method != null ) SignatureParser parser = new SignatureParser(method.getSignature());
ExceptionHandlerMap.java,int startOfRange = exceptionHandler.getStartPC().getPosition();,if (exceptionHandler != null ) int startOfRange = exceptionHandler.getStartPC().getPosition();
ExceptionHandlerMap.java,int endOfRange = exceptionHandler.getEndPC().getPosition();,if (exceptionHandler != null ) int endOfRange = exceptionHandler.getEndPC().getPosition();
Hierarchy.java,Field[] fieldList = classDefiningField.getFields();,if (classDefiningField != null ) Field[] fieldList = classDefiningField.getFields();
Hierarchy.java,classDefiningField = classDefiningField.getSuperClass();,if (classDefiningField != null ) classDefiningField = classDefiningField.getSuperClass();
InnerClassAccessMap.java,Method[]  methodList = javaClass.getMethods();,if (javaClass != null ) Method[]  methodList = javaClass.getMethods();
LineNumberMap.java,LineNumberTable table = methodGen.getLineNumberTable(methodGen.getConstantPool());,if (methodGen != null ) LineNumberTable table = methodGen.getLineNumberTable(methodGen.getConstantPool());
LineNumberMap.java,InstructionHandle handle = methodGen.getInstructionList().getStart();,if (methodGen != null ) InstructionHandle handle = methodGen.getInstructionList().getStart();
LineNumberMap.java,int bytecodeOffset = handle.getPosition();,if (handle != null ) int bytecodeOffset = handle.getPosition();
LineNumberMap.java,handle = handle.getNext();,if (handle != null ) handle = handle.getNext();
LineNumberMap.java,LineNumber[] entries = table.getLineNumberTable();,if (table != null ) LineNumber[] entries = table.getLineNumberTable();
LineNumberMap.java,int pc = ln.getStartPC();,if (ln != null ) int pc = ln.getStartPC();
ResourceValueAnalysisTestDriver.java,BasicBlock basicBlock = ii.next();,if (ii != null ) BasicBlock basicBlock = ii.next();
TargetEnumeratingVisitor.java,InstructionHandle target = ins.getTarget();,if (ins != null ) InstructionHandle target = ins.getTarget();
TargetEnumeratingVisitor.java,InstructionHandle target = ins.getTarget();,if (ins != null ) InstructionHandle target = ins.getTarget();
TargetEnumeratingVisitor.java,InstructionHandle fallThrough = handle.getNext();,if (handle != null ) InstructionHandle fallThrough = handle.getNext();
TargetEnumeratingVisitor.java,InstructionHandle[] targets = ins.getTargets();,if (ins != null ) InstructionHandle[] targets = ins.getTargets();
TargetEnumeratingVisitor.java,InstructionHandle defaultTarget = ins.getTarget();,if (ins != null ) InstructionHandle defaultTarget = ins.getTarget();
TypeAnalysis.java,CodeExceptionGen exceptionGen = basicBlock.getExceptionGen();,if (basicBlock != null ) CodeExceptionGen exceptionGen = basicBlock.getExceptionGen();
BadlyOverriddenAdapter.java,String methodName = obj.getName();,if (obj != null ) String methodName = obj.getName();
CloneIdiom.java,isFinal = obj.isFinal();,if (obj != null ) isFinal = obj.isFinal();
CloneIdiom.java,JavaClass superClass = obj.getSuperClass();,if (obj != null ) JavaClass superClass = obj.getSuperClass();
CloneIdiom.java,ExceptionTable tbl = obj.getExceptionTable();,if (obj != null ) ExceptionTable tbl = obj.getExceptionTable();
DontCatchIllegalMonitorStateException.java,int type = obj.getCatchType();,if (obj != null ) int type = obj.getCatchType();
DroppedException.java,LineNumberTable  lineNumbers = obj.getLineNumberTable();,if (obj != null ) LineNumberTable  lineNumbers = obj.getLineNumberTable();
DroppedException.java,int handled = exp[i].getHandlerPC();,if (exp[i] != null ) int handled = exp[i].getHandlerPC();
DroppedException.java,int start = exp[i].getStartPC();,if (exp[i] != null ) int start = exp[i].getStartPC();
DroppedException.java,int end = exp[i].getEndPC();,if (exp[i] != null ) int end = exp[i].getEndPC();
DroppedException.java,int cause = exp[i].getCatchType();,if (exp[i] != null ) int cause = exp[i].getCatchType();
DroppedException.java,int line = entries[i].getLineNumber();,if (entries[i] != null ) int line = entries[i].getLineNumber();
DroppedException.java,int secondChoice = entries[i].getLineNumber();,if (entries[i] != null ) int secondChoice = entries[i].getLineNumber();
DroppedException.java,SourceFinder sourceFinder = analysisContext.getSourceFinder();,if (analysisContext != null ) SourceFinder sourceFinder = analysisContext.getSourceFinder();
DroppedException.java,int startLine = srcLine.getStartLine();,if (srcLine != null ) int startLine = srcLine.getStartLine();
DroppedException.java,Token token = tokenizer.next();,if (tokenizer != null ) Token token = tokenizer.next();
DroppedException.java,int kind = token.getKind();,if (token != null ) int kind = token.getKind();
DroppedException.java,eolOfCatchBlockStart = tokenList.size();,if (tokenList != null ) eolOfCatchBlockStart = tokenList.size();
DroppedException.java,Token token = iter.previous();,if (iter != null ) Token token = iter.previous();
DroppedException.java,Token token = iter.next();,if (iter != null ) Token token = iter.next();
DroppedException.java,int type = token.getKind();,if (token != null ) int type = token.getKind();
DroppedException.java,String value = token.getLexeme();,if (token != null ) String value = token.getLexeme();
DumbMethods.java,Code code = method.getCode();,if (method != null ) Code code = method.getCode();
DumbMethods.java,this.exceptionTable = code.getExceptionTable();,if (code != null ) this.exceptionTable = code.getExceptionTable();
DumbMethods.java,int catchTypeIndex = handler.getCatchType();,if (handler != null ) int catchTypeIndex = handler.getCatchType();
DumbMethods.java,ConstantPool cp = getThisClass().getConstantPool();,if (getThisClass() != null ) ConstantPool cp = getThisClass().getConstantPool();
FindBugsSummaryStats.java,this.stats = bugReporter.getProjectStats();,if (bugReporter != null ) this.stats = bugReporter.getProjectStats();
FindHEmismatch.java,int accessFlags = obj.getAccessFlags();,if (obj != null ) int accessFlags = obj.getAccessFlags();
FindHEmismatch.java,visibleOutsidePackage = obj.isPublic() || obj.isProtected();,if (obj != null ) visibleOutsidePackage = obj.isPublic() || obj.isProtected();
FindHEmismatch.java,whereEqual = we.getClassName();,if (we != null ) whereEqual = we.getClassName();
FindHEmismatch.java,classThatDefinesEqualsIsAbstract = we.isAbstract();;,if (we != null ) classThatDefinesEqualsIsAbstract = we.isAbstract();;
FindHEmismatch.java,whereHashCode = wh.getClassName();,if (wh != null ) whereHashCode = wh.getClassName();
FindHEmismatch.java,int accessFlags = obj.getAccessFlags();,if (obj != null ) int accessFlags = obj.getAccessFlags();
FindHEmismatch.java,int accessFlags = obj.getAccessFlags();,if (obj != null ) int accessFlags = obj.getAccessFlags();
FindHEmismatch.java,String name = obj.getName();,if (obj != null ) String name = obj.getName();
FindHEmismatch.java,String sig = obj.getSignature();,if (obj != null ) String sig = obj.getSignature();
FindHEmismatch.java,Code code = obj.getCode();,if (obj != null ) Code code = obj.getCode();
FindInconsistentSync2.java,InstructionHandle ih = (InstructionHandle)it.next();,if ((InstructionHandle)it != null ) InstructionHandle ih = (InstructionHandle)it.next();
FindInconsistentSync2.java,CallGraphNode target = edge.getTarget();,if (edge != null ) CallGraphNode target = edge.getTarget();
FindInconsistentSync2.java,CallGraphNode target = edge.getTarget();,if (edge != null ) CallGraphNode target = edge.getTarget();
FindMaskedFields.java,fields = superClasses[c].getFields();,if (superClasses[c] != null ) fields = superClasses[c].getFields();
FindMaskedFields.java,fieldName = fld.getName();,if (fld != null ) fieldName = fld.getName();
FindMaskedFields.java,LocalVariable[] vars = obj.getLocalVariableTable();,if (obj != null ) LocalVariable[] vars = obj.getLocalVariableTable();
FindMaskedFields.java,String varName = var.getName();,if (var != null ) String varName = var.getName();
FindNakedNotify.java,int flags = obj.getAccessFlags();,if (obj != null ) int flags = obj.getAccessFlags();
FindReturnRef.java,publicClass = obj.isPublic();,if (obj != null ) publicClass = obj.isPublic();
FindUnreleasedLock.java,RepositoryLookupFailureCallback lookupFailureCallback = classContext.getLookupFailureCallback();,if (classContext != null ) RepositoryLookupFailureCallback lookupFailureCallback = classContext.getLookupFailureCallback();
FindUnsyncGet.java,HashSet<String> commonProperties = new HashSet<String>(getMethods.keySet());,if (HashSet<String>(getMethods != null ) HashSet<String> commonProperties = new HashSet<String>(getMethods.keySet());
FindUnsyncGet.java,String propName = (String) i.next();,if (i != null ) String propName = (String) i.next();
FindUnsyncGet.java,int flags = obj.getAccessFlags();,if (obj != null ) int flags = obj.getAccessFlags();
FindUnsyncGet.java,String name = obj.getName();,if (obj != null ) String name = obj.getName();
FindUnsyncGet.java,String sig = obj.getSignature();,if (obj != null ) String sig = obj.getSignature();
InitializationChain.java,Set<String> allClasses = classRequires.keySet();,if (classRequires != null ) Set<String> allClasses = classRequires.keySet();
InitializationChain.java,for(Iterator i = allClasses.iterator(); i.hasNext(); ) {,if ({ != null ) for(Iterator i = allClasses.iterator(); i.hasNext(); ) {
InitializationChain.java,String c = (String) i.next();,if (i != null ) String c = (String) i.next();
InitializationChain.java,for(Iterator j = needs.iterator(); j.hasNext(); ),if () != null ) for(Iterator j = needs.iterator(); j.hasNext(); )
InitializationChain.java,for(Iterator i = emptyClasses.iterator(); i.hasNext(); ) {,if ({ != null ) for(Iterator i = emptyClasses.iterator(); i.hasNext(); ) {
InitializationChain.java,String c = (String) i.next();,if (i != null ) String c = (String) i.next();
InitializationChain.java,Set<String> allClasses = classRequires.keySet();,if (classRequires != null ) Set<String> allClasses = classRequires.keySet();
InvalidJUnitTest.java,JavaClass[] superClasses = obj.getSuperClasses();,if (obj != null ) JavaClass[] superClasses = obj.getSuperClasses();
InvalidJUnitTest.java,methodName = obj.getName();,if (obj != null ) methodName = obj.getName();
LockedFields.java,int flags = obj.getAccessFlags();,if (obj != null ) int flags = obj.getAccessFlags();
LockedFields.java,int flags = obj.getAccessFlags();,if (obj != null ) int flags = obj.getAccessFlags();
LockedFields.java,int total = stats.size();,if (stats != null ) int total = stats.size();
MutableStaticFields.java,int flags = obj.getAccessFlags();,if (obj != null ) int flags = obj.getAccessFlags();
MutableStaticFields.java,int flags = obj.getAccessFlags();,if (obj != null ) int flags = obj.getAccessFlags();
MutableStaticFields.java,for(Iterator i = unsafeValue.iterator(); i.hasNext(); ) {,if ({ != null ) for(Iterator i = unsafeValue.iterator(); i.hasNext(); ) {
Naming.java,String name = obj.getClassName();,if (obj != null ) String name = obj.getClassName();
Naming.java,String name = obj.getClassName();,if (obj != null ) String name = obj.getClassName();
SerializableIdiom.java,Iterator<BugInstance> i = fieldWarningList.iterator();,if (fieldWarningList != null ) Iterator<BugInstance> i = fieldWarningList.iterator();
SerializableIdiom.java,int flags = obj.getAccessFlags();,if (obj != null ) int flags = obj.getAccessFlags();
SerializableIdiom.java,JavaClass superClass = obj.getSuperClass();,if (obj != null ) JavaClass superClass = obj.getSuperClass();
SerializableIdiom.java,int accessFlags = obj.getAccessFlags();,if (obj != null ) int accessFlags = obj.getAccessFlags();
SerializableIdiom.java,int flags = obj.getAccessFlags();,if (obj != null ) int flags = obj.getAccessFlags();
SwitchFallthrough.java,lineNumbers = obj.getLineNumberTable();,if (obj != null ) lineNumbers = obj.getLineNumberTable();
UnreadFields.java,int flags = obj.getAccessFlags();,if (obj != null ) int flags = obj.getAccessFlags();
UnreadFields.java,int flags = obj.getAccessFlags();,if (obj != null ) int flags = obj.getAccessFlags();
AboutDialog.java,String text = buf.toString();,if (buf != null ) String text = buf.toString();
AboutDialog.java,aboutTabPane = new javax.swing.JTabbedPane();,if (javax != null ) aboutTabPane = new javax.swing.JTabbedPane();
AboutDialog.java,aboutScrollPane = new javax.swing.JScrollPane();,if (javax != null ) aboutScrollPane = new javax.swing.JScrollPane();
AboutDialog.java,aboutEditorPane = new javax.swing.JEditorPane();,if (javax != null ) aboutEditorPane = new javax.swing.JEditorPane();
AboutDialog.java,licenseScrollPane = new javax.swing.JScrollPane();,if (javax != null ) licenseScrollPane = new javax.swing.JScrollPane();
AboutDialog.java,licenseEditorPane = new javax.swing.JEditorPane();,if (javax != null ) licenseEditorPane = new javax.swing.JEditorPane();
AboutDialog.java,acknowledgmentsScrollPane = new javax.swing.JScrollPane();,if (javax != null ) acknowledgmentsScrollPane = new javax.swing.JScrollPane();
AboutDialog.java,acknowldgementsEditorPane = new javax.swing.JEditorPane();,if (javax != null ) acknowldgementsEditorPane = new javax.swing.JEditorPane();
AboutDialog.java,okButton = new javax.swing.JButton();,if (javax != null ) okButton = new javax.swing.JButton();
AboutDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
AboutDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
AboutDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
AnalysisErrorDialog.java,errorLabel = new javax.swing.JLabel();,if (javax != null ) errorLabel = new javax.swing.JLabel();
AnalysisErrorDialog.java,errorMessageScrollPane = new javax.swing.JScrollPane();,if (javax != null ) errorMessageScrollPane = new javax.swing.JScrollPane();
AnalysisErrorDialog.java,errorMessageTextArea = new javax.swing.JTextPane();,if (javax != null ) errorMessageTextArea = new javax.swing.JTextPane();
AnalysisErrorDialog.java,leftSpacer = new javax.swing.JLabel();,if (javax != null ) leftSpacer = new javax.swing.JLabel();
AnalysisErrorDialog.java,rightSpacer = new javax.swing.JLabel();,if (javax != null ) rightSpacer = new javax.swing.JLabel();
AnalysisErrorDialog.java,okButton = new javax.swing.JButton();,if (javax != null ) okButton = new javax.swing.JButton();
AnalysisErrorDialog.java,analysisMenuBar = new javax.swing.JMenuBar();,if (javax != null ) analysisMenuBar = new javax.swing.JMenuBar();
AnalysisErrorDialog.java,editMenu = new javax.swing.JMenu();,if (javax != null ) editMenu = new javax.swing.JMenu();
AnalysisErrorDialog.java,selectAllMenuItem = new javax.swing.JMenuItem();,if (javax != null ) selectAllMenuItem = new javax.swing.JMenuItem();
AnalysisErrorDialog.java,copyMenuItem = new javax.swing.JMenuItem();,if (javax != null ) copyMenuItem = new javax.swing.JMenuItem();
AnalysisErrorDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
AnalysisErrorDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
AnalysisErrorDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
AnalysisErrorDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
AnalysisErrorDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
AnalysisErrorDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
AnalysisRun.java,this.logger = frame.getLogger();,if (frame != null ) this.logger = frame.getLogger();
AnalysisRun.java,summary = html.toString();,if (html != null ) summary = html.toString();
AnalysisRun.java,summary = reporter.bugCollection.getSummaryHTML();,if (reporter != null ) summary = reporter.bugCollection.getSummaryHTML();
ConfigureDetectorsDialog.java,detectorTableScrollPane = new javax.swing.JScrollPane();,if (javax != null ) detectorTableScrollPane = new javax.swing.JScrollPane();
ConfigureDetectorsDialog.java,detectorTable = new javax.swing.JTable();,if (javax != null ) detectorTable = new javax.swing.JTable();
ConfigureDetectorsDialog.java,detectorDescriptionScrollPane = new javax.swing.JScrollPane();,if (javax != null ) detectorDescriptionScrollPane = new javax.swing.JScrollPane();
ConfigureDetectorsDialog.java,detectorDescription = new javax.swing.JEditorPane();,if (javax != null ) detectorDescription = new javax.swing.JEditorPane();
ConfigureDetectorsDialog.java,okButton = new javax.swing.JButton();,if (javax != null ) okButton = new javax.swing.JButton();
ConfigureDetectorsDialog.java,cancelButton = new javax.swing.JButton();,if (javax != null ) cancelButton = new javax.swing.JButton();
ConfigureDetectorsDialog.java,spacer = new javax.swing.JLabel();,if (javax != null ) spacer = new javax.swing.JLabel();
ConfigureDetectorsDialog.java,restoreDefaultsButton = new javax.swing.JButton();,if (javax != null ) restoreDefaultsButton = new javax.swing.JButton();
ConfigureDetectorsDialog.java,DefaultTableModel m = (DefaultTableModel)detectorTable.getModel();,if ((DefaultTableModel)detectorTable != null ) DefaultTableModel m = (DefaultTableModel)detectorTable.getModel();
ConfigureDetectorsDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
ConfigureDetectorsDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
ConfigureDetectorsDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
ConfigureDetectorsDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
ConfigureDetectorsDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
ConfigureDetectorsDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
ConfigureDetectorsDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
ConfigureDetectorsDialog.java,Iterator<DetectorFactory> i = DetectorFactoryCollection.instance().factoryIterator();,if (DetectorFactoryCollection != null ) Iterator<DetectorFactory> i = DetectorFactoryCollection.instance().factoryIterator();
ConfigureDetectorsDialog.java,DefaultTableModel model = (DefaultTableModel) detectorTable.getModel();,if (detectorTable != null ) DefaultTableModel model = (DefaultTableModel) detectorTable.getModel();
ConfigureDetectorsDialog.java,int num = factoryList.size();,if (factoryList != null ) int num = factoryList.size();
ConfigureDetectorsDialog.java,ListSelectionModel rowSM = detectorTable.getSelectionModel();,if (detectorTable != null ) ListSelectionModel rowSM = detectorTable.getSelectionModel();
ConfigureDetectorsDialog.java,ListSelectionModel lsm =(ListSelectionModel)e.getSource();,if (=(ListSelectionModel)e != null ) ListSelectionModel lsm =(ListSelectionModel)e.getSource();
ConfigureDetectorsDialog.java,int selectedRow = lsm.getMinSelectionIndex();,if (lsm != null ) int selectedRow = lsm.getMinSelectionIndex();
ConfigureDetectorsDialog.java,String detailHTML = factory.getDetailHTML();,if (factory != null ) String detailHTML = factory.getDetailHTML();
ConfigureDetectorsDialog.java,Iterator<DetectorFactory> i = DetectorFactoryCollection.instance().factoryIterator();,if (DetectorFactoryCollection != null ) Iterator<DetectorFactory> i = DetectorFactoryCollection.instance().factoryIterator();
ConfigureDetectorsDialog.java,DefaultTableModel model = (DefaultTableModel) detectorTable.getModel();,if (detectorTable != null ) DefaultTableModel model = (DefaultTableModel) detectorTable.getModel();
FindBugsFrame.java,ClassLoader classLoader = this.getClass().getClassLoader();,if (this != null ) ClassLoader classLoader = this.getClass().getClassLoader();
FindBugsFrame.java,Object obj = node.getUserObject();,if (node != null ) Object obj = node.getUserObject();
FindBugsFrame.java,String groupType = groupNode.getGroupType();,if (groupNode != null ) String groupType = groupNode.getGroupType();
FindBugsFrame.java,String lhsString = lhs.toString();,if (lhs != null ) String lhsString = lhs.toString();
FindBugsFrame.java,String rhsString = rhs.toString();,if (rhs != null ) String rhsString = rhs.toString();
FindBugsFrame.java,String fileName = file.getName();,if (file != null ) String fileName = file.getName();
FindBugsFrame.java,consoleSplitter = new javax.swing.JSplitPane();,if (javax != null ) consoleSplitter = new javax.swing.JSplitPane();
FindBugsFrame.java,viewPanel = new javax.swing.JPanel();,if (javax != null ) viewPanel = new javax.swing.JPanel();
FindBugsFrame.java,emptyPanel = new javax.swing.JPanel();,if (javax != null ) emptyPanel = new javax.swing.JPanel();
FindBugsFrame.java,reportPanel = new javax.swing.JPanel();,if (javax != null ) reportPanel = new javax.swing.JPanel();
FindBugsFrame.java,editProjectPanel = new javax.swing.JPanel();,if (javax != null ) editProjectPanel = new javax.swing.JPanel();
FindBugsFrame.java,jarFileLabel = new javax.swing.JLabel();,if (javax != null ) jarFileLabel = new javax.swing.JLabel();
FindBugsFrame.java,jarNameTextField = new javax.swing.JTextField();,if (javax != null ) jarNameTextField = new javax.swing.JTextField();
FindBugsFrame.java,addJarButton = new javax.swing.JButton();,if (javax != null ) addJarButton = new javax.swing.JButton();
FindBugsFrame.java,jarFileListLabel = new javax.swing.JLabel();,if (javax != null ) jarFileListLabel = new javax.swing.JLabel();
FindBugsFrame.java,sourceDirLabel = new javax.swing.JLabel();,if (javax != null ) sourceDirLabel = new javax.swing.JLabel();
FindBugsFrame.java,srcDirTextField = new javax.swing.JTextField();,if (javax != null ) srcDirTextField = new javax.swing.JTextField();
FindBugsFrame.java,addSourceDirButton = new javax.swing.JButton();,if (javax != null ) addSourceDirButton = new javax.swing.JButton();
FindBugsFrame.java,sourceDirListLabel = new javax.swing.JLabel();,if (javax != null ) sourceDirListLabel = new javax.swing.JLabel();
FindBugsFrame.java,removeJarButton = new javax.swing.JButton();,if (javax != null ) removeJarButton = new javax.swing.JButton();
FindBugsFrame.java,removeSrcDirButton = new javax.swing.JButton();,if (javax != null ) removeSrcDirButton = new javax.swing.JButton();
FindBugsFrame.java,browseJarButton = new javax.swing.JButton();,if (javax != null ) browseJarButton = new javax.swing.JButton();
FindBugsFrame.java,browseSrcDirButton = new javax.swing.JButton();,if (javax != null ) browseSrcDirButton = new javax.swing.JButton();
FindBugsFrame.java,editProjectLabel = new javax.swing.JLabel();,if (javax != null ) editProjectLabel = new javax.swing.JLabel();
FindBugsFrame.java,findBugsButton = new javax.swing.JButton();,if (javax != null ) findBugsButton = new javax.swing.JButton();
FindBugsFrame.java,jarFileListScrollPane = new javax.swing.JScrollPane();,if (javax != null ) jarFileListScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,jarFileList = new javax.swing.JList();,if (javax != null ) jarFileList = new javax.swing.JList();
FindBugsFrame.java,sourceDirListScrollPane = new javax.swing.JScrollPane();,if (javax != null ) sourceDirListScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,sourceDirList = new javax.swing.JList();,if (javax != null ) sourceDirList = new javax.swing.JList();
FindBugsFrame.java,classpathEntryLabel = new javax.swing.JLabel();,if (javax != null ) classpathEntryLabel = new javax.swing.JLabel();
FindBugsFrame.java,classpathEntryListLabel = new javax.swing.JLabel();,if (javax != null ) classpathEntryListLabel = new javax.swing.JLabel();
FindBugsFrame.java,classpathEntryTextField = new javax.swing.JTextField();,if (javax != null ) classpathEntryTextField = new javax.swing.JTextField();
FindBugsFrame.java,browseClasspathEntryButton = new javax.swing.JButton();,if (javax != null ) browseClasspathEntryButton = new javax.swing.JButton();
FindBugsFrame.java,addClasspathEntryButton = new javax.swing.JButton();,if (javax != null ) addClasspathEntryButton = new javax.swing.JButton();
FindBugsFrame.java,removeClasspathEntryButton = new javax.swing.JButton();,if (javax != null ) removeClasspathEntryButton = new javax.swing.JButton();
FindBugsFrame.java,classpathEntryListScrollPane = new javax.swing.JScrollPane();,if (javax != null ) classpathEntryListScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,classpathEntryList = new javax.swing.JList();,if (javax != null ) classpathEntryList = new javax.swing.JList();
FindBugsFrame.java,sourceUpButton = new javax.swing.JButton();,if (javax != null ) sourceUpButton = new javax.swing.JButton();
FindBugsFrame.java,sourceDownButton = new javax.swing.JButton();,if (javax != null ) sourceDownButton = new javax.swing.JButton();
FindBugsFrame.java,classpathUpButton = new javax.swing.JButton();,if (javax != null ) classpathUpButton = new javax.swing.JButton();
FindBugsFrame.java,classpathDownButton = new javax.swing.JButton();,if (javax != null ) classpathDownButton = new javax.swing.JButton();
FindBugsFrame.java,bugTreePanel = new javax.swing.JPanel();,if (javax != null ) bugTreePanel = new javax.swing.JPanel();
FindBugsFrame.java,bugTreeBugDetailsSplitter = new javax.swing.JSplitPane();,if (javax != null ) bugTreeBugDetailsSplitter = new javax.swing.JSplitPane();
FindBugsFrame.java,groupByTabbedPane = new javax.swing.JTabbedPane();,if (javax != null ) groupByTabbedPane = new javax.swing.JTabbedPane();
FindBugsFrame.java,byClassScrollPane = new javax.swing.JScrollPane();,if (javax != null ) byClassScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,byClassBugTree = new javax.swing.JTree();,if (javax != null ) byClassBugTree = new javax.swing.JTree();
FindBugsFrame.java,byPackageScrollPane = new javax.swing.JScrollPane();,if (javax != null ) byPackageScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,byPackageBugTree = new javax.swing.JTree();,if (javax != null ) byPackageBugTree = new javax.swing.JTree();
FindBugsFrame.java,byBugTypeScrollPane = new javax.swing.JScrollPane();,if (javax != null ) byBugTypeScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,byBugTypeBugTree = new javax.swing.JTree();,if (javax != null ) byBugTypeBugTree = new javax.swing.JTree();
FindBugsFrame.java,bySummary = new javax.swing.JScrollPane();,if (javax != null ) bySummary = new javax.swing.JScrollPane();
FindBugsFrame.java,bugSummaryEditorPane = new javax.swing.JEditorPane();,if (javax != null ) bugSummaryEditorPane = new javax.swing.JEditorPane();
FindBugsFrame.java,bugDetailsTabbedPane = new javax.swing.JTabbedPane();,if (javax != null ) bugDetailsTabbedPane = new javax.swing.JTabbedPane();
FindBugsFrame.java,bugDescriptionScrollPane = new javax.swing.JScrollPane();,if (javax != null ) bugDescriptionScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,bugDescriptionEditorPane = new javax.swing.JEditorPane();,if (javax != null ) bugDescriptionEditorPane = new javax.swing.JEditorPane();
FindBugsFrame.java,sourceTextAreaScrollPane = new javax.swing.JScrollPane();,if (javax != null ) sourceTextAreaScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,sourceTextArea = new javax.swing.JTextArea();,if (javax != null ) sourceTextArea = new javax.swing.JTextArea();
FindBugsFrame.java,annotationTextAreaScrollPane = new javax.swing.JScrollPane();,if (javax != null ) annotationTextAreaScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,annotationTextArea = new javax.swing.JTextArea();,if (javax != null ) annotationTextArea = new javax.swing.JTextArea();
FindBugsFrame.java,consoleScrollPane = new javax.swing.JScrollPane();,if (javax != null ) consoleScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,consoleMessageArea = new javax.swing.JTextArea();,if (javax != null ) consoleMessageArea = new javax.swing.JTextArea();
FindBugsFrame.java,urlLabel = new javax.swing.JLabel();,if (javax != null ) urlLabel = new javax.swing.JLabel();
FindBugsFrame.java,logoLabel = new javax.swing.JLabel();,if (javax != null ) logoLabel = new javax.swing.JLabel();
FindBugsFrame.java,theMenuBar = new javax.swing.JMenuBar();,if (javax != null ) theMenuBar = new javax.swing.JMenuBar();
FindBugsFrame.java,fileMenu = new javax.swing.JMenu();,if (javax != null ) fileMenu = new javax.swing.JMenu();
FindBugsFrame.java,newProjectItem = new javax.swing.JMenuItem();,if (javax != null ) newProjectItem = new javax.swing.JMenuItem();
FindBugsFrame.java,openProjectItem = new javax.swing.JMenuItem();,if (javax != null ) openProjectItem = new javax.swing.JMenuItem();
FindBugsFrame.java,recentProjectsMenu = new javax.swing.JMenu();,if (javax != null ) recentProjectsMenu = new javax.swing.JMenu();
FindBugsFrame.java,saveProjectItem = new javax.swing.JMenuItem();,if (javax != null ) saveProjectItem = new javax.swing.JMenuItem();
FindBugsFrame.java,saveProjectAsItem = new javax.swing.JMenuItem();,if (javax != null ) saveProjectAsItem = new javax.swing.JMenuItem();
FindBugsFrame.java,reloadProjectItem = new javax.swing.JMenuItem();,if (javax != null ) reloadProjectItem = new javax.swing.JMenuItem();
FindBugsFrame.java,closeProjectItem = new javax.swing.JMenuItem();,if (javax != null ) closeProjectItem = new javax.swing.JMenuItem();
FindBugsFrame.java,loadBugsItem = new javax.swing.JMenuItem();,if (javax != null ) loadBugsItem = new javax.swing.JMenuItem();
FindBugsFrame.java,saveBugsItem = new javax.swing.JMenuItem();,if (javax != null ) saveBugsItem = new javax.swing.JMenuItem();
FindBugsFrame.java,exitItem = new javax.swing.JMenuItem();,if (javax != null ) exitItem = new javax.swing.JMenuItem();
FindBugsFrame.java,viewMenu = new javax.swing.JMenu();,if (javax != null ) viewMenu = new javax.swing.JMenu();
FindBugsFrame.java,viewConsoleItem = new javax.swing.JCheckBoxMenuItem();,if (javax != null ) viewConsoleItem = new javax.swing.JCheckBoxMenuItem();
FindBugsFrame.java,viewBugDetailsItem = new javax.swing.JCheckBoxMenuItem();,if (javax != null ) viewBugDetailsItem = new javax.swing.JCheckBoxMenuItem();
FindBugsFrame.java,fullDescriptionsItem = new javax.swing.JCheckBoxMenuItem();,if (javax != null ) fullDescriptionsItem = new javax.swing.JCheckBoxMenuItem();
FindBugsFrame.java,lowPriorityButton = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) lowPriorityButton = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,mediumPriorityButton = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) mediumPriorityButton = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,highPriorityButton = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) highPriorityButton = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,viewProjectItem = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) viewProjectItem = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,viewBugsItem = new javax.swing.JRadioButtonMenuItem();,if (javax != null ) viewBugsItem = new javax.swing.JRadioButtonMenuItem();
FindBugsFrame.java,settingsMenu = new javax.swing.JMenu();,if (javax != null ) settingsMenu = new javax.swing.JMenu();
FindBugsFrame.java,configureDetectorsItem = new javax.swing.JMenuItem();,if (javax != null ) configureDetectorsItem = new javax.swing.JMenuItem();
FindBugsFrame.java,helpMenu = new javax.swing.JMenu();,if (javax != null ) helpMenu = new javax.swing.JMenu();
FindBugsFrame.java,aboutItem = new javax.swing.JMenuItem();,if (javax != null ) aboutItem = new javax.swing.JMenuItem();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,File selectedFile = chooser.getSelectedFile();,if (chooser != null ) File selectedFile = chooser.getSelectedFile();
FindBugsFrame.java,File selectedFile = chooser.getSelectedFile();,if (chooser != null ) File selectedFile = chooser.getSelectedFile();
FindBugsFrame.java,String filename = current.getFileName();,if (current != null ) String filename = current.getFileName();
FindBugsFrame.java,DefaultListModel listModel = (DefaultListModel) classpathEntryList.getModel();,if (classpathEntryList != null ) DefaultListModel listModel = (DefaultListModel) classpathEntryList.getModel();
FindBugsFrame.java,int[] selIndices = classpathEntryList.getSelectedIndices();,if (classpathEntryList != null ) int[] selIndices = classpathEntryList.getSelectedIndices();
FindBugsFrame.java,File[] selectedFileList = chooser.getSelectedFiles();,if (chooser != null ) File[] selectedFileList = chooser.getSelectedFiles();
FindBugsFrame.java,String entry = selectedFileList[i].getPath();,if (selectedFileList[i] != null ) String entry = selectedFileList[i].getPath();
FindBugsFrame.java,DefaultTreeModel bugTreeModel = (DefaultTreeModel) bugTree.getModel();,if (bugTree != null ) DefaultTreeModel bugTreeModel = (DefaultTreeModel) bugTree.getModel();
FindBugsFrame.java,int numRows = bugTree.getRowCount();,if (bugTree != null ) int numRows = bugTree.getRowCount();
FindBugsFrame.java,DefaultMutableTreeNode node = (DefaultMutableTreeNode) path.getLastPathComponent();,if (path != null ) DefaultMutableTreeNode node = (DefaultMutableTreeNode) path.getLastPathComponent();
FindBugsFrame.java,String propertyName = evt.getPropertyName();,if (evt != null ) String propertyName = evt.getPropertyName();
FindBugsFrame.java,File file = chooser.getSelectedFile();,if (chooser != null ) File file = chooser.getSelectedFile();
FindBugsFrame.java,String propertyName = evt.getPropertyName();,if (evt != null ) String propertyName = evt.getPropertyName();
FindBugsFrame.java,Exception e = dialog.getException();,if (dialog != null ) Exception e = dialog.getException();
FindBugsFrame.java,File[] selectedFileList = chooser.getSelectedFiles();,if (chooser != null ) File[] selectedFileList = chooser.getSelectedFiles();
FindBugsFrame.java,String entry = selectedFileList[i].getPath();,if (selectedFileList[i] != null ) String entry = selectedFileList[i].getPath();
FindBugsFrame.java,File[] selectedFileList = chooser.getSelectedFiles();,if (chooser != null ) File[] selectedFileList = chooser.getSelectedFiles();
FindBugsFrame.java,String entry = selectedFileList[i].getPath();,if (selectedFileList[i] != null ) String entry = selectedFileList[i].getPath();
FindBugsFrame.java,DefaultListModel listModel = (DefaultListModel) sourceDirList.getModel();,if (sourceDirList != null ) DefaultListModel listModel = (DefaultListModel) sourceDirList.getModel();
FindBugsFrame.java,int[] selIndices = sourceDirList.getSelectedIndices();,if (sourceDirList != null ) int[] selIndices = sourceDirList.getSelectedIndices();
FindBugsFrame.java,DefaultListModel listModel = (DefaultListModel) jarFileList.getModel();,if (jarFileList != null ) DefaultListModel listModel = (DefaultListModel) jarFileList.getModel();
FindBugsFrame.java,int[] selIndices = jarFileList.getSelectedIndices();,if (jarFileList != null ) int[] selIndices = jarFileList.getSelectedIndices();
FindBugsFrame.java,d = comp.getPreferredSize();,if (comp != null ) d = comp.getPreferredSize();
FindBugsFrame.java,JMenuItem recentProjectItem = (JMenuItem)evt.getSource();,if ((JMenuItem)evt != null ) JMenuItem recentProjectItem = (JMenuItem)evt.getSource();
FindBugsFrame.java,File file = new File(recentProjectItem.getText());,if (File(recentProjectItem != null ) File file = new File(recentProjectItem.getText());
FindBugsFrame.java,int[] selIndices = entryList.getSelectedIndices();,if (entryList != null ) int[] selIndices = entryList.getSelectedIndices();
FindBugsFrame.java,DefaultListModel model = (DefaultListModel)entryList.getModel();,if ((DefaultListModel)entryList != null ) DefaultListModel model = (DefaultListModel)entryList.getModel();
FindBugsFrame.java,int[] selIndices = entryList.getSelectedIndices();,if (entryList != null ) int[] selIndices = entryList.getSelectedIndices();
FindBugsFrame.java,DefaultListModel model = (DefaultListModel)entryList.getModel();,if ((DefaultListModel)entryList != null ) DefaultListModel model = (DefaultListModel)entryList.getModel();
FindBugsFrame.java,int lastInsertPos = model.getSize();,if (model != null ) int lastInsertPos = model.getSize();
FindBugsFrame.java,int numEntries = project.getNumAuxClasspathEntries();,if (project != null ) int numEntries = project.getNumAuxClasspathEntries();
FindBugsFrame.java,DefaultListModel model = (DefaultListModel)classpathEntryList.getModel();,if ((DefaultListModel)classpathEntryList != null ) DefaultListModel model = (DefaultListModel)classpathEntryList.getModel();
FindBugsFrame.java,int numEntries = project.getNumSourceDirs();,if (project != null ) int numEntries = project.getNumSourceDirs();
FindBugsFrame.java,DefaultListModel model = (DefaultListModel)sourceDirList.getModel();,if ((DefaultListModel)sourceDirList != null ) DefaultListModel model = (DefaultListModel)sourceDirList.getModel();
FindBugsFrame.java,viewPanelLayout = (CardLayout) viewPanel.getLayout();,if (viewPanel != null ) viewPanelLayout = (CardLayout) viewPanel.getLayout();
FindBugsFrame.java,Rectangle rect = extent.getBounds();,if (extent != null ) Rectangle rect = extent.getBounds();
FindBugsFrame.java,ClassLoader classLoader = this.getClass().getClassLoader();,if (this != null ) ClassLoader classLoader = this.getClass().getClassLoader();
FindBugsFrame.java,UserPreferences prefs = UserPreferences.getUserPreferences();,if (UserPreferences != null ) UserPreferences prefs = UserPreferences.getUserPreferences();
FindBugsFrame.java,TreePath selPath = tree.getSelectionPath();,if (tree != null ) TreePath selPath = tree.getSelectionPath();
FindBugsFrame.java,Object[] nodeList = selPath.getPath();,if (selPath != null ) Object[] nodeList = selPath.getPath();
FindBugsFrame.java,Object nodeInfo = node.getUserObject();,if (node != null ) Object nodeInfo = node.getUserObject();
FindBugsFrame.java,Integer location = (Integer) evt.getNewValue();,if (evt != null ) Integer location = (Integer) evt.getNewValue();
FindBugsFrame.java,int height = splitter.getHeight();,if (splitter != null ) int height = splitter.getHeight();
FindBugsFrame.java,JScrollPane selected = (JScrollPane) groupByTabbedPane.getSelectedComponent();,if (groupByTabbedPane != null ) JScrollPane selected = (JScrollPane) groupByTabbedPane.getSelectedComponent();
FindBugsFrame.java,Object view = selected.getViewport().getView();,if (selected != null ) Object view = selected.getViewport().getView();
FindBugsFrame.java,String fileName = project.getFileName();,if (project != null ) String fileName = project.getFileName();
FindBugsFrame.java,file = chooser.getSelectedFile();,if (chooser != null ) file = chooser.getSelectedFile();
FindBugsFrame.java,fileName = Project.transformFilename(file.getPath());,if (Project != null ) fileName = Project.transformFilename(file.getPath());
FindBugsFrame.java,UserPreferences prefs = UserPreferences.getUserPreferences();,if (UserPreferences != null ) UserPreferences prefs = UserPreferences.getUserPreferences();
FindBugsFrame.java,DefaultListModel jarListModel = (DefaultListModel) jarFileList.getModel();,if (jarFileList != null ) DefaultListModel jarListModel = (DefaultListModel) jarFileList.getModel();
FindBugsFrame.java,DefaultListModel srcDirListModel = (DefaultListModel) sourceDirList.getModel();,if (sourceDirList != null ) DefaultListModel srcDirListModel = (DefaultListModel) sourceDirList.getModel();
FindBugsFrame.java,DefaultListModel classpathEntryListModel = (DefaultListModel) classpathEntryList.getModel();,if (classpathEntryList != null ) DefaultListModel classpathEntryListModel = (DefaultListModel) classpathEntryList.getModel();
FindBugsFrame.java,Cursor orig = this.getCursor();,if (this != null ) Cursor orig = this.getCursor();
FindBugsFrame.java,final DefaultMutableTreeNode bugRootNode = (DefaultMutableTreeNode) bugTreeModel.getRoot();,if (bugTreeModel != null ) final DefaultMutableTreeNode bugRootNode = (DefaultMutableTreeNode) bugTreeModel.getRoot();
FindBugsFrame.java,groupName = member.getPrimaryClass().getClassName();,if (member != null ) groupName = member.getPrimaryClass().getClassName();
FindBugsFrame.java,groupName = member.getPrimaryClass().getPackageName();,if (member != null ) groupName = member.getPrimaryClass().getPackageName();
FindBugsFrame.java,String desc = member.toString();,if (member != null ) String desc = member.toString();
FindBugsFrame.java,int count = currentGroup.getMemberCount();,if (currentGroup != null ) int count = currentGroup.getMemberCount();
FindBugsFrame.java,Iterator j = member.annotationIterator();,if (member != null ) Iterator j = member.annotationIterator();
FindBugsFrame.java,BugAnnotation annotation = (BugAnnotation) j.next();,if (j != null ) BugAnnotation annotation = (BugAnnotation) j.next();
FindBugsFrame.java,String jarFile = jarNameTextField.getText();,if (jarNameTextField != null ) String jarFile = jarNameTextField.getText();
FindBugsFrame.java,DefaultListModel listModel = (DefaultListModel)  sourceDirList.getModel();,if (sourceDirList != null ) DefaultListModel listModel = (DefaultListModel)  sourceDirList.getModel();
FindBugsFrame.java,DefaultListModel listModel = (DefaultListModel)  jarFileList.getModel();,if (jarFileList != null ) DefaultListModel listModel = (DefaultListModel)  jarFileList.getModel();
FindBugsFrame.java,String sourceDir = srcDirTextField.getText();,if (srcDirTextField != null ) String sourceDir = srcDirTextField.getText();
FindBugsFrame.java,DefaultListModel listModel = (DefaultListModel) sourceDirList.getModel();,if (sourceDirList != null ) DefaultListModel listModel = (DefaultListModel) sourceDirList.getModel();
FindBugsFrame.java,String classpathEntry = classpathEntryTextField.getText();,if (classpathEntryTextField != null ) String classpathEntry = classpathEntryTextField.getText();
FindBugsFrame.java,DefaultListModel listModel = (DefaultListModel) classpathEntryList.getModel();,if (classpathEntryList != null ) DefaultListModel listModel = (DefaultListModel) classpathEntryList.getModel();
FindBugsFrame.java,TreePath selPath = bugTree.getSelectionPath();,if (bugTree != null ) TreePath selPath = bugTree.getSelectionPath();
FindBugsFrame.java,srcLine = selected.getPrimarySourceLineAnnotation();,if (selected != null ) srcLine = selected.getPrimarySourceLineAnnotation();
FindBugsFrame.java,String sourceFile = srcLine.getSourceFile();,if (srcLine != null ) String sourceFile = srcLine.getSourceFile();
FindBugsFrame.java,int endLine = srcLine.getEndLine();,if (srcLine != null ) int endLine = srcLine.getEndLine();
FindBugsFrame.java,JViewport viewport = sourceTextAreaScrollPane.getViewport();,if (sourceTextAreaScrollPane != null ) JViewport viewport = sourceTextAreaScrollPane.getViewport();
FindBugsFrame.java,Rectangle viewportRect = viewport.getViewRect();,if (viewport != null ) Rectangle viewportRect = viewport.getViewRect();
FindBugsFrame.java,int height = sourceTextArea.getHeight();,if (sourceTextArea != null ) int height = sourceTextArea.getHeight();
FindBugsFrame.java,String bugDetailsKey = bugInstance.getType();,if (bugInstance != null ) String bugDetailsKey = bugInstance.getType();
FindBugsFrame.java,String text = annotationTextArea.getText();,if (annotationTextArea != null ) String text = annotationTextArea.getText();
FindBugsFrame.java,File selectedFile = dialog.getSelectedFile();,if (dialog != null ) File selectedFile = dialog.getSelectedFile();
FindBugsFrame.java,currentDirectory = selectedFile.getParentFile();,if (selectedFile != null ) currentDirectory = selectedFile.getParentFile();
FindBugsFrame.java,File parent = pickedFile.getParentFile();,if (pickedFile != null ) File parent = pickedFile.getParentFile();
FindBugsFrame.java,theme = UIManager.getSystemLookAndFeelClassName();,if (UIManager != null ) theme = UIManager.getSystemLookAndFeelClassName();
Grouper.java,Iterator<ElementType> i = collection.iterator();,if (collection != null ) Iterator<ElementType> i = collection.iterator();
RunAnalysisDialog.java,findBugsLabel = new javax.swing.JLabel();,if (javax != null ) findBugsLabel = new javax.swing.JLabel();
RunAnalysisDialog.java,countLabel = new javax.swing.JLabel();,if (javax != null ) countLabel = new javax.swing.JLabel();
RunAnalysisDialog.java,progressLabel = new javax.swing.JLabel();,if (javax != null ) progressLabel = new javax.swing.JLabel();
RunAnalysisDialog.java,progressBar = new javax.swing.JProgressBar();,if (javax != null ) progressBar = new javax.swing.JProgressBar();
RunAnalysisDialog.java,cancelButton = new javax.swing.JButton();,if (javax != null ) cancelButton = new javax.swing.JButton();
RunAnalysisDialog.java,stageLabel = new javax.swing.JLabel();,if (javax != null ) stageLabel = new javax.swing.JLabel();
RunAnalysisDialog.java,stageNameLabel = new javax.swing.JLabel();,if (javax != null ) stageNameLabel = new javax.swing.JLabel();
RunAnalysisDialog.java,topVerticalFiller = new javax.swing.JLabel();,if (javax != null ) topVerticalFiller = new javax.swing.JLabel();
RunAnalysisDialog.java,bottomVerticalFiller = new javax.swing.JLabel();,if (javax != null ) bottomVerticalFiller = new javax.swing.JLabel();
RunAnalysisDialog.java,countValueLabel = new javax.swing.JLabel();,if (javax != null ) countValueLabel = new javax.swing.JLabel();
RunAnalysisDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RunAnalysisDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RunAnalysisDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RunAnalysisDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RunAnalysisDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RunAnalysisDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RunAnalysisDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RunAnalysisDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RunAnalysisDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RunAnalysisDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RunAnalysisDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
DismantleBytecode.java,codeBytes = obj.getCode();,if (obj != null ) codeBytes = obj.getCode();
DismantleBytecode.java,lineNumberTable = obj.getLineNumberTable();,if (obj != null ) lineNumberTable = obj.getLineNumberTable();
DismantleBytecode.java,opcode = byteStream.readUnsignedByte();,if (byteStream != null ) opcode = byteStream.readUnsignedByte();
DismantleBytecode.java,defaultSwitchOffset = byteStream.readInt();,if (byteStream != null ) defaultSwitchOffset = byteStream.readInt();
DismantleBytecode.java,int npairs = byteStream.readInt();,if (byteStream != null ) int npairs = byteStream.readInt();
DismantleBytecode.java,switchLabels[o] = byteStream.readInt();,if (byteStream != null ) switchLabels[o] = byteStream.readInt();
DismantleBytecode.java,switchOffsets[o] = byteStream.readInt();,if (byteStream != null ) switchOffsets[o] = byteStream.readInt();
DismantleBytecode.java,defaultSwitchOffset = byteStream.readInt();,if (byteStream != null ) defaultSwitchOffset = byteStream.readInt();
DismantleBytecode.java,switchLow = byteStream.readInt();,if (byteStream != null ) switchLow = byteStream.readInt();
DismantleBytecode.java,switchHigh = byteStream.readInt();,if (byteStream != null ) switchHigh = byteStream.readInt();
DismantleBytecode.java,switchOffsets[o] = byteStream.readInt();,if (byteStream != null ) switchOffsets[o] = byteStream.readInt();
DismantleBytecode.java,opcode = byteStream.readUnsignedByte();,if (byteStream != null ) opcode = byteStream.readUnsignedByte();
DismantleBytecode.java,registerOperand = byteStream.readUnsignedShort();,if (byteStream != null ) registerOperand = byteStream.readUnsignedShort();
DismantleBytecode.java,registerOperand = byteStream.readUnsignedShort();,if (byteStream != null ) registerOperand = byteStream.readUnsignedShort();
DismantleBytecode.java,intConstant = byteStream.readShort();,if (byteStream != null ) intConstant = byteStream.readShort();
DismantleBytecode.java,else v = byteStream.readByte();,if (byteStream != null ) else v = byteStream.readByte();
DismantleBytecode.java,else v = byteStream.readShort();,if (byteStream != null ) else v = byteStream.readShort();
DismantleBytecode.java,v = byteStream.readInt(); i+=4;,if (i+=4; != null ) v = byteStream.readInt(); i+=4;
DismantleBytecode.java,classConstantOperand = getStringFromIndex(clazz.getNameIndex()).intern();,if (getStringFromIndex(clazz != null ) classConstantOperand = getStringFromIndex(clazz.getNameIndex()).intern();
DismantleBytecode.java,classConstantOperand = getStringFromIndex(clazz.getNameIndex()).intern();,if (getStringFromIndex(clazz != null ) classConstantOperand = getStringFromIndex(clazz.getNameIndex()).intern();
DismantleBytecode.java,nameConstantOperand = getStringFromIndex(sig.getNameIndex());,if (getStringFromIndex(sig != null ) nameConstantOperand = getStringFromIndex(sig.getNameIndex());
DismantleBytecode.java,sigConstantOperand = getStringFromIndex(sig.getSignatureIndex()).intern();,if (getStringFromIndex(sig != null ) sigConstantOperand = getStringFromIndex(sig.getSignatureIndex()).intern();
DismantleBytecode.java,refConstantOperand = ref.toString();,if (ref != null ) refConstantOperand = ref.toString();
PreorderVisitor.java,CodeException[] exceptions = obj.getExceptionTable();,if (obj != null ) CodeException[] exceptions = obj.getExceptionTable();
PreorderVisitor.java,Attribute[] attributes = obj.getAttributes();,if (obj != null ) Attribute[] attributes = obj.getAttributes();
PreorderVisitor.java,fieldName = getStringFromIndex(field.getNameIndex());,if (getStringFromIndex(field != null ) fieldName = getStringFromIndex(field.getNameIndex());
PreorderVisitor.java,fieldSig = getStringFromIndex(field.getSignatureIndex());,if (getStringFromIndex(field != null ) fieldSig = getStringFromIndex(field.getSignatureIndex());
PreorderVisitor.java,fieldIsStatic = field.isStatic();,if (field != null ) fieldIsStatic = field.isStatic();
PreorderVisitor.java,Attribute[] attributes = field.getAttributes();,if (field != null ) Attribute[] attributes = field.getAttributes();
PreorderVisitor.java,methodName = getStringFromIndex(method.getNameIndex());,if (getStringFromIndex(method != null ) methodName = getStringFromIndex(method.getNameIndex());
PreorderVisitor.java,methodSig = getStringFromIndex(method.getSignatureIndex());,if (getStringFromIndex(method != null ) methodSig = getStringFromIndex(method.getSignatureIndex());
PreorderVisitor.java,fullyQualifiedMethodName = ref.toString();,if (ref != null ) fullyQualifiedMethodName = ref.toString();
PreorderVisitor.java,Attribute[] attributes = method.getAttributes();,if (method != null ) Attribute[] attributes = method.getAttributes();
PreorderVisitor.java,constantPool = obj.getConstantPool();,if (obj != null ) constantPool = obj.getConstantPool();
PreorderVisitor.java,className = getStringFromIndex(c.getNameIndex());,if (getStringFromIndex(c != null ) className = getStringFromIndex(c.getNameIndex());
PreorderVisitor.java,packageName = obj.getPackageName();,if (obj != null ) packageName = obj.getPackageName();
PreorderVisitor.java,sourceFile = obj.getSourceFileName();,if (obj != null ) sourceFile = obj.getSourceFileName();
PreorderVisitor.java,superclassName = obj.getSuperclassName();,if (obj != null ) superclassName = obj.getSuperclassName();
PreorderVisitor.java,Field[] fields = obj.getFields();,if (obj != null ) Field[] fields = obj.getFields();
PreorderVisitor.java,Method[] methods = obj.getMethods();,if (obj != null ) Method[] methods = obj.getMethods();
PreorderVisitor.java,Attribute[] attributes = obj.getAttributes();,if (obj != null ) Attribute[] attributes = obj.getAttributes();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
BCPMethodReturnCheck.java,String calledMethodName = inv.getMethodName(methodGen.getConstantPool());,if (inv != null ) String calledMethodName = inv.getMethodName(methodGen.getConstantPool());
ConfigureDetectorsDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
ConfigureDetectorsDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
ConfigureDetectorsDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
ConfigureDetectorsDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
ConfigureDetectorsDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
ConfigureDetectorsDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
ConfigureDetectorsDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindMaskedFields.java,Field[] superFields = superClasses[c].getFields();,if (superClasses[c] != null ) Field[] superFields = superClasses[c].getFields();
FindMaskedFields.java,fieldName = fields[f].getName();,if (fields[f] != null ) fieldName = fields[f].getName();
FindMaskedFields.java,fields = superClasses[c].getFields();,if (superClasses[c] != null ) fields = superClasses[c].getFields();
FindMaskedFields.java,fieldName = fld.getName();,if (fld != null ) fieldName = fld.getName();
FindBugsFrame.java,int[] selIndices = classpathEntryList.getSelectedIndices();,if (classpathEntryList != null ) int[] selIndices = classpathEntryList.getSelectedIndices();
FindBugsFrame.java,DefaultListModel model = (DefaultListModel)classpathEntryList.getModel();,if ((DefaultListModel)classpathEntryList != null ) DefaultListModel model = (DefaultListModel)classpathEntryList.getModel();
FindBugsFrame.java,int sel = sourceDirList.getSelectedIndex();,if (sourceDirList != null ) int sel = sourceDirList.getSelectedIndex();
FindBugsFrame.java,DefaultListModel model = (DefaultListModel)sourceDirList.getModel();,if ((DefaultListModel)sourceDirList != null ) DefaultListModel model = (DefaultListModel)sourceDirList.getModel();
FindBugsFrame.java,int sel = sourceDirList.getSelectedIndex();,if (sourceDirList != null ) int sel = sourceDirList.getSelectedIndex();
FindBugsFrame.java,DefaultListModel model = (DefaultListModel)sourceDirList.getModel();,if ((DefaultListModel)sourceDirList != null ) DefaultListModel model = (DefaultListModel)sourceDirList.getModel();
FindBugsFrame.java,int[] selIndices = classpathEntryList.getSelectedIndices();,if (classpathEntryList != null ) int[] selIndices = classpathEntryList.getSelectedIndices();
FindBugsFrame.java,DefaultListModel model = (DefaultListModel)classpathEntryList.getModel();,if ((DefaultListModel)classpathEntryList != null ) DefaultListModel model = (DefaultListModel)classpathEntryList.getModel();
FindBugsFrame.java,int lastInsertPos = model.getSize();,if (model != null ) int lastInsertPos = model.getSize();
FindBugsFrame.java,File selectedFile = chooser.getSelectedFile();,if (chooser != null ) File selectedFile = chooser.getSelectedFile();
FindBugsFrame.java,int selIndex = sourceDirList.getSelectedIndex();,if (sourceDirList != null ) int selIndex = sourceDirList.getSelectedIndex();
FindBugsFrame.java,DefaultListModel listModel = (DefaultListModel) sourceDirList.getModel();,if (sourceDirList != null ) DefaultListModel listModel = (DefaultListModel) sourceDirList.getModel();
FindBugsFrame.java,int selIndex = jarFileList.getSelectedIndex();,if (jarFileList != null ) int selIndex = jarFileList.getSelectedIndex();
FindBugsFrame.java,DefaultListModel listModel = (DefaultListModel) jarFileList.getModel();,if (jarFileList != null ) DefaultListModel listModel = (DefaultListModel) jarFileList.getModel();
FindBugsFrame.java,int selIndex = classpathEntryList.getSelectedIndex();,if (classpathEntryList != null ) int selIndex = classpathEntryList.getSelectedIndex();
FindBugsFrame.java,DefaultListModel listModel = (DefaultListModel) classpathEntryList.getModel();,if (classpathEntryList != null ) DefaultListModel listModel = (DefaultListModel) classpathEntryList.getModel();
FindBugsFrame.java,int sel = classpathEntryList.getSelectedIndex();,if (classpathEntryList != null ) int sel = classpathEntryList.getSelectedIndex();
FindBugsFrame.java,int sel = classpathEntryList.getSelectedIndex();,if (classpathEntryList != null ) int sel = classpathEntryList.getSelectedIndex();
CountBugs.java,String category = tok.nextToken();,if (tok != null ) String category = tok.nextToken();
CountBugs.java,String category = bugInstance.getAbbrev();,if (bugInstance != null ) String category = bugInstance.getAbbrev();
FindOpenStream.java,Iterator<PotentialOpenStream> i = potentialOpenStreamList.iterator();,if (potentialOpenStreamList != null ) Iterator<PotentialOpenStream> i = potentialOpenStreamList.iterator();
FindHEmismatch.java,else whereHashCode = wh.getClassName();,if (wh != null ) else whereHashCode = wh.getClassName();
VersionInsensitiveBugComparator.java,Iterator<BugAnnotation> lhsIter = lhs.annotationIterator();,if (lhs != null ) Iterator<BugAnnotation> lhsIter = lhs.annotationIterator();
VersionInsensitiveBugComparator.java,Iterator<BugAnnotation> rhsIter = rhs.annotationIterator();,if (rhs != null ) Iterator<BugAnnotation> rhsIter = rhs.annotationIterator();
FindOpenStream.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
ResourceTrackingDetector.java,Location location = entry.getKey();,if (entry != null ) Location location = entry.getKey();
ResourceTrackingDetector.java,Resource resource = entry.getValue();,if (entry != null ) Resource resource = entry.getValue();
ResourceTrackingDetector.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
FindHEmismatch.java,else whereEqual = we.getClassName();,if (we != null ) else whereEqual = we.getClassName();
FindOpenStream.java,InstructionHandle constructionHandle = stream.getConstructorHandle();,if (stream != null ) InstructionHandle constructionHandle = stream.getConstructorHandle();
FindBugsFrame.java,UserPreferences prefs = UserPreferences.getUserPreferences();,if (UserPreferences != null ) UserPreferences prefs = UserPreferences.getUserPreferences();
DismantleBytecode.java,int switchLow = byteStream.readInt();,if (byteStream != null ) int switchLow = byteStream.readInt();
DismantleBytecode.java,int switchHigh = byteStream.readInt();,if (byteStream != null ) int switchHigh = byteStream.readInt();
TypeRepository.java,type = new BasicType(typeCode.byteValue());,if (BasicType(typeCode != null ) type = new BasicType(typeCode.byteValue());
ValueNumberFrame.java,mergedValue = factory.createFreshValue();,if (factory != null ) mergedValue = factory.createFreshValue();
FindHEmismatch.java,int accessFlags = obj.getAccessFlags();,if (obj != null ) int accessFlags = obj.getAccessFlags();
TypeRepository.java,Type aBaseType = aArrayType.getBaseType();,if (aArrayType != null ) Type aBaseType = aArrayType.getBaseType();
TypeRepository.java,Type bBaseType = bArrayType.getBaseType();,if (bArrayType != null ) Type bBaseType = bArrayType.getBaseType();
DroppedException.java,AnalysisContext analysisContext = classContext.getAnalysisContext();,if (classContext != null ) AnalysisContext analysisContext = classContext.getAnalysisContext();
DroppedException.java,int secondChoice = entries[i].getLineNumber();,if (entries[i] != null ) int secondChoice = entries[i].getLineNumber();
DroppedException.java,int line = entries[i].getLineNumber();,if (entries[i] != null ) int line = entries[i].getLineNumber();
TypeRepository.java,Type baseType = type.getBaseType();,if (type != null ) Type baseType = type.getBaseType();
TypeRepository.java,SubtypeQueryResult cachedResult = subtype.getSubtypeQueryResult();,if (subtype != null ) SubtypeQueryResult cachedResult = subtype.getSubtypeQueryResult();
TypeRepository.java,ObjectType type = work.removeFirst();,if (work != null ) ObjectType type = work.removeFirst();
EmacsBugReporter.java,SourceFinder sourceFinder = AnalysisContext.instance().getSourceFinder();,if (AnalysisContext != null ) SourceFinder sourceFinder = AnalysisContext.instance().getSourceFinder();
FindBugs.java,AnalysisContext analysisContext = AnalysisContext.instance();,if (AnalysisContext != null ) AnalysisContext analysisContext = AnalysisContext.instance();
CFGPrinter.java,Iterator<BasicBlock> i = cfg.blockIterator();,if (cfg != null ) Iterator<BasicBlock> i = cfg.blockIterator();
CFGPrinter.java,CodeExceptionGen exceptionGen = bb.getExceptionGen();,if (bb != null ) CodeExceptionGen exceptionGen = bb.getExceptionGen();
CFGPrinter.java,Iterator<InstructionHandle> j = bb.instructionIterator();,if (bb != null ) Iterator<InstructionHandle> j = bb.instructionIterator();
CFGPrinter.java,Edge edge = edgeIter.next();,if (edgeIter != null ) Edge edge = edgeIter.next();
CFGPrinter.java,JavaClass cls = new ClassParser(className).parse();,if (ClassParser(className) != null ) JavaClass cls = new ClassParser(className).parse();
CFGPrinter.java,Method[] methods = cls.getMethods();,if (cls != null ) Method[] methods = cls.getMethods();
CFGPrinter.java,ConstantPoolGen cp = new ConstantPoolGen(cls.getConstantPool());,if (ConstantPoolGen(cls != null ) ConstantPoolGen cp = new ConstantPoolGen(cls.getConstantPool());
DroppedException.java,AnalysisContext analysisContext = AnalysisContext.instance();,if (AnalysisContext != null ) AnalysisContext analysisContext = AnalysisContext.instance();
TypeRepository.java,ObjectType type = work.removeFirst();,if (work != null ) ObjectType type = work.removeFirst();
TypeRepository.java,ObjectType type = work.removeFirst();,if (work != null ) ObjectType type = work.removeFirst();
TypeRepository.java,type = new XBasicType(typeCode.byteValue());,if (XBasicType(typeCode != null ) type = new XBasicType(typeCode.byteValue());
TypeRepository.java,XObjectType type = work.removeFirst();,if (work != null ) XObjectType type = work.removeFirst();
TypeRepository.java,XType baseType = type.getBaseType();,if (type != null ) XType baseType = type.getBaseType();
Transpose.java,VertexType dupVertex = trans.addVertex();,if (trans != null ) VertexType dupVertex = trans.addVertex();
FindBugs.java,FindBugs findBugs = commandLine.createEngine();,if (commandLine != null ) FindBugs findBugs = commandLine.createEngine();
FindReturnRef.java,variableNames = obj.getLocalVariableTable();,if (obj != null ) variableNames = obj.getLocalVariableTable();
IsNullValueAnalysis.java,"ValueNumber replaceMe = vnaFrame.getInstance(firstInDest, methodGen.getConstantPool());","if (methodGen != null ) ValueNumber replaceMe = vnaFrame.getInstance(firstInDest, methodGen.getConstantPool());"
FindNullDeref.java,boolean definitelyDifferent = top.isDefinitelyNotNull();,if (top != null ) boolean definitelyDifferent = top.isDefinitelyNotNull();
FindbugsPropertyPage.java,Table ruleTable = availableRulesTableViewer.getTable();,if (availableRulesTableViewer != null ) Table ruleTable = availableRulesTableViewer.getTable();
FindbugsPropertyPage.java,TableItem[] itemList = availableRulesTableViewer.getTable().getItems();,if (availableRulesTableViewer != null ) TableItem[] itemList = availableRulesTableViewer.getTable().getItems();
FindbugsPropertyPage.java,TableItem[] itemList = availableRulesTableViewer.getTable().getItems();,if (availableRulesTableViewer != null ) TableItem[] itemList = availableRulesTableViewer.getTable().getItems();
BugInstance.java,String className = visitor.getBetterClassName();,if (visitor != null ) String className = visitor.getBetterClassName();
BugInstance.java,String className = visitor.getBetterClassConstant();,if (visitor != null ) String className = visitor.getBetterClassConstant();
BugInstance.java,String methodName = visitor.getNameConstant();,if (visitor != null ) String methodName = visitor.getNameConstant();
BugInstance.java,String methodSig = visitor.getBetterSigConstant();,if (visitor != null ) String methodSig = visitor.getBetterSigConstant();
SourceLineAnnotation.java,String className = visitor.getBetterClassName();,if (visitor != null ) String className = visitor.getBetterClassName();
SourceLineAnnotation.java,String className = visitor.getBetterClassName();,if (visitor != null ) String className = visitor.getBetterClassName();
DumbMethods.java,ConstantPool cp = thisClass.getConstantPool();,if (thisClass != null ) ConstantPool cp = thisClass.getConstantPool();
BetterVisitor.java,fieldName = getStringFromIndex(obj.getNameIndex());,if (getStringFromIndex(obj != null ) fieldName = getStringFromIndex(obj.getNameIndex());
BetterVisitor.java,fieldSig = getStringFromIndex(obj.getSignatureIndex());,if (getStringFromIndex(obj != null ) fieldSig = getStringFromIndex(obj.getSignatureIndex());
BetterVisitor.java,fieldIsStatic = obj.isStatic();,if (obj != null ) fieldIsStatic = obj.isStatic();
BetterVisitor.java,className = getStringFromIndex(c.getNameIndex());,if (getStringFromIndex(c != null ) className = getStringFromIndex(c.getNameIndex());
BetterVisitor.java,packageName = obj.getPackageName();,if (obj != null ) packageName = obj.getPackageName();
BetterVisitor.java,sourceFile = obj.getSourceFileName();,if (obj != null ) sourceFile = obj.getSourceFileName();
BetterVisitor.java,superclassName = obj.getSuperclassName();,if (obj != null ) superclassName = obj.getSuperclassName();
BetterVisitor.java,methodName = getStringFromIndex(obj.getNameIndex());,if (getStringFromIndex(obj != null ) methodName = getStringFromIndex(obj.getNameIndex());
BetterVisitor.java,methodSig = getStringFromIndex(obj.getSignatureIndex());,if (getStringFromIndex(obj != null ) methodSig = getStringFromIndex(obj.getSignatureIndex());
BetterVisitor.java,betterMethodName = ref.toString();,if (ref != null ) betterMethodName = ref.toString();
DismantleBytecode.java,opCode = byteStream.readUnsignedByte();,if (byteStream != null ) opCode = byteStream.readUnsignedByte();
DismantleBytecode.java,opCode = byteStream.readUnsignedByte();,if (byteStream != null ) opCode = byteStream.readUnsignedByte();
DismantleBytecode.java,register = byteStream.readUnsignedShort();,if (byteStream != null ) register = byteStream.readUnsignedShort();
DismantleBytecode.java,register = byteStream.readUnsignedShort();,if (byteStream != null ) register = byteStream.readUnsignedShort();
DismantleBytecode.java,nameConstant = getStringFromIndex(sig.getNameIndex());,if (getStringFromIndex(sig != null ) nameConstant = getStringFromIndex(sig.getNameIndex());
DismantleBytecode.java,refConstant = ref.toString();,if (ref != null ) refConstant = ref.toString();
PreorderVisitor.java,Attribute[] attributes = obj.getAttributes();,if (obj != null ) Attribute[] attributes = obj.getAttributes();
PreorderVisitor.java,Attribute[] attributes = obj.getAttributes();,if (obj != null ) Attribute[] attributes = obj.getAttributes();
FindRefComparison.java,String sourceFile = jclass.getSourceFileName();,if (jclass != null ) String sourceFile = jclass.getSourceFileName();
FindRefComparison.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
FindRefComparison.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
FindRefComparison.java,int numSlots = frame.getNumSlots();,if (frame != null ) int numSlots = frame.getNumSlots();
FindRefComparison.java,String lhs = SignatureConverter.convert(lhsType.getSignature());,if (SignatureConverter != null ) String lhs = SignatureConverter.convert(lhsType.getSignature());
FindRefComparison.java,String rhs = SignatureConverter.convert(rhsType.getSignature());,if (SignatureConverter != null ) String rhs = SignatureConverter.convert(rhsType.getSignature());
FindRefComparison.java,String sourceFile = jclass.getSourceFileName();,if (jclass != null ) String sourceFile = jclass.getSourceFileName();
FindRefComparison.java,String sourceFile = jclass.getSourceFileName();,if (jclass != null ) String sourceFile = jclass.getSourceFileName();
ContainerFilesCollector.java,int childType = child.getType();,if (child != null ) int childType = child.getType();
ContainerFilesCollector.java,Iterator iter = folders.iterator();,if (folders != null ) Iterator iter = folders.iterator();
FilesCollectorFactory.java,IProject project = builder.getProject();,if (builder != null ) IProject project = builder.getProject();
FindBugsBuilder.java,Collection files = collector.getFiles();,if (collector != null ) Collection files = collector.getFiles();
FindBugsWorker.java,String findBugsHome = FindbugsPlugin.getFindBugsEnginePluginLocation();,if (FindbugsPlugin != null ) String findBugsHome = FindbugsPlugin.getFindBugsEnginePluginLocation();
FindBugsWorker.java,Iterator iter = files.iterator();,if (files != null ) Iterator iter = files.iterator();
FindBugsWorker.java,IResource res = (IResource) iter.next();,if (iter != null ) IResource res = (IResource) iter.next();
FindBugsWorker.java,String fileName = res.getLocation().toOSString();,if (res != null ) String fileName = res.getLocation().toOSString();
ResourceDeltaFilesCollector.java,IResource child = childDelta.getResource();,if (childDelta != null ) IResource child = childDelta.getResource();
ResourceDeltaFilesCollector.java,int childType = child.getType();,if (child != null ) int childType = child.getType();
ResourceDeltaFilesCollector.java,int deltaKind = childDelta.getKind();,if (childDelta != null ) int deltaKind = childDelta.getKind();
ResourceDeltaFilesCollector.java,Iterator iter = folders.iterator();,if (folders != null ) Iterator iter = folders.iterator();
FindBugsNature.java,IProjectDescription description = getProject().getDescription();,if (getProject() != null ) IProjectDescription description = getProject().getDescription();
FindBugsNature.java,ICommand[] commands = description.getBuildSpec();,if (description != null ) ICommand[] commands = description.getBuildSpec();
FindBugsNature.java,IProjectDescription description = getProject().getDescription();,if (getProject() != null ) IProjectDescription description = getProject().getDescription();
FindBugsNature.java,ICommand newCommand = description.newCommand();,if (description != null ) ICommand newCommand = description.newCommand();
FindBugsNature.java,ICommand[] commands = description.getBuildSpec();,if (description != null ) ICommand[] commands = description.getBuildSpec();
FindBugsNature.java,ICommand[] oldCommands = description.getBuildSpec();,if (description != null ) ICommand[] oldCommands = description.getBuildSpec();
ProjectUtilities.java,IProjectDescription description = project.getDescription();,if (project != null ) IProjectDescription description = project.getDescription();
ProjectUtilities.java,String[] prevNatures = description.getNatureIds();,if (description != null ) String[] prevNatures = description.getNatureIds();
ProjectUtilities.java,IProjectDescription description = project.getDescription();,if (project != null ) IProjectDescription description = project.getDescription();
ProjectUtilities.java,String[] prevNatures = description.getNatureIds();,if (description != null ) String[] prevNatures = description.getNatureIds();
Project.java,String base = new File(projectFileName).getParent();,if (File(projectFileName) != null ) String base = new File(projectFileName).getParent();
Project.java,Iterator i = element.elements().iterator();,if (element != null ) Iterator i = element.elements().iterator();
Project.java,Element child = (Element) i.next();,if (i != null ) Element child = (Element) i.next();
Project.java,String name = child.getName();,if (child != null ) String name = child.getName();
Project.java,String text = child.getText();,if (child != null ) String text = child.getText();
FindBugsFrame.java,Project project = new Project(file.getPath());,if (Project(file != null ) Project project = new Project(file.getPath());
FindBugsFrame.java,Project project = new Project(file.getPath());,if (Project(file != null ) Project project = new Project(file.getPath());
Project.java,String base = new File(fileName).getParent();,if (File(fileName) != null ) String base = new File(fileName).getParent();
SerializableIdiom.java,JavaClass superClass = obj.getSuperClass();,if (obj != null ) JavaClass superClass = obj.getSuperClass();
FindbugsPlugin.java,ResourceBundle bundle= FindbugsPlugin.getDefault().getResourceBundle();,if (FindbugsPlugin != null ) ResourceBundle bundle= FindbugsPlugin.getDefault().getResourceBundle();
FindbugsPlugin.java,URL u = plugin.getDescriptor().getInstallURL();,if (plugin != null ) URL u = plugin.getDescriptor().getInstallURL();
Reporter.java,className = bug.getPrimaryClass().getClassName();,if (bug != null ) className = bug.getPrimaryClass().getClassName();
Reporter.java,packageName = bug.getPrimaryClass().getPackageName();,if (bug != null ) packageName = bug.getPrimaryClass().getPackageName();
Reporter.java,int startLine = bug.getPrimarySourceLineAnnotation().getStartLine();,if (bug != null ) int startLine = bug.getPrimarySourceLineAnnotation().getStartLine();
Reporter.java,SourceLineAnnotation primarySourceLineAnnotation = bug.getPrimarySourceLineAnnotation();,if (bug != null ) SourceLineAnnotation primarySourceLineAnnotation = bug.getPrimarySourceLineAnnotation();
Reporter.java,String packageName = primarySourceLineAnnotation.getPackageName();,if (primarySourceLineAnnotation != null ) String packageName = primarySourceLineAnnotation.getPackageName();
Reporter.java,String qualifiedClassName = primarySourceLineAnnotation.getClassName();,if (primarySourceLineAnnotation != null ) String qualifiedClassName = primarySourceLineAnnotation.getClassName();
Reporter.java,IResource res = type.getUnderlyingResource();,if (type != null ) IResource res = type.getUnderlyingResource();
ResourceTrackingDetector.java,final JavaClass jclass = classContext.getJavaClass();,if (classContext != null ) final JavaClass jclass = classContext.getJavaClass();
ResourceTrackingDetector.java,Method[] methodList = jclass.getMethods();,if (jclass != null ) Method[] methodList = jclass.getMethods();
ResourceTrackingDetector.java,BasicBlock basicBlock = location.getBasicBlock();,if (location != null ) BasicBlock basicBlock = location.getBasicBlock();
DismantleBytecode.java,classConstant = getStringFromIndex(clazz.getNameIndex());,if (getStringFromIndex(clazz != null ) classConstant = getStringFromIndex(clazz.getNameIndex());
DismantleBytecode.java,classConstant = getStringFromIndex(clazz.getNameIndex());,if (getStringFromIndex(clazz != null ) classConstant = getStringFromIndex(clazz.getNameIndex());
DismantleBytecode.java,sigConstant = getStringFromIndex(sig.getSignatureIndex());,if (getStringFromIndex(sig != null ) sigConstant = getStringFromIndex(sig.getSignatureIndex());
LocationScanner.java,Iterator<BasicBlock> bbIter = cfg.blockIterator();,if (cfg != null ) Iterator<BasicBlock> bbIter = cfg.blockIterator();
LocationScanner.java,BasicBlock basicBlock = bbIter.next();,if (bbIter != null ) BasicBlock basicBlock = bbIter.next();
LocationScanner.java,Iterator<InstructionHandle> insIter = basicBlock.instructionIterator();,if (basicBlock != null ) Iterator<InstructionHandle> insIter = basicBlock.instructionIterator();
LocationScanner.java,InstructionHandle handle = insIter.next();,if (insIter != null ) InstructionHandle handle = insIter.next();
FindInconsistentSync2.java,final InnerClassAccessMap icam = InnerClassAccessMap.instance();,if (InnerClassAccessMap != null ) final InnerClassAccessMap icam = InnerClassAccessMap.instance();
FindInconsistentSync2.java,final ConstantPoolGen cpg = classContext.getConstantPoolGen();,if (classContext != null ) final ConstantPoolGen cpg = classContext.getConstantPoolGen();
FindInconsistentSync2.java,Instruction ins = location.getHandle().getInstruction();,if (location != null ) Instruction ins = location.getHandle().getInstruction();
FindInconsistentSync2.java,xfield = access.getField();,if (access != null ) xfield = access.getField();
FindInconsistentSync2.java,isWrite = !access.isLoad();,if (!access != null ) isWrite = !access.isLoad();
FindInconsistentSync2.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
FindInconsistentSync2.java,String instanceClassName = objType.getClassName();,if (objType != null ) String instanceClassName = objType.getClassName();
FindMismatchedWaitOrNotify.java,final ConstantPoolGen cpg = methodGen.getConstantPool();,if (methodGen != null ) final ConstantPoolGen cpg = methodGen.getConstantPool();
FindMismatchedWaitOrNotify.java,BasicBlock basicBlock = location.getBasicBlock();,if (location != null ) BasicBlock basicBlock = location.getBasicBlock();
FindMismatchedWaitOrNotify.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
FindMismatchedWaitOrNotify.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
FindMismatchedWaitOrNotify.java,int lockCount = lockSet.getLockCount(ref.getNumber());,if (lockSet != null ) int lockCount = lockSet.getLockCount(ref.getNumber());
FindMismatchedWaitOrNotify.java,String sourceFile = classContext.getJavaClass().getSourceFileName();,if (classContext != null ) String sourceFile = classContext.getJavaClass().getSourceFileName();
FindRefComparison.java,final JavaClass jclass = classContext.getJavaClass();,if (classContext != null ) final JavaClass jclass = classContext.getJavaClass();
FindRefComparison.java,Method[] methodList = jclass.getMethods();,if (jclass != null ) Method[] methodList = jclass.getMethods();
FindRefComparison.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
FindRefComparison.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
FindRefComparison.java,short opcode = ins.getOpcode();,if (ins != null ) short opcode = ins.getOpcode();
FindRefComparison.java,int numSlots = frame.getNumSlots();,if (frame != null ) int numSlots = frame.getNumSlots();
FindRefComparison.java,String lhs = SignatureConverter.convert(lhsType.getSignature());,if (SignatureConverter != null ) String lhs = SignatureConverter.convert(lhsType.getSignature());
FindRefComparison.java,String rhs = SignatureConverter.convert(rhsType.getSignature());,if (SignatureConverter != null ) String rhs = SignatureConverter.convert(rhsType.getSignature());
FindRefComparison.java,String sourceFile = jclass.getSourceFileName();,if (jclass != null ) String sourceFile = jclass.getSourceFileName();
FindRefComparison.java,String sourceFile = jclass.getSourceFileName();,if (jclass != null ) String sourceFile = jclass.getSourceFileName();
FindRefComparison.java,RepositoryLookupFailureCallback lookupFailureCallback = classContext.getLookupFailureCallback();,if (classContext != null ) RepositoryLookupFailureCallback lookupFailureCallback = classContext.getLookupFailureCallback();
FindTwoLockWait.java,Method[] methodList = javaClass.getMethods();,if (javaClass != null ) Method[] methodList = javaClass.getMethods();
ResourceTrackingDetector.java,BasicBlock basicBlock = location.getBasicBlock();,if (location != null ) BasicBlock basicBlock = location.getBasicBlock();
ResourceTrackingDetector.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
StreamResourceTracker.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
StreamResourceTracker.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
StreamResourceTracker.java,String streamBase = resource.getStreamBase();,if (resource != null ) String streamBase = resource.getStreamBase();
StreamResourceTracker.java,String sig = type.getSignature();,if (type != null ) String sig = type.getSignature();
PluginLoader.java,Element detector = (Element) i.next();,if (i != null ) Element detector = (Element) i.next();
PluginLoader.java,Node bugCodeNode = (Node) i.next();,if (i != null ) Node bugCodeNode = (Node) i.next();
PluginLoader.java,String description = bugCodeNode.getText();,if (bugCodeNode != null ) String description = bugCodeNode.getText();
FindOpenStream.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
FindOpenStream.java,String sig = type.getSignature();,if (type != null ) String sig = type.getSignature();
FindOpenStream.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
FindOpenStream.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
FindOpenStream.java,String streamBase = resource.getStreamBase();,if (resource != null ) String streamBase = resource.getStreamBase();
FindOpenStream.java,final Instruction ins = handle.getInstruction();,if (handle != null ) final Instruction ins = handle.getInstruction();
FindOpenStream.java,Location creationPoint = stream.getLocation();,if (stream != null ) Location creationPoint = stream.getLocation();
FindBugs.java,String visitorName = tok.nextToken();,if (tok != null ) String visitorName = tok.nextToken();
FindBugs.java,projectFile = new File(projectFile).getAbsolutePath();,if (File(projectFile) != null ) projectFile = new File(projectFile).getAbsolutePath();
ResourceValueAnalysis.java,InstructionHandle handle = source.getExceptionThrower();,if (source != null ) InstructionHandle handle = source.getExceptionThrower();
ResourceValueAnalysis.java,int offset = handle.getPosition();,if (handle != null ) int offset = handle.getPosition();
ResourceValueAnalysis.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
ResourceValueAnalysis.java,ConstantPoolGen cpg = methodGen.getConstantPool();,if (methodGen != null ) ConstantPoolGen cpg = methodGen.getConstantPool();
TypeAnalysis.java,exceptionSet = exceptionSetFactory.createExceptionSet();,if (exceptionSetFactory != null ) exceptionSet = exceptionSetFactory.createExceptionSet();
ExceptionSet.java,ReferenceType result = i.next().getType();,if (i != null ) ReferenceType result = i.next().getType();
ExceptionSet.java,boolean implicit = !thrownException.isExplicit();,if (!thrownException != null ) boolean implicit = !thrownException.isExplicit();
PruneInfeasibleExceptionEdges.java,Iterator<BasicBlock> i = cfg.blockIterator();,if (cfg != null ) Iterator<BasicBlock> i = cfg.blockIterator();
PruneInfeasibleExceptionEdges.java,InstructionHandle pei = basicBlock.getExceptionThrower();,if (basicBlock != null ) InstructionHandle pei = basicBlock.getExceptionThrower();
PruneInfeasibleExceptionEdges.java,Instruction ins = pei.getInstruction();,if (pei != null ) Instruction ins = pei.getInstruction();
PruneInfeasibleExceptionEdges.java,Class[] exceptionList = exceptionThrower.getExceptions();,if (exceptionThrower != null ) Class[] exceptionList = exceptionThrower.getExceptions();
PruneInfeasibleExceptionEdges.java,Type throwType = frame.getTopValue();,if (frame != null ) Type throwType = frame.getTopValue();
PruneInfeasibleExceptionEdges.java,BasicBlock handlerBlock = edge.getTarget();,if (edge != null ) BasicBlock handlerBlock = edge.getTarget();
PruneInfeasibleExceptionEdges.java,CodeExceptionGen handler = handlerBlock.getExceptionGen();,if (handlerBlock != null ) CodeExceptionGen handler = handlerBlock.getExceptionGen();
PruneInfeasibleExceptionEdges.java,ObjectType catchType = handler.getCatchType();,if (handler != null ) ObjectType catchType = handler.getCatchType();
PruneInfeasibleExceptionEdges.java,ObjectType thrownType = thrownException.getType();,if (thrownException != null ) ObjectType thrownType = thrownException.getType();
TypeAnalysis.java,ObjectType thrownType = thrownException.getType();,if (thrownException != null ) ObjectType thrownType = thrownException.getType();
TypeAnalysis.java,ExceptionSet thrownExceptionSet = cachedExceptionSet.getExceptionSet().duplicate();,if (cachedExceptionSet != null ) ExceptionSet thrownExceptionSet = cachedExceptionSet.getExceptionSet().duplicate();
CountBugs.java,String category = tok.nextToken();,if (tok != null ) String category = tok.nextToken();
MergeResults.java,SourceLineAnnotation srcLine = orig.getPrimarySourceLineAnnotation();,if (orig != null ) SourceLineAnnotation srcLine = orig.getPrimarySourceLineAnnotation();
MergeResults.java,Iterator<BugInstance> i = set.iterator();,if (set != null ) Iterator<BugInstance> i = set.iterator();
PluginLoader.java,Node bugCategoryNode = (Node) i.next();,if (i != null ) Node bugCategoryNode = (Node) i.next();
PluginLoader.java,String description = bugCategoryNode.getText();,if (bugCategoryNode != null ) String description = bugCategoryNode.getText();
ClassContext.java,long end = System.currentTimeMillis();,if (System != null ) long end = System.currentTimeMillis();
ClassContext.java,cfg = cfgBuilder.getCFG();,if (cfgBuilder != null ) cfg = cfgBuilder.getCFG();
ClassContext.java,Code code = method.getCode();,if (method != null ) Code code = method.getCode();
ClassContext.java,byte[] instructionList = code.getCode();,if (code != null ) byte[] instructionList = code.getCode();
TypeAnalysis.java,Type catchType = exceptionGen.getCatchType();,if (exceptionGen != null ) Type catchType = exceptionGen.getCatchType();
PruneInfeasibleExceptionEdges.java,Type throwType = frame.getTopValue();,if (frame != null ) Type throwType = frame.getTopValue();
PruneInfeasibleExceptionEdges.java,Class[] exceptionList = exceptionThrower.getExceptions();,if (exceptionThrower != null ) Class[] exceptionList = exceptionThrower.getExceptions();
PruneInfeasibleExceptionEdges.java,String catchClassName = SignatureConverter.convert(catchType.getSignature());,if (SignatureConverter != null ) String catchClassName = SignatureConverter.convert(catchType.getSignature());
PruneInfeasibleExceptionEdges.java,String thrownClassName = SignatureConverter.convert(thrownException.getSignature());,if (SignatureConverter != null ) String thrownClassName = SignatureConverter.convert(thrownException.getSignature());
PruneInfeasibleExceptionEdges.java,Class[] exceptionList = exceptionThrower.getExceptions();,if (exceptionThrower != null ) Class[] exceptionList = exceptionThrower.getExceptions();
PruneInfeasibleExceptionEdges.java,ExceptionTable exceptionTable = method.getExceptionTable();,if (method != null ) ExceptionTable exceptionTable = method.getExceptionTable();
PruneInfeasibleExceptionEdges.java,String[] exceptionNameList = exceptionTable.getExceptionNames();,if (exceptionTable != null ) String[] exceptionNameList = exceptionTable.getExceptionNames();
Hierarchy.java,Method[] methodList = jclass.getMethods();,if (jclass != null ) Method[] methodList = jclass.getMethods();
FindOpenStream.java,final Instruction ins = handle.getInstruction();,if (handle != null ) final Instruction ins = handle.getInstruction();
FindOpenStream.java,Location creationPoint = stream.getLocation();,if (stream != null ) Location creationPoint = stream.getLocation();
FindOpenStream.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
FindOpenStream.java,String sig = type.getSignature();,if (type != null ) String sig = type.getSignature();
FindOpenStream.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
FindOpenStream.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
FindOpenStream.java,String streamBase = resource.getStreamBase();,if (resource != null ) String streamBase = resource.getStreamBase();
Reporter.java,String detailText = pattern.getDetailText();,if (pattern != null ) String detailText = pattern.getDetailText();
FindExamples.java,Iterator<BugInstance> i = bugCollection.iterator();,if (bugCollection != null ) Iterator<BugInstance> i = bugCollection.iterator();
FindExamples.java,String annotation = bugInstance.getAnnotationText();,if (bugInstance != null ) String annotation = bugInstance.getAnnotationText();
FindExamples.java,Set<String> contents = bugInstance.getTextAnnotationWords();,if (bugInstance != null ) Set<String> contents = bugInstance.getTextAnnotationWords();
FindBugs.java,DetectorFactory factory = factoryIter.next();,if (factoryIter != null ) DetectorFactory factory = factoryIter.next();
CodeGen.java,int numTokens = node.getNumTokens();,if (node != null ) int numTokens = node.getNumTokens();
CodeGen.java,Token t = node.getFirstToken();,if (node != null ) Token t = node.getFirstToken();
CodeGen.java,Token t = node.getFirstToken();,if (node != null ) Token t = node.getFirstToken();
EclipseClasspath.java,String line = lineList.getFirst();,if (lineList != null ) String line = lineList.getFirst();
EclipseClasspath.java,len = line.length();,if (line != null ) len = line.length();
EclipseClasspath.java,line = reader.readLine();,if (reader != null ) line = reader.readLine();
EclipseClasspath.java,Node node = (Node) i.next();,if (i != null ) Node node = (Node) i.next();
EclipseClasspath.java,Node node = (Node) i.next();,if (i != null ) Node node = (Node) i.next();
EclipseClasspath.java,String dirName = dirList[i].getName();,if (dirList[i] != null ) String dirName = dirList[i].getName();
EclipseClasspath.java,WorkListItem item = workList.removeFirst();,if (workList != null ) WorkListItem item = workList.removeFirst();
EclipseClasspath.java,value = buf.toString();,if (buf != null ) value = buf.toString();
InnerClassAccessMap.java,Method[]  methodList = javaClass.getMethods();,if (javaClass != null ) Method[]  methodList = javaClass.getMethods();
InnerClassAccessMap.java,String methodName = method.getName();,if (method != null ) String methodName = method.getName();
InnerClassAccessMap.java,Code code = method.getCode();,if (method != null ) Code code = method.getCode();
InnerClassAccessMap.java,byte[] instructionList = code.getCode();,if (code != null ) byte[] instructionList = code.getCode();
InnerClassAccessMap.java,String methodSig = method.getSignature();,if (method != null ) String methodSig = method.getSignature();
InnerClassAccessMap.java,InnerClassAccess access = callback.getAccess();,if (callback != null ) InnerClassAccess access = callback.getAccess();
IsNullValueAnalysis.java,this.visitor = new IsNullValueFrameModelingVisitor(methodGen.getConstantPool());,if (IsNullValueFrameModelingVisitor(methodGen != null ) this.visitor = new IsNullValueFrameModelingVisitor(methodGen.getConstantPool());
LazyInit.java,InstructionHandle handle = element.getMatchedInstructionInstructionHandle();,if (element != null ) InstructionHandle handle = element.getMatchedInstructionInstructionHandle();
LazyInit.java,"Location location = new Location(handle, element.getBasicBlock());","if (element != null ) Location location = new Location(handle, element.getBasicBlock());"
LazyInit.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
LazyInit.java,BitSet storeDominators = dominators.getStartFact(store.getBasicBlock());,if (dominators != null ) BitSet storeDominators = dominators.getStartFact(store.getBasicBlock());
SimplePathEnumerator.java,this.dfs = new DepthFirstSearch(cfg).search();,if (DepthFirstSearch(cfg) != null ) this.dfs = new DepthFirstSearch(cfg).search();
DepthFirstSearch.java,int numBlocks = cfg.getNumBasicBlocks();,if (cfg != null ) int numBlocks = cfg.getNumBasicBlocks();
DepthFirstSearch.java,int maxEdgeId = cfg.getMaxEdgeId();,if (cfg != null ) int maxEdgeId = cfg.getMaxEdgeId();
DepthFirstSearch.java,ArrayList<Visit> stack = new ArrayList<Visit>(cfg.getNumBasicBlocks());,if (ArrayList<Visit>(cfg != null ) ArrayList<Visit> stack = new ArrayList<Visit>(cfg.getNumBasicBlocks());
DepthFirstSearch.java,Edge edge = visit.getNextEdge();,if (visit != null ) Edge edge = visit.getNextEdge();
DepthFirstSearch.java,BasicBlock block = visit.getBlock();,if (visit != null ) BasicBlock block = visit.getBlock();
DepthFirstSearch.java,BasicBlock succ = edge.getTarget();,if (edge != null ) BasicBlock succ = edge.getTarget();
DepthFirstSearch.java,Iterator<Edge> edgeIter = cfg.edgeIterator();,if (cfg != null ) Iterator<Edge> edgeIter = cfg.edgeIterator();
DepthFirstSearch.java,Edge edge = edgeIter.next();,if (edgeIter != null ) Edge edge = edgeIter.next();
DepthFirstSearch.java,int srcDiscoveryTime = getDiscoveryTime(edge.getSource());,if (getDiscoveryTime(edge != null ) int srcDiscoveryTime = getDiscoveryTime(edge.getSource());
DepthFirstSearch.java,int destDiscoveryTime = getDiscoveryTime(edge.getTarget());,if (getDiscoveryTime(edge != null ) int destDiscoveryTime = getDiscoveryTime(edge.getTarget());
PatternMatcher.java,bindingSet = matchResult.getBindingSet();,if (matchResult != null ) bindingSet = matchResult.getBindingSet();
ByteCodePatternDetector.java,ConstantPoolGen cpg = methodGen.getConstantPool();,if (methodGen != null ) ConstantPoolGen cpg = methodGen.getConstantPool();
PatternMatcher.java,InstructionHandle handle = instructionIterator.next();,if (instructionIterator != null ) InstructionHandle handle = instructionIterator.next();
PatternMatcher.java,BasicBlock.InstructionIterator dupIter = instructionIterator.duplicate();,if (instructionIterator != null ) BasicBlock.InstructionIterator dupIter = instructionIterator.duplicate();
PatternMatcher.java,matchedPatternElement = matchResult.getPatternElement();,if (matchResult != null ) matchedPatternElement = matchResult.getPatternElement();
PatternMatcher.java,bindingSet = matchResult.getBindingSet();,if (matchResult != null ) bindingSet = matchResult.getBindingSet();
PatternMatcher.java,BasicBlock destBlock = edge.getTarget();,if (edge != null ) BasicBlock destBlock = edge.getTarget();
PatternMatcher.java,int destId = destBlock.getId();,if (destBlock != null ) int destId = destBlock.getId();
LazyInit.java,BitSet storeDominators = dominators.getStartFact(store.getBasicBlock());,if (dominators != null ) BitSet storeDominators = dominators.getStartFact(store.getBasicBlock());
LazyInit.java,FieldVariable field = (FieldVariable) binding.getVariable();,if (binding != null ) FieldVariable field = (FieldVariable) binding.getVariable();
LazyInit.java,String sourceFile = javaClass.getSourceFileName();,if (javaClass != null ) String sourceFile = javaClass.getSourceFileName();
LazyInit.java,BindingSet bindingSet = match.getBindingSet();,if (match != null ) BindingSet bindingSet = match.getBindingSet();
LazyInit.java,FieldVariable field = (FieldVariable) binding.getVariable();,if (binding != null ) FieldVariable field = (FieldVariable) binding.getVariable();
FindBugs.java,ZipEntry entry = (ZipEntry) entries.nextElement();,if (entries != null ) ZipEntry entry = (ZipEntry) entries.nextElement();
FindBugs.java,String name = entry.getName();,if (entry != null ) String name = entry.getName();
XMLBugReporter.java,String html = writer.toString();,if (writer != null ) String html = writer.toString();
Project.java,final Attributes mainAttrs = manifest.getMainAttributes();,if (manifest != null ) final Attributes mainAttrs = manifest.getMainAttributes();
Lookup.java,Method[] methodList = jclass.getMethods();,if (jclass != null ) Method[] methodList = jclass.getMethods();
Lookup.java,Field[] fieldList = jclass.getFields();,if (jclass != null ) Field[] fieldList = jclass.getFields();
Lookup.java,jclass = jclass.getSuperClass();,if (jclass != null ) jclass = jclass.getSuperClass();
Lookup.java,Field[] fieldList = jclass.getFields();,if (jclass != null ) Field[] fieldList = jclass.getFields();
Lookup.java,jclass = jclass.getSuperClass();,if (jclass != null ) jclass = jclass.getSuperClass();
Lookup.java,Field[] fieldList = classDefiningField.getFields();,if (classDefiningField != null ) Field[] fieldList = classDefiningField.getFields();
Lookup.java,classDefiningField = classDefiningField.getSuperClass();,if (classDefiningField != null ) classDefiningField = classDefiningField.getSuperClass();
Lookup.java,String realClassName = classDefiningField.getClassName();,if (classDefiningField != null ) String realClassName = classDefiningField.getClassName();
Lookup.java,int accessFlags = field.getAccessFlags();,if (field != null ) int accessFlags = field.getAccessFlags();
Lookup.java,short opcode = fins.getOpcode();,if (fins != null ) short opcode = fins.getOpcode();
Project.java,final File jarFile = new File(i.next());,if (File(i != null ) final File jarFile = new File(i.next());
EclipseClasspath.java,String pluginId = getPluginId(dirList[i].getName());,if (getPluginId(dirList[i] != null ) String pluginId = getPluginId(dirList[i].getName());
EclipseClasspath.java,"Plugin plugin = new Plugin(doc, item.isDependent());","if (item != null ) Plugin plugin = new Plugin(doc, item.isDependent());"
EclipseClasspath.java,String descriptor = workList.removeFirst();,if (workList != null ) String descriptor = workList.removeFirst();
FindBugs.java,File baseDir = new File(fileName).getParentFile();,if (File(fileName) != null ) File baseDir = new File(fileName).getParentFile();
FindBugs.java,Manifest manifest = jarFile.getManifest();,if (jarFile != null ) Manifest manifest = jarFile.getManifest();
FindBugs.java,Attributes attributes = manifest.getMainAttributes();,if (manifest != null ) Attributes attributes = manifest.getMainAttributes();
FindBugs.java,String entry = tok.nextToken();,if (tok != null ) String entry = tok.nextToken();
FindBugs.java,List<String> auxClasspathEntryList = project.getAuxClasspathEntryList();,if (project != null ) List<String> auxClasspathEntryList = project.getAuxClasspathEntryList();
FindBugs.java,String fileName = classProducer.getFileName();,if (classProducer != null ) String fileName = classProducer.getFileName();
FindBugs.java,String[] argv = project.getJarFileArray();,if (project != null ) String[] argv = project.getJarFileArray();
FindBugs.java,Iterator i = auxClasspathEntryList.iterator();,if (auxClasspathEntryList != null ) Iterator i = auxClasspathEntryList.iterator();
FindBugs.java,String entry = (String) i.next();,if (i != null ) String entry = (String) i.next();
FindBugs.java,List auxClasspathEntryList = project.getAuxClasspathEntryList();,if (project != null ) List auxClasspathEntryList = project.getAuxClasspathEntryList();
FindInconsistentSync2.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
FindInconsistentSync2.java,String instanceClassName = objType.getClassName();,if (objType != null ) String instanceClassName = objType.getClassName();
FindBugsFrame.java,String fileName = file.getName();,if (file != null ) String fileName = file.getName();
SourceFinder.java,Iterator<String> i = sourceBaseList.iterator();,if (sourceBaseList != null ) Iterator<String> i = sourceBaseList.iterator();
FindBugs.java,AnalysisContext analysisContext = AnalysisContext.instance();,if (AnalysisContext != null ) AnalysisContext analysisContext = AnalysisContext.instance();
AnalysisRun.java,ProjectStats stats = reporter.getProjectStats();,if (reporter != null ) ProjectStats stats = reporter.getProjectStats();
EmacsBugReporter.java,String fullPath = project.getSourceFilePath(line.getSourceFile());,if (project != null ) String fullPath = project.getSourceFilePath(line.getSourceFile());
EmacsBugReporter.java,String pkgName = line.getPackageName();,if (line != null ) String pkgName = line.getPackageName();
PruneUnconditionalExceptionThrowerEdges.java,ExceptionPathValue pathValue = pathDataflow.getStartFact(calledCFG.getExit());,if (pathDataflow != null ) ExceptionPathValue pathValue = pathDataflow.getStartFact(calledCFG.getExit());
IsNullValueAnalysis.java,final BasicBlock sourceBlock = edge.getSource();,if (edge != null ) final BasicBlock sourceBlock = edge.getSource();
IsNullValueAnalysis.java,final InstructionHandle lastInSourceHandle = sourceBlock.getLastInstruction();,if (sourceBlock != null ) final InstructionHandle lastInSourceHandle = sourceBlock.getLastInstruction();
IsNullValueAnalysis.java,short lastInSourceOpcode = lastInSourceHandle.getInstruction().getOpcode();,if (lastInSourceHandle != null ) short lastInSourceOpcode = lastInSourceHandle.getInstruction().getOpcode();
IsNullValueAnalysis.java,final int prevNumSlots = prevIsNullValueFrame.getNumSlots();,if (prevIsNullValueFrame != null ) final int prevNumSlots = prevIsNullValueFrame.getNumSlots();
IsNullValueAnalysis.java,final IsNullValue conditionValue = prevIsNullValueFrame.getTopValue();,if (prevIsNullValueFrame != null ) final IsNullValue conditionValue = prevIsNullValueFrame.getTopValue();
IsNullValueAnalysis.java,boolean tosNull = tos.isDefinitelyNull();,if (tos != null ) boolean tosNull = tos.isDefinitelyNull();
IsNullValueAnalysis.java,boolean nextToTosNull = nextToTOS.isDefinitelyNull();,if (nextToTOS != null ) boolean nextToTosNull = nextToTOS.isDefinitelyNull();
IsNullValueAnalysis.java,int numSlotsConsumed = firstInDest.consumeStack(methodGen.getConstantPool());,if (firstInDest != null ) int numSlotsConsumed = firstInDest.consumeStack(methodGen.getConstantPool());
LockAnalysis.java,int lockNumber = frame.getTopValue().getNumber();,if (frame != null ) int lockNumber = frame.getTopValue().getNumber();
FindInconsistentSync.java,JavaClass jclass = classContext.getJavaClass();,if (classContext != null ) JavaClass jclass = classContext.getJavaClass();
FindInconsistentSync.java,Method[] methodList = jclass.getMethods();,if (jclass != null ) Method[] methodList = jclass.getMethods();
FindInconsistentSync.java,inConstructor = isConstructor(methodGen.getName());,if (isConstructor(methodGen != null ) inConstructor = isConstructor(methodGen.getName());
FindInconsistentSync.java,javaClass = classContext.getJavaClass();,if (classContext != null ) javaClass = classContext.getJavaClass();
FindInconsistentSync.java,String className = javaClass.getClassName();,if (javaClass != null ) String className = javaClass.getClassName();
FindInconsistentSync.java,String fieldName = jfield.getName();,if (jfield != null ) String fieldName = jfield.getName();
FindInconsistentSync.java,String fieldSig = jfield.getSignature();,if (jfield != null ) String fieldSig = jfield.getSignature();
FindInconsistentSync.java,boolean isStatic = jfield.isStatic();,if (jfield != null ) boolean isStatic = jfield.isStatic();
FindInconsistentSync.java,Method method = callSite.getMethod();,if (callSite != null ) Method method = callSite.getMethod();
FindInconsistentSync.java,BasicBlock basicBlock = callSite.getBasicBlock();,if (callSite != null ) BasicBlock basicBlock = callSite.getBasicBlock();
FindInconsistentSync.java,InstructionHandle handle = callSite.getHandle();,if (callSite != null ) InstructionHandle handle = callSite.getHandle();
FindInconsistentSync.java,ConstantPoolGen cpg = methodGen.getConstantPool();,if (methodGen != null ) ConstantPoolGen cpg = methodGen.getConstantPool();
FindInconsistentSync.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
FindInconsistentSync.java,String sourceFile = javaClass.getSourceFileName();,if (javaClass != null ) String sourceFile = javaClass.getSourceFileName();
FindInconsistentSync.java,FieldAnnotation field = entry.getKey();,if (entry != null ) FieldAnnotation field = entry.getKey();
FindInconsistentSync.java,FieldStats stats = entry.getValue();,if (entry != null ) FieldStats stats = entry.getValue();
FindInconsistentSync.java,int total = statMap.size();,if (statMap != null ) int total = statMap.size();
FindInconsistentSync2.java,String instanceClassName = objType.getClassName();,if (objType != null ) String instanceClassName = objType.getClassName();
IsNullValueAnalysis.java,final int prevNumSlots = prevIsNullValueFrame.getNumSlots();,if (prevIsNullValueFrame != null ) final int prevNumSlots = prevIsNullValueFrame.getNumSlots();
IsNullValueAnalysis.java,final IsNullValue conditionValue = prevIsNullValueFrame.getTopValue();,if (prevIsNullValueFrame != null ) final IsNullValue conditionValue = prevIsNullValueFrame.getTopValue();
IsNullValueAnalysis.java,short lastInSourceOpcode = lastInSourceHandle.getInstruction().getOpcode();,if (lastInSourceHandle != null ) short lastInSourceOpcode = lastInSourceHandle.getInstruction().getOpcode();
IsNullValueAnalysis.java,final int prevNumSlots = prevIsNullValueFrame.getNumSlots();,if (prevIsNullValueFrame != null ) final int prevNumSlots = prevIsNullValueFrame.getNumSlots();
IsNullValueAnalysis.java,final IsNullValue conditionValue = prevIsNullValueFrame.getTopValue();,if (prevIsNullValueFrame != null ) final IsNullValue conditionValue = prevIsNullValueFrame.getTopValue();
ValueNumberFrameModelingVisitor.java,outputValueList[i] = factory.createFreshValue();,if (factory != null ) outputValueList[i] = factory.createFreshValue();
FindInconsistentSync2.java,String accessingClassName = classContext.getJavaClass().getClassName();,if (classContext != null ) String accessingClassName = classContext.getJavaClass().getClassName();
FindInconsistentSync2.java,Method[] methodList = javaClass.getMethods();,if (javaClass != null ) Method[] methodList = javaClass.getMethods();
MergeResults.java,BugInstance matching = tailSet.first();,if (tailSet != null ) BugInstance matching = tailSet.first();
MergeResults.java,SourceLineAnnotation srcLine = orig.getPrimarySourceLineAnnotation();,if (orig != null ) SourceLineAnnotation srcLine = orig.getPrimarySourceLineAnnotation();
FindInconsistentSync2.java,InstructionHandle handle = il.getStart();,if (il != null ) InstructionHandle handle = il.getStart();
FindInconsistentSync2.java,handle = handle.getNext();,if (handle != null ) handle = handle.getNext();
FindInconsistentSync2.java,handle = handle.getNext();,if (handle != null ) handle = handle.getNext();
FindOpenStream.java,String sig = type.getSignature();,if (type != null ) String sig = type.getSignature();
MergeResults.java,Iterator<BugInstance> i = origCollection.iterator();,if (origCollection != null ) Iterator<BugInstance> i = origCollection.iterator();
BugHistory.java,cmp = lhs.getPriority() - rhs.getPriority();,if (rhs != null ) cmp = lhs.getPriority() - rhs.getPriority();
BugHistory.java,Iterator<BugAnnotation> lhsIter = lhs.annotationIterator();,if (lhs != null ) Iterator<BugAnnotation> lhsIter = lhs.annotationIterator();
BugHistory.java,Iterator<BugAnnotation> rhsIter = rhs.annotationIterator();,if (rhs != null ) Iterator<BugAnnotation> rhsIter = rhs.annotationIterator();
BugHistory.java,BugAnnotation lhsAnnotation = lhsIter.next();,if (lhsIter != null ) BugAnnotation lhsAnnotation = lhsIter.next();
BugHistory.java,BugAnnotation rhsAnnotation = rhsIter.next();,if (rhsIter != null ) BugAnnotation rhsAnnotation = rhsIter.next();
FindBugsFrame.java,result = bugInstance.getMessage();,if (bugInstance != null ) result = bugInstance.getMessage();
FindBugsFrame.java,result = bugInstance.toString();,if (bugInstance != null ) result = bugInstance.toString();
FindBugsFrame.java,boolean experimental = bugInstance.isExperimental();,if (bugInstance != null ) boolean experimental = bugInstance.isExperimental();
Project.java,line = reader.readLine();,if (reader != null ) line = reader.readLine();
DroppedException.java,Token token = tokenizer.next();,if (tokenizer != null ) Token token = tokenizer.next();
DroppedException.java,int type = token.getKind();,if (token != null ) int type = token.getKind();
DroppedException.java,String value = token.getLexeme();,if (token != null ) String value = token.getLexeme();
DroppedException.java,int type = tok.nextToken();,if (tok != null ) int type = tok.nextToken();
SourceFinder.java,data = out.toByteArray();,if (out != null ) data = out.toByteArray();
FindInconsistentSync2.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
Lookup.java,short opcode = fins.getOpcode();,if (fins != null ) short opcode = fins.getOpcode();
InstanceField.java,cmp = className.compareTo(other.getClassName());,if (className != null ) cmp = className.compareTo(other.getClassName());
InstanceField.java,cmp = fieldName.compareTo(other.getFieldName());,if (fieldName != null ) cmp = fieldName.compareTo(other.getFieldName());
StaticField.java,cmp = className.compareTo(other.getClassName());,if (className != null ) cmp = className.compareTo(other.getClassName());
StaticField.java,cmp = fieldName.compareTo(other.getFieldName());,if (fieldName != null ) cmp = fieldName.compareTo(other.getFieldName());
FindInconsistentSync2.java,Instruction ins = location.getHandle().getInstruction();,if (location != null ) Instruction ins = location.getHandle().getInstruction();
FindInconsistentSync2.java,JavaClass javaClass = classContext.getJavaClass();,if (classContext != null ) JavaClass javaClass = classContext.getJavaClass();
FindInconsistentSync2.java,Method[] methodList = javaClass.getMethods();,if (javaClass != null ) Method[] methodList = javaClass.getMethods();
FindInconsistentSync2.java,Method method = workList.removeLast();,if (workList != null ) Method method = workList.removeLast();
FindInconsistentSync2.java,Method method = callSite.getMethod();,if (callSite != null ) Method method = callSite.getMethod();
FindInconsistentSync2.java,LockSet lockSet = lockDataflow.getFactAtLocation(callSite.getLocation());,if (lockDataflow != null ) LockSet lockSet = lockDataflow.getFactAtLocation(callSite.getLocation());
SelfCalls.java,ConstantPoolGen cpg = mg.getConstantPool();,if (mg != null ) ConstantPoolGen cpg = mg.getConstantPool();
BasicBlock.java,Edge next = cur.getNextIncomingEdge();,if (cur != null ) Edge next = cur.getNextIncomingEdge();
BasicBlock.java,Edge next = cur.getNextOutgoingEdge();,if (cur != null ) Edge next = cur.getNextOutgoingEdge();
BasicBlock.java,cur = cur.getNextOutgoingEdge();,if (cur != null ) cur = cur.getNextOutgoingEdge();
CFG.java,this.edge = source.getFirstOutgoingEdge();,if (source != null ) this.edge = source.getFirstOutgoingEdge();
CFG.java,edge = edge.getNextOutgoingEdge();,if (edge != null ) edge = edge.getNextOutgoingEdge();
CFG.java,this.edge = dest.getFirstIncomingEdge();,if (dest != null ) this.edge = dest.getFirstIncomingEdge();
CFG.java,edge = edge.getNextIncomingEdge();,if (edge != null ) edge = edge.getNextIncomingEdge();
Edge.java,InstructionHandle targetInstruction = dest.getFirstInstruction();,if (dest != null ) InstructionHandle targetInstruction = dest.getFirstInstruction();
Edge.java,targetInstruction = dest.getExceptionThrower();,if (dest != null ) targetInstruction = dest.getExceptionThrower();
BetterCFGBuilder2.java,BasicBlock resultTarget = context.getBlock(edge.getDest());,if (context != null ) BasicBlock resultTarget = context.getBlock(edge.getDest());
DepthFirstSearch.java,BasicBlock succ = edge.getDest();,if (edge != null ) BasicBlock succ = edge.getDest();
DepthFirstSearch.java,int destDiscoveryTime = getDiscoveryTime(edge.getDest());,if (getDiscoveryTime(edge != null ) int destDiscoveryTime = getDiscoveryTime(edge.getDest());
IsNullValueAnalysis.java,final BasicBlock destBlock = edge.getDest();,if (edge != null ) final BasicBlock destBlock = edge.getDest();
PruneInfeasibleExceptionEdges.java,BasicBlock handlerBlock = edge.getDest();,if (edge != null ) BasicBlock handlerBlock = edge.getDest();
ResourceValueAnalysis.java,BasicBlock dest = edge.getDest();,if (edge != null ) BasicBlock dest = edge.getDest();
SimplePathEnumerator.java,Iterator<Edge> i = cfg.outgoingEdgeIterator(last.getDest());,if (cfg != null ) Iterator<Edge> i = cfg.outgoingEdgeIterator(last.getDest());
TypeAnalysis.java,BasicBlock basicBlock = edge.getDest();,if (edge != null ) BasicBlock basicBlock = edge.getDest();
ValueNumberAnalysis.java,BasicBlock handlerBlock = edge.getDest();,if (edge != null ) BasicBlock handlerBlock = edge.getDest();
PatternMatcher.java,BasicBlock destBlock = edge.getDest();,if (edge != null ) BasicBlock destBlock = edge.getDest();
StronglyConnectedComponents.java,Iterator<VertexType> i = transpose.getVertexIterator();,if (transpose != null ) Iterator<VertexType> i = transpose.getVertexIterator();
DepthFirstSearch.java,firstEdgeId = cfg.getFirstEdgeId();,if (cfg != null ) firstEdgeId = cfg.getFirstEdgeId();
CFG.java,this.edge = source.getFirstOutgoingEdge();,if (source != null ) this.edge = source.getFirstOutgoingEdge();
CFG.java,edge = edge.getNextOutgoingEdge();,if (edge != null ) edge = edge.getNextOutgoingEdge();
CFG.java,this.edge = dest.getFirstIncomingEdge();,if (dest != null ) this.edge = dest.getFirstIncomingEdge();
CFG.java,edge = edge.getNextIncomingEdge();,if (edge != null ) edge = edge.getNextIncomingEdge();
Transpose.java,GraphType trans = factory.createGraph();,if (factory != null ) GraphType trans = factory.createGraph();
MergeVertices.java,compositeVertexKey = toolkit.duplicateVertexKey(v.getVertexKey());,if (toolkit != null ) compositeVertexKey = toolkit.duplicateVertexKey(v.getVertexKey());
MergeVertices.java,"compositeVertexKey = combinator.combineVertexKey(compositeVertexKey, v.getVertexKey());","if (v != null ) compositeVertexKey = combinator.combineVertexKey(compositeVertexKey, v.getVertexKey());"
Transpose.java,GraphType trans = toolkit.createGraph();,if (toolkit != null ) GraphType trans = toolkit.createGraph();
LabelEquivalentVertices.java,VertexType newVertex = b.getVertex(origVertex.getVertexKey());,if (b != null ) VertexType newVertex = b.getVertex(origVertex.getVertexKey());
IsNullValueAnalysis.java,CodeExceptionGen handler = destBlock.getExceptionGen();,if (destBlock != null ) CodeExceptionGen handler = destBlock.getExceptionGen();
IsNullValueAnalysis.java,ObjectType catchType = handler.getCatchType();,if (handler != null ) ObjectType catchType = handler.getCatchType();
IsNullValueAnalysis.java,String catchClass = catchType.getClassName();,if (catchType != null ) String catchClass = catchType.getClassName();
Infeasible.java,b = (Infeasible) a.clone();,if (a != null ) b = (Infeasible) a.clone();
IsNullValueAnalysis.java,CodeExceptionGen handler = destBlock.getExceptionGen();,if (destBlock != null ) CodeExceptionGen handler = destBlock.getExceptionGen();
IsNullValueAnalysis.java,ObjectType catchType = handler.getCatchType();,if (handler != null ) ObjectType catchType = handler.getCatchType();
IsNullValueAnalysis.java,String catchClass = catchType.getClassName();,if (catchType != null ) String catchClass = catchType.getClassName();
LabelEquivalentVertices.java,VertexType newVertex = b.getVertex(origVertex.getVertexInfo());,if (b != null ) VertexType newVertex = b.getVertex(origVertex.getVertexInfo());
MergeVertices.java,compositeVertexInfo = toolkit.duplicateVertexInfo(v.getVertexInfo());,if (toolkit != null ) compositeVertexInfo = toolkit.duplicateVertexInfo(v.getVertexInfo());
MergeVertices.java,"compositeVertexInfo = combinator.combineVertexInfo(compositeVertexInfo, v.getVertexInfo());","if (v != null ) compositeVertexInfo = combinator.combineVertexInfo(compositeVertexInfo, v.getVertexInfo());"
LabelEquivalentVertices.java,Iterator<VertexType> i = a.getVertexSet().iterator();,if (a != null ) Iterator<VertexType> i = a.getVertexSet().iterator();
StronglyConnectedComponents.java,Iterator<VertexType> i = transpose.getVertexSet().iterator();,if (transpose != null ) Iterator<VertexType> i = transpose.getVertexSet().iterator();
Transpose.java,Set<VertexType> origVertexSet = orig.getVertexSet();,if (orig != null ) Set<VertexType> origVertexSet = orig.getVertexSet();
Transpose.java,Set<EdgeType> origEdgeSet = orig.getEdgeSet();,if (orig != null ) Set<EdgeType> origEdgeSet = orig.getEdgeSet();
PruneInfeasibleExceptionEdges.java,Type throwType = frame.getTopValue();,if (frame != null ) Type throwType = frame.getTopValue();
CFGPrinter.java,CFG cfg = builder.getCFG();,if (builder != null ) CFG cfg = builder.getCFG();
PruneInfeasibleExceptionEdges.java,String catchClassName = SignatureConverter.convert(catchType.getSignature());,if (SignatureConverter != null ) String catchClassName = SignatureConverter.convert(catchType.getSignature());
FindNullDeref.java,boolean onExceptionPath = refValue.isException();,if (refValue != null ) boolean onExceptionPath = refValue.isException();
ValueNumberFrameModelingVisitor.java,ValueNumber reference = frame.popValue();,if (frame != null ) ValueNumber reference = frame.popValue();
ValueNumberFrameModelingVisitor.java,outputValueList[i] = factory.createFreshValue();,if (factory != null ) outputValueList[i] = factory.createFreshValue();
ValueNumberFrame.java,Iterator<AvailableLoad> i = availableLoadMap.keySet().iterator();,if (availableLoadMap != null ) Iterator<AvailableLoad> i = availableLoadMap.keySet().iterator();
ValueNumberFrameModelingVisitor.java,ValueNumber reference = frame.popValue();,if (frame != null ) ValueNumber reference = frame.popValue();
ValueNumberFrameModelingVisitor.java,ValueNumber reference = frame.popValue();,if (frame != null ) ValueNumber reference = frame.popValue();
FindOpenStream.java,String sourceFile = javaClass.getSourceFileName();,if (javaClass != null ) String sourceFile = javaClass.getSourceFileName();
ResourceTrackingDetector.java,BasicBlock basicBlock = location.getBasicBlock();,if (location != null ) BasicBlock basicBlock = location.getBasicBlock();
ResourceTrackingDetector.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
ValueNumberFrameModelingVisitor.java,outputValueList[i] = factory.createFreshValue();,if (factory != null ) outputValueList[i] = factory.createFreshValue();
ValueNumberFrameModelingVisitor.java,ValueNumber reference = frame.getTopValue();,if (frame != null ) ValueNumber reference = frame.getTopValue();
DataflowTestDriver.java,ConstantPoolGen cpg = cg.getConstantPool();,if (cg != null ) ConstantPoolGen cpg = cg.getConstantPool();
DataflowTestDriver.java,Method[] methods = cg.getMethods();,if (cg != null ) Method[] methods = cg.getMethods();
DataflowTestDriver.java,CFG cfg = cfgBuilder.getCFG();,if (cfgBuilder != null ) CFG cfg = cfgBuilder.getCFG();
IsNullValueAnalysis.java,DepthFirstSearch dfs = new DepthFirstSearch(cfg).search();,if (DepthFirstSearch(cfg) != null ) DepthFirstSearch dfs = new DepthFirstSearch(cfg).search();
LockAnalysis.java,DepthFirstSearch dfs = new DepthFirstSearch(cfg).search();,if (DepthFirstSearch(cfg) != null ) DepthFirstSearch dfs = new DepthFirstSearch(cfg).search();
OtherLockCountAnalysis.java,DepthFirstSearch dfs = new DepthFirstSearch(cfg).search();,if (DepthFirstSearch(cfg) != null ) DepthFirstSearch dfs = new DepthFirstSearch(cfg).search();
ResourceValueAnalysisTestDriver.java,ConstantPoolGen cpg = classGen.getConstantPool();,if (classGen != null ) ConstantPoolGen cpg = classGen.getConstantPool();
ResourceValueAnalysisTestDriver.java,CFG cfg = cfgBuilder.getCFG();,if (cfgBuilder != null ) CFG cfg = cfgBuilder.getCFG();
ResourceValueAnalysisTestDriver.java,DepthFirstSearch dfs = new DepthFirstSearch(cfg).search();,if (DepthFirstSearch(cfg) != null ) DepthFirstSearch dfs = new DepthFirstSearch(cfg).search();
ThisLockCountAnalysis.java,DepthFirstSearch dfs = new DepthFirstSearch(cfg).search();,if (DepthFirstSearch(cfg) != null ) DepthFirstSearch dfs = new DepthFirstSearch(cfg).search();
LockAnalysis.java,int numValues = vna.getNumValuesAllocated();,if (vna != null ) int numValues = vna.getNumValuesAllocated();
LockSetAnalysis.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
LockSetAnalysis.java,ValueNumber topOfStack = frame.getTopValue();,if (frame != null ) ValueNumber topOfStack = frame.getTopValue();
LockSetAnalysis.java,int valNum = topOfStack.getNumber();,if (topOfStack != null ) int valNum = topOfStack.getNumber();
FindNullDeref.java,Iterator<BasicBlock> bbIter = invDataflow.getCFG().blockIterator();,if (invDataflow != null ) Iterator<BasicBlock> bbIter = invDataflow.getCFG().blockIterator();
FindNullDeref.java,BasicBlock basicBlock = bbIter.next();,if (bbIter != null ) BasicBlock basicBlock = bbIter.next();
FindNullDeref.java,InstructionHandle exceptionThrowerHandle = basicBlock.getExceptionThrower();,if (basicBlock != null ) InstructionHandle exceptionThrowerHandle = basicBlock.getExceptionThrower();
FindNullDeref.java,Instruction exceptionThrower = exceptionThrowerHandle.getInstruction();,if (exceptionThrowerHandle != null ) Instruction exceptionThrower = exceptionThrowerHandle.getInstruction();
FindNullDeref.java,int consumed = exceptionThrower.consumeStack(classContext.getConstantPoolGen());,if (exceptionThrower != null ) int consumed = exceptionThrower.consumeStack(classContext.getConstantPoolGen());
FindNullDeref.java,boolean onExceptionPath = refValue.isException();,if (refValue != null ) boolean onExceptionPath = refValue.isException();
FindNullDeref.java,InstructionHandle lastHandle = basicBlock.getLastInstruction();,if (basicBlock != null ) InstructionHandle lastHandle = basicBlock.getLastInstruction();
FindNullDeref.java,Instruction last = lastHandle.getInstruction();,if (lastHandle != null ) Instruction last = lastHandle.getInstruction();
FindNullDeref.java,short opcode = last.getOpcode();,if (last != null ) short opcode = last.getOpcode();
FindNullDeref.java,int numSlots = frame.getNumSlots();,if (frame != null ) int numSlots = frame.getNumSlots();
FindNullDeref.java,IsNullValue top = frame.getTopValue();,if (frame != null ) IsNullValue top = frame.getTopValue();
AnalysisRun.java,TransformerFactory tf = TransformerFactory.newInstance();,if (TransformerFactory != null ) TransformerFactory tf = TransformerFactory.newInstance();
AnalysisRun.java,summary = html.toString();,if (html != null ) summary = html.toString();
AnalysisRun.java,Reader rdr = in.getReader();,if (in != null ) Reader rdr = in.getReader();
AnalysisRun.java,InputStream is = xsl.getInputStream();,if (xsl != null ) InputStream is = xsl.getInputStream();
BugCollection.java,Iterator<BugInstance> i = this.iterator();,if (this != null ) Iterator<BugInstance> i = this.iterator();
AnalysisRun.java,ProjectStats stats = reporter.getProjectStats();,if (reporter != null ) ProjectStats stats = reporter.getProjectStats();
FindBugsSummaryStats.java,Document document = DocumentHelper.createDocument();,if (DocumentHelper != null ) Document document = DocumentHelper.createDocument();
FindBugsSummaryStats.java,"XMLWriter writer = new XMLWriter(out, OutputFormat.createPrettyPrint());","if (OutputFormat != null ) XMLWriter writer = new XMLWriter(out, OutputFormat.createPrettyPrint());"
FindBugsSummaryStats.java,Iterator<PackageStats> i = packageStatsMap.values().iterator();,if (packageStatsMap != null ) Iterator<PackageStats> i = packageStatsMap.values().iterator();
FindBugsSummaryStats.java,Iterator<String> itr = packageClasses.iterator();,if (packageClasses != null ) Iterator<String> itr = packageClasses.iterator();
FindBugsSummaryStats.java,String name = itr.next();,if (itr != null ) String name = itr.next();
FindBugsSummaryStats.java,Iterator<String> itr = packageClasses.iterator();,if (packageClasses != null ) Iterator<String> itr = packageClasses.iterator();
FindBugsSummaryStats.java,Iterator<BugInstance> itr = packageErrors.iterator();,if (packageErrors != null ) Iterator<BugInstance> itr = packageErrors.iterator();
FindBugsSummaryStats.java,BugInstance bug = itr.next();,if (itr != null ) BugInstance bug = itr.next();
FindBugsSummaryStats.java,Iterator<BugInstance> itr = classErrorList.iterator();,if (classErrorList != null ) Iterator<BugInstance> itr = classErrorList.iterator();
FindBugsSummaryStats.java,BugInstance bug = itr.next();,if (itr != null ) BugInstance bug = itr.next();
FindBugsSummaryStats.java,Iterator<BugInstance> itr = interfaceErrorList.iterator();,if (interfaceErrorList != null ) Iterator<BugInstance> itr = interfaceErrorList.iterator();
FindBugsSummaryStats.java,BugInstance bug = itr.next();,if (itr != null ) BugInstance bug = itr.next();
CFGBuildingDetector.java,JavaClass jclass = classContext.getJavaClass();,if (classContext != null ) JavaClass jclass = classContext.getJavaClass();
CFGBuildingDetector.java,Method[] methods = jclass.getMethods();,if (jclass != null ) Method[] methods = jclass.getMethods();
CFGBuildingDetector.java,Iterator<BasicBlock> i = cfg.blockIterator();,if (cfg != null ) Iterator<BasicBlock> i = cfg.blockIterator();
CFGBuildingDetector.java,Iterator<InstructionHandle> j = bb.instructionIterator();,if (bb != null ) Iterator<InstructionHandle> j = bb.instructionIterator();
FindInconsistentSync.java,JavaClass jclass = classContext.getJavaClass();,if (classContext != null ) JavaClass jclass = classContext.getJavaClass();
FindInconsistentSync.java,String className = jclass.getClassName();,if (jclass != null ) String className = jclass.getClassName();
FindInconsistentSync.java,inConstructor = isConstructor(methodGen.getName());,if (isConstructor(methodGen != null ) inConstructor = isConstructor(methodGen.getName());
FindInconsistentSync.java,ConstantPoolGen cpg = methodGen.getConstantPool();,if (methodGen != null ) ConstantPoolGen cpg = methodGen.getConstantPool();
FindInconsistentSync.java,String sourceFile = getJavaClass().getSourceFileName();,if (getJavaClass() != null ) String sourceFile = getJavaClass().getSourceFileName();
FindInconsistentSync.java,DataflowAnalysis<LockCount> analysis = dataflow.getAnalysis();,if (dataflow != null ) DataflowAnalysis<LockCount> analysis = dataflow.getAnalysis();
FindTwoLockWait.java,LockCount count = analysis.createFact();,if (analysis != null ) LockCount count = analysis.createFact();
FindTwoLockWait.java,String sourceFile = getJavaClass().getSourceFileName();,if (getJavaClass() != null ) String sourceFile = getJavaClass().getSourceFileName();
SimplePathsFindDoubleCheck.java,InstructionList il = mg.getInstructionList();,if (mg != null ) InstructionList il = mg.getInstructionList();
SimplePathsFindDoubleCheck.java,InstructionHandle handle = il.getStart();,if (il != null ) InstructionHandle handle = il.getStart();
SimplePathsFindDoubleCheck.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
SimplePathsFindDoubleCheck.java,handle = handle.getNext();,if (handle != null ) handle = handle.getNext();
SimplePathsFindDoubleCheck.java,cpg = methodGen.getConstantPool();,if (methodGen != null ) cpg = methodGen.getConstantPool();
SimplePathsFindDoubleCheck.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
SimplePathsFindDoubleCheck.java,String sourceFile = getJavaClass().getSourceFileName();,if (getJavaClass() != null ) String sourceFile = getJavaClass().getSourceFileName();
SimplePathsFindDoubleCheck.java,InstructionHandle handle = edge.getSource().getLastInstruction();,if (edge != null ) InstructionHandle handle = edge.getSource().getLastInstruction();
SimplePathsFindDoubleCheck.java,Instruction branch = handle.getInstruction();,if (handle != null ) Instruction branch = handle.getInstruction();
SimplePathsFindDoubleCheck.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
ClassContext.java,cfg = cfgBuilder.getCFG();,if (cfgBuilder != null ) cfg = cfgBuilder.getCFG();
ClassContext.java,Code code = method.getCode();,if (method != null ) Code code = method.getCode();
ClassContext.java,byte[] instructionList = code.getCode();,if (code != null ) byte[] instructionList = code.getCode();
FindRefComparison.java,TypeFrameModelingVisitor visitor = new RefComparisonTypeFrameModelingVisitor(methodGen.getConstantPool());,if (RefComparisonTypeFrameModelingVisitor(methodGen != null ) TypeFrameModelingVisitor visitor = new RefComparisonTypeFrameModelingVisitor(methodGen.getConstantPool());
FindRefComparison.java,TypeFrameModelingVisitor visitor = new RefComparisonTypeFrameModelingVisitor(methodGen.getConstantPool());,if (RefComparisonTypeFrameModelingVisitor(methodGen != null ) TypeFrameModelingVisitor visitor = new RefComparisonTypeFrameModelingVisitor(methodGen.getConstantPool());
FindRefComparison.java,String sourceFile = jclass.getSourceFileName();,if (jclass != null ) String sourceFile = jclass.getSourceFileName();
FindRefComparison.java,ConstantPoolGen cpg = methodGen.getConstantPool();,if (methodGen != null ) ConstantPoolGen cpg = methodGen.getConstantPool();
FindRefComparison.java,InstructionHandle handle = methodGen.getInstructionList().getStart();,if (methodGen != null ) InstructionHandle handle = methodGen.getInstructionList().getStart();
FindRefComparison.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
FindRefComparison.java,short opcode = ins.getOpcode();,if (ins != null ) short opcode = ins.getOpcode();
FindRefComparison.java,handle = handle.getNext();,if (handle != null ) handle = handle.getNext();
FindRefComparison.java,String className = newIns.getLoadClassType(cpg).getClassName();,if (newIns != null ) String className = newIns.getLoadClassType(cpg).getClassName();
TypeAnalysis.java,this.visitor = new TypeFrameModelingVisitor(methodGen.getConstantPool());,if (TypeFrameModelingVisitor(methodGen != null ) this.visitor = new TypeFrameModelingVisitor(methodGen.getConstantPool());
DetectorFactoryCollection.java,String homeDir = FindBugs.getHome();,if (FindBugs != null ) String homeDir = FindBugs.getHome();
DetectorFactoryCollection.java,File[] contentList = pluginDir.listFiles();,if (pluginDir != null ) File[] contentList = pluginDir.listFiles();
DetectorFactoryCollection.java,URL url = file.toURL();,if (file != null ) URL url = file.toURL();
DetectorFactoryCollection.java,DetectorFactory[] detectorFactoryList = pluginLoader.getDetectorFactoryList();,if (pluginLoader != null ) DetectorFactory[] detectorFactoryList = pluginLoader.getDetectorFactoryList();
DetectorFactoryCollection.java,BugPattern[] bugPatternList = pluginLoader.getBugPatternList();,if (pluginLoader != null ) BugPattern[] bugPatternList = pluginLoader.getBugPatternList();
DetectorFactoryCollection.java,BugCode[] bugCodeList = pluginLoader.getBugCodeList();,if (pluginLoader != null ) BugCode[] bugCodeList = pluginLoader.getBugCodeList();
FindRefComparison.java,ConstantPoolGen cpg = methodGen.getConstantPool();,if (methodGen != null ) ConstantPoolGen cpg = methodGen.getConstantPool();
FindNullDeref.java,String sourceFile = jclass.getSourceFileName();,if (jclass != null ) String sourceFile = jclass.getSourceFileName();
FindRefComparison.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
FindRefComparison.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
FindRefComparison.java,short opcode = ins.getOpcode();,if (ins != null ) short opcode = ins.getOpcode();
FindRefComparison.java,int numSlots = frame.getNumSlots();,if (frame != null ) int numSlots = frame.getNumSlots();
FindRefComparison.java,String sourceFile = jclass.getSourceFileName();,if (jclass != null ) String sourceFile = jclass.getSourceFileName();
Dataflow.java,Fact result = analysis.createFact();,if (analysis != null ) Fact result = analysis.createFact();
ValueNumberCache.java,int code = instruction.getOpcode();,if (instruction != null ) int code = instruction.getOpcode();
FindBugsFrame.java,result = bugInstance.getMessage();,if (bugInstance != null ) result = bugInstance.getMessage();
FindBugsFrame.java,result = bugInstance.toString();,if (bugInstance != null ) result = bugInstance.toString();
FindBugsFrame.java,boolean experimental = bugInstance.isExperimental();,if (bugInstance != null ) boolean experimental = bugInstance.isExperimental();
SerializableIdiom.java,int flags = obj.getAccessFlags();,if (obj != null ) int flags = obj.getAccessFlags();
StackDepthAnalysis.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
StackDepthAnalysis.java,JavaClass jclass = new RepositoryClassParser(className).parse();,if (RepositoryClassParser(className) != null ) JavaClass jclass = new RepositoryClassParser(className).parse();
StackDepthAnalysis.java,ConstantPoolGen cpg = cg.getConstantPool();,if (cg != null ) ConstantPoolGen cpg = cg.getConstantPool();
StackDepthAnalysis.java,Method[] methods = cg.getMethods();,if (cg != null ) Method[] methods = cg.getMethods();
StackDepthAnalysis.java,CFG cfg = cfgBuilder.getCFG();,if (cfgBuilder != null ) CFG cfg = cfgBuilder.getCFG();
FindRefComparison.java,JavaClass jclass = classContext.getJavaClass();,if (classContext != null ) JavaClass jclass = classContext.getJavaClass();
TypeFrameModelingVisitor.java,Type arrayType = frame.popValue();,if (frame != null ) Type arrayType = frame.popValue();
Frame.java,String value = getValue(i).toString();,if (getValue(i) != null ) String value = getValue(i).toString();
FindBugs.java,ZipEntry entry = (ZipEntry) entries.nextElement();,if (entries != null ) ZipEntry entry = (ZipEntry) entries.nextElement();
FindBugs.java,"String fullEntryName = fileName + "":"" + classEntry.getName();","if (classEntry != null ) String fullEntryName = fileName + "":"" + classEntry.getName();"
DepthFirstSearch.java,BasicBlock succ = succIter.next();,if (succIter != null ) BasicBlock succ = succIter.next();
TypeAnalysis.java,"TypeFrameModelingVisitor visitor = new TypeFrameModelingVisitor(fact, methodGen.getConstantPool());","if (methodGen != null ) TypeFrameModelingVisitor visitor = new TypeFrameModelingVisitor(fact, methodGen.getConstantPool());"
TypeFrameModelingVisitor.java,int local = obj.getIndex();,if (obj != null ) int local = obj.getIndex();
TypeFrameModelingVisitor.java,int local = obj.getIndex();,if (obj != null ) int local = obj.getIndex();
TypeFrameModelingVisitor.java,int local = obj.getIndex();,if (obj != null ) int local = obj.getIndex();
TypeFrameModelingVisitor.java,int local = obj.getIndex();,if (obj != null ) int local = obj.getIndex();
TypeFrameModelingVisitor.java,int local = obj.getIndex();,if (obj != null ) int local = obj.getIndex();
TypeFrameModelingVisitor.java,int local = obj.getIndex();,if (obj != null ) int local = obj.getIndex();
FrameTypeAnalysis.java,Type[] argumentTypes = methodGen.getArgumentTypes();,if (methodGen != null ) Type[] argumentTypes = methodGen.getArgumentTypes();
FrameTypeAnalysis.java,"FrameTypeModelingVisitor visitor = new FrameTypeModelingVisitor(fact, methodGen.getConstantPool());","if (methodGen != null ) FrameTypeModelingVisitor visitor = new FrameTypeModelingVisitor(fact, methodGen.getConstantPool());"
FrameTypeAnalysis.java,BasicBlock basicBlock = edge.getDest();,if (edge != null ) BasicBlock basicBlock = edge.getDest();
FrameTypeAnalysis.java,CodeExceptionGen exceptionGen = basicBlock.getExceptionGen();,if (basicBlock != null ) CodeExceptionGen exceptionGen = basicBlock.getExceptionGen();
FrameTypeModelingVisitor.java,int local = obj.getIndex();,if (obj != null ) int local = obj.getIndex();
FrameTypeModelingVisitor.java,int local = obj.getIndex();,if (obj != null ) int local = obj.getIndex();
FrameTypeModelingVisitor.java,int local = obj.getIndex();,if (obj != null ) int local = obj.getIndex();
FrameTypeModelingVisitor.java,int local = obj.getIndex();,if (obj != null ) int local = obj.getIndex();
FrameTypeModelingVisitor.java,int local = obj.getIndex();,if (obj != null ) int local = obj.getIndex();
FrameTypeModelingVisitor.java,int local = obj.getIndex();,if (obj != null ) int local = obj.getIndex();
FindBugsFrame.java,Object obj = node.getUserObject();,if (node != null ) Object obj = node.getUserObject();
FindUnreleasedLock.java,final int origNumSlots = frame.getNumSlots();,if (frame != null ) final int origNumSlots = frame.getNumSlots();
FindUnreleasedLock.java,ValueNumber instanceValueNumber = vnaFrame.getTopValue();,if (vnaFrame != null ) ValueNumber instanceValueNumber = vnaFrame.getTopValue();
FindUnreleasedLock.java,final int updatedNumSlots = frame.getNumSlots();,if (frame != null ) final int updatedNumSlots = frame.getNumSlots();
ResourceValueAnalysis.java,InstructionHandle exceptionThrower = source.getExceptionThrower();,if (source != null ) InstructionHandle exceptionThrower = source.getExceptionThrower();
FindUnreleasedLock.java,int numSlots = frame.getNumSlots();,if (frame != null ) int numSlots = frame.getNumSlots();
ResourceValueAnalysis.java,Field[] fieldList = jclass.getFields();,if (jclass != null ) Field[] fieldList = jclass.getFields();
FindBugsTask.java,String[] list = classes.list();,if (classes != null ) String[] list = classes.list();
FindBugsTask.java,Iterator i = checkList.iterator();,if (checkList != null ) Iterator i = checkList.iterator();
FindBugsTask.java,String fileName = (String) i.next();,if (i != null ) String fileName = (String) i.next();
FindBugsTask.java,String message = ex.getMessage();,if (ex != null ) String message = ex.getMessage();
FindBugsTask.java,Iterator i = suppressList.iterator();,if (suppressList != null ) Iterator i = suppressList.iterator();
FindBugsTask.java,SuppressError se = (SuppressError) i.next();,if (i != null ) SuppressError se = (SuppressError) i.next();
FindBugsTask.java,Iterator i = bugInstanceSet.iterator();,if (bugInstanceSet != null ) Iterator i = bugInstanceSet.iterator();
FindBugsTask.java,BugInstance bugInstance = (BugInstance) i.next();,if (i != null ) BugInstance bugInstance = (BugInstance) i.next();
FindBugsTask.java,mError = pError.trim();,if (pError != null ) mError = pError.trim();
BetterCFGBuilder2.java,Iterator<CodeExceptionGen> i = exceptionHandlerList.iterator();,if (exceptionHandlerList != null ) Iterator<CodeExceptionGen> i = exceptionHandlerList.iterator();
BetterCFGBuilder2.java,InstructionHandle handlerStart = exceptionHandler.getHandlerPC();,if (exceptionHandler != null ) InstructionHandle handlerStart = exceptionHandler.getHandlerPC();
FindUnreleasedLock.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
FindUnreleasedLock.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
FindOpenStream.java,JavaClass jclass = new ClassParser(classFile).parse();,if (ClassParser(classFile) != null ) JavaClass jclass = new ClassParser(classFile).parse();
FindOpenStream.java,ConstantPoolGen cpg = classGen.getConstantPool();,if (classGen != null ) ConstantPoolGen cpg = classGen.getConstantPool();
FindOpenStream.java,Method[] methodList = jclass.getMethods();,if (jclass != null ) Method[] methodList = jclass.getMethods();
FindOpenStream.java,CFG cfg = cfgBuilder.getCFG();,if (cfgBuilder != null ) CFG cfg = cfgBuilder.getCFG();
FindOpenStream.java,BasicBlock basicBlock = ii.next();,if (ii != null ) BasicBlock basicBlock = ii.next();
ResourceTrackingDetector.java,JavaClass jclass = classContext.getJavaClass();,if (classContext != null ) JavaClass jclass = classContext.getJavaClass();
FindBugsFrame.java,String sourceFile = analysisRun.getSourceFile(srcLine.getClassName());,if (analysisRun != null ) String sourceFile = analysisRun.getSourceFile(srcLine.getClassName());
ClassContext.java,byte[] instructionList = method.getCode().getCode();,if (method != null ) byte[] instructionList = method.getCode().getCode();
FindBugs.java,JavaClass jv = new ClassParser(fileName).parse();,if (ClassParser(fileName) != null ) JavaClass jv = new ClassParser(fileName).parse();
FindBugs.java,JavaClass jclass = classProducer.getNextClass();,if (classProducer != null ) JavaClass jclass = classProducer.getNextClass();
FindBugsTask.java,String[] list = classes.list();,if (classes != null ) String[] list = classes.list();
FindBugsTask.java,Iterator i = checkList.iterator();,if (checkList != null ) Iterator i = checkList.iterator();
FindBugsTask.java,String fileName = (String) i.next();,if (i != null ) String fileName = (String) i.next();
FindBugsFrame.java,currentDirectory = file.getParentFile();,if (file != null ) currentDirectory = file.getParentFile();
FindBugsFrame.java,currentDirectory = chooser.getSelectedFile().getParentFile();,if (chooser != null ) currentDirectory = chooser.getSelectedFile().getParentFile();
FindBugsFrame.java,File selectedFile = chooser.getSelectedFile();,if (chooser != null ) File selectedFile = chooser.getSelectedFile();
BugCollection.java,Iterator<BugInstance> i = this.iterator();,if (this != null ) Iterator<BugInstance> i = this.iterator();
FindInconsistentSync.java,String className = jclass.getClassName();,if (jclass != null ) String className = jclass.getClassName();
AnalysisRun.java,List auxClasspathEntryList = project.getAuxClasspathEntryList();,if (project != null ) List auxClasspathEntryList = project.getAuxClasspathEntryList();
AnalysisRun.java,Iterator i = auxClasspathEntryList.iterator();,if (auxClasspathEntryList != null ) Iterator i = auxClasspathEntryList.iterator();
AnalysisRun.java,String entry = (String) i.next();,if (i != null ) String entry = (String) i.next();
AnalysisRun.java,ClassPath classPath = new ClassPath(buf.toString());,if (ClassPath(buf != null ) ClassPath classPath = new ClassPath(buf.toString());
Project.java,line = reader.readLine();,if (reader != null ) line = reader.readLine();
IsNullValueAnalysis.java,BasicBlock sourceBlock = edge.getSource();,if (edge != null ) BasicBlock sourceBlock = edge.getSource();
IsNullValueAnalysis.java,int prevNumSlots = prevIsNullValueFrame.getNumSlots();,if (prevIsNullValueFrame != null ) int prevNumSlots = prevIsNullValueFrame.getNumSlots();
IsNullValueAnalysis.java,assert prevNumSlots == prevVnaFrame.getNumSlots();,if (prevVnaFrame != null ) assert prevNumSlots == prevVnaFrame.getNumSlots();
IsNullValueAnalysis.java,int numSlotsConsumed = firstInDest.consumeStack(methodGen.getConstantPool());,if (firstInDest != null ) int numSlotsConsumed = firstInDest.consumeStack(methodGen.getConstantPool());
IsNullValueAnalysis.java,final InstructionHandle lastInSourceHandle = edge.getSource().getLastInstruction();,if (edge != null ) final InstructionHandle lastInSourceHandle = edge.getSource().getLastInstruction();
IsNullValueAnalysis.java,final int edgeType = edge.getType();,if (edge != null ) final int edgeType = edge.getType();
IsNullValueAnalysis.java,Instruction lastInSource = lastInSourceHandle.getInstruction();,if (lastInSourceHandle != null ) Instruction lastInSource = lastInSourceHandle.getInstruction();
IsNullValueAnalysis.java,short opcode = lastInSource.getOpcode();,if (lastInSource != null ) short opcode = lastInSource.getOpcode();
IsNullValueAnalysis.java,"Location atIf = new Location(lastInSourceHandle, edge.getSource());","if (edge != null ) Location atIf = new Location(lastInSourceHandle, edge.getSource());"
IsNullValueAnalysis.java,int numSlots = frame.getNumSlots();,if (frame != null ) int numSlots = frame.getNumSlots();
IsNullValueAnalysis.java,boolean tosNull = tos.isDefinitelyNull();,if (tos != null ) boolean tosNull = tos.isDefinitelyNull();
IsNullValueAnalysis.java,boolean nextToTosNull = nextToTos.isDefinitelyNull();,if (nextToTos != null ) boolean nextToTosNull = nextToTos.isDefinitelyNull();
SourceFinder.java,fileName = fullName.toString();,if (fullName != null ) fileName = fullName.toString();
SourceFinder.java,Iterator<String> i = sourceBaseList.iterator();,if (sourceBaseList != null ) Iterator<String> i = sourceBaseList.iterator();
SourceFinder.java,data = out.toByteArray();,if (out != null ) data = out.toByteArray();
FindOpenStream.java,JavaClass jclass = classContext.getJavaClass();,if (classContext != null ) JavaClass jclass = classContext.getJavaClass();
FindOpenStream.java,Method[] methodList = jclass.getMethods();,if (jclass != null ) Method[] methodList = jclass.getMethods();
FindOpenStream.java,BasicBlock basicBlock = location.getBasicBlock();,if (location != null ) BasicBlock basicBlock = location.getBasicBlock();
FindOpenStream.java,InstructionHandle handle = location.getHandle();,if (location != null ) InstructionHandle handle = location.getHandle();
FindOpenStream.java,ResourceValueFrame exitFrame = dataflow.getResultFact(cfg.getExit());,if (dataflow != null ) ResourceValueFrame exitFrame = dataflow.getResultFact(cfg.getExit());
FindOpenStream.java,int exitStatus = exitFrame.getStatus();,if (exitFrame != null ) int exitStatus = exitFrame.getStatus();
FindOpenStream.java,InstructionList il = methodGen.getInstructionList();,if (methodGen != null ) InstructionList il = methodGen.getInstructionList();
FindOpenStream.java,Iterator<BasicBlock> bbIter = cfg.blockIterator();,if (cfg != null ) Iterator<BasicBlock> bbIter = cfg.blockIterator();
FindOpenStream.java,BasicBlock basicBlock = bbIter.next();,if (bbIter != null ) BasicBlock basicBlock = bbIter.next();
FindOpenStream.java,Iterator<InstructionHandle> insIter = basicBlock.instructionIterator();,if (basicBlock != null ) Iterator<InstructionHandle> insIter = basicBlock.instructionIterator();
FindOpenStream.java,InstructionHandle handle = insIter.next();,if (insIter != null ) InstructionHandle handle = insIter.next();
FindOpenStream.java,ResourceValueFrame exitFrame = dataflow.getResultFact(cfg.getExit());,if (dataflow != null ) ResourceValueFrame exitFrame = dataflow.getResultFact(cfg.getExit());
FindOpenStream.java,int exitStatus = exitFrame.getStatus();,if (exitFrame != null ) int exitStatus = exitFrame.getStatus();
BetterCFGBuilder.java,this.cpg = methodGen.getConstantPool();,if (methodGen != null ) this.cpg = methodGen.getConstantPool();
BetterCFGBuilder.java,WorkListItem item = workList.removeFirst();,if (workList != null ) WorkListItem item = workList.removeFirst();
BetterCFGBuilder.java,BasicBlock nextBasicBlock = cfg.allocate();,if (cfg != null ) BasicBlock nextBasicBlock = cfg.allocate();
BetterCFGBuilder.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
BetterCFGBuilder.java,next = jsr.getTarget();,if (jsr != null ) next = jsr.getTarget();
BetterCFGBuilder.java,next = jsrStack.removeLast().getNext();,if (jsrStack != null ) next = jsrStack.removeLast().getNext();
BetterCFGBuilder.java,next = handle.getNext();,if (handle != null ) next = handle.getNext();
BetterCFGBuilder.java,Iterator<Target> i = visitor.targetIterator();,if (visitor != null ) Iterator<Target> i = visitor.targetIterator();
BetterCFGBuilder.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
BetterCFGBuilder.java,basicBlock = cfg.allocate();,if (cfg != null ) basicBlock = cfg.allocate();
BetterCFGBuilder.java,Instruction instruction = handle.getInstruction();,if (handle != null ) Instruction instruction = handle.getInstruction();
BetterCFGBuilder.java,Iterator<CodeExceptionGen> i = exceptionHandlerList.iterator();,if (exceptionHandlerList != null ) Iterator<CodeExceptionGen> i = exceptionHandlerList.iterator();
BetterCFGBuilder.java,ObjectType catchType = exceptionHandler.getCatchType();,if (exceptionHandler != null ) ObjectType catchType = exceptionHandler.getCatchType();
BetterCFGBuilder.java,InstructionTargeter[] targeterList = handle.getTargeters();,if (handle != null ) InstructionTargeter[] targeterList = handle.getTargeters();
BetterCFGBuilder.java,Iterator<InstructionHandle> i = basicBlock.instructionIterator();,if (basicBlock != null ) Iterator<InstructionHandle> i = basicBlock.instructionIterator();
BetterCFGBuilder.java,Method[] methodList = jclass.getMethods();,if (jclass != null ) Method[] methodList = jclass.getMethods();
BetterCFGBuilder.java,CFG cfg = cfgBuilder.getCFG();,if (cfgBuilder != null ) CFG cfg = cfgBuilder.getCFG();
BasicBlock.java,short opcode = exceptionThrower.getInstruction().getOpcode();,if (exceptionThrower != null ) short opcode = exceptionThrower.getInstruction().getOpcode();
BasicBlock.java,InstructionHandle first = iter.next();,if (iter != null ) InstructionHandle first = iter.next();
BasicBlock.java,current = iter.next();,if (iter != null ) current = iter.next();
CFG.java,Iterator<BasicBlock> bIter = this.blockIterator();,if (this != null ) Iterator<BasicBlock> bIter = this.blockIterator();
CFG.java,BasicBlock origBlock = bIter.next();,if (bIter != null ) BasicBlock origBlock = bIter.next();
CFG.java,BasicBlock dupBlock = dup.allocate();,if (dup != null ) BasicBlock dupBlock = dup.allocate();
CFG.java,int origId = origBlock.getId();,if (origBlock != null ) int origId = origBlock.getId();
CFG.java,int dupId = dupBlock.getId();,if (dupBlock != null ) int dupId = dupBlock.getId();
CFG.java,Iterator<InstructionHandle> i = origBlock.instructionIterator();,if (origBlock != null ) Iterator<InstructionHandle> i = origBlock.instructionIterator();
CFG.java,Iterator<Edge> eIter = this.edgeIterator();,if (this != null ) Iterator<Edge> eIter = this.edgeIterator();
CFG.java,Edge origEdge = eIter.next();,if (eIter != null ) Edge origEdge = eIter.next();
CFG.java,BasicBlock origSrc = origEdge.getSource();,if (origEdge != null ) BasicBlock origSrc = origEdge.getSource();
CFG.java,BasicBlock origDest = origEdge.getDest();,if (origEdge != null ) BasicBlock origDest = origEdge.getDest();
CFG.java,int sourceBytecode = origEdge.getSourceBytecode();,if (origEdge != null ) int sourceBytecode = origEdge.getSourceBytecode();
CFG.java,int destBytecode = origEdge.getDestinationBytecode();,if (origEdge != null ) int destBytecode = origEdge.getDestinationBytecode();
CFG.java,int sourceLine = origEdge.getSourceLine();,if (origEdge != null ) int sourceLine = origEdge.getSourceLine();
CFG.java,int destLine = origEdge.getDestinationLine();,if (origEdge != null ) int destLine = origEdge.getDestinationLine();
CFG.java,Iterator<Edge> i = outgoingEdgeMap.values().iterator();,if (outgoingEdgeMap != null ) Iterator<Edge> i = outgoingEdgeMap.values().iterator();
CFG.java,int edgeId = edge.getId();,if (edge != null ) int edgeId = edge.getId();
CFG.java,Iterator<InstructionHandle> i = block.instructionIterator();,if (block != null ) Iterator<InstructionHandle> i = block.instructionIterator();
CFG.java,int nextDupCount = dupEdgeMap.size();,if (dupEdgeMap != null ) int nextDupCount = dupEdgeMap.size();
CFG.java,BasicBlock source = edge.getSource();,if (edge != null ) BasicBlock source = edge.getSource();
CFG.java,BasicBlock dest = edge.getDest();,if (edge != null ) BasicBlock dest = edge.getDest();
CFG.java,BasicBlock source = edge.getSource();,if (edge != null ) BasicBlock source = edge.getSource();
CFG.java,BasicBlock dest = edge.getDest();,if (edge != null ) BasicBlock dest = edge.getDest();
CFG.java,Edge candidate = realIter.next();,if (realIter != null ) Edge candidate = realIter.next();
CFG.java,Iterator<BasicBlock> i = nodeSet.iterator();,if (nodeSet != null ) Iterator<BasicBlock> i = nodeSet.iterator();
CFG.java,max = edge.getId();,if (edge != null ) max = edge.getId();
Edge.java,InstructionHandle src = source.getLastInstruction();,if (source != null ) InstructionHandle src = source.getLastInstruction();
Edge.java,InstructionHandle dst = dest.getFirstInstruction();,if (dest != null ) InstructionHandle dst = dest.getFirstInstruction();
Edge.java,dst = dest.getExceptionThrower();,if (dest != null ) dst = dest.getExceptionThrower();
BetterCFGBuilder2.java,caller = caller.getCaller();,if (caller != null ) caller = caller.getCaller();
ResourceValueAnalysis.java,InstructionHandle exceptionThrower = source.getExceptionThrower();,if (source != null ) InstructionHandle exceptionThrower = source.getExceptionThrower();
ExceptionHandlerMap.java,InstructionHandle next = exceptionHandler.getStartPC();,if (exceptionHandler != null ) InstructionHandle next = exceptionHandler.getStartPC();
ExceptionHandlerMap.java,InstructionHandle end = exceptionHandler.getEndPC();,if (exceptionHandler != null ) InstructionHandle end = exceptionHandler.getEndPC();
ExceptionHandlerMap.java,next = handle.getNext();,if (handle != null ) next = handle.getNext();
BetterCFGBuilder2.java,InstructionHandle lastHandle = block.getLastInstruction();,if (block != null ) InstructionHandle lastHandle = block.getLastInstruction();
BetterCFGBuilder2.java,Instruction ins = lastHandle.getInstruction();,if (lastHandle != null ) Instruction ins = lastHandle.getInstruction();
BetterCFGBuilder2.java,BasicBlock.InstructionIterator i = block.instructionIterator();,if (block != null ) BasicBlock.InstructionIterator i = block.instructionIterator();
BetterCFGBuilder2.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
BetterCFGBuilder2.java,BasicBlock jsrStartBlock = jsrContext.getBlock(jsrSub.getStartBlock());,if (jsrContext != null ) BasicBlock jsrStartBlock = jsrContext.getBlock(jsrSub.getStartBlock());
BetterCFGBuilder2.java,Context context = contextWorkList.removeFirst();,if (contextWorkList != null ) Context context = contextWorkList.removeFirst();
BetterCFGBuilder2.java,WorkListItem item = context.nextItem();,if (context != null ) WorkListItem item = context.nextItem();
BetterCFGBuilder2.java,BasicBlock body = context.allocateBasicBlock();,if (context != null ) BasicBlock body = context.allocateBasicBlock();
FindOpenStream.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
FindOpenStream.java,final int numSlots = frame.getNumSlots();,if (frame != null ) final int numSlots = frame.getNumSlots();
IsNullValueAnalysis.java,BasicBlock sourceBlock = edge.getSource();,if (edge != null ) BasicBlock sourceBlock = edge.getSource();
IsNullValueAnalysis.java,int prevNumSlots = prevIsNullValueFrame.getNumSlots();,if (prevIsNullValueFrame != null ) int prevNumSlots = prevIsNullValueFrame.getNumSlots();
IsNullValueAnalysis.java,assert prevNumSlots == prevVnaFrame.getNumSlots();,if (prevVnaFrame != null ) assert prevNumSlots == prevVnaFrame.getNumSlots();
IsNullValueAnalysis.java,int numSlotsConsumed = firstInDest.consumeStack(methodGen.getConstantPool());,if (firstInDest != null ) int numSlotsConsumed = firstInDest.consumeStack(methodGen.getConstantPool());
IsNullValueAnalysis.java,final int numSlots = frame.getNumSlots();,if (frame != null ) final int numSlots = frame.getNumSlots();
IsNullValueAnalysis.java,assert numSlots == vnaFrame.getNumSlots();,if (vnaFrame != null ) assert numSlots == vnaFrame.getNumSlots();
IsNullValueAnalysis.java,ValueNumber replaceMe = prevVnaFrame.getTopValue();,if (prevVnaFrame != null ) ValueNumber replaceMe = prevVnaFrame.getTopValue();
IsNullValueAnalysis.java,IsNullValue origIsNullValue = prevIsNullValueFrame.getTopValue();,if (prevIsNullValueFrame != null ) IsNullValue origIsNullValue = prevIsNullValueFrame.getTopValue();
SortingBugReporter.java,ClassAnnotation lca = lhs.getPrimaryClass();,if (lhs != null ) ClassAnnotation lca = lhs.getPrimaryClass();
SortingBugReporter.java,ClassAnnotation rca = rhs.getPrimaryClass();,if (rhs != null ) ClassAnnotation rca = rhs.getPrimaryClass();
SortingBugReporter.java,Iterator i = bugInstanceSet.iterator();,if (bugInstanceSet != null ) Iterator i = bugInstanceSet.iterator();
SortingBugReporter.java,BugInstance bugInstance = (BugInstance) i.next();,if (i != null ) BugInstance bugInstance = (BugInstance) i.next();
IsNullValueAnalysis.java,final int numSlots = fact.getNumSlots();,if (fact != null ) final int numSlots = fact.getNumSlots();
IsNullValueAnalysis.java,final BasicBlock destBlock = edge.getDest();,if (edge != null ) final BasicBlock destBlock = edge.getDest();
IsNullValueAnalysis.java,int numSlotsConsumed = firstInDest.consumeStack(methodGen.getConstantPool());,if (firstInDest != null ) int numSlotsConsumed = firstInDest.consumeStack(methodGen.getConstantPool());
IsNullValueAnalysis.java,assert numSlots == vnaFrame.getNumSlots();,if (vnaFrame != null ) assert numSlots == vnaFrame.getNumSlots();
IsNullValueAnalysis.java,InstructionHandle first = block.getFirstInstruction();,if (block != null ) InstructionHandle first = block.getFirstInstruction();
ClassContext.java,ConstantPoolGen cpg = classGen.getConstantPool();,if (classGen != null ) ConstantPoolGen cpg = classGen.getConstantPool();
IsNullValueAnalysis.java,final int numSlots = fact.getNumSlots();,if (fact != null ) final int numSlots = fact.getNumSlots();
IsNullValueAnalysis.java,final BasicBlock destBlock = edge.getDest();,if (edge != null ) final BasicBlock destBlock = edge.getDest();
IsNullValueAnalysis.java,int numSlotsConsumed = firstInDest.consumeStack(methodGen.getConstantPool());,if (firstInDest != null ) int numSlotsConsumed = firstInDest.consumeStack(methodGen.getConstantPool());
IsNullValueAnalysis.java,InstructionHandle firstInDestHandle = edge.getDest().getFirstInstruction();,if (edge != null ) InstructionHandle firstInDestHandle = edge.getDest().getFirstInstruction();
IsNullValueAnalysis.java,Instruction firstInDest = firstInDestHandle.getInstruction();,if (firstInDestHandle != null ) Instruction firstInDest = firstInDestHandle.getInstruction();
IsNullValueAnalysis.java,short opcode = firstInDest.getOpcode();,if (firstInDest != null ) short opcode = firstInDest.getOpcode();
IsNullValueAnalysis.java,final int numSlots = result.getNumSlots();,if (result != null ) final int numSlots = result.getNumSlots();
DataflowTestDriver.java,DataflowAnalysis<Fact> analysis = dataflow.getAnalysis();,if (dataflow != null ) DataflowAnalysis<Fact> analysis = dataflow.getAnalysis();
DataflowTestDriver.java,Fact result = analysis.createFact();,if (analysis != null ) Fact result = analysis.createFact();
IsNullValueAnalysis.java,int numSlots = result.getNumSlots();,if (result != null ) int numSlots = result.getNumSlots();
IsNullValueAnalysis.java,int edgeType = edge.getType();,if (edge != null ) int edgeType = edge.getType();
IsNullValueAnalysis.java,final int numSlots = result.getNumSlots();,if (result != null ) final int numSlots = result.getNumSlots();
IsNullValueAnalysis.java,BasicBlock dest = edge.getDest();,if (edge != null ) BasicBlock dest = edge.getDest();
IsNullValueAnalysis.java,BasicBlock source = edge.getSource();,if (edge != null ) BasicBlock source = edge.getSource();
IsNullValueAnalysis.java,int edgeType = edge.getType();,if (edge != null ) int edgeType = edge.getType();
IsNullValueAnalysis.java,InstructionHandle lastInSourceHandle = source.getLastInstruction();,if (source != null ) InstructionHandle lastInSourceHandle = source.getLastInstruction();
IsNullValueAnalysis.java,Instruction lastInSource = lastInSourceHandle.getInstruction();,if (lastInSourceHandle != null ) Instruction lastInSource = lastInSourceHandle.getInstruction();
IsNullValueAnalysis.java,short opcode = lastInSource.getOpcode();,if (lastInSource != null ) short opcode = lastInSource.getOpcode();
IsNullValueAnalysis.java,ValueNumber oldTOS = vnaFrame.getTopValue();,if (vnaFrame != null ) ValueNumber oldTOS = vnaFrame.getTopValue();
IsNullValueAnalysis.java,InstructionHandle firstInDestHandle = dest.getFirstInstruction();,if (dest != null ) InstructionHandle firstInDestHandle = dest.getFirstInstruction();
IsNullValueAnalysis.java,int numSlotsConsumed = firstInDest.consumeStack(methodGen.getConstantPool());,if (firstInDest != null ) int numSlotsConsumed = firstInDest.consumeStack(methodGen.getConstantPool());
ConfigureDetectorsDialog.java,Iterator<DetectorFactory> i = FindBugs.factoryIterator();,if (FindBugs != null ) Iterator<DetectorFactory> i = FindBugs.factoryIterator();
FindBugs.java,String detectorName = factory.getShortName();,if (factory != null ) String detectorName = factory.getShortName();
FindBugs.java,File[] contentList = pluginDir.listFiles();,if (pluginDir != null ) File[] contentList = pluginDir.listFiles();
FindBugs.java,URL url = file.toURL();,if (file != null ) URL url = file.toURL();
FindBugs.java,DetectorFactory[] detectorFactoryList = pluginLoader.getDetectorFactoryList();,if (pluginLoader != null ) DetectorFactory[] detectorFactoryList = pluginLoader.getDetectorFactoryList();
FindBugs.java,BugPattern[] bugPatternList = pluginLoader.getBugPatternList();,if (pluginLoader != null ) BugPattern[] bugPatternList = pluginLoader.getBugPatternList();
FindBugs.java,BugCode[] bugCodeList = pluginLoader.getBugCodeList();,if (pluginLoader != null ) BugCode[] bugCodeList = pluginLoader.getBugCodeList();
FindBugs.java,Iterator<DetectorFactory> i = factories.iterator();,if (factories != null ) Iterator<DetectorFactory> i = factories.iterator();
FindBugs.java,Iterator i = detectorNames.iterator();,if (detectorNames != null ) Iterator i = detectorNames.iterator();
FindBugs.java,String name = (String) i.next();,if (i != null ) String name = (String) i.next();
FindBugs.java,int numDetectors = factories.size() - detectorNames.size();,if (detectorNames != null ) int numDetectors = factories.size() - detectorNames.size();
FindBugs.java,Iterator i = factories.iterator();,if (factories != null ) Iterator i = factories.iterator();
FindBugs.java,DetectorFactory factory = (DetectorFactory) i.next();,if (i != null ) DetectorFactory factory = (DetectorFactory) i.next();
FindBugs.java,Enumeration entries = zipFile.entries();,if (zipFile != null ) Enumeration entries = zipFile.entries();
FindBugs.java,ZipEntry entry = (ZipEntry) entries.nextElement();,if (entries != null ) ZipEntry entry = (ZipEntry) entries.nextElement();
FindBugs.java,String entryName = entry.getName();,if (entry != null ) String entryName = entry.getName();
FindBugs.java,JavaClass javaClass = new ClassParser(fileName).parse();,if (ClassParser(fileName) != null ) JavaClass javaClass = new ClassParser(fileName).parse();
PluginLoader.java,String detailHTML = details.getText();,if (details != null ) String detailHTML = details.getText();
BCPDoubleCheck.java,JavaClass jclass = classContext.getJavaClass();,if (classContext != null ) JavaClass jclass = classContext.getJavaClass();
BCPDoubleCheck.java,Method[] methodList = jclass.getMethods();,if (jclass != null ) Method[] methodList = jclass.getMethods();
BCPDoubleCheck.java,ConstantPoolGen cpg = methodGen.getConstantPool();,if (methodGen != null ) ConstantPoolGen cpg = methodGen.getConstantPool();
BCPDoubleCheck.java,Iterator<ByteCodePatternMatch> j = matcher.byteCodePatternMatchIterator();,if (matcher != null ) Iterator<ByteCodePatternMatch> j = matcher.byteCodePatternMatchIterator();
BCPDoubleCheck.java,BindingSet bindingSet = match.getBindingSet();,if (match != null ) BindingSet bindingSet = match.getBindingSet();
BCPDoubleCheck.java,FieldVariable field = (FieldVariable) binding.getVariable();,if (binding != null ) FieldVariable field = (FieldVariable) binding.getVariable();
BCPDoubleCheck.java,Iterator<PatternElementMatch> pemIter = match.patternElementMatchIterator();,if (match != null ) Iterator<PatternElementMatch> pemIter = match.patternElementMatchIterator();
BCPDoubleCheck.java,PatternElementMatch pem = pemIter.next();,if (pemIter != null ) PatternElementMatch pem = pemIter.next();
Load.java,Variable result = new LocalVariable(after.getTopValue());,if (LocalVariable(after != null ) Variable result = new LocalVariable(after.getTopValue());
Monitorenter.java,Variable lock = new LocalVariable(frame.getTopValue());,if (LocalVariable(frame != null ) Variable lock = new LocalVariable(frame.getTopValue());
LockSetAnalysis.java,this.valueNumberAnalysis = (ValueNumberAnalysis) valueNumberDataflow.getAnalysis();,if (valueNumberDataflow != null ) this.valueNumberAnalysis = (ValueNumberAnalysis) valueNumberDataflow.getAnalysis();
PatternMatcher.java,Iterator<InstructionHandle> i = basicBlock.instructionIterator();,if (basicBlock != null ) Iterator<InstructionHandle> i = basicBlock.instructionIterator();
ByteCodePatternMatch.java,this.nextElement = byteCodePattern.getFirst();,if (byteCodePattern != null ) this.nextElement = byteCodePattern.getFirst();
ByteCodePatternMatch.java,nextElement = patternElement.getNext();,if (patternElement != null ) nextElement = patternElement.getNext();
ByteCodePatternMatch.java,Iterator<PatternElementMatch> i = patternElementMatchList.iterator();,if (patternElementMatchList != null ) Iterator<PatternElementMatch> i = patternElementMatchList.iterator();
ByteCodePatternMatch.java,this.elementIter = byteCodePattern.patternElementIterator();,if (byteCodePattern != null ) this.elementIter = byteCodePattern.patternElementIterator();
ByteCodePatternMatch.java,PatternElement patternElement = elementIter.next();,if (elementIter != null ) PatternElement patternElement = elementIter.next();
BaseCFGBuilder.java,hasLineNumbers = lineNumberMap.hasLineNumbers();,if (lineNumberMap != null ) hasLineNumbers = lineNumberMap.hasLineNumbers();
BaseCFGBuilder.java,InstructionHandle sourceHandle = source.getLastInstruction();,if (source != null ) InstructionHandle sourceHandle = source.getLastInstruction();
BaseCFGBuilder.java,InstructionHandle destHandle = dest.getFirstInstruction();,if (dest != null ) InstructionHandle destHandle = dest.getFirstInstruction();
BaseCFGBuilder.java,int line = lineNumber.getLineNumber();,if (lineNumber != null ) int line = lineNumber.getLineNumber();
BasicCFGBuilder.java,InstructionHandle first = methodGen.getInstructionList().getStart();,if (methodGen != null ) InstructionHandle first = methodGen.getInstructionList().getStart();
BasicCFGBuilder.java,WorkListItem item = (WorkListItem) workList.removeFirst();,if (workList != null ) WorkListItem item = (WorkListItem) workList.removeFirst();
BasicCFGBuilder.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
BasicCFGBuilder.java,next = jsr.getTarget();		// transfer control to the subroutine,if (subroutine != null ) next = jsr.getTarget();		// transfer control to the subroutine
BasicCFGBuilder.java,next = jsrStack.removeLast().getNext(); // return control to ins after JSR,if (JSR != null ) next = jsrStack.removeLast().getNext(); // return control to ins after JSR
BasicCFGBuilder.java,"visitor = new TargetEnumeratingVisitor(handle, methodGen.getConstantPool());","if (methodGen != null ) visitor = new TargetEnumeratingVisitor(handle, methodGen.getConstantPool());"
BasicCFGBuilder.java,next = handle.getNext();,if (handle != null ) next = handle.getNext();
BasicCFGBuilder.java,Iterator<BasicBlock> bbIter = cfg.blockIterator();,if (cfg != null ) Iterator<BasicBlock> bbIter = cfg.blockIterator();
BasicCFGBuilder.java,BasicBlock bb = bbIter.next();,if (bbIter != null ) BasicBlock bb = bbIter.next();
BasicCFGBuilder.java,Iterator<InstructionHandle> insIter = bb.instructionIterator();,if (bb != null ) Iterator<InstructionHandle> insIter = bb.instructionIterator();
BasicCFGBuilder.java,InstructionHandle handle = insIter.next();,if (insIter != null ) InstructionHandle handle = insIter.next();
BasicCFGBuilder.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
BasicCFGBuilder.java,Iterator<InstructionHandle> i = sourceBB.instructionIterator();,if (sourceBB != null ) Iterator<InstructionHandle> i = sourceBB.instructionIterator();
BasicCFGBuilder.java,Iterator<InstructionHandle> i = exceptionHandlerSet.iterator();,if (exceptionHandlerSet != null ) Iterator<InstructionHandle> i = exceptionHandlerSet.iterator();
BasicCFGBuilder.java,InstructionTargeter[] targeterList = handle.getTargeters();,if (handle != null ) InstructionTargeter[] targeterList = handle.getTargeters();
BasicCFGBuilder.java,Target target = (Target) i.next();,if (i != null ) Target target = (Target) i.next();
BasicCFGBuilder.java,CodeExceptionGen[] exceptionHandlerList = methodGen.getExceptionHandlers();,if (methodGen != null ) CodeExceptionGen[] exceptionHandlerList = methodGen.getExceptionHandlers();
BasicCFGBuilder.java,InstructionHandle entry = exceptionGen.getHandlerPC();,if (exceptionGen != null ) InstructionHandle entry = exceptionGen.getHandlerPC();
BasicCFGBuilder.java,InstructionHandle handle = exceptionGen.getStartPC();,if (exceptionGen != null ) InstructionHandle handle = exceptionGen.getStartPC();
BasicCFGBuilder.java,handle = handle.getNext();,if (handle != null ) handle = handle.getNext();
BasicCFGBuilder.java,bb = cfg.allocate();,if (cfg != null ) bb = cfg.allocate();
ThisValueAnalysis.java,Iterator<BasicBlock> i = cfg.blockIterator();,if (cfg != null ) Iterator<BasicBlock> i = cfg.blockIterator();
ThisValueAnalysis.java,int numSlots = frame.getNumSlots();,if (frame != null ) int numSlots = frame.getNumSlots();
LockCountAnalysis.java,this.tvaDataflowAnalysis = (ThisValueAnalysis) tvaDataflow.getAnalysis();,if (tvaDataflow != null ) this.tvaDataflowAnalysis = (ThisValueAnalysis) tvaDataflow.getAnalysis();
AbstractDataflowAnalysis.java,Iterator<Edge> edgeIter = predEdgeList.iterator();,if (predEdgeList != null ) Iterator<Edge> edgeIter = predEdgeList.iterator();
AbstractDataflowAnalysis.java,Iterator<Fact> factIter = predFactList.iterator();,if (predFactList != null ) Iterator<Fact> factIter = predFactList.iterator();
AbstractDataflowAnalysis.java,Edge edge = edgeIter.next();,if (edgeIter != null ) Edge edge = edgeIter.next();
AbstractDataflowAnalysis.java,Fact fact = factIter.next();,if (factIter != null ) Fact fact = factIter.next();
DominatorsAnalysis.java,Iterator<BitSet> i = predFactList.iterator();,if (predFactList != null ) Iterator<BitSet> i = predFactList.iterator();
Filter.java,Element excludeNode = (Element) i.next();,if (i != null ) Element excludeNode = (Element) i.next();
Filter.java,Iterator j = excludeNode.elementIterator();,if (excludeNode != null ) Iterator j = excludeNode.elementIterator();
Filter.java,Node excludeNode = (Node) i.next();,if (i != null ) Node excludeNode = (Node) i.next();
LockCountAnalysis.java,BasicBlock source = edge.getSource();,if (edge != null ) BasicBlock source = edge.getSource();
LockCountAnalysis.java,InstructionHandle last = source.getLastInstruction();,if (source != null ) InstructionHandle last = source.getLastInstruction();
AboutDialog.java,acknolwedgementsScrollPane = new javax.swing.JScrollPane();,if (javax != null ) acknolwedgementsScrollPane = new javax.swing.JScrollPane();
AboutDialog.java,acknowledgementsEditorPane = new javax.swing.JEditorPane();,if (javax != null ) acknowledgementsEditorPane = new javax.swing.JEditorPane();
FindBugsFrame.java,File selectedFile = chooser.getSelectedFile();,if (chooser != null ) File selectedFile = chooser.getSelectedFile();
FindBugsFrame.java,currentDirectory = selectedFile.getParentFile();,if (selectedFile != null ) currentDirectory = selectedFile.getParentFile();
FindBugsFrame.java,currentDirectory = chooser.getSelectedFile().getParentFile();,if (chooser != null ) currentDirectory = chooser.getSelectedFile().getParentFile();
FindBugsFrame.java,DefaultListModel listModel = (DefaultListModel)  jarFileList.getModel();,if (jarFileList != null ) DefaultListModel listModel = (DefaultListModel)  jarFileList.getModel();
FindBugsFrame.java,DefaultListModel listModel = (DefaultListModel) classpathEntryList.getModel();,if (classpathEntryList != null ) DefaultListModel listModel = (DefaultListModel) classpathEntryList.getModel();
Grouper.java,Iterator i = collection.iterator();,if (collection != null ) Iterator i = collection.iterator();
Project.java,String jarFile = (String) i.next();,if (i != null ) String jarFile = (String) i.next();
Project.java,String srcDir = (String) i.next();,if (i != null ) String srcDir = (String) i.next();
Project.java,String auxClasspathEntry = (String) i.next();,if (i != null ) String auxClasspathEntry = (String) i.next();
InitializationChain.java,Set allClasses = classRequires.keySet();,if (classRequires != null ) Set allClasses = classRequires.keySet();
FindBugs.java,Iterator i = factories.iterator();,if (factories != null ) Iterator i = factories.iterator();
FindBugs.java,Class factory = (Class) i.next();,if (i != null ) Class factory = (Class) i.next();
PluginLoader.java,Element detectorElement = (Element) i.next();,if (i != null ) Element detectorElement = (Element) i.next();
PluginLoader.java,Element detectorElement = (Element) i.next();,if (i != null ) Element detectorElement = (Element) i.next();
DroppedException.java,int handled = exp[i].getHandlerPC();,if (exp[i] != null ) int handled = exp[i].getHandlerPC();
DroppedException.java,int start = exp[i].getStartPC();,if (exp[i] != null ) int start = exp[i].getStartPC();
DroppedException.java,int end = exp[i].getEndPC();,if (exp[i] != null ) int end = exp[i].getEndPC();
DroppedException.java,int cause = exp[i].getCatchType();,if (exp[i] != null ) int cause = exp[i].getCatchType();
FindHEmismatch.java,int accessFlags = obj.getAccessFlags();,if (obj != null ) int accessFlags = obj.getAccessFlags();
FindHEmismatch.java,int accessFlags = obj.getAccessFlags();,if (obj != null ) int accessFlags = obj.getAccessFlags();
FindHEmismatch.java,int accessFlags = obj.getAccessFlags();,if (obj != null ) int accessFlags = obj.getAccessFlags();
FindHEmismatch.java,int accessFlags = obj.getAccessFlags();,if (obj != null ) int accessFlags = obj.getAccessFlags();
FindHEmismatch.java,String name = obj.getName();,if (obj != null ) String name = obj.getName();
FindHEmismatch.java,String sig = obj.getSignature();,if (obj != null ) String sig = obj.getSignature();
FindInconsistentSync.java,JavaClass jclass = classContext.getJavaClass();,if (classContext != null ) JavaClass jclass = classContext.getJavaClass();
FindInconsistentSync.java,String className = jclass.getClassName();,if (jclass != null ) String className = jclass.getClassName();
FindInconsistentSync.java,String fieldName = jfield.getName();,if (jfield != null ) String fieldName = jfield.getName();
FindInconsistentSync.java,String fieldSig = jfield.getSignature();,if (jfield != null ) String fieldSig = jfield.getSignature();
FindInconsistentSync.java,boolean isStatic = jfield.isStatic();,if (jfield != null ) boolean isStatic = jfield.isStatic();
FindInconsistentSync.java,Method method = callSite.getMethod();,if (callSite != null ) Method method = callSite.getMethod();
FindInconsistentSync.java,BasicBlock basicBlock = callSite.getBasicBlock();,if (callSite != null ) BasicBlock basicBlock = callSite.getBasicBlock();
FindInconsistentSync.java,InstructionHandle handle = callSite.getHandle();,if (callSite != null ) InstructionHandle handle = callSite.getHandle();
FindInconsistentSync.java,inConstructor = isConstructor(methodGen.getName());,if (isConstructor(methodGen != null ) inConstructor = isConstructor(methodGen.getName());
FindInconsistentSync.java,ConstantPoolGen cpg = methodGen.getConstantPool();,if (methodGen != null ) ConstantPoolGen cpg = methodGen.getConstantPool();
FindInconsistentSync.java,ConstantPoolGen cpg = methodGen.getConstantPool();,if (methodGen != null ) ConstantPoolGen cpg = methodGen.getConstantPool();
FindInconsistentSync.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
FindInconsistentSync.java,DataflowAnalysis<LockCount> analysis = dataflow.getAnalysis();,if (dataflow != null ) DataflowAnalysis<LockCount> analysis = dataflow.getAnalysis();
FindInconsistentSync.java,String className = jclass.getClassName();,if (jclass != null ) String className = jclass.getClassName();
FindInconsistentSync.java,FieldAnnotation field = entry.getKey();,if (entry != null ) FieldAnnotation field = entry.getKey();
FindInconsistentSync.java,FieldStats stats = entry.getValue();,if (entry != null ) FieldStats stats = entry.getValue();
FindInconsistentSync.java,int total = statMap.size();,if (statMap != null ) int total = statMap.size();
FindNakedNotify.java,int flags = obj.getAccessFlags();,if (obj != null ) int flags = obj.getAccessFlags();
FindTwoLockWait.java,ConstantPoolGen cpg = mg.getConstantPool();,if (mg != null ) ConstantPoolGen cpg = mg.getConstantPool();
FindTwoLockWait.java,InstructionHandle handle = mg.getInstructionList().getStart();,if (mg != null ) InstructionHandle handle = mg.getInstructionList().getStart();
FindTwoLockWait.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
FindTwoLockWait.java,handle = handle.getNext();,if (handle != null ) handle = handle.getNext();
FindTwoLockWait.java,ConstantPoolGen cpg = methodGen.getConstantPool();,if (methodGen != null ) ConstantPoolGen cpg = methodGen.getConstantPool();
FindTwoLockWait.java,LockCount count = analysis.createFact();,if (analysis != null ) LockCount count = analysis.createFact();
FindTwoLockWait.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
FindUnsyncGet.java,HashSet<String> commonProperties = new HashSet<String>(getMethods.keySet());,if (HashSet<String>(getMethods != null ) HashSet<String> commonProperties = new HashSet<String>(getMethods.keySet());
FindUnsyncGet.java,String propName = (String) i.next();,if (i != null ) String propName = (String) i.next();
FindUnsyncGet.java,int flags = obj.getAccessFlags();,if (obj != null ) int flags = obj.getAccessFlags();
FindUnsyncGet.java,String name = obj.getName();,if (obj != null ) String name = obj.getName();
FindUnsyncGet.java,String sig = obj.getSignature();,if (obj != null ) String sig = obj.getSignature();
InitializationChain.java,Set<String> allClasses = classRequires.keySet();,if (classRequires != null ) Set<String> allClasses = classRequires.keySet();
InitializationChain.java,for(Iterator i = allClasses.iterator(); i.hasNext(); ) {,if ({ != null ) for(Iterator i = allClasses.iterator(); i.hasNext(); ) {
InitializationChain.java,String c = (String) i.next();,if (i != null ) String c = (String) i.next();
InitializationChain.java,for(Iterator j = needs.iterator(); j.hasNext(); ),if () != null ) for(Iterator j = needs.iterator(); j.hasNext(); )
InitializationChain.java,for(Iterator i = emptyClasses.iterator(); i.hasNext(); ) {,if ({ != null ) for(Iterator i = emptyClasses.iterator(); i.hasNext(); ) {
InitializationChain.java,String c = (String) i.next();,if (i != null ) String c = (String) i.next();
InitializationChain.java,Set allClasses = classRequires.keySet();,if (classRequires != null ) Set allClasses = classRequires.keySet();
LockedFields.java,int flags = obj.getAccessFlags();,if (obj != null ) int flags = obj.getAccessFlags();
LockedFields.java,int flags = obj.getAccessFlags();,if (obj != null ) int flags = obj.getAccessFlags();
LockedFields.java,int total = stats.size();,if (stats != null ) int total = stats.size();
MutableStaticFields.java,int flags = obj.getAccessFlags();,if (obj != null ) int flags = obj.getAccessFlags();
MutableStaticFields.java,int flags = obj.getAccessFlags();,if (obj != null ) int flags = obj.getAccessFlags();
MutableStaticFields.java,for(Iterator i = unsafeValue.iterator(); i.hasNext(); ) {,if ({ != null ) for(Iterator i = unsafeValue.iterator(); i.hasNext(); ) {
SerializableIdiom.java,int flags = obj.getAccessFlags();,if (obj != null ) int flags = obj.getAccessFlags();
SerializableIdiom.java,int accessFlags = obj.getAccessFlags();,if (obj != null ) int accessFlags = obj.getAccessFlags();
SerializableIdiom.java,int flags = obj.getAccessFlags();,if (obj != null ) int flags = obj.getAccessFlags();
SimplePathsFindDoubleCheck.java,InstructionList il = mg.getInstructionList();,if (mg != null ) InstructionList il = mg.getInstructionList();
SimplePathsFindDoubleCheck.java,InstructionHandle handle = il.getStart();,if (il != null ) InstructionHandle handle = il.getStart();
SimplePathsFindDoubleCheck.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
SimplePathsFindDoubleCheck.java,handle = handle.getNext();,if (handle != null ) handle = handle.getNext();
SimplePathsFindDoubleCheck.java,cpg = methodGen.getConstantPool();,if (methodGen != null ) cpg = methodGen.getConstantPool();
SimplePathsFindDoubleCheck.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
SimplePathsFindDoubleCheck.java,InstructionHandle handle = edge.getSource().getLastInstruction();,if (edge != null ) InstructionHandle handle = edge.getSource().getLastInstruction();
SimplePathsFindDoubleCheck.java,Instruction branch = handle.getInstruction();,if (handle != null ) Instruction branch = handle.getInstruction();
SimplePathsFindDoubleCheck.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
UnreadFields.java,int flags = obj.getAccessFlags();,if (obj != null ) int flags = obj.getAccessFlags();
UnreadFields.java,int flags = obj.getAccessFlags();,if (obj != null ) int flags = obj.getAccessFlags();
InstructionScannerDriver.java,Instruction ins = i.next().getInstruction();,if (i != null ) Instruction ins = i.next().getInstruction();
ValueNumberAnalysis.java,int numSlots = result.getNumSlots();,if (result != null ) int numSlots = result.getNumSlots();
ValueNumberAnalysis.java,mergedValue = factory.createFreshValue();,if (factory != null ) mergedValue = factory.createFreshValue();
StackDepthAnalysis.java,int depth = start.getDepth();,if (start != null ) int depth = start.getDepth();
StackDepthAnalysis.java,Iterator<InstructionHandle> i = basicBlock.instructionIterator();,if (basicBlock != null ) Iterator<InstructionHandle> i = basicBlock.instructionIterator();
StackDepthAnalysis.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
FrameTypeAnalysis.java,CodeExceptionGen exceptionGen = basicBlock.getExceptionGen();,if (basicBlock != null ) CodeExceptionGen exceptionGen = basicBlock.getExceptionGen();
FrameTypeAnalysis.java,"FrameTypeModelingVisitor visitor = new FrameTypeModelingVisitor(result, methodGen.getConstantPool());","if (methodGen != null ) FrameTypeModelingVisitor visitor = new FrameTypeModelingVisitor(result, methodGen.getConstantPool());"
FrameTypeAnalysis.java,Iterator<InstructionHandle> i = basicBlock.instructionIterator();,if (basicBlock != null ) Iterator<InstructionHandle> i = basicBlock.instructionIterator();
LockCountAnalysis.java,Iterator<InstructionHandle> i = basicBlock.instructionIterator();,if (basicBlock != null ) Iterator<InstructionHandle> i = basicBlock.instructionIterator();
LockCountAnalysis.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
LockCountAnalysis.java,DataflowAnalysis<ThisValueFrame> tva = tvaDataflow.getAnalysis();,if (tvaDataflow != null ) DataflowAnalysis<ThisValueFrame> tva = tvaDataflow.getAnalysis();
LockCountAnalysis.java,frame = tva.createFact();,if (tva != null ) frame = tva.createFact();
ThisValueAnalysis.java,"ThisValueFrameModelingVisitor visitor = new ThisValueFrameModelingVisitor(result, methodGen.getConstantPool());","if (methodGen != null ) ThisValueFrameModelingVisitor visitor = new ThisValueFrameModelingVisitor(result, methodGen.getConstantPool());"
ThisValueAnalysis.java,Iterator<InstructionHandle> i = basicBlock.instructionIterator();,if (basicBlock != null ) Iterator<InstructionHandle> i = basicBlock.instructionIterator();
ThisValueAnalysis.java,Instruction ins = handle.getInstruction();,if (handle != null ) Instruction ins = handle.getInstruction();
ThisValueAnalysis.java,int oldStack = result.getStackDepth();,if (result != null ) int oldStack = result.getStackDepth();
ThisValueAnalysis.java,int newStack = result.getStackDepth();,if (result != null ) int newStack = result.getStackDepth();
ThisValueAnalysis.java,ConstantPoolGen cpg = methodGen.getConstantPool();,if (methodGen != null ) ConstantPoolGen cpg = methodGen.getConstantPool();
FrameTypeAnalysis.java,CodeExceptionGen exceptionGen = basicBlock.getExceptionGen();,if (basicBlock != null ) CodeExceptionGen exceptionGen = basicBlock.getExceptionGen();
CFGPrinter.java,CFGPrinter printer = new CFGPrinter(builder.getCFG());,if (CFGPrinter(builder != null ) CFGPrinter printer = new CFGPrinter(builder.getCFG());
CFGBuilder.java,hasLineNumbers = lineNumberMap.hasLineNumbers();,if (lineNumberMap != null ) hasLineNumbers = lineNumberMap.hasLineNumbers();
CFGBuilder.java,InstructionHandle sourceHandle = source.getLastInstruction();,if (source != null ) InstructionHandle sourceHandle = source.getLastInstruction();
CFGBuilder.java,InstructionHandle destHandle = dest.getFirstInstruction();,if (dest != null ) InstructionHandle destHandle = dest.getFirstInstruction();
CFGBuilder.java,int line = lineNumber.getLineNumber();,if (lineNumber != null ) int line = lineNumber.getLineNumber();
CFGBuilder.java,Method[] methods = cls.getMethods();,if (cls != null ) Method[] methods = cls.getMethods();
CFGBuilder.java,ConstantPoolGen cp = new ConstantPoolGen(cls.getConstantPool());,if (ConstantPoolGen(cls != null ) ConstantPoolGen cp = new ConstantPoolGen(cls.getConstantPool());
CFGBuilder.java,CFG cfg = cfgBuilder.getCFG();,if (cfgBuilder != null ) CFG cfg = cfgBuilder.getCFG();
ValueFrameModelingVisitor.java,int index = obj.getIndex();,if (obj != null ) int index = obj.getIndex();
ValueFrameModelingVisitor.java,Value value = frame.popValue();,if (frame != null ) Value value = frame.popValue();
ValueFrameModelingVisitor.java,Value value = frame.popValue();,if (frame != null ) Value value = frame.popValue();
ThisValueFrameModelingVisitor.java,int local = obj.getIndex();,if (obj != null ) int local = obj.getIndex();
ThisValueFrameModelingVisitor.java,int local = obj.getIndex();,if (obj != null ) int local = obj.getIndex();
ThisValueFrameModelingVisitor.java,ThisValue value = frame.popValue();,if (frame != null ) ThisValue value = frame.popValue();
ThisValueFrameModelingVisitor.java,int local = obj.getIndex();,if (obj != null ) int local = obj.getIndex();
ThisValueFrameModelingVisitor.java,int local = obj.getIndex();,if (obj != null ) int local = obj.getIndex();
ThisValueFrameModelingVisitor.java,int local = obj.getIndex();,if (obj != null ) int local = obj.getIndex();
ThisValueFrameModelingVisitor.java,ThisValue value = frame.popValue();,if (frame != null ) ThisValue value = frame.popValue();
ThisValueFrameModelingVisitor.java,int local = obj.getIndex();,if (obj != null ) int local = obj.getIndex();
FindBugsFrame.java,DefaultTreeModel bugTreeModel = (DefaultTreeModel) bugTree.getModel();,if (bugTree != null ) DefaultTreeModel bugTreeModel = (DefaultTreeModel) bugTree.getModel();
FindBugsFrame.java,int numVisibleRows = bugTree.getVisibleRowCount();,if (bugTree != null ) int numVisibleRows = bugTree.getVisibleRowCount();
FindBugsFrame.java,DefaultMutableTreeNode node = (DefaultMutableTreeNode) path.getLastPathComponent();,if (path != null ) DefaultMutableTreeNode node = (DefaultMutableTreeNode) path.getLastPathComponent();
FindBugsFrame.java,ClassLoader classLoader = this.getClass().getClassLoader();,if (this != null ) ClassLoader classLoader = this.getClass().getClassLoader();
FindBugsFrame.java,Object obj = node.getUserObject();,if (node != null ) Object obj = node.getUserObject();
FindBugsFrame.java,String groupType = groupNode.getGroupType();,if (groupNode != null ) String groupType = groupNode.getGroupType();
FindBugsFrame.java,String lhsString = lhs.toString();,if (lhs != null ) String lhsString = lhs.toString();
FindBugsFrame.java,String rhsString = rhs.toString();,if (rhs != null ) String rhsString = rhs.toString();
FindBugsFrame.java,DefaultListModel listModel = (DefaultListModel) classpathEntryList.getModel();,if (classpathEntryList != null ) DefaultListModel listModel = (DefaultListModel) classpathEntryList.getModel();
FindBugsFrame.java,String propertyName = evt.getPropertyName();,if (evt != null ) String propertyName = evt.getPropertyName();
FindBugsFrame.java,int selIndex = sourceDirList.getSelectedIndex();,if (sourceDirList != null ) int selIndex = sourceDirList.getSelectedIndex();
FindBugsFrame.java,DefaultListModel listModel = (DefaultListModel) sourceDirList.getModel();,if (sourceDirList != null ) DefaultListModel listModel = (DefaultListModel) sourceDirList.getModel();
FindBugsFrame.java,int selIndex = jarFileList.getSelectedIndex();,if (jarFileList != null ) int selIndex = jarFileList.getSelectedIndex();
FindBugsFrame.java,DefaultListModel listModel = (DefaultListModel) jarFileList.getModel();,if (jarFileList != null ) DefaultListModel listModel = (DefaultListModel) jarFileList.getModel();
FindBugsFrame.java,viewPanelLayout = (CardLayout) viewPanel.getLayout();,if (viewPanel != null ) viewPanelLayout = (CardLayout) viewPanel.getLayout();
FindBugsFrame.java,Rectangle rect = extent.getBounds();,if (extent != null ) Rectangle rect = extent.getBounds();
FindBugsFrame.java,TreePath selPath = tree.getSelectionPath();,if (tree != null ) TreePath selPath = tree.getSelectionPath();
FindBugsFrame.java,Object[] nodeList = selPath.getPath();,if (selPath != null ) Object[] nodeList = selPath.getPath();
FindBugsFrame.java,Object nodeInfo = node.getUserObject();,if (node != null ) Object nodeInfo = node.getUserObject();
FindBugsFrame.java,Integer location = (Integer) evt.getNewValue();,if (evt != null ) Integer location = (Integer) evt.getNewValue();
FindBugsFrame.java,DefaultListModel jarListModel = (DefaultListModel) jarFileList.getModel();,if (jarFileList != null ) DefaultListModel jarListModel = (DefaultListModel) jarFileList.getModel();
FindBugsFrame.java,DefaultListModel srcDirListModel = (DefaultListModel) sourceDirList.getModel();,if (sourceDirList != null ) DefaultListModel srcDirListModel = (DefaultListModel) sourceDirList.getModel();
FindBugsFrame.java,Cursor orig = this.getCursor();,if (this != null ) Cursor orig = this.getCursor();
FindBugsFrame.java,final DefaultMutableTreeNode bugRootNode = (DefaultMutableTreeNode) bugTreeModel.getRoot();,if (bugTreeModel != null ) final DefaultMutableTreeNode bugRootNode = (DefaultMutableTreeNode) bugTreeModel.getRoot();
FindBugsFrame.java,groupName = member.getPrimaryClass().getClassName();,if (member != null ) groupName = member.getPrimaryClass().getClassName();
FindBugsFrame.java,groupName = member.getPrimaryClass().getPackageName();,if (member != null ) groupName = member.getPrimaryClass().getPackageName();
FindBugsFrame.java,String desc = member.toString();,if (member != null ) String desc = member.toString();
FindBugsFrame.java,Iterator j = member.annotationIterator();,if (member != null ) Iterator j = member.annotationIterator();
FindBugsFrame.java,BugAnnotation annotation = (BugAnnotation) j.next();,if (j != null ) BugAnnotation annotation = (BugAnnotation) j.next();
FindBugsFrame.java,String jarFile = jarNameTextField.getText();,if (jarNameTextField != null ) String jarFile = jarNameTextField.getText();
FindBugsFrame.java,String sourceDir = srcDirTextField.getText();,if (srcDirTextField != null ) String sourceDir = srcDirTextField.getText();
FindBugsFrame.java,int selEnd = sourceTextArea.getLineStartOffset(srcLine.getEndLine());,if (sourceTextArea != null ) int selEnd = sourceTextArea.getLineStartOffset(srcLine.getEndLine());
FindBugsFrame.java,String fileName = project.getFileName();,if (project != null ) String fileName = project.getFileName();
FindBugsFrame.java,file = chooser.getSelectedFile();,if (chooser != null ) file = chooser.getSelectedFile();
AnalysisRun.java,runNumber = project.getNextAnalysisRun();,if (project != null ) runNumber = project.getNextAnalysisRun();
SerializableIdiom.java,Field[] fields = obj.getFields();,if (obj != null ) Field[] fields = obj.getFields();
SerializableIdiom.java,Method[] methods = obj.getMethods();,if (obj != null ) Method[] methods = obj.getMethods();
FindBugsFrame.java,DefaultListModel listModel = (DefaultListModel)  jarFileList.getModel();,if (jarFileList != null ) DefaultListModel listModel = (DefaultListModel)  jarFileList.getModel();
FindBugsFrame.java,DefaultListModel listModel = (DefaultListModel) sourceDirList.getModel();,if (sourceDirList != null ) DefaultListModel listModel = (DefaultListModel) sourceDirList.getModel();
FindBugsFrame.java,bugTreeScrollPane = new javax.swing.JScrollPane();,if (javax != null ) bugTreeScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,bugTree = new javax.swing.JTree();,if (javax != null ) bugTree = new javax.swing.JTree();
FindBugsFrame.java,final DefaultTreeModel bugTreeModel = analysisRun.getTreeModel();,if (analysisRun != null ) final DefaultTreeModel bugTreeModel = analysisRun.getTreeModel();
FindBugsFrame.java,groupByChooser = new javax.swing.JComboBox();,if (javax != null ) groupByChooser = new javax.swing.JComboBox();
FindBugsFrame.java,groupByLabel = new javax.swing.JLabel();,if (javax != null ) groupByLabel = new javax.swing.JLabel();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,String selection = groupByChooser.getSelectedItem().toString();,if (groupByChooser != null ) String selection = groupByChooser.getSelectedItem().toString();
FindBugsFrame.java,String currentSortOrder = groupByChooser.getSelectedItem().toString();,if (groupByChooser != null ) String currentSortOrder = groupByChooser.getSelectedItem().toString();
FindBugsFrame.java,ClassLoader classLoader = this.getClass().getClassLoader();,if (this != null ) ClassLoader classLoader = this.getClass().getClassLoader();
FindBugsFrame.java,Object obj = node.getUserObject();,if (node != null ) Object obj = node.getUserObject();
FindBugsFrame.java,navigatorViewSplitter = new javax.swing.JSplitPane();,if (javax != null ) navigatorViewSplitter = new javax.swing.JSplitPane();
FindBugsFrame.java,navigatorScrollPane = new javax.swing.JScrollPane();,if (javax != null ) navigatorScrollPane = new javax.swing.JScrollPane();
FindBugsFrame.java,navigatorTree = new javax.swing.JTree();,if (javax != null ) navigatorTree = new javax.swing.JTree();
FindBugsFrame.java,DefaultTreeModel treeModel = (DefaultTreeModel) navigatorTree.getModel();,if (navigatorTree != null ) DefaultTreeModel treeModel = (DefaultTreeModel) navigatorTree.getModel();
FindBugsFrame.java,TreePath treePath = navigatorTree.getSelectionPath();,if (navigatorTree != null ) TreePath treePath = navigatorTree.getSelectionPath();
FindBugsFrame.java,DefaultMutableTreeNode node = (DefaultMutableTreeNode) navigatorTree.getLastSelectedPathComponent();,if (navigatorTree != null ) DefaultMutableTreeNode node = (DefaultMutableTreeNode) navigatorTree.getLastSelectedPathComponent();
FindBugsFrame.java,Object nodeInfo = node.getUserObject();,if (node != null ) Object nodeInfo = node.getUserObject();
FindBugsFrame.java,DefaultTreeModel treeModel = (DefaultTreeModel) navigatorTree.getModel();,if (navigatorTree != null ) DefaultTreeModel treeModel = (DefaultTreeModel) navigatorTree.getModel();
RunAnalysisDialog.java,archivesLabel = new javax.swing.JLabel();,if (javax != null ) archivesLabel = new javax.swing.JLabel();
RunAnalysisDialog.java,classesLabel = new javax.swing.JLabel();,if (javax != null ) classesLabel = new javax.swing.JLabel();
RunAnalysisDialog.java,classesProgress = new javax.swing.JProgressBar();,if (javax != null ) classesProgress = new javax.swing.JProgressBar();
RunAnalysisDialog.java,archiveLabel = new javax.swing.JLabel();,if (javax != null ) archiveLabel = new javax.swing.JLabel();
RunAnalysisDialog.java,archiveName = new javax.swing.JLabel();,if (javax != null ) archiveName = new javax.swing.JLabel();
RunAnalysisDialog.java,archiveCountLabel = new javax.swing.JLabel();,if (javax != null ) archiveCountLabel = new javax.swing.JLabel();
FindBugs.java,ZipEntry ze = (ZipEntry)j.next();,if ((ZipEntry)j != null ) ZipEntry ze = (ZipEntry)j.next();
FindBugs.java,String name = ze.getName();,if (ze != null ) String name = ze.getName();
AboutDialog.java,ClassLoader classLoader = getClass().getClassLoader();,if (getClass() != null ) ClassLoader classLoader = getClass().getClassLoader();
AboutDialog.java,bugLogoLabel = new javax.swing.JLabel();,if (javax != null ) bugLogoLabel = new javax.swing.JLabel();
AboutDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
AboutDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
AboutDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
AboutDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
AboutDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
AboutDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
AboutDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,SourceLineAnnotation primarySrcLine = selected.getPrimarySourceLineAnnotation();,if (selected != null ) SourceLineAnnotation primarySrcLine = selected.getPrimarySourceLineAnnotation();
FindBugsFrame.java,String sourceFile = analysisRun.getSourceFile(srcLine.getClassName());,if (analysisRun != null ) String sourceFile = analysisRun.getSourceFile(srcLine.getClassName());
FindBugsFrame.java,int parentHeight = parent.getHeight();,if (parent != null ) int parentHeight = parent.getHeight();
FindBugsFrame.java,Integer location = (Integer) evt.getNewValue();,if (evt != null ) Integer location = (Integer) evt.getNewValue();
FindBugsFrame.java,int contentPaneHeight = this.getContentPane().getHeight();,if (this != null ) int contentPaneHeight = this.getContentPane().getHeight();
FindBugsFrame.java,DefaultMutableTreeNode node = (DefaultMutableTreeNode) navigatorTree.getLastSelectedPathComponent();,if (navigatorTree != null ) DefaultMutableTreeNode node = (DefaultMutableTreeNode) navigatorTree.getLastSelectedPathComponent();
FindBugsFrame.java,Object nodeInfo = node.getUserObject();,if (node != null ) Object nodeInfo = node.getUserObject();
FindBugsFrame.java,DefaultTreeModel treeModel = (DefaultTreeModel) navigatorTree.getModel();,if (navigatorTree != null ) DefaultTreeModel treeModel = (DefaultTreeModel) navigatorTree.getModel();
FindBugsFrame.java,TreePath selPath = tree.getSelectionPath();,if (tree != null ) TreePath selPath = tree.getSelectionPath();
FindBugsFrame.java,Object[] nodeList = selPath.getPath();,if (selPath != null ) Object[] nodeList = selPath.getPath();
FindBugsFrame.java,Object nodeInfo = node.getUserObject();,if (node != null ) Object nodeInfo = node.getUserObject();
FindBugsFrame.java,TreePath selection = bugTree.getSelectionPath();,if (bugTree != null ) TreePath selection = bugTree.getSelectionPath();
FindBugsFrame.java,DefaultMutableTreeNode selNode = (DefaultMutableTreeNode) selection.getLastPathComponent();,if (selection != null ) DefaultMutableTreeNode selNode = (DefaultMutableTreeNode) selection.getLastPathComponent();
FindBugsFrame.java,Object obj = selNode.getUserObject();,if (selNode != null ) Object obj = selNode.getUserObject();
FindBugsFrame.java,srcLine = methodAnnotation.getSourceLines();,if (methodAnnotation != null ) srcLine = methodAnnotation.getSourceLines();
FindBugsFrame.java,TreePath selPath = navigatorTree.getSelectionPath();,if (navigatorTree != null ) TreePath selPath = navigatorTree.getSelectionPath();
FindBugsFrame.java,Object[] nodeList = selPath.getPath();,if (selPath != null ) Object[] nodeList = selPath.getPath();
FindBugsFrame.java,Object nodeInfo = node.getUserObject();,if (node != null ) Object nodeInfo = node.getUserObject();
FindBugsFrame.java,bugTreeSourceViewSplitter = new javax.swing.JSplitPane();,if (javax != null ) bugTreeSourceViewSplitter = new javax.swing.JSplitPane();
FindBugsFrame.java,DefaultTreeModel treeModel = (DefaultTreeModel) navigatorTree.getModel();,if (navigatorTree != null ) DefaultTreeModel treeModel = (DefaultTreeModel) navigatorTree.getModel();
FindBugsFrame.java,int selBegin = sourceTextArea.getLineStartOffset(srcLine.getStartLine());,if (sourceTextArea != null ) int selBegin = sourceTextArea.getLineStartOffset(srcLine.getStartLine());
SourceFinder.java,String element = tok.nextToken();,if (tok != null ) String element = tok.nextToken();
SourceFinder.java,Iterator<SourceBase> i = sourceBaseList.iterator();,if (sourceBaseList != null ) Iterator<SourceBase> i = sourceBaseList.iterator();
FindBugsFrame.java,bugTree = new javax.swing.JTree();,if (javax != null ) bugTree = new javax.swing.JTree();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
SourceLineAnnotation.java,int pc = visitor.getPC();,if (visitor != null ) int pc = visitor.getPC();
MethodAnnotation.java,this.methodName = visitor.getMethodName();,if (visitor != null ) this.methodName = visitor.getMethodName();
MethodAnnotation.java,this.methodSig = visitor.getMethodSig();,if (visitor != null ) this.methodSig = visitor.getMethodSig();
BugInstance.java,String className = visitor.getBetterClassName();,if (visitor != null ) String className = visitor.getBetterClassName();
BugInstance.java,String className = visitor.getSuperclassName();,if (visitor != null ) String className = visitor.getSuperclassName();
FindBugsFrame.java,sortOrderChooser = new javax.swing.JComboBox();,if (javax != null ) sortOrderChooser = new javax.swing.JComboBox();
FindBugsFrame.java,sortOrderLabel = new javax.swing.JLabel();,if (javax != null ) sortOrderLabel = new javax.swing.JLabel();
FindBugsFrame.java,leftFiller = new javax.swing.JLabel();,if (javax != null ) leftFiller = new javax.swing.JLabel();
FindBugsFrame.java,rightFiller = new javax.swing.JLabel();,if (javax != null ) rightFiller = new javax.swing.JLabel();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,String selection = sortOrderChooser.getSelectedItem().toString();,if (sortOrderChooser != null ) String selection = sortOrderChooser.getSelectedItem().toString();
FindBugsFrame.java,String currentSortOrder = sortOrderChooser.getSelectedItem().toString();,if (sortOrderChooser != null ) String currentSortOrder = sortOrderChooser.getSelectedItem().toString();
FindBugsFrame.java,Iterator i = sortedCollection.iterator();,if (sortedCollection != null ) Iterator i = sortedCollection.iterator();
FindBugsFrame.java,BugInstance bugInstance = (BugInstance) i.next();,if (i != null ) BugInstance bugInstance = (BugInstance) i.next();
FindBugsFrame.java,Iterator j = bugInstance.annotationIterator();,if (bugInstance != null ) Iterator j = bugInstance.annotationIterator();
FindBugsFrame.java,BugAnnotation annotation = (BugAnnotation) j.next();,if (j != null ) BugAnnotation annotation = (BugAnnotation) j.next();
FindBugsFrame.java,DefaultTreeModel bugTreeModel = analysisRun.getTreeModel();,if (analysisRun != null ) DefaultTreeModel bugTreeModel = analysisRun.getTreeModel();
FindBugsFrame.java,DefaultMutableTreeNode bugRootNode = (DefaultMutableTreeNode) bugTreeModel.getRoot();,if (bugTreeModel != null ) DefaultMutableTreeNode bugRootNode = (DefaultMutableTreeNode) bugTreeModel.getRoot();
FindBugsFrame.java,ClassLoader classLoader = this.getClass().getClassLoader();,if (this != null ) ClassLoader classLoader = this.getClass().getClassLoader();
FindBugsFrame.java,Object obj = node.getUserObject();,if (node != null ) Object obj = node.getUserObject();
FindBugsFrame.java,ClassLoader classLoader = this.getClass().getClassLoader();,if (this != null ) ClassLoader classLoader = this.getClass().getClassLoader();
FindBugsFrame.java,Object obj = node.getUserObject();,if (node != null ) Object obj = node.getUserObject();
FindBugsFrame.java,String lhsString = lhs.toString();,if (lhs != null ) String lhsString = lhs.toString();
FindBugsFrame.java,String rhsString = rhs.toString();,if (rhs != null ) String rhsString = rhs.toString();
FindBugsFrame.java,String propertyName = evt.getPropertyName();,if (evt != null ) String propertyName = evt.getPropertyName();
FindBugsFrame.java,Integer location = (Integer) evt.getNewValue();,if (evt != null ) Integer location = (Integer) evt.getNewValue();
FindBugsFrame.java,int contentPaneHeight = this.getContentPane().getHeight();,if (this != null ) int contentPaneHeight = this.getContentPane().getHeight();
FindBugsFrame.java,String selection = sortOrderChooser.getSelectedItem().toString();,if (sortOrderChooser != null ) String selection = sortOrderChooser.getSelectedItem().toString();
FindBugsFrame.java,DefaultTreeModel treeModel = (DefaultTreeModel) navigatorTree.getModel();,if (navigatorTree != null ) DefaultTreeModel treeModel = (DefaultTreeModel) navigatorTree.getModel();
FindBugsFrame.java,TreePath treePath = navigatorTree.getSelectionPath();,if (navigatorTree != null ) TreePath treePath = navigatorTree.getSelectionPath();
FindBugsFrame.java,DefaultTreeModel treeModel = (DefaultTreeModel) navigatorTree.getModel();,if (navigatorTree != null ) DefaultTreeModel treeModel = (DefaultTreeModel) navigatorTree.getModel();
FindBugsFrame.java,int selIndex = sourceDirList.getSelectedIndex();,if (sourceDirList != null ) int selIndex = sourceDirList.getSelectedIndex();
FindBugsFrame.java,DefaultListModel listModel = (DefaultListModel) sourceDirList.getModel();,if (sourceDirList != null ) DefaultListModel listModel = (DefaultListModel) sourceDirList.getModel();
FindBugsFrame.java,int selIndex = jarFileList.getSelectedIndex();,if (jarFileList != null ) int selIndex = jarFileList.getSelectedIndex();
FindBugsFrame.java,DefaultListModel listModel = (DefaultListModel) jarFileList.getModel();,if (jarFileList != null ) DefaultListModel listModel = (DefaultListModel) jarFileList.getModel();
FindBugsFrame.java,viewPanelLayout = (CardLayout) viewPanel.getLayout();,if (viewPanel != null ) viewPanelLayout = (CardLayout) viewPanel.getLayout();
FindBugsFrame.java,DefaultMutableTreeNode node = (DefaultMutableTreeNode) navigatorTree.getLastSelectedPathComponent();,if (navigatorTree != null ) DefaultMutableTreeNode node = (DefaultMutableTreeNode) navigatorTree.getLastSelectedPathComponent();
FindBugsFrame.java,Object nodeInfo = node.getUserObject();,if (node != null ) Object nodeInfo = node.getUserObject();
FindBugsFrame.java,String currentSortOrder = sortOrderChooser.getSelectedItem().toString();,if (sortOrderChooser != null ) String currentSortOrder = sortOrderChooser.getSelectedItem().toString();
FindBugsFrame.java,Cursor orig = this.getCursor();,if (this != null ) Cursor orig = this.getCursor();
FindBugsFrame.java,DefaultTreeModel bugTreeModel = analysisRun.getTreeModel();,if (analysisRun != null ) DefaultTreeModel bugTreeModel = analysisRun.getTreeModel();
FindBugsFrame.java,DefaultMutableTreeNode bugRootNode = (DefaultMutableTreeNode) bugTreeModel.getRoot();,if (bugTreeModel != null ) DefaultMutableTreeNode bugRootNode = (DefaultMutableTreeNode) bugTreeModel.getRoot();
FindBugsFrame.java,Iterator i = sortedCollection.iterator();,if (sortedCollection != null ) Iterator i = sortedCollection.iterator();
FindBugsFrame.java,BugInstance bugInstance = (BugInstance) i.next();,if (i != null ) BugInstance bugInstance = (BugInstance) i.next();
FindBugsFrame.java,Iterator j = bugInstance.annotationIterator();,if (bugInstance != null ) Iterator j = bugInstance.annotationIterator();
FindBugsFrame.java,BugAnnotation annotation = (BugAnnotation) j.next();,if (j != null ) BugAnnotation annotation = (BugAnnotation) j.next();
FindBugsFrame.java,String jarFile = jarNameTextField.getText();,if (jarNameTextField != null ) String jarFile = jarNameTextField.getText();
FindBugsFrame.java,DefaultListModel listModel = (DefaultListModel)  jarFileList.getModel();,if (jarFileList != null ) DefaultListModel listModel = (DefaultListModel)  jarFileList.getModel();
FindBugsFrame.java,String sourceDir = srcDirTextField.getText();,if (srcDirTextField != null ) String sourceDir = srcDirTextField.getText();
FindBugsFrame.java,DefaultListModel listModel = (DefaultListModel) sourceDirList.getModel();,if (sourceDirList != null ) DefaultListModel listModel = (DefaultListModel) sourceDirList.getModel();
FindBugsFrame.java,consoleMessageField = new javax.swing.JTextArea();,if (javax != null ) consoleMessageField = new javax.swing.JTextArea();
FindBugsFrame.java,String lhsType = lhs.getType();,if (lhs != null ) String lhsType = lhs.getType();
FindBugsFrame.java,String rhsType = rhs.getType();,if (rhs != null ) String rhsType = rhs.getType();
FindBugsFrame.java,String currentSortOrder = (String) sortOrderChooser.getSelectedItem();,if (sortOrderChooser != null ) String currentSortOrder = (String) sortOrderChooser.getSelectedItem();
FindBugsFrame.java,Cursor orig = this.getCursor();,if (this != null ) Cursor orig = this.getCursor();
FindBugsFrame.java,Iterator i = analysisRun.getBugInstances().iterator();,if (analysisRun != null ) Iterator i = analysisRun.getBugInstances().iterator();
FindBugsFrame.java,BugInstance bugInstance = (BugInstance) i.next();,if (i != null ) BugInstance bugInstance = (BugInstance) i.next();
FindBugsFrame.java,Iterator j = bugInstance.annotationIterator();,if (bugInstance != null ) Iterator j = bugInstance.annotationIterator();
FindBugsFrame.java,BugAnnotation annotation = (BugAnnotation) j.next();,if (j != null ) BugAnnotation annotation = (BugAnnotation) j.next();
FindBugsFrame.java,String jarFile = jarNameTextField.getText();,if (jarNameTextField != null ) String jarFile = jarNameTextField.getText();
FindBugsFrame.java,DefaultListModel listModel = (DefaultListModel)  jarFileList.getModel();,if (jarFileList != null ) DefaultListModel listModel = (DefaultListModel)  jarFileList.getModel();
FindBugsFrame.java,bugTree = new javax.swing.JTree();,if (javax != null ) bugTree = new javax.swing.JTree();
RunAnalysisDialog.java,archivesProgress = new javax.swing.JProgressBar();,if (javax != null ) archivesProgress = new javax.swing.JProgressBar();
RunAnalysisDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,DefaultTreeModel treeModel = (DefaultTreeModel) navigatorTree.getModel();,if (navigatorTree != null ) DefaultTreeModel treeModel = (DefaultTreeModel) navigatorTree.getModel();
FindBugsFrame.java,TreePath treePath = navigatorTree.getSelectionPath();,if (navigatorTree != null ) TreePath treePath = navigatorTree.getSelectionPath();
FindBugsFrame.java,String jarFile = jarNameTextField.getText();,if (jarNameTextField != null ) String jarFile = jarNameTextField.getText();
FindBugsFrame.java,DefaultListModel listModel = (DefaultListModel)  jarFileList.getModel();,if (jarFileList != null ) DefaultListModel listModel = (DefaultListModel)  jarFileList.getModel();
FindBugsFrame.java,jarFileList = new javax.swing.JList();,if (javax != null ) jarFileList = new javax.swing.JList();
FindBugsFrame.java,sourceDirList = new javax.swing.JList();,if (javax != null ) sourceDirList = new javax.swing.JList();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
FindBugsFrame.java,DefaultMutableTreeNode node = (DefaultMutableTreeNode) navigatorTree.getLastSelectedPathComponent();,if (navigatorTree != null ) DefaultMutableTreeNode node = (DefaultMutableTreeNode) navigatorTree.getLastSelectedPathComponent();
FindBugsFrame.java,viewPanelLayout = (CardLayout) viewPanel.getLayout();,if (viewPanel != null ) viewPanelLayout = (CardLayout) viewPanel.getLayout();
FindBugsFrame.java,ClassLoader classLoader = FindBugsFrame.class.getClassLoader();,if (FindBugsFrame != null ) ClassLoader classLoader = FindBugsFrame.class.getClassLoader();
FindBugsFrame.java,this.viewPanelLayout = (CardLayout) viewPanel.getLayout();,if (viewPanel != null ) this.viewPanelLayout = (CardLayout) viewPanel.getLayout();
FindBugsFrame.java,this.viewPanelLayout = (CardLayout) viewPanel.getLayout();,if (viewPanel != null ) this.viewPanelLayout = (CardLayout) viewPanel.getLayout();
ContainerBase.java,Mapper mapper = findMapper(request.getRequest().getProtocol());,if (findMapper(request != null ) Mapper mapper = findMapper(request.getRequest().getProtocol());
ContainerBase.java,ObjectName oname=childCB.getObjectName();,if (oname=childCB != null ) ObjectName oname=childCB.getObjectName();
ContainerBase.java,Iterator values = mappers.values().iterator();,if (mappers != null ) Iterator values = mappers.values().iterator();
ContainerBase.java,this.mapper = (Mapper) values.next();,if (values != null ) this.mapper = (Mapper) values.next();
ContainerBase.java,Mapper mapper = (Mapper) clazz.newInstance();,if (clazz != null ) Mapper mapper = (Mapper) clazz.newInstance();
ContainerBase.java,String className = this.getClass().getName();,if (this != null ) String className = this.getClass().getName();
ContainerBase.java,domain=name.getDomain();,if (domain=name != null ) domain=name.getDomain();
ContainerBase.java,Iterator it=children.values().iterator();,if (it=children != null ) Iterator it=children.values().iterator();
ContainerBase.java,Object next=it.next();,if (next=it != null ) Object next=it.next();
BugInstance.java,hashcode += i.next().hashCode();,if (i != null ) hashcode += i.next().hashCode();
FindInconsistentSync.java,String superclassName = jclass.getSuperclassName();,if (jclass != null ) String superclassName = jclass.getSuperclassName();
FindInconsistentSync.java,String pkgName = jclass.getPackageName();,if (jclass != null ) String pkgName = jclass.getPackageName();
BugInstance.java,String className = visitor.getBetterClassConstant();,if (visitor != null ) String className = visitor.getBetterClassConstant();
BugInstance.java,String fieldName = visitor.getNameConstant();,if (visitor != null ) String fieldName = visitor.getNameConstant();
BugInstance.java,String fieldSig = visitor.getBetterSigConstant();,if (visitor != null ) String fieldSig = visitor.getBetterSigConstant();
BugInstance.java,String className = visitor.getBetterClassName();,if (visitor != null ) String className = visitor.getBetterClassName();
BugInstance.java,String methodName = visitor.getMethodName();,if (visitor != null ) String methodName = visitor.getMethodName();
BugInstance.java,String methodSig = visitor.getMethodSig();,if (visitor != null ) String methodSig = visitor.getMethodSig();
BugInstance.java,String sourceFile = visitor.getSourceFile();,if (visitor != null ) String sourceFile = visitor.getSourceFile();
FindFinalizeInvocations.java,JavaClass jclass = classContext.getJavaClass();,if (classContext != null ) JavaClass jclass = classContext.getJavaClass();
MethodAnnotation.java,"String returnType = shorten(pkgName, converter.parseNext());","if (converter != null ) String returnType = shorten(pkgName, converter.parseNext());"
MethodAnnotation.java,niceMethodName = result.toString();,if (result != null ) niceMethodName = result.toString();
BugInstance.java,String className = betterVisitor.getBetterClassName();,if (betterVisitor != null ) String className = betterVisitor.getBetterClassName();
BugInstance.java,String superclassName = betterVisitor.getSuperclassName();,if (betterVisitor != null ) String superclassName = betterVisitor.getSuperclassName();
BugInstance.java,String sourceFile = betterVisitor.getSourceFile();,if (betterVisitor != null ) String sourceFile = betterVisitor.getSourceFile();
BugInstance.java,String className = betterVisitor.getBetterClassName();,if (betterVisitor != null ) String className = betterVisitor.getBetterClassName();
BugInstance.java,String methodName = betterVisitor.getMethodName();,if (betterVisitor != null ) String methodName = betterVisitor.getMethodName();
BugInstance.java,String methodSig = betterVisitor.getMethodSig();,if (betterVisitor != null ) String methodSig = betterVisitor.getMethodSig();
