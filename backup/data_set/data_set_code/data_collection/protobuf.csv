Filename,Buggy/Deleted,Fixed/Added
ProtoCaliperBenchmark.java,ExtensionRegistry extensions = ExtensionRegistry.newInstance();,if (ExtensionRegistry != null ) ExtensionRegistry extensions = ExtensionRegistry.newInstance();
ProtoCaliperBenchmark.java,ExtensionRegistry extensions = ExtensionRegistry.newInstance();,if (ExtensionRegistry != null ) ExtensionRegistry extensions = ExtensionRegistry.newInstance();
ProtoCaliperBenchmark.java,defaultMessage = benchmarkMessageType.getDefaultInstance();,if (benchmarkMessageType != null ) defaultMessage = benchmarkMessageType.getDefaultInstance();
ProtoCaliperBenchmark.java,extensions = benchmarkMessageType.getExtensionRegistry();,if (benchmarkMessageType != null ) extensions = benchmarkMessageType.getExtensionRegistry();
ProtoCaliperBenchmark.java,byte[] singleInputData = benchmarkDataset.getPayload(i).toByteArray();,if (benchmarkDataset != null ) byte[] singleInputData = benchmarkDataset.getPayload(i).toByteArray();
ProtoCaliperBenchmark.java,ExtensionRegistry extensions = ExtensionRegistry.newInstance();,if (ExtensionRegistry != null ) ExtensionRegistry extensions = ExtensionRegistry.newInstance();
ProtoCaliperBenchmark.java,ExtensionRegistry extensions = ExtensionRegistry.newInstance();,if (ExtensionRegistry != null ) ExtensionRegistry extensions = ExtensionRegistry.newInstance();
ProtoCaliperBenchmark.java,defaultMessage = benchmarkMessageType.getDefaultInstance();,if (benchmarkMessageType != null ) defaultMessage = benchmarkMessageType.getDefaultInstance();
ProtoCaliperBenchmark.java,extensions = benchmarkMessageType.getExtensionRegistry();,if (benchmarkMessageType != null ) extensions = benchmarkMessageType.getExtensionRegistry();
ProtoCaliperBenchmark.java,byte[] singleInputData = benchmarkDataset.getPayload(i).toByteArray();,if (benchmarkDataset != null ) byte[] singleInputData = benchmarkDataset.getPayload(i).toByteArray();
RubyDescriptor.java,"RubyClass klass = RubyClass.newClass(runtime, runtime.getObject());","if (runtime != null ) RubyClass klass = RubyClass.newClass(runtime, runtime.getObject());"
RubyDescriptorPool.java,byte[] bin = data.convertToString().getBytes();,if (data != null ) byte[] bin = data.convertToString().getBytes();
RubyDescriptorPool.java,String packageName = fd.getPackage();,if (fd != null ) String packageName = fd.getPackage();
RubyDescriptorPool.java,String fullName = parentPath + descriptor.getName();,if (descriptor != null ) String fullName = parentPath + descriptor.getName();
RubyEnumDescriptor.java,enumValue = descriptor.findValueByName(value.asJavaString());,if (descriptor != null ) enumValue = descriptor.findValueByName(value.asJavaString());
RubyEnumDescriptor.java,EnumValueDescriptor value = descriptor.findValueByName(name.asJavaString());,if (descriptor != null ) EnumValueDescriptor value = descriptor.findValueByName(name.asJavaString());
RubyEnumDescriptor.java,String name = value.getName();,if (value != null ) String name = value.getName();
RubyFieldDescriptor.java,this.name = context.runtime.newString(descriptor.getName());,if (context != null ) this.name = context.runtime.newString(descriptor.getName());
RubyFieldDescriptor.java,FieldDescriptor.Type fdType = descriptor.getType();,if (descriptor != null ) FieldDescriptor.Type fdType = descriptor.getType();
RubyFileDescriptor.java,rfd.fileDescriptor = descriptor.getFile();,if (descriptor != null ) rfd.fileDescriptor = descriptor.getFile();
RubyFileDescriptor.java,String name = fileDescriptor.getName();,if (fileDescriptor != null ) String name = fileDescriptor.getName();
RubyMap.java,this.valueTypeClass = context.runtime.getNilClass();,if (context != null ) this.valueTypeClass = context.runtime.getNilClass();
RubyMessage.java,OneofDescriptor oneof = fieldDescriptor.getContainingOneof();,if (fieldDescriptor != null ) OneofDescriptor oneof = fieldDescriptor.getContainingOneof();
RubyMessage.java,ThreadContext context = getRuntime().getCurrentContext();,if (getRuntime() != null ) ThreadContext context = getRuntime().getCurrentContext();
RubyMessage.java,String cname = metaClass.getName();,if (metaClass != null ) String cname = metaClass.getName();
RubyMessage.java,OneofDescriptor ood = rubyOneofDescriptor.getDescriptor();,if (rubyOneofDescriptor != null ) OneofDescriptor ood = rubyOneofDescriptor.getDescriptor();
RubyMessage.java,EnumDescriptor enumDescriptor = fieldDescriptor.getEnumType();,if (fieldDescriptor != null ) EnumDescriptor enumDescriptor = fieldDescriptor.getEnumType();
RubyMessage.java,RubyArray retValues = runtime.newArray(values.getLength());,if (runtime != null ) RubyArray retValues = runtime.newArray(values.getLength());
RubyMessage.java,String val = values.eltInternal(i).toString();,if (values != null ) String val = values.eltInternal(i).toString();
RubyMessage.java,byte[] bin = data.convertToString().getBytes();,if (data != null ) byte[] bin = data.convertToString().getBytes();
RubyMessage.java,EnumDescriptor ed = fd.getEnumType();,if (fd != null ) EnumDescriptor ed = fd.getEnumType();
RubyMessage.java,JsonFormat.Printer printer = JsonFormat.printer().omittingInsignificantWhitespace();,if (JsonFormat != null ) JsonFormat.Printer printer = JsonFormat.printer().omittingInsignificantWhitespace();
RubyMessage.java,printer = printer.includingDefaultValueFields();,if (printer != null ) printer = printer.includingDefaultValueFields();
RubyMessage.java,printer = printer.preservingProtoFieldNames();,if (printer != null ) printer = printer.preservingProtoFieldNames();
RubyMessage.java,JsonFormat.Parser parser = JsonFormat.parser();,if (JsonFormat != null ) JsonFormat.Parser parser = JsonFormat.parser();
RubyMessage.java,parser = parser.ignoringUnknownFields();,if (parser != null ) parser = parser.ignoringUnknownFields();
RubyMessage.java,RubyArray ary = value.convertToArray();,if (value != null ) RubyArray ary = value.convertToArray();
RubyMessage.java,OneofDescriptor ood = fieldDescriptor.getContainingOneof();,if (fieldDescriptor != null ) OneofDescriptor ood = fieldDescriptor.getContainingOneof();
RubyMessage.java,String nameStr = fieldName.asJavaString();,if (fieldName != null ) String nameStr = fieldName.asJavaString();
RubyMessage.java,val = value.isTrue();,if (value != null ) val = value.isTrue();
RubyMessage.java,val = value.asJavaString();,if (value != null ) val = value.asJavaString();
RubyMessage.java,EnumDescriptor enumDescriptor = fieldDescriptor.getEnumType();,if (fieldDescriptor != null ) EnumDescriptor enumDescriptor = fieldDescriptor.getEnumType();
RubyMessage.java,val = enumDescriptor.findValueByName(value.asJavaString());,if (enumDescriptor != null ) val = enumDescriptor.findValueByName(value.asJavaString());
RubyMessage.java,IRubyObject typeClass = context.runtime.getNilClass();,if (context != null ) IRubyObject typeClass = context.runtime.getNilClass();
RubyMessage.java,FieldDescriptor.Type type = fieldDescriptor.getType();,if (fieldDescriptor != null ) FieldDescriptor.Type type = fieldDescriptor.getType();
RubyMessage.java,OneofDescriptor oneofDescriptor = fieldDescriptor.getContainingOneof();,if (fieldDescriptor != null ) OneofDescriptor oneofDescriptor = fieldDescriptor.getContainingOneof();
RubyMessage.java,FieldDescriptor.Type fieldType = fieldDescriptor.getType();,if (fieldDescriptor != null ) FieldDescriptor.Type fieldType = fieldDescriptor.getType();
RubyMessage.java,OneofDescriptor oneofDescriptor = fieldDescriptor.getContainingOneof();,if (fieldDescriptor != null ) OneofDescriptor oneofDescriptor = fieldDescriptor.getContainingOneof();
RubyMessage.java,IRubyObject typeClass = context.runtime.getObject();,if (context != null ) IRubyObject typeClass = context.runtime.getObject();
RubyMessage.java,RubyArray arr = value.convertToArray();,if (value != null ) RubyArray arr = value.convertToArray();
RubyMessage.java,FieldDescriptor.Type fieldType = fieldDescriptor.getType();,if (fieldDescriptor != null ) FieldDescriptor.Type fieldType = fieldDescriptor.getType();
RubyOneofDescriptor.java,this.name = context.runtime.newString(descriptor.getName());,if (context != null ) this.name = context.runtime.newString(descriptor.getName());
RubyRepeatedField.java,this.storage = runtime.newArray();,if (runtime != null ) this.storage = runtime.newArray();
RubyRepeatedField.java,this.storage = runtime.newArray();,if (runtime != null ) this.storage = runtime.newArray();
RubyRepeatedField.java,RubyArray arr = ary.convertToArray();,if (ary != null ) RubyArray arr = ary.convertToArray();
RubyRepeatedField.java,beg += this.storage.size();,if (this != null ) beg += this.storage.size();
RubyRepeatedField.java,IRubyObject ret = this.storage.last();,if (this != null ) IRubyObject ret = this.storage.last();
RubyRepeatedField.java,int hashCode = this.storage.hashCode();,if (this != null ) int hashCode = this.storage.hashCode();
RubyRepeatedField.java,SentinelOuterClass.Sentinel sentinel = SentinelOuterClass.Sentinel.getDefaultInstance();,if (SentinelOuterClass != null ) SentinelOuterClass.Sentinel sentinel = SentinelOuterClass.Sentinel.getDefaultInstance();
RubyRepeatedField.java,value = sentinel.getDefaultFloat();,if (sentinel != null ) value = sentinel.getDefaultFloat();
RubyRepeatedField.java,value = sentinel.getDefaultDouble();,if (sentinel != null ) value = sentinel.getDefaultDouble();
RubyRepeatedField.java,value = sentinel.getDefaultBool();,if (sentinel != null ) value = sentinel.getDefaultBool();
RubyRepeatedField.java,value = sentinel.getDefaultBytes();,if (sentinel != null ) value = sentinel.getDefaultBytes();
RubyRepeatedField.java,value = sentinel.getDefaultString();,if (sentinel != null ) value = sentinel.getDefaultString();
RubyRepeatedField.java,int arrSize = this.storage.size();,if (this != null ) int arrSize = this.storage.size();
Utils.java,String className = typeClass.getName();,if (typeClass != null ) String className = typeClass.getName();
Utils.java,IRubyObject wrapped = runtime.newString(value.toString());,if (runtime != null ) IRubyObject wrapped = runtime.newString(value.toString());
RubyDescriptor.java,"RubyClass klass = RubyClass.newClass(runtime, runtime.getObject());","if (runtime != null ) RubyClass klass = RubyClass.newClass(runtime, runtime.getObject());"
RubyDescriptorPool.java,byte[] bin = data.convertToString().getBytes();,if (data != null ) byte[] bin = data.convertToString().getBytes();
RubyDescriptorPool.java,String packageName = fd.getPackage();,if (fd != null ) String packageName = fd.getPackage();
RubyDescriptorPool.java,String fullName = parentPath + descriptor.getName();,if (descriptor != null ) String fullName = parentPath + descriptor.getName();
RubyEnumDescriptor.java,enumValue = descriptor.findValueByName(value.asJavaString());,if (descriptor != null ) enumValue = descriptor.findValueByName(value.asJavaString());
RubyEnumDescriptor.java,EnumValueDescriptor value = descriptor.findValueByName(name.asJavaString());,if (descriptor != null ) EnumValueDescriptor value = descriptor.findValueByName(name.asJavaString());
RubyEnumDescriptor.java,String name = value.getName();,if (value != null ) String name = value.getName();
RubyFieldDescriptor.java,this.name = context.runtime.newString(descriptor.getName());,if (context != null ) this.name = context.runtime.newString(descriptor.getName());
RubyFieldDescriptor.java,FieldDescriptor.Type fdType = descriptor.getType();,if (descriptor != null ) FieldDescriptor.Type fdType = descriptor.getType();
RubyFileDescriptor.java,rfd.fileDescriptor = descriptor.getFile();,if (descriptor != null ) rfd.fileDescriptor = descriptor.getFile();
RubyFileDescriptor.java,String name = fileDescriptor.getName();,if (fileDescriptor != null ) String name = fileDescriptor.getName();
RubyMap.java,this.valueTypeClass = context.runtime.getNilClass();,if (context != null ) this.valueTypeClass = context.runtime.getNilClass();
RubyMessage.java,OneofDescriptor oneof = fieldDescriptor.getContainingOneof();,if (fieldDescriptor != null ) OneofDescriptor oneof = fieldDescriptor.getContainingOneof();
RubyMessage.java,ThreadContext context = getRuntime().getCurrentContext();,if (getRuntime() != null ) ThreadContext context = getRuntime().getCurrentContext();
RubyMessage.java,String cname = metaClass.getName();,if (metaClass != null ) String cname = metaClass.getName();
RubyMessage.java,OneofDescriptor ood = rubyOneofDescriptor.getDescriptor();,if (rubyOneofDescriptor != null ) OneofDescriptor ood = rubyOneofDescriptor.getDescriptor();
RubyMessage.java,EnumDescriptor enumDescriptor = fieldDescriptor.getEnumType();,if (fieldDescriptor != null ) EnumDescriptor enumDescriptor = fieldDescriptor.getEnumType();
RubyMessage.java,RubyArray retValues = runtime.newArray(values.getLength());,if (runtime != null ) RubyArray retValues = runtime.newArray(values.getLength());
RubyMessage.java,String val = values.eltInternal(i).toString();,if (values != null ) String val = values.eltInternal(i).toString();
RubyMessage.java,byte[] bin = data.convertToString().getBytes();,if (data != null ) byte[] bin = data.convertToString().getBytes();
RubyMessage.java,EnumDescriptor ed = fd.getEnumType();,if (fd != null ) EnumDescriptor ed = fd.getEnumType();
RubyMessage.java,JsonFormat.Printer printer = JsonFormat.printer().omittingInsignificantWhitespace();,if (JsonFormat != null ) JsonFormat.Printer printer = JsonFormat.printer().omittingInsignificantWhitespace();
RubyMessage.java,printer = printer.includingDefaultValueFields();,if (printer != null ) printer = printer.includingDefaultValueFields();
RubyMessage.java,printer = printer.preservingProtoFieldNames();,if (printer != null ) printer = printer.preservingProtoFieldNames();
RubyMessage.java,JsonFormat.Parser parser = JsonFormat.parser();,if (JsonFormat != null ) JsonFormat.Parser parser = JsonFormat.parser();
RubyMessage.java,parser = parser.ignoringUnknownFields();,if (parser != null ) parser = parser.ignoringUnknownFields();
RubyMessage.java,RubyArray ary = value.convertToArray();,if (value != null ) RubyArray ary = value.convertToArray();
RubyMessage.java,OneofDescriptor ood = fieldDescriptor.getContainingOneof();,if (fieldDescriptor != null ) OneofDescriptor ood = fieldDescriptor.getContainingOneof();
RubyMessage.java,String nameStr = fieldName.asJavaString();,if (fieldName != null ) String nameStr = fieldName.asJavaString();
RubyMessage.java,val = value.isTrue();,if (value != null ) val = value.isTrue();
RubyMessage.java,val = value.asJavaString();,if (value != null ) val = value.asJavaString();
RubyMessage.java,EnumDescriptor enumDescriptor = fieldDescriptor.getEnumType();,if (fieldDescriptor != null ) EnumDescriptor enumDescriptor = fieldDescriptor.getEnumType();
RubyMessage.java,val = enumDescriptor.findValueByName(value.asJavaString());,if (enumDescriptor != null ) val = enumDescriptor.findValueByName(value.asJavaString());
RubyMessage.java,IRubyObject typeClass = context.runtime.getNilClass();,if (context != null ) IRubyObject typeClass = context.runtime.getNilClass();
RubyMessage.java,FieldDescriptor.Type type = fieldDescriptor.getType();,if (fieldDescriptor != null ) FieldDescriptor.Type type = fieldDescriptor.getType();
RubyMessage.java,OneofDescriptor oneofDescriptor = fieldDescriptor.getContainingOneof();,if (fieldDescriptor != null ) OneofDescriptor oneofDescriptor = fieldDescriptor.getContainingOneof();
RubyMessage.java,FieldDescriptor.Type fieldType = fieldDescriptor.getType();,if (fieldDescriptor != null ) FieldDescriptor.Type fieldType = fieldDescriptor.getType();
RubyMessage.java,OneofDescriptor oneofDescriptor = fieldDescriptor.getContainingOneof();,if (fieldDescriptor != null ) OneofDescriptor oneofDescriptor = fieldDescriptor.getContainingOneof();
RubyMessage.java,IRubyObject typeClass = context.runtime.getObject();,if (context != null ) IRubyObject typeClass = context.runtime.getObject();
RubyMessage.java,RubyArray arr = value.convertToArray();,if (value != null ) RubyArray arr = value.convertToArray();
RubyMessage.java,FieldDescriptor.Type fieldType = fieldDescriptor.getType();,if (fieldDescriptor != null ) FieldDescriptor.Type fieldType = fieldDescriptor.getType();
RubyOneofDescriptor.java,this.name = context.runtime.newString(descriptor.getName());,if (context != null ) this.name = context.runtime.newString(descriptor.getName());
RubyRepeatedField.java,this.storage = runtime.newArray();,if (runtime != null ) this.storage = runtime.newArray();
RubyRepeatedField.java,this.storage = runtime.newArray();,if (runtime != null ) this.storage = runtime.newArray();
RubyRepeatedField.java,RubyArray arr = ary.convertToArray();,if (ary != null ) RubyArray arr = ary.convertToArray();
RubyRepeatedField.java,beg += this.storage.size();,if (this != null ) beg += this.storage.size();
RubyRepeatedField.java,IRubyObject ret = this.storage.last();,if (this != null ) IRubyObject ret = this.storage.last();
RubyRepeatedField.java,int hashCode = this.storage.hashCode();,if (this != null ) int hashCode = this.storage.hashCode();
RubyRepeatedField.java,SentinelOuterClass.Sentinel sentinel = SentinelOuterClass.Sentinel.getDefaultInstance();,if (SentinelOuterClass != null ) SentinelOuterClass.Sentinel sentinel = SentinelOuterClass.Sentinel.getDefaultInstance();
RubyRepeatedField.java,value = sentinel.getDefaultFloat();,if (sentinel != null ) value = sentinel.getDefaultFloat();
RubyRepeatedField.java,value = sentinel.getDefaultDouble();,if (sentinel != null ) value = sentinel.getDefaultDouble();
RubyRepeatedField.java,value = sentinel.getDefaultBool();,if (sentinel != null ) value = sentinel.getDefaultBool();
RubyRepeatedField.java,value = sentinel.getDefaultBytes();,if (sentinel != null ) value = sentinel.getDefaultBytes();
RubyRepeatedField.java,value = sentinel.getDefaultString();,if (sentinel != null ) value = sentinel.getDefaultString();
RubyRepeatedField.java,int arrSize = this.storage.size();,if (this != null ) int arrSize = this.storage.size();
Utils.java,String className = typeClass.getName();,if (typeClass != null ) String className = typeClass.getName();
Utils.java,IRubyObject wrapped = runtime.newString(value.toString());,if (runtime != null ) IRubyObject wrapped = runtime.newString(value.toString());
ServiceTest.java,control = EasyMock.createStrictControl();,if (EasyMock != null ) control = EasyMock.createStrictControl();
ServiceTest.java,FooRequest fooRequest = FooRequest.newBuilder().build();,if (FooRequest != null ) FooRequest fooRequest = FooRequest.newBuilder().build();
ServiceTest.java,BarRequest barRequest = BarRequest.newBuilder().build();,if (BarRequest != null ) BarRequest barRequest = BarRequest.newBuilder().build();
ServiceTest.java,FooRequest fooRequest = FooRequest.newBuilder().build();,if (FooRequest != null ) FooRequest fooRequest = FooRequest.newBuilder().build();
ServiceTest.java,BarRequest barRequest = BarRequest.newBuilder().build();,if (BarRequest != null ) BarRequest barRequest = BarRequest.newBuilder().build();
ServiceTest.java,FooRequest fooRequest = FooRequest.newBuilder().build();,if (FooRequest != null ) FooRequest fooRequest = FooRequest.newBuilder().build();
ServiceTest.java,BarRequest barRequest = BarRequest.newBuilder().build();,if (BarRequest != null ) BarRequest barRequest = BarRequest.newBuilder().build();
ServiceTest.java,FooResponse fooResponse = FooResponse.newBuilder().build();,if (FooResponse != null ) FooResponse fooResponse = FooResponse.newBuilder().build();
ServiceTest.java,BarResponse barResponse = BarResponse.newBuilder().build();,if (BarResponse != null ) BarResponse barResponse = BarResponse.newBuilder().build();
ServiceTest.java,MessageWithNoOuter request = MessageWithNoOuter.getDefaultInstance();,if (MessageWithNoOuter != null ) MessageWithNoOuter request = MessageWithNoOuter.getDefaultInstance();
ServiceTest.java,MessageWithNoOuter request = MessageWithNoOuter.getDefaultInstance();,if (MessageWithNoOuter != null ) MessageWithNoOuter request = MessageWithNoOuter.getDefaultInstance();
DescriptorMessageInfoFactory.java,String camelCase = snakeCaseToCamelCase(desc.getName());,if (snakeCaseToCamelCase(desc != null ) String camelCase = snakeCaseToCamelCase(desc.getName());
Proto3MessageLiteInfoFactory.java,StructuralMessageInfo.Builder builder = StructuralMessageInfo.newBuilder();,if (StructuralMessageInfo != null ) StructuralMessageInfo.Builder builder = StructuralMessageInfo.newBuilder();
Proto2MessageLiteInfoFactory.java,StructuralMessageInfo.Builder builder = StructuralMessageInfo.newBuilder();,if (StructuralMessageInfo != null ) StructuralMessageInfo.Builder builder = StructuralMessageInfo.newBuilder();
UnknownFieldSet.java,lastField = Field.newBuilder();,if (Field != null ) lastField = Field.newBuilder();
UnknownFieldSet.java,fields = Collections.emptyMap();,if (Collections != null ) fields = Collections.emptyMap();
UnknownFieldSet.java,final int tag = input.readTag();,if (input != null ) final int tag = input.readTag();
UnknownFieldSet.java,final CodedInputStream input = data.newCodedInput();,if (data != null ) final CodedInputStream input = data.newCodedInput();
UnknownFieldSet.java,final int firstByte = input.read();,if (input != null ) final int firstByte = input.read();
UnknownFieldSet.java,result.varint = Collections.emptyList();,if (Collections != null ) result.varint = Collections.emptyList();
UnknownFieldSet.java,result.lengthDelimited = Collections.emptyList();,if (Collections != null ) result.lengthDelimited = Collections.emptyList();
UnknownFieldSet.java,result.group = Collections.emptyList();,if (Collections != null ) result.group = Collections.emptyList();
UnknownFieldSet.java,lastField = Field.newBuilder();,if (Field != null ) lastField = Field.newBuilder();
UnknownFieldSet.java,fields = Collections.emptyMap();,if (Collections != null ) fields = Collections.emptyMap();
UnknownFieldSet.java,final int tag = input.readTag();,if (input != null ) final int tag = input.readTag();
UnknownFieldSet.java,final CodedInputStream input = data.newCodedInput();,if (data != null ) final CodedInputStream input = data.newCodedInput();
UnknownFieldSet.java,final int firstByte = input.read();,if (input != null ) final int firstByte = input.read();
UnknownFieldSet.java,result.varint = Collections.emptyList();,if (Collections != null ) result.varint = Collections.emptyList();
UnknownFieldSet.java,result.lengthDelimited = Collections.emptyList();,if (Collections != null ) result.lengthDelimited = Collections.emptyList();
UnknownFieldSet.java,result.group = Collections.emptyList();,if (Collections != null ) result.group = Collections.emptyList();
Utf8Utils.java,strings[i] = sb.toString();,if (sb != null ) strings[i] = sb.toString();
Proto2MessageInfoFactory.java,StructuralMessageInfo.Builder builder = StructuralMessageInfo.newBuilder();,if (StructuralMessageInfo != null ) StructuralMessageInfo.Builder builder = StructuralMessageInfo.newBuilder();
Proto3MessageInfoFactory.java,StructuralMessageInfo.Builder builder = StructuralMessageInfo.newBuilder();,if (StructuralMessageInfo != null ) StructuralMessageInfo.Builder builder = StructuralMessageInfo.newBuilder();
RubyEnumBuilderContext.java,this.builder = this.fileBuilderContext.getNewEnumBuilder();,if (this != null ) this.builder = this.fileBuilderContext.getNewEnumBuilder();
RubyFileBuilderContext.java,this.builder = FileDescriptorProto.newBuilder();,if (FileDescriptorProto != null ) this.builder = FileDescriptorProto.newBuilder();
RubyFileBuilderContext.java,String syntaxStr = syntax.asJavaString();,if (syntax != null ) String syntaxStr = syntax.asJavaString();
RubyFileBuilderContext.java,int packageNameLength = packageName.length();,if (packageName != null ) int packageNameLength = packageName.length();
RubyFileBuilderContext.java,String name = enumBuilder.getName();,if (enumBuilder != null ) String name = enumBuilder.getName();
RubyFileBuilderContext.java,DescriptorProto.Builder messageBuilder = entry.getValue();,if (entry != null ) DescriptorProto.Builder messageBuilder = entry.getValue();
RubyFileBuilderContext.java,String typeName = field.getTypeName();,if (field != null ) String typeName = field.getTypeName();
RubyFileBuilderContext.java,int defaultValue = Integer.parseInt(field.getDefaultValue());,if (Integer != null ) int defaultValue = Integer.parseInt(field.getDefaultValue());
RubyFileBuilderContext.java,String name = messageBuilder.getName();,if (messageBuilder != null ) String name = messageBuilder.getName();
RubyFileBuilderContext.java,String name = message.getName();,if (message != null ) String name = message.getName();
RubyFileBuilderContext.java,int nameLength = name.length();,if (name != null ) int nameLength = name.length();
RubyFileBuilderContext.java,String name = item.getName();,if (item != null ) String name = item.getName();
RubyFileBuilderContext.java,int nameLength = name.length();,if (name != null ) int nameLength = name.length();
RubyMessage.java,String fieldName = fieldDescriptor.getName();,if (fieldDescriptor != null ) String fieldName = fieldDescriptor.getName();
RubyMessageBuilderContext.java,this.builder = this.fileBuilderContext.getNewMessageBuilder();,if (this != null ) this.builder = this.fileBuilderContext.getNewMessageBuilder();
RubyMessageBuilderContext.java,DescriptorProto.Builder mapEntryBuilder = fileBuilderContext.getNewMessageBuilder();,if (fileBuilderContext != null ) DescriptorProto.Builder mapEntryBuilder = fileBuilderContext.getNewMessageBuilder();
Utils.java,FieldDescriptorProto.Builder builder = FieldDescriptorProto.newBuilder();,if (FieldDescriptorProto != null ) FieldDescriptorProto.Builder builder = FieldDescriptorProto.newBuilder();
FieldMaskUtil.java,Message.Builder destination = source.newBuilderForType();,if (source != null ) Message.Builder destination = source.newBuilderForType();
RawMessageInfo.java,char[] infoChars = info.toCharArray();,if (info != null ) char[] infoChars = info.toCharArray();
AbstractMessageTest.java,message = TestOptimizedForSize.parseFrom(message.toByteString());,if (TestOptimizedForSize != null ) message = TestOptimizedForSize.parseFrom(message.toByteString());
AbstractMessageTest.java,TestAllTypes b = TestAllTypes.newBuilder().build();,if (TestAllTypes != null ) TestAllTypes b = TestAllTypes.newBuilder().build();
ExtensionRegistryFactoryTest.java,ClassLoader testClassLoader = ExtensionRegistryFactoryTest.class.getClassLoader();,if (ExtensionRegistryFactoryTest != null ) ClassLoader testClassLoader = ExtensionRegistryFactoryTest.class.getClassLoader();
LazyFieldLiteTest.java,TestAllExtensions emptyMessage = TestAllExtensions.newBuilder().build();,if (TestAllExtensions != null ) TestAllExtensions emptyMessage = TestAllExtensions.newBuilder().build();
LazyMessageLiteTest.java,outer = LazyMessageLite.parseFrom(outer.toByteArray());,if (LazyMessageLite != null ) outer = LazyMessageLite.parseFrom(outer.toByteArray());
MapForProto2Test.java,ByteString data = builder.build().toByteString();,if (builder != null ) ByteString data = builder.build().toByteString();
MapLiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapLiteTest.java,message = TestMap.parseFrom(message.toByteString());,if (TestMap != null ) message = TestMap.parseFrom(message.toByteString());
MapTest.java,message = TestMap.parseFrom(message.toByteString());,if (TestMap != null ) message = TestMap.parseFrom(message.toByteString());
WrappersLiteOfMethodTest.java,assertTrue(true == message.getFieldBool().getValue());,if (message != null ) assertTrue(true == message.getFieldBool().getValue());
WrappersOfMethodTest.java,assertTrue(true == message.getFieldBool().getValue());,if (message != null ) assertTrue(true == message.getFieldBool().getValue());
AbstractMessageTest.java,TestAllTypes message = TestUtil.getAllSet();,if (TestUtil != null ) TestAllTypes message = TestUtil.getAllSet();
AbstractMessageTest.java,Message abstractMessage = new AbstractMessageWrapper(TestUtil.getAllSet());,if (AbstractMessageWrapper(TestUtil != null ) Message abstractMessage = new AbstractMessageWrapper(TestUtil.getAllSet());
AbstractMessageTest.java,Message abstractMessage = new AbstractMessageWrapper(TestUtil.getAllSet());,if (AbstractMessageWrapper(TestUtil != null ) Message abstractMessage = new AbstractMessageWrapper(TestUtil.getAllSet());
AbstractMessageTest.java,TestRequiredForeign.Builder builder = TestRequiredForeign.newBuilder();,if (TestRequiredForeign != null ) TestRequiredForeign.Builder builder = TestRequiredForeign.newBuilder();
AbstractMessageTest.java,ByteString bytes = builder.buildPartial().toByteString();,if (builder != null ) ByteString bytes = builder.buildPartial().toByteString();
AbstractMessageTest.java,message = TestOptimizedForSize.parseFrom(message.toByteString());,if (TestOptimizedForSize != null ) message = TestOptimizedForSize.parseFrom(message.toByteString());
AbstractMessageTest.java,TestRequired.Builder builder = TestRequired.newBuilder();,if (TestRequired != null ) TestRequired.Builder builder = TestRequired.newBuilder();
AbstractMessageTest.java,TestRequiredForeign.Builder builder = TestRequiredForeign.newBuilder();,if (TestRequiredForeign != null ) TestRequiredForeign.Builder builder = TestRequiredForeign.newBuilder();
AbstractMessageTest.java,TestAllTypes a = TestUtil.getAllSet();,if (TestUtil != null ) TestAllTypes a = TestUtil.getAllSet();
AbstractMessageTest.java,TestAllTypes b = TestAllTypes.newBuilder().build();,if (TestAllTypes != null ) TestAllTypes b = TestAllTypes.newBuilder().build();
AbstractMessageTest.java,TestAllExtensions e = TestUtil.getAllExtensionsSet();,if (TestUtil != null ) TestAllExtensions e = TestUtil.getAllExtensionsSet();
AbstractMessageTest.java,DynamicMessage dynamic = DynamicMessage.newBuilder(message).build();,if (DynamicMessage != null ) DynamicMessage dynamic = DynamicMessage.newBuilder(message).build();
ByteStringTest.java,byte[] originalValue = byteString.toByteArray();,if (byteString != null ) byte[] originalValue = byteString.toByteArray();
ByteStringTest.java,byte[] newValue = byteString.toByteArray();,if (byteString != null ) byte[] newValue = byteString.toByteArray();
ByteStringTest.java,ByteString byteString = output.toByteString();,if (output != null ) ByteString byteString = output.toByteString();
ByteStringTest.java,ByteString byteString = output.toByteString();,if (output != null ) ByteString byteString = output.toByteString();
ByteStringTest.java,ByteString byteString = output.toByteString();,if (output != null ) ByteString byteString = output.toByteString();
ByteStringTest.java,ByteString byteString = output.toByteString();,if (output != null ) ByteString byteString = output.toByteString();
ByteStringTest.java,ByteString byteString = ByteString.newOutput().toByteString();,if (ByteString != null ) ByteString byteString = ByteString.newOutput().toByteString();
ByteStringTest.java,ByteString byteString = os.toByteString();,if (os != null ) ByteString byteString = os.toByteString();
ByteStringTest.java,byte[] oldValue = byteString.toByteArray();,if (byteString != null ) byte[] oldValue = byteString.toByteArray();
ByteStringTest.java,byte[] newValue = byteString.toByteArray();,if (byteString != null ) byte[] newValue = byteString.toByteArray();
ByteStringTest.java,byte[] substringBytes = compositeSubstring.toByteArray();,if (compositeSubstring != null ) byte[] substringBytes = compositeSubstring.toByteArray();
ByteStringTest.java,Iterator<ByteString> iter = pieces.iterator();,if (pieces != null ) Iterator<ByteString> iter = pieces.iterator();
ByteStringTest.java,ByteString concatenatedString = iter.next();,if (iter != null ) ByteString concatenatedString = iter.next();
ByteStringTest.java,concatenatedString = concatenatedString.concat(iter.next());,if (concatenatedString != null ) concatenatedString = concatenatedString.concat(iter.next());
CodedInputStreamTest.java,TestAllTypes message = TestUtil.getAllSet();,if (TestUtil != null ) TestAllTypes message = TestUtil.getAllSet();
CodedInputStreamTest.java,byte[] rawBytes = message.toByteArray();,if (message != null ) byte[] rawBytes = message.toByteArray();
CodedInputStreamTest.java,TestAllTypes message = TestUtil.getAllSet();,if (TestUtil != null ) TestAllTypes message = TestUtil.getAllSet();
CodedInputStreamTest.java,byte[] rawBytes = message.toByteArray();,if (message != null ) byte[] rawBytes = message.toByteArray();
CodedInputStreamTest.java,UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();,if (UnknownFieldSet != null ) UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
CodedInputStreamTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
CodedInputStreamTest.java,TestAllTypes message = builder.build();,if (builder != null ) TestAllTypes message = builder.build();
CodedInputStreamTest.java,ByteString.Output rawOutput = ByteString.newOutput();,if (ByteString != null ) ByteString.Output rawOutput = ByteString.newOutput();
CodedInputStreamTest.java,CodedInputStream input = rawOutput.toByteString().newCodedInput();,if (rawOutput != null ) CodedInputStream input = rawOutput.toByteString().newCodedInput();
CodedInputStreamTest.java,ByteString.Output rawOutput = ByteString.newOutput();,if (ByteString != null ) ByteString.Output rawOutput = ByteString.newOutput();
CodedInputStreamTest.java,CodedInputStream input = rawOutput.toByteString().newCodedInput();,if (rawOutput != null ) CodedInputStream input = rawOutput.toByteString().newCodedInput();
CodedInputStreamTest.java,String text = input.readString();,if (input != null ) String text = input.readString();
CodedOutputStreamTest.java,TestAllTypes message = TestUtil.getAllSet();,if (TestUtil != null ) TestAllTypes message = TestUtil.getAllSet();
CodedOutputStreamTest.java,byte[] rawBytes = message.toByteArray();,if (message != null ) byte[] rawBytes = message.toByteArray();
CodedOutputStreamTest.java,TestPackedTypes message = TestUtil.getPackedSet();,if (TestUtil != null ) TestPackedTypes message = TestUtil.getPackedSet();
CodedOutputStreamTest.java,byte[] rawBytes = message.toByteArray();,if (message != null ) byte[] rawBytes = message.toByteArray();
CodedOutputStreamTest.java,byte[] rawBytes = message.toByteArray();,if (message != null ) byte[] rawBytes = message.toByteArray();
DescriptorsTest.java,FieldDescriptorProto.Type protoType = type.toProto();,if (type != null ) FieldDescriptorProto.Type protoType = type.toProto();
DescriptorsTest.java,FileDescriptor file = UnittestProto.getDescriptor();,if (UnittestProto != null ) FileDescriptor file = UnittestProto.getDescriptor();
DescriptorsTest.java,Descriptor messageType = TestAllTypes.getDescriptor();,if (TestAllTypes != null ) Descriptor messageType = TestAllTypes.getDescriptor();
DescriptorsTest.java,EnumDescriptor enumType = ForeignEnum.getDescriptor();,if (ForeignEnum != null ) EnumDescriptor enumType = ForeignEnum.getDescriptor();
DescriptorsTest.java,ServiceDescriptor service = TestService.getDescriptor();,if (TestService != null ) ServiceDescriptor service = TestService.getDescriptor();
DescriptorsTest.java,Descriptor messageType = TestAllTypes.getDescriptor();,if (TestAllTypes != null ) Descriptor messageType = TestAllTypes.getDescriptor();
DescriptorsTest.java,Descriptor nestedType = TestAllTypes.NestedMessage.getDescriptor();,if (TestAllTypes != null ) Descriptor nestedType = TestAllTypes.NestedMessage.getDescriptor();
DescriptorsTest.java,EnumDescriptor enumType = TestAllTypes.NestedEnum.getDescriptor();,if (TestAllTypes != null ) EnumDescriptor enumType = TestAllTypes.NestedEnum.getDescriptor();
DescriptorsTest.java,Descriptor messageType = TestAllTypes.getDescriptor();,if (TestAllTypes != null ) Descriptor messageType = TestAllTypes.getDescriptor();
DescriptorsTest.java,FieldDescriptor nestedExtension = TestRequired.single.getDescriptor();,if (TestRequired != null ) FieldDescriptor nestedExtension = TestRequired.single.getDescriptor();
DescriptorsTest.java,Descriptor d = TestAllTypes.getDescriptor();,if (TestAllTypes != null ) Descriptor d = TestAllTypes.getDescriptor();
DescriptorsTest.java,d = TestExtremeDefaultValues.getDescriptor();,if (TestExtremeDefaultValues != null ) d = TestExtremeDefaultValues.getDescriptor();
DescriptorsTest.java,EnumDescriptor enumType = ForeignEnum.getDescriptor();,if (ForeignEnum != null ) EnumDescriptor enumType = ForeignEnum.getDescriptor();
DescriptorsTest.java,EnumDescriptor nestedType = TestAllTypes.NestedEnum.getDescriptor();,if (TestAllTypes != null ) EnumDescriptor nestedType = TestAllTypes.NestedEnum.getDescriptor();
DescriptorsTest.java,ServiceDescriptor service = TestService.getDescriptor();,if (TestService != null ) ServiceDescriptor service = TestService.getDescriptor();
DescriptorsTest.java,List<Descriptor> msglist = file.getMessageTypes();,if (file != null ) List<Descriptor> msglist = file.getMessageTypes();
DescriptorsTest.java,List<FieldDescriptor> fieldlist = desc.getFields();,if (desc != null ) List<FieldDescriptor> fieldlist = desc.getFields();
DescriptorsTest.java,List<Descriptor> msglist = barFile.getMessageTypes();,if (barFile != null ) List<Descriptor> msglist = barFile.getMessageTypes();
DescriptorsTest.java,List<FieldDescriptor> fieldlist = desc.getFields();,if (desc != null ) List<FieldDescriptor> fieldlist = desc.getFields();
DynamicMessageTest.java,Message message = builder.build();,if (builder != null ) Message message = builder.build();
DynamicMessageTest.java,Message firstMessage = builder.build();,if (builder != null ) Message firstMessage = builder.build();
DynamicMessageTest.java,Message message = builder.build();,if (builder != null ) Message message = builder.build();
DynamicMessageTest.java,message = builder.build();,if (builder != null ) message = builder.build();
DynamicMessageTest.java,Message message = builder.build();,if (builder != null ) Message message = builder.build();
DynamicMessageTest.java,Message.Builder newBuilder = builder.clone();,if (builder != null ) Message.Builder newBuilder = builder.clone();
DynamicMessageTest.java,Message message = builder.build();,if (builder != null ) Message message = builder.build();
DynamicMessageTest.java,Message message = builder.build();,if (builder != null ) Message message = builder.build();
DynamicMessageTest.java,TestAllTypes message = TestUtil.getAllSet();,if (TestUtil != null ) TestAllTypes message = TestUtil.getAllSet();
DynamicMessageTest.java,Message dynamicMessage = dynamicBuilder.build();,if (dynamicBuilder != null ) Message dynamicMessage = dynamicBuilder.build();
DynamicMessageTest.java,Message message = builder.build();,if (builder != null ) Message message = builder.build();
DynamicMessageTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
DynamicMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
DynamicMessageTest.java,TestAllTypes message = builder.build();,if (builder != null ) TestAllTypes message = builder.build();
DynamicMessageTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
DynamicMessageTest.java,ByteString rawBytes = TestUtil.getAllExtensionsSet().toByteString();,if (TestUtil != null ) ByteString rawBytes = TestUtil.getAllExtensionsSet().toByteString();
DynamicMessageTest.java,Message message = builder.build();,if (builder != null ) Message message = builder.build();
DynamicMessageTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
DynamicMessageTest.java,TestPackedTypes.Builder builder = TestPackedTypes.newBuilder();,if (TestPackedTypes != null ) TestPackedTypes.Builder builder = TestPackedTypes.newBuilder();
DynamicMessageTest.java,TestPackedTypes message = builder.build();,if (builder != null ) TestPackedTypes message = builder.build();
DynamicMessageTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
DynamicMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
DynamicMessageTest.java,TestAllTypes message = builder.build();,if (builder != null ) TestAllTypes message = builder.build();
DynamicMessageTest.java,DynamicMessage copy = DynamicMessage.newBuilder(message).build();,if (DynamicMessage != null ) DynamicMessage copy = DynamicMessage.newBuilder(message).build();
DynamicMessageTest.java,DynamicMessage message = builder.build();,if (builder != null ) DynamicMessage message = builder.build();
DynamicMessageTest.java,DynamicMessage derived = message.toBuilder().build();,if (message != null ) DynamicMessage derived = message.toBuilder().build();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,TestAllTypes message = builder.build();,if (builder != null ) TestAllTypes message = builder.build();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,TestAllTypes value = builder.build();,if (builder != null ) TestAllTypes value = builder.build();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,TestAllTypes message = builder.build();,if (builder != null ) TestAllTypes message = builder.build();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,TestAllTypes message = builder.build();,if (builder != null ) TestAllTypes message = builder.build();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,TestAllTypes message = builder.build();,if (builder != null ) TestAllTypes message = builder.build();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,TestAllTypes message = builder.build();,if (builder != null ) TestAllTypes message = builder.build();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,TestAllTypes message = builder.build();,if (builder != null ) TestAllTypes message = builder.build();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,TestUnpackedTypes.Builder builder = TestUnpackedTypes.newBuilder();,if (TestUnpackedTypes != null ) TestUnpackedTypes.Builder builder = TestUnpackedTypes.newBuilder();
GeneratedMessageTest.java,TestPackedTypes.Builder builder = TestPackedTypes.newBuilder();,if (TestPackedTypes != null ) TestPackedTypes.Builder builder = TestPackedTypes.newBuilder();
GeneratedMessageTest.java,TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();,if (TestAllExtensions != null ) TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();
GeneratedMessageTest.java,TestAllExtensions message = builder.build();,if (builder != null ) TestAllExtensions message = builder.build();
GeneratedMessageTest.java,TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();,if (TestAllExtensions != null ) TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();
GeneratedMessageTest.java,TestAllExtensions message = builder.build();,if (builder != null ) TestAllExtensions message = builder.build();
GeneratedMessageTest.java,TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();,if (TestAllExtensions != null ) TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();
GeneratedMessageTest.java,TestAllExtensions message = builder.build();,if (builder != null ) TestAllExtensions message = builder.build();
GeneratedMessageTest.java,TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();,if (TestAllExtensions != null ) TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();
GeneratedMessageTest.java,TestAllExtensions message = builder.build();,if (builder != null ) TestAllExtensions message = builder.build();
GeneratedMessageTest.java,TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();,if (TestAllExtensions != null ) TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();
GeneratedMessageTest.java,TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();,if (TestAllExtensions != null ) TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();
GeneratedMessageTest.java,TestAllExtensions message = builder.build();,if (builder != null ) TestAllExtensions message = builder.build();
GeneratedMessageTest.java,TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();,if (TestAllExtensions != null ) TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();
GeneratedMessageTest.java,TestAllExtensions original = TestUtil.getAllExtensionsSet();,if (TestUtil != null ) TestAllExtensions original = TestUtil.getAllExtensionsSet();
GeneratedMessageTest.java,TestAllExtensions copy = TestAllExtensions.newBuilder(original).build();,if (TestAllExtensions != null ) TestAllExtensions copy = TestAllExtensions.newBuilder(original).build();
GeneratedMessageTest.java,TestOptimizedForSize.Builder builder = TestOptimizedForSize.newBuilder();,if (TestOptimizedForSize != null ) TestOptimizedForSize.Builder builder = TestOptimizedForSize.newBuilder();
GeneratedMessageTest.java,builder = TestOptimizedForSize.newBuilder();,if (TestOptimizedForSize != null ) builder = TestOptimizedForSize.newBuilder();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,TestAllTypes message = builder.build();,if (builder != null ) TestAllTypes message = builder.build();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,TestAllTypes expected = builder.build();,if (builder != null ) TestAllTypes expected = builder.build();
GeneratedMessageTest.java,ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray());,if (ByteArrayInputStream(baos != null ) ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray());
GeneratedMessageTest.java,TestAllTypes actual = (TestAllTypes) in.readObject();,if (in != null ) TestAllTypes actual = (TestAllTypes) in.readObject();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,TestAllTypes expected = builder.buildPartial();,if (builder != null ) TestAllTypes expected = builder.buildPartial();
GeneratedMessageTest.java,ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray());,if (ByteArrayInputStream(baos != null ) ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray());
GeneratedMessageTest.java,TestAllTypes actual = (TestAllTypes) in.readObject();,if (in != null ) TestAllTypes actual = (TestAllTypes) in.readObject();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,TestAllTypes message = builder.buildPartial();,if (builder != null ) TestAllTypes message = builder.buildPartial();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,Descriptor descriptor = TestAllTypes.getDescriptor();,if (TestAllTypes != null ) Descriptor descriptor = TestAllTypes.getDescriptor();
GeneratedMessageTest.java,Descriptor descriptor = TestAllTypes.getDescriptor();,if (TestAllTypes != null ) Descriptor descriptor = TestAllTypes.getDescriptor();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,Descriptor descriptor = TestAllTypes.getDescriptor();,if (TestAllTypes != null ) Descriptor descriptor = TestAllTypes.getDescriptor();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
LazyStringEndToEndTest.java,ByteString optional = proto.getOptionalStringBytes();,if (proto != null ) ByteString optional = proto.getOptionalStringBytes();
LiteralByteStringTest.java,String actualClassName = object.getClass().getName();,if (object != null ) String actualClassName = object.getClass().getName();
LiteralByteStringTest.java,ByteString.ByteIterator iter = stringUnderTest.iterator();,if (stringUnderTest != null ) ByteString.ByteIterator iter = stringUnderTest.iterator();
LiteralByteStringTest.java,ByteBuffer byteBuffer = stringUnderTest.asReadOnlyByteBuffer();,if (stringUnderTest != null ) ByteBuffer byteBuffer = stringUnderTest.asReadOnlyByteBuffer();
LiteralByteStringTest.java,List<ByteBuffer> byteBuffers = stringUnderTest.asReadOnlyByteBufferList();,if (stringUnderTest != null ) List<ByteBuffer> byteBuffers = stringUnderTest.asReadOnlyByteBufferList();
LiteralByteStringTest.java,int thisLength = byteBuffer.remaining();,if (byteBuffer != null ) int thisLength = byteBuffer.remaining();
LiteralByteStringTest.java,byte[] roundTripBytes = stringUnderTest.toByteArray();,if (stringUnderTest != null ) byte[] roundTripBytes = stringUnderTest.toByteArray();
LiteralByteStringTest.java,byte[] roundTripBytes = bos.toByteArray();,if (bos != null ) byte[] roundTripBytes = bos.toByteArray();
LiteralByteStringTest.java,byte[] newBytes = stringUnderTest.toByteArray();,if (stringUnderTest != null ) byte[] newBytes = stringUnderTest.toByteArray();
LiteralByteStringTest.java,ByteString.Output output = ByteString.newOutput();,if (ByteString != null ) ByteString.Output output = ByteString.newOutput();
LiteralByteStringTest.java,int hash = stringUnderTest.hashCode();,if (stringUnderTest != null ) int hash = stringUnderTest.hashCode();
LiteralByteStringTest.java,InputStream input = stringUnderTest.newInput();,if (stringUnderTest != null ) InputStream input = stringUnderTest.newInput();
LiteralByteStringTest.java,stillEqual = (expectedInt == input.read());,if (input != null ) stillEqual = (expectedInt == input.read());
LiteralByteStringTest.java,InputStream input = stringUnderTest.newInput();,if (stringUnderTest != null ) InputStream input = stringUnderTest.newInput();
LiteralByteStringTest.java,int stringSize = stringUnderTest.size();,if (stringUnderTest != null ) int stringSize = stringUnderTest.size();
LiteralByteStringTest.java,CodedInputStream cis = stringUnderTest.newCodedInput();,if (stringUnderTest != null ) CodedInputStream cis = stringUnderTest.newCodedInput();
MessageTest.java,TestRequired.Builder builder = TestRequired.newBuilder();,if (TestRequired != null ) TestRequired.Builder builder = TestRequired.newBuilder();
MessageTest.java,TestRequiredForeign.Builder builder = TestRequiredForeign.newBuilder();,if (TestRequiredForeign != null ) TestRequiredForeign.Builder builder = TestRequiredForeign.newBuilder();
MessageTest.java,TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();,if (TestAllExtensions != null ) TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();
MessageTest.java,Descriptors.Descriptor descriptor = TestRequired.getDescriptor();,if (TestRequired != null ) Descriptors.Descriptor descriptor = TestRequired.getDescriptor();
MessageTest.java,Descriptors.Descriptor descriptor = TestRequiredForeign.getDescriptor();,if (TestRequiredForeign != null ) Descriptors.Descriptor descriptor = TestRequiredForeign.getDescriptor();
MessageTest.java,TestRequired message = TestRequired.newBuilder().buildPartial();,if (TestRequired != null ) TestRequired message = TestRequired.newBuilder().buildPartial();
MessageTest.java,Descriptors.Descriptor descriptor = TestRequired.getDescriptor();,if (TestRequired != null ) Descriptors.Descriptor descriptor = TestRequired.getDescriptor();
MessageTest.java,Descriptors.Descriptor descriptor = TestRequired.getDescriptor();,if (TestRequired != null ) Descriptors.Descriptor descriptor = TestRequired.getDescriptor();
MessageTest.java,Descriptors.Descriptor descriptor = TestRequired.getDescriptor();,if (TestRequired != null ) Descriptors.Descriptor descriptor = TestRequired.getDescriptor();
NestedBuildersTest.java,Vehicle.Builder vehicleBuilder = Vehicle.newBuilder();,if (Vehicle != null ) Vehicle.Builder vehicleBuilder = Vehicle.newBuilder();
NestedBuildersTest.java,Vehicle vehicle = vehicleBuilder.build();,if (vehicleBuilder != null ) Vehicle vehicle = vehicleBuilder.build();
NestedBuildersTest.java,vehicle = vehicleBuilder.build();,if (vehicleBuilder != null ) vehicle = vehicleBuilder.build();
NestedBuildersTest.java,Vehicle.Builder vehicleBuilder = Vehicle.newBuilder();,if (Vehicle != null ) Vehicle.Builder vehicleBuilder = Vehicle.newBuilder();
NestedBuildersTest.java,List<Wheel> wheels = new ArrayList<Wheel>(vehicleBuilder.getWheelList());,if (ArrayList<Wheel>(vehicleBuilder != null ) List<Wheel> wheels = new ArrayList<Wheel>(vehicleBuilder.getWheelList());
NestedBuildersTest.java,Vehicle.Builder vehicleBuilder = Vehicle.newBuilder();,if (Vehicle != null ) Vehicle.Builder vehicleBuilder = Vehicle.newBuilder();
NestedBuildersTest.java,Vehicle.Builder vehicleBuilder = Vehicle.newBuilder();,if (Vehicle != null ) Vehicle.Builder vehicleBuilder = Vehicle.newBuilder();
NestedBuildersTest.java,Vehicle.Builder vehicleBuilder = Vehicle.newBuilder();,if (Vehicle != null ) Vehicle.Builder vehicleBuilder = Vehicle.newBuilder();
NestedBuildersTest.java,Vehicle vehicle = vehicleBuilder.buildPartial();,if (vehicleBuilder != null ) Vehicle vehicle = vehicleBuilder.buildPartial();
ParserTest.java,byte[] data = partialMessage.toByteArray();,if (partialMessage != null ) byte[] data = partialMessage.toByteArray();
ParserTest.java,TestAllTypes normalMessage = TestUtil.getAllSet();,if (TestUtil != null ) TestAllTypes normalMessage = TestUtil.getAllSet();
ParserTest.java,InputStream input = new ByteArrayInputStream(output.toByteArray());,if (ByteArrayInputStream(output != null ) InputStream input = new ByteArrayInputStream(output.toByteArray());
ParserTest.java,TestOptimizedForSize.Builder builder = TestOptimizedForSize.newBuilder();,if (TestOptimizedForSize != null ) TestOptimizedForSize.Builder builder = TestOptimizedForSize.newBuilder();
ParserTest.java,TestOptimizedForSize message = builder.build();,if (builder != null ) TestOptimizedForSize message = builder.build();
ParserTest.java,ExtensionRegistry registry = ExtensionRegistry.newInstance();,if (ExtensionRegistry != null ) ExtensionRegistry registry = ExtensionRegistry.newInstance();
ParserTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
ParserTest.java,ExtensionRegistry registry = ExtensionRegistry.newInstance();,if (ExtensionRegistry != null ) ExtensionRegistry registry = ExtensionRegistry.newInstance();
RopeByteStringSubstringTest.java,Iterator<ByteString> iter = ByteStringTest.makeConcretePieces(sourceBytes).iterator();,if (ByteStringTest != null ) Iterator<ByteString> iter = ByteStringTest.makeConcretePieces(sourceBytes).iterator();
RopeByteStringSubstringTest.java,ByteString sourceString = iter.next();,if (iter != null ) ByteString sourceString = iter.next();
RopeByteStringSubstringTest.java,sourceString = sourceString.concat(iter.next());,if (sourceString != null ) sourceString = sourceString.concat(iter.next());
RopeByteStringTest.java,Iterator<ByteString> iter = ByteStringTest.makeConcretePieces(referenceBytes).iterator();,if (ByteStringTest != null ) Iterator<ByteString> iter = ByteStringTest.makeConcretePieces(referenceBytes).iterator();
RopeByteStringTest.java,stringUnderTest = iter.next();,if (iter != null ) stringUnderTest = iter.next();
RopeByteStringTest.java,stringUnderTest = stringUnderTest.concat(iter.next());,if (stringUnderTest != null ) stringUnderTest = stringUnderTest.concat(iter.next());
ServiceTest.java,control = EasyMock.createStrictControl();,if (EasyMock != null ) control = EasyMock.createStrictControl();
ServiceTest.java,FooRequest fooRequest = FooRequest.newBuilder().build();,if (FooRequest != null ) FooRequest fooRequest = FooRequest.newBuilder().build();
ServiceTest.java,BarRequest barRequest = BarRequest.newBuilder().build();,if (BarRequest != null ) BarRequest barRequest = BarRequest.newBuilder().build();
ServiceTest.java,FooRequest fooRequest = FooRequest.newBuilder().build();,if (FooRequest != null ) FooRequest fooRequest = FooRequest.newBuilder().build();
ServiceTest.java,BarRequest barRequest = BarRequest.newBuilder().build();,if (BarRequest != null ) BarRequest barRequest = BarRequest.newBuilder().build();
ServiceTest.java,FooRequest fooRequest = FooRequest.newBuilder().build();,if (FooRequest != null ) FooRequest fooRequest = FooRequest.newBuilder().build();
ServiceTest.java,BarRequest barRequest = BarRequest.newBuilder().build();,if (BarRequest != null ) BarRequest barRequest = BarRequest.newBuilder().build();
ServiceTest.java,FooResponse fooResponse = FooResponse.newBuilder().build();,if (FooResponse != null ) FooResponse fooResponse = FooResponse.newBuilder().build();
ServiceTest.java,BarResponse barResponse = BarResponse.newBuilder().build();,if (BarResponse != null ) BarResponse barResponse = BarResponse.newBuilder().build();
ServiceTest.java,MessageWithNoOuter request = MessageWithNoOuter.getDefaultInstance();,if (MessageWithNoOuter != null ) MessageWithNoOuter request = MessageWithNoOuter.getDefaultInstance();
ServiceTest.java,MessageWithNoOuter request = MessageWithNoOuter.getDefaultInstance();,if (MessageWithNoOuter != null ) MessageWithNoOuter request = MessageWithNoOuter.getDefaultInstance();
ServiceTest.java,TestAllTypes expectedResponse = TestAllTypes.getDefaultInstance();,if (TestAllTypes != null ) TestAllTypes expectedResponse = TestAllTypes.getDefaultInstance();
ServiceTest.java,String fullName = innerClass.getName();,if (innerClass != null ) String fullName = innerClass.getName();
ServiceTest.java,FileDescriptor file = UnittestNoGenericServices.getDescriptor();,if (UnittestNoGenericServices != null ) FileDescriptor file = UnittestNoGenericServices.getDescriptor();
TestUtil.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TestUtil.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TestUtil.java,TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();,if (TestAllExtensions != null ) TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();
TestUtil.java,TestPackedTypes.Builder builder = TestPackedTypes.newBuilder();,if (TestPackedTypes != null ) TestPackedTypes.Builder builder = TestPackedTypes.newBuilder();
TestUtil.java,TestUnpackedTypes.Builder builder = TestUnpackedTypes.newBuilder();,if (TestUnpackedTypes != null ) TestUnpackedTypes.Builder builder = TestUnpackedTypes.newBuilder();
TestUtil.java,TestPackedExtensions.Builder builder = TestPackedExtensions.newBuilder();,if (TestPackedExtensions != null ) TestPackedExtensions.Builder builder = TestPackedExtensions.newBuilder();
TestUtil.java,ExtensionRegistry registry = ExtensionRegistry.newInstance();,if (ExtensionRegistry != null ) ExtensionRegistry registry = ExtensionRegistry.newInstance();
TestUtil.java,this.file = baseDescriptor.getFile();,if (baseDescriptor != null ) this.file = baseDescriptor.getFile();
TestUtil.java,ancestor = ancestor.getCanonicalFile();,if (ancestor != null ) ancestor = ancestor.getCanonicalFile();
TestUtil.java,ancestor = ancestor.getParentFile();,if (ancestor != null ) ancestor = ancestor.getParentFile();
TextFormatTest.java,String javaText = TextFormat.printToString(TestUtil.getAllSet());,if (TextFormat != null ) String javaText = TextFormat.printToString(TestUtil.getAllSet());
TextFormatTest.java,String javaText = TextFormat.printToString(TestUtil.getAllSetBuilder());,if (TextFormat != null ) String javaText = TextFormat.printToString(TestUtil.getAllSetBuilder());
TextFormatTest.java,String javaText = TextFormat.printToString(TestUtil.getAllExtensionsSet());,if (TextFormat != null ) String javaText = TextFormat.printToString(TestUtil.getAllExtensionsSet());
TextFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TextFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TextFormatTest.java,TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();,if (TestAllExtensions != null ) TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();
TextFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TextFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TextFormatTest.java,ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();,if (ExtensionRegistry != null ) ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();
TextFormatTest.java,TestMessageSet.Builder builder = TestMessageSet.newBuilder();,if (TestMessageSet != null ) TestMessageSet.Builder builder = TestMessageSet.newBuilder();
TextFormatTest.java,TestMessageSet messageSet = builder.build();,if (builder != null ) TestMessageSet messageSet = builder.build();
TextFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TextFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TextFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TextFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TextFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TextFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TextFormatTest.java,TestAllTypes.Builder badBuilder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder badBuilder = TestAllTypes.newBuilder();
TextFormatTest.java,TestAllTypes.Builder badBuilder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder badBuilder = TestAllTypes.newBuilder();
TextFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TextFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
UnknownFieldSetTest.java,descriptor = TestAllTypes.getDescriptor();,if (TestAllTypes != null ) descriptor = TestAllTypes.getDescriptor();
UnknownFieldSetTest.java,allFields = TestUtil.getAllSet();,if (TestUtil != null ) allFields = TestUtil.getAllSet();
UnknownFieldSetTest.java,allFieldsData = allFields.toByteString();,if (allFields != null ) allFieldsData = allFields.toByteString();
UnknownFieldSetTest.java,unknownFields = emptyMessage.getUnknownFields();,if (emptyMessage != null ) unknownFields = emptyMessage.getUnknownFields();
UnknownFieldSetTest.java,UnknownFieldSet.Builder bizarroFields = UnknownFieldSet.newBuilder();,if (UnknownFieldSet != null ) UnknownFieldSet.Builder bizarroFields = UnknownFieldSet.newBuilder();
UnknownFieldSetTest.java,ByteString data = emptyMessage.toByteString();,if (emptyMessage != null ) ByteString data = emptyMessage.toByteString();
UnknownFieldSetTest.java,ByteString data = fields.toByteString();,if (fields != null ) ByteString data = fields.toByteString();
UnknownFieldSetTest.java,UnknownFieldSet copy = UnknownFieldSet.newBuilder(set).build();,if (UnknownFieldSet != null ) UnknownFieldSet copy = UnknownFieldSet.newBuilder(set).build();
UnmodifiableLazyStringListTest.java,Iterator<String> iter = list.iterator();,if (list != null ) Iterator<String> iter = list.iterator();
UnmodifiableLazyStringListTest.java,ListIterator<String> iter = list.listIterator();,if (list != null ) ListIterator<String> iter = list.listIterator();
WireFormatTest.java,TestAllTypes message = TestUtil.getAllSet();,if (TestUtil != null ) TestAllTypes message = TestUtil.getAllSet();
WireFormatTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatTest.java,TestPackedTypes message = TestUtil.getPackedSet();,if (TestUtil != null ) TestPackedTypes message = TestUtil.getPackedSet();
WireFormatTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatTest.java,TestAllExtensions message = TestUtil.getAllExtensionsSet();,if (TestUtil != null ) TestAllExtensions message = TestUtil.getAllExtensionsSet();
WireFormatTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatTest.java,TestPackedExtensions message = TestUtil.getPackedExtensionsSet();,if (TestUtil != null ) TestPackedExtensions message = TestUtil.getPackedExtensionsSet();
WireFormatTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatTest.java,TestPackedTypes message = TestUtil.getPackedSet();,if (TestUtil != null ) TestPackedTypes message = TestUtil.getPackedSet();
WireFormatTest.java,TestAllTypes message = TestUtil.getAllSet();,if (TestUtil != null ) TestAllTypes message = TestUtil.getAllSet();
WireFormatTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatTest.java,ExtensionRegistry registry = TestUtil.getExtensionRegistry();,if (TestUtil != null ) ExtensionRegistry registry = TestUtil.getExtensionRegistry();
WireFormatTest.java,TestPackedExtensions message = TestUtil.getPackedExtensionsSet();,if (TestUtil != null ) TestPackedExtensions message = TestUtil.getPackedExtensionsSet();
WireFormatTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatTest.java,ExtensionRegistry registry = TestUtil.getExtensionRegistry();,if (TestUtil != null ) ExtensionRegistry registry = TestUtil.getExtensionRegistry();
WireFormatTest.java,ByteArrayInputStream input = new ByteArrayInputStream(output.toByteArray());,if (ByteArrayInputStream(output != null ) ByteArrayInputStream input = new ByteArrayInputStream(output.toByteArray());
WireFormatTest.java,CodedInputStream input = data.newCodedInput();,if (data != null ) CodedInputStream input = data.newCodedInput();
WireFormatTest.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
WireFormatTest.java,Descriptors.Descriptor descriptor = TestFieldOrderings.getDescriptor();,if (TestFieldOrderings != null ) Descriptors.Descriptor descriptor = TestFieldOrderings.getDescriptor();
WireFormatTest.java,ExtensionRegistry result = ExtensionRegistry.newInstance();,if (ExtensionRegistry != null ) ExtensionRegistry result = ExtensionRegistry.newInstance();
WireFormatTest.java,Descriptors.Descriptor descriptor = TestFieldOrderings.getDescriptor();,if (TestFieldOrderings != null ) Descriptors.Descriptor descriptor = TestFieldOrderings.getDescriptor();
WireFormatTest.java,ByteString data = messageSet.toByteString();,if (messageSet != null ) ByteString data = messageSet.toByteString();
WireFormatTest.java,ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();,if (ExtensionRegistry != null ) ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();
WireFormatTest.java,ByteString data = raw.toByteString();,if (raw != null ) ByteString data = raw.toByteString();
WireFormatTest.java,UnknownFieldSet unknownFields = messageSet.getUnknownFields();,if (messageSet != null ) UnknownFieldSet unknownFields = messageSet.getUnknownFields();
WireFormatTest.java,ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();,if (ExtensionRegistry != null ) ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();
WireFormatTest.java,ByteString data = raw.toByteString();,if (raw != null ) ByteString data = raw.toByteString();
WireFormatTest.java,ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();,if (ExtensionRegistry != null ) ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();
WireFormatTest.java,ByteString data = raw.toByteString();,if (raw != null ) ByteString data = raw.toByteString();
ConformanceJava.java,ByteBuffer buffer = ByteBuffer.allocate(bytes.size());,if (ByteBuffer != null ) ByteBuffer buffer = ByteBuffer.allocate(bytes.size());
ConformanceJava.java,ByteBuffer buffer = ByteBuffer.allocateDirect(bytes.size());,if (ByteBuffer != null ) ByteBuffer buffer = ByteBuffer.allocateDirect(bytes.size());
ConformanceJava.java,ByteBuffer buffer = ByteBuffer.allocateDirect(bytes.size());,if (ByteBuffer != null ) ByteBuffer buffer = ByteBuffer.allocateDirect(bytes.size());
ConformanceJava.java,ExtensionRegistry extensions = ExtensionRegistry.newInstance();,if (ExtensionRegistry != null ) ExtensionRegistry extensions = ExtensionRegistry.newInstance();
ConformanceJava.java,ExtensionRegistry extensions = ExtensionRegistry.newInstance();,if (ExtensionRegistry != null ) ExtensionRegistry extensions = ExtensionRegistry.newInstance();
ConformanceJava.java,parser = parser.ignoringUnknownFields();,if (parser != null ) parser = parser.ignoringUnknownFields();
ConformanceJava.java,testMessage = builder.build();,if (builder != null ) testMessage = builder.build();
ConformanceJava.java,testMessage = builder.build();,if (builder != null ) testMessage = builder.build();
ConformanceJava.java,testMessage = builder.build();,if (builder != null ) testMessage = builder.build();
ConformanceJava.java,testMessage = builder.build();,if (builder != null ) testMessage = builder.build();
ConformanceJava.java,ByteString MessageString = testMessage.toByteString();,if (testMessage != null ) ByteString MessageString = testMessage.toByteString();
ConformanceJavaLite.java,testMessage = Conformance.TestAllTypes.parseFrom(request.getProtobufPayload());,if (Conformance != null ) testMessage = Conformance.TestAllTypes.parseFrom(request.getProtobufPayload());
AbstractMessageLite.java,final CodedInputStream input = data.newCodedInput();,if (data != null ) final CodedInputStream input = data.newCodedInput();
AbstractMessageLite.java,final CodedInputStream input = data.newCodedInput();,if (data != null ) final CodedInputStream input = data.newCodedInput();
AbstractMessageLite.java,final int result = super.read();,if (super != null ) final int result = super.read();
AbstractMessageLite.java,final int firstByte = input.read();,if (input != null ) final int firstByte = input.read();
AbstractMessageLite.java,int begin = list.size();,if (list != null ) int begin = list.size();
AbstractMessageLite.java,int begin = list.size();,if (list != null ) int begin = list.size();
AbstractParser.java,CodedInputStream input = data.newCodedInput();,if (data != null ) CodedInputStream input = data.newCodedInput();
AbstractParser.java,int firstByte = input.read();,if (input != null ) int firstByte = input.read();
ArrayDecoders.java,this.extensionRegistry = ExtensionRegistryLite.getEmptyRegistry();,if (ExtensionRegistryLite != null ) this.extensionRegistry = ExtensionRegistryLite.getEmptyRegistry();
ArrayDecoders.java,Object result = schema.newInstance();,if (schema != null ) Object result = schema.newInstance();
ArrayDecoders.java,Object result = messageSchema.newInstance();,if (messageSchema != null ) Object result = messageSchema.newInstance();
ArrayDecoders.java,unknownFields = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) unknownFields = UnknownFieldSetLite.newInstance();
ArrayDecoders.java,final UnknownFieldSetLite child = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) final UnknownFieldSetLite child = UnknownFieldSetLite.newInstance();
BinaryReader.java,buffer = bytebuf.array();,if (bytebuf != null ) buffer = bytebuf.array();
BinaryReader.java,initialPos = pos = bytebuf.arrayOffset() + bytebuf.position();,if (bytebuf != null ) initialPos = pos = bytebuf.arrayOffset() + bytebuf.position();
BinaryReader.java,limit = bytebuf.arrayOffset() + bytebuf.limit();,if (bytebuf != null ) limit = bytebuf.arrayOffset() + bytebuf.limit();
BinaryReader.java,T message = schema.newInstance();,if (schema != null ) T message = schema.newInstance();
BinaryReader.java,T message = schema.newInstance();,if (schema != null ) T message = schema.newInstance();
BinaryWriter.java,this.buffer = allocatedBuffer.array();,if (allocatedBuffer != null ) this.buffer = allocatedBuffer.array();
BinaryWriter.java,int arrayOffset = allocatedBuffer.arrayOffset();,if (allocatedBuffer != null ) int arrayOffset = allocatedBuffer.arrayOffset();
BinaryWriter.java,this.limit = arrayOffset + allocatedBuffer.limit();,if (allocatedBuffer != null ) this.limit = arrayOffset + allocatedBuffer.limit();
BinaryWriter.java,this.offset = arrayOffset + allocatedBuffer.position();,if (allocatedBuffer != null ) this.offset = arrayOffset + allocatedBuffer.position();
BinaryWriter.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
BinaryWriter.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
BinaryWriter.java,this.buffer = allocatedBuffer.array();,if (allocatedBuffer != null ) this.buffer = allocatedBuffer.array();
BinaryWriter.java,int arrayOffset = allocatedBuffer.arrayOffset();,if (allocatedBuffer != null ) int arrayOffset = allocatedBuffer.arrayOffset();
BinaryWriter.java,this.limit = arrayOffset + allocatedBuffer.limit();,if (allocatedBuffer != null ) this.limit = arrayOffset + allocatedBuffer.limit();
BinaryWriter.java,this.offset = arrayOffset + allocatedBuffer.position();,if (allocatedBuffer != null ) this.offset = arrayOffset + allocatedBuffer.position();
BinaryWriter.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
BinaryWriter.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
BinaryWriter.java,ByteBuffer nioBuffer = allocatedBuffer.nioBuffer();,if (allocatedBuffer != null ) ByteBuffer nioBuffer = allocatedBuffer.nioBuffer();
BinaryWriter.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
BinaryWriter.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
BinaryWriter.java,ByteBuffer nioBuffer = allocatedBuffer.nioBuffer();,if (allocatedBuffer != null ) ByteBuffer nioBuffer = allocatedBuffer.nioBuffer();
BinaryWriter.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
BinaryWriter.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
ByteBufferWriter.java,final int initialPos = buffer.position();,if (buffer != null ) final int initialPos = buffer.position();
ByteString.java,ByteIterator formerBytes = former.iterator();,if (former != null ) ByteIterator formerBytes = former.iterator();
ByteString.java,ByteIterator latterBytes = latter.iterator();,if (latter != null ) ByteIterator latterBytes = latter.iterator();
ByteString.java,final int offset = buffer.arrayOffset();,if (buffer != null ) final int offset = buffer.arrayOffset();
ByteString.java,result = iterator.next();,if (iterator != null ) result = iterator.next();
ByteString.java,int thatHash = otherAsLiteral.peekCachedHashCode();,if (otherAsLiteral != null ) int thatHash = otherAsLiteral.peekCachedHashCode();
CodedInputStream.java,totalSize += buf.remaining();,if (buf != null ) totalSize += buf.remaining();
CodedInputStream.java,final int b = input.read();,if (input != null ) final int b = input.read();
CodedInputStream.java,final int b = input.read();,if (input != null ) final int b = input.read();
CodedInputStream.java,final int firstByte = input.read();,if (input != null ) final int firstByte = input.read();
CodedInputStream.java,limit = address + buffer.limit();,if (buffer != null ) limit = address + buffer.limit();
CodedInputStream.java,pos = address + buffer.position();,if (buffer != null ) pos = address + buffer.position();
CodedInputStream.java,int prevPos = buffer.position();,if (buffer != null ) int prevPos = buffer.position();
CodedInputStream.java,int prevLimit = buffer.limit();,if (buffer != null ) int prevLimit = buffer.limit();
CodedInputStream.java,iterator = input.iterator();,if (input != null ) iterator = input.iterator();
CodedInputStream.java,currentByteBuffer = iterator.next();,if (iterator != null ) currentByteBuffer = iterator.next();
CodedInputStream.java,currentByteBufferPos = currentByteBuffer.position();,if (currentByteBuffer != null ) currentByteBufferPos = currentByteBuffer.position();
CodedInputStream.java,currentByteBufferLimit = currentByteBuffer.limit();,if (currentByteBuffer != null ) currentByteBufferLimit = currentByteBuffer.limit();
CodedInputStream.java,int prevPos = currentByteBuffer.position();,if (currentByteBuffer != null ) int prevPos = currentByteBuffer.position();
CodedInputStream.java,int prevLimit = currentByteBuffer.limit();,if (currentByteBuffer != null ) int prevLimit = currentByteBuffer.limit();
CodedInputStreamReader.java,tag = input.readTag();,if (input != null ) tag = input.readTag();
CodedInputStreamReader.java,T message = schema.newInstance();,if (schema != null ) T message = schema.newInstance();
CodedInputStreamReader.java,T message = schema.newInstance();,if (schema != null ) T message = schema.newInstance();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedOutputStream.java,ByteBuffer duplicated = value.duplicate();,if (value != null ) ByteBuffer duplicated = value.duplicate();
CodedOutputStream.java,final int length = value.remaining();,if (value != null ) final int length = value.remaining();
CodedOutputStream.java,this.initialPosition = byteBuffer.position();,if (byteBuffer != null ) this.initialPosition = byteBuffer.position();
CodedOutputStream.java,initialPosition = buffer.position();,if (buffer != null ) initialPosition = buffer.position();
CodedOutputStream.java,ByteBuffer duplicated = value.duplicate();,if (value != null ) ByteBuffer duplicated = value.duplicate();
CodedOutputStream.java,final int startPos = buffer.position();,if (buffer != null ) final int startPos = buffer.position();
CodedOutputStream.java,int endOfBytes = buffer.position();,if (buffer != null ) int endOfBytes = buffer.position();
CodedOutputStream.java,initialPosition = address + buffer.position();,if (buffer != null ) initialPosition = address + buffer.position();
CodedOutputStream.java,limit = address + buffer.limit();,if (buffer != null ) limit = address + buffer.limit();
CodedOutputStream.java,ByteBuffer duplicated = value.duplicate();,if (value != null ) ByteBuffer duplicated = value.duplicate();
CodedOutputStream.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
CodedOutputStream.java,ByteBuffer duplicated = value.duplicate();,if (value != null ) ByteBuffer duplicated = value.duplicate();
CodedOutputStream.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
CodedOutputStream.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
CodedOutputStream.java,ByteBuffer duplicated = value.duplicate();,if (value != null ) ByteBuffer duplicated = value.duplicate();
CodedOutputStream.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
ExtensionRegistryLite.java,this.extensionsByNumber = Collections.emptyMap();,if (Collections != null ) this.extensionsByNumber = Collections.emptyMap();
ExtensionRegistryLite.java,this.extensionsByNumber = Collections.emptyMap();,if (Collections != null ) this.extensionsByNumber = Collections.emptyMap();
ExtensionSchemaLite.java,int fieldNumber = extension.getNumber();,if (extension != null ) int fieldNumber = extension.getNumber();
ExtensionSchemaLite.java,value = reader.readDouble();,if (reader != null ) value = reader.readDouble();
ExtensionSchemaLite.java,value = reader.readFloat();,if (reader != null ) value = reader.readFloat();
ExtensionSchemaLite.java,value = reader.readBool();,if (reader != null ) value = reader.readBool();
ExtensionSchemaLite.java,value = reader.readBytes();,if (reader != null ) value = reader.readBytes();
ExtensionSchemaLite.java,value = reader.readString();,if (reader != null ) value = reader.readString();
FieldSet.java,FieldSet<T> clone = FieldSet.newFieldSet();,if (FieldSet != null ) FieldSet<T> clone = FieldSet.newFieldSet();
FieldSet.java,T key = entry.getKey();,if (entry != null ) T key = entry.getKey();
FieldSet.java,Object value = entry.getValue();,if (entry != null ) Object value = entry.getValue();
FieldSet.java,final T descriptor = entry.getKey();,if (entry != null ) final T descriptor = entry.getKey();
FieldSet.java,Object value = entry.getValue();,if (entry != null ) Object value = entry.getValue();
FieldSet.java,final T descriptor = entry.getKey();,if (entry != null ) final T descriptor = entry.getKey();
FieldSet.java,Object otherValue = entry.getValue();,if (entry != null ) Object otherValue = entry.getValue();
FieldSet.java,final T descriptor = entry.getKey();,if (entry != null ) final T descriptor = entry.getKey();
FieldSet.java,Object value = entry.getValue();,if (entry != null ) Object value = entry.getValue();
FieldSet.java,WireFormat.FieldType type = descriptor.getLiteType();,if (descriptor != null ) WireFormat.FieldType type = descriptor.getLiteType();
FieldSet.java,int number = descriptor.getNumber();,if (descriptor != null ) int number = descriptor.getNumber();
FieldSet.java,"size += computeFieldSize(entry.getKey(), entry.getValue());","if (entry != null ) size += computeFieldSize(entry.getKey(), entry.getValue());"
FieldSet.java,"size += computeFieldSize(entry.getKey(), entry.getValue());","if (entry != null ) size += computeFieldSize(entry.getKey(), entry.getValue());"
FieldSet.java,final T descriptor = entry.getKey();,if (entry != null ) final T descriptor = entry.getKey();
FieldSet.java,Object value = entry.getValue();,if (entry != null ) Object value = entry.getValue();
FieldSet.java,WireFormat.FieldType type = descriptor.getLiteType();,if (descriptor != null ) WireFormat.FieldType type = descriptor.getLiteType();
FieldSet.java,int number = descriptor.getNumber();,if (descriptor != null ) int number = descriptor.getNumber();
FieldSet.java,final T descriptor = entry.getKey();,if (entry != null ) final T descriptor = entry.getKey();
FieldSet.java,Object otherValue = entry.getValue();,if (entry != null ) Object otherValue = entry.getValue();
FieldType.java,elementType = javaType.getBoxedType();,if (javaType != null ) elementType = javaType.getBoxedType();
FieldType.java,elementType = javaType.getBoxedType();,if (javaType != null ) elementType = javaType.getBoxedType();
FieldType.java,Type genericType = field.getGenericType();,if (field != null ) Type genericType = field.getGenericType();
FieldType.java,Type[] genericInterfaces = clazz.getGenericInterfaces();,if (clazz != null ) Type[] genericInterfaces = clazz.getGenericInterfaces();
FieldType.java,Type type = clazz.getGenericSuperclass();,if (clazz != null ) Type type = clazz.getGenericSuperclass();
FieldType.java,Type[] superArgs = parameterizedType.getActualTypeArguments();,if (parameterizedType != null ) Type[] superArgs = parameterizedType.getActualTypeArguments();
FieldType.java,clazz = clazz.getSuperclass();,if (clazz != null ) clazz = clazz.getSuperclass();
GeneratedMessageLite.java,protected UnknownFieldSetLite unknownFields = UnknownFieldSetLite.getDefaultInstance();,if (UnknownFieldSetLite != null ) protected UnknownFieldSetLite unknownFields = UnknownFieldSetLite.getDefaultInstance();
GeneratedMessageLite.java,unknownFields = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) unknownFields = UnknownFieldSetLite.newInstance();
GeneratedMessageLite.java,extensions = extensions.clone();,if (extensions != null ) extensions = extensions.clone();
GeneratedMessageLite.java,int rawValue = input.readEnum();,if (input != null ) int rawValue = input.readEnum();
GeneratedMessageLite.java,subBuilder = existingValue.toBuilder();,if (existingValue != null ) subBuilder = existingValue.toBuilder();
GeneratedMessageLite.java,subBuilder = extension.getMessageDefaultInstance().newBuilderForType();,if (extension != null ) subBuilder = extension.getMessageDefaultInstance().newBuilderForType();
GeneratedMessageLite.java,value = subBuilder.build();,if (subBuilder != null ) value = subBuilder.build();
GeneratedMessageLite.java,int rawValue = input.readEnum();,if (input != null ) int rawValue = input.readEnum();
GeneratedMessageLite.java,final int tag = input.readTag();,if (input != null ) final int tag = input.readTag();
GeneratedMessageLite.java,rawBytes = input.readBytes();,if (input != null ) rawBytes = input.readBytes();
GeneratedMessageLite.java,subBuilder = existingValue.toBuilder();,if (existingValue != null ) subBuilder = existingValue.toBuilder();
GeneratedMessageLite.java,subBuilder = extension.getMessageDefaultInstance().newBuilderForType();,if (extension != null ) subBuilder = extension.getMessageDefaultInstance().newBuilderForType();
GeneratedMessageLite.java,MessageLite value = subBuilder.build();,if (subBuilder != null ) MessageLite value = subBuilder.build();
GeneratedMessageLite.java,extensions = extensions.clone();,if (extensions != null ) extensions = extensions.clone();
GeneratedMessageLite.java,next = iter.next();,if (iter != null ) next = iter.next();
GeneratedMessageLite.java,ExtensionDescriptor extension = next.getKey();,if (next != null ) ExtensionDescriptor extension = next.getKey();
GeneratedMessageLite.java,next = iter.next();,if (iter != null ) next = iter.next();
GeneratedMessageLite.java,instance.extensions = instance.extensions.clone();,if (instance != null ) instance.extensions = instance.extensions.clone();
GeneratedMessageLite.java,extensions = extensions.clone();,if (extensions != null ) extensions = extensions.clone();
GeneratedMessageLite.java,Type emptyList = (Type) Collections.emptyList();,if (Collections != null ) Type emptyList = (Type) Collections.emptyList();
GeneratedMessageLite.java,messageClass = regularForm.getClass();,if (regularForm != null ) messageClass = regularForm.getClass();
GeneratedMessageLite.java,messageClassName = messageClass.getName();,if (messageClass != null ) messageClassName = messageClass.getName();
GeneratedMessageLite.java,asBytes = regularForm.toByteArray();,if (regularForm != null ) asBytes = regularForm.toByteArray();
GeneratedMessageLite.java,int size = list.size();,if (list != null ) int size = list.size();
GeneratedMessageLite.java,int size = list.size();,if (list != null ) int size = list.size();
GeneratedMessageLite.java,int size = list.size();,if (list != null ) int size = list.size();
GeneratedMessageLite.java,int size = list.size();,if (list != null ) int size = list.size();
GeneratedMessageLite.java,int size = list.size();,if (list != null ) int size = list.size();
GeneratedMessageLite.java,int size = list.size();,if (list != null ) int size = list.size();
GeneratedMessageLite.java,CodedInputStream input = data.newCodedInput();,if (data != null ) CodedInputStream input = data.newCodedInput();
GeneratedMessageLite.java,int firstByte = input.read();,if (input != null ) int firstByte = input.read();
Internal.java,ByteBuffer temp = source.duplicate();,if (source != null ) ByteBuffer temp = source.duplicate();
Internal.java,ByteBuffer result = ByteBuffer.allocate(temp.capacity());,if (ByteBuffer != null ) ByteBuffer result = ByteBuffer.allocate(temp.capacity());
Internal.java,final ByteBuffer duplicated = bytes.duplicate();,if (bytes != null ) final ByteBuffer duplicated = bytes.duplicate();
Internal.java,int h = bytes.capacity();,if (bytes != null ) int h = bytes.capacity();
IterableByteBufferInputStream.java,iterator = data.iterator();,if (data != null ) iterator = data.iterator();
IterableByteBufferInputStream.java,currentByteBuffer = iterator.next();,if (iterator != null ) currentByteBuffer = iterator.next();
IterableByteBufferInputStream.java,currentByteBufferPos = currentByteBuffer.position();,if (currentByteBuffer != null ) currentByteBufferPos = currentByteBuffer.position();
IterableByteBufferInputStream.java,currentArray = currentByteBuffer.array();,if (currentByteBuffer != null ) currentArray = currentByteBuffer.array();
IterableByteBufferInputStream.java,currentArrayOffset = currentByteBuffer.arrayOffset();,if (currentByteBuffer != null ) currentArrayOffset = currentByteBuffer.arrayOffset();
IterableByteBufferInputStream.java,int prevPos = currentByteBuffer.position();,if (currentByteBuffer != null ) int prevPos = currentByteBuffer.position();
LazyField.java,LazyField field = entry.getValue();,if (entry != null ) LazyField field = entry.getValue();
LazyFieldLite.java,memoizedBytes = value.toByteString();,if (value != null ) memoizedBytes = value.toByteString();
LazyStringArrayList.java,list = new ArrayList<Object>(from.size());,if (ArrayList<Object>(from != null ) list = new ArrayList<Object>(from.size());
ListFieldSchema.java,int size = mine.size();,if (mine != null ) int size = mine.size();
ListFieldSchema.java,int otherSize = other.size();,if (other != null ) int otherSize = other.size();
ListFieldSchema.java,int size = list.size();,if (list != null ) int size = list.size();
ListFieldSchema.java,int size = mine.size();,if (mine != null ) int size = mine.size();
ListFieldSchema.java,int otherSize = other.size();,if (other != null ) int otherSize = other.size();
MapEntryLite.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
MapEntryLite.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
MapFieldSchemaLite.java,mine = mine.mutableCopy();,if (mine != null ) mine = mine.mutableCopy();
MessageSchema.java,String info = messageInfo.getStringInfo();,if (messageInfo != null ) String info = messageInfo.getStringInfo();
MessageSchema.java,final int length = info.length();,if (info != null ) final int length = info.length();
MessageSchema.java,FieldInfo[] fis = messageInfo.getFields();,if (messageInfo != null ) FieldInfo[] fis = messageInfo.getFields();
MessageSchema.java,int[] checkInitialized = messageInfo.getCheckInitialized();,if (messageInfo != null ) int[] checkInitialized = messageInfo.getCheckInitialized();
MessageSchema.java,final int fieldNumber = fi.getFieldNumber();,if (fi != null ) final int fieldNumber = fi.getFieldNumber();
MessageSchema.java,OneofInfo oneof = fi.getOneof();,if (fi != null ) OneofInfo oneof = fi.getOneof();
MessageSchema.java,FieldType type = fi.getType();,if (fi != null ) FieldType type = fi.getType();
MessageSchema.java,typeId = type.id();,if (type != null ) typeId = type.id();
MessageSchema.java,Field presenceField = fi.getPresenceField();,if (fi != null ) Field presenceField = fi.getPresenceField();
MessageSchema.java,presenceMaskShift = Integer.numberOfTrailingZeros(fi.getPresenceMask());,if (Integer != null ) presenceMaskShift = Integer.numberOfTrailingZeros(fi.getPresenceMask());
MessageSchema.java,buffer[bufferIndex] = fi.getFieldNumber();,if (fi != null ) buffer[bufferIndex] = fi.getFieldNumber();
MessageSchema.java,Object messageFieldClass = fi.getMessageFieldClass();,if (fi != null ) Object messageFieldClass = fi.getMessageFieldClass();
MessageSchema.java,protoHash = submessage.hashCode();,if (submessage != null ) protoHash = submessage.hashCode();
MessageSchema.java,protoHash = submessage.hashCode();,if (submessage != null ) protoHash = submessage.hashCode();
MessageSchema.java,size += extensionSchema.getExtensions(message).getSerializedSize();,if (extensionSchema != null ) size += extensionSchema.getExtensions(message).getSerializedSize();
MessageSchema.java,extensionIterator = extensions.iterator();,if (extensions != null ) extensionIterator = extensions.iterator();
MessageSchema.java,nextExtension = extensionIterator.next();,if (extensionIterator != null ) nextExtension = extensionIterator.next();
MessageSchema.java,extensionIterator = extensions.iterator();,if (extensions != null ) extensionIterator = extensions.iterator();
MessageSchema.java,nextExtension = extensionIterator.next();,if (extensionIterator != null ) nextExtension = extensionIterator.next();
MessageSchema.java,extensionIterator = extensions.descendingIterator();,if (extensions != null ) extensionIterator = extensions.descendingIterator();
MessageSchema.java,nextExtension = extensionIterator.next();,if (extensionIterator != null ) nextExtension = extensionIterator.next();
MessageSchema.java,final int number = reader.getFieldNumber();,if (reader != null ) final int number = reader.getFieldNumber();
MessageSchema.java,int enumValue = reader.readEnum();,if (reader != null ) int enumValue = reader.readEnum();
MessageSchema.java,int enumValue = reader.readEnum();,if (reader != null ) int enumValue = reader.readEnum();
MessageSchema.java,unknownFields = unknownFieldSchema.newBuilder();,if (unknownFieldSchema != null ) unknownFields = unknownFieldSchema.newBuilder();
MessageSchema.java,unknownFields = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) unknownFields = UnknownFieldSetLite.newInstance();
MessageSchema.java,final int size = list.size();,if (list != null ) final int size = list.size();
MessageSchema.java,final int size = list.size();,if (list != null ) final int size = list.size();
MessageSchema.java,final int size = list.size();,if (list != null ) final int size = list.size();
MessageSchema.java,unknownFields = unknownFieldSchema.newBuilder();,if (unknownFieldSchema != null ) unknownFields = unknownFieldSchema.newBuilder();
MessageSchema.java,CodedOutputStream codedOutput = codedBuilder.getCodedOutput();,if (codedBuilder != null ) CodedOutputStream codedOutput = codedBuilder.getCodedOutput();
MessageSetSchema.java,int hashCode = unknownFieldSchema.getFromMessage(message).hashCode();,if (unknownFieldSchema != null ) int hashCode = unknownFieldSchema.getFromMessage(message).hashCode();
MessageSetSchema.java,unknownFields = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) unknownFields = UnknownFieldSetLite.newInstance();
MessageSetSchema.java,final int number = reader.getFieldNumber();,if (reader != null ) final int number = reader.getFieldNumber();
MessageSetSchema.java,int startTag = reader.getTag();,if (reader != null ) int startTag = reader.getTag();
MessageSetSchema.java,final int number = reader.getFieldNumber();,if (reader != null ) final int number = reader.getFieldNumber();
MessageSetSchema.java,final int tag = reader.getTag();,if (reader != null ) final int tag = reader.getTag();
MessageSetSchema.java,rawBytes = reader.readBytes();,if (reader != null ) rawBytes = reader.readBytes();
MessageSetSchema.java,size += extensionSchema.getExtensions(message).getMessageSetSerializedSize();,if (extensionSchema != null ) size += extensionSchema.getExtensions(message).getMessageSetSerializedSize();
NioByteString.java,ByteBuffer slice = buffer.slice();,if (buffer != null ) ByteBuffer slice = buffer.slice();
NioByteString.java,bytes = buffer.array();,if (buffer != null ) bytes = buffer.array();
NioByteString.java,offset = buffer.arrayOffset() + buffer.position();,if (buffer != null ) offset = buffer.arrayOffset() + buffer.position();
NioByteString.java,length = buffer.remaining();,if (buffer != null ) length = buffer.remaining();
NioByteString.java,"len = Math.min(len, buf.remaining());","if (buf != null ) len = Math.min(len, buf.remaining());"
NioByteString.java,ByteBuffer slice = buffer.slice();,if (buffer != null ) ByteBuffer slice = buffer.slice();
ProtobufLists.java,int size = list.size();,if (list != null ) int size = list.size();
RawMessageInfo.java,char[] infoChars = info.toCharArray();,if (info != null ) char[] infoChars = info.toCharArray();
RopeByteString.java,leftLength = left.size();,if (left != null ) leftLength = left.size();
RopeByteString.java,totalLength = leftLength + right.size();,if (right != null ) totalLength = leftLength + right.size();
RopeByteString.java,final int newLength = left.size() + right.size();,if (right != null ) final int newLength = left.size() + right.size();
RopeByteString.java,int leftSize = left.size();,if (left != null ) int leftSize = left.size();
RopeByteString.java,int rightSize = right.size();,if (right != null ) int rightSize = right.size();
RopeByteString.java,byte b = current.nextByte();,if (current != null ) byte b = current.nextByte();
RopeByteString.java,LeafByteString byteString = pieces.next();,if (pieces != null ) LeafByteString byteString = pieces.next();
RopeByteString.java,int thatHash = otherByteString.peekCachedHashCode();,if (otherByteString != null ) int thatHash = otherByteString.peekCachedHashCode();
RopeByteString.java,LeafByteString thisString = thisIter.next();,if (thisIter != null ) LeafByteString thisString = thisIter.next();
RopeByteString.java,LeafByteString thatString = thatIter.next();,if (thatIter != null ) LeafByteString thatString = thatIter.next();
RopeByteString.java,thisString = thisIter.next();,if (thisIter != null ) thisString = thisIter.next();
RopeByteString.java,thatString = thatIter.next();,if (thatIter != null ) thatString = thatIter.next();
RopeByteString.java,ByteString partialString = prefixesStack.pop();,if (prefixesStack != null ) ByteString partialString = prefixesStack.pop();
RopeByteString.java,ByteString newLeft = prefixesStack.pop();,if (prefixesStack != null ) ByteString newLeft = prefixesStack.pop();
RopeByteString.java,int depthBin = getDepthBinForLength(byteString.size());,if (getDepthBinForLength(byteString != null ) int depthBin = getDepthBinForLength(byteString.size());
RopeByteString.java,ByteString newTree = prefixesStack.pop();,if (prefixesStack != null ) ByteString newTree = prefixesStack.pop();
RopeByteString.java,ByteString left = prefixesStack.pop();,if (prefixesStack != null ) ByteString left = prefixesStack.pop();
RopeByteString.java,depthBin = getDepthBinForLength(newTree.size());,if (getDepthBinForLength(newTree != null ) depthBin = getDepthBinForLength(newTree.size());
RopeByteString.java,ByteString left = prefixesStack.pop();,if (prefixesStack != null ) ByteString left = prefixesStack.pop();
RopeByteString.java,breadCrumbs = new ArrayDeque<>(rbs.getTreeDepth());,if (ArrayDeque<>(rbs != null ) breadCrumbs = new ArrayDeque<>(rbs.getTreeDepth());
RopeByteString.java,currentPiece = pieceIterator.next();,if (pieceIterator != null ) currentPiece = pieceIterator.next();
RopeByteString.java,currentPieceSize = currentPiece.size();,if (currentPiece != null ) currentPieceSize = currentPiece.size();
RopeByteString.java,currentPiece = pieceIterator.next();,if (pieceIterator != null ) currentPiece = pieceIterator.next();
RopeByteString.java,currentPieceSize = currentPiece.size();,if (currentPiece != null ) currentPieceSize = currentPiece.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,Field[] fields = holder.getDeclaredFields();,if (holder != null ) Field[] fields = holder.getDeclaredFields();
SchemaUtil.java,int size = enumList.size();,if (enumList != null ) int size = enumList.size();
SchemaUtil.java,int enumValue = it.next();,if (it != null ) int enumValue = it.next();
SchemaUtil.java,int size = enumList.size();,if (enumList != null ) int size = enumList.size();
SchemaUtil.java,int enumValue = it.next();,if (it != null ) int enumValue = it.next();
SchemaUtil.java,unknownFields = unknownFieldSchema.newBuilder();,if (unknownFieldSchema != null ) unknownFields = unknownFieldSchema.newBuilder();
SmallSortedMap.java,final List value = (List) entry.getValue();,if (entry != null ) final List value = (List) entry.getValue();
SmallSortedMap.java,final List value = (List) entry.getValue();,if (entry != null ) final List value = (List) entry.getValue();
SmallSortedMap.java,this.entryList = Collections.emptyList();,if (Collections != null ) this.entryList = Collections.emptyList();
SmallSortedMap.java,this.overflowEntries = Collections.emptyMap();,if (Collections != null ) this.overflowEntries = Collections.emptyMap();
SmallSortedMap.java,this.overflowEntriesDescending = Collections.emptyMap();,if (Collections != null ) this.overflowEntriesDescending = Collections.emptyMap();
SmallSortedMap.java,final V removed = entryList.remove(index).getValue();,if (entryList != null ) final V removed = entryList.remove(index).getValue();
SmallSortedMap.java,final V existing = get(entry.getKey());,if (get(entry != null ) final V existing = get(entry.getKey());
SmallSortedMap.java,final V value = entry.getValue();,if (entry != null ) final V value = entry.getValue();
SmallSortedMap.java,lazyOverflowIterator = overflowEntries.entrySet().iterator();,if (overflowEntries != null ) lazyOverflowIterator = overflowEntries.entrySet().iterator();
SmallSortedMap.java,private int pos = entryList.size();,if (entryList != null ) private int pos = entryList.size();
SmallSortedMap.java,lazyOverflowIterator = overflowEntriesDescending.entrySet().iterator();,if (overflowEntriesDescending != null ) lazyOverflowIterator = overflowEntriesDescending.entrySet().iterator();
SmallSortedMap.java,h += entryList.get(i).hashCode();,if (entryList != null ) h += entryList.get(i).hashCode();
SmallSortedMap.java,h += overflowEntries.hashCode();,if (overflowEntries != null ) h += overflowEntries.hashCode();
TextFormatEscaper.java,final StringBuilder builder = new StringBuilder(input.size());,if (StringBuilder(input != null ) final StringBuilder builder = new StringBuilder(input.size());
UnknownFieldSchema.java,int tag = reader.getTag();,if (reader != null ) int tag = reader.getTag();
UnknownFieldSetLite.java,final int tag = input.readTag();,if (input != null ) final int tag = input.readTag();
UnknownFieldSetLiteSchema.java,unknownFields = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) unknownFields = UnknownFieldSetLite.newInstance();
UnmodifiableLazyStringList.java,Iterator<String> iter = list.iterator();,if (list != null ) Iterator<String> iter = list.iterator();
Utf8.java,final int offset = buffer.arrayOffset();,if (buffer != null ) final int offset = buffer.arrayOffset();
Utf8.java,final int offset = buffer.arrayOffset();,if (buffer != null ) final int offset = buffer.arrayOffset();
Utf8.java,final int offset = out.arrayOffset();,if (out != null ) final int offset = out.arrayOffset();
Utf8.java,final int inLength = in.length();,if (in != null ) final int inLength = in.length();
Utf8.java,int outIx = out.position();,if (out != null ) int outIx = out.position();
Utf8.java,final int inLimit = in.length();,if (in != null ) final int inLimit = in.length();
Utf8.java,long outIx = address + out.position();,if (out != null ) long outIx = address + out.position();
Utf8.java,final long outLimit = address + out.limit();,if (out != null ) final long outLimit = address + out.limit();
Utf8.java,final int inLimit = in.length();,if (in != null ) final int inLimit = in.length();
TestUtil.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TestUtil.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TestUtil.java,TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();,if (TestAllExtensions != null ) TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();
TestUtil.java,TestPackedTypes.Builder builder = TestPackedTypes.newBuilder();,if (TestPackedTypes != null ) TestPackedTypes.Builder builder = TestPackedTypes.newBuilder();
TestUtil.java,TestUnpackedTypes.Builder builder = TestUnpackedTypes.newBuilder();,if (TestUnpackedTypes != null ) TestUnpackedTypes.Builder builder = TestUnpackedTypes.newBuilder();
TestUtil.java,TestPackedExtensions.Builder builder = TestPackedExtensions.newBuilder();,if (TestPackedExtensions != null ) TestPackedExtensions.Builder builder = TestPackedExtensions.newBuilder();
TestUtil.java,ExtensionRegistryLite registry = ExtensionRegistryLite.newInstance();,if (ExtensionRegistryLite != null ) ExtensionRegistryLite registry = ExtensionRegistryLite.newInstance();
TestUtilLite.java,TestAllTypesLite.Builder builder = TestAllTypesLite.newBuilder();,if (TestAllTypesLite != null ) TestAllTypesLite.Builder builder = TestAllTypesLite.newBuilder();
TestUtilLite.java,TestAllExtensionsLite.Builder builder = TestAllExtensionsLite.newBuilder();,if (TestAllExtensionsLite != null ) TestAllExtensionsLite.Builder builder = TestAllExtensionsLite.newBuilder();
TestUtilLite.java,TestPackedExtensionsLite.Builder builder = TestPackedExtensionsLite.newBuilder();,if (TestPackedExtensionsLite != null ) TestPackedExtensionsLite.Builder builder = TestPackedExtensionsLite.newBuilder();
TestUtilLite.java,ExtensionRegistryLite registry = ExtensionRegistryLite.newInstance();,if (ExtensionRegistryLite != null ) ExtensionRegistryLite registry = ExtensionRegistryLite.newInstance();
AbstractMessageLite.java,final CodedInputStream input = data.newCodedInput();,if (data != null ) final CodedInputStream input = data.newCodedInput();
AbstractMessageLite.java,final CodedInputStream input = data.newCodedInput();,if (data != null ) final CodedInputStream input = data.newCodedInput();
AbstractMessageLite.java,final int result = super.read();,if (super != null ) final int result = super.read();
AbstractMessageLite.java,final int firstByte = input.read();,if (input != null ) final int firstByte = input.read();
AbstractMessageLite.java,int begin = list.size();,if (list != null ) int begin = list.size();
AbstractMessageLite.java,int begin = list.size();,if (list != null ) int begin = list.size();
AbstractParser.java,CodedInputStream input = data.newCodedInput();,if (data != null ) CodedInputStream input = data.newCodedInput();
AbstractParser.java,int firstByte = input.read();,if (input != null ) int firstByte = input.read();
ArrayDecoders.java,this.extensionRegistry = ExtensionRegistryLite.getEmptyRegistry();,if (ExtensionRegistryLite != null ) this.extensionRegistry = ExtensionRegistryLite.getEmptyRegistry();
ArrayDecoders.java,Object result = schema.newInstance();,if (schema != null ) Object result = schema.newInstance();
ArrayDecoders.java,Object result = messageSchema.newInstance();,if (messageSchema != null ) Object result = messageSchema.newInstance();
ArrayDecoders.java,unknownFields = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) unknownFields = UnknownFieldSetLite.newInstance();
ArrayDecoders.java,final UnknownFieldSetLite child = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) final UnknownFieldSetLite child = UnknownFieldSetLite.newInstance();
BinaryReader.java,buffer = bytebuf.array();,if (bytebuf != null ) buffer = bytebuf.array();
BinaryReader.java,initialPos = pos = bytebuf.arrayOffset() + bytebuf.position();,if (bytebuf != null ) initialPos = pos = bytebuf.arrayOffset() + bytebuf.position();
BinaryReader.java,limit = bytebuf.arrayOffset() + bytebuf.limit();,if (bytebuf != null ) limit = bytebuf.arrayOffset() + bytebuf.limit();
BinaryReader.java,T message = schema.newInstance();,if (schema != null ) T message = schema.newInstance();
BinaryReader.java,T message = schema.newInstance();,if (schema != null ) T message = schema.newInstance();
BinaryWriter.java,this.buffer = allocatedBuffer.array();,if (allocatedBuffer != null ) this.buffer = allocatedBuffer.array();
BinaryWriter.java,int arrayOffset = allocatedBuffer.arrayOffset();,if (allocatedBuffer != null ) int arrayOffset = allocatedBuffer.arrayOffset();
BinaryWriter.java,this.limit = arrayOffset + allocatedBuffer.limit();,if (allocatedBuffer != null ) this.limit = arrayOffset + allocatedBuffer.limit();
BinaryWriter.java,this.offset = arrayOffset + allocatedBuffer.position();,if (allocatedBuffer != null ) this.offset = arrayOffset + allocatedBuffer.position();
BinaryWriter.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
BinaryWriter.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
BinaryWriter.java,this.buffer = allocatedBuffer.array();,if (allocatedBuffer != null ) this.buffer = allocatedBuffer.array();
BinaryWriter.java,int arrayOffset = allocatedBuffer.arrayOffset();,if (allocatedBuffer != null ) int arrayOffset = allocatedBuffer.arrayOffset();
BinaryWriter.java,this.limit = arrayOffset + allocatedBuffer.limit();,if (allocatedBuffer != null ) this.limit = arrayOffset + allocatedBuffer.limit();
BinaryWriter.java,this.offset = arrayOffset + allocatedBuffer.position();,if (allocatedBuffer != null ) this.offset = arrayOffset + allocatedBuffer.position();
BinaryWriter.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
BinaryWriter.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
BinaryWriter.java,ByteBuffer nioBuffer = allocatedBuffer.nioBuffer();,if (allocatedBuffer != null ) ByteBuffer nioBuffer = allocatedBuffer.nioBuffer();
BinaryWriter.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
BinaryWriter.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
BinaryWriter.java,ByteBuffer nioBuffer = allocatedBuffer.nioBuffer();,if (allocatedBuffer != null ) ByteBuffer nioBuffer = allocatedBuffer.nioBuffer();
BinaryWriter.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
BinaryWriter.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
ByteBufferWriter.java,final int initialPos = buffer.position();,if (buffer != null ) final int initialPos = buffer.position();
ByteString.java,ByteIterator formerBytes = former.iterator();,if (former != null ) ByteIterator formerBytes = former.iterator();
ByteString.java,ByteIterator latterBytes = latter.iterator();,if (latter != null ) ByteIterator latterBytes = latter.iterator();
ByteString.java,final int offset = buffer.arrayOffset();,if (buffer != null ) final int offset = buffer.arrayOffset();
ByteString.java,result = iterator.next();,if (iterator != null ) result = iterator.next();
ByteString.java,int thatHash = otherAsLiteral.peekCachedHashCode();,if (otherAsLiteral != null ) int thatHash = otherAsLiteral.peekCachedHashCode();
CodedInputStream.java,totalSize += buf.remaining();,if (buf != null ) totalSize += buf.remaining();
CodedInputStream.java,final int b = input.read();,if (input != null ) final int b = input.read();
CodedInputStream.java,final int b = input.read();,if (input != null ) final int b = input.read();
CodedInputStream.java,final int firstByte = input.read();,if (input != null ) final int firstByte = input.read();
CodedInputStream.java,limit = address + buffer.limit();,if (buffer != null ) limit = address + buffer.limit();
CodedInputStream.java,pos = address + buffer.position();,if (buffer != null ) pos = address + buffer.position();
CodedInputStream.java,int prevPos = buffer.position();,if (buffer != null ) int prevPos = buffer.position();
CodedInputStream.java,int prevLimit = buffer.limit();,if (buffer != null ) int prevLimit = buffer.limit();
CodedInputStream.java,iterator = input.iterator();,if (input != null ) iterator = input.iterator();
CodedInputStream.java,currentByteBuffer = iterator.next();,if (iterator != null ) currentByteBuffer = iterator.next();
CodedInputStream.java,currentByteBufferPos = currentByteBuffer.position();,if (currentByteBuffer != null ) currentByteBufferPos = currentByteBuffer.position();
CodedInputStream.java,currentByteBufferLimit = currentByteBuffer.limit();,if (currentByteBuffer != null ) currentByteBufferLimit = currentByteBuffer.limit();
CodedInputStream.java,int prevPos = currentByteBuffer.position();,if (currentByteBuffer != null ) int prevPos = currentByteBuffer.position();
CodedInputStream.java,int prevLimit = currentByteBuffer.limit();,if (currentByteBuffer != null ) int prevLimit = currentByteBuffer.limit();
CodedInputStreamReader.java,tag = input.readTag();,if (input != null ) tag = input.readTag();
CodedInputStreamReader.java,T message = schema.newInstance();,if (schema != null ) T message = schema.newInstance();
CodedInputStreamReader.java,T message = schema.newInstance();,if (schema != null ) T message = schema.newInstance();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedOutputStream.java,ByteBuffer duplicated = value.duplicate();,if (value != null ) ByteBuffer duplicated = value.duplicate();
CodedOutputStream.java,final int length = value.remaining();,if (value != null ) final int length = value.remaining();
CodedOutputStream.java,this.initialPosition = byteBuffer.position();,if (byteBuffer != null ) this.initialPosition = byteBuffer.position();
CodedOutputStream.java,initialPosition = buffer.position();,if (buffer != null ) initialPosition = buffer.position();
CodedOutputStream.java,ByteBuffer duplicated = value.duplicate();,if (value != null ) ByteBuffer duplicated = value.duplicate();
CodedOutputStream.java,final int startPos = buffer.position();,if (buffer != null ) final int startPos = buffer.position();
CodedOutputStream.java,int endOfBytes = buffer.position();,if (buffer != null ) int endOfBytes = buffer.position();
CodedOutputStream.java,initialPosition = address + buffer.position();,if (buffer != null ) initialPosition = address + buffer.position();
CodedOutputStream.java,limit = address + buffer.limit();,if (buffer != null ) limit = address + buffer.limit();
CodedOutputStream.java,ByteBuffer duplicated = value.duplicate();,if (value != null ) ByteBuffer duplicated = value.duplicate();
CodedOutputStream.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
CodedOutputStream.java,ByteBuffer duplicated = value.duplicate();,if (value != null ) ByteBuffer duplicated = value.duplicate();
CodedOutputStream.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
CodedOutputStream.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
CodedOutputStream.java,ByteBuffer duplicated = value.duplicate();,if (value != null ) ByteBuffer duplicated = value.duplicate();
CodedOutputStream.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
ExtensionRegistryLite.java,this.extensionsByNumber = Collections.emptyMap();,if (Collections != null ) this.extensionsByNumber = Collections.emptyMap();
ExtensionRegistryLite.java,this.extensionsByNumber = Collections.emptyMap();,if (Collections != null ) this.extensionsByNumber = Collections.emptyMap();
ExtensionSchemaLite.java,int fieldNumber = extension.getNumber();,if (extension != null ) int fieldNumber = extension.getNumber();
ExtensionSchemaLite.java,value = reader.readDouble();,if (reader != null ) value = reader.readDouble();
ExtensionSchemaLite.java,value = reader.readFloat();,if (reader != null ) value = reader.readFloat();
ExtensionSchemaLite.java,value = reader.readBool();,if (reader != null ) value = reader.readBool();
ExtensionSchemaLite.java,value = reader.readBytes();,if (reader != null ) value = reader.readBytes();
ExtensionSchemaLite.java,value = reader.readString();,if (reader != null ) value = reader.readString();
FieldSet.java,FieldSet<T> clone = FieldSet.newFieldSet();,if (FieldSet != null ) FieldSet<T> clone = FieldSet.newFieldSet();
FieldSet.java,T key = entry.getKey();,if (entry != null ) T key = entry.getKey();
FieldSet.java,Object value = entry.getValue();,if (entry != null ) Object value = entry.getValue();
FieldSet.java,final T descriptor = entry.getKey();,if (entry != null ) final T descriptor = entry.getKey();
FieldSet.java,Object value = entry.getValue();,if (entry != null ) Object value = entry.getValue();
FieldSet.java,final T descriptor = entry.getKey();,if (entry != null ) final T descriptor = entry.getKey();
FieldSet.java,Object otherValue = entry.getValue();,if (entry != null ) Object otherValue = entry.getValue();
FieldSet.java,final T descriptor = entry.getKey();,if (entry != null ) final T descriptor = entry.getKey();
FieldSet.java,Object value = entry.getValue();,if (entry != null ) Object value = entry.getValue();
FieldSet.java,WireFormat.FieldType type = descriptor.getLiteType();,if (descriptor != null ) WireFormat.FieldType type = descriptor.getLiteType();
FieldSet.java,int number = descriptor.getNumber();,if (descriptor != null ) int number = descriptor.getNumber();
FieldSet.java,"size += computeFieldSize(entry.getKey(), entry.getValue());","if (entry != null ) size += computeFieldSize(entry.getKey(), entry.getValue());"
FieldSet.java,"size += computeFieldSize(entry.getKey(), entry.getValue());","if (entry != null ) size += computeFieldSize(entry.getKey(), entry.getValue());"
FieldSet.java,final T descriptor = entry.getKey();,if (entry != null ) final T descriptor = entry.getKey();
FieldSet.java,Object value = entry.getValue();,if (entry != null ) Object value = entry.getValue();
FieldSet.java,WireFormat.FieldType type = descriptor.getLiteType();,if (descriptor != null ) WireFormat.FieldType type = descriptor.getLiteType();
FieldSet.java,int number = descriptor.getNumber();,if (descriptor != null ) int number = descriptor.getNumber();
FieldSet.java,final T descriptor = entry.getKey();,if (entry != null ) final T descriptor = entry.getKey();
FieldSet.java,Object otherValue = entry.getValue();,if (entry != null ) Object otherValue = entry.getValue();
FieldType.java,elementType = javaType.getBoxedType();,if (javaType != null ) elementType = javaType.getBoxedType();
FieldType.java,elementType = javaType.getBoxedType();,if (javaType != null ) elementType = javaType.getBoxedType();
FieldType.java,Type genericType = field.getGenericType();,if (field != null ) Type genericType = field.getGenericType();
FieldType.java,Type[] genericInterfaces = clazz.getGenericInterfaces();,if (clazz != null ) Type[] genericInterfaces = clazz.getGenericInterfaces();
FieldType.java,Type type = clazz.getGenericSuperclass();,if (clazz != null ) Type type = clazz.getGenericSuperclass();
FieldType.java,Type[] superArgs = parameterizedType.getActualTypeArguments();,if (parameterizedType != null ) Type[] superArgs = parameterizedType.getActualTypeArguments();
FieldType.java,clazz = clazz.getSuperclass();,if (clazz != null ) clazz = clazz.getSuperclass();
GeneratedMessageLite.java,protected UnknownFieldSetLite unknownFields = UnknownFieldSetLite.getDefaultInstance();,if (UnknownFieldSetLite != null ) protected UnknownFieldSetLite unknownFields = UnknownFieldSetLite.getDefaultInstance();
GeneratedMessageLite.java,unknownFields = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) unknownFields = UnknownFieldSetLite.newInstance();
GeneratedMessageLite.java,extensions = extensions.clone();,if (extensions != null ) extensions = extensions.clone();
GeneratedMessageLite.java,int rawValue = input.readEnum();,if (input != null ) int rawValue = input.readEnum();
GeneratedMessageLite.java,subBuilder = existingValue.toBuilder();,if (existingValue != null ) subBuilder = existingValue.toBuilder();
GeneratedMessageLite.java,subBuilder = extension.getMessageDefaultInstance().newBuilderForType();,if (extension != null ) subBuilder = extension.getMessageDefaultInstance().newBuilderForType();
GeneratedMessageLite.java,value = subBuilder.build();,if (subBuilder != null ) value = subBuilder.build();
GeneratedMessageLite.java,int rawValue = input.readEnum();,if (input != null ) int rawValue = input.readEnum();
GeneratedMessageLite.java,final int tag = input.readTag();,if (input != null ) final int tag = input.readTag();
GeneratedMessageLite.java,rawBytes = input.readBytes();,if (input != null ) rawBytes = input.readBytes();
GeneratedMessageLite.java,subBuilder = existingValue.toBuilder();,if (existingValue != null ) subBuilder = existingValue.toBuilder();
GeneratedMessageLite.java,subBuilder = extension.getMessageDefaultInstance().newBuilderForType();,if (extension != null ) subBuilder = extension.getMessageDefaultInstance().newBuilderForType();
GeneratedMessageLite.java,MessageLite value = subBuilder.build();,if (subBuilder != null ) MessageLite value = subBuilder.build();
GeneratedMessageLite.java,extensions = extensions.clone();,if (extensions != null ) extensions = extensions.clone();
GeneratedMessageLite.java,next = iter.next();,if (iter != null ) next = iter.next();
GeneratedMessageLite.java,ExtensionDescriptor extension = next.getKey();,if (next != null ) ExtensionDescriptor extension = next.getKey();
GeneratedMessageLite.java,next = iter.next();,if (iter != null ) next = iter.next();
GeneratedMessageLite.java,instance.extensions = instance.extensions.clone();,if (instance != null ) instance.extensions = instance.extensions.clone();
GeneratedMessageLite.java,extensions = extensions.clone();,if (extensions != null ) extensions = extensions.clone();
GeneratedMessageLite.java,Type emptyList = (Type) Collections.emptyList();,if (Collections != null ) Type emptyList = (Type) Collections.emptyList();
GeneratedMessageLite.java,messageClass = regularForm.getClass();,if (regularForm != null ) messageClass = regularForm.getClass();
GeneratedMessageLite.java,messageClassName = messageClass.getName();,if (messageClass != null ) messageClassName = messageClass.getName();
GeneratedMessageLite.java,asBytes = regularForm.toByteArray();,if (regularForm != null ) asBytes = regularForm.toByteArray();
GeneratedMessageLite.java,int size = list.size();,if (list != null ) int size = list.size();
GeneratedMessageLite.java,int size = list.size();,if (list != null ) int size = list.size();
GeneratedMessageLite.java,int size = list.size();,if (list != null ) int size = list.size();
GeneratedMessageLite.java,int size = list.size();,if (list != null ) int size = list.size();
GeneratedMessageLite.java,int size = list.size();,if (list != null ) int size = list.size();
GeneratedMessageLite.java,int size = list.size();,if (list != null ) int size = list.size();
GeneratedMessageLite.java,CodedInputStream input = data.newCodedInput();,if (data != null ) CodedInputStream input = data.newCodedInput();
GeneratedMessageLite.java,int firstByte = input.read();,if (input != null ) int firstByte = input.read();
Internal.java,ByteBuffer temp = source.duplicate();,if (source != null ) ByteBuffer temp = source.duplicate();
Internal.java,ByteBuffer result = ByteBuffer.allocate(temp.capacity());,if (ByteBuffer != null ) ByteBuffer result = ByteBuffer.allocate(temp.capacity());
Internal.java,final ByteBuffer duplicated = bytes.duplicate();,if (bytes != null ) final ByteBuffer duplicated = bytes.duplicate();
Internal.java,int h = bytes.capacity();,if (bytes != null ) int h = bytes.capacity();
IterableByteBufferInputStream.java,iterator = data.iterator();,if (data != null ) iterator = data.iterator();
IterableByteBufferInputStream.java,currentByteBuffer = iterator.next();,if (iterator != null ) currentByteBuffer = iterator.next();
IterableByteBufferInputStream.java,currentByteBufferPos = currentByteBuffer.position();,if (currentByteBuffer != null ) currentByteBufferPos = currentByteBuffer.position();
IterableByteBufferInputStream.java,currentArray = currentByteBuffer.array();,if (currentByteBuffer != null ) currentArray = currentByteBuffer.array();
IterableByteBufferInputStream.java,currentArrayOffset = currentByteBuffer.arrayOffset();,if (currentByteBuffer != null ) currentArrayOffset = currentByteBuffer.arrayOffset();
IterableByteBufferInputStream.java,int prevPos = currentByteBuffer.position();,if (currentByteBuffer != null ) int prevPos = currentByteBuffer.position();
LazyField.java,LazyField field = entry.getValue();,if (entry != null ) LazyField field = entry.getValue();
LazyFieldLite.java,memoizedBytes = value.toByteString();,if (value != null ) memoizedBytes = value.toByteString();
LazyStringArrayList.java,list = new ArrayList<Object>(from.size());,if (ArrayList<Object>(from != null ) list = new ArrayList<Object>(from.size());
ListFieldSchema.java,int size = mine.size();,if (mine != null ) int size = mine.size();
ListFieldSchema.java,int otherSize = other.size();,if (other != null ) int otherSize = other.size();
ListFieldSchema.java,int size = list.size();,if (list != null ) int size = list.size();
ListFieldSchema.java,int size = mine.size();,if (mine != null ) int size = mine.size();
ListFieldSchema.java,int otherSize = other.size();,if (other != null ) int otherSize = other.size();
MapEntryLite.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
MapEntryLite.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
MapFieldSchemaLite.java,mine = mine.mutableCopy();,if (mine != null ) mine = mine.mutableCopy();
MessageSchema.java,String info = messageInfo.getStringInfo();,if (messageInfo != null ) String info = messageInfo.getStringInfo();
MessageSchema.java,final int length = info.length();,if (info != null ) final int length = info.length();
MessageSchema.java,FieldInfo[] fis = messageInfo.getFields();,if (messageInfo != null ) FieldInfo[] fis = messageInfo.getFields();
MessageSchema.java,int[] checkInitialized = messageInfo.getCheckInitialized();,if (messageInfo != null ) int[] checkInitialized = messageInfo.getCheckInitialized();
MessageSchema.java,final int fieldNumber = fi.getFieldNumber();,if (fi != null ) final int fieldNumber = fi.getFieldNumber();
MessageSchema.java,OneofInfo oneof = fi.getOneof();,if (fi != null ) OneofInfo oneof = fi.getOneof();
MessageSchema.java,FieldType type = fi.getType();,if (fi != null ) FieldType type = fi.getType();
MessageSchema.java,typeId = type.id();,if (type != null ) typeId = type.id();
MessageSchema.java,Field presenceField = fi.getPresenceField();,if (fi != null ) Field presenceField = fi.getPresenceField();
MessageSchema.java,presenceMaskShift = Integer.numberOfTrailingZeros(fi.getPresenceMask());,if (Integer != null ) presenceMaskShift = Integer.numberOfTrailingZeros(fi.getPresenceMask());
MessageSchema.java,buffer[bufferIndex] = fi.getFieldNumber();,if (fi != null ) buffer[bufferIndex] = fi.getFieldNumber();
MessageSchema.java,Object messageFieldClass = fi.getMessageFieldClass();,if (fi != null ) Object messageFieldClass = fi.getMessageFieldClass();
MessageSchema.java,protoHash = submessage.hashCode();,if (submessage != null ) protoHash = submessage.hashCode();
MessageSchema.java,protoHash = submessage.hashCode();,if (submessage != null ) protoHash = submessage.hashCode();
MessageSchema.java,size += extensionSchema.getExtensions(message).getSerializedSize();,if (extensionSchema != null ) size += extensionSchema.getExtensions(message).getSerializedSize();
MessageSchema.java,extensionIterator = extensions.iterator();,if (extensions != null ) extensionIterator = extensions.iterator();
MessageSchema.java,nextExtension = extensionIterator.next();,if (extensionIterator != null ) nextExtension = extensionIterator.next();
MessageSchema.java,extensionIterator = extensions.iterator();,if (extensions != null ) extensionIterator = extensions.iterator();
MessageSchema.java,nextExtension = extensionIterator.next();,if (extensionIterator != null ) nextExtension = extensionIterator.next();
MessageSchema.java,extensionIterator = extensions.descendingIterator();,if (extensions != null ) extensionIterator = extensions.descendingIterator();
MessageSchema.java,nextExtension = extensionIterator.next();,if (extensionIterator != null ) nextExtension = extensionIterator.next();
MessageSchema.java,final int number = reader.getFieldNumber();,if (reader != null ) final int number = reader.getFieldNumber();
MessageSchema.java,int enumValue = reader.readEnum();,if (reader != null ) int enumValue = reader.readEnum();
MessageSchema.java,int enumValue = reader.readEnum();,if (reader != null ) int enumValue = reader.readEnum();
MessageSchema.java,unknownFields = unknownFieldSchema.newBuilder();,if (unknownFieldSchema != null ) unknownFields = unknownFieldSchema.newBuilder();
MessageSchema.java,unknownFields = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) unknownFields = UnknownFieldSetLite.newInstance();
MessageSchema.java,final int size = list.size();,if (list != null ) final int size = list.size();
MessageSchema.java,final int size = list.size();,if (list != null ) final int size = list.size();
MessageSchema.java,final int size = list.size();,if (list != null ) final int size = list.size();
MessageSchema.java,unknownFields = unknownFieldSchema.newBuilder();,if (unknownFieldSchema != null ) unknownFields = unknownFieldSchema.newBuilder();
MessageSchema.java,CodedOutputStream codedOutput = codedBuilder.getCodedOutput();,if (codedBuilder != null ) CodedOutputStream codedOutput = codedBuilder.getCodedOutput();
MessageSetSchema.java,int hashCode = unknownFieldSchema.getFromMessage(message).hashCode();,if (unknownFieldSchema != null ) int hashCode = unknownFieldSchema.getFromMessage(message).hashCode();
MessageSetSchema.java,unknownFields = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) unknownFields = UnknownFieldSetLite.newInstance();
MessageSetSchema.java,final int number = reader.getFieldNumber();,if (reader != null ) final int number = reader.getFieldNumber();
MessageSetSchema.java,int startTag = reader.getTag();,if (reader != null ) int startTag = reader.getTag();
MessageSetSchema.java,final int number = reader.getFieldNumber();,if (reader != null ) final int number = reader.getFieldNumber();
MessageSetSchema.java,final int tag = reader.getTag();,if (reader != null ) final int tag = reader.getTag();
MessageSetSchema.java,rawBytes = reader.readBytes();,if (reader != null ) rawBytes = reader.readBytes();
MessageSetSchema.java,size += extensionSchema.getExtensions(message).getMessageSetSerializedSize();,if (extensionSchema != null ) size += extensionSchema.getExtensions(message).getMessageSetSerializedSize();
NioByteString.java,ByteBuffer slice = buffer.slice();,if (buffer != null ) ByteBuffer slice = buffer.slice();
NioByteString.java,bytes = buffer.array();,if (buffer != null ) bytes = buffer.array();
NioByteString.java,offset = buffer.arrayOffset() + buffer.position();,if (buffer != null ) offset = buffer.arrayOffset() + buffer.position();
NioByteString.java,length = buffer.remaining();,if (buffer != null ) length = buffer.remaining();
NioByteString.java,"len = Math.min(len, buf.remaining());","if (buf != null ) len = Math.min(len, buf.remaining());"
NioByteString.java,ByteBuffer slice = buffer.slice();,if (buffer != null ) ByteBuffer slice = buffer.slice();
ProtobufLists.java,int size = list.size();,if (list != null ) int size = list.size();
RawMessageInfo.java,char[] infoChars = info.toCharArray();,if (info != null ) char[] infoChars = info.toCharArray();
RopeByteString.java,leftLength = left.size();,if (left != null ) leftLength = left.size();
RopeByteString.java,totalLength = leftLength + right.size();,if (right != null ) totalLength = leftLength + right.size();
RopeByteString.java,final int newLength = left.size() + right.size();,if (right != null ) final int newLength = left.size() + right.size();
RopeByteString.java,int leftSize = left.size();,if (left != null ) int leftSize = left.size();
RopeByteString.java,int rightSize = right.size();,if (right != null ) int rightSize = right.size();
RopeByteString.java,byte b = current.nextByte();,if (current != null ) byte b = current.nextByte();
RopeByteString.java,LeafByteString byteString = pieces.next();,if (pieces != null ) LeafByteString byteString = pieces.next();
RopeByteString.java,int thatHash = otherByteString.peekCachedHashCode();,if (otherByteString != null ) int thatHash = otherByteString.peekCachedHashCode();
RopeByteString.java,LeafByteString thisString = thisIter.next();,if (thisIter != null ) LeafByteString thisString = thisIter.next();
RopeByteString.java,LeafByteString thatString = thatIter.next();,if (thatIter != null ) LeafByteString thatString = thatIter.next();
RopeByteString.java,thisString = thisIter.next();,if (thisIter != null ) thisString = thisIter.next();
RopeByteString.java,thatString = thatIter.next();,if (thatIter != null ) thatString = thatIter.next();
RopeByteString.java,ByteString partialString = prefixesStack.pop();,if (prefixesStack != null ) ByteString partialString = prefixesStack.pop();
RopeByteString.java,ByteString newLeft = prefixesStack.pop();,if (prefixesStack != null ) ByteString newLeft = prefixesStack.pop();
RopeByteString.java,int depthBin = getDepthBinForLength(byteString.size());,if (getDepthBinForLength(byteString != null ) int depthBin = getDepthBinForLength(byteString.size());
RopeByteString.java,ByteString newTree = prefixesStack.pop();,if (prefixesStack != null ) ByteString newTree = prefixesStack.pop();
RopeByteString.java,ByteString left = prefixesStack.pop();,if (prefixesStack != null ) ByteString left = prefixesStack.pop();
RopeByteString.java,depthBin = getDepthBinForLength(newTree.size());,if (getDepthBinForLength(newTree != null ) depthBin = getDepthBinForLength(newTree.size());
RopeByteString.java,ByteString left = prefixesStack.pop();,if (prefixesStack != null ) ByteString left = prefixesStack.pop();
RopeByteString.java,breadCrumbs = new ArrayDeque<>(rbs.getTreeDepth());,if (ArrayDeque<>(rbs != null ) breadCrumbs = new ArrayDeque<>(rbs.getTreeDepth());
RopeByteString.java,currentPiece = pieceIterator.next();,if (pieceIterator != null ) currentPiece = pieceIterator.next();
RopeByteString.java,currentPieceSize = currentPiece.size();,if (currentPiece != null ) currentPieceSize = currentPiece.size();
RopeByteString.java,currentPiece = pieceIterator.next();,if (pieceIterator != null ) currentPiece = pieceIterator.next();
RopeByteString.java,currentPieceSize = currentPiece.size();,if (currentPiece != null ) currentPieceSize = currentPiece.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,Field[] fields = holder.getDeclaredFields();,if (holder != null ) Field[] fields = holder.getDeclaredFields();
SchemaUtil.java,int size = enumList.size();,if (enumList != null ) int size = enumList.size();
SchemaUtil.java,int enumValue = it.next();,if (it != null ) int enumValue = it.next();
SchemaUtil.java,int size = enumList.size();,if (enumList != null ) int size = enumList.size();
SchemaUtil.java,int enumValue = it.next();,if (it != null ) int enumValue = it.next();
SchemaUtil.java,unknownFields = unknownFieldSchema.newBuilder();,if (unknownFieldSchema != null ) unknownFields = unknownFieldSchema.newBuilder();
SmallSortedMap.java,final List value = (List) entry.getValue();,if (entry != null ) final List value = (List) entry.getValue();
SmallSortedMap.java,final List value = (List) entry.getValue();,if (entry != null ) final List value = (List) entry.getValue();
SmallSortedMap.java,this.entryList = Collections.emptyList();,if (Collections != null ) this.entryList = Collections.emptyList();
SmallSortedMap.java,this.overflowEntries = Collections.emptyMap();,if (Collections != null ) this.overflowEntries = Collections.emptyMap();
SmallSortedMap.java,this.overflowEntriesDescending = Collections.emptyMap();,if (Collections != null ) this.overflowEntriesDescending = Collections.emptyMap();
SmallSortedMap.java,final V removed = entryList.remove(index).getValue();,if (entryList != null ) final V removed = entryList.remove(index).getValue();
SmallSortedMap.java,final V existing = get(entry.getKey());,if (get(entry != null ) final V existing = get(entry.getKey());
SmallSortedMap.java,final V value = entry.getValue();,if (entry != null ) final V value = entry.getValue();
SmallSortedMap.java,lazyOverflowIterator = overflowEntries.entrySet().iterator();,if (overflowEntries != null ) lazyOverflowIterator = overflowEntries.entrySet().iterator();
SmallSortedMap.java,private int pos = entryList.size();,if (entryList != null ) private int pos = entryList.size();
SmallSortedMap.java,lazyOverflowIterator = overflowEntriesDescending.entrySet().iterator();,if (overflowEntriesDescending != null ) lazyOverflowIterator = overflowEntriesDescending.entrySet().iterator();
SmallSortedMap.java,h += entryList.get(i).hashCode();,if (entryList != null ) h += entryList.get(i).hashCode();
SmallSortedMap.java,h += overflowEntries.hashCode();,if (overflowEntries != null ) h += overflowEntries.hashCode();
TextFormatEscaper.java,final StringBuilder builder = new StringBuilder(input.size());,if (StringBuilder(input != null ) final StringBuilder builder = new StringBuilder(input.size());
UnknownFieldSchema.java,int tag = reader.getTag();,if (reader != null ) int tag = reader.getTag();
UnknownFieldSetLite.java,final int tag = input.readTag();,if (input != null ) final int tag = input.readTag();
UnknownFieldSetLiteSchema.java,unknownFields = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) unknownFields = UnknownFieldSetLite.newInstance();
UnmodifiableLazyStringList.java,Iterator<String> iter = list.iterator();,if (list != null ) Iterator<String> iter = list.iterator();
Utf8.java,final int offset = buffer.arrayOffset();,if (buffer != null ) final int offset = buffer.arrayOffset();
Utf8.java,final int offset = buffer.arrayOffset();,if (buffer != null ) final int offset = buffer.arrayOffset();
Utf8.java,final int offset = out.arrayOffset();,if (out != null ) final int offset = out.arrayOffset();
Utf8.java,final int inLength = in.length();,if (in != null ) final int inLength = in.length();
Utf8.java,int outIx = out.position();,if (out != null ) int outIx = out.position();
Utf8.java,final int inLimit = in.length();,if (in != null ) final int inLimit = in.length();
Utf8.java,long outIx = address + out.position();,if (out != null ) long outIx = address + out.position();
Utf8.java,final long outLimit = address + out.limit();,if (out != null ) final long outLimit = address + out.limit();
Utf8.java,final int inLimit = in.length();,if (in != null ) final int inLimit = in.length();
AbstractProto2LiteSchemaTest.java,byte[] data = output.toByteArray();,if (output != null ) byte[] data = output.toByteArray();
AbstractProto2LiteSchemaTest.java,byte[] serializedBytes = expectedMessage.toByteArray();,if (expectedMessage != null ) byte[] serializedBytes = expectedMessage.toByteArray();
AbstractProto2LiteSchemaTest.java,UnknownFieldSetLite unknowns = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite unknowns = UnknownFieldSetLite.newInstance();
AbstractProto2LiteSchemaTest.java,CodedOutputStream packedOut = packedBuilder.getCodedOutput();,if (packedBuilder != null ) CodedOutputStream packedOut = packedBuilder.getCodedOutput();
AbstractProto2LiteSchemaTest.java,int size = unknowns.getSerializedSize();,if (unknowns != null ) int size = unknowns.getSerializedSize();
AbstractProto3LiteSchemaTest.java,byte[] data = output.toByteArray();,if (output != null ) byte[] data = output.toByteArray();
AbstractProto3SchemaTest.java,byte[] data = output.toByteArray();,if (output != null ) byte[] data = output.toByteArray();
AbstractSchemaTest.java,T newMsg = schema.newInstance();,if (schema != null ) T newMsg = schema.newInstance();
AbstractSchemaTest.java,T message = schema.newInstance();,if (schema != null ) T message = schema.newInstance();
AbstractSchemaTest.java,M newMsg = schema.newInstance();,if (schema != null ) M newMsg = schema.newInstance();
AbstractSchemaTest.java,M newMsg = schema.newInstance();,if (schema != null ) M newMsg = schema.newInstance();
ArrayDecodersTest.java,ByteString.Output byteStringOutput = ByteString.newOutput();,if (ByteString != null ) ByteString.Output byteStringOutput = ByteString.newOutput();
BinaryProtocolTest.java,byte[] expectedBytes = expected.toByteArray();,if (expected != null ) byte[] expectedBytes = expected.toByteArray();
BinaryProtocolTest.java,byte[] expectedBytes = expected.toByteArray();,if (expected != null ) byte[] expectedBytes = expected.toByteArray();
BooleanArrayListTest.java,Iterator<Boolean> iterator = list.iterator();,if (list != null ) Iterator<Boolean> iterator = list.iterator();
BooleanArrayListTest.java,iterator = list.iterator();,if (list != null ) iterator = list.iterator();
BoundedByteStringTest.java,byte[] pickled = out.toByteArray();,if (out != null ) byte[] pickled = out.toByteArray();
BoundedByteStringTest.java,Object o = ois.readObject();,if (ois != null ) Object o = ois.readObject();
ByteBufferWriterTest.java,ByteArrayOutputStream os = new ByteArrayOutputStream(buffer.remaining());,if (ByteArrayOutputStream(buffer != null ) ByteArrayOutputStream os = new ByteArrayOutputStream(buffer.remaining());
ByteBufferWriterTest.java,int originalPosition = buf.position();,if (buf != null ) int originalPosition = buf.position();
ByteStringTest.java,Comparator<ByteString> comparator = ByteString.unsignedLexicographicalComparator();,if (ByteString != null ) Comparator<ByteString> comparator = ByteString.unsignedLexicographicalComparator();
ByteStringTest.java,byte[] originalValue = byteString.toByteArray();,if (byteString != null ) byte[] originalValue = byteString.toByteArray();
ByteStringTest.java,byte[] newValue = byteString.toByteArray();,if (byteString != null ) byte[] newValue = byteString.toByteArray();
ByteStringTest.java,ByteString byteString = output.toByteString();,if (output != null ) ByteString byteString = output.toByteString();
ByteStringTest.java,ByteString byteString = output.toByteString();,if (output != null ) ByteString byteString = output.toByteString();
ByteStringTest.java,ByteString byteString = output.toByteString();,if (output != null ) ByteString byteString = output.toByteString();
ByteStringTest.java,ByteString byteString = output.toByteString();,if (output != null ) ByteString byteString = output.toByteString();
ByteStringTest.java,ByteString byteString = ByteString.newOutput().toByteString();,if (ByteString != null ) ByteString byteString = ByteString.newOutput().toByteString();
ByteStringTest.java,ByteString byteString = os.toByteString();,if (os != null ) ByteString byteString = os.toByteString();
ByteStringTest.java,byte[] oldValue = byteString.toByteArray();,if (byteString != null ) byte[] oldValue = byteString.toByteArray();
ByteStringTest.java,byte[] newValue = byteString.toByteArray();,if (byteString != null ) byte[] newValue = byteString.toByteArray();
ByteStringTest.java,ByteString byteString = builder.build();,if (builder != null ) ByteString byteString = builder.build();
ByteStringTest.java,byte[] substringBytes = compositeSubstring.toByteArray();,if (compositeSubstring != null ) byte[] substringBytes = compositeSubstring.toByteArray();
ByteStringTest.java,Iterator<ByteString> iter = pieces.iterator();,if (pieces != null ) Iterator<ByteString> iter = pieces.iterator();
ByteStringTest.java,ByteString concatenatedString = iter.next();,if (iter != null ) ByteString concatenatedString = iter.next();
ByteStringTest.java,concatenatedString = concatenatedString.concat(iter.next());,if (concatenatedString != null ) concatenatedString = concatenatedString.concat(iter.next());
ByteStringTest.java,ByteString.ByteIterator duoIter = duo.iterator();,if (duo != null ) ByteString.ByteIterator duoIter = duo.iterator();
ByteStringTest.java,ByteString.ByteIterator quintetIter = quintet.iterator();,if (quintet != null ) ByteString.ByteIterator quintetIter = quintet.iterator();
ByteStringTest.java,stillEqual = (duoIter.nextByte() == quintetIter.nextByte());,if (quintetIter != null ) stillEqual = (duoIter.nextByte() == quintetIter.nextByte());
CachedFieldSizeTest.java,TestCachedFieldSizeMessage.Builder builder = TestCachedFieldSizeMessage.newBuilder();,if (TestCachedFieldSizeMessage != null ) TestCachedFieldSizeMessage.Builder builder = TestCachedFieldSizeMessage.newBuilder();
CachedFieldSizeTest.java,TestCachedFieldSizeMessage message = builder.build();,if (builder != null ) TestCachedFieldSizeMessage message = builder.build();
CodedAdapterTest.java,byte[] expectedBytes = expected.toByteArray();,if (expected != null ) byte[] expectedBytes = expected.toByteArray();
CodedAdapterTest.java,byte[] expectedBytes = expected.toByteArray();,if (expected != null ) byte[] expectedBytes = expected.toByteArray();
CodedAdapterTest.java,T msg = schema.newInstance();,if (schema != null ) T msg = schema.newInstance();
CodedOutputStreamTest.java,ByteBuffer dup = buffer.duplicate();,if (buffer != null ) ByteBuffer dup = buffer.duplicate();
CodedOutputStreamTest.java,ByteBuffer dup = buffer.duplicate();,if (buffer != null ) ByteBuffer dup = buffer.duplicate();
CodedOutputStreamTest.java,TestAllTypes message = TestUtil.getAllSet();,if (TestUtil != null ) TestAllTypes message = TestUtil.getAllSet();
CodedOutputStreamTest.java,Coder coder = outputType.newCoder(message.getSerializedSize());,if (outputType != null ) Coder coder = outputType.newCoder(message.getSerializedSize());
CodedOutputStreamTest.java,byte[] rawBytes = coder.toByteArray();,if (coder != null ) byte[] rawBytes = coder.toByteArray();
CodedOutputStreamTest.java,byte[] expectedBytes = TestUtil.getGoldenPackedFieldsMessage().toByteArray();,if (TestUtil != null ) byte[] expectedBytes = TestUtil.getGoldenPackedFieldsMessage().toByteArray();
CodedOutputStreamTest.java,TestPackedTypes message = TestUtil.getPackedSet();,if (TestUtil != null ) TestPackedTypes message = TestUtil.getPackedSet();
CodedOutputStreamTest.java,Coder coder = outputType.newCoder(message.getSerializedSize());,if (outputType != null ) Coder coder = outputType.newCoder(message.getSerializedSize());
CodedOutputStreamTest.java,byte[] rawBytes = coder.toByteArray();,if (coder != null ) byte[] rawBytes = coder.toByteArray();
CodedOutputStreamTest.java,Coder coder = outputType.newCoder(message.getSerializedSize());,if (outputType != null ) Coder coder = outputType.newCoder(message.getSerializedSize());
CodedOutputStreamTest.java,byte[] rawBytes = coder.toByteArray();,if (coder != null ) byte[] rawBytes = coder.toByteArray();
CodedOutputStreamTest.java,byte[] result = outputStream.toByteArray();,if (outputStream != null ) byte[] result = outputStream.toByteArray();
CodedOutputStreamTest.java,Coder coder = outputType.newCoder(testAllTypes.getSerializedSize());,if (outputType != null ) Coder coder = outputType.newCoder(testAllTypes.getSerializedSize());
CodedOutputStreamTest.java,byte[] bytes = coder.toByteArray();,if (coder != null ) byte[] bytes = coder.toByteArray();
CodedOutputStreamTest.java,byte[] bytes = coder.toByteArray();,if (coder != null ) byte[] bytes = coder.toByteArray();
DoubleArrayListTest.java,Iterator<Double> iterator = list.iterator();,if (list != null ) Iterator<Double> iterator = list.iterator();
DoubleArrayListTest.java,iterator = list.iterator();,if (list != null ) iterator = list.iterator();
ExperimentalSerializationUtil.java,BinaryWriter writer = BinaryWriter.newHeapInstance(BufferAllocator.unpooled());,if (BinaryWriter != null ) BinaryWriter writer = BinaryWriter.newHeapInstance(BufferAllocator.unpooled());
ExperimentalSerializationUtil.java,Queue<AllocatedBuffer> buffers = writer.complete();,if (writer != null ) Queue<AllocatedBuffer> buffers = writer.complete();
ExperimentalSerializationUtil.java,AllocatedBuffer buffer = buffers.poll();,if (buffers != null ) AllocatedBuffer buffer = buffers.poll();
ExperimentalSerializationUtil.java,int length = buffer.limit() - buffer.position();,if (buffer != null ) int length = buffer.limit() - buffer.position();
ExperimentalSerializationUtil.java,T msg = schema.newInstance();,if (schema != null ) T msg = schema.newInstance();
ExperimentalSerializationUtil.java,T msg = schema.newInstance();,if (schema != null ) T msg = schema.newInstance();
ExperimentalTestDataProvider.java,value = RANDOM.nextDouble();,if (RANDOM != null ) value = RANDOM.nextDouble();
ExperimentalTestDataProvider.java,value = RANDOM.nextFloat();,if (RANDOM != null ) value = RANDOM.nextFloat();
FloatArrayListTest.java,Iterator<Float> iterator = list.iterator();,if (list != null ) Iterator<Float> iterator = list.iterator();
FloatArrayListTest.java,iterator = list.iterator();,if (list != null ) iterator = list.iterator();
IntArrayListTest.java,Iterator<Integer> iterator = list.iterator();,if (list != null ) Iterator<Integer> iterator = list.iterator();
IntArrayListTest.java,iterator = list.iterator();,if (list != null ) iterator = list.iterator();
IsValidUtf8TestUtil.java,SoftReference<ByteBuffer> ref = directBuffer.get();,if (directBuffer != null ) SoftReference<ByteBuffer> ref = directBuffer.get();
IsValidUtf8TestUtil.java,int charLen = cb.position();,if (cb != null ) int charLen = cb.position();
IsValidUtf8TestUtil.java,int bytesLen = bbReencoded.position();,if (bbReencoded != null ) int bytesLen = bbReencoded.position();
LazyFieldLiteTest.java,MessageLite message = TestUtil.getAllSet();,if (TestUtil != null ) MessageLite message = TestUtil.getAllSet();
LazyFieldLiteTest.java,TestAllExtensions message = TestUtil.getAllExtensionsSet();,if (TestUtil != null ) TestAllExtensions message = TestUtil.getAllExtensionsSet();
LazyFieldLiteTest.java,MessageLite message = TestUtil.getAllSet();,if (TestUtil != null ) MessageLite message = TestUtil.getAllSet();
LazyFieldLiteTest.java,message = lazyField.getValue(TestAllTypes.getDefaultInstance());,if (lazyField != null ) message = lazyField.getValue(TestAllTypes.getDefaultInstance());
LazyFieldLiteTest.java,TestAllExtensions message = TestUtil.getAllExtensionsSet();,if (TestUtil != null ) TestAllExtensions message = TestUtil.getAllExtensionsSet();
LazyFieldLiteTest.java,MessageLite value = lazyField.getValue(TestAllExtensions.getDefaultInstance());,if (lazyField != null ) MessageLite value = lazyField.getValue(TestAllExtensions.getDefaultInstance());
LazyFieldLiteTest.java,MessageLite message = TestUtil.getAllSet();,if (TestUtil != null ) MessageLite message = TestUtil.getAllSet();
LazyFieldLiteTest.java,TestAllExtensions message = TestUtil.getAllExtensionsSet();,if (TestUtil != null ) TestAllExtensions message = TestUtil.getAllExtensionsSet();
LazyFieldLiteTest.java,MessageLite message = TestUtil.getAllSet();,if (TestUtil != null ) MessageLite message = TestUtil.getAllSet();
LazyFieldLiteTest.java,TestAllExtensions message = TestUtil.getAllExtensionsSet();,if (TestUtil != null ) TestAllExtensions message = TestUtil.getAllExtensionsSet();
LazyFieldLiteTest.java,TestAllExtensions message = TestUtil.getAllExtensionsSet();,if (TestUtil != null ) TestAllExtensions message = TestUtil.getAllExtensionsSet();
LazyFieldLiteTest.java,TestAllExtensions emptyMessage = TestAllExtensions.newBuilder().build();,if (TestAllExtensions != null ) TestAllExtensions emptyMessage = TestAllExtensions.newBuilder().build();
LazyFieldLiteTest.java,ExtensionRegistryLite emptyRegistry = ExtensionRegistryLite.getEmptyRegistry();,if (ExtensionRegistryLite != null ) ExtensionRegistryLite emptyRegistry = ExtensionRegistryLite.getEmptyRegistry();
LazyFieldLiteTest.java,ByteString bytes = message.toByteString();,if (message != null ) ByteString bytes = message.toByteString();
LazyFieldLiteTest.java,TestAllTypes.Builder builder = TestUtil.getAllSet().toBuilder();,if (TestUtil != null ) TestAllTypes.Builder builder = TestUtil.getAllSet().toBuilder();
LazyFieldLiteTest.java,MessageLite newMessage = builder.build();,if (builder != null ) MessageLite newMessage = builder.build();
LazyMessageLiteTest.java,outer = LazyMessageLite.parseFrom(outer.toByteArray());,if (LazyMessageLite != null ) outer = LazyMessageLite.parseFrom(outer.toByteArray());
LazyMessageLiteTest.java,LazyMessageLite outer = LazyMessageLite.getDefaultInstance();,if (LazyMessageLite != null ) LazyMessageLite outer = LazyMessageLite.getDefaultInstance();
LazyMessageLiteTest.java,LazyMessageLite.Builder outerBuilder = LazyMessageLite.newBuilder();,if (LazyMessageLite != null ) LazyMessageLite.Builder outerBuilder = LazyMessageLite.newBuilder();
LazyMessageLiteTest.java,LazyMessageLite outer = outerBuilder.build();,if (outerBuilder != null ) LazyMessageLite outer = outerBuilder.build();
LazyMessageLiteTest.java,outer = outerBuilder.build();,if (outerBuilder != null ) outer = outerBuilder.build();
LazyMessageLiteTest.java,LazyMessageLite outerMerging = LazyMessageLite.getDefaultInstance();,if (LazyMessageLite != null ) LazyMessageLite outerMerging = LazyMessageLite.getDefaultInstance();
LazyMessageLiteTest.java,LazyInnerMessageLite inner = LazyInnerMessageLite.getDefaultInstance();,if (LazyInnerMessageLite != null ) LazyInnerMessageLite inner = LazyInnerMessageLite.getDefaultInstance();
LazyMessageLiteTest.java,ByteString bytes = outer.toByteString();,if (outer != null ) ByteString bytes = outer.toByteString();
LazyMessageLiteTest.java,LazyInnerMessageLite.Builder innerBuilder = LazyInnerMessageLite.newBuilder();,if (LazyInnerMessageLite != null ) LazyInnerMessageLite.Builder innerBuilder = LazyInnerMessageLite.newBuilder();
LazyMessageLiteTest.java,LazyInnerMessageLite innerMessage = innerBuilder.build();,if (innerBuilder != null ) LazyInnerMessageLite innerMessage = innerBuilder.build();
LazyStringArrayListTest.java,List<ByteString> byteStringList = list.asByteStringList();,if (list != null ) List<ByteString> byteStringList = list.asByteStringList();
LazyStringArrayListTest.java,List<ByteString> byteStringList = list.asByteStringList();,if (list != null ) List<ByteString> byteStringList = list.asByteStringList();
LazyStringArrayListTest.java,Iterator<String> iterator = list.iterator();,if (list != null ) Iterator<String> iterator = list.iterator();
LazyStringArrayListTest.java,iterator = list.iterator();,if (list != null ) iterator = list.iterator();
LazyStringArrayListTest.java,iterator = list.iterator();,if (list != null ) iterator = list.iterator();
LiteEqualsAndHashTest.java,TestOneofEquals.Builder builder = TestOneofEquals.newBuilder();,if (TestOneofEquals != null ) TestOneofEquals.Builder builder = TestOneofEquals.newBuilder();
LiteEqualsAndHashTest.java,Foo fooWithValueAndUnknownFields = Foo.parseFrom(fooWithValueAndExtension.toByteArray());,if (Foo != null ) Foo fooWithValueAndUnknownFields = Foo.parseFrom(fooWithValueAndExtension.toByteArray());
LiteralByteStringTest.java,ByteString.ByteIterator iter = stringUnderTest.iterator();,if (stringUnderTest != null ) ByteString.ByteIterator iter = stringUnderTest.iterator();
LiteralByteStringTest.java,InputStream stream = stringUnderTest.newInput();,if (stringUnderTest != null ) InputStream stream = stringUnderTest.newInput();
LiteralByteStringTest.java,InputStream stream = stringUnderTest.newInput();,if (stringUnderTest != null ) InputStream stream = stringUnderTest.newInput();
LiteralByteStringTest.java,int available = stream.available();,if (stream != null ) int available = stream.available();
LiteralByteStringTest.java,available = stream.available();,if (stream != null ) available = stream.available();
LiteralByteStringTest.java,ByteBuffer byteBuffer = stringUnderTest.asReadOnlyByteBuffer();,if (stringUnderTest != null ) ByteBuffer byteBuffer = stringUnderTest.asReadOnlyByteBuffer();
LiteralByteStringTest.java,List<ByteBuffer> byteBuffers = stringUnderTest.asReadOnlyByteBufferList();,if (stringUnderTest != null ) List<ByteBuffer> byteBuffers = stringUnderTest.asReadOnlyByteBufferList();
LiteralByteStringTest.java,int thisLength = byteBuffer.remaining();,if (byteBuffer != null ) int thisLength = byteBuffer.remaining();
LiteralByteStringTest.java,byte[] roundTripBytes = stringUnderTest.toByteArray();,if (stringUnderTest != null ) byte[] roundTripBytes = stringUnderTest.toByteArray();
LiteralByteStringTest.java,byte[] roundTripBytes = bos.toByteArray();,if (bos != null ) byte[] roundTripBytes = bos.toByteArray();
LiteralByteStringTest.java,ByteString.Output output = ByteString.newOutput();,if (ByteString != null ) ByteString.Output output = ByteString.newOutput();
LiteralByteStringTest.java,int hash = stringUnderTest.hashCode();,if (stringUnderTest != null ) int hash = stringUnderTest.hashCode();
LiteralByteStringTest.java,InputStream input = stringUnderTest.newInput();,if (stringUnderTest != null ) InputStream input = stringUnderTest.newInput();
LiteralByteStringTest.java,stillEqual = (expectedInt == input.read());,if (input != null ) stillEqual = (expectedInt == input.read());
LiteralByteStringTest.java,InputStream input = stringUnderTest.newInput();,if (stringUnderTest != null ) InputStream input = stringUnderTest.newInput();
LiteralByteStringTest.java,InputStream input = stringUnderTest.newInput();,if (stringUnderTest != null ) InputStream input = stringUnderTest.newInput();
LiteralByteStringTest.java,int stringSize = stringUnderTest.size();,if (stringUnderTest != null ) int stringSize = stringUnderTest.size();
LiteralByteStringTest.java,CodedInputStream cis = stringUnderTest.newCodedInput();,if (stringUnderTest != null ) CodedInputStream cis = stringUnderTest.newCodedInput();
LiteralByteStringTest.java,byte[] pickled = out.toByteArray();,if (out != null ) byte[] pickled = out.toByteArray();
LiteralByteStringTest.java,Object o = ois.readObject();,if (ois != null ) Object o = ois.readObject();
LongArrayListTest.java,Iterator<Long> iterator = list.iterator();,if (list != null ) Iterator<Long> iterator = list.iterator();
LongArrayListTest.java,iterator = list.iterator();,if (list != null ) iterator = list.iterator();
MapForProto2LiteTest.java,TestMap.Builder mapBuilder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder mapBuilder = TestMap.newBuilder();
MapForProto2LiteTest.java,TestMap map = mapBuilder.build();,if (mapBuilder != null ) TestMap map = mapBuilder.build();
MapForProto2LiteTest.java,TestMap.Builder mapBuilder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder mapBuilder = TestMap.newBuilder();
MapForProto2LiteTest.java,TestMap map = mapBuilder.build();,if (mapBuilder != null ) TestMap map = mapBuilder.build();
MapForProto2LiteTest.java,mapBuilder = map.toBuilder();,if (map != null ) mapBuilder = map.toBuilder();
MapForProto2LiteTest.java,map = mapBuilder.build();,if (mapBuilder != null ) map = mapBuilder.build();
MapForProto2LiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapForProto2LiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapForProto2LiteTest.java,message = builder.build();,if (builder != null ) message = builder.build();
MapForProto2LiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapForProto2LiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapForProto2LiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapForProto2LiteTest.java,builder = message.toBuilder();,if (message != null ) builder = message.toBuilder();
MapForProto2LiteTest.java,message = builder.build();,if (builder != null ) message = builder.build();
MapForProto2LiteTest.java,builder = message.toBuilder();,if (message != null ) builder = message.toBuilder();
MapForProto2LiteTest.java,message = builder.build();,if (builder != null ) message = builder.build();
MapForProto2LiteTest.java,builder = message.toBuilder();,if (message != null ) builder = message.toBuilder();
MapForProto2LiteTest.java,message = builder.build();,if (builder != null ) message = builder.build();
MapForProto2LiteTest.java,TestMap.Builder sourceBuilder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder sourceBuilder = TestMap.newBuilder();
MapForProto2LiteTest.java,TestMap source = sourceBuilder.build();,if (sourceBuilder != null ) TestMap source = sourceBuilder.build();
MapForProto2LiteTest.java,TestMap.Builder destination = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder destination = TestMap.newBuilder();
MapForProto2LiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapForProto2LiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapForProto2LiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapForProto2LiteTest.java,builder = message.toBuilder();,if (message != null ) builder = message.toBuilder();
MapForProto2LiteTest.java,message = builder.build();,if (builder != null ) message = builder.build();
MapForProto2LiteTest.java,builder = message.toBuilder();,if (message != null ) builder = message.toBuilder();
MapForProto2LiteTest.java,message = builder.build();,if (builder != null ) message = builder.build();
MapForProto2LiteTest.java,map = (TestMap) expected.getUnfinishedMessage();,if (expected != null ) map = (TestMap) expected.getUnfinishedMessage();
MapForProto2LiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapForProto2LiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapForProto2LiteTest.java,TestMap.Builder other = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder other = TestMap.newBuilder();
MapForProto2LiteTest.java,data = message.toByteString();,if (message != null ) data = message.toByteString();
MapForProto2LiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapForProto2LiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapForProto2LiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapForProto2LiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapForProto2LiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapForProto2LiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapForProto2LiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapForProto2LiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapForProto2LiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapForProto2LiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapForProto2LiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap.Builder usingMutableMapBuilder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder usingMutableMapBuilder = TestMap.newBuilder();
MapLiteTest.java,TestMap usingMutableMap = usingMutableMapBuilder.build();,if (usingMutableMapBuilder != null ) TestMap usingMutableMap = usingMutableMapBuilder.build();
MapLiteTest.java,TestMap.Builder usingAccessorsBuilder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder usingAccessorsBuilder = TestMap.newBuilder();
MapLiteTest.java,TestMap usingAccessors = usingAccessorsBuilder.build();,if (usingAccessorsBuilder != null ) TestMap usingAccessors = usingAccessorsBuilder.build();
MapLiteTest.java,TestMap.Builder mapBuilder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder mapBuilder = TestMap.newBuilder();
MapLiteTest.java,TestMap map = mapBuilder.build();,if (mapBuilder != null ) TestMap map = mapBuilder.build();
MapLiteTest.java,mapBuilder = map.toBuilder();,if (map != null ) mapBuilder = map.toBuilder();
MapLiteTest.java,map = mapBuilder.build();,if (mapBuilder != null ) map = mapBuilder.build();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapLiteTest.java,message = builder.build();,if (builder != null ) message = builder.build();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapLiteTest.java,builder = message.toBuilder();,if (message != null ) builder = message.toBuilder();
MapLiteTest.java,message = builder.build();,if (builder != null ) message = builder.build();
MapLiteTest.java,builder = message.toBuilder();,if (message != null ) builder = message.toBuilder();
MapLiteTest.java,message = builder.build();,if (builder != null ) message = builder.build();
MapLiteTest.java,builder = message.toBuilder();,if (message != null ) builder = message.toBuilder();
MapLiteTest.java,message = builder.build();,if (builder != null ) message = builder.build();
MapLiteTest.java,TestMap.Builder sourceBuilder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder sourceBuilder = TestMap.newBuilder();
MapLiteTest.java,TestMap source = sourceBuilder.build();,if (sourceBuilder != null ) TestMap source = sourceBuilder.build();
MapLiteTest.java,TestMap.Builder destination = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder destination = TestMap.newBuilder();
MapLiteTest.java,TestMap source = sourceBuilder.build();,if (sourceBuilder != null ) TestMap source = sourceBuilder.build();
MapLiteTest.java,TestMap.Builder destinationBuilder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder destinationBuilder = TestMap.newBuilder();
MapLiteTest.java,TestMap destination = destinationBuilder.build();,if (destinationBuilder != null ) TestMap destination = destinationBuilder.build();
MapLiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapLiteTest.java,builder = message.toBuilder();,if (message != null ) builder = message.toBuilder();
MapLiteTest.java,message = builder.build();,if (builder != null ) message = builder.build();
MapLiteTest.java,builder = message.toBuilder();,if (message != null ) builder = message.toBuilder();
MapLiteTest.java,message = builder.build();,if (builder != null ) message = builder.build();
MapLiteTest.java,map = (TestMap) expected.getUnfinishedMessage();,if (expected != null ) map = (TestMap) expected.getUnfinishedMessage();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapLiteTest.java,TestMap.Builder other = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder other = TestMap.newBuilder();
MapLiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapLiteTest.java,message = builder.build();,if (builder != null ) message = builder.build();
MapLiteTest.java,message = TestMap.parseFrom(message.toByteString());,if (TestMap != null ) message = TestMap.parseFrom(message.toByteString());
MapLiteTest.java,builder = message.toBuilder();,if (message != null ) builder = message.toBuilder();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
NioByteStringTest.java,String actualClassName = object.getClass().getName();,if (object != null ) String actualClassName = object.getClass().getName();
NioByteStringTest.java,ByteString.ByteIterator iter = testString.iterator();,if (testString != null ) ByteString.ByteIterator iter = testString.iterator();
NioByteStringTest.java,InputStream stream = testString.newInput();,if (testString != null ) InputStream stream = testString.newInput();
NioByteStringTest.java,InputStream stream = testString.newInput();,if (testString != null ) InputStream stream = testString.newInput();
NioByteStringTest.java,ByteBuffer byteBuffer = testString.asReadOnlyByteBuffer();,if (testString != null ) ByteBuffer byteBuffer = testString.asReadOnlyByteBuffer();
NioByteStringTest.java,List<ByteBuffer> byteBuffers = testString.asReadOnlyByteBufferList();,if (testString != null ) List<ByteBuffer> byteBuffers = testString.asReadOnlyByteBufferList();
NioByteStringTest.java,int thisLength = byteBuffer.remaining();,if (byteBuffer != null ) int thisLength = byteBuffer.remaining();
NioByteStringTest.java,byte[] roundTripBytes = testString.toByteArray();,if (testString != null ) byte[] roundTripBytes = testString.toByteArray();
NioByteStringTest.java,byte[] roundTripBytes = bos.toByteArray();,if (bos != null ) byte[] roundTripBytes = bos.toByteArray();
NioByteStringTest.java,ByteString.Output output = ByteString.newOutput();,if (ByteString != null ) ByteString.Output output = ByteString.newOutput();
NioByteStringTest.java,int hash = testString.hashCode();,if (testString != null ) int hash = testString.hashCode();
NioByteStringTest.java,InputStream input = testString.newInput();,if (testString != null ) InputStream input = testString.newInput();
NioByteStringTest.java,stillEqual = (expectedInt == input.read());,if (input != null ) stillEqual = (expectedInt == input.read());
NioByteStringTest.java,InputStream input = testString.newInput();,if (testString != null ) InputStream input = testString.newInput();
NioByteStringTest.java,int stringSize = testString.size();,if (testString != null ) int stringSize = testString.size();
NioByteStringTest.java,CodedInputStream cis = testString.newCodedInput();,if (testString != null ) CodedInputStream cis = testString.newCodedInput();
NioByteStringTest.java,byte[] pickled = out.toByteArray();,if (out != null ) byte[] pickled = out.toByteArray();
NioByteStringTest.java,Object o = ois.readObject();,if (ois != null ) Object o = ois.readObject();
ParserLiteTest.java,Parser<MessageLite> parser = (Parser<MessageLite>) message.getParserForType();,if (message != null ) Parser<MessageLite> parser = (Parser<MessageLite>) message.getParserForType();
ParserLiteTest.java,TestPackedExtensionsLite packedMessage = TestUtilLite.getLitePackedExtensionsSet();,if (TestUtilLite != null ) TestPackedExtensionsLite packedMessage = TestUtilLite.getLitePackedExtensionsSet();
ParserLiteTest.java,InputStream input = new ByteArrayInputStream(output.toByteArray());,if (ByteArrayInputStream(output != null ) InputStream input = new ByteArrayInputStream(output.toByteArray());
ParserLiteTest.java,TestAllTypesLite.Builder builder = TestAllTypesLite.newBuilder();,if (TestAllTypesLite != null ) TestAllTypesLite.Builder builder = TestAllTypesLite.newBuilder();
ParserLiteTest.java,ExtensionRegistryLite registry = ExtensionRegistryLite.newInstance();,if (ExtensionRegistryLite != null ) ExtensionRegistryLite registry = ExtensionRegistryLite.newInstance();
Proto2MessageInfoFactory.java,StructuralMessageInfo.Builder builder = StructuralMessageInfo.newBuilder();,if (StructuralMessageInfo != null ) StructuralMessageInfo.Builder builder = StructuralMessageInfo.newBuilder();
Proto3MessageInfoFactory.java,StructuralMessageInfo.Builder builder = StructuralMessageInfo.newBuilder();,if (StructuralMessageInfo != null ) StructuralMessageInfo.Builder builder = StructuralMessageInfo.newBuilder();
Proto3MessageLiteInfoFactory.java,StructuralMessageInfo.Builder builder = StructuralMessageInfo.newBuilder();,if (StructuralMessageInfo != null ) StructuralMessageInfo.Builder builder = StructuralMessageInfo.newBuilder();
ProtobufArrayListTest.java,Iterator<Integer> iterator = list.iterator();,if (list != null ) Iterator<Integer> iterator = list.iterator();
ProtobufArrayListTest.java,iterator = list.iterator();,if (list != null ) iterator = list.iterator();
ProtobufArrayListTest.java,iterator = list.iterator();,if (list != null ) iterator = list.iterator();
RopeByteStringSubstringTest.java,Iterator<ByteString> iter = ByteStringTest.makeConcretePieces(sourceBytes).iterator();,if (ByteStringTest != null ) Iterator<ByteString> iter = ByteStringTest.makeConcretePieces(sourceBytes).iterator();
RopeByteStringSubstringTest.java,ByteString sourceString = iter.next();,if (iter != null ) ByteString sourceString = iter.next();
RopeByteStringSubstringTest.java,sourceString = sourceString.concat(iter.next());,if (sourceString != null ) sourceString = sourceString.concat(iter.next());
RopeByteStringSubstringTest.java,StringBuilder builder = new StringBuilder(copies * sourceString.length());,if (sourceString != null ) StringBuilder builder = new StringBuilder(copies * sourceString.length());
RopeByteStringSubstringTest.java,String testString = builder.toString();,if (builder != null ) String testString = builder.toString();
RopeByteStringSubstringTest.java,StringBuilder builder = new StringBuilder(copies * sourceString.length());,if (sourceString != null ) StringBuilder builder = new StringBuilder(copies * sourceString.length());
RopeByteStringSubstringTest.java,String testString = builder.toString();,if (builder != null ) String testString = builder.toString();
RopeByteStringTest.java,Iterator<ByteString> iter = ByteStringTest.makeConcretePieces(referenceBytes).iterator();,if (ByteStringTest != null ) Iterator<ByteString> iter = ByteStringTest.makeConcretePieces(referenceBytes).iterator();
RopeByteStringTest.java,stringUnderTest = iter.next();,if (iter != null ) stringUnderTest = iter.next();
RopeByteStringTest.java,stringUnderTest = stringUnderTest.concat(iter.next());,if (stringUnderTest != null ) stringUnderTest = stringUnderTest.concat(iter.next());
RopeByteStringTest.java,StringBuilder builder = new StringBuilder(copies * sourceString.length());,if (sourceString != null ) StringBuilder builder = new StringBuilder(copies * sourceString.length());
RopeByteStringTest.java,String testString = builder.toString();,if (builder != null ) String testString = builder.toString();
RopeByteStringTest.java,StringBuilder builder = new StringBuilder(copies * sourceString.length());,if (sourceString != null ) StringBuilder builder = new StringBuilder(copies * sourceString.length());
RopeByteStringTest.java,String testString = builder.toString();,if (builder != null ) String testString = builder.toString();
RopeByteStringTest.java,byte[] pickled = out.toByteArray();,if (out != null ) byte[] pickled = out.toByteArray();
RopeByteStringTest.java,Object o = ois.readObject();,if (ois != null ) Object o = ois.readObject();
SmallSortedMapTest.java,Set<Integer> keySet = map.keySet();,if (map != null ) Set<Integer> keySet = map.keySet();
SmallSortedMapTest.java,Iterator<Integer> keys = keySet.iterator();,if (keySet != null ) Iterator<Integer> keys = keySet.iterator();
SmallSortedMapTest.java,Integer key = keys.next();,if (keys != null ) Integer key = keys.next();
TestSchemas.java,Protobuf protobuf = Protobuf.getInstance();,if (Protobuf != null ) Protobuf protobuf = Protobuf.getInstance();
TestSchemas.java,Protobuf protobuf = Protobuf.getInstance();,if (Protobuf != null ) Protobuf protobuf = Protobuf.getInstance();
TestSchemasLite.java,Protobuf protobuf = Protobuf.getInstance();,if (Protobuf != null ) Protobuf protobuf = Protobuf.getInstance();
TestSchemasLite.java,Protobuf protobuf = Protobuf.getInstance();,if (Protobuf != null ) Protobuf protobuf = Protobuf.getInstance();
TestUtil.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TestUtil.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TestUtil.java,TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();,if (TestAllExtensions != null ) TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();
TestUtil.java,TestPackedTypes.Builder builder = TestPackedTypes.newBuilder();,if (TestPackedTypes != null ) TestPackedTypes.Builder builder = TestPackedTypes.newBuilder();
TestUtil.java,TestUnpackedTypes.Builder builder = TestUnpackedTypes.newBuilder();,if (TestUnpackedTypes != null ) TestUnpackedTypes.Builder builder = TestUnpackedTypes.newBuilder();
TestUtil.java,TestPackedExtensions.Builder builder = TestPackedExtensions.newBuilder();,if (TestPackedExtensions != null ) TestPackedExtensions.Builder builder = TestPackedExtensions.newBuilder();
TestUtil.java,ExtensionRegistryLite registry = ExtensionRegistryLite.newInstance();,if (ExtensionRegistryLite != null ) ExtensionRegistryLite registry = ExtensionRegistryLite.newInstance();
TestUtilLite.java,TestAllTypesLite.Builder builder = TestAllTypesLite.newBuilder();,if (TestAllTypesLite != null ) TestAllTypesLite.Builder builder = TestAllTypesLite.newBuilder();
TestUtilLite.java,TestAllExtensionsLite.Builder builder = TestAllExtensionsLite.newBuilder();,if (TestAllExtensionsLite != null ) TestAllExtensionsLite.Builder builder = TestAllExtensionsLite.newBuilder();
TestUtilLite.java,TestPackedExtensionsLite.Builder builder = TestPackedExtensionsLite.newBuilder();,if (TestPackedExtensionsLite != null ) TestPackedExtensionsLite.Builder builder = TestPackedExtensionsLite.newBuilder();
TestUtilLite.java,ExtensionRegistryLite registry = ExtensionRegistryLite.newInstance();,if (ExtensionRegistryLite != null ) ExtensionRegistryLite registry = ExtensionRegistryLite.newInstance();
UnmodifiableLazyStringListTest.java,List<ByteString> byteStringList = list.asByteStringList();,if (list != null ) List<ByteString> byteStringList = list.asByteStringList();
UnmodifiableLazyStringListTest.java,List<ByteString> byteStringList = list.asByteStringList();,if (list != null ) List<ByteString> byteStringList = list.asByteStringList();
UnmodifiableLazyStringListTest.java,Iterator<String> iter = list.iterator();,if (list != null ) Iterator<String> iter = list.iterator();
UnmodifiableLazyStringListTest.java,List<ByteString> byteStringList = list.asByteStringList();,if (list != null ) List<ByteString> byteStringList = list.asByteStringList();
UnmodifiableLazyStringListTest.java,Iterator<ByteString> byteIter = byteStringList.iterator();,if (byteStringList != null ) Iterator<ByteString> byteIter = byteStringList.iterator();
UnmodifiableLazyStringListTest.java,ListIterator<String> iter = list.listIterator();,if (list != null ) ListIterator<String> iter = list.listIterator();
UnmodifiableLazyStringListTest.java,List<ByteString> byteStringList = list.asByteStringList();,if (list != null ) List<ByteString> byteStringList = list.asByteStringList();
UnmodifiableLazyStringListTest.java,ListIterator<ByteString> byteIter = byteStringList.listIterator();,if (byteStringList != null ) ListIterator<ByteString> byteIter = byteStringList.listIterator();
Utf8Utils.java,strings[i] = sb.toString();,if (sb != null ) strings[i] = sb.toString();
WireFormatLiteTest.java,TestAllExtensionsLite message = TestUtilLite.getAllLiteExtensionsSet();,if (TestUtilLite != null ) TestAllExtensionsLite message = TestUtilLite.getAllLiteExtensionsSet();
WireFormatLiteTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatLiteTest.java,TestPackedExtensionsLite message = TestUtilLite.getLitePackedExtensionsSet();,if (TestUtilLite != null ) TestPackedExtensionsLite message = TestUtilLite.getLitePackedExtensionsSet();
WireFormatLiteTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatLiteTest.java,TestAllTypes message = TestUtil.getAllSet();,if (TestUtil != null ) TestAllTypes message = TestUtil.getAllSet();
WireFormatLiteTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatLiteTest.java,ExtensionRegistryLite registryLite = TestUtilLite.getExtensionRegistryLite();,if (TestUtilLite != null ) ExtensionRegistryLite registryLite = TestUtilLite.getExtensionRegistryLite();
WireFormatLiteTest.java,TestPackedExtensionsLite message = TestUtilLite.getLitePackedExtensionsSet();,if (TestUtilLite != null ) TestPackedExtensionsLite message = TestUtilLite.getLitePackedExtensionsSet();
WireFormatLiteTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatLiteTest.java,ExtensionRegistryLite registry = TestUtilLite.getExtensionRegistryLite();,if (TestUtilLite != null ) ExtensionRegistryLite registry = TestUtilLite.getExtensionRegistryLite();
WireFormatLiteTest.java,TestAllTypes message = TestUtil.getAllSet();,if (TestUtil != null ) TestAllTypes message = TestUtil.getAllSet();
WireFormatLiteTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatLiteTest.java,TestPackedTypes message = TestUtil.getPackedSet();,if (TestUtil != null ) TestPackedTypes message = TestUtil.getPackedSet();
WireFormatLiteTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatLiteTest.java,TestAllExtensions message = TestUtil.getAllExtensionsSet();,if (TestUtil != null ) TestAllExtensions message = TestUtil.getAllExtensionsSet();
WireFormatLiteTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatLiteTest.java,TestPackedExtensions message = TestUtil.getPackedExtensionsSet();,if (TestUtil != null ) TestPackedExtensions message = TestUtil.getPackedExtensionsSet();
WireFormatLiteTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatLiteTest.java,TestPackedTypes message = TestUtil.getPackedSet();,if (TestUtil != null ) TestPackedTypes message = TestUtil.getPackedSet();
WireFormatLiteTest.java,TestAllTypes message = TestUtil.getAllSet();,if (TestUtil != null ) TestAllTypes message = TestUtil.getAllSet();
WireFormatLiteTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatLiteTest.java,ExtensionRegistryLite registry = TestUtil.getExtensionRegistry();,if (TestUtil != null ) ExtensionRegistryLite registry = TestUtil.getExtensionRegistry();
WireFormatLiteTest.java,TestPackedExtensions message = TestUtil.getPackedExtensionsSet();,if (TestUtil != null ) TestPackedExtensions message = TestUtil.getPackedExtensionsSet();
WireFormatLiteTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatLiteTest.java,ExtensionRegistryLite registry = TestUtil.getExtensionRegistry();,if (TestUtil != null ) ExtensionRegistryLite registry = TestUtil.getExtensionRegistry();
WireFormatLiteTest.java,ByteArrayInputStream input = new ByteArrayInputStream(output.toByteArray());,if (ByteArrayInputStream(output != null ) ByteArrayInputStream input = new ByteArrayInputStream(output.toByteArray());
WireFormatLiteTest.java,ExtensionRegistryLite result = ExtensionRegistryLite.newInstance();,if (ExtensionRegistryLite != null ) ExtensionRegistryLite result = ExtensionRegistryLite.newInstance();
WireFormatLiteTest.java,ExtensionRegistryLite result = ExtensionRegistryLite.newInstance();,if (ExtensionRegistryLite != null ) ExtensionRegistryLite result = ExtensionRegistryLite.newInstance();
WireFormatLiteTest.java,byte[] messageSetBytes = byteArrayOutputStream.toByteArray();,if (byteArrayOutputStream != null ) byte[] messageSetBytes = byteArrayOutputStream.toByteArray();
WireFormatLiteTest.java,ByteString data = messageSet.toByteString();,if (messageSet != null ) ByteString data = messageSet.toByteString();
WireFormatLiteTest.java,ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();,if (ExtensionRegistryLite != null ) ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();
WireFormatLiteTest.java,ByteString data = raw.toByteString();,if (raw != null ) ByteString data = raw.toByteString();
WireFormatLiteTest.java,ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();,if (ExtensionRegistryLite != null ) ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();
WireFormatLiteTest.java,ByteString data = raw.toByteString();,if (raw != null ) ByteString data = raw.toByteString();
WireFormatLiteTest.java,ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();,if (ExtensionRegistryLite != null ) ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();
WireFormatLiteTest.java,ByteString data = raw.toByteString();,if (raw != null ) ByteString data = raw.toByteString();
WireFormatLiteTest.java,ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();,if (ExtensionRegistryLite != null ) ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();
WireFormatLiteTest.java,ByteString.CodedBuilder out = ByteString.newCodedBuilder(raw.getSerializedSize());,if (ByteString != null ) ByteString.CodedBuilder out = ByteString.newCodedBuilder(raw.getSerializedSize());
WireFormatLiteTest.java,CodedOutputStream output = out.getCodedOutput();,if (out != null ) CodedOutputStream output = out.getCodedOutput();
WireFormatLiteTest.java,ByteString data = out.build();,if (out != null ) ByteString data = out.build();
WireFormatLiteTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatLiteTest.java,ByteString rawBytes = source.toByteString();,if (source != null ) ByteString rawBytes = source.toByteString();
WireFormatLiteTest.java,byte[] data = output.toByteArray();,if (output != null ) byte[] data = output.toByteArray();
WireFormatLiteTest.java,TestPackedTypes all = TestUtil.getPackedSet();,if (TestUtil != null ) TestPackedTypes all = TestUtil.getPackedSet();
WireFormatLiteTest.java,byte[] data = message.toByteArray();,if (message != null ) byte[] data = message.toByteArray();
WireFormatLiteTest.java,TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());,if (TestAllTypes != null ) TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());
WireFormatLiteTest.java,TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());,if (TestAllTypes != null ) TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());
WireFormatLiteTest.java,TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());,if (TestAllTypes != null ) TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());
WireFormatLiteTest.java,TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());,if (TestAllTypes != null ) TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());
WireFormatLiteTest.java,TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());,if (TestAllTypes != null ) TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());
WireFormatLiteTest.java,TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());,if (TestAllTypes != null ) TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());
WireFormatLiteTest.java,TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());,if (TestAllTypes != null ) TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());
WireFormatLiteTest.java,byte[] data = output.toByteArray();,if (output != null ) byte[] data = output.toByteArray();
WireFormatLiteTest.java,RawMessageSet raw = RawMessageSet.parseFrom(parsed.toByteArray());,if (RawMessageSet != null ) RawMessageSet raw = RawMessageSet.parseFrom(parsed.toByteArray());
WireFormatLiteTest.java,TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());,if (TestAllTypes != null ) TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());
WireFormatLiteTest.java,TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());,if (TestAllTypes != null ) TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());
WireFormatLiteTest.java,TestMap actual = TestMap.parseFrom(parsed.toByteArray());,if (TestMap != null ) TestMap actual = TestMap.parseFrom(parsed.toByteArray());
WireFormatLiteTest.java,ExtensionRegistryLite extensionRegistry = TestUtilLite.getExtensionRegistryLite();,if (TestUtilLite != null ) ExtensionRegistryLite extensionRegistry = TestUtilLite.getExtensionRegistryLite();
WireFormatLiteTest.java,TestMap parsed = TestMap.parseFrom(message.toByteArray());,if (TestMap != null ) TestMap parsed = TestMap.parseFrom(message.toByteArray());
WireFormatLiteTest.java,byte[] data = TestUtil.getAllSet().toByteArray();,if (TestUtil != null ) byte[] data = TestUtil.getAllSet().toByteArray();
WrappersLiteOfMethodTest.java,TopLevelMessage.Builder builder = TopLevelMessage.newBuilder();,if (TopLevelMessage != null ) TopLevelMessage.Builder builder = TopLevelMessage.newBuilder();
WrappersLiteOfMethodTest.java,TopLevelMessage message = builder.build();,if (builder != null ) TopLevelMessage message = builder.build();
WrappersLiteOfMethodTest.java,assertTrue(true == message.getFieldBool().getValue());,if (message != null ) assertTrue(true == message.getFieldBool().getValue());
WrappersOfMethodTest.java,TopLevelMessage.Builder builder = TopLevelMessage.newBuilder();,if (TopLevelMessage != null ) TopLevelMessage.Builder builder = TopLevelMessage.newBuilder();
WrappersOfMethodTest.java,TopLevelMessage message = builder.build();,if (builder != null ) TopLevelMessage message = builder.build();
WrappersOfMethodTest.java,assertTrue(true == message.getFieldBool().getValue());,if (message != null ) assertTrue(true == message.getFieldBool().getValue());
RubyFileBuilderContext.java,String name = messageBuilder.getName();,if (messageBuilder != null ) String name = messageBuilder.getName();
RubyMessage.java,FieldDescriptor fieldDescriptor = oneofCases.get(rubyOneofDescriptor.getDescriptor());,if (oneofCases != null ) FieldDescriptor fieldDescriptor = oneofCases.get(rubyOneofDescriptor.getDescriptor());
RubyBuilder.java,this.pendingList = runtime.newArray();,if (runtime != null ) this.pendingList = runtime.newArray();
RubyBuilder.java,Binding binding = block.getBinding();,if (block != null ) Binding binding = block.getBinding();
RubyBuilder.java,Binding binding = block.getBinding();,if (block != null ) Binding binding = block.getBinding();
RubyBuilder.java,this.pendingList = context.runtime.newArray();,if (context != null ) this.pendingList = context.runtime.newArray();
RubyDescriptor.java,this.builder = DescriptorProtos.DescriptorProto.newBuilder();,if (DescriptorProtos != null ) this.builder = DescriptorProtos.DescriptorProto.newBuilder();
RubyDescriptorPool.java,this.builder = DescriptorProtos.FileDescriptorProto.newBuilder();,if (DescriptorProtos != null ) this.builder = DescriptorProtos.FileDescriptorProto.newBuilder();
RubyDescriptorPool.java,Binding binding = block.getBinding();,if (block != null ) Binding binding = block.getBinding();
RubyDescriptorPool.java,String enumName = Utils.unescapeIdentifier(enumDescriptor.getName());,if (Utils != null ) String enumName = Utils.unescapeIdentifier(enumDescriptor.getName());
RubyDescriptorPool.java,RubyFieldDescriptor rubyFieldDescriptor = rubyDescriptor.lookup(fieldDescriptor.getName());,if (rubyDescriptor != null ) RubyFieldDescriptor rubyFieldDescriptor = rubyDescriptor.lookup(fieldDescriptor.getName());
RubyEnum.java,Descriptors.EnumDescriptor descriptor = rubyEnumDescriptorescriptor.getDescriptor();,if (rubyEnumDescriptorescriptor != null ) Descriptors.EnumDescriptor descriptor = rubyEnumDescriptorescriptor.getDescriptor();
RubyEnum.java,Descriptors.EnumDescriptor descriptor = rubyEnumDescriptorescriptor.getDescriptor();,if (rubyEnumDescriptorescriptor != null ) Descriptors.EnumDescriptor descriptor = rubyEnumDescriptorescriptor.getDescriptor();
RubyEnum.java,Descriptors.EnumValueDescriptor value = descriptor.findValueByName(name.asJavaString());,if (descriptor != null ) Descriptors.EnumValueDescriptor value = descriptor.findValueByName(name.asJavaString());
RubyEnumDescriptor.java,this.builder = DescriptorProtos.EnumDescriptorProto.newBuilder();,if (DescriptorProtos != null ) this.builder = DescriptorProtos.EnumDescriptorProto.newBuilder();
RubyFieldDescriptor.java,builder = DescriptorProtos.FieldDescriptorProto.newBuilder();,if (DescriptorProtos != null ) builder = DescriptorProtos.FieldDescriptorProto.newBuilder();
RubyFieldDescriptor.java,String labelName = value.asJavaString();,if (value != null ) String labelName = value.asJavaString();
RubyFieldDescriptor.java,this.label = context.runtime.newSymbol(labelName.toLowerCase());,if (context != null ) this.label = context.runtime.newSymbol(labelName.toLowerCase());
RubyFieldDescriptor.java,String nameStr = value.asJavaString();,if (value != null ) String nameStr = value.asJavaString();
RubyMessage.java,Descriptors.OneofDescriptor oneof = fieldDescriptor.getContainingOneof();,if (fieldDescriptor != null ) Descriptors.OneofDescriptor oneof = fieldDescriptor.getContainingOneof();
RubyMessage.java,String nameStr = fieldName.asJavaString();,if (fieldName != null ) String nameStr = fieldName.asJavaString();
RubyMessage.java,String nameStr = fieldName.asJavaString();,if (fieldName != null ) String nameStr = fieldName.asJavaString();
RubyMessage.java,Descriptors.EnumDescriptor enumDescriptor = fieldDescriptor.getEnumType();,if (fieldDescriptor != null ) Descriptors.EnumDescriptor enumDescriptor = fieldDescriptor.getEnumType();
RubyMessage.java,val = enumDescriptor.findValueByName(value.asJavaString());,if (enumDescriptor != null ) val = enumDescriptor.findValueByName(value.asJavaString());
RubyMessage.java,Descriptors.OneofDescriptor oneofDescriptor = fieldDescriptor.getContainingOneof();,if (fieldDescriptor != null ) Descriptors.OneofDescriptor oneofDescriptor = fieldDescriptor.getContainingOneof();
RubyMessage.java,RubyArray ary = value.convertToArray();,if (value != null ) RubyArray ary = value.convertToArray();
RubyMessage.java,Descriptors.OneofDescriptor oneofDescriptor = fieldDescriptor.getContainingOneof();,if (fieldDescriptor != null ) Descriptors.OneofDescriptor oneofDescriptor = fieldDescriptor.getContainingOneof();
RubyMessage.java,IRubyObject typeClass = context.runtime.getObject();,if (context != null ) IRubyObject typeClass = context.runtime.getObject();
RubyMessage.java,Descriptors.EnumDescriptor enumDescriptor = fieldDescriptor.getEnumType();,if (fieldDescriptor != null ) Descriptors.EnumDescriptor enumDescriptor = fieldDescriptor.getEnumType();
RubyMessage.java,ThreadContext context = getRuntime().getCurrentContext();,if (getRuntime() != null ) ThreadContext context = getRuntime().getCurrentContext();
RubyMessageBuilderContext.java,IRubyObject typeClass = runtime.getNil();,if (runtime != null ) IRubyObject typeClass = runtime.getNil();
RubyMessageBuilderContext.java,IRubyObject typeClass = context.runtime.getNil();,if (context != null ) IRubyObject typeClass = context.runtime.getNil();
RubyMessageBuilderContext.java,IRubyObject typeClass = context.runtime.getNil();,if (context != null ) IRubyObject typeClass = context.runtime.getNil();
RubyMessageBuilderContext.java,Binding binding = block.getBinding();,if (block != null ) Binding binding = block.getBinding();
RubyOneofDescriptor.java,builder = DescriptorProtos.OneofDescriptorProto.newBuilder();,if (DescriptorProtos != null ) builder = DescriptorProtos.OneofDescriptorProto.newBuilder();
RubyOneofDescriptor.java,this.name = context.runtime.newString(name.asJavaString());,if (context != null ) this.name = context.runtime.newString(name.asJavaString());
Utils.java,val = enumDescriptor.findValueByName(value.asJavaString());,if (enumDescriptor != null ) val = enumDescriptor.findValueByName(value.asJavaString());
TextFormat.java,boolean bBoolean = (boolean) b.getKey();,if (b != null ) boolean bBoolean = (boolean) b.getKey();
TextFormat.java,long bLong = (long) b.getKey();,if (b != null ) long bLong = (long) b.getKey();
TextFormat.java,boolean bBoolean = (boolean) b.getKey();,if (b != null ) boolean bBoolean = (boolean) b.getKey();
TextFormat.java,long bLong = (long) b.getKey();,if (b != null ) long bLong = (long) b.getKey();
TextFormat.java,boolean bBoolean = (boolean) b.getKey();,if (b != null ) boolean bBoolean = (boolean) b.getKey();
TextFormat.java,long bLong = (long) b.getKey();,if (b != null ) long bLong = (long) b.getKey();
ConformanceJava.java,testMessage = builder.build();,if (builder != null ) testMessage = builder.build();
TextFormat.java,Descriptor anyDescriptor = field.getMessageType();,if (field != null ) Descriptor anyDescriptor = field.getMessageType();
GeneratedMessageV3.java,MethodHandles.Lookup lookup = MethodHandles.publicLookup();,if (MethodHandles != null ) MethodHandles.Lookup lookup = MethodHandles.publicLookup();
GeneratedMessageV3.java,MethodHandles.Lookup lookup = MethodHandles.lookup();,if (MethodHandles != null ) MethodHandles.Lookup lookup = MethodHandles.lookup();
FieldMaskTreeTest.java,NestedTestAllTypes.Builder expected = NestedTestAllTypes.newBuilder();,if (NestedTestAllTypes != null ) NestedTestAllTypes.Builder expected = NestedTestAllTypes.newBuilder();
FieldSet.java,FieldSet<FieldDescriptorType> clone = FieldSet.newFieldSet();,if (FieldSet != null ) FieldSet<FieldDescriptorType> clone = FieldSet.newFieldSet();
FieldSet.java,FieldDescriptorType descriptor = entry.getKey();,if (entry != null ) FieldDescriptorType descriptor = entry.getKey();
FieldSet.java,FieldDescriptorType descriptor = entry.getKey();,if (entry != null ) FieldDescriptorType descriptor = entry.getKey();
FieldSet.java,FieldDescriptorType key = entry.getKey();,if (entry != null ) FieldDescriptorType key = entry.getKey();
FieldSet.java,final FieldDescriptorType descriptor = entry.getKey();,if (entry != null ) final FieldDescriptorType descriptor = entry.getKey();
FieldSet.java,final FieldDescriptorType descriptor = entry.getKey();,if (entry != null ) final FieldDescriptorType descriptor = entry.getKey();
FieldSet.java,final FieldDescriptorType descriptor = entry.getKey();,if (entry != null ) final FieldDescriptorType descriptor = entry.getKey();
FieldSet.java,final FieldDescriptorType descriptor = entry.getKey();,if (entry != null ) final FieldDescriptorType descriptor = entry.getKey();
GeneratedMessageV3.java,extensions = FieldSet.emptySet();,if (FieldSet != null ) extensions = FieldSet.emptySet();
GeneratedMessageV3.java,extensions = extensions.clone();,if (extensions != null ) extensions = extensions.clone();
GeneratedMessageV3.java,type = getMethod.getReturnType();,if (getMethod != null ) type = getMethod.getReturnType();
GeneratedMessageV3.java,type = getRepeatedMethod.getReturnType();,if (getRepeatedMethod != null ) type = getRepeatedMethod.getReturnType();
ExtensionRegistryLite.java,result = emptyRegistry = ExtensionRegistryFactory.createEmpty();,if (ExtensionRegistryFactory != null ) result = emptyRegistry = ExtensionRegistryFactory.createEmpty();
TextFormatTest.java,String javaText = TextFormat.printToString(TestUtil.getAllSet());,if (TextFormat != null ) String javaText = TextFormat.printToString(TestUtil.getAllSet());
TextFormatTest.java,String javaText = TextFormat.printToString(TestUtil.getAllSetBuilder());,if (TextFormat != null ) String javaText = TextFormat.printToString(TestUtil.getAllSetBuilder());
TextFormatTest.java,String javaText = TextFormat.printToString(TestUtil.getAllExtensionsSet());,if (TextFormat != null ) String javaText = TextFormat.printToString(TestUtil.getAllExtensionsSet());
JsonFormat.java,FieldDescriptor other = builder.getOneofFieldDescriptor(field.getContainingOneof());,if (builder != null ) FieldDescriptor other = builder.getOneofFieldDescriptor(field.getContainingOneof());
JsonFormatTest.java,TestOneof.Builder successBuilder = TestOneof.newBuilder();,if (TestOneof != null ) TestOneof.Builder successBuilder = TestOneof.newBuilder();
JsonFormatTest.java,TestOneof.Builder builder = TestOneof.newBuilder();,if (TestOneof != null ) TestOneof.Builder builder = TestOneof.newBuilder();
GeneratedMessageLite.java,protoHash = mine.hashCode();,if (mine != null ) protoHash = mine.hashCode();
GeneratedMessageLite.java,int size = mine.size();,if (mine != null ) int size = mine.size();
GeneratedMessageLite.java,int otherSize = other.size();,if (other != null ) int otherSize = other.size();
GeneratedMessageLite.java,int size = mine.size();,if (mine != null ) int size = mine.size();
GeneratedMessageLite.java,int otherSize = other.size();,if (other != null ) int otherSize = other.size();
GeneratedMessageLite.java,int size = mine.size();,if (mine != null ) int size = mine.size();
GeneratedMessageLite.java,int otherSize = other.size();,if (other != null ) int otherSize = other.size();
GeneratedMessageLite.java,int size = mine.size();,if (mine != null ) int size = mine.size();
GeneratedMessageLite.java,int otherSize = other.size();,if (other != null ) int otherSize = other.size();
GeneratedMessageLite.java,int size = mine.size();,if (mine != null ) int size = mine.size();
GeneratedMessageLite.java,int otherSize = other.size();,if (other != null ) int otherSize = other.size();
GeneratedMessageLite.java,int size = mine.size();,if (mine != null ) int size = mine.size();
GeneratedMessageLite.java,int otherSize = other.size();,if (other != null ) int otherSize = other.size();
GeneratedMessageLite.java,mine = mine.clone();,if (mine != null ) mine = mine.clone();
GeneratedMessageLite.java,mine = mine.mutableCopy();,if (mine != null ) mine = mine.mutableCopy();
TextFormat.java,value = subField.finish();,if (subField != null ) value = subField.finish();
UnknownFieldSetLiteTest.java,allFields = TestUtil.getAllSet();,if (TestUtil != null ) allFields = TestUtil.getAllSet();
UnknownFieldSetLiteTest.java,allFieldsData = allFields.toByteString();,if (allFields != null ) allFieldsData = allFields.toByteString();
UnknownFieldSetLiteTest.java,unknownFields = emptyMessage.getUnknownFields();,if (emptyMessage != null ) unknownFields = emptyMessage.getUnknownFields();
UnknownFieldSetLiteTest.java,UnknownFieldSet.Builder bizarroFields = UnknownFieldSet.newBuilder();,if (UnknownFieldSet != null ) UnknownFieldSet.Builder bizarroFields = UnknownFieldSet.newBuilder();
UnknownFieldSetLiteTest.java,UnknownFieldSetLite unknownFields = UnknownFieldSetLite.getDefaultInstance();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite unknownFields = UnknownFieldSetLite.getDefaultInstance();
UnknownFieldSetLiteTest.java,UnknownFieldSetLite instance = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite instance = UnknownFieldSetLite.newInstance();
UnknownFieldSetLiteTest.java,CodedInputStream input = CodedInputStream.newInstance(foo.toByteArray());,if (CodedInputStream != null ) CodedInputStream input = CodedInputStream.newInstance(foo.toByteArray());
UnknownFieldSetLiteTest.java,UnknownFieldSetLite instance = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite instance = UnknownFieldSetLite.newInstance();
UnknownFieldSetLiteTest.java,CodedInputStream input = CodedInputStream.newInstance(foo.toByteArray());,if (CodedInputStream != null ) CodedInputStream input = CodedInputStream.newInstance(foo.toByteArray());
UnknownFieldSetLiteTest.java,UnknownFieldSetLite instance = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite instance = UnknownFieldSetLite.newInstance();
UnknownFieldSetLiteTest.java,Foo fooDeserialized = Foo.parseFrom(foo.toByteArray());,if (Foo != null ) Foo fooDeserialized = Foo.parseFrom(foo.toByteArray());
UnknownFieldSetLiteTest.java,UnknownFieldSetLite emptyFieldSet = UnknownFieldSetLite.getDefaultInstance();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite emptyFieldSet = UnknownFieldSetLite.getDefaultInstance();
UnknownFieldSetLiteTest.java,UnknownFieldSetLite paddedFieldSet = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite paddedFieldSet = UnknownFieldSetLite.newInstance();
UnknownFieldSetLiteTest.java,UnknownFieldSetLite unknownFields = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite unknownFields = UnknownFieldSetLite.newInstance();
UnknownFieldSetLiteTest.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
UnknownFieldSetLiteTest.java,UnknownFieldSetLite builder = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite builder = UnknownFieldSetLite.newInstance();
UnknownFieldSetLiteTest.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
UnknownFieldSetLiteTest.java,UnknownFieldSetLite unknownFields = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite unknownFields = UnknownFieldSetLite.newInstance();
UnknownFieldSetLiteTest.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
UnknownFieldSetLiteTest.java,Foo copy = Foo.parseFrom(foo.toByteArray());,if (Foo != null ) Foo copy = Foo.parseFrom(foo.toByteArray());
UnknownFieldSetLiteTest.java,Foo secondCopy = Foo.parseFrom(foo.toByteArray());,if (Foo != null ) Foo secondCopy = Foo.parseFrom(foo.toByteArray());
UnknownFieldSetLiteTest.java,ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();,if (ExtensionRegistryLite != null ) ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();
UnknownFieldSetLiteTest.java,ByteString.Output byteStringOutput = ByteString.newOutput();,if (ByteString != null ) ByteString.Output byteStringOutput = ByteString.newOutput();
UnknownFieldSetLiteTest.java,ByteString.Output byteStringOutput = ByteString.newOutput();,if (ByteString != null ) ByteString.Output byteStringOutput = ByteString.newOutput();
UnknownFieldSetLiteTest.java,ByteString.Output byteStringOutput = ByteString.newOutput();,if (ByteString != null ) ByteString.Output byteStringOutput = ByteString.newOutput();
UnknownFieldSetLiteTest.java,UnknownFieldSetLite unknownFields = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite unknownFields = UnknownFieldSetLite.newInstance();
UnknownFieldSetLiteTest.java,TestAllTypesLite testAllTypes = TestAllTypesLite.getDefaultInstance();,if (TestAllTypesLite != null ) TestAllTypesLite testAllTypes = TestAllTypesLite.getDefaultInstance();
UnknownFieldSetLiteTest.java,testAllTypes = TestAllTypesLite.newBuilder().build();,if (TestAllTypesLite != null ) testAllTypes = TestAllTypesLite.newBuilder().build();
UnknownFieldSetLiteTest.java,ByteString data = emptyMessageLite.toByteString();,if (emptyMessageLite != null ) ByteString data = emptyMessageLite.toByteString();
UnknownFieldSetLiteTest.java,TestAllExtensions allExtensions = TestUtil.getAllExtensionsSet();,if (TestUtil != null ) TestAllExtensions allExtensions = TestUtil.getAllExtensionsSet();
UnknownFieldSetLiteTest.java,ByteString allExtensionsData = allExtensions.toByteString();,if (allExtensions != null ) ByteString allExtensionsData = allExtensions.toByteString();
UnknownFieldSetLiteTest.java,ByteString data = emptyMessageLite.toByteString();,if (emptyMessageLite != null ) ByteString data = emptyMessageLite.toByteString();
UnknownFieldSetLiteTest.java,"TestAllExtensions message = TestAllExtensions.parseFrom(data, TestUtil.getExtensionRegistry());","if (TestUtil != null ) TestAllExtensions message = TestAllExtensions.parseFrom(data, TestUtil.getExtensionRegistry());"
UnknownFieldSetLiteTest.java,TestPackedTypes allPackedFields = TestUtil.getPackedSet();,if (TestUtil != null ) TestPackedTypes allPackedFields = TestUtil.getPackedSet();
UnknownFieldSetLiteTest.java,ByteString allPackedData = allPackedFields.toByteString();,if (allPackedFields != null ) ByteString allPackedData = allPackedFields.toByteString();
UnknownFieldSetLiteTest.java,ByteString data = emptyMessageLite.toByteString();,if (emptyMessageLite != null ) ByteString data = emptyMessageLite.toByteString();
UnknownFieldSetLiteTest.java,"TestPackedTypes message = TestPackedTypes.parseFrom(data, TestUtil.getExtensionRegistry());","if (TestUtil != null ) TestPackedTypes message = TestPackedTypes.parseFrom(data, TestUtil.getExtensionRegistry());"
UnknownFieldSetLiteTest.java,TestPackedExtensions allPackedExtensions = TestUtil.getPackedExtensionsSet();,if (TestUtil != null ) TestPackedExtensions allPackedExtensions = TestUtil.getPackedExtensionsSet();
UnknownFieldSetLiteTest.java,ByteString allPackedExtensionsData = allPackedExtensions.toByteString();,if (allPackedExtensions != null ) ByteString allPackedExtensionsData = allPackedExtensions.toByteString();
UnknownFieldSetLiteTest.java,ByteString data = emptyMessageLite.toByteString();,if (emptyMessageLite != null ) ByteString data = emptyMessageLite.toByteString();
UnknownFieldSetLiteTest.java,ByteString data = emptyMessageLite.toByteString();,if (emptyMessageLite != null ) ByteString data = emptyMessageLite.toByteString();
UnknownFieldSetLiteTest.java,data = emptyMessageLite.toByteString();,if (emptyMessageLite != null ) data = emptyMessageLite.toByteString();
ArrayDecoders.java,this.extensionRegistry = ExtensionRegistryLite.getEmptyRegistry();,if (ExtensionRegistryLite != null ) this.extensionRegistry = ExtensionRegistryLite.getEmptyRegistry();
ArrayDecoders.java,Object result = schema.newInstance();,if (schema != null ) Object result = schema.newInstance();
ArrayDecoders.java,Object result = messageSchema.newInstance();,if (messageSchema != null ) Object result = messageSchema.newInstance();
ArrayDecoders.java,unknownFields = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) unknownFields = UnknownFieldSetLite.newInstance();
ArrayDecoders.java,final UnknownFieldSetLite child = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) final UnknownFieldSetLite child = UnknownFieldSetLite.newInstance();
BinaryReader.java,buffer = bytebuf.array();,if (bytebuf != null ) buffer = bytebuf.array();
BinaryReader.java,initialPos = pos = bytebuf.arrayOffset() + bytebuf.position();,if (bytebuf != null ) initialPos = pos = bytebuf.arrayOffset() + bytebuf.position();
BinaryReader.java,limit = bytebuf.arrayOffset() + bytebuf.limit();,if (bytebuf != null ) limit = bytebuf.arrayOffset() + bytebuf.limit();
BinaryReader.java,T message = schema.newInstance();,if (schema != null ) T message = schema.newInstance();
BinaryReader.java,T message = schema.newInstance();,if (schema != null ) T message = schema.newInstance();
BinaryWriter.java,this.buffer = allocatedBuffer.array();,if (allocatedBuffer != null ) this.buffer = allocatedBuffer.array();
BinaryWriter.java,int arrayOffset = allocatedBuffer.arrayOffset();,if (allocatedBuffer != null ) int arrayOffset = allocatedBuffer.arrayOffset();
BinaryWriter.java,this.limit = arrayOffset + allocatedBuffer.limit();,if (allocatedBuffer != null ) this.limit = arrayOffset + allocatedBuffer.limit();
BinaryWriter.java,this.offset = arrayOffset + allocatedBuffer.position();,if (allocatedBuffer != null ) this.offset = arrayOffset + allocatedBuffer.position();
BinaryWriter.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
BinaryWriter.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
BinaryWriter.java,this.buffer = allocatedBuffer.array();,if (allocatedBuffer != null ) this.buffer = allocatedBuffer.array();
BinaryWriter.java,int arrayOffset = allocatedBuffer.arrayOffset();,if (allocatedBuffer != null ) int arrayOffset = allocatedBuffer.arrayOffset();
BinaryWriter.java,this.limit = arrayOffset + allocatedBuffer.limit();,if (allocatedBuffer != null ) this.limit = arrayOffset + allocatedBuffer.limit();
BinaryWriter.java,this.offset = arrayOffset + allocatedBuffer.position();,if (allocatedBuffer != null ) this.offset = arrayOffset + allocatedBuffer.position();
BinaryWriter.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
BinaryWriter.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
BinaryWriter.java,ByteBuffer nioBuffer = allocatedBuffer.nioBuffer();,if (allocatedBuffer != null ) ByteBuffer nioBuffer = allocatedBuffer.nioBuffer();
BinaryWriter.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
BinaryWriter.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
BinaryWriter.java,ByteBuffer nioBuffer = allocatedBuffer.nioBuffer();,if (allocatedBuffer != null ) ByteBuffer nioBuffer = allocatedBuffer.nioBuffer();
BinaryWriter.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
BinaryWriter.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
CodedInputStreamReader.java,tag = input.readTag();,if (input != null ) tag = input.readTag();
CodedInputStreamReader.java,T message = schema.newInstance();,if (schema != null ) T message = schema.newInstance();
CodedInputStreamReader.java,T message = schema.newInstance();,if (schema != null ) T message = schema.newInstance();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
DescriptorMessageInfoFactory.java,Node child = nodeCache.get(field.getMessageType());,if (nodeCache != null ) Node child = nodeCache.get(field.getMessageType());
DescriptorMessageInfoFactory.java,child = dfs(field.getMessageType());,if (dfs(field != null ) child = dfs(field.getMessageType());
DescriptorMessageInfoFactory.java,Node node = stack.pop();,if (stack != null ) Node node = stack.pop();
DescriptorMessageInfoFactory.java,Node node = nodeCache.get(field.getMessageType());,if (nodeCache != null ) Node node = nodeCache.get(field.getMessageType());
DescriptorMessageInfoFactory.java,List<FieldDescriptor> fieldDescriptors = messageDescriptor.getFields();,if (messageDescriptor != null ) List<FieldDescriptor> fieldDescriptors = messageDescriptor.getFields();
DescriptorMessageInfoFactory.java,int number = fd.getNumber();,if (fd != null ) int number = fd.getNumber();
DescriptorMessageInfoFactory.java,List<FieldDescriptor> fieldDescriptors = messageDescriptor.getFields();,if (messageDescriptor != null ) List<FieldDescriptor> fieldDescriptors = messageDescriptor.getFields();
DescriptorMessageInfoFactory.java,"OneofInfo oneof = oneofState.getOneof(messageType, fd.getContainingOneof());","if (fd != null ) OneofInfo oneof = oneofState.getOneof(messageType, fd.getContainingOneof());"
DescriptorMessageInfoFactory.java,int index = desc.getIndex();,if (desc != null ) int index = desc.getIndex();
DescriptorMessageInfoFactory.java,String camelCase = snakeCaseToCamelCase(desc.getName());,if (snakeCaseToCamelCase(desc != null ) String camelCase = snakeCaseToCamelCase(desc.getName());
ExtensionRegistryLite.java,result = emptyRegistry = ExtensionRegistryFactory.createEmpty();,if (ExtensionRegistryFactory != null ) result = emptyRegistry = ExtensionRegistryFactory.createEmpty();
ExtensionSchemaFull.java,extensions = extensions.clone();,if (extensions != null ) extensions = extensions.clone();
ExtensionSchemaFull.java,int fieldNumber = extension.descriptor.getNumber();,if (extension != null ) int fieldNumber = extension.descriptor.getNumber();
ExtensionSchemaFull.java,value = reader.readDouble();,if (reader != null ) value = reader.readDouble();
ExtensionSchemaFull.java,value = reader.readFloat();,if (reader != null ) value = reader.readFloat();
ExtensionSchemaFull.java,value = reader.readBool();,if (reader != null ) value = reader.readBool();
ExtensionSchemaFull.java,value = reader.readBytes();,if (reader != null ) value = reader.readBytes();
ExtensionSchemaFull.java,value = reader.readString();,if (reader != null ) value = reader.readString();
ExtensionSchemaFull.java,FieldDescriptor descriptor = (FieldDescriptor) extension.getKey();,if (extension != null ) FieldDescriptor descriptor = (FieldDescriptor) extension.getKey();
ExtensionSchemaFull.java,FieldDescriptor descriptor = (FieldDescriptor) extension.getKey();,if (extension != null ) FieldDescriptor descriptor = (FieldDescriptor) extension.getKey();
ExtensionSchemaFull.java,List<EnumValueDescriptor> enumList = (List<EnumValueDescriptor>) extension.getValue();,if (extension != null ) List<EnumValueDescriptor> enumList = (List<EnumValueDescriptor>) extension.getValue();
ExtensionSchemaFull.java,Object value = extensionInfo.defaultInstance.newBuilderForType().buildPartial();,if (extensionInfo != null ) Object value = extensionInfo.defaultInstance.newBuilderForType().buildPartial();
ExtensionSchemaLite.java,int fieldNumber = extension.getNumber();,if (extension != null ) int fieldNumber = extension.getNumber();
ExtensionSchemaLite.java,value = reader.readDouble();,if (reader != null ) value = reader.readDouble();
ExtensionSchemaLite.java,value = reader.readFloat();,if (reader != null ) value = reader.readFloat();
ExtensionSchemaLite.java,value = reader.readBool();,if (reader != null ) value = reader.readBool();
ExtensionSchemaLite.java,value = reader.readBytes();,if (reader != null ) value = reader.readBytes();
ExtensionSchemaLite.java,value = reader.readString();,if (reader != null ) value = reader.readString();
FieldType.java,elementType = javaType.getBoxedType();,if (javaType != null ) elementType = javaType.getBoxedType();
FieldType.java,elementType = javaType.getBoxedType();,if (javaType != null ) elementType = javaType.getBoxedType();
FieldType.java,Type genericType = field.getGenericType();,if (field != null ) Type genericType = field.getGenericType();
FieldType.java,Type[] genericInterfaces = clazz.getGenericInterfaces();,if (clazz != null ) Type[] genericInterfaces = clazz.getGenericInterfaces();
FieldType.java,Type type = clazz.getGenericSuperclass();,if (clazz != null ) Type type = clazz.getGenericSuperclass();
FieldType.java,Type[] superArgs = parameterizedType.getActualTypeArguments();,if (parameterizedType != null ) Type[] superArgs = parameterizedType.getActualTypeArguments();
FieldType.java,clazz = clazz.getSuperclass();,if (clazz != null ) clazz = clazz.getSuperclass();
ListFieldSchema.java,int size = mine.size();,if (mine != null ) int size = mine.size();
ListFieldSchema.java,int otherSize = other.size();,if (other != null ) int otherSize = other.size();
ListFieldSchema.java,int size = list.size();,if (list != null ) int size = list.size();
ListFieldSchema.java,int size = mine.size();,if (mine != null ) int size = mine.size();
ListFieldSchema.java,int otherSize = other.size();,if (other != null ) int otherSize = other.size();
MapFieldSchemaLite.java,mine = mine.mutableCopy();,if (mine != null ) mine = mine.mutableCopy();
MessageSchema.java,String info = messageInfo.getStringInfo();,if (messageInfo != null ) String info = messageInfo.getStringInfo();
MessageSchema.java,final int length = info.length();,if (info != null ) final int length = info.length();
MessageSchema.java,FieldInfo[] fis = messageInfo.getFields();,if (messageInfo != null ) FieldInfo[] fis = messageInfo.getFields();
MessageSchema.java,int[] checkInitialized = messageInfo.getCheckInitialized();,if (messageInfo != null ) int[] checkInitialized = messageInfo.getCheckInitialized();
MessageSchema.java,final int fieldNumber = fi.getFieldNumber();,if (fi != null ) final int fieldNumber = fi.getFieldNumber();
MessageSchema.java,OneofInfo oneof = fi.getOneof();,if (fi != null ) OneofInfo oneof = fi.getOneof();
MessageSchema.java,FieldType type = fi.getType();,if (fi != null ) FieldType type = fi.getType();
MessageSchema.java,typeId = type.id();,if (type != null ) typeId = type.id();
MessageSchema.java,presenceMaskShift = Integer.numberOfTrailingZeros(fi.getPresenceMask());,if (Integer != null ) presenceMaskShift = Integer.numberOfTrailingZeros(fi.getPresenceMask());
MessageSchema.java,buffer[bufferIndex] = fi.getFieldNumber();,if (fi != null ) buffer[bufferIndex] = fi.getFieldNumber();
MessageSchema.java,Object messageFieldClass = fi.getMessageFieldClass();,if (fi != null ) Object messageFieldClass = fi.getMessageFieldClass();
MessageSchema.java,protoHash = submessage.hashCode();,if (submessage != null ) protoHash = submessage.hashCode();
MessageSchema.java,protoHash = submessage.hashCode();,if (submessage != null ) protoHash = submessage.hashCode();
MessageSchema.java,size += extensionSchema.getExtensions(message).getSerializedSize();,if (extensionSchema != null ) size += extensionSchema.getExtensions(message).getSerializedSize();
MessageSchema.java,extensionIterator = extensions.iterator();,if (extensions != null ) extensionIterator = extensions.iterator();
MessageSchema.java,nextExtension = extensionIterator.next();,if (extensionIterator != null ) nextExtension = extensionIterator.next();
MessageSchema.java,extensionIterator = extensions.iterator();,if (extensions != null ) extensionIterator = extensions.iterator();
MessageSchema.java,nextExtension = extensionIterator.next();,if (extensionIterator != null ) nextExtension = extensionIterator.next();
MessageSchema.java,extensionIterator = extensions.descendingIterator();,if (extensions != null ) extensionIterator = extensions.descendingIterator();
MessageSchema.java,nextExtension = extensionIterator.next();,if (extensionIterator != null ) nextExtension = extensionIterator.next();
MessageSchema.java,final int number = reader.getFieldNumber();,if (reader != null ) final int number = reader.getFieldNumber();
MessageSchema.java,int enumValue = reader.readEnum();,if (reader != null ) int enumValue = reader.readEnum();
MessageSchema.java,int enumValue = reader.readEnum();,if (reader != null ) int enumValue = reader.readEnum();
MessageSchema.java,unknownFields = unknownFieldSchema.newBuilder();,if (unknownFieldSchema != null ) unknownFields = unknownFieldSchema.newBuilder();
MessageSchema.java,unknownFields = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) unknownFields = UnknownFieldSetLite.newInstance();
MessageSchema.java,final int size = list.size();,if (list != null ) final int size = list.size();
MessageSchema.java,final int size = list.size();,if (list != null ) final int size = list.size();
MessageSchema.java,final int size = list.size();,if (list != null ) final int size = list.size();
MessageSchema.java,unknownFields = unknownFieldSchema.newBuilder();,if (unknownFieldSchema != null ) unknownFields = unknownFieldSchema.newBuilder();
MessageSchema.java,CodedOutputStream codedOutput = codedBuilder.getCodedOutput();,if (codedBuilder != null ) CodedOutputStream codedOutput = codedBuilder.getCodedOutput();
MessageSetSchema.java,int hashCode = unknownFieldSchema.getFromMessage(message).hashCode();,if (unknownFieldSchema != null ) int hashCode = unknownFieldSchema.getFromMessage(message).hashCode();
MessageSetSchema.java,unknownFields = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) unknownFields = UnknownFieldSetLite.newInstance();
MessageSetSchema.java,final int number = reader.getFieldNumber();,if (reader != null ) final int number = reader.getFieldNumber();
MessageSetSchema.java,int startTag = reader.getTag();,if (reader != null ) int startTag = reader.getTag();
MessageSetSchema.java,final int number = reader.getFieldNumber();,if (reader != null ) final int number = reader.getFieldNumber();
MessageSetSchema.java,final int tag = reader.getTag();,if (reader != null ) final int tag = reader.getTag();
MessageSetSchema.java,rawBytes = reader.readBytes();,if (reader != null ) rawBytes = reader.readBytes();
MessageSetSchema.java,size += extensionSchema.getExtensions(message).getMessageSetSerializedSize();,if (extensionSchema != null ) size += extensionSchema.getExtensions(message).getMessageSetSerializedSize();
ProtobufLists.java,int size = list.size();,if (list != null ) int size = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,Field[] fields = holder.getDeclaredFields();,if (holder != null ) Field[] fields = holder.getDeclaredFields();
SchemaUtil.java,int size = enumList.size();,if (enumList != null ) int size = enumList.size();
SchemaUtil.java,int enumValue = it.next();,if (it != null ) int enumValue = it.next();
SchemaUtil.java,int size = enumList.size();,if (enumList != null ) int size = enumList.size();
SchemaUtil.java,int enumValue = it.next();,if (it != null ) int enumValue = it.next();
SchemaUtil.java,unknownFields = unknownFieldSchema.newBuilder();,if (unknownFieldSchema != null ) unknownFields = unknownFieldSchema.newBuilder();
SmallSortedMap.java,this.overflowEntriesDescending = Collections.emptyMap();,if (Collections != null ) this.overflowEntriesDescending = Collections.emptyMap();
SmallSortedMap.java,private int pos = entryList.size();,if (entryList != null ) private int pos = entryList.size();
SmallSortedMap.java,lazyOverflowIterator = overflowEntriesDescending.entrySet().iterator();,if (overflowEntriesDescending != null ) lazyOverflowIterator = overflowEntriesDescending.entrySet().iterator();
TextFormat.java,value = subField.finish();,if (subField != null ) value = subField.finish();
UnknownFieldSchema.java,int tag = reader.getTag();,if (reader != null ) int tag = reader.getTag();
UnknownFieldSet.java,ListIterator<ByteString> iter = lengthDelimited.listIterator(lengthDelimited.size());,if (lengthDelimited != null ) ListIterator<ByteString> iter = lengthDelimited.listIterator(lengthDelimited.size());
UnknownFieldSetLiteSchema.java,unknownFields = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) unknownFields = UnknownFieldSetLite.newInstance();
AbstractProto2LiteSchemaTest.java,byte[] data = output.toByteArray();,if (output != null ) byte[] data = output.toByteArray();
AbstractProto2LiteSchemaTest.java,byte[] serializedBytes = expectedMessage.toByteArray();,if (expectedMessage != null ) byte[] serializedBytes = expectedMessage.toByteArray();
AbstractProto2LiteSchemaTest.java,UnknownFieldSetLite unknowns = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite unknowns = UnknownFieldSetLite.newInstance();
AbstractProto2LiteSchemaTest.java,CodedOutputStream packedOut = packedBuilder.getCodedOutput();,if (packedBuilder != null ) CodedOutputStream packedOut = packedBuilder.getCodedOutput();
AbstractProto2LiteSchemaTest.java,int size = unknowns.getSerializedSize();,if (unknowns != null ) int size = unknowns.getSerializedSize();
AbstractProto2SchemaTest.java,byte[] data = output.toByteArray();,if (output != null ) byte[] data = output.toByteArray();
AbstractProto2SchemaTest.java,byte[] serializedBytes = expectedMessage.toByteArray();,if (expectedMessage != null ) byte[] serializedBytes = expectedMessage.toByteArray();
AbstractProto2SchemaTest.java,UnknownFieldSetLite unknowns = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite unknowns = UnknownFieldSetLite.newInstance();
AbstractProto2SchemaTest.java,CodedOutputStream packedOut = packedBuilder.getCodedOutput();,if (packedBuilder != null ) CodedOutputStream packedOut = packedBuilder.getCodedOutput();
AbstractProto2SchemaTest.java,int size = unknowns.getSerializedSize();,if (unknowns != null ) int size = unknowns.getSerializedSize();
AbstractProto3LiteSchemaTest.java,byte[] data = output.toByteArray();,if (output != null ) byte[] data = output.toByteArray();
AbstractProto3SchemaTest.java,byte[] data = output.toByteArray();,if (output != null ) byte[] data = output.toByteArray();
AbstractSchemaTest.java,T newMsg = schema.newInstance();,if (schema != null ) T newMsg = schema.newInstance();
AbstractSchemaTest.java,T message = schema.newInstance();,if (schema != null ) T message = schema.newInstance();
AbstractSchemaTest.java,M newMsg = schema.newInstance();,if (schema != null ) M newMsg = schema.newInstance();
AbstractSchemaTest.java,M newMsg = schema.newInstance();,if (schema != null ) M newMsg = schema.newInstance();
ArrayDecodersTest.java,ByteString.Output byteStringOutput = ByteString.newOutput();,if (ByteString != null ) ByteString.Output byteStringOutput = ByteString.newOutput();
BinaryProtocolTest.java,byte[] expectedBytes = expected.toByteArray();,if (expected != null ) byte[] expectedBytes = expected.toByteArray();
BinaryProtocolTest.java,byte[] expectedBytes = expected.toByteArray();,if (expected != null ) byte[] expectedBytes = expected.toByteArray();
CachedFieldSizeTest.java,TestCachedFieldSizeMessage.Builder builder = TestCachedFieldSizeMessage.newBuilder();,if (TestCachedFieldSizeMessage != null ) TestCachedFieldSizeMessage.Builder builder = TestCachedFieldSizeMessage.newBuilder();
CachedFieldSizeTest.java,TestCachedFieldSizeMessage message = builder.build();,if (builder != null ) TestCachedFieldSizeMessage message = builder.build();
CodedAdapterTest.java,byte[] expectedBytes = expected.toByteArray();,if (expected != null ) byte[] expectedBytes = expected.toByteArray();
CodedAdapterTest.java,byte[] expectedBytes = expected.toByteArray();,if (expected != null ) byte[] expectedBytes = expected.toByteArray();
CodedAdapterTest.java,T msg = schema.newInstance();,if (schema != null ) T msg = schema.newInstance();
CodedInputStreamTest.java,ByteString byteString = codedInputStream.readBytes();,if (codedInputStream != null ) ByteString byteString = codedInputStream.readBytes();
CodedInputStreamTest.java,ByteBuffer byteBuffer = codedInputStream.readByteBuffer();,if (codedInputStream != null ) ByteBuffer byteBuffer = codedInputStream.readByteBuffer();
CodedInputStreamTest.java,byte[] byteArray = codedInputStream.readByteArray();,if (codedInputStream != null ) byte[] byteArray = codedInputStream.readByteArray();
ExperimentalSerializationUtil.java,BinaryWriter writer = BinaryWriter.newHeapInstance(BufferAllocator.unpooled());,if (BinaryWriter != null ) BinaryWriter writer = BinaryWriter.newHeapInstance(BufferAllocator.unpooled());
ExperimentalSerializationUtil.java,Queue<AllocatedBuffer> buffers = writer.complete();,if (writer != null ) Queue<AllocatedBuffer> buffers = writer.complete();
ExperimentalSerializationUtil.java,AllocatedBuffer buffer = buffers.poll();,if (buffers != null ) AllocatedBuffer buffer = buffers.poll();
ExperimentalSerializationUtil.java,int length = buffer.limit() - buffer.position();,if (buffer != null ) int length = buffer.limit() - buffer.position();
ExperimentalSerializationUtil.java,T msg = schema.newInstance();,if (schema != null ) T msg = schema.newInstance();
ExperimentalSerializationUtil.java,T msg = schema.newInstance();,if (schema != null ) T msg = schema.newInstance();
ExperimentalTestDataProvider.java,value = RANDOM.nextDouble();,if (RANDOM != null ) value = RANDOM.nextDouble();
ExperimentalTestDataProvider.java,value = RANDOM.nextFloat();,if (RANDOM != null ) value = RANDOM.nextFloat();
MapLiteTest.java,TestMap.Builder usingMutableMapBuilder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder usingMutableMapBuilder = TestMap.newBuilder();
MapLiteTest.java,TestMap usingMutableMap = usingMutableMapBuilder.build();,if (usingMutableMapBuilder != null ) TestMap usingMutableMap = usingMutableMapBuilder.build();
MapLiteTest.java,TestMap.Builder usingAccessorsBuilder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder usingAccessorsBuilder = TestMap.newBuilder();
MapLiteTest.java,TestMap usingAccessors = usingAccessorsBuilder.build();,if (usingAccessorsBuilder != null ) TestMap usingAccessors = usingAccessorsBuilder.build();
MapLiteTest.java,TestMap.Builder mapBuilder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder mapBuilder = TestMap.newBuilder();
MapLiteTest.java,TestMap map = mapBuilder.build();,if (mapBuilder != null ) TestMap map = mapBuilder.build();
MapLiteTest.java,mapBuilder = map.toBuilder();,if (map != null ) mapBuilder = map.toBuilder();
MapLiteTest.java,map = mapBuilder.build();,if (mapBuilder != null ) map = mapBuilder.build();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapLiteTest.java,message = builder.build();,if (builder != null ) message = builder.build();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapLiteTest.java,builder = message.toBuilder();,if (message != null ) builder = message.toBuilder();
MapLiteTest.java,message = builder.build();,if (builder != null ) message = builder.build();
MapLiteTest.java,builder = message.toBuilder();,if (message != null ) builder = message.toBuilder();
MapLiteTest.java,message = builder.build();,if (builder != null ) message = builder.build();
MapLiteTest.java,builder = message.toBuilder();,if (message != null ) builder = message.toBuilder();
MapLiteTest.java,message = builder.build();,if (builder != null ) message = builder.build();
MapLiteTest.java,TestMap.Builder sourceBuilder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder sourceBuilder = TestMap.newBuilder();
MapLiteTest.java,TestMap source = sourceBuilder.build();,if (sourceBuilder != null ) TestMap source = sourceBuilder.build();
MapLiteTest.java,TestMap.Builder destination = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder destination = TestMap.newBuilder();
MapLiteTest.java,TestMap source = sourceBuilder.build();,if (sourceBuilder != null ) TestMap source = sourceBuilder.build();
MapLiteTest.java,TestMap.Builder destinationBuilder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder destinationBuilder = TestMap.newBuilder();
MapLiteTest.java,TestMap destination = destinationBuilder.build();,if (destinationBuilder != null ) TestMap destination = destinationBuilder.build();
MapLiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapLiteTest.java,builder = message.toBuilder();,if (message != null ) builder = message.toBuilder();
MapLiteTest.java,message = builder.build();,if (builder != null ) message = builder.build();
MapLiteTest.java,builder = message.toBuilder();,if (message != null ) builder = message.toBuilder();
MapLiteTest.java,message = builder.build();,if (builder != null ) message = builder.build();
MapLiteTest.java,map = (TestMap) expected.getUnfinishedMessage();,if (expected != null ) map = (TestMap) expected.getUnfinishedMessage();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapLiteTest.java,TestMap.Builder other = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder other = TestMap.newBuilder();
MapLiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapLiteTest.java,message = builder.build();,if (builder != null ) message = builder.build();
MapLiteTest.java,message = TestMap.parseFrom(message.toByteString());,if (TestMap != null ) message = TestMap.parseFrom(message.toByteString());
MapLiteTest.java,builder = message.toBuilder();,if (message != null ) builder = message.toBuilder();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
PackedFieldTest.java,CodedInputStream in = CodedInputStream.newInstance(message.toByteArray());,if (CodedInputStream != null ) CodedInputStream in = CodedInputStream.newInstance(message.toByteArray());
PackedFieldTest.java,int tag = in.readTag();,if (in != null ) int tag = in.readTag();
ParserLiteTest.java,Parser<MessageLite> parser = (Parser<MessageLite>) message.getParserForType();,if (message != null ) Parser<MessageLite> parser = (Parser<MessageLite>) message.getParserForType();
ParserLiteTest.java,TestPackedExtensionsLite packedMessage = TestUtilLite.getLitePackedExtensionsSet();,if (TestUtilLite != null ) TestPackedExtensionsLite packedMessage = TestUtilLite.getLitePackedExtensionsSet();
ParserLiteTest.java,InputStream input = new ByteArrayInputStream(output.toByteArray());,if (ByteArrayInputStream(output != null ) InputStream input = new ByteArrayInputStream(output.toByteArray());
ParserLiteTest.java,TestAllTypesLite.Builder builder = TestAllTypesLite.newBuilder();,if (TestAllTypesLite != null ) TestAllTypesLite.Builder builder = TestAllTypesLite.newBuilder();
ParserLiteTest.java,ExtensionRegistryLite registry = ExtensionRegistryLite.newInstance();,if (ExtensionRegistryLite != null ) ExtensionRegistryLite registry = ExtensionRegistryLite.newInstance();
Proto2ExtensionLookupSchemaTest.java,extensionRegistry = ExtensionRegistry.newInstance();,if (ExtensionRegistry != null ) extensionRegistry = ExtensionRegistry.newInstance();
Proto2ExtensionLookupSchemaTest.java,UnknownFieldSetLite unknowns = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite unknowns = UnknownFieldSetLite.newInstance();
Proto2ExtensionLookupSchemaTest.java,CodedOutputStream packedOut = packedBuilder.getCodedOutput();,if (packedBuilder != null ) CodedOutputStream packedOut = packedBuilder.getCodedOutput();
Proto2ExtensionLookupSchemaTest.java,int size = unknowns.getSerializedSize();,if (unknowns != null ) int size = unknowns.getSerializedSize();
Proto2MessageInfoFactory.java,StructuralMessageInfo.Builder builder = StructuralMessageInfo.newBuilder();,if (StructuralMessageInfo != null ) StructuralMessageInfo.Builder builder = StructuralMessageInfo.newBuilder();
Proto2UnknownEnumValueTest.java,UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();,if (UnknownFieldSet != null ) UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
Proto2UnknownEnumValueTest.java,UnknownFieldSet unknown = message.getUnknownFields();,if (message != null ) UnknownFieldSet unknown = message.getUnknownFields();
Proto2UnknownEnumValueTest.java,ExtensionRegistry registry = ExtensionRegistry.newInstance();,if (ExtensionRegistry != null ) ExtensionRegistry registry = ExtensionRegistry.newInstance();
Proto2UnknownEnumValueTest.java,UnknownFieldSet unknown = message.getUnknownFields();,if (message != null ) UnknownFieldSet unknown = message.getUnknownFields();
Proto3MessageInfoFactory.java,StructuralMessageInfo.Builder builder = StructuralMessageInfo.newBuilder();,if (StructuralMessageInfo != null ) StructuralMessageInfo.Builder builder = StructuralMessageInfo.newBuilder();
Proto3MessageLiteInfoFactory.java,StructuralMessageInfo.Builder builder = StructuralMessageInfo.newBuilder();,if (StructuralMessageInfo != null ) StructuralMessageInfo.Builder builder = StructuralMessageInfo.newBuilder();
TestSchemas.java,Protobuf protobuf = Protobuf.getInstance();,if (Protobuf != null ) Protobuf protobuf = Protobuf.getInstance();
TestSchemas.java,Protobuf protobuf = Protobuf.getInstance();,if (Protobuf != null ) Protobuf protobuf = Protobuf.getInstance();
TestSchemasLite.java,Protobuf protobuf = Protobuf.getInstance();,if (Protobuf != null ) Protobuf protobuf = Protobuf.getInstance();
TestSchemasLite.java,Protobuf protobuf = Protobuf.getInstance();,if (Protobuf != null ) Protobuf protobuf = Protobuf.getInstance();
TextFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TextFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
Utf8Utils.java,strings[i] = sb.toString();,if (sb != null ) strings[i] = sb.toString();
WireFormatLiteTest.java,TestAllExtensionsLite message = TestUtilLite.getAllLiteExtensionsSet();,if (TestUtilLite != null ) TestAllExtensionsLite message = TestUtilLite.getAllLiteExtensionsSet();
WireFormatLiteTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatLiteTest.java,TestPackedExtensionsLite message = TestUtilLite.getLitePackedExtensionsSet();,if (TestUtilLite != null ) TestPackedExtensionsLite message = TestUtilLite.getLitePackedExtensionsSet();
WireFormatLiteTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatLiteTest.java,TestAllTypes message = TestUtil.getAllSet();,if (TestUtil != null ) TestAllTypes message = TestUtil.getAllSet();
WireFormatLiteTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatLiteTest.java,ExtensionRegistryLite registryLite = TestUtilLite.getExtensionRegistryLite();,if (TestUtilLite != null ) ExtensionRegistryLite registryLite = TestUtilLite.getExtensionRegistryLite();
WireFormatLiteTest.java,TestPackedExtensionsLite message = TestUtilLite.getLitePackedExtensionsSet();,if (TestUtilLite != null ) TestPackedExtensionsLite message = TestUtilLite.getLitePackedExtensionsSet();
WireFormatLiteTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatLiteTest.java,ExtensionRegistryLite registry = TestUtilLite.getExtensionRegistryLite();,if (TestUtilLite != null ) ExtensionRegistryLite registry = TestUtilLite.getExtensionRegistryLite();
WireFormatLiteTest.java,TestAllTypes message = TestUtil.getAllSet();,if (TestUtil != null ) TestAllTypes message = TestUtil.getAllSet();
WireFormatLiteTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatLiteTest.java,TestPackedTypes message = TestUtil.getPackedSet();,if (TestUtil != null ) TestPackedTypes message = TestUtil.getPackedSet();
WireFormatLiteTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatLiteTest.java,TestAllExtensions message = TestUtil.getAllExtensionsSet();,if (TestUtil != null ) TestAllExtensions message = TestUtil.getAllExtensionsSet();
WireFormatLiteTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatLiteTest.java,TestPackedExtensions message = TestUtil.getPackedExtensionsSet();,if (TestUtil != null ) TestPackedExtensions message = TestUtil.getPackedExtensionsSet();
WireFormatLiteTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatLiteTest.java,TestPackedTypes message = TestUtil.getPackedSet();,if (TestUtil != null ) TestPackedTypes message = TestUtil.getPackedSet();
WireFormatLiteTest.java,TestAllTypes message = TestUtil.getAllSet();,if (TestUtil != null ) TestAllTypes message = TestUtil.getAllSet();
WireFormatLiteTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatLiteTest.java,ExtensionRegistryLite registry = TestUtil.getExtensionRegistry();,if (TestUtil != null ) ExtensionRegistryLite registry = TestUtil.getExtensionRegistry();
WireFormatLiteTest.java,TestPackedExtensions message = TestUtil.getPackedExtensionsSet();,if (TestUtil != null ) TestPackedExtensions message = TestUtil.getPackedExtensionsSet();
WireFormatLiteTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatLiteTest.java,ExtensionRegistryLite registry = TestUtil.getExtensionRegistry();,if (TestUtil != null ) ExtensionRegistryLite registry = TestUtil.getExtensionRegistry();
WireFormatLiteTest.java,ByteArrayInputStream input = new ByteArrayInputStream(output.toByteArray());,if (ByteArrayInputStream(output != null ) ByteArrayInputStream input = new ByteArrayInputStream(output.toByteArray());
WireFormatLiteTest.java,ExtensionRegistryLite result = ExtensionRegistryLite.newInstance();,if (ExtensionRegistryLite != null ) ExtensionRegistryLite result = ExtensionRegistryLite.newInstance();
WireFormatLiteTest.java,ExtensionRegistryLite result = ExtensionRegistryLite.newInstance();,if (ExtensionRegistryLite != null ) ExtensionRegistryLite result = ExtensionRegistryLite.newInstance();
WireFormatLiteTest.java,byte[] messageSetBytes = byteArrayOutputStream.toByteArray();,if (byteArrayOutputStream != null ) byte[] messageSetBytes = byteArrayOutputStream.toByteArray();
WireFormatLiteTest.java,ByteString data = messageSet.toByteString();,if (messageSet != null ) ByteString data = messageSet.toByteString();
WireFormatLiteTest.java,ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();,if (ExtensionRegistryLite != null ) ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();
WireFormatLiteTest.java,ByteString data = raw.toByteString();,if (raw != null ) ByteString data = raw.toByteString();
WireFormatLiteTest.java,ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();,if (ExtensionRegistryLite != null ) ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();
WireFormatLiteTest.java,ByteString data = raw.toByteString();,if (raw != null ) ByteString data = raw.toByteString();
WireFormatLiteTest.java,ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();,if (ExtensionRegistryLite != null ) ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();
WireFormatLiteTest.java,ByteString data = raw.toByteString();,if (raw != null ) ByteString data = raw.toByteString();
WireFormatLiteTest.java,ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();,if (ExtensionRegistryLite != null ) ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();
WireFormatLiteTest.java,ByteString.CodedBuilder out = ByteString.newCodedBuilder(raw.getSerializedSize());,if (ByteString != null ) ByteString.CodedBuilder out = ByteString.newCodedBuilder(raw.getSerializedSize());
WireFormatLiteTest.java,CodedOutputStream output = out.getCodedOutput();,if (out != null ) CodedOutputStream output = out.getCodedOutput();
WireFormatLiteTest.java,ByteString data = out.build();,if (out != null ) ByteString data = out.build();
WireFormatLiteTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatLiteTest.java,ByteString rawBytes = source.toByteString();,if (source != null ) ByteString rawBytes = source.toByteString();
WireFormatLiteTest.java,byte[] data = output.toByteArray();,if (output != null ) byte[] data = output.toByteArray();
WireFormatLiteTest.java,TestPackedTypes all = TestUtil.getPackedSet();,if (TestUtil != null ) TestPackedTypes all = TestUtil.getPackedSet();
WireFormatLiteTest.java,byte[] data = message.toByteArray();,if (message != null ) byte[] data = message.toByteArray();
WireFormatLiteTest.java,TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());,if (TestAllTypes != null ) TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());
WireFormatLiteTest.java,TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());,if (TestAllTypes != null ) TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());
WireFormatLiteTest.java,TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());,if (TestAllTypes != null ) TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());
WireFormatLiteTest.java,TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());,if (TestAllTypes != null ) TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());
WireFormatLiteTest.java,TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());,if (TestAllTypes != null ) TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());
WireFormatLiteTest.java,TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());,if (TestAllTypes != null ) TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());
WireFormatLiteTest.java,TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());,if (TestAllTypes != null ) TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());
WireFormatLiteTest.java,byte[] data = output.toByteArray();,if (output != null ) byte[] data = output.toByteArray();
WireFormatLiteTest.java,RawMessageSet raw = RawMessageSet.parseFrom(parsed.toByteArray());,if (RawMessageSet != null ) RawMessageSet raw = RawMessageSet.parseFrom(parsed.toByteArray());
WireFormatLiteTest.java,TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());,if (TestAllTypes != null ) TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());
WireFormatLiteTest.java,TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());,if (TestAllTypes != null ) TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());
WireFormatLiteTest.java,TestMap actual = TestMap.parseFrom(parsed.toByteArray());,if (TestMap != null ) TestMap actual = TestMap.parseFrom(parsed.toByteArray());
WireFormatLiteTest.java,ExtensionRegistryLite extensionRegistry = TestUtilLite.getExtensionRegistryLite();,if (TestUtilLite != null ) ExtensionRegistryLite extensionRegistry = TestUtilLite.getExtensionRegistryLite();
WireFormatLiteTest.java,TestMap parsed = TestMap.parseFrom(message.toByteArray());,if (TestMap != null ) TestMap parsed = TestMap.parseFrom(message.toByteArray());
WireFormatLiteTest.java,byte[] data = TestUtil.getAllSet().toByteArray();,if (TestUtil != null ) byte[] data = TestUtil.getAllSet().toByteArray();
WrappersLiteOfMethodTest.java,TopLevelMessage.Builder builder = TopLevelMessage.newBuilder();,if (TopLevelMessage != null ) TopLevelMessage.Builder builder = TopLevelMessage.newBuilder();
WrappersLiteOfMethodTest.java,TopLevelMessage message = builder.build();,if (builder != null ) TopLevelMessage message = builder.build();
WrappersLiteOfMethodTest.java,assertTrue(true == message.getFieldBool().getValue());,if (message != null ) assertTrue(true == message.getFieldBool().getValue());
WrappersOfMethodTest.java,TopLevelMessage.Builder builder = TopLevelMessage.newBuilder();,if (TopLevelMessage != null ) TopLevelMessage.Builder builder = TopLevelMessage.newBuilder();
WrappersOfMethodTest.java,TopLevelMessage message = builder.build();,if (builder != null ) TopLevelMessage message = builder.build();
WrappersOfMethodTest.java,assertTrue(true == message.getFieldBool().getValue());,if (message != null ) assertTrue(true == message.getFieldBool().getValue());
Proto2MessageLiteInfoFactory.java,StructuralMessageInfo.Builder builder = StructuralMessageInfo.newBuilder();,if (StructuralMessageInfo != null ) StructuralMessageInfo.Builder builder = StructuralMessageInfo.newBuilder();
JsonFormatTest.java,TestOneof.Builder successBuilder = TestOneof.newBuilder();,if (TestOneof != null ) TestOneof.Builder successBuilder = TestOneof.newBuilder();
JsonFormatTest.java,TestOneof.Builder builder = TestOneof.newBuilder();,if (TestOneof != null ) TestOneof.Builder builder = TestOneof.newBuilder();
GeneratedMessageLite.java,protoHash = mine.hashCode();,if (mine != null ) protoHash = mine.hashCode();
GeneratedMessageLite.java,int size = mine.size();,if (mine != null ) int size = mine.size();
GeneratedMessageLite.java,int otherSize = other.size();,if (other != null ) int otherSize = other.size();
GeneratedMessageLite.java,int size = mine.size();,if (mine != null ) int size = mine.size();
GeneratedMessageLite.java,int otherSize = other.size();,if (other != null ) int otherSize = other.size();
GeneratedMessageLite.java,int size = mine.size();,if (mine != null ) int size = mine.size();
GeneratedMessageLite.java,int otherSize = other.size();,if (other != null ) int otherSize = other.size();
GeneratedMessageLite.java,int size = mine.size();,if (mine != null ) int size = mine.size();
GeneratedMessageLite.java,int otherSize = other.size();,if (other != null ) int otherSize = other.size();
GeneratedMessageLite.java,int size = mine.size();,if (mine != null ) int size = mine.size();
GeneratedMessageLite.java,int otherSize = other.size();,if (other != null ) int otherSize = other.size();
GeneratedMessageLite.java,int size = mine.size();,if (mine != null ) int size = mine.size();
GeneratedMessageLite.java,int otherSize = other.size();,if (other != null ) int otherSize = other.size();
GeneratedMessageLite.java,mine = mine.clone();,if (mine != null ) mine = mine.clone();
GeneratedMessageLite.java,mine = mine.mutableCopy();,if (mine != null ) mine = mine.mutableCopy();
TextFormat.java,value = subField.finish();,if (subField != null ) value = subField.finish();
UnknownFieldSetLiteTest.java,allFields = TestUtil.getAllSet();,if (TestUtil != null ) allFields = TestUtil.getAllSet();
UnknownFieldSetLiteTest.java,allFieldsData = allFields.toByteString();,if (allFields != null ) allFieldsData = allFields.toByteString();
UnknownFieldSetLiteTest.java,unknownFields = emptyMessage.getUnknownFields();,if (emptyMessage != null ) unknownFields = emptyMessage.getUnknownFields();
UnknownFieldSetLiteTest.java,UnknownFieldSet.Builder bizarroFields = UnknownFieldSet.newBuilder();,if (UnknownFieldSet != null ) UnknownFieldSet.Builder bizarroFields = UnknownFieldSet.newBuilder();
UnknownFieldSetLiteTest.java,UnknownFieldSetLite unknownFields = UnknownFieldSetLite.getDefaultInstance();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite unknownFields = UnknownFieldSetLite.getDefaultInstance();
UnknownFieldSetLiteTest.java,UnknownFieldSetLite instance = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite instance = UnknownFieldSetLite.newInstance();
UnknownFieldSetLiteTest.java,CodedInputStream input = CodedInputStream.newInstance(foo.toByteArray());,if (CodedInputStream != null ) CodedInputStream input = CodedInputStream.newInstance(foo.toByteArray());
UnknownFieldSetLiteTest.java,UnknownFieldSetLite instance = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite instance = UnknownFieldSetLite.newInstance();
UnknownFieldSetLiteTest.java,CodedInputStream input = CodedInputStream.newInstance(foo.toByteArray());,if (CodedInputStream != null ) CodedInputStream input = CodedInputStream.newInstance(foo.toByteArray());
UnknownFieldSetLiteTest.java,UnknownFieldSetLite instance = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite instance = UnknownFieldSetLite.newInstance();
UnknownFieldSetLiteTest.java,Foo fooDeserialized = Foo.parseFrom(foo.toByteArray());,if (Foo != null ) Foo fooDeserialized = Foo.parseFrom(foo.toByteArray());
UnknownFieldSetLiteTest.java,UnknownFieldSetLite emptyFieldSet = UnknownFieldSetLite.getDefaultInstance();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite emptyFieldSet = UnknownFieldSetLite.getDefaultInstance();
UnknownFieldSetLiteTest.java,UnknownFieldSetLite paddedFieldSet = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite paddedFieldSet = UnknownFieldSetLite.newInstance();
UnknownFieldSetLiteTest.java,UnknownFieldSetLite unknownFields = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite unknownFields = UnknownFieldSetLite.newInstance();
UnknownFieldSetLiteTest.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
UnknownFieldSetLiteTest.java,UnknownFieldSetLite builder = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite builder = UnknownFieldSetLite.newInstance();
UnknownFieldSetLiteTest.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
UnknownFieldSetLiteTest.java,UnknownFieldSetLite unknownFields = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite unknownFields = UnknownFieldSetLite.newInstance();
UnknownFieldSetLiteTest.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
UnknownFieldSetLiteTest.java,Foo copy = Foo.parseFrom(foo.toByteArray());,if (Foo != null ) Foo copy = Foo.parseFrom(foo.toByteArray());
UnknownFieldSetLiteTest.java,Foo secondCopy = Foo.parseFrom(foo.toByteArray());,if (Foo != null ) Foo secondCopy = Foo.parseFrom(foo.toByteArray());
UnknownFieldSetLiteTest.java,ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();,if (ExtensionRegistryLite != null ) ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();
UnknownFieldSetLiteTest.java,ByteString.Output byteStringOutput = ByteString.newOutput();,if (ByteString != null ) ByteString.Output byteStringOutput = ByteString.newOutput();
UnknownFieldSetLiteTest.java,ByteString.Output byteStringOutput = ByteString.newOutput();,if (ByteString != null ) ByteString.Output byteStringOutput = ByteString.newOutput();
UnknownFieldSetLiteTest.java,ByteString.Output byteStringOutput = ByteString.newOutput();,if (ByteString != null ) ByteString.Output byteStringOutput = ByteString.newOutput();
UnknownFieldSetLiteTest.java,UnknownFieldSetLite unknownFields = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite unknownFields = UnknownFieldSetLite.newInstance();
UnknownFieldSetLiteTest.java,TestAllTypesLite testAllTypes = TestAllTypesLite.getDefaultInstance();,if (TestAllTypesLite != null ) TestAllTypesLite testAllTypes = TestAllTypesLite.getDefaultInstance();
UnknownFieldSetLiteTest.java,testAllTypes = TestAllTypesLite.newBuilder().build();,if (TestAllTypesLite != null ) testAllTypes = TestAllTypesLite.newBuilder().build();
UnknownFieldSetLiteTest.java,ByteString data = emptyMessageLite.toByteString();,if (emptyMessageLite != null ) ByteString data = emptyMessageLite.toByteString();
UnknownFieldSetLiteTest.java,TestAllExtensions allExtensions = TestUtil.getAllExtensionsSet();,if (TestUtil != null ) TestAllExtensions allExtensions = TestUtil.getAllExtensionsSet();
UnknownFieldSetLiteTest.java,ByteString allExtensionsData = allExtensions.toByteString();,if (allExtensions != null ) ByteString allExtensionsData = allExtensions.toByteString();
UnknownFieldSetLiteTest.java,ByteString data = emptyMessageLite.toByteString();,if (emptyMessageLite != null ) ByteString data = emptyMessageLite.toByteString();
UnknownFieldSetLiteTest.java,"TestAllExtensions message = TestAllExtensions.parseFrom(data, TestUtil.getExtensionRegistry());","if (TestUtil != null ) TestAllExtensions message = TestAllExtensions.parseFrom(data, TestUtil.getExtensionRegistry());"
UnknownFieldSetLiteTest.java,TestPackedTypes allPackedFields = TestUtil.getPackedSet();,if (TestUtil != null ) TestPackedTypes allPackedFields = TestUtil.getPackedSet();
UnknownFieldSetLiteTest.java,ByteString allPackedData = allPackedFields.toByteString();,if (allPackedFields != null ) ByteString allPackedData = allPackedFields.toByteString();
UnknownFieldSetLiteTest.java,ByteString data = emptyMessageLite.toByteString();,if (emptyMessageLite != null ) ByteString data = emptyMessageLite.toByteString();
UnknownFieldSetLiteTest.java,"TestPackedTypes message = TestPackedTypes.parseFrom(data, TestUtil.getExtensionRegistry());","if (TestUtil != null ) TestPackedTypes message = TestPackedTypes.parseFrom(data, TestUtil.getExtensionRegistry());"
UnknownFieldSetLiteTest.java,TestPackedExtensions allPackedExtensions = TestUtil.getPackedExtensionsSet();,if (TestUtil != null ) TestPackedExtensions allPackedExtensions = TestUtil.getPackedExtensionsSet();
UnknownFieldSetLiteTest.java,ByteString allPackedExtensionsData = allPackedExtensions.toByteString();,if (allPackedExtensions != null ) ByteString allPackedExtensionsData = allPackedExtensions.toByteString();
UnknownFieldSetLiteTest.java,ByteString data = emptyMessageLite.toByteString();,if (emptyMessageLite != null ) ByteString data = emptyMessageLite.toByteString();
UnknownFieldSetLiteTest.java,ByteString data = emptyMessageLite.toByteString();,if (emptyMessageLite != null ) ByteString data = emptyMessageLite.toByteString();
UnknownFieldSetLiteTest.java,data = emptyMessageLite.toByteString();,if (emptyMessageLite != null ) data = emptyMessageLite.toByteString();
ConformanceJava.java,testMessage = builder.build();,if (builder != null ) testMessage = builder.build();
Descriptors.java,StringBuilder result = new StringBuilder(name.length());,if (StringBuilder(name != null ) StringBuilder result = new StringBuilder(name.length());
ConformanceJava.java,ByteString MessageString = testMessage.toByteString();,if (testMessage != null ) ByteString MessageString = testMessage.toByteString();
TextFormat.java,Descriptors.OneofDescriptor oneof = field.getContainingOneof();,if (field != null ) Descriptors.OneofDescriptor oneof = field.getContainingOneof();
CodedInputStreamTest.java,byte[] rawInput = rawOutput.toByteArray();,if (rawOutput != null ) byte[] rawInput = rawOutput.toByteArray();
MapForProto2LiteTest.java,ByteString data = builder.build().toByteString();,if (builder != null ) ByteString data = builder.build().toByteString();
MapTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
GeneratedMessageLite.java,subBuilder = existingValue.toBuilder();,if (existingValue != null ) subBuilder = existingValue.toBuilder();
GeneratedMessageLite.java,value = subBuilder.build();,if (subBuilder != null ) value = subBuilder.build();
MessageReflection.java,Message.Builder subBuilder =  defaultInstance.newBuilderForType();,if (defaultInstance != null ) Message.Builder subBuilder =  defaultInstance.newBuilderForType();
FieldPresenceTest.java,TestAllTypes empty = TestAllTypes.newBuilder().build();,if (TestAllTypes != null ) TestAllTypes empty = TestAllTypes.newBuilder().build();
FieldPresenceTest.java,TestAllTypes message = TestAllTypes.newBuilder().build();,if (TestAllTypes != null ) TestAllTypes message = TestAllTypes.newBuilder().build();
IsValidUtf8TestUtil.java,SoftReference<ByteBuffer> ref = directBuffer.get();,if (directBuffer != null ) SoftReference<ByteBuffer> ref = directBuffer.get();
LazyMessageLiteTest.java,LazyInnerMessageLite inner = LazyInnerMessageLite.newBuilder().build();,if (LazyInnerMessageLite != null ) LazyInnerMessageLite inner = LazyInnerMessageLite.newBuilder().build();
MessageTest.java,Descriptors.Descriptor descriptor = TestRequired.getDescriptor();,if (TestRequired != null ) Descriptors.Descriptor descriptor = TestRequired.getDescriptor();
MessageTest.java,Descriptors.Descriptor descriptor = TestRequired.getDescriptor();,if (TestRequired != null ) Descriptors.Descriptor descriptor = TestRequired.getDescriptor();
JsonFormatTest.java,TestMap map = builder.build();,if (builder != null ) TestMap map = builder.build();
WireFormatTest.java,ExtensionRegistry registry = TestUtil.getExtensionRegistry();,if (TestUtil != null ) ExtensionRegistry registry = TestUtil.getExtensionRegistry();
WireFormatTest.java,ExtensionRegistry registry = TestUtil.getExtensionRegistry();,if (TestUtil != null ) ExtensionRegistry registry = TestUtil.getExtensionRegistry();
GeneratedMessageLite.java,messageClassName = regularForm.getClass().getName();,if (regularForm != null ) messageClassName = regularForm.getClass().getName();
ProtoBench.java,"mininumScale = Math.max(mininumScale, scanner.nextDouble());","if (scanner != null ) mininumScale = Math.max(mininumScale, scanner.nextDouble());"
CodedOutputByteBufferNano.java,int oldPosition = buffer.position();,if (buffer != null ) int oldPosition = buffer.position();
CodedOutputByteBufferNano.java,int newPosition = buffer.position();,if (buffer != null ) int newPosition = buffer.position();
CodedOutputByteBufferNano.java,final int size = value.getSerializedSize();,if (value != null ) final int size = value.getSerializedSize();
ExtendableMessageNano.java,size += field.computeSerializedSize();,if (field != null ) size += field.computeSerializedSize();
ExtendableMessageNano.java,int startPos = input.getPosition();,if (input != null ) int startPos = input.getPosition();
ExtendableMessageNano.java,int endPos = input.getPosition();,if (input != null ) int endPos = input.getPosition();
Extension.java,int resultSize = resultList.size();,if (resultList != null ) int resultSize = resultList.size();
Extension.java,MessageNano group = (MessageNano) messageType.newInstance();,if (messageType != null ) MessageNano group = (MessageNano) messageType.newInstance();
Extension.java,MessageNano message = (MessageNano) messageType.newInstance();,if (messageType != null ) MessageNano message = (MessageNano) messageType.newInstance();
FieldData.java,size += unknownField.computeSerializedSize();,if (unknownField != null ) size += unknownField.computeSerializedSize();
FieldData.java,cloneArray[i] = valueArray[i].clone();,if (valueArray[i] != null ) cloneArray[i] = valueArray[i].clone();
FieldData.java,cloneArray[i] = valueArray[i].clone();,if (valueArray[i] != null ) cloneArray[i] = valueArray[i].clone();
InternalNano.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
InternalNano.java,K key = entry.getKey();,if (entry != null ) K key = entry.getKey();
InternalNano.java,V value = entry.getValue();,if (entry != null ) V value = entry.getValue();
InternalNano.java,K key = entry.getKey();,if (entry != null ) K key = entry.getKey();
InternalNano.java,V value = entry.getValue();,if (entry != null ) V value = entry.getValue();
MessageNanoPrinter.java,int origIndentBufLength = indentBuf.length();,if (indentBuf != null ) int origIndentBufLength = indentBuf.length();
MessageNanoPrinter.java,int modifiers = field.getModifiers();,if (field != null ) int modifiers = field.getModifiers();
MessageNanoPrinter.java,String fieldName = field.getName();,if (field != null ) String fieldName = field.getName();
MessageNanoPrinter.java,String name = method.getName();,if (method != null ) String name = method.getName();
MessageNanoPrinter.java,int origIndentBufLength = indentBuf.length();,if (indentBuf != null ) int origIndentBufLength = indentBuf.length();
MessageNanoPrinter.java,int strLen = str.length();,if (str != null ) int strLen = str.length();
WireFormatNano.java,int startPos = input.getPosition();,if (input != null ) int startPos = input.getPosition();
NanoTest.java,SimpleMessageNano.NestedMessage nestedMsg = new SimpleMessageNano.NestedMessage();,if (SimpleMessageNano != null ) SimpleMessageNano.NestedMessage nestedMsg = new SimpleMessageNano.NestedMessage();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,RecursiveMessageNano.NestedMessage nestedMsg = new RecursiveMessageNano.NestedMessage();,if (RecursiveMessageNano != null ) RecursiveMessageNano.NestedMessage nestedMsg = new RecursiveMessageNano.NestedMessage();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,TestAllTypesNano.OptionalGroup grp = new TestAllTypesNano.OptionalGroup();,if (TestAllTypesNano != null ) TestAllTypesNano.OptionalGroup grp = new TestAllTypesNano.OptionalGroup();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,MessageWithGroup.Group grp = new MessageWithGroup.Group();,if (MessageWithGroup != null ) MessageWithGroup.Group grp = new MessageWithGroup.Group();
NanoTest.java,TestAllTypesNano.NestedMessage nestedMsg = new TestAllTypesNano.NestedMessage();,if (TestAllTypesNano != null ) TestAllTypesNano.NestedMessage nestedMsg = new TestAllTypesNano.NestedMessage();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,NanoOuterClass.ForeignMessageNano nestedMsg = new NanoOuterClass.ForeignMessageNano();,if (NanoOuterClass != null ) NanoOuterClass.ForeignMessageNano nestedMsg = new NanoOuterClass.ForeignMessageNano();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,UnittestImportNano.ImportMessageNano nestedMsg = new UnittestImportNano.ImportMessageNano();,if (UnittestImportNano != null ) UnittestImportNano.ImportMessageNano nestedMsg = new UnittestImportNano.ImportMessageNano();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,EnumValidity.M m = new EnumValidity.M();,if (EnumValidity != null ) EnumValidity.M m = new EnumValidity.M();
NanoTest.java,EnumValidityAccessors.M m = new EnumValidityAccessors.M();,if (EnumValidityAccessors != null ) EnumValidityAccessors.M m = new EnumValidityAccessors.M();
NanoTest.java,UnittestImportNano.ImportMessageNano importMsg = new UnittestImportNano.ImportMessageNano();,if (UnittestImportNano != null ) UnittestImportNano.ImportMessageNano importMsg = new UnittestImportNano.ImportMessageNano();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msg.optionalNestedMessage = new TestAllTypesNanoHas.NestedMessage();,if (TestAllTypesNanoHas != null ) msg.optionalNestedMessage = new TestAllTypesNanoHas.NestedMessage();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msg.optionalNestedMessage = new TestAllTypesNanoHas.NestedMessage();,if (TestAllTypesNanoHas != null ) msg.optionalNestedMessage = new TestAllTypesNanoHas.NestedMessage();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,byte[] defaultBytes = msg.getDefaultBytes();,if (msg != null ) byte[] defaultBytes = msg.getDefaultBytes();
NanoTest.java,msg.optionalNestedMessage = new TestNanoAccessors.NestedMessage();,if (TestNanoAccessors != null ) msg.optionalNestedMessage = new TestNanoAccessors.NestedMessage();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,TestNanoAccessors.NestedMessage nestedMessage = new TestNanoAccessors.NestedMessage();,if (TestNanoAccessors != null ) TestNanoAccessors.NestedMessage nestedMessage = new TestNanoAccessors.NestedMessage();
NanoTest.java,TestNanoAccessors.NestedMessage nestedMessage = new TestNanoAccessors.NestedMessage();,if (TestNanoAccessors != null ) TestNanoAccessors.NestedMessage nestedMessage = new TestNanoAccessors.NestedMessage();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,EnumClassNanos.EnumClassNano msg = new EnumClassNanos.EnumClassNano();,if (EnumClassNanos != null ) EnumClassNanos.EnumClassNano msg = new EnumClassNanos.EnumClassNano();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msg.optionalGroup = new TestAllTypesNano.OptionalGroup();,if (TestAllTypesNano != null ) msg.optionalGroup = new TestAllTypesNano.OptionalGroup();
NanoTest.java,msg.optionalNestedMessage = new TestAllTypesNano.NestedMessage();,if (TestAllTypesNano != null ) msg.optionalNestedMessage = new TestAllTypesNano.NestedMessage();
NanoTest.java,String protoPrint = msg.toString();,if (msg != null ) String protoPrint = msg.toString();
NanoTest.java,msg.optionalNestedMessage = new TestNanoAccessors.NestedMessage();,if (TestNanoAccessors != null ) msg.optionalNestedMessage = new TestNanoAccessors.NestedMessage();
NanoTest.java,String protoPrint = msg.toString();,if (msg != null ) String protoPrint = msg.toString();
NanoTest.java,String protoPrint = msg.toString();,if (msg != null ) String protoPrint = msg.toString();
NanoTest.java,Extensions.ExtendableMessage message = new Extensions.ExtendableMessage();,if (Extensions != null ) Extensions.ExtendableMessage message = new Extensions.ExtendableMessage();
NanoTest.java,Extensions.ExtendableMessage clone = message.clone();,if (message != null ) Extensions.ExtendableMessage clone = message.clone();
NanoTest.java,Extensions.ExtendableMessage message = new Extensions.ExtendableMessage();,if (Extensions != null ) Extensions.ExtendableMessage message = new Extensions.ExtendableMessage();
NanoTest.java,Extensions.ExtendableMessage extendableMessage = new Extensions.ExtendableMessage();,if (Extensions != null ) Extensions.ExtendableMessage extendableMessage = new Extensions.ExtendableMessage();
NanoTest.java,Extensions.ExtendableMessage extendableMessage = new Extensions.ExtendableMessage();,if (Extensions != null ) Extensions.ExtendableMessage extendableMessage = new Extensions.ExtendableMessage();
NanoTest.java,Extensions.ExtendableMessage extendableMessage = new Extensions.ExtendableMessage();,if (Extensions != null ) Extensions.ExtendableMessage extendableMessage = new Extensions.ExtendableMessage();
NanoTest.java,NanoReferenceTypes.TestAllTypesNano message = new NanoReferenceTypes.TestAllTypesNano();,if (NanoReferenceTypes != null ) NanoReferenceTypes.TestAllTypesNano message = new NanoReferenceTypes.TestAllTypesNano();
NanoTest.java,message.optionalNestedMessage = new TestAllTypesNano.NestedMessage();,if (TestAllTypesNano != null ) message.optionalNestedMessage = new TestAllTypesNano.NestedMessage();
NanoTest.java,message.optionalNestedMessage = new TestAllTypesNanoHas.NestedMessage();,if (TestAllTypesNanoHas != null ) message.optionalNestedMessage = new TestAllTypesNanoHas.NestedMessage();
NanoTest.java,NanoReferenceTypes.TestAllTypesNano message = new NanoReferenceTypes.TestAllTypesNano();,if (NanoReferenceTypes != null ) NanoReferenceTypes.TestAllTypesNano message = new NanoReferenceTypes.TestAllTypesNano();
NanoTest.java,NanoRepeatedPackables.NonPacked nonPacked = new NanoRepeatedPackables.NonPacked();,if (NanoRepeatedPackables != null ) NanoRepeatedPackables.NonPacked nonPacked = new NanoRepeatedPackables.NonPacked();
NanoTest.java,TestMap.MessageValue origValue = new TestMap.MessageValue();,if (TestMap != null ) TestMap.MessageValue origValue = new TestMap.MessageValue();
NanoTest.java,TestMap.MessageValue newValue = new TestMap.MessageValue();,if (TestMap != null ) TestMap.MessageValue newValue = new TestMap.MessageValue();
NanoTest.java,TestMap.MessageValue result = new TestMap.MessageValue();,if (TestMap != null ) TestMap.MessageValue result = new TestMap.MessageValue();
NanoTest.java,NanoReferenceTypesCompat.TestAllTypesNano proto = new NanoReferenceTypesCompat.TestAllTypesNano();,if (NanoReferenceTypesCompat != null ) NanoReferenceTypesCompat.TestAllTypesNano proto = new NanoReferenceTypesCompat.TestAllTypesNano();
NanoTest.java,AnotherMessage clone = anotherMessage.clone();,if (anotherMessage != null ) AnotherMessage clone = anotherMessage.clone();
GeneratedMessageLite.java,extensions = extensions.clone();,if (extensions != null ) extensions = extensions.clone();
ProtoBench.java,ExtensionRegistry extensions = ExtensionRegistry.newInstance();,if (ExtensionRegistry != null ) ExtensionRegistry extensions = ExtensionRegistry.newInstance();
ProtoBench.java,byte[] singleInputData = benchmarkDataset.getPayload(i).toByteArray();,if (benchmarkDataset != null ) byte[] singleInputData = benchmarkDataset.getPayload(i).toByteArray();
ProtoBench.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
ProtoBench.java,long end = System.currentTimeMillis();,if (System != null ) long end = System.currentTimeMillis();
GeneratedMessageLite.java,instance.extensions = instance.extensions.clone();,if (instance != null ) instance.extensions = instance.extensions.clone();
FieldPresenceTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
FieldPresenceTest.java,TestAllTypes message = builder.build();,if (builder != null ) TestAllTypes message = builder.build();
FieldPresenceTest.java,ByteString data = message.toByteString();,if (message != null ) ByteString data = message.toByteString();
FieldPresenceTest.java,message = TestAllTypes.parseFrom(optionalOnlyMessage.toByteString());,if (TestAllTypes != null ) message = TestAllTypes.parseFrom(optionalOnlyMessage.toByteString());
RubyMessage.java,val = ByteString.copyFrom(str.getBytes());,if (ByteString != null ) val = ByteString.copyFrom(str.getBytes());
RubyMessage.java,val = str.asJavaString();,if (str != null ) val = str.asJavaString();
GeneratedMessageTest.java,TestAllExtensionsLite.Builder builder = TestAllExtensionsLite.newBuilder();,if (TestAllExtensionsLite != null ) TestAllExtensionsLite.Builder builder = TestAllExtensionsLite.newBuilder();
GeneratedMessageTest.java,TestAllExtensionsLite message = builder.build();,if (builder != null ) TestAllExtensionsLite message = builder.build();
GeneratedMessageTest.java,TestAllExtensionsLite.Builder builder = TestAllExtensionsLite.newBuilder();,if (TestAllExtensionsLite != null ) TestAllExtensionsLite.Builder builder = TestAllExtensionsLite.newBuilder();
GeneratedMessageTest.java,TestAllExtensionsLite message = builder.build();,if (builder != null ) TestAllExtensionsLite message = builder.build();
GeneratedMessageTest.java,TestAllExtensionsLite original = TestUtilLite.getAllLiteExtensionsSet();,if (TestUtilLite != null ) TestAllExtensionsLite original = TestUtilLite.getAllLiteExtensionsSet();
ParserTest.java,TestPackedExtensionsLite packedMessage = TestUtilLite.getLitePackedExtensionsSet();,if (TestUtilLite != null ) TestPackedExtensionsLite packedMessage = TestUtilLite.getLitePackedExtensionsSet();
ParserTest.java,InputStream input = new ByteArrayInputStream(output.toByteArray());,if (ByteArrayInputStream(output != null ) InputStream input = new ByteArrayInputStream(output.toByteArray());
ParserTest.java,TestAllTypesLite.Builder builder = TestAllTypesLite.newBuilder();,if (TestAllTypesLite != null ) TestAllTypesLite.Builder builder = TestAllTypesLite.newBuilder();
ParserTest.java,ExtensionRegistry registry = ExtensionRegistry.newInstance();,if (ExtensionRegistry != null ) ExtensionRegistry registry = ExtensionRegistry.newInstance();
UnknownFieldSetTest.java,ByteString data = emptyMessageLite.toByteString();,if (emptyMessageLite != null ) ByteString data = emptyMessageLite.toByteString();
UnknownFieldSetTest.java,TestAllExtensions allExtensions = TestUtil.getAllExtensionsSet();,if (TestUtil != null ) TestAllExtensions allExtensions = TestUtil.getAllExtensionsSet();
UnknownFieldSetTest.java,ByteString allExtensionsData = allExtensions.toByteString();,if (allExtensions != null ) ByteString allExtensionsData = allExtensions.toByteString();
UnknownFieldSetTest.java,ByteString data = emptyMessageLite.toByteString();,if (emptyMessageLite != null ) ByteString data = emptyMessageLite.toByteString();
UnknownFieldSetTest.java,TestPackedTypes allPackedFields = TestUtil.getPackedSet();,if (TestUtil != null ) TestPackedTypes allPackedFields = TestUtil.getPackedSet();
UnknownFieldSetTest.java,ByteString allPackedData = allPackedFields.toByteString();,if (allPackedFields != null ) ByteString allPackedData = allPackedFields.toByteString();
UnknownFieldSetTest.java,ByteString data = emptyMessageLite.toByteString();,if (emptyMessageLite != null ) ByteString data = emptyMessageLite.toByteString();
UnknownFieldSetTest.java,TestPackedExtensions allPackedExtensions = TestUtil.getPackedExtensionsSet();,if (TestUtil != null ) TestPackedExtensions allPackedExtensions = TestUtil.getPackedExtensionsSet();
UnknownFieldSetTest.java,ByteString allPackedExtensionsData = allPackedExtensions.toByteString();,if (allPackedExtensions != null ) ByteString allPackedExtensionsData = allPackedExtensions.toByteString();
UnknownFieldSetTest.java,ByteString data = emptyMessageLite.toByteString();,if (emptyMessageLite != null ) ByteString data = emptyMessageLite.toByteString();
UnknownFieldSetTest.java,ByteString data = emptyMessageLite.toByteString();,if (emptyMessageLite != null ) ByteString data = emptyMessageLite.toByteString();
UnknownFieldSetTest.java,data = emptyMessageLite.toByteString();,if (emptyMessageLite != null ) data = emptyMessageLite.toByteString();
WireFormatTest.java,TestAllExtensionsLite message = TestUtilLite.getAllLiteExtensionsSet();,if (TestUtilLite != null ) TestAllExtensionsLite message = TestUtilLite.getAllLiteExtensionsSet();
WireFormatTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatTest.java,TestPackedExtensionsLite message = TestUtilLite.getLitePackedExtensionsSet();,if (TestUtilLite != null ) TestPackedExtensionsLite message = TestUtilLite.getLitePackedExtensionsSet();
WireFormatTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatTest.java,TestAllTypes message = TestUtil.getAllSet();,if (TestUtil != null ) TestAllTypes message = TestUtil.getAllSet();
WireFormatTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatTest.java,ExtensionRegistry registry = TestUtil.getExtensionRegistry();,if (TestUtil != null ) ExtensionRegistry registry = TestUtil.getExtensionRegistry();
WireFormatTest.java,TestPackedExtensionsLite message = TestUtilLite.getLitePackedExtensionsSet();,if (TestUtilLite != null ) TestPackedExtensionsLite message = TestUtilLite.getLitePackedExtensionsSet();
WireFormatTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatTest.java,ExtensionRegistryLite registry = TestUtilLite.getExtensionRegistryLite();,if (TestUtilLite != null ) ExtensionRegistryLite registry = TestUtilLite.getExtensionRegistryLite();
ConformanceJava.java,ByteBuffer buffer = ByteBuffer.allocate(bytes.size());,if (ByteBuffer != null ) ByteBuffer buffer = ByteBuffer.allocate(bytes.size());
ConformanceJava.java,ByteBuffer buffer = ByteBuffer.allocateDirect(bytes.size());,if (ByteBuffer != null ) ByteBuffer buffer = ByteBuffer.allocateDirect(bytes.size());
ConformanceJava.java,ByteBuffer buffer = ByteBuffer.allocateDirect(bytes.size());,if (ByteBuffer != null ) ByteBuffer buffer = ByteBuffer.allocateDirect(bytes.size());
ConformanceJava.java,testMessage = parseBinary(request.getProtobufPayload());,if (parseBinary(request != null ) testMessage = parseBinary(request.getProtobufPayload());
CodedInputStream.java,int prevPos = buffer.position();,if (buffer != null ) int prevPos = buffer.position();
CodedInputStream.java,int prevLimit = buffer.limit();,if (buffer != null ) int prevLimit = buffer.limit();
GeneratedMessageLite.java,protoHash = mine.hashCode();,if (mine != null ) protoHash = mine.hashCode();
TextFormat.java,final int size = text.length();,if (text != null ) final int size = text.length();
ConformanceJava.java,ByteBuffer buffer = ByteBuffer.allocate(bytes.size());,if (ByteBuffer != null ) ByteBuffer buffer = ByteBuffer.allocate(bytes.size());
ConformanceJava.java,ByteBuffer buffer = ByteBuffer.allocate(bytes.size());,if (ByteBuffer != null ) ByteBuffer buffer = ByteBuffer.allocate(bytes.size());
ConformanceJava.java,ByteBuffer buffer = ByteBuffer.allocateDirect(bytes.size());,if (ByteBuffer != null ) ByteBuffer buffer = ByteBuffer.allocateDirect(bytes.size());
ConformanceJava.java,ByteBuffer buffer = ByteBuffer.allocateDirect(bytes.size());,if (ByteBuffer != null ) ByteBuffer buffer = ByteBuffer.allocateDirect(bytes.size());
ConformanceJava.java,ByteBuffer buffer = ByteBuffer.allocateDirect(bytes.size());,if (ByteBuffer != null ) ByteBuffer buffer = ByteBuffer.allocateDirect(bytes.size());
ConformanceJava.java,ByteBuffer buffer = ByteBuffer.allocateDirect(bytes.size());,if (ByteBuffer != null ) ByteBuffer buffer = ByteBuffer.allocateDirect(bytes.size());
ConformanceJava.java,testMessage = parseBinary(request.getProtobufPayload());,if (parseBinary(request != null ) testMessage = parseBinary(request.getProtobufPayload());
JsonFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
ConformanceJava.java,testMessage = Conformance.TestAllTypes.parseFrom(request.getProtobufPayload());,if (Conformance != null ) testMessage = Conformance.TestAllTypes.parseFrom(request.getProtobufPayload());
MapForProto2Test.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapTest.java,TestMap.Builder sourceBuilder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder sourceBuilder = TestMap.newBuilder();
MapTest.java,TestMap source = sourceBuilder.build();,if (sourceBuilder != null ) TestMap source = sourceBuilder.build();
MapTest.java,TestMap.Builder destinationBuilder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder destinationBuilder = TestMap.newBuilder();
MapTest.java,TestMap destination = destinationBuilder.build();,if (destinationBuilder != null ) TestMap destination = destinationBuilder.build();
MapTest.java,TestMap.Builder other = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder other = TestMap.newBuilder();
MapTest.java,TestMap.Builder entryBuilder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder entryBuilder = TestMap.newBuilder();
MapTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
AbstractMessage.java,Iterator iterator = list.iterator();,if (list != null ) Iterator iterator = list.iterator();
AbstractMessage.java,Message entry = (Message) iterator.next();,if (iterator != null ) Message entry = (Message) iterator.next();
AbstractMessage.java,Descriptors.Descriptor descriptor = entry.getDescriptorForType();,if (entry != null ) Descriptors.Descriptor descriptor = entry.getDescriptorForType();
AbstractMessage.java,entry = (Message) iterator.next();,if (iterator != null ) entry = (Message) iterator.next();
AbstractMessage.java,FieldDescriptor field = entry.getKey();,if (entry != null ) FieldDescriptor field = entry.getKey();
AbstractMessage.java,Object value = entry.getValue();,if (entry != null ) Object value = entry.getValue();
AbstractMessage.java,final FieldDescriptor field = entry.getKey();,if (entry != null ) final FieldDescriptor field = entry.getKey();
AbstractMessage.java,final int tag = input.readTag();,if (input != null ) final int tag = input.readTag();
AbstractMessageLite.java,final CodedInputStream input = data.newCodedInput();,if (data != null ) final CodedInputStream input = data.newCodedInput();
AbstractMessageLite.java,final CodedInputStream input = data.newCodedInput();,if (data != null ) final CodedInputStream input = data.newCodedInput();
AbstractMessageLite.java,final int result = super.read();,if (super != null ) final int result = super.read();
AbstractMessageLite.java,final int firstByte = input.read();,if (input != null ) final int firstByte = input.read();
AbstractParser.java,CodedInputStream input = data.newCodedInput();,if (data != null ) CodedInputStream input = data.newCodedInput();
AbstractParser.java,int firstByte = input.read();,if (input != null ) int firstByte = input.read();
CodedInputStream.java,ByteBuffer temp = buf.duplicate();,if (buf != null ) ByteBuffer temp = buf.duplicate();
CodedInputStream.java,final int firstByte = input.read();,if (input != null ) final int firstByte = input.read();
CodedInputStream.java,final int b = input.read();,if (input != null ) final int b = input.read();
CodedInputStream.java,final int b = input.read();,if (input != null ) final int b = input.read();
Descriptors.java,jsonName = fieldNameToLowerCamelCase(proto.getName());,if (fieldNameToLowerCamelCase(proto != null ) jsonName = fieldNameToLowerCamelCase(proto.getName());
UnsafeByteOperations.java,final int offset = buffer.arrayOffset();,if (buffer != null ) final int offset = buffer.arrayOffset();
CodedInputStreamTest.java,CodedInputStream input = rawOutput.toByteString().newCodedInput();,if (rawOutput != null ) CodedInputStream input = rawOutput.toByteString().newCodedInput();
CodedInputStreamTest.java,String text = input.readString();,if (input != null ) String text = input.readString();
CodedInputStreamTest.java,CodedInputStream input = rawOutput.toByteString().newCodedInput();,if (rawOutput != null ) CodedInputStream input = rawOutput.toByteString().newCodedInput();
CodedInputStreamTest.java,String text = input.readString();,if (input != null ) String text = input.readString();
CodedInputStreamTest.java,CodedInputStream input = rawOutput.toByteString().newCodedInput();,if (rawOutput != null ) CodedInputStream input = rawOutput.toByteString().newCodedInput();
CodedInputStreamTest.java,CodedInputStream inputStream = rawOutput.toByteString().newCodedInput();,if (rawOutput != null ) CodedInputStream inputStream = rawOutput.toByteString().newCodedInput();
CodedInputStreamTest.java,byte[] result = inputStream.readByteArray();,if (inputStream != null ) byte[] result = inputStream.readByteArray();
CodedInputStreamTest.java,result = inputStream.readByteArray();,if (inputStream != null ) result = inputStream.readByteArray();
CodedInputStreamTest.java,result = inputStream.readByteArray();,if (inputStream != null ) result = inputStream.readByteArray();
CodedInputStreamTest.java,result = inputStream.readByteArray();,if (inputStream != null ) result = inputStream.readByteArray();
CodedInputStreamTest.java,CodedInputStream inputStream = rawOutput.toByteString().newCodedInput();,if (rawOutput != null ) CodedInputStream inputStream = rawOutput.toByteString().newCodedInput();
CodedInputStreamTest.java,ByteBuffer result = inputStream.readByteBuffer();,if (inputStream != null ) ByteBuffer result = inputStream.readByteBuffer();
CodedInputStreamTest.java,result = inputStream.readByteBuffer();,if (inputStream != null ) result = inputStream.readByteBuffer();
CodedInputStreamTest.java,result = inputStream.readByteBuffer();,if (inputStream != null ) result = inputStream.readByteBuffer();
CodedInputStreamTest.java,result = inputStream.readByteBuffer();,if (inputStream != null ) result = inputStream.readByteBuffer();
CodedInputStreamTest.java,ByteBuffer result = inputStream.readByteBuffer();,if (inputStream != null ) ByteBuffer result = inputStream.readByteBuffer();
CodedInputStreamTest.java,result = inputStream.readByteBuffer();,if (inputStream != null ) result = inputStream.readByteBuffer();
CodedInputStreamTest.java,result = inputStream.readByteBuffer();,if (inputStream != null ) result = inputStream.readByteBuffer();
CodedInputStreamTest.java,result = inputStream.readByteBuffer();,if (inputStream != null ) result = inputStream.readByteBuffer();
CodedInputStreamTest.java,result = inputStream.readByteBuffer();,if (inputStream != null ) result = inputStream.readByteBuffer();
CodedInputStreamTest.java,result = inputStream.readByteBuffer();,if (inputStream != null ) result = inputStream.readByteBuffer();
CodedInputStreamTest.java,result = inputStream.readByteBuffer();,if (inputStream != null ) result = inputStream.readByteBuffer();
CodedInputStreamTest.java,result = inputStream.readByteBuffer();,if (inputStream != null ) result = inputStream.readByteBuffer();
CodedInputStreamTest.java,ByteString serialized = message.toByteString();,if (message != null ) ByteString serialized = message.toByteString();
JsonFormat.java,String encoded = json.getAsString();,if (json != null ) String encoded = json.getAsString();
AbstractMessage.java,Iterator iterator = list.iterator();,if (list != null ) Iterator iterator = list.iterator();
AbstractMessage.java,Message entry = (Message) iterator.next();,if (iterator != null ) Message entry = (Message) iterator.next();
AbstractMessage.java,Descriptors.Descriptor descriptor = entry.getDescriptorForType();,if (entry != null ) Descriptors.Descriptor descriptor = entry.getDescriptorForType();
AbstractMessage.java,entry = (Message) iterator.next();,if (iterator != null ) entry = (Message) iterator.next();
AbstractMessage.java,FieldDescriptor field = entry.getKey();,if (entry != null ) FieldDescriptor field = entry.getKey();
AbstractMessage.java,Object value = entry.getValue();,if (entry != null ) Object value = entry.getValue();
AbstractMessage.java,final FieldDescriptor field = entry.getKey();,if (entry != null ) final FieldDescriptor field = entry.getKey();
AbstractMessage.java,final int tag = input.readTag();,if (input != null ) final int tag = input.readTag();
AbstractMessageLite.java,final CodedInputStream input = data.newCodedInput();,if (data != null ) final CodedInputStream input = data.newCodedInput();
AbstractMessageLite.java,final CodedInputStream input = data.newCodedInput();,if (data != null ) final CodedInputStream input = data.newCodedInput();
AbstractMessageLite.java,final int result = super.read();,if (super != null ) final int result = super.read();
AbstractMessageLite.java,final int firstByte = input.read();,if (input != null ) final int firstByte = input.read();
AbstractParser.java,CodedInputStream input = data.newCodedInput();,if (data != null ) CodedInputStream input = data.newCodedInput();
AbstractParser.java,int firstByte = input.read();,if (input != null ) int firstByte = input.read();
CodedInputStream.java,ByteBuffer temp = buf.duplicate();,if (buf != null ) ByteBuffer temp = buf.duplicate();
CodedInputStream.java,final int firstByte = input.read();,if (input != null ) final int firstByte = input.read();
CodedInputStream.java,final int b = input.read();,if (input != null ) final int b = input.read();
CodedInputStream.java,final int b = input.read();,if (input != null ) final int b = input.read();
Descriptors.java,jsonName = fieldNameToLowerCamelCase(proto.getName());,if (fieldNameToLowerCamelCase(proto != null ) jsonName = fieldNameToLowerCamelCase(proto.getName());
UnsafeByteOperations.java,final int offset = buffer.arrayOffset();,if (buffer != null ) final int offset = buffer.arrayOffset();
CodedInputStreamTest.java,CodedInputStream input = rawOutput.toByteString().newCodedInput();,if (rawOutput != null ) CodedInputStream input = rawOutput.toByteString().newCodedInput();
CodedInputStreamTest.java,String text = input.readString();,if (input != null ) String text = input.readString();
CodedInputStreamTest.java,CodedInputStream input = rawOutput.toByteString().newCodedInput();,if (rawOutput != null ) CodedInputStream input = rawOutput.toByteString().newCodedInput();
CodedInputStreamTest.java,String text = input.readString();,if (input != null ) String text = input.readString();
CodedInputStreamTest.java,CodedInputStream input = rawOutput.toByteString().newCodedInput();,if (rawOutput != null ) CodedInputStream input = rawOutput.toByteString().newCodedInput();
CodedInputStreamTest.java,CodedInputStream inputStream = rawOutput.toByteString().newCodedInput();,if (rawOutput != null ) CodedInputStream inputStream = rawOutput.toByteString().newCodedInput();
CodedInputStreamTest.java,byte[] result = inputStream.readByteArray();,if (inputStream != null ) byte[] result = inputStream.readByteArray();
CodedInputStreamTest.java,result = inputStream.readByteArray();,if (inputStream != null ) result = inputStream.readByteArray();
CodedInputStreamTest.java,result = inputStream.readByteArray();,if (inputStream != null ) result = inputStream.readByteArray();
CodedInputStreamTest.java,result = inputStream.readByteArray();,if (inputStream != null ) result = inputStream.readByteArray();
CodedInputStreamTest.java,CodedInputStream inputStream = rawOutput.toByteString().newCodedInput();,if (rawOutput != null ) CodedInputStream inputStream = rawOutput.toByteString().newCodedInput();
CodedInputStreamTest.java,ByteBuffer result = inputStream.readByteBuffer();,if (inputStream != null ) ByteBuffer result = inputStream.readByteBuffer();
CodedInputStreamTest.java,result = inputStream.readByteBuffer();,if (inputStream != null ) result = inputStream.readByteBuffer();
CodedInputStreamTest.java,result = inputStream.readByteBuffer();,if (inputStream != null ) result = inputStream.readByteBuffer();
CodedInputStreamTest.java,result = inputStream.readByteBuffer();,if (inputStream != null ) result = inputStream.readByteBuffer();
CodedInputStreamTest.java,ByteBuffer result = inputStream.readByteBuffer();,if (inputStream != null ) ByteBuffer result = inputStream.readByteBuffer();
CodedInputStreamTest.java,result = inputStream.readByteBuffer();,if (inputStream != null ) result = inputStream.readByteBuffer();
CodedInputStreamTest.java,result = inputStream.readByteBuffer();,if (inputStream != null ) result = inputStream.readByteBuffer();
CodedInputStreamTest.java,result = inputStream.readByteBuffer();,if (inputStream != null ) result = inputStream.readByteBuffer();
CodedInputStreamTest.java,result = inputStream.readByteBuffer();,if (inputStream != null ) result = inputStream.readByteBuffer();
CodedInputStreamTest.java,result = inputStream.readByteBuffer();,if (inputStream != null ) result = inputStream.readByteBuffer();
CodedInputStreamTest.java,result = inputStream.readByteBuffer();,if (inputStream != null ) result = inputStream.readByteBuffer();
CodedInputStreamTest.java,result = inputStream.readByteBuffer();,if (inputStream != null ) result = inputStream.readByteBuffer();
CodedInputStreamTest.java,ByteString serialized = message.toByteString();,if (message != null ) ByteString serialized = message.toByteString();
JsonFormat.java,String encoded = json.getAsString();,if (json != null ) String encoded = json.getAsString();
RepeatedFieldBuilderTest.java,TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();,if (TestUtil != null ) TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();
RepeatedFieldBuilderTest.java,List<TestAllTypes> list = builder.build();,if (builder != null ) List<TestAllTypes> list = builder.build();
RepeatedFieldBuilderTest.java,TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();,if (TestUtil != null ) TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();
RepeatedFieldBuilderTest.java,List<TestAllTypes> list = builder.build();,if (builder != null ) List<TestAllTypes> list = builder.build();
RepeatedFieldBuilderTest.java,list = builder.build();,if (builder != null ) list = builder.build();
RepeatedFieldBuilderTest.java,TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();,if (TestUtil != null ) TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();
RepeatedFieldBuilderTest.java,List<TestAllTypes> messages = builder.build();,if (builder != null ) List<TestAllTypes> messages = builder.build();
RepeatedFieldBuilderTest.java,TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();,if (TestUtil != null ) TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();
RepeatedFieldBuilderTest.java,List<TestAllTypes> protos = builder.getMessageList();,if (builder != null ) List<TestAllTypes> protos = builder.getMessageList();
SingleFieldBuilderTest.java,TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();,if (TestUtil != null ) TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();
SingleFieldBuilderTest.java,TestAllTypes message = builder.build();,if (builder != null ) TestAllTypes message = builder.build();
SingleFieldBuilderTest.java,TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();,if (TestUtil != null ) TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();
SingleFieldBuilderTest.java,TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();,if (TestUtil != null ) TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();
SingleFieldBuilderTest.java,TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();,if (TestUtil != null ) TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();
RepeatedFieldBuilderTest.java,TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();,if (TestUtil != null ) TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();
RepeatedFieldBuilderTest.java,List<TestAllTypes> list = builder.build();,if (builder != null ) List<TestAllTypes> list = builder.build();
RepeatedFieldBuilderTest.java,TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();,if (TestUtil != null ) TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();
RepeatedFieldBuilderTest.java,List<TestAllTypes> list = builder.build();,if (builder != null ) List<TestAllTypes> list = builder.build();
RepeatedFieldBuilderTest.java,list = builder.build();,if (builder != null ) list = builder.build();
RepeatedFieldBuilderTest.java,TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();,if (TestUtil != null ) TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();
RepeatedFieldBuilderTest.java,List<TestAllTypes> messages = builder.build();,if (builder != null ) List<TestAllTypes> messages = builder.build();
RepeatedFieldBuilderTest.java,TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();,if (TestUtil != null ) TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();
RepeatedFieldBuilderTest.java,List<TestAllTypes> protos = builder.getMessageList();,if (builder != null ) List<TestAllTypes> protos = builder.getMessageList();
SingleFieldBuilderTest.java,TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();,if (TestUtil != null ) TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();
SingleFieldBuilderTest.java,TestAllTypes message = builder.build();,if (builder != null ) TestAllTypes message = builder.build();
SingleFieldBuilderTest.java,TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();,if (TestUtil != null ) TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();
SingleFieldBuilderTest.java,TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();,if (TestUtil != null ) TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();
SingleFieldBuilderTest.java,TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();,if (TestUtil != null ) TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();
MapEntry.java,dataBuilder = data.toBuilder();,if (data != null ) dataBuilder = data.toBuilder();
MapEntry.java,data = dataBuilder.buildPartial();,if (dataBuilder != null ) data = dataBuilder.buildPartial();
MapEntryLite.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
MapForProto2LiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
JsonFormat.java,FieldMask value = FieldMaskUtil.fromString(json.getAsString());,if (FieldMaskUtil != null ) FieldMask value = FieldMaskUtil.fromString(json.getAsString());
JsonFormat.java,Timestamp value = TimeUtil.parseTimestamp(json.getAsString());,if (TimeUtil != null ) Timestamp value = TimeUtil.parseTimestamp(json.getAsString());
JsonFormat.java,Duration value = TimeUtil.parseDuration(json.getAsString());,if (TimeUtil != null ) Duration value = TimeUtil.parseDuration(json.getAsString());
TimeUtil.java,long seconds = duration.getSeconds();,if (duration != null ) long seconds = duration.getSeconds();
TimeUtil.java,int nanos = duration.getNanos();,if (duration != null ) int nanos = duration.getNanos();
AbstractMessage.java,Iterator iterator = list.iterator();,if (list != null ) Iterator iterator = list.iterator();
AbstractMessage.java,Message entry = (Message) iterator.next();,if (iterator != null ) Message entry = (Message) iterator.next();
AbstractMessage.java,Descriptors.Descriptor descriptor = entry.getDescriptorForType();,if (entry != null ) Descriptors.Descriptor descriptor = entry.getDescriptorForType();
AbstractMessage.java,entry = (Message) iterator.next();,if (iterator != null ) entry = (Message) iterator.next();
AbstractMessage.java,FieldDescriptor field = entry.getKey();,if (entry != null ) FieldDescriptor field = entry.getKey();
AbstractMessage.java,Object value = entry.getValue();,if (entry != null ) Object value = entry.getValue();
AbstractMessage.java,final FieldDescriptor field = entry.getKey();,if (entry != null ) final FieldDescriptor field = entry.getKey();
AbstractMessage.java,final int tag = input.readTag();,if (input != null ) final int tag = input.readTag();
AbstractMessageLite.java,final CodedInputStream input = data.newCodedInput();,if (data != null ) final CodedInputStream input = data.newCodedInput();
AbstractMessageLite.java,final CodedInputStream input = data.newCodedInput();,if (data != null ) final CodedInputStream input = data.newCodedInput();
AbstractMessageLite.java,final int result = super.read();,if (super != null ) final int result = super.read();
AbstractMessageLite.java,final int firstByte = input.read();,if (input != null ) final int firstByte = input.read();
AbstractParser.java,CodedInputStream input = data.newCodedInput();,if (data != null ) CodedInputStream input = data.newCodedInput();
AbstractParser.java,int firstByte = input.read();,if (input != null ) int firstByte = input.read();
BooleanArrayList.java,array = list.array.clone();,if (list != null ) array = list.array.clone();
BooleanArrayList.java,size = other.size();,if (other != null ) size = other.size();
CodedOutputStream.java,ByteBuffer duplicated = value.duplicate();,if (value != null ) ByteBuffer duplicated = value.duplicate();
CodedOutputStream.java,final int size = value.getSerializedSize();,if (value != null ) final int size = value.getSerializedSize();
CodedOutputStream.java,final int size = value.getSerializedSize();,if (value != null ) final int size = value.getSerializedSize();
CodedOutputStream.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
DoubleArrayList.java,array = list.array.clone();,if (list != null ) array = list.array.clone();
DoubleArrayList.java,size = other.size();,if (other != null ) size = other.size();
FloatArrayList.java,array = list.array.clone();,if (list != null ) array = list.array.clone();
FloatArrayList.java,size = other.size();,if (other != null ) size = other.size();
GeneratedMessageLite.java,unknownFields = UnknownFieldSetLite.getDefaultInstance();,if (UnknownFieldSetLite != null ) unknownFields = UnknownFieldSetLite.getDefaultInstance();
GeneratedMessageLite.java,parsedMessage = (MessageType) e.getUnfinishedMessage();,if (e != null ) parsedMessage = (MessageType) e.getUnfinishedMessage();
IntArrayList.java,array = list.array.clone();,if (list != null ) array = list.array.clone();
IntArrayList.java,size = other.size();,if (other != null ) size = other.size();
LongArrayList.java,array = list.array.clone();,if (list != null ) array = list.array.clone();
LongArrayList.java,size = other.size();,if (other != null ) size = other.size();
MessageLiteToString.java,String fieldName = field.getName();,if (field != null ) String fieldName = field.getName();
BooleanArrayListTest.java,copy = new BooleanArrayList(BooleanArrayList.emptyList());,if (BooleanArrayList(BooleanArrayList != null ) copy = new BooleanArrayList(BooleanArrayList.emptyList());
CodedOutputStreamTest.java,byte[] bytes = rawOutput.toByteArray();,if (rawOutput != null ) byte[] bytes = rawOutput.toByteArray();
CodedOutputStreamTest.java,byte[] bytes = rawOutput.toByteArray();,if (rawOutput != null ) byte[] bytes = rawOutput.toByteArray();
CodedOutputStreamTest.java,byte[] rawBytes = message.toByteArray();,if (message != null ) byte[] rawBytes = message.toByteArray();
CodedOutputStreamTest.java,byte[] rawBytes = message.toByteArray();,if (message != null ) byte[] rawBytes = message.toByteArray();
CodedOutputStreamTest.java,byte[] rawBytes = message.toByteArray();,if (message != null ) byte[] rawBytes = message.toByteArray();
DoubleArrayListTest.java,copy = new DoubleArrayList(DoubleArrayList.emptyList());,if (DoubleArrayList(DoubleArrayList != null ) copy = new DoubleArrayList(DoubleArrayList.emptyList());
FloatArrayListTest.java,copy = new FloatArrayList(FloatArrayList.emptyList());,if (FloatArrayList(FloatArrayList != null ) copy = new FloatArrayList(FloatArrayList.emptyList());
GeneratedMessageTest.java,TestAllExtensionsLite original = TestUtil.getAllLiteExtensionsSet();,if (TestUtil != null ) TestAllExtensionsLite original = TestUtil.getAllLiteExtensionsSet();
IntArrayListTest.java,copy = new IntArrayList(IntArrayList.emptyList());,if (IntArrayList(IntArrayList != null ) copy = new IntArrayList(IntArrayList.emptyList());
LongArrayListTest.java,copy = new LongArrayList(LongArrayList.emptyList());,if (LongArrayList(LongArrayList != null ) copy = new LongArrayList(LongArrayList.emptyList());
ProtobufArrayListTest.java,copy = new ProtobufArrayList<Integer>(IntArrayList.emptyList());,if (ProtobufArrayList<Integer>(IntArrayList != null ) copy = new ProtobufArrayList<Integer>(IntArrayList.emptyList());
TestUtil.java,TestAllTypesLite.Builder builder = TestAllTypesLite.newBuilder();,if (TestAllTypesLite != null ) TestAllTypesLite.Builder builder = TestAllTypesLite.newBuilder();
TestUtil.java,TestAllExtensionsLite.Builder builder = TestAllExtensionsLite.newBuilder();,if (TestAllExtensionsLite != null ) TestAllExtensionsLite.Builder builder = TestAllExtensionsLite.newBuilder();
TestUtil.java,ExtensionRegistryLite registry = ExtensionRegistryLite.newInstance();,if (ExtensionRegistryLite != null ) ExtensionRegistryLite registry = ExtensionRegistryLite.newInstance();
WireFormatTest.java,TestAllExtensionsLite message = TestUtil.getAllLiteExtensionsSet();,if (TestUtil != null ) TestAllExtensionsLite message = TestUtil.getAllLiteExtensionsSet();
WireFormatTest.java,TestPackedExtensionsLite message = TestUtil.getLitePackedExtensionsSet();,if (TestUtil != null ) TestPackedExtensionsLite message = TestUtil.getLitePackedExtensionsSet();
WireFormatTest.java,TestPackedExtensionsLite message = TestUtil.getLitePackedExtensionsSet();,if (TestUtil != null ) TestPackedExtensionsLite message = TestUtil.getLitePackedExtensionsSet();
WireFormatTest.java,ExtensionRegistryLite registry = TestUtil.getExtensionRegistryLite();,if (TestUtil != null ) ExtensionRegistryLite registry = TestUtil.getExtensionRegistryLite();
CodedOutputStream.java,final int size = value.getSerializedSize();,if (value != null ) final int size = value.getSerializedSize();
CodedOutputStream.java,ByteBuffer duplicated = value.duplicate();,if (value != null ) ByteBuffer duplicated = value.duplicate();
NioByteString.java,this.buffer = buffer.slice();,if (buffer != null ) this.buffer = buffer.slice();
NioByteString.java,bytes = buffer.array();,if (buffer != null ) bytes = buffer.array();
NioByteString.java,startIndex = buffer.arrayOffset() + buffer.position();,if (buffer != null ) startIndex = buffer.arrayOffset() + buffer.position();
NioByteString.java,bytes = buffer.array();,if (buffer != null ) bytes = buffer.array();
NioByteString.java,startIndex = buffer.arrayOffset() + buffer.position();,if (buffer != null ) startIndex = buffer.arrayOffset() + buffer.position();
TextFormat.java,final StringBuilder builder = new StringBuilder(input.size());,if (StringBuilder(input != null ) final StringBuilder builder = new StringBuilder(input.size());
LiteTest.java,ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray());,if (ByteArrayInputStream(baos != null ) ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray());
LiteTest.java,TestAllTypesLite actual = (TestAllTypesLite) in.readObject();,if (in != null ) TestAllTypesLite actual = (TestAllTypesLite) in.readObject();
LiteralByteStringTest.java,byte[] newBytes = stringUnderTest.toByteArray();,if (stringUnderTest != null ) byte[] newBytes = stringUnderTest.toByteArray();
ParseExceptionsTest.java,DescriptorProto.Builder builder = DescriptorProto.newBuilder();,if (DescriptorProto != null ) DescriptorProto.Builder builder = DescriptorProto.newBuilder();
ParseExceptionsTest.java,DescriptorProto.Builder builder = DescriptorProto.newBuilder();,if (DescriptorProto != null ) DescriptorProto.Builder builder = DescriptorProto.newBuilder();
TextFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
UnknownFieldSetLiteTest.java,UnknownFieldSetLite.Builder builder = UnknownFieldSetLite.newBuilder();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite.Builder builder = UnknownFieldSetLite.newBuilder();
UnknownFieldSetLiteTest.java,UnknownFieldSetLite.Builder builder = UnknownFieldSetLite.newBuilder();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite.Builder builder = UnknownFieldSetLite.newBuilder();
CodedInputStream.java,bufferPos = byteString.getOffsetIntoBytes();,if (byteString != null ) bufferPos = byteString.getOffsetIntoBytes();
CodedInputStream.java,bufferSize = bufferPos + byteString.size();,if (byteString != null ) bufferSize = bufferPos + byteString.size();
LiteralByteStringTest.java,String actualClassName = object.getClass().getName();,if (object != null ) String actualClassName = object.getClass().getName();
LiteralByteString.java,int thatHash = otherAsLiteral.peekCachedHashCode();,if (otherAsLiteral != null ) int thatHash = otherAsLiteral.peekCachedHashCode();
ParseExceptionsTest.java,serializedProto = bos.toByteArray();,if (bos != null ) serializedProto = bos.toByteArray();
ParseExceptionsTest.java,DescriptorProto.Builder builder = DescriptorProto.newBuilder();,if (DescriptorProto != null ) DescriptorProto.Builder builder = DescriptorProto.newBuilder();
ParseExceptionsTest.java,DescriptorProto.Builder builder = DescriptorProto.newBuilder();,if (DescriptorProto != null ) DescriptorProto.Builder builder = DescriptorProto.newBuilder();
ByteString.java,int otherSize = other.size();,if (other != null ) int otherSize = other.size();
ByteString.java,"result = balancedConcat(collection.iterator(), collection.size());","if (collection != null ) result = balancedConcat(collection.iterator(), collection.size());"
RopeByteString.java,int newLength = left.size() + right.size();,if (right != null ) int newLength = left.size() + right.size();
RopeByteString.java,LiteralByteString byteString = pieces.next();,if (pieces != null ) LiteralByteString byteString = pieces.next();
RopeByteString.java,int cachedOtherHash = otherByteString.peekCachedHashCode();,if (otherByteString != null ) int cachedOtherHash = otherByteString.peekCachedHashCode();
RopeByteString.java,LiteralByteString thisString = thisIter.next();,if (thisIter != null ) LiteralByteString thisString = thisIter.next();
RopeByteString.java,LiteralByteString thatString = thatIter.next();,if (thatIter != null ) LiteralByteString thatString = thatIter.next();
RopeByteString.java,bytes = pieces.next().iterator();,if (pieces != null ) bytes = pieces.next().iterator();
RopeByteString.java,bytes = pieces.next().iterator();,if (pieces != null ) bytes = pieces.next().iterator();
JsonFormat.java,StringBuilder result = new StringBuilder(name.length());,if (StringBuilder(name != null ) StringBuilder result = new StringBuilder(name.length());
JsonFormat.java,BigInteger value = new BigInteger(json.getAsString());,if (BigInteger(json != null ) BigInteger value = new BigInteger(json.getAsString());
JsonFormatTest.java,builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) builder = TestAllTypes.newBuilder();
JsonFormatTest.java,message = builder.build();,if (builder != null ) message = builder.build();
JsonFormatTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
JsonFormatTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
JsonFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageLite.java,int rawValue = input.readEnum();,if (input != null ) int rawValue = input.readEnum();
GeneratedMessageLite.java,subBuilder = existingValue.toBuilder();,if (existingValue != null ) subBuilder = existingValue.toBuilder();
GeneratedMessageLite.java,value = subBuilder.build();,if (subBuilder != null ) value = subBuilder.build();
GeneratedMessageLite.java,int rawValue = input.readEnum();,if (input != null ) int rawValue = input.readEnum();
UnknownFieldSetLite.java,final int tag = input.readTag();,if (input != null ) final int tag = input.readTag();
UnknownFieldSetLiteTest.java,UnknownFieldSetLite.Builder builder = UnknownFieldSetLite.newBuilder();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite.Builder builder = UnknownFieldSetLite.newBuilder();
UnknownFieldSetLiteTest.java,UnknownFieldSetLite.Builder builder = UnknownFieldSetLite.newBuilder();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite.Builder builder = UnknownFieldSetLite.newBuilder();
UnknownFieldSetLiteTest.java,UnknownFieldSetLite.Builder builder = UnknownFieldSetLite.newBuilder();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite.Builder builder = UnknownFieldSetLite.newBuilder();
UnknownFieldSetLiteTest.java,UnknownFieldSetLite.Builder builder = UnknownFieldSetLite.newBuilder();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite.Builder builder = UnknownFieldSetLite.newBuilder();
UnknownFieldSetLiteTest.java,UnknownFieldSetLite.Builder builder = UnknownFieldSetLite.newBuilder();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite.Builder builder = UnknownFieldSetLite.newBuilder();
UnknownFieldSetLiteTest.java,UnknownFieldSetLite unknownFields = builder.build();,if (builder != null ) UnknownFieldSetLite unknownFields = builder.build();
UnknownFieldSetLiteTest.java,UnknownFieldSetLite.Builder builder = UnknownFieldSetLite.newBuilder();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite.Builder builder = UnknownFieldSetLite.newBuilder();
UnknownFieldSetLiteTest.java,UnknownFieldSetLite.Builder builder = UnknownFieldSetLite.newBuilder();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite.Builder builder = UnknownFieldSetLite.newBuilder();
Proto3Utf8Test.java,TestData.Builder builder = TestData.newBuilder();,if (TestData != null ) TestData.Builder builder = TestData.newBuilder();
Proto3Utf8Test.java,TestData data = builder.build();,if (builder != null ) TestData data = builder.build();
Proto3Utf8Test.java,TestData.Builder builder = TestData.newBuilder();,if (TestData != null ) TestData.Builder builder = TestData.newBuilder();
Proto3Utf8Test.java,TestData data = builder.build();,if (builder != null ) TestData data = builder.build();
Proto3Utf8Test.java,TestData.Builder builder = TestData.newBuilder();,if (TestData != null ) TestData.Builder builder = TestData.newBuilder();
Proto3Utf8Test.java,TestData data = builder.build();,if (builder != null ) TestData data = builder.build();
Proto3Utf8Test.java,TestData.Builder builder = TestData.newBuilder();,if (TestData != null ) TestData.Builder builder = TestData.newBuilder();
Proto3Utf8Test.java,TestData data = builder.build();,if (builder != null ) TestData data = builder.build();
Proto3Utf8Test.java,TestData.Builder builder = TestData.newBuilder();,if (TestData != null ) TestData.Builder builder = TestData.newBuilder();
Proto3Utf8Test.java,TestData data = builder.build();,if (builder != null ) TestData data = builder.build();
UnknownFieldSetLite.java,ByteString byteString = byteStringOutput.toByteString();,if (byteStringOutput != null ) ByteString byteString = byteStringOutput.toByteString();
UnknownFieldSetLite.java,final int tag = input.readTag();,if (input != null ) final int tag = input.readTag();
LazyStringEndToEndTest.java,String aPrime = proto.getOptionalString();,if (proto != null ) String aPrime = proto.getOptionalString();
MapForProto2LiteTest.java,message = TestMap.PARSER.parseFrom(message.toByteString());,if (TestMap != null ) message = TestMap.PARSER.parseFrom(message.toByteString());
MapForProto2LiteTest.java,message = TestMap.PARSER.parseFrom(message.toByteString());,if (TestMap != null ) message = TestMap.PARSER.parseFrom(message.toByteString());
MapForProto2LiteTest.java,message = TestMap.PARSER.parseFrom(message.toByteString());,if (TestMap != null ) message = TestMap.PARSER.parseFrom(message.toByteString());
MapForProto2Test.java,message = TestMap.PARSER.parseFrom(message.toByteString());,if (TestMap != null ) message = TestMap.PARSER.parseFrom(message.toByteString());
MapForProto2Test.java,message = TestMap.PARSER.parseFrom(message.toByteString());,if (TestMap != null ) message = TestMap.PARSER.parseFrom(message.toByteString());
MapForProto2Test.java,message = TestMap.PARSER.parseFrom(message.toByteString());,if (TestMap != null ) message = TestMap.PARSER.parseFrom(message.toByteString());
MapTest.java,message = TestMap.PARSER.parseFrom(message.toByteString());,if (TestMap != null ) message = TestMap.PARSER.parseFrom(message.toByteString());
MapTest.java,message = TestMap.PARSER.parseFrom(message.toByteString());,if (TestMap != null ) message = TestMap.PARSER.parseFrom(message.toByteString());
MapTest.java,message = TestMap.PARSER.parseFrom(message.toByteString());,if (TestMap != null ) message = TestMap.PARSER.parseFrom(message.toByteString());
GeneratedMessageLite.java,unknownFields = UnknownFieldSetLite.getDefaultInstance();,if (UnknownFieldSetLite != null ) unknownFields = UnknownFieldSetLite.getDefaultInstance();
GeneratedMessageLite.java,extensions = extensions.clone();,if (extensions != null ) extensions = extensions.clone();
LazyFieldLite.java,bytes = value.toByteString();,if (value != null ) bytes = value.toByteString();
InternalNano.java,payload = input.readBytes();,if (input != null ) payload = input.readBytes();
InternalNano.java,value = valueClazz.newInstance();,if (valueClazz != null ) value = valueClazz.newInstance();
MapUtil.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
MapUtil.java,payload = input.readBytes();,if (input != null ) payload = input.readBytes();
MapUtil.java,value = valueClazz.newInstance();,if (valueClazz != null ) value = valueClazz.newInstance();
MapUtil.java,K key = entry.getKey();,if (entry != null ) K key = entry.getKey();
MapUtil.java,V value = entry.getValue();,if (entry != null ) V value = entry.getValue();
MapUtil.java,K key = entry.getKey();,if (entry != null ) K key = entry.getKey();
MapUtil.java,V value = entry.getValue();,if (entry != null ) V value = entry.getValue();
MapUtil.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
GeneratedMessageLite.java,unknownFields = UnknownFieldSetLite.getDefaultInstance();,if (UnknownFieldSetLite != null ) unknownFields = UnknownFieldSetLite.getDefaultInstance();
GeneratedMessageLite.java,this.extensions = FieldSet.newFieldSet();,if (FieldSet != null ) this.extensions = FieldSet.newFieldSet();
GeneratedMessageLite.java,this.extensions = builder.buildExtensions();,if (builder != null ) this.extensions = builder.buildExtensions();
MapEntry.java,data = dataBuilder.build();,if (dataBuilder != null ) data = dataBuilder.build();
LazyMessageLiteTest.java,ByteString bytes = outer.toByteString();,if (outer != null ) ByteString bytes = outer.toByteString();
TextFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TextFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
AbstractMessage.java,final FieldDescriptor field = entry.getKey();,if (entry != null ) final FieldDescriptor field = entry.getKey();
AbstractMessage.java,final FieldDescriptor field = entry.getKey();,if (entry != null ) final FieldDescriptor field = entry.getKey();
AbstractMessage.java,final Object value = entry.getValue();,if (entry != null ) final Object value = entry.getValue();
AbstractMessage.java,final FieldDescriptor field = entry.getKey();,if (entry != null ) final FieldDescriptor field = entry.getKey();
AbstractMessage.java,final Object value = entry.getValue();,if (entry != null ) final Object value = entry.getValue();
AbstractMessage.java,size += unknownFields.getSerializedSizeAsMessageSet();,if (unknownFields != null ) size += unknownFields.getSerializedSizeAsMessageSet();
AbstractMessage.java,size += unknownFields.getSerializedSize();,if (unknownFields != null ) size += unknownFields.getSerializedSize();
AbstractMessage.java,final int rawValue = input.readEnum();,if (input != null ) final int rawValue = input.readEnum();
AbstractMessage.java,subBuilder = defaultInstance.newBuilderForType();,if (defaultInstance != null ) subBuilder = defaultInstance.newBuilderForType();
AbstractMessage.java,value = subBuilder.buildPartial();,if (subBuilder != null ) value = subBuilder.buildPartial();
AbstractMessage.java,subBuilder = defaultInstance.newBuilderForType();,if (defaultInstance != null ) subBuilder = defaultInstance.newBuilderForType();
AbstractMessage.java,value = subBuilder.buildPartial();,if (subBuilder != null ) value = subBuilder.buildPartial();
AbstractMessage.java,final int rawValue = input.readEnum();,if (input != null ) final int rawValue = input.readEnum();
AbstractMessage.java,"value = FieldSet.readPrimitiveField(input, field.getLiteType());","if (field != null ) value = FieldSet.readPrimitiveField(input, field.getLiteType());"
AbstractMessage.java,final int tag = input.readTag();,if (input != null ) final int tag = input.readTag();
AbstractMessage.java,rawBytes = input.readBytes();,if (input != null ) rawBytes = input.readBytes();
AbstractMessage.java,Message.Builder subBuilder = originalMessage.toBuilder();,if (originalMessage != null ) Message.Builder subBuilder = originalMessage.toBuilder();
AbstractMessage.java,value = subBuilder.buildPartial();,if (subBuilder != null ) value = subBuilder.buildPartial();
AbstractMessage.java,Message.Builder subBuilder= originalMessage.toBuilder();,if (originalMessage != null ) Message.Builder subBuilder= originalMessage.toBuilder();
AbstractMessage.java,value = subBuilder.buildPartial();,if (subBuilder != null ) value = subBuilder.buildPartial();
AbstractMessage.java,final FieldDescriptor field = entry.getKey();,if (entry != null ) final FieldDescriptor field = entry.getKey();
AbstractMessage.java,final Object value = entry.getValue();,if (entry != null ) final Object value = entry.getValue();
CodedOutputStream.java,InputStream inputStreamFrom = value.newInput();,if (value != null ) InputStream inputStreamFrom = value.newInput();
GeneratedMessageLite.java,subBuilder = extension.messageDefaultInstance.newBuilderForType();,if (extension != null ) subBuilder = extension.messageDefaultInstance.newBuilderForType();
LazyField.java,bytes = value.toByteString();,if (value != null ) bytes = value.toByteString();
TextFormat.java,final Descriptor type = builder.getDescriptorForType();,if (builder != null ) final Descriptor type = builder.getDescriptorForType();
TextFormat.java,extension = extensionRegistry.findExtensionByName(name.toString());,if (extensionRegistry != null ) extension = extensionRegistry.findExtensionByName(name.toString());
TextFormat.java,final String name = tokenizer.consumeIdentifier();,if (tokenizer != null ) final String name = tokenizer.consumeIdentifier();
TextFormat.java,subBuilder = extension.defaultInstance.newBuilderForType();,if (extension != null ) subBuilder = extension.defaultInstance.newBuilderForType();
TextFormat.java,value = subBuilder.buildPartial();,if (subBuilder != null ) value = subBuilder.buildPartial();
TextFormat.java,value = tokenizer.consumeFloat();,if (tokenizer != null ) value = tokenizer.consumeFloat();
TextFormat.java,value = tokenizer.consumeDouble();,if (tokenizer != null ) value = tokenizer.consumeDouble();
TextFormat.java,value = tokenizer.consumeBoolean();,if (tokenizer != null ) value = tokenizer.consumeBoolean();
TextFormat.java,value = tokenizer.consumeString();,if (tokenizer != null ) value = tokenizer.consumeString();
TextFormat.java,value = tokenizer.consumeByteString();,if (tokenizer != null ) value = tokenizer.consumeByteString();
TextFormat.java,final EnumDescriptor enumType = field.getEnumType();,if (field != null ) final EnumDescriptor enumType = field.getEnumType();
TextFormat.java,final String id = tokenizer.consumeIdentifier();,if (tokenizer != null ) final String id = tokenizer.consumeIdentifier();
Extension.java,int resultSize = resultList.size();,if (resultList != null ) int resultSize = resultList.size();
WireFormatNano.java,int thisTag = input.readTag();,if (input != null ) int thisTag = input.readTag();
Extension.java,isRepeatedField = type.isList();,if (type != null ) isRepeatedField = type.isList();
Extension.java,fieldType = type.getTargetClass();,if (type != null ) fieldType = type.getTargetClass();
Extension.java,Type superclass = getClass().getGenericSuperclass();,if (getClass() != null ) Type superclass = getClass().getGenericSuperclass();
WireFormatNano.java,int startPos = input.getPosition();,if (input != null ) int startPos = input.getPosition();
WireFormatNano.java,int endPos = input.getPosition();,if (input != null ) int endPos = input.getPosition();
WireFormatNano.java,List<Object> result = new ArrayList<Object>(dataForField.size());,if (ArrayList<Object>(dataForField != null ) List<Object> result = new ArrayList<Object>(dataForField.size());
WireFormatNano.java,MessageNano message = (MessageNano) clazz.newInstance();,if (clazz != null ) MessageNano message = (MessageNano) clazz.newInstance();
WireFormatNano.java,int messageSize = messageValue.getSerializedSize();,if (messageValue != null ) int messageSize = messageValue.getSerializedSize();
AbstractMessage.java,final Descriptor type = builder.getDescriptorForType();,if (builder != null ) final Descriptor type = builder.getDescriptorForType();
AbstractMessage.java,value = subBuilder.build();,if (subBuilder != null ) value = subBuilder.build();
AbstractMessage.java,value = subBuilder.build();,if (subBuilder != null ) value = subBuilder.build();
AbstractMessage.java,final Descriptor type = builder.getDescriptorForType();,if (builder != null ) final Descriptor type = builder.getDescriptorForType();
AbstractMessage.java,subBuilder = extension.defaultInstance.newBuilderForType();,if (extension != null ) subBuilder = extension.defaultInstance.newBuilderForType();
AbstractMessage.java,rawBytes = input.readBytes();,if (input != null ) rawBytes = input.readBytes();
ByteString.java,size += str.size();,if (str != null ) size += str.size();
ByteString.java,pos += str.size();,if (str != null ) pos += str.size();
Descriptors.java,result = findSymbol(scopeToTry.toString());,if (findSymbol(scopeToTry != null ) result = findSymbol(scopeToTry.toString());
Descriptors.java,result = findSymbol(scopeToTry.toString());,if (findSymbol(scopeToTry != null ) result = findSymbol(scopeToTry.toString());
FieldSet.java,final Object otherValue = entry.getValue();,if (entry != null ) final Object otherValue = entry.getValue();
GeneratedMessage.java,this.unknownFields = UnknownFieldSet.getDefaultInstance();,if (UnknownFieldSet != null ) this.unknownFields = UnknownFieldSet.getDefaultInstance();
GeneratedMessage.java,this.unknownFields = builder.getUnknownFields();,if (builder != null ) this.unknownFields = builder.getUnknownFields();
GeneratedMessageLite.java,final int rawValue = input.readEnum();,if (input != null ) final int rawValue = input.readEnum();
GeneratedMessageLite.java,subBuilder = existingValue.toBuilder();,if (existingValue != null ) subBuilder = existingValue.toBuilder();
GeneratedMessageLite.java,subBuilder = extension.messageDefaultInstance.newBuilderForType();,if (extension != null ) subBuilder = extension.messageDefaultInstance.newBuilderForType();
GeneratedMessageLite.java,value = subBuilder.build();,if (subBuilder != null ) value = subBuilder.build();
GeneratedMessageLite.java,final int rawValue = input.readEnum();,if (input != null ) final int rawValue = input.readEnum();
Internal.java,int size = byteString.size();,if (byteString != null ) int size = byteString.size();
TextFormat.java,value = subBuilder.build();,if (subBuilder != null ) value = subBuilder.build();
FieldSet.java,this.fields = Collections.emptyMap();,if (Collections != null ) this.fields = Collections.emptyMap();
FieldSet.java,final List value = (List)entry.getValue();,if ((List)entry != null ) final List value = (List)entry.getValue();
FieldSet.java,final FieldDescriptorType descriptor = entry.getKey();,if (entry != null ) final FieldDescriptorType descriptor = entry.getKey();
FieldSet.java,final FieldDescriptorType descriptor = entry.getKey();,if (entry != null ) final FieldDescriptorType descriptor = entry.getKey();
FieldSet.java,final Object otherValue = entry.getValue();,if (entry != null ) final Object otherValue = entry.getValue();
FieldSet.java,final FieldDescriptorType descriptor = entry.getKey();,if (entry != null ) final FieldDescriptorType descriptor = entry.getKey();
FieldSet.java,final FieldDescriptorType descriptor = entry.getKey();,if (entry != null ) final FieldDescriptorType descriptor = entry.getKey();
FieldSet.java,"size += computeFieldSize(descriptor, entry.getValue());","if (entry != null ) size += computeFieldSize(descriptor, entry.getValue());"
GeneratedMessage.java,private UnknownFieldSet unknownFields = UnknownFieldSet.getDefaultInstance();,if (UnknownFieldSet != null ) private UnknownFieldSet unknownFields = UnknownFieldSet.getDefaultInstance();
CodedOutputStreamTest.java,CodedInputStream in = CodedInputStream.newInstance(output.toByteArray());,if (CodedInputStream != null ) CodedInputStream in = CodedInputStream.newInstance(output.toByteArray());
CodedOutputStreamTest.java,in = CodedInputStream.newInstance(output.toByteArray());,if (CodedInputStream != null ) in = CodedInputStream.newInstance(output.toByteArray());
PerfTimer.java,double innerLoopTime = stats.getMinInMicros();,if (stats != null ) double innerLoopTime = stats.getMinInMicros();
PerfTimer.java,innerLoopTime = stats.getMedianInMicros();,if (stats != null ) innerLoopTime = stats.getMedianInMicros();
PerfTimer.java,int innerLoops = mStats.getInnerLoops();,if (mStats != null ) int innerLoops = mStats.getInnerLoops();
PerfTimer.java,int innerLoops = mStats.getInnerLoops();,if (mStats != null ) int innerLoops = mStats.getInnerLoops();
PerfTimer.java,double innerLoopTime = stats.getMinInMicros();,if (stats != null ) double innerLoopTime = stats.getMinInMicros();
PerfTimer.java,innerLoopTime = stats.getMedianInMicros();,if (stats != null ) innerLoopTime = stats.getMedianInMicros();
PerfTimer.java,int innerLoops = mStats.getInnerLoops();,if (mStats != null ) int innerLoops = mStats.getInnerLoops();
PerfTimer.java,int innerLoops = mStats.getInnerLoops();,if (mStats != null ) int innerLoops = mStats.getInnerLoops();
Descriptors.java,defaultValue = Float.valueOf(proto.getDefaultValue());,if (Float != null ) defaultValue = Float.valueOf(proto.getDefaultValue());
Descriptors.java,defaultValue = Double.valueOf(proto.getDefaultValue());,if (Double != null ) defaultValue = Double.valueOf(proto.getDefaultValue());
ProtoBuf.java,long l = is.read();,if (is != null ) long l = is.read();
ProtoBuf.java,int in = is.read();,if (is != null ) int in = is.read();
ProtoBufUtil.java,int size = dataInput.readInt();,if (dataInput != null ) int size = dataInput.readInt();
ProtoBufUtil.java,byte[] bytes = baos.toByteArray();,if (baos != null ) byte[] bytes = baos.toByteArray();
ProtoBench.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
ProtoBench.java,long end = System.currentTimeMillis();,if (System != null ) long end = System.currentTimeMillis();
UnknownFieldSet.java,Builder builder = builders.get().poll();,if (builders != null ) Builder builder = builders.get().poll();
UnknownFieldSet.java,Builder builder = builders.get().poll();,if (builders != null ) Builder builder = builders.get().poll();
AbstractMessage.java,FieldDescriptor field = entry.getKey();,if (entry != null ) FieldDescriptor field = entry.getKey();
AbstractMessage.java,FieldDescriptor field = entry.getKey();,if (entry != null ) FieldDescriptor field = entry.getKey();
AbstractMessage.java,List valueList = (List) entry.getValue();,if (entry != null ) List valueList = (List) entry.getValue();
AbstractMessage.java,FieldDescriptor field = entry.getKey();,if (entry != null ) FieldDescriptor field = entry.getKey();
AbstractMessage.java,List valueList = (List) entry.getValue();,if (entry != null ) List valueList = (List) entry.getValue();
AbstractMessage.java,size += CodedOutputStream.computeTagSize(field.getNumber());,if (CodedOutputStream != null ) size += CodedOutputStream.computeTagSize(field.getNumber());
AbstractMessage.java,FieldDescriptor field = entry.getKey();,if (entry != null ) FieldDescriptor field = entry.getKey();
AbstractMessage.java,CodedInputStream input = data.newCodedInput();,if (data != null ) CodedInputStream input = data.newCodedInput();
AbstractMessage.java,CodedInputStream input = data.newCodedInput();,if (data != null ) CodedInputStream input = data.newCodedInput();
AbstractMessage.java,int result = super.read();,if (super != null ) int result = super.read();
ByteString.java,byte[] byteArray = bout.toByteArray();,if (bout != null ) byte[] byteArray = bout.toByteArray();
CodedInputStream.java,int b = input.read();,if (input != null ) int b = input.read();
CodedInputStream.java,int b = input.read();,if (input != null ) int b = input.read();
CodedOutputStream.java,byte[] bytes = value.toByteArray();,if (value != null ) byte[] bytes = value.toByteArray();
CodedOutputStream.java,int size = value.getSerializedSize();,if (value != null ) int size = value.getSerializedSize();
Descriptors.java,this.type = Type.valueOf(proto.getType());,if (Type != null ) this.type = Type.valueOf(proto.getType());
Descriptors.java,"this.fullName = parent.getFullName() + ""."" + proto.getName();","if (proto != null ) this.fullName = parent.getFullName() + ""."" + proto.getName();"
Descriptors.java,"this.fullName = parent.getFullName() + ""."" + proto.getName();","if (proto != null ) this.fullName = parent.getFullName() + ""."" + proto.getName();"
Descriptors.java,this.name = problemDescriptor.getFullName();,if (problemDescriptor != null ) this.name = problemDescriptor.getFullName();
Descriptors.java,this.proto = problemDescriptor.toProto();,if (problemDescriptor != null ) this.proto = problemDescriptor.toProto();
Descriptors.java,this.name = problemDescriptor.getName();,if (problemDescriptor != null ) this.name = problemDescriptor.getName();
Descriptors.java,this.proto = problemDescriptor.toProto();,if (problemDescriptor != null ) this.proto = problemDescriptor.toProto();
Descriptors.java,StringBuilder scopeToTry = new StringBuilder(relativeTo.getFullName());,if (StringBuilder(relativeTo != null ) StringBuilder scopeToTry = new StringBuilder(relativeTo.getFullName());
Descriptors.java,String fullName = descriptor.getFullName();,if (descriptor != null ) String fullName = descriptor.getFullName();
Descriptors.java,String name = descriptor.getName();,if (descriptor != null ) String name = descriptor.getName();
DynamicMessage.java,result = getDefaultInstance(field.getMessageType());,if (getDefaultInstance(field != null ) result = getDefaultInstance(field.getMessageType());
DynamicMessage.java,size = fields.getSerializedSize();,if (fields != null ) size = fields.getSerializedSize();
DynamicMessage.java,unknownFields = unknownFieldsBuilder.build();,if (unknownFieldsBuilder != null ) unknownFields = unknownFieldsBuilder.build();
DynamicMessage.java,result = getDefaultInstance(field.getMessageType());,if (getDefaultInstance(field != null ) result = getDefaultInstance(field.getMessageType());
FieldSet.java,List value = (List)entry.getValue();,if ((List)entry != null ) List value = (List)entry.getValue();
FieldSet.java,FieldDescriptor field = entry.getKey();,if (entry != null ) FieldDescriptor field = entry.getKey();
FieldSet.java,FieldDescriptor field = entry.getKey();,if (entry != null ) FieldDescriptor field = entry.getKey();
FieldSet.java,FieldDescriptor field = entry.getKey();,if (entry != null ) FieldDescriptor field = entry.getKey();
FieldSet.java,Object value = entry.getValue();,if (entry != null ) Object value = entry.getValue();
FieldSet.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
FieldSet.java,Descriptor type = builder.getDescriptorForType();,if (builder != null ) Descriptor type = builder.getDescriptorForType();
FieldSet.java,int rawValue = input.readEnum();,if (input != null ) int rawValue = input.readEnum();
FieldSet.java,Object value = input.readPrimitiveField(field.getType());,if (input != null ) Object value = input.readPrimitiveField(field.getType());
FieldSet.java,subBuilder = defaultInstance.newBuilderForType();,if (defaultInstance != null ) subBuilder = defaultInstance.newBuilderForType();
FieldSet.java,value = subBuilder.build();,if (subBuilder != null ) value = subBuilder.build();
FieldSet.java,subBuilder = defaultInstance.newBuilderForType();,if (defaultInstance != null ) subBuilder = defaultInstance.newBuilderForType();
FieldSet.java,value = subBuilder.build();,if (subBuilder != null ) value = subBuilder.build();
FieldSet.java,int rawValue = input.readEnum();,if (input != null ) int rawValue = input.readEnum();
FieldSet.java,value = input.readPrimitiveField(field.getType());,if (input != null ) value = input.readPrimitiveField(field.getType());
FieldSet.java,Descriptor type = builder.getDescriptorForType();,if (builder != null ) Descriptor type = builder.getDescriptorForType();
FieldSet.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
FieldSet.java,subBuilder = extension.defaultInstance.newBuilderForType();,if (extension != null ) subBuilder = extension.defaultInstance.newBuilderForType();
FieldSet.java,rawBytes = input.readBytes();,if (input != null ) rawBytes = input.readBytes();
FieldSet.java,FieldDescriptor field = entry.getKey();,if (entry != null ) FieldDescriptor field = entry.getKey();
FieldSet.java,Object value = entry.getValue();,if (entry != null ) Object value = entry.getValue();
GeneratedMessage.java,FieldDescriptor field = entry.getKey();,if (entry != null ) FieldDescriptor field = entry.getKey();
GeneratedMessage.java,Object value = extensions.getField(extension.getDescriptor());,if (extensions != null ) Object value = extensions.getField(extension.getDescriptor());
TextFormat.java,UnknownFieldSet.Field field = entry.getValue();,if (entry != null ) UnknownFieldSet.Field field = entry.getValue();
TextFormat.java,int length = indent.length();,if (indent != null ) int length = indent.length();
TextFormat.java,int size = text.length();,if (text != null ) int size = text.length();
TextFormat.java,Descriptor type = builder.getDescriptorForType();,if (builder != null ) Descriptor type = builder.getDescriptorForType();
TextFormat.java,StringBuilder name = new StringBuilder(tokenizer.consumeIdentifier());,if (StringBuilder(tokenizer != null ) StringBuilder name = new StringBuilder(tokenizer.consumeIdentifier());
TextFormat.java,String name = tokenizer.consumeIdentifier();,if (tokenizer != null ) String name = tokenizer.consumeIdentifier();
TextFormat.java,EnumDescriptor enumType = field.getEnumType();,if (field != null ) EnumDescriptor enumType = field.getEnumType();
TextFormat.java,String id = tokenizer.consumeIdentifier();,if (tokenizer != null ) String id = tokenizer.consumeIdentifier();
TextFormat.java,StringBuilder builder = new StringBuilder(input.size());,if (StringBuilder(input != null ) StringBuilder builder = new StringBuilder(input.size());
UninitializedMessageException.java,FieldDescriptor field = entry.getKey();,if (entry != null ) FieldDescriptor field = entry.getKey();
UninitializedMessageException.java,Object value = entry.getValue();,if (entry != null ) Object value = entry.getValue();
UnknownFieldSet.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
UnknownFieldSet.java,UnknownFieldSet.Builder subBuilder = UnknownFieldSet.newBuilder();,if (UnknownFieldSet != null ) UnknownFieldSet.Builder subBuilder = UnknownFieldSet.newBuilder();
UnknownFieldSet.java,CodedInputStream input = data.newCodedInput();,if (data != null ) CodedInputStream input = data.newCodedInput();
IntMap.java,higherKeyEnumerator = higher.keys();,if (higher != null ) higherKeyEnumerator = higher.keys();
IntMap.java,Integer key = (Integer) higherKeyEnumerator.nextElement();,if (higherKeyEnumerator != null ) Integer key = (Integer) higherKeyEnumerator.nextElement();
IntMap.java,currentKey = key.intValue();,if (key != null ) currentKey = key.intValue();
ProtoBuf.java,values = type.newIntMapForProtoBuf();,if (type != null ) values = type.newIntMapForProtoBuf();
ProtoBuf.java,wireTypes = type.newIntMapForProtoBuf();,if (type != null ) wireTypes = type.newIntMapForProtoBuf();
ProtoBuf.java,tagType = tagTypeObj.intValue();,if (tagTypeObj != null ) tagType = tagTypeObj.intValue();
ProtoBuf.java,IntMap.KeyIterator itr = values.keys();,if (values != null ) IntMap.KeyIterator itr = values.keys();
ProtoBuf.java,int tag = itr.next();,if (itr != null ) int tag = itr.next();
ProtoBuf.java,IntMap.KeyIterator itr = values.keys();,if (values != null ) IntMap.KeyIterator itr = values.keys();
ProtoBuf.java,int tag = itr.next();,if (itr != null ) int tag = itr.next();
ProtoBuf.java,long l = is.read();,if (is != null ) long l = is.read();
ProtoBuf.java,int in = is.read();,if (is != null ) int in = is.read();
ProtoBufUtil.java,byte[] bytes = baos.toByteArray();,if (baos != null ) byte[] bytes = baos.toByteArray();
CodedOutputStream.java,byte[] bytes = value.toByteArray();,if (value != null ) byte[] bytes = value.toByteArray();
CodedOutputStream.java,int size = value.getSerializedSize();,if (value != null ) int size = value.getSerializedSize();
FieldSet.java,subBuilder = defaultInstance.newBuilderForType();,if (defaultInstance != null ) subBuilder = defaultInstance.newBuilderForType();
FieldSet.java,value = subBuilder.build();,if (subBuilder != null ) value = subBuilder.build();
FieldSet.java,subBuilder = defaultInstance.newBuilderForType();,if (defaultInstance != null ) subBuilder = defaultInstance.newBuilderForType();
FieldSet.java,value = subBuilder.build();,if (subBuilder != null ) value = subBuilder.build();
FieldSet.java,int rawValue = input.readEnum();,if (input != null ) int rawValue = input.readEnum();
FieldSet.java,value = input.readPrimitiveField(field.getType());,if (input != null ) value = input.readPrimitiveField(field.getType());
WireFormatTest.java,ExtensionRegistry registry = ExtensionRegistry.newInstance();,if (ExtensionRegistry != null ) ExtensionRegistry registry = ExtensionRegistry.newInstance();
WireFormatTest.java,registry = registry.getUnmodifiable();,if (registry != null ) registry = registry.getUnmodifiable();
GeneratedMessageTest.java,TestOptionalOptimizedForSize message = TestOptionalOptimizedForSize.getDefaultInstance();,if (TestOptionalOptimizedForSize != null ) TestOptionalOptimizedForSize message = TestOptionalOptimizedForSize.getDefaultInstance();
AddPerson.java,Person.Builder person = Person.newBuilder();,if (Person != null ) Person.Builder person = Person.newBuilder();
AddPerson.java,String email = stdin.readLine();,if (stdin != null ) String email = stdin.readLine();
AddPerson.java,String number = stdin.readLine();,if (stdin != null ) String number = stdin.readLine();
AddPerson.java,String type = stdin.readLine();,if (stdin != null ) String type = stdin.readLine();
AddPerson.java,AddressBook.Builder addressBook = AddressBook.newBuilder();,if (AddressBook != null ) AddressBook.Builder addressBook = AddressBook.newBuilder();
AbstractMessage.java,FieldDescriptor field = entry.getKey();,if (entry != null ) FieldDescriptor field = entry.getKey();
AbstractMessage.java,FieldDescriptor field = entry.getKey();,if (entry != null ) FieldDescriptor field = entry.getKey();
AbstractMessage.java,FieldDescriptor field = entry.getKey();,if (entry != null ) FieldDescriptor field = entry.getKey();
AbstractMessage.java,size += unknownFields.getSerializedSizeAsMessageSet();,if (unknownFields != null ) size += unknownFields.getSerializedSizeAsMessageSet();
AbstractMessage.java,size += unknownFields.getSerializedSize();,if (unknownFields != null ) size += unknownFields.getSerializedSize();
AbstractMessage.java,FieldDescriptor field = entry.getKey();,if (entry != null ) FieldDescriptor field = entry.getKey();
AbstractMessage.java,CodedInputStream input = data.newCodedInput();,if (data != null ) CodedInputStream input = data.newCodedInput();
AbstractMessage.java,CodedInputStream input = data.newCodedInput();,if (data != null ) CodedInputStream input = data.newCodedInput();
ByteString.java,byte[] byteArray = bout.toByteArray();,if (bout != null ) byte[] byteArray = bout.toByteArray();
CodedOutputStream.java,byte[] bytes = value.toByteArray();,if (value != null ) byte[] bytes = value.toByteArray();
CodedOutputStream.java,int size = value.getSerializedSize();,if (value != null ) int size = value.getSerializedSize();
Descriptors.java,this.dependencies = dependencies.clone();,if (dependencies != null ) this.dependencies = dependencies.clone();
Descriptors.java,this.type = Type.valueOf(proto.getType());,if (Type != null ) this.type = Type.valueOf(proto.getType());
Descriptors.java,defaultValue = Float.valueOf(proto.getDefaultValue());,if (Float != null ) defaultValue = Float.valueOf(proto.getDefaultValue());
Descriptors.java,defaultValue = Double.valueOf(proto.getDefaultValue());,if (Double != null ) defaultValue = Double.valueOf(proto.getDefaultValue());
Descriptors.java,defaultValue = Boolean.valueOf(proto.getDefaultValue());,if (Boolean != null ) defaultValue = Boolean.valueOf(proto.getDefaultValue());
Descriptors.java,defaultValue = proto.getDefaultValue();,if (proto != null ) defaultValue = proto.getDefaultValue();
Descriptors.java,defaultValue = enumType.findValueByName(proto.getDefaultValue());,if (enumType != null ) defaultValue = enumType.findValueByName(proto.getDefaultValue());
Descriptors.java,"this.fullName = parent.getFullName() + ""."" + proto.getName();","if (proto != null ) this.fullName = parent.getFullName() + ""."" + proto.getName();"
Descriptors.java,"this.fullName = parent.getFullName() + ""."" + proto.getName();","if (proto != null ) this.fullName = parent.getFullName() + ""."" + proto.getName();"
Descriptors.java,this.name = problemDescriptor.getFullName();,if (problemDescriptor != null ) this.name = problemDescriptor.getFullName();
Descriptors.java,this.proto = problemDescriptor.toProto();,if (problemDescriptor != null ) this.proto = problemDescriptor.toProto();
Descriptors.java,this.name = problemDescriptor.getName();,if (problemDescriptor != null ) this.name = problemDescriptor.getName();
Descriptors.java,this.proto = problemDescriptor.toProto();,if (problemDescriptor != null ) this.proto = problemDescriptor.toProto();
Descriptors.java,StringBuilder scopeToTry = new StringBuilder(relativeTo.getFullName());,if (StringBuilder(relativeTo != null ) StringBuilder scopeToTry = new StringBuilder(relativeTo.getFullName());
Descriptors.java,result = findSymbol(scopeToTry.toString());,if (findSymbol(scopeToTry != null ) result = findSymbol(scopeToTry.toString());
Descriptors.java,result = findSymbol(scopeToTry.toString());,if (findSymbol(scopeToTry != null ) result = findSymbol(scopeToTry.toString());
Descriptors.java,String fullName = descriptor.getFullName();,if (descriptor != null ) String fullName = descriptor.getFullName();
Descriptors.java,String name = descriptor.getName();,if (descriptor != null ) String name = descriptor.getName();
DynamicMessage.java,result = getDefaultInstance(field.getMessageType());,if (getDefaultInstance(field != null ) result = getDefaultInstance(field.getMessageType());
DynamicMessage.java,size = fields.getSerializedSize();,if (fields != null ) size = fields.getSerializedSize();
DynamicMessage.java,size += unknownFields.getSerializedSizeAsMessageSet();,if (unknownFields != null ) size += unknownFields.getSerializedSizeAsMessageSet();
DynamicMessage.java,size += unknownFields.getSerializedSize();,if (unknownFields != null ) size += unknownFields.getSerializedSize();
DynamicMessage.java,this.fields = FieldSet.newFieldSet();,if (FieldSet != null ) this.fields = FieldSet.newFieldSet();
DynamicMessage.java,this.unknownFields = UnknownFieldSet.getDefaultInstance();,if (UnknownFieldSet != null ) this.unknownFields = UnknownFieldSet.getDefaultInstance();
DynamicMessage.java,unknownFields = unknownFieldsBuilder.build();,if (unknownFieldsBuilder != null ) unknownFields = unknownFieldsBuilder.build();
DynamicMessage.java,result = getDefaultInstance(field.getMessageType());,if (getDefaultInstance(field != null ) result = getDefaultInstance(field.getMessageType());
FieldSet.java,List value = (List)entry.getValue();,if ((List)entry != null ) List value = (List)entry.getValue();
FieldSet.java,FieldDescriptor field = entry.getKey();,if (entry != null ) FieldDescriptor field = entry.getKey();
FieldSet.java,FieldDescriptor field = entry.getKey();,if (entry != null ) FieldDescriptor field = entry.getKey();
FieldSet.java,FieldDescriptor field = entry.getKey();,if (entry != null ) FieldDescriptor field = entry.getKey();
FieldSet.java,Object value = entry.getValue();,if (entry != null ) Object value = entry.getValue();
FieldSet.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
FieldSet.java,Descriptor type = builder.getDescriptorForType();,if (builder != null ) Descriptor type = builder.getDescriptorForType();
FieldSet.java,subBuilder = defaultInstance.newBuilderForType();,if (defaultInstance != null ) subBuilder = defaultInstance.newBuilderForType();
FieldSet.java,value = subBuilder.build();,if (subBuilder != null ) value = subBuilder.build();
FieldSet.java,subBuilder = defaultInstance.newBuilderForType();,if (defaultInstance != null ) subBuilder = defaultInstance.newBuilderForType();
FieldSet.java,value = subBuilder.build();,if (subBuilder != null ) value = subBuilder.build();
FieldSet.java,int rawValue = input.readEnum();,if (input != null ) int rawValue = input.readEnum();
FieldSet.java,value = input.readPrimitiveField(field.getType());,if (input != null ) value = input.readPrimitiveField(field.getType());
FieldSet.java,Descriptor type = builder.getDescriptorForType();,if (builder != null ) Descriptor type = builder.getDescriptorForType();
FieldSet.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
FieldSet.java,subBuilder = extension.defaultInstance.newBuilderForType();,if (extension != null ) subBuilder = extension.defaultInstance.newBuilderForType();
FieldSet.java,rawBytes = input.readBytes();,if (input != null ) rawBytes = input.readBytes();
FieldSet.java,FieldDescriptor field = entry.getKey();,if (entry != null ) FieldDescriptor field = entry.getKey();
FieldSet.java,Object value = entry.getValue();,if (entry != null ) Object value = entry.getValue();
GeneratedMessage.java,private UnknownFieldSet unknownFields = UnknownFieldSet.getDefaultInstance();,if (UnknownFieldSet != null ) private UnknownFieldSet unknownFields = UnknownFieldSet.getDefaultInstance();
GeneratedMessage.java,FieldDescriptor field = entry.getKey();,if (entry != null ) FieldDescriptor field = entry.getKey();
GeneratedMessage.java,Object value = extensions.getField(extension.getDescriptor());,if (extensions != null ) Object value = extensions.getField(extension.getDescriptor());
GeneratedMessage.java,next = iter.next();,if (iter != null ) next = iter.next();
GeneratedMessage.java,next = iter.next();,if (iter != null ) next = iter.next();
GeneratedMessage.java,type = getMethod.getReturnType();,if (getMethod != null ) type = getMethod.getReturnType();
GeneratedMessage.java,type = getRepeatedMethod.getReturnType();,if (getRepeatedMethod != null ) type = getRepeatedMethod.getReturnType();
TextFormat.java,UnknownFieldSet.Field field = entry.getValue();,if (entry != null ) UnknownFieldSet.Field field = entry.getValue();
TextFormat.java,int length = indent.length();,if (indent != null ) int length = indent.length();
TextFormat.java,int size = text.length();,if (text != null ) int size = text.length();
TextFormat.java,currentToken = matcher.group();,if (matcher != null ) currentToken = matcher.group();
TextFormat.java,Descriptor type = builder.getDescriptorForType();,if (builder != null ) Descriptor type = builder.getDescriptorForType();
TextFormat.java,StringBuilder name = new StringBuilder(tokenizer.consumeIdentifier());,if (StringBuilder(tokenizer != null ) StringBuilder name = new StringBuilder(tokenizer.consumeIdentifier());
TextFormat.java,extension = extensionRegistry.findExtensionByName(name.toString());,if (extensionRegistry != null ) extension = extensionRegistry.findExtensionByName(name.toString());
TextFormat.java,String name = tokenizer.consumeIdentifier();,if (tokenizer != null ) String name = tokenizer.consumeIdentifier();
TextFormat.java,subBuilder = extension.defaultInstance.newBuilderForType();,if (extension != null ) subBuilder = extension.defaultInstance.newBuilderForType();
TextFormat.java,value = subBuilder.build();,if (subBuilder != null ) value = subBuilder.build();
TextFormat.java,value = tokenizer.consumeFloat();,if (tokenizer != null ) value = tokenizer.consumeFloat();
TextFormat.java,value = tokenizer.consumeDouble();,if (tokenizer != null ) value = tokenizer.consumeDouble();
TextFormat.java,value = tokenizer.consumeBoolean();,if (tokenizer != null ) value = tokenizer.consumeBoolean();
TextFormat.java,value = tokenizer.consumeString();,if (tokenizer != null ) value = tokenizer.consumeString();
TextFormat.java,value = tokenizer.consumeByteString();,if (tokenizer != null ) value = tokenizer.consumeByteString();
TextFormat.java,EnumDescriptor enumType = field.getEnumType();,if (field != null ) EnumDescriptor enumType = field.getEnumType();
TextFormat.java,String id = tokenizer.consumeIdentifier();,if (tokenizer != null ) String id = tokenizer.consumeIdentifier();
TextFormat.java,StringBuilder builder = new StringBuilder(input.size());,if (StringBuilder(input != null ) StringBuilder builder = new StringBuilder(input.size());
TextFormat.java,bigValue = bigValue.negate();,if (bigValue != null ) bigValue = bigValue.negate();
TextFormat.java,result = bigValue.longValue();,if (bigValue != null ) result = bigValue.longValue();
UninitializedMessageException.java,FieldDescriptor field = entry.getKey();,if (entry != null ) FieldDescriptor field = entry.getKey();
UninitializedMessageException.java,Object value = entry.getValue();,if (entry != null ) Object value = entry.getValue();
UnknownFieldSet.java,lastField = Field.newBuilder();,if (Field != null ) lastField = Field.newBuilder();
UnknownFieldSet.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
UnknownFieldSet.java,UnknownFieldSet.Builder subBuilder = UnknownFieldSet.newBuilder();,if (UnknownFieldSet != null ) UnknownFieldSet.Builder subBuilder = UnknownFieldSet.newBuilder();
UnknownFieldSet.java,CodedInputStream input = data.newCodedInput();,if (data != null ) CodedInputStream input = data.newCodedInput();
UnknownFieldSet.java,result.varint = Collections.emptyList();,if (Collections != null ) result.varint = Collections.emptyList();
UnknownFieldSet.java,result.lengthDelimited = Collections.emptyList();,if (Collections != null ) result.lengthDelimited = Collections.emptyList();
UnknownFieldSet.java,result.group = Collections.emptyList();,if (Collections != null ) result.group = Collections.emptyList();
AbstractMessageTest.java,TestAllTypes message = TestUtil.getAllSet();,if (TestUtil != null ) TestAllTypes message = TestUtil.getAllSet();
AbstractMessageTest.java,Message abstractMessage = new AbstractMessageWrapper(TestUtil.getAllSet());,if (AbstractMessageWrapper(TestUtil != null ) Message abstractMessage = new AbstractMessageWrapper(TestUtil.getAllSet());
AbstractMessageTest.java,Message abstractMessage = new AbstractMessageWrapper(TestUtil.getAllSet());,if (AbstractMessageWrapper(TestUtil != null ) Message abstractMessage = new AbstractMessageWrapper(TestUtil.getAllSet());
AbstractMessageTest.java,message = TestOptimizedForSize.parseFrom(message.toByteString());,if (TestOptimizedForSize != null ) message = TestOptimizedForSize.parseFrom(message.toByteString());
AbstractMessageTest.java,TestRequired.Builder builder = TestRequired.newBuilder();,if (TestRequired != null ) TestRequired.Builder builder = TestRequired.newBuilder();
AbstractMessageTest.java,TestRequiredForeign.Builder builder = TestRequiredForeign.newBuilder();,if (TestRequiredForeign != null ) TestRequiredForeign.Builder builder = TestRequiredForeign.newBuilder();
AbstractMessageTest.java,TestAllTypes a = TestUtil.getAllSet();,if (TestUtil != null ) TestAllTypes a = TestUtil.getAllSet();
AbstractMessageTest.java,TestAllTypes b = TestAllTypes.newBuilder().build();,if (TestAllTypes != null ) TestAllTypes b = TestAllTypes.newBuilder().build();
AbstractMessageTest.java,TestAllExtensions e = TestUtil.getAllExtensionsSet();,if (TestUtil != null ) TestAllExtensions e = TestUtil.getAllExtensionsSet();
AbstractMessageTest.java,DynamicMessage dynamic = DynamicMessage.newBuilder(message).build();,if (DynamicMessage != null ) DynamicMessage dynamic = DynamicMessage.newBuilder(message).build();
CodedInputStreamTest.java,TestAllTypes message = TestUtil.getAllSet();,if (TestUtil != null ) TestAllTypes message = TestUtil.getAllSet();
CodedInputStreamTest.java,byte[] rawBytes = message.toByteArray();,if (message != null ) byte[] rawBytes = message.toByteArray();
CodedInputStreamTest.java,TestAllTypes message = TestUtil.getAllSet();,if (TestUtil != null ) TestAllTypes message = TestUtil.getAllSet();
CodedInputStreamTest.java,byte[] rawBytes = message.toByteArray();,if (message != null ) byte[] rawBytes = message.toByteArray();
CodedInputStreamTest.java,UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();,if (UnknownFieldSet != null ) UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
CodedInputStreamTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
CodedInputStreamTest.java,TestAllTypes message = builder.build();,if (builder != null ) TestAllTypes message = builder.build();
CodedInputStreamTest.java,ByteString.Output rawOutput = ByteString.newOutput();,if (ByteString != null ) ByteString.Output rawOutput = ByteString.newOutput();
CodedInputStreamTest.java,CodedInputStream input = rawOutput.toByteString().newCodedInput();,if (rawOutput != null ) CodedInputStream input = rawOutput.toByteString().newCodedInput();
CodedInputStreamTest.java,ByteString.Output rawOutput = ByteString.newOutput();,if (ByteString != null ) ByteString.Output rawOutput = ByteString.newOutput();
CodedInputStreamTest.java,CodedInputStream input = rawOutput.toByteString().newCodedInput();,if (rawOutput != null ) CodedInputStream input = rawOutput.toByteString().newCodedInput();
CodedInputStreamTest.java,String text = input.readString();,if (input != null ) String text = input.readString();
CodedOutputStreamTest.java,TestAllTypes message = TestUtil.getAllSet();,if (TestUtil != null ) TestAllTypes message = TestUtil.getAllSet();
CodedOutputStreamTest.java,byte[] rawBytes = message.toByteArray();,if (message != null ) byte[] rawBytes = message.toByteArray();
DescriptorsTest.java,FileDescriptor file = UnittestProto.getDescriptor();,if (UnittestProto != null ) FileDescriptor file = UnittestProto.getDescriptor();
DescriptorsTest.java,Descriptor messageType = TestAllTypes.getDescriptor();,if (TestAllTypes != null ) Descriptor messageType = TestAllTypes.getDescriptor();
DescriptorsTest.java,EnumDescriptor enumType = ForeignEnum.getDescriptor();,if (ForeignEnum != null ) EnumDescriptor enumType = ForeignEnum.getDescriptor();
DescriptorsTest.java,ServiceDescriptor service = TestService.getDescriptor();,if (TestService != null ) ServiceDescriptor service = TestService.getDescriptor();
DescriptorsTest.java,Descriptor messageType = TestAllTypes.getDescriptor();,if (TestAllTypes != null ) Descriptor messageType = TestAllTypes.getDescriptor();
DescriptorsTest.java,Descriptor nestedType = TestAllTypes.NestedMessage.getDescriptor();,if (TestAllTypes != null ) Descriptor nestedType = TestAllTypes.NestedMessage.getDescriptor();
DescriptorsTest.java,EnumDescriptor enumType = TestAllTypes.NestedEnum.getDescriptor();,if (TestAllTypes != null ) EnumDescriptor enumType = TestAllTypes.NestedEnum.getDescriptor();
DescriptorsTest.java,Descriptor messageType = TestAllTypes.getDescriptor();,if (TestAllTypes != null ) Descriptor messageType = TestAllTypes.getDescriptor();
DescriptorsTest.java,FieldDescriptor nestedExtension = TestRequired.single.getDescriptor();,if (TestRequired != null ) FieldDescriptor nestedExtension = TestRequired.single.getDescriptor();
DescriptorsTest.java,Descriptor d = TestAllTypes.getDescriptor();,if (TestAllTypes != null ) Descriptor d = TestAllTypes.getDescriptor();
DescriptorsTest.java,d = TestExtremeDefaultValues.getDescriptor();,if (TestExtremeDefaultValues != null ) d = TestExtremeDefaultValues.getDescriptor();
DescriptorsTest.java,EnumDescriptor enumType = ForeignEnum.getDescriptor();,if (ForeignEnum != null ) EnumDescriptor enumType = ForeignEnum.getDescriptor();
DescriptorsTest.java,EnumDescriptor nestedType = TestAllTypes.NestedEnum.getDescriptor();,if (TestAllTypes != null ) EnumDescriptor nestedType = TestAllTypes.NestedEnum.getDescriptor();
DescriptorsTest.java,ServiceDescriptor service = TestService.getDescriptor();,if (TestService != null ) ServiceDescriptor service = TestService.getDescriptor();
DynamicMessageTest.java,Message message = builder.build();,if (builder != null ) Message message = builder.build();
DynamicMessageTest.java,Message message = builder.build();,if (builder != null ) Message message = builder.build();
DynamicMessageTest.java,Message message = builder.build();,if (builder != null ) Message message = builder.build();
DynamicMessageTest.java,TestAllTypes message = TestUtil.getAllSet();,if (TestUtil != null ) TestAllTypes message = TestUtil.getAllSet();
DynamicMessageTest.java,Message dynamicMessage = dynamicBuilder.build();,if (dynamicBuilder != null ) Message dynamicMessage = dynamicBuilder.build();
DynamicMessageTest.java,Message message = builder.build();,if (builder != null ) Message message = builder.build();
DynamicMessageTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
DynamicMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
DynamicMessageTest.java,TestAllTypes message = builder.build();,if (builder != null ) TestAllTypes message = builder.build();
DynamicMessageTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
DynamicMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
DynamicMessageTest.java,TestAllTypes message = builder.build();,if (builder != null ) TestAllTypes message = builder.build();
DynamicMessageTest.java,DynamicMessage copy = DynamicMessage.newBuilder(message).build();,if (DynamicMessage != null ) DynamicMessage copy = DynamicMessage.newBuilder(message).build();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,TestAllTypes message = builder.build();,if (builder != null ) TestAllTypes message = builder.build();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,TestAllTypes message = builder.build();,if (builder != null ) TestAllTypes message = builder.build();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,TestAllTypes message = builder.build();,if (builder != null ) TestAllTypes message = builder.build();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,TestAllTypes message = builder.build();,if (builder != null ) TestAllTypes message = builder.build();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,TestAllTypes message = builder.build();,if (builder != null ) TestAllTypes message = builder.build();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,TestAllTypes message = builder.build();,if (builder != null ) TestAllTypes message = builder.build();
GeneratedMessageTest.java,TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();,if (TestAllExtensions != null ) TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();
GeneratedMessageTest.java,TestAllExtensions message = builder.build();,if (builder != null ) TestAllExtensions message = builder.build();
GeneratedMessageTest.java,TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();,if (TestAllExtensions != null ) TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();
GeneratedMessageTest.java,TestAllExtensions message = builder.build();,if (builder != null ) TestAllExtensions message = builder.build();
GeneratedMessageTest.java,TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();,if (TestAllExtensions != null ) TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();
GeneratedMessageTest.java,TestAllExtensions message = builder.build();,if (builder != null ) TestAllExtensions message = builder.build();
GeneratedMessageTest.java,TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();,if (TestAllExtensions != null ) TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();
GeneratedMessageTest.java,TestAllExtensions message = builder.build();,if (builder != null ) TestAllExtensions message = builder.build();
GeneratedMessageTest.java,TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();,if (TestAllExtensions != null ) TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();
GeneratedMessageTest.java,TestAllExtensions message = builder.build();,if (builder != null ) TestAllExtensions message = builder.build();
GeneratedMessageTest.java,TestOptionalOptimizedForSize message = TestOptionalOptimizedForSize.getDefaultInstance();,if (TestOptionalOptimizedForSize != null ) TestOptionalOptimizedForSize message = TestOptionalOptimizedForSize.getDefaultInstance();
MessageTest.java,TestRequired.Builder builder = TestRequired.newBuilder();,if (TestRequired != null ) TestRequired.Builder builder = TestRequired.newBuilder();
MessageTest.java,TestRequiredForeign.Builder builder = TestRequiredForeign.newBuilder();,if (TestRequiredForeign != null ) TestRequiredForeign.Builder builder = TestRequiredForeign.newBuilder();
MessageTest.java,TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();,if (TestAllExtensions != null ) TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();
MessageTest.java,Descriptors.Descriptor descriptor = TestRequired.getDescriptor();,if (TestRequired != null ) Descriptors.Descriptor descriptor = TestRequired.getDescriptor();
MessageTest.java,Descriptors.Descriptor descriptor = TestRequiredForeign.getDescriptor();,if (TestRequiredForeign != null ) Descriptors.Descriptor descriptor = TestRequiredForeign.getDescriptor();
MessageTest.java,TestRequired message = TestRequired.newBuilder().buildPartial();,if (TestRequired != null ) TestRequired message = TestRequired.newBuilder().buildPartial();
MessageTest.java,Descriptors.Descriptor descriptor = TestRequired.getDescriptor();,if (TestRequired != null ) Descriptors.Descriptor descriptor = TestRequired.getDescriptor();
ServiceTest.java,control = EasyMock.createStrictControl();,if (EasyMock != null ) control = EasyMock.createStrictControl();
ServiceTest.java,FooRequest fooRequest = FooRequest.newBuilder().build();,if (FooRequest != null ) FooRequest fooRequest = FooRequest.newBuilder().build();
ServiceTest.java,BarRequest barRequest = BarRequest.newBuilder().build();,if (BarRequest != null ) BarRequest barRequest = BarRequest.newBuilder().build();
ServiceTest.java,FooRequest fooRequest = FooRequest.newBuilder().build();,if (FooRequest != null ) FooRequest fooRequest = FooRequest.newBuilder().build();
ServiceTest.java,BarRequest barRequest = BarRequest.newBuilder().build();,if (BarRequest != null ) BarRequest barRequest = BarRequest.newBuilder().build();
TestUtil.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TestUtil.java,TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();,if (TestAllExtensions != null ) TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();
TestUtil.java,ExtensionRegistry registry = ExtensionRegistry.newInstance();,if (ExtensionRegistry != null ) ExtensionRegistry registry = ExtensionRegistry.newInstance();
TestUtil.java,this.file = baseDescriptor.getFile();,if (baseDescriptor != null ) this.file = baseDescriptor.getFile();
TestUtil.java,ancestor = ancestor.getCanonicalFile();,if (ancestor != null ) ancestor = ancestor.getCanonicalFile();
TestUtil.java,ancestor = ancestor.getParentFile();,if (ancestor != null ) ancestor = ancestor.getParentFile();
TextFormatTest.java,String javaText = TextFormat.printToString(TestUtil.getAllSet());,if (TextFormat != null ) String javaText = TextFormat.printToString(TestUtil.getAllSet());
TextFormatTest.java,String javaText = TextFormat.printToString(TestUtil.getAllExtensionsSet());,if (TextFormat != null ) String javaText = TextFormat.printToString(TestUtil.getAllExtensionsSet());
TextFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TextFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TextFormatTest.java,TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();,if (TestAllExtensions != null ) TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();
TextFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TextFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TextFormatTest.java,ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();,if (ExtensionRegistry != null ) ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();
TextFormatTest.java,TestMessageSet.Builder builder = TestMessageSet.newBuilder();,if (TestMessageSet != null ) TestMessageSet.Builder builder = TestMessageSet.newBuilder();
TextFormatTest.java,TestMessageSet messageSet = builder.build();,if (builder != null ) TestMessageSet messageSet = builder.build();
TextFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TextFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TextFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TextFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
UnknownFieldSetTest.java,descriptor = TestAllTypes.getDescriptor();,if (TestAllTypes != null ) descriptor = TestAllTypes.getDescriptor();
UnknownFieldSetTest.java,allFields = TestUtil.getAllSet();,if (TestUtil != null ) allFields = TestUtil.getAllSet();
UnknownFieldSetTest.java,allFieldsData = allFields.toByteString();,if (allFields != null ) allFieldsData = allFields.toByteString();
UnknownFieldSetTest.java,unknownFields = emptyMessage.getUnknownFields();,if (emptyMessage != null ) unknownFields = emptyMessage.getUnknownFields();
UnknownFieldSetTest.java,UnknownFieldSet.Builder bizarroFields = UnknownFieldSet.newBuilder();,if (UnknownFieldSet != null ) UnknownFieldSet.Builder bizarroFields = UnknownFieldSet.newBuilder();
UnknownFieldSetTest.java,ByteString data = emptyMessage.toByteString();,if (emptyMessage != null ) ByteString data = emptyMessage.toByteString();
UnknownFieldSetTest.java,ByteString data = fields.toByteString();,if (fields != null ) ByteString data = fields.toByteString();
WireFormatTest.java,TestAllTypes message = TestUtil.getAllSet();,if (TestUtil != null ) TestAllTypes message = TestUtil.getAllSet();
WireFormatTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatTest.java,TestAllExtensions message = TestUtil.getAllExtensionsSet();,if (TestUtil != null ) TestAllExtensions message = TestUtil.getAllExtensionsSet();
WireFormatTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatTest.java,TestAllTypes message = TestUtil.getAllSet();,if (TestUtil != null ) TestAllTypes message = TestUtil.getAllSet();
WireFormatTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatTest.java,ExtensionRegistry registry = ExtensionRegistry.newInstance();,if (ExtensionRegistry != null ) ExtensionRegistry registry = ExtensionRegistry.newInstance();
WireFormatTest.java,registry = registry.getUnmodifiable();,if (registry != null ) registry = registry.getUnmodifiable();
WireFormatTest.java,CodedInputStream input = data.newCodedInput();,if (data != null ) CodedInputStream input = data.newCodedInput();
WireFormatTest.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
WireFormatTest.java,Descriptors.Descriptor descriptor = TestFieldOrderings.getDescriptor();,if (TestFieldOrderings != null ) Descriptors.Descriptor descriptor = TestFieldOrderings.getDescriptor();
WireFormatTest.java,ByteString data = messageSet.toByteString();,if (messageSet != null ) ByteString data = messageSet.toByteString();
WireFormatTest.java,ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();,if (ExtensionRegistry != null ) ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();
WireFormatTest.java,ByteString data = raw.toByteString();,if (raw != null ) ByteString data = raw.toByteString();
WireFormatTest.java,UnknownFieldSet unknownFields = messageSet.getUnknownFields();,if (messageSet != null ) UnknownFieldSet unknownFields = messageSet.getUnknownFields();
TextFormat.java,Descriptor descriptor = message.getDescriptorForType();,if (message != null ) Descriptor descriptor = message.getDescriptorForType();
TextFormat.java,Descriptor descriptor = message.getDescriptorForType();,if (message != null ) Descriptor descriptor = message.getDescriptorForType();
Bcl.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
Bcl.java,result = new bcl.Bcl.TimeSpan();,if (bcl != null ) result = new bcl.Bcl.TimeSpan();
Bcl.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
Bcl.java,int rawValue = input.readEnum();,if (input != null ) int rawValue = input.readEnum();
Bcl.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
Bcl.java,result = new bcl.Bcl.DateTime();,if (bcl != null ) result = new bcl.Bcl.DateTime();
Bcl.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
Bcl.java,int rawValue = input.readEnum();,if (input != null ) int rawValue = input.readEnum();
Bcl.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
Bcl.java,result = new bcl.Bcl.Guid();,if (bcl != null ) result = new bcl.Bcl.Guid();
Bcl.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
Bcl.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
Bcl.java,result = new bcl.Bcl.Decimal();,if (bcl != null ) result = new bcl.Bcl.Decimal();
Bcl.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
Nwind.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
Nwind.java,result = new northwind.Nwind.Database();,if (northwind != null ) result = new northwind.Nwind.Database();
Nwind.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
Nwind.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
Nwind.java,result = new northwind.Nwind.Order();,if (northwind != null ) result = new northwind.Nwind.Order();
Nwind.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
Nwind.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
Nwind.java,result = new northwind.Nwind.OrderLine();,if (northwind != null ) result = new northwind.Nwind.OrderLine();
Nwind.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
Slowbcl.java,result = new slowbcl.Slowbcl.TimeSpan();,if (slowbcl != null ) result = new slowbcl.Slowbcl.TimeSpan();
Slowbcl.java,result = new slowbcl.Slowbcl.DateTime();,if (slowbcl != null ) result = new slowbcl.Slowbcl.DateTime();
Slowbcl.java,result = new slowbcl.Slowbcl.Guid();,if (slowbcl != null ) result = new slowbcl.Slowbcl.Guid();
Slowbcl.java,result = new slowbcl.Slowbcl.Decimal();,if (slowbcl != null ) result = new slowbcl.Slowbcl.Decimal();
Slownwind.java,result = new slownorthwind.Slownwind.Database();,if (slownorthwind != null ) result = new slownorthwind.Slownwind.Database();
Slownwind.java,result = new slownorthwind.Slownwind.Order();,if (slownorthwind != null ) result = new slownorthwind.Slownwind.Order();
Slownwind.java,result = new slownorthwind.Slownwind.OrderLine();,if (slownorthwind != null ) result = new slownorthwind.Slownwind.OrderLine();
