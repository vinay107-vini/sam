Filename,Buggy/Deleted,Fixed/Added
ApexQualifiedName.java,String ns = trigger.getNamespace();,if (trigger != null ) String ns = trigger.getNamespace();
ApexQualifiedName.java,String targetObj = trigger.getTargetName();,if (trigger != null ) String targetObj = trigger.getTargetName();
ApexQualifiedName.java,ApexQualifiedName baseName = parent.getQualifiedName();,if (parent != null ) ApexQualifiedName baseName = parent.getQualifiedName();
CycloMetric.java,BooleanOp op = sub.getOperator();,if (sub != null ) BooleanOp op = sub.getOperator();
CognitiveComplexityVisitor.java,BooleanOp op = node.getOperator();,if (node != null ) BooleanOp op = node.getOperator();
CognitiveComplexityVisitor.java,PrefixOp op = node.getOperator();,if (node != null ) PrefixOp op = node.getOperator();
LanguageVersionDiscoverer.java,fileName = file.toRealPath().toString();,if (file != null ) fileName = file.toRealPath().toString();
LanguageVersionDiscoverer.java,fileName = file.toAbsolutePath().toString();,if (file != null ) fileName = file.toAbsolutePath().toString();
TestDescriptor.java,this.isFocused = td.isFocused();,if (td != null ) this.isFocused = td.isFocused();
TestDescriptor.java,this.isRegressionTest = !td.isIgnored();,if (!td != null ) this.isRegressionTest = !td.isIgnored();
XMLRenderer.java,match = matches.next();,if (matches != null ) match = matches.next();
CPDConfiguration.java,Renderer renderer = clazz.getDeclaredConstructor().newInstance();,if (clazz != null ) Renderer renderer = clazz.getDeclaredConstructor().newInstance();
CPDConfiguration.java,CPDRenderer renderer = clazz.getDeclaredConstructor().newInstance();,if (clazz != null ) CPDRenderer renderer = clazz.getDeclaredConstructor().newInstance();
XMLRendererTest.java,final NamedNodeMap attributes = file.getAttributes();,if (file != null ) final NamedNodeMap attributes = file.getAttributes();
GUI.java,numberOfTokensPerFile = cpd.getNumberOfTokensPerFile();,if (cpd != null ) numberOfTokensPerFile = cpd.getNumberOfTokensPerFile();
GherkinTokenizerTest.java,public ExpectedException ex = ExpectedException.none();,if (ExpectedException != null ) public ExpectedException ex = ExpectedException.none();
ImmutableFieldRule.java,Collection<String> defaultValues = new ArrayList<>(super.defaultSuppressionAnnotations());,if (ArrayList<>(super != null ) Collection<String> defaultValues = new ArrayList<>(super.defaultSuppressionAnnotations());
AvoidFieldNameMatchingMethodNameRule.java,int n = node.getNumChildren();,if (node != null ) int n = node.getNumChildren();
AvoidFieldNameMatchingMethodNameRule.java,int n = node.getNumChildren();,if (node != null ) int n = node.getNumChildren();
EmptyControlStatementRule.java,String name = resource.getName();,if (resource != null ) String name = resource.getName();
EmptyControlStatementRule.java,String name = resource.getVariableDeclaratorId().getName();,if (resource != null ) String name = resource.getVariableDeclaratorId().getName();
RuleTst.java,DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();,if (DocumentBuilderFactory != null ) DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
RuleTst.java,DocumentBuilder builder = dbf.newDocumentBuilder();,if (dbf != null ) DocumentBuilder builder = dbf.newDocumentBuilder();
RuleTst.java,Element root = doc.getDocumentElement();,if (doc != null ) Element root = doc.getDocumentElement();
RuleTst.java,String reinitializeRuleValue = reinitializeRuleAttribute.getNodeValue();,if (reinitializeRuleAttribute != null ) String reinitializeRuleValue = reinitializeRuleAttribute.getNodeValue();
RuleTst.java,String reinitializeRuleValue = regressionTestAttribute.getNodeValue();,if (regressionTestAttribute != null ) String reinitializeRuleValue = regressionTestAttribute.getNodeValue();
RuleTst.java,String useAuxClasspathValue = useAuxClasspathAttribute.getNodeValue();,if (useAuxClasspathAttribute != null ) String useAuxClasspathValue = useAuxClasspathAttribute.getNodeValue();
RuleTst.java,String numbers = item.getTextContent();,if (item != null ) String numbers = item.getTextContent();
BaseTestParserImpl.java,"TestDescriptor descriptor = new TestDescriptor(i, rule.deepCopy());","if (rule != null ) TestDescriptor descriptor = new TestDescriptor(i, rule.deepCopy());"
BaseTestParserImpl.java,PmdXmlReporter errScope = err.newScope();,if (err != null ) PmdXmlReporter errScope = err.newScope();
SourceCodeProcessor.java,LanguageVersion languageVersion = configuration.getLanguageVersionOfFile(ctx.getSourceCodeFilename());,if (configuration != null ) LanguageVersion languageVersion = configuration.getLanguageVersionOfFile(ctx.getSourceCodeFilename());
AntIT.java,File projectFolder = folder.newFolder();,if (folder != null ) File projectFolder = folder.newFolder();
AbstractAnalysisCache.java,String extension = FilenameUtils.getExtension(file.toString());,if (FilenameUtils != null ) String extension = FilenameUtils.getExtension(file.toString());
SourceCode.java,encoding = inputStream.getBOMCharsetName();,if (inputStream != null ) encoding = inputStream.getBOMCharsetName();
ArrayIsStoredDirectlyRule.java,final String varName = vid.getImage();,if (vid != null ) final String varName = vid.getImage();
TreeExportCliTest.java,PropertySource properties = TreeRenderers.XML.newPropertyBundle();,if (TreeRenderers != null ) PropertySource properties = TreeRenderers.XML.newPropertyBundle();
TreeExportCliTest.java,PropertySource bundle = TreeRenderers.XML.newPropertyBundle();,if (TreeRenderers != null ) PropertySource bundle = TreeRenderers.XML.newPropertyBundle();
SaxonDomXPathQuery.java,lastUri = wrapper.getURI();,if (wrapper != null ) lastUri = wrapper.getURI();
SaxonDomXPathQuery.java,Object value = properties.getProperty(entry.getKey());,if (properties != null ) Object value = properties.getProperty(entry.getKey());
SaxonDomXPathQuery.java,final XPathStaticContext xpathStaticContext = xpathEvaluator.getStaticContext();,if (xpathEvaluator != null ) final XPathStaticContext xpathStaticContext = xpathEvaluator.getStaticContext();
SaxonDomXPathQuery.java,configuration = xpathStaticContext.getConfiguration();,if (xpathStaticContext != null ) configuration = xpathStaticContext.getConfiguration();
SaxonDomXPathQuery.java,Object value = properties.getProperty(entry.getKey());,if (properties != null ) Object value = properties.getProperty(entry.getKey());
PmdAnalysis.java,Renderer renderer = config.createRenderer();,if (config != null ) Renderer renderer = config.createRenderer();
PMDTaskImpl.java,Throwable cause = pmde.getCause();,if (pmde != null ) Throwable cause = pmde.getCause();
PMDTaskImpl.java,RuleSet[] ruleSets = rules.getAllRuleSets();,if (rules != null ) RuleSet[] ruleSets = rules.getAllRuleSets();
PMDTaskImpl.java,String ruleSetString = configuration.getRuleSets();,if (configuration != null ) String ruleSetString = configuration.getRuleSets();
PMDTaskImpl.java,List<RuleSet> rulesetList = Arrays.asList(ruleSets.getAllRuleSets());,if (Arrays != null ) List<RuleSet> rulesetList = Arrays.asList(ruleSets.getAllRuleSets());
PMDTaskImpl.java,String[] srcFiles = ds.getIncludedFiles();,if (ds != null ) String[] srcFiles = ds.getIncludedFiles();
PMDTaskImpl.java,final String commonInputPath = ds.getBasedir().getPath();,if (ds != null ) final String commonInputPath = ds.getBasedir().getPath();
PMDTaskImpl.java,Renderer renderer = formatter.getRenderer();,if (formatter != null ) Renderer renderer = formatter.getRenderer();
PMDTaskImpl.java,problemCount += report.getViolations().size();,if (report != null ) problemCount += report.getViolations().size();
PmdAnalysis.java,final RuleSetLoader ruleSetLoader = builder.newRuleSetLoader();,if (builder != null ) final RuleSetLoader ruleSetLoader = builder.newRuleSetLoader();
PmdAnalysis.java,Renderer renderer = config.createRenderer();,if (config != null ) Renderer renderer = config.createRenderer();
AmbiguousResolutionRule.java,ResolutionResult<ResolvableEntity> candidates = node.getResolutionCandidates();,if (node != null ) ResolutionResult<ResolvableEntity> candidates = node.getResolutionCandidates();
ConnectUsingNonConnector.java,ResolutionResult<ResolvableEntity> resolution = ref.getResolutionCandidates();,if (ref != null ) ResolutionResult<ResolvableEntity> resolution = ref.getResolutionCandidates();
ConnectUsingNonConnector.java,ResolutionResult componentTypes = componentDecl.getTypeCandidates();,if (componentDecl != null ) ResolutionResult componentTypes = componentDecl.getTypeCandidates();
ConnectUsingNonConnector.java,ModelicaClassSpecialization restriction = classDecl.getSpecialization();,if (classDecl != null ) ModelicaClassSpecialization restriction = classDecl.getSpecialization();
PMDConfiguration.java,classLoader = PMDConfiguration.class.getClassLoader();,if (PMDConfiguration != null ) classLoader = PMDConfiguration.class.getClassLoader();
Benchmarker.java,RuleSetFactory factory = RulesetsFactoryUtils.defaultFactory();,if (RulesetsFactoryUtils != null ) RuleSetFactory factory = RulesetsFactoryUtils.defaultFactory();
Benchmarker.java,Iterator<RuleSet> i = factory.getRegisteredRuleSets();,if (factory != null ) Iterator<RuleSet> i = factory.getRegisteredRuleSets();
Benchmarker.java,String contents = ds.readContents();,if (ds != null ) String contents = ds.readContents();
Benchmarker.java,String source = ds.readContents();,if (ds != null ) String source = ds.readContents();
PMD.java,Report report = pmd.performAnalysis();,if (pmd != null ) Report report = pmd.performAnalysis();
PMD.java,Report report = pmd.performAnalysis();,if (pmd != null ) Report report = pmd.performAnalysis();
PMD.java,final RuleSetFactory ruleSetFactory = RuleSetLoader.fromPmdConfig(configuration).toFactory();,if (RuleSetLoader != null ) final RuleSetFactory ruleSetFactory = RuleSetLoader.fromPmdConfig(configuration).toFactory();
PMD.java,renderer = configuration.createRenderer();,if (configuration != null ) renderer = configuration.createRenderer();
PMD.java,final LanguageVersionDiscoverer discoverer = configuration.getLanguageVersionDiscoverer();,if (configuration != null ) final LanguageVersionDiscoverer discoverer = configuration.getLanguageVersionDiscoverer();
PMD.java,final Language ruleLanguage = rule.getLanguage();,if (rule != null ) final Language ruleLanguage = rule.getLanguage();
Benchmarker.java,RuleSetFactory factory = RulesetsFactoryUtils.defaultFactory();,if (RulesetsFactoryUtils != null ) RuleSetFactory factory = RulesetsFactoryUtils.defaultFactory();
Benchmarker.java,Iterator<RuleSet> i = factory.getRegisteredRuleSets();,if (factory != null ) Iterator<RuleSet> i = factory.getRegisteredRuleSets();
FileCollector.java,TextFile file = iterator.next();,if (iterator != null ) TextFile file = iterator.next();
FileCollector.java,Language lang = file.getLanguageVersion().getLanguage();,if (file != null ) Language lang = file.getLanguageVersion().getLanguage();
FileCollectorTest.java,public ExpectedException exception = ExpectedException.none();,if (ExpectedException != null ) public ExpectedException exception = ExpectedException.none();
PMD.java,FileCollector collector = FileCollector.newCollector();,if (FileCollector != null ) FileCollector collector = FileCollector.newCollector();
PMD.java,String uriString = configuration.getInputUri();,if (configuration != null ) String uriString = configuration.getInputUri();
PMD.java,String inputFilePath = configuration.getInputFilePath();,if (configuration != null ) String inputFilePath = configuration.getInputFilePath();
PMD.java,String ignoreFilePath = configuration.getIgnoreFilePath();,if (configuration != null ) String ignoreFilePath = configuration.getIgnoreFilePath();
Benchmarker.java,languageVersion = language.getDefaultVersion();,if (language != null ) languageVersion = language.getDefaultVersion();
FileCollector.java,List<Language> languages = discoverer.getLanguagesForFile(file.toFile());,if (discoverer != null ) List<Language> languages = discoverer.getLanguagesForFile(file.toFile());
CpdExecutor.java,Process process = pb.start();,if (pb != null ) Process process = pb.start();
CpdExecutor.java,int result = process.waitFor();,if (process != null ) int result = process.waitFor();
CpdExecutor.java,Process process = pb.start();,if (pb != null ) Process process = pb.start();
CpdExecutor.java,int result = process.waitFor();,if (process != null ) int result = process.waitFor();
MavenWrapperDownloader.java,rbc = Channels.newChannel(website.openStream());,if (Channels != null ) rbc = Channels.newChannel(website.openStream());
AbstractJUnitRule.java,JavaNode declarationNode = nested.getDeclarationNode();,if (nested != null ) JavaNode declarationNode = nested.getDeclarationNode();
ApexTreeBuilder.java,"CommentInformation commentInformation = extractInformationFromComments(sourceCode, parserOptions.getSuppressMarker());","if (parserOptions != null ) CommentInformation commentInformation = extractInformationFromComments(sourceCode, parserOptions.getSuppressMarker());"
ApexTreeBuilder.java,int beginLine = commentContainer.getBeginLine();,if (commentContainer != null ) int beginLine = commentContainer.getBeginLine();
ApexTreeBuilder.java,int commentTokenLine = commentToken.getLine();,if (commentToken != null ) int commentTokenLine = commentToken.getLine();
ApexUnitTestClassShouldHaveAssertsRule.java,final String fullMethodName = methodCallExpression.getFullMethodName();,if (methodCallExpression != null ) final String fullMethodName = methodCallExpression.getFullMethodName();
ApexCRUDViolationRule.java,typeToDMLOperationMapping = ArrayListMultimap.create();,if (ArrayListMultimap != null ) typeToDMLOperationMapping = ArrayListMultimap.create();
ApexCRUDViolationRule.java,checkedTypeToDMLOperationsViaAuthPattern = ArrayListMultimap.create();,if (ArrayListMultimap != null ) checkedTypeToDMLOperationsViaAuthPattern = ArrayListMultimap.create();
ApexCRUDViolationRule.java,final boolean hasMapping = checkedTypeToDMLOperationViaESAPI.containsKey(typeToCheck.toString());,if (checkedTypeToDMLOperationViaESAPI != null ) final boolean hasMapping = checkedTypeToDMLOperationViaESAPI.containsKey(typeToCheck.toString());
HardCodedCryptoKeyRule.java,VariableNameDeclaration varDecl = (VariableNameDeclaration) namedVar.getNameDeclaration();,if (namedVar != null ) VariableNameDeclaration varDecl = (VariableNameDeclaration) namedVar.getNameDeclaration();
RuleSetFactory.java,priority = parseTextNode(child).trim();,if (parseTextNode(child) != null ) priority = parseTextNode(child).trim();
RuleSetFactory.java,final int nodeCount = node.getChildNodes().getLength();,if (node != null ) final int nodeCount = node.getChildNodes().getLength();
LanguageFactory.java,Iterator<Language> iterator = languageLoader.iterator();,if (languageLoader != null ) Iterator<Language> iterator = languageLoader.iterator();
LanguageFactory.java,Language language = iterator.next();,if (iterator != null ) Language language = iterator.next();
LanguageRegistry.java,Iterator<Language> iterator = languageLoader.iterator();,if (languageLoader != null ) Iterator<Language> iterator = languageLoader.iterator();
LanguageRegistry.java,Language language = iterator.next();,if (iterator != null ) Language language = iterator.next();
RuleFactory.java,final int nodeCount = node.getChildNodes().getLength();,if (node != null ) final int nodeCount = node.getChildNodes().getLength();
CyclomaticComplexityRule.java,Entry classEntry = entryStack.peek();,if (entryStack != null ) Entry classEntry = entryStack.peek();
CyclomaticComplexityRule.java,Entry classEntry = entryStack.peek();,if (entryStack != null ) Entry classEntry = entryStack.peek();
LocalScope.java,ImageFinderFunction finder = new ImageFinderFunction(occurrence.getImage());,if (ImageFinderFunction(occurrence != null ) ImageFinderFunction finder = new ImageFinderFunction(occurrence.getImage());
MethodScope.java,ImageFinderFunction finder = new ImageFinderFunction(occurrence.getImage());,if (ImageFinderFunction(occurrence != null ) ImageFinderFunction finder = new ImageFinderFunction(occurrence.getImage());
SourceCodeProcessor.java,LanguageVersion languageVersion = ctx.getLanguageVersion();,if (ctx != null ) LanguageVersion languageVersion = ctx.getLanguageVersion();
SourceCodeProcessor.java,languageVersion = configuration.getForceLanguageVersion();,if (configuration != null ) languageVersion = configuration.getForceLanguageVersion();
SourceCodeProcessor.java,LanguageVersion languageVersion = configuration.getLanguageVersionOfFile(ctx.getSourceCodeFilename());,if (configuration != null ) LanguageVersion languageVersion = configuration.getLanguageVersionOfFile(ctx.getSourceCodeFilename());
CPD.java,TokenEntry.State savedTokenEntry = new TokenEntry.State();,if (TokenEntry != null ) TokenEntry.State savedTokenEntry = new TokenEntry.State();
CPD.java,TokenEntry.State savedTokenEntry = new TokenEntry.State(tokens.getTokens());,if (TokenEntry != null ) TokenEntry.State savedTokenEntry = new TokenEntry.State(tokens.getTokens());
IOUtil.java,Path path = new File(reportFile).toPath();,if (File(reportFile) != null ) Path path = new File(reportFile).toPath();
GenerateRuleDocsCmd.java,List<RuleSet> registeredRuleSets = new RuleSetLoader().getStandardRuleSets();,if (RuleSetLoader() != null ) List<RuleSet> registeredRuleSets = new RuleSetLoader().getStandardRuleSets();
InaccessibleAuraEnabledGetterRule.java,ASTModifierNode propModifiers = node.getModifiers();,if (node != null ) ASTModifierNode propModifiers = node.getModifiers();
InaccessibleAuraEnabledGetterRule.java,ASTModifierNode methodModifiers = method.getModifiers();,if (method != null ) ASTModifierNode methodModifiers = method.getModifiers();
AbstractAnalysisCache.java,final AnalysisResult analysisResult = fileResultsCache.get(sourceFile.getPath());,if (fileResultsCache != null ) final AnalysisResult analysisResult = fileResultsCache.get(sourceFile.getPath());
AbstractAnalysisCache.java,currentAuxClassPathChecksum = computeClassPathHash(urlClassLoader.getURLs());,if (computeClassPathHash(urlClassLoader != null ) currentAuxClassPathChecksum = computeClassPathHash(urlClassLoader.getURLs());
AbstractAnalysisCache.java,rulesetChecksum = ruleSets.getChecksum();,if (ruleSets != null ) rulesetChecksum = ruleSets.getChecksum();
FileAnalysisCache.java,final String cacheVersion = inputStream.readUTF();,if (inputStream != null ) final String cacheVersion = inputStream.readUTF();
FileAnalysisCache.java,rulesetChecksum = inputStream.readLong();,if (inputStream != null ) rulesetChecksum = inputStream.readLong();
FileAnalysisCache.java,auxClassPathChecksum = inputStream.readLong();,if (inputStream != null ) auxClassPathChecksum = inputStream.readLong();
FileAnalysisCache.java,executionClassPathChecksum = inputStream.readLong();,if (inputStream != null ) executionClassPathChecksum = inputStream.readLong();
FileAnalysisCache.java,final String fileName = inputStream.readUTF();,if (inputStream != null ) final String fileName = inputStream.readUTF();
FileAnalysisCache.java,final long checksum = inputStream.readLong();,if (inputStream != null ) final long checksum = inputStream.readLong();
FileAnalysisCache.java,final int countViolations = inputStream.readInt();,if (inputStream != null ) final int countViolations = inputStream.readInt();
FileAnalysisCache.java,boolean cacheFileShouldBeCreated = !cacheFile.exists();,if (!cacheFile != null ) boolean cacheFileShouldBeCreated = !cacheFile.exists();
FileAnalysisCache.java,final File parentFile = cacheFile.getAbsoluteFile().getParentFile();,if (cacheFile != null ) final File parentFile = cacheFile.getAbsoluteFile().getParentFile();
FileAnalysisCacheTest.java,final File classpathFile = tempFolder.newFile();,if (tempFolder != null ) final File classpathFile = tempFolder.newFile();
FileAnalysisCacheTest.java,final File classpathFile = tempFolder.newFile();,if (tempFolder != null ) final File classpathFile = tempFolder.newFile();
FileAnalysisCacheTest.java,final File classpathFile = tempFolder.newFile();,if (tempFolder != null ) final File classpathFile = tempFolder.newFile();
FileAnalysisCacheTest.java,final File classpathFile = tempFolder.newFile();,if (tempFolder != null ) final File classpathFile = tempFolder.newFile();
MoreThanOneLoggerRule.java,count = stack.pop();,if (stack != null ) count = stack.pop();
InsufficientStringBufferDeclarationRule.java,String str = literal.getImage();,if (literal != null ) String str = literal.getImage();
InsufficientStringBufferDeclarationRule.java,iConstructorLength = literal.getValueAsInt();,if (literal != null ) iConstructorLength = literal.getValueAsInt();
PMD.java,final PMDConfiguration configuration = params.toConfiguration();,if (params != null ) final PMDConfiguration configuration = params.toConfiguration();
UnusedImportsRule.java,this.thisPackageName = node.getPackageName();,if (node != null ) this.thisPackageName = node.getPackageName();
UnusedImportsRule.java,Matcher m = p.matcher(comment.getImage());,if (p != null ) Matcher m = p.matcher(comment.getImage());
UnusedImportsRule.java,String candFullName = candidate.getLeft();,if (candidate != null ) String candFullName = candidate.getLeft();
UnusedImportsRule.java,String candName = candidate.getRight();,if (candidate != null ) String candName = candidate.getRight();
UnusedImportsRule.java,Iterator<ImportWrapper> it = imports.iterator();,if (imports != null ) Iterator<ImportWrapper> it = imports.iterator();
UnusedImportsRule.java,ImportWrapper i = it.next();,if (it != null ) ImportWrapper i = it.next();
UnusedImportsRule.java,it = imports.iterator();,if (imports != null ) it = imports.iterator();
UnusedImportsRule.java,ImportWrapper i = it.next();,if (it != null ) ImportWrapper i = it.next();
UnusedImportsRule.java,String fullName = node.getImage();,if (node != null ) String fullName = node.getImage();
UnusedImportsRule.java,name = node.getImage();,if (node != null ) name = node.getImage();
UnusedImportsRule.java,Node primaryPrefix = node.getParent();,if (node != null ) Node primaryPrefix = node.getParent();
UnusedImportsRule.java,Node expression = primaryPrefix.getParent();,if (primaryPrefix != null ) Node expression = primaryPrefix.getParent();
UnusedImportsRule.java,Iterator<ImportWrapper> iterator = imports.iterator();,if (imports != null ) Iterator<ImportWrapper> iterator = imports.iterator();
UnusedImportsRule.java,ImportWrapper anImport = iterator.next();,if (iterator != null ) ImportWrapper anImport = iterator.next();
UnusedImportsRule.java,Iterator<ImportWrapper> iterator = imports.iterator();,if (imports != null ) Iterator<ImportWrapper> iterator = imports.iterator();
UnusedImportsRule.java,ImportWrapper anImport = iterator.next();,if (iterator != null ) ImportWrapper anImport = iterator.next();
UnusedImportsRule.java,String fullName = node.getImage();,if (node != null ) String fullName = node.getImage();
UnusedImportsRule.java,className = importedType.getImage();,if (importedType != null ) className = importedType.getImage();
DuplicateImportsRule.java,String singleTypeFullName = thisSingleTypeImport.getName(); // java.io.File,if (java != null ) String singleTypeFullName = thisSingleTypeImport.getName(); // java.io.File
CloseResourceRule.java,NameDeclaration statementVariable = name.getNameDeclaration();,if (name != null ) NameDeclaration statementVariable = name.getNameDeclaration();
ApexRootNode.java,this.endLine = positioner.getLastLine();,if (positioner != null ) this.endLine = positioner.getLastLine();
ApexRootNode.java,this.endColumn = positioner.getLastLineColumn();,if (positioner != null ) this.endColumn = positioner.getLastLineColumn();
CloseResourceRule.java,NameDeclaration statementVariable = name.getNameDeclaration();,if (name != null ) NameDeclaration statementVariable = name.getNameDeclaration();
ApexDocRule.java,Boolean flagPrivate = reportPrivate && modifier.isPrivate();,if (modifier != null ) Boolean flagPrivate = reportPrivate && modifier.isPrivate();
ApexDocRule.java,Boolean flagProtected = reportProtected && modifier.isProtected();,if (modifier != null ) Boolean flagProtected = reportProtected && modifier.isProtected();
ElEscapeDetector.java,prevId = child.getImage();,if (child != null ) prevId = child.getImage();
VfUnescapeElRule.java,char[] array = image.toCharArray();,if (image != null ) char[] array = image.toCharArray();
ElEscapeDetector.java,DataType dataType = node.getDataType();,if (node != null ) DataType dataType = node.getDataType();
AbstractInefficientZeroCheck.java,Node nameNode = node.getTypeNameNode();,if (node != null ) Node nameNode = node.getTypeNameNode();
SarifRenderer.java,final SarifLog sarifLog = sarifLogBuilder.build();,if (sarifLogBuilder != null ) final SarifLog sarifLog = sarifLogBuilder.build();
SarifRenderer.java,RuleViolation rv = violations.next();,if (violations != null ) RuleViolation rv = violations.next();
SarifRenderer.java,locations = result.getLocations();,if (result != null ) locations = result.getLocations();
SarifRenderer.java,SarifLog.Result result = new SarifLog.Result();,if (SarifLog != null ) SarifLog.Result result = new SarifLog.Result();
SarifRenderer.java,SarifLog.Message message = new SarifLog.Message();,if (SarifLog != null ) SarifLog.Message message = new SarifLog.Message();
SarifRenderer.java,SarifLog.Component result = new SarifLog.Component();,if (SarifLog != null ) SarifLog.Component result = new SarifLog.Component();
SarifRenderer.java,SarifLog.ReportingDescriptor result = new SarifLog.ReportingDescriptor();,if (SarifLog != null ) SarifLog.ReportingDescriptor result = new SarifLog.ReportingDescriptor();
SarifRenderer.java,SarifLog.ArtifactLocation artifactLocation = new SarifLog.ArtifactLocation();,if (SarifLog != null ) SarifLog.ArtifactLocation artifactLocation = new SarifLog.ArtifactLocation();
SarifRenderer.java,SarifLog.Region region = new SarifLog.Region();,if (SarifLog != null ) SarifLog.Region region = new SarifLog.Region();
SarifRenderer.java,SarifLog.PhysicalLocation physicalLocation = new SarifLog.PhysicalLocation();,if (SarifLog != null ) SarifLog.PhysicalLocation physicalLocation = new SarifLog.PhysicalLocation();
SarifRenderer.java,SarifLog.Location result = new SarifLog.Location();,if (SarifLog != null ) SarifLog.Location result = new SarifLog.Location();
SarifRenderer.java,SarifLog.PropertyBag result = new SarifLog.PropertyBag();,if (SarifLog != null ) SarifLog.PropertyBag result = new SarifLog.PropertyBag();
SarifRenderer.java,SarifLog.Result result = new SarifLog.Result();,if (SarifLog != null ) SarifLog.Result result = new SarifLog.Result();
SarifRenderer.java,SarifLog.Message message = new SarifLog.Message();,if (SarifLog != null ) SarifLog.Message message = new SarifLog.Message();
SarifRenderer.java,run = new SarifLog.Run();,if (SarifLog != null ) run = new SarifLog.Run();
SarifRenderer.java,driver = new SarifLog.Component();,if (SarifLog != null ) driver = new SarifLog.Component();
SarifRenderer.java,SarifLog.Tool tool = new SarifLog.Tool();,if (SarifLog != null ) SarifLog.Tool tool = new SarifLog.Tool();
SarifRenderer.java,SarifLog.Location location = new SarifLog.Location();,if (SarifLog != null ) SarifLog.Location location = new SarifLog.Location();
SarifRenderer.java,SarifLog.PropertyBag propertyBag = new SarifLog.PropertyBag();,if (SarifLog != null ) SarifLog.PropertyBag propertyBag = new SarifLog.PropertyBag();
PMDTaskImpl.java,int problemCount = reportSize.get();,if (reportSize != null ) int problemCount = reportSize.get();
GenerateRuleDocsCmd.java,Iterator<RuleSet> registeredRuleSets = ruleSetFactory.getRegisteredRuleSets();,if (ruleSetFactory != null ) Iterator<RuleSet> registeredRuleSets = ruleSetFactory.getRegisteredRuleSets();
RuleDocGenerator.java,RuleSetFactory ruleSetFactory = RulesetsFactoryUtils.defaultFactory();,if (RulesetsFactoryUtils != null ) RuleSetFactory ruleSetFactory = RulesetsFactoryUtils.defaultFactory();
RuleDocGenerator.java,RuleSet ruleset = rulesets.next();,if (rulesets != null ) RuleSet ruleset = rulesets.next();
VfExpressionTypeVisitor.java,this.fileName = AbstractTokenManager.getFileName();,if (AbstractTokenManager != null ) this.fileName = AbstractTokenManager.getFileName();
VfExpressionTypeVisitor.java,StringBuilder sb = new StringBuilder(identifier.getImage());,if (StringBuilder(identifier != null ) StringBuilder sb = new StringBuilder(identifier.getImage());
VfParser.java,VfExpressionTypeVisitor visitor = new VfExpressionTypeVisitor(this.getParserOptions());,if (VfExpressionTypeVisitor(this != null ) VfExpressionTypeVisitor visitor = new VfExpressionTypeVisitor(this.getParserOptions());
VfUnescapeElRule.java,IdentifierType identifierType = id.getIdentifierType();,if (id != null ) IdentifierType identifierType = id.getIdentifierType();
ApexClassPropertyTypesTest.java,String vfFileName = vfPagePath.toString();,if (vfPagePath != null ) String vfFileName = vfPagePath.toString();
ApexClassPropertyTypesTest.java,String vfFileName = vfPagePath.toString();,if (vfPagePath != null ) String vfFileName = vfPagePath.toString();
ObjectFieldTypesTest.java,String vfFileName = vfPagePath.toString();,if (vfPagePath != null ) String vfFileName = vfPagePath.toString();
ObjectFieldTypesTest.java,String vfFileName = vfPagePath.toString();,if (vfPagePath != null ) String vfFileName = vfPagePath.toString();
ScalaTokenizer.java,ScalaTokenFilter filter = new ScalaTokenFilter(tokens.iterator());,if (ScalaTokenFilter(tokens != null ) ScalaTokenFilter filter = new ScalaTokenFilter(tokens.iterator());
ScalaTokenizer.java,Position pos = token.pos();,if (token != null ) Position pos = token.pos();
JavaTypeDefinitionSimple.java,enclosing = clazz.getEnclosingClass();,if (clazz != null ) enclosing = clazz.getEnclosingClass();
JavaTypeDefinitionSimple.java,enclosing = clazz.getEnclosingClass();,if (clazz != null ) enclosing = clazz.getEnclosingClass();
VfHandler.java,VfExpressionTypeVisitor visitor = new VfExpressionTypeVisitor(astCompilationUnit.getPropertySource());,if (VfExpressionTypeVisitor(astCompilationUnit != null ) VfExpressionTypeVisitor visitor = new VfExpressionTypeVisitor(astCompilationUnit.getPropertySource());
AbstractVfTypedElExpressionRule.java,File file = ctx.getSourceCodeFile();,if (ctx != null ) File file = ctx.getSourceCodeFile();
AbstractPMDProcessor.java,"final RuleSets rs = createRuleSets(ruleSetFactory, ctx.getReport());","if (ctx != null ) final RuleSets rs = createRuleSets(ruleSetFactory, ctx.getReport());"
RuleSetLoader.java,ResourceLoader resourceLoader = new ResourceLoader(RuleSetLoader.class.getClassLoader());,if (ResourceLoader(RuleSetLoader != null ) ResourceLoader resourceLoader = new ResourceLoader(RuleSetLoader.class.getClassLoader());
PMD.java,final RuleSetFactory ruleSetFactory = RuleSetParser.fromPmdConfig(configuration).toFactory();,if (RuleSetParser != null ) final RuleSetFactory ruleSetFactory = RuleSetParser.fromPmdConfig(configuration).toFactory();
RuleSetLoader.java,ResourceLoader resourceLoader = new ResourceLoader(RuleSetParser.class.getClassLoader());,if (ResourceLoader(RuleSetParser != null ) ResourceLoader resourceLoader = new ResourceLoader(RuleSetParser.class.getClassLoader());
PMD5RulesetTest.java,RuleSetFactory ruleSetFactory = new RuleSetParser().toFactory();,if (RuleSetParser() != null ) RuleSetFactory ruleSetFactory = new RuleSetParser().toFactory();
QualifiedNameResolver.java,final String image = pack.getPackageNameImage();,if (pack != null ) final String image = pack.getPackageNameImage();
UnnecessaryFullyQualifiedNameRule.java,currentPackage = node.getPackageNameImage();,if (node != null ) currentPackage = node.getPackageNameImage();
LoosePackageCouplingRule.java,this.thisPackage = node.getPackageNameImage();,if (node != null ) this.thisPackage = node.getPackageNameImage();
UselessOverridingMethodRule.java,packageName = node.getPackageNameImage();,if (node != null ) packageName = node.getPackageNameImage();
ASTCompilationUnit.java,"return pdecl == null ? """" : pdecl.getPackageNameImage();","if (pdecl != null ) return pdecl == null ? """" : pdecl.getPackageNameImage();"
ApexClassPropertyTypes.java,this.variableNameProcessed = Sets.newConcurrentHashSet();,if (Sets != null ) this.variableNameProcessed = Sets.newConcurrentHashSet();
IdentifierType.java,this.basicTypes = Sets.newConcurrentHashSet();,if (Sets != null ) this.basicTypes = Sets.newConcurrentHashSet();
ObjectFieldTypes.java,this.variableNameProcessed = Sets.newConcurrentHashSet();,if (Sets != null ) this.variableNameProcessed = Sets.newConcurrentHashSet();
ObjectFieldTypes.java,this.objectFileProcessed = Sets.newConcurrentHashSet();,if (Sets != null ) this.objectFileProcessed = Sets.newConcurrentHashSet();
PMDTaskImpl.java,String ruleSetString = configuration.getRuleSets();,if (configuration != null ) String ruleSetString = configuration.getRuleSets();
PMDTaskImpl.java,ruleSets = rulesetParser.parseFromResourceReference(configuration.getRuleSets());,if (rulesetParser != null ) ruleSets = rulesetParser.parseFromResourceReference(configuration.getRuleSets());
Benchmarker.java,final RuleSetFactory factory = RulesetsFactoryUtils.defaultFactory();,if (RulesetsFactoryUtils != null ) final RuleSetFactory factory = RulesetsFactoryUtils.defaultFactory();
PMD.java,final RuleSetFactory ruleSetFactory = RuleSetParser.fromPmdConfig(configuration).createFactory();,if (RuleSetParser != null ) final RuleSetFactory ruleSetFactory = RuleSetParser.fromPmdConfig(configuration).createFactory();
PMD5RulesetTest.java,RuleSetFactory ruleSetFactory = new RuleSetParser().createFactory();,if (RuleSetParser() != null ) RuleSetFactory ruleSetFactory = new RuleSetParser().createFactory();
PMDTaskImpl.java,String ruleSets = configuration.getRuleSets();,if (configuration != null ) String ruleSets = configuration.getRuleSets();
PMDTaskImpl.java,List<RuleSet> rules = rulesetParser.parseFromResourceReference(configuration.getRuleSets());,if (rulesetParser != null ) List<RuleSet> rules = rulesetParser.parseFromResourceReference(configuration.getRuleSets());
PMD.java,final RuleSetFactory ruleSetFactory = RuleSetParserConfig.fromPmdConfig(configuration).createFactory();,if (RuleSetParserConfig != null ) final RuleSetFactory ruleSetFactory = RuleSetParserConfig.fromPmdConfig(configuration).createFactory();
RuleSetParserConfig.java,ResourceLoader resourceLoader = new ResourceLoader(RuleSetParserConfig.class.getClassLoader());,if (ResourceLoader(RuleSetParserConfig != null ) ResourceLoader resourceLoader = new ResourceLoader(RuleSetParserConfig.class.getClassLoader());
PMDTaskImpl.java,RuleSets rules = ruleSetFactory.createRuleSets(configuration.getRuleSets());,if (ruleSetFactory != null ) RuleSets rules = ruleSetFactory.createRuleSets(configuration.getRuleSets());
PMD5RulesetTest.java,RuleSetFactory ruleSetFactory = new RuleSetParserConfig().createFactory();,if (RuleSetParserConfig() != null ) RuleSetFactory ruleSetFactory = new RuleSetParserConfig().createFactory();
PMD.java,final RuleSetFactory ruleSetFactory = RuleSetFactoryConfig.fromPmdConfig(configuration).createFactory();,if (RuleSetFactoryConfig != null ) final RuleSetFactory ruleSetFactory = RuleSetFactoryConfig.fromPmdConfig(configuration).createFactory();
RuleSetFactory.java,ResourceLoader resourceLoader = new ResourceLoader(RuleSetFactoryConfig.class.getClassLoader());,if (ResourceLoader(RuleSetFactoryConfig != null ) ResourceLoader resourceLoader = new ResourceLoader(RuleSetFactoryConfig.class.getClassLoader());
PMD5RulesetTest.java,RuleSetFactory ruleSetFactory = new RuleSetFactoryConfig().createFactory();,if (RuleSetFactoryConfig() != null ) RuleSetFactory ruleSetFactory = new RuleSetFactoryConfig().createFactory();
RuleSetFactoryTest.java,rsf = RulesetsFactoryUtils.defaultFactory();,if (RulesetsFactoryUtils != null ) rsf = RulesetsFactoryUtils.defaultFactory();
GenerateRuleDocsCmd.java,RuleSetFactory ruleSetFactory = RulesetsFactoryUtils.defaultFactory();,if (RulesetsFactoryUtils != null ) RuleSetFactory ruleSetFactory = RulesetsFactoryUtils.defaultFactory();
RuleDocGeneratorTest.java,RuleSetFactory rsf = RulesetsFactoryUtils.defaultFactory();,if (RulesetsFactoryUtils != null ) RuleSetFactory rsf = RulesetsFactoryUtils.defaultFactory();
AvoidDmlStatementsInLoopsRule.java,Node n = node.getParent();,if (node != null ) Node n = node.getParent();
AvoidSoqlInLoopsRule.java,Node n = node.getParent();,if (node != null ) Node n = node.getParent();
AvoidSoslInLoopsRule.java,Node n = node.getParent();,if (node != null ) Node n = node.getParent();
XMLRendererTest.java,String absolutePath = tempFile.toAbsolutePath().toString();,if (tempFile != null ) String absolutePath = tempFile.toAbsolutePath().toString();
YAHTMLRendererTest.java,File[] a = dir.listFiles();,if (dir != null ) File[] a = dir.listFiles();
YAHTMLRendererTest.java,String[] htmlFiles = new File(outputDir).list();,if (File(outputDir) != null ) String[] htmlFiles = new File(outputDir).list();
ReportTest.java,String absolutePath = tempFile.toAbsolutePath().toString();,if (tempFile != null ) String absolutePath = tempFile.toAbsolutePath().toString();
AnyTokenizer.java,StringBuilder text = sourceCode.getCodeBuffer();,if (sourceCode != null ) StringBuilder text = sourceCode.getCodeBuffer();
AnyTokenizer.java,StringBuilder sb = sourceCode.getCodeBuffer();,if (sourceCode != null ) StringBuilder sb = sourceCode.getCodeBuffer();
AnyTokenizer.java,String line = reader.readLine();,if (reader != null ) String line = reader.readLine();
AnyTokenizer.java,String token = tokenizer.nextToken();,if (tokenizer != null ) String token = tokenizer.nextToken();
AnyTokenizer.java,line = reader.readLine();,if (reader != null ) line = reader.readLine();
PMDCommandLineInterface.java,fullText += usage.toString();,if (usage != null ) fullText += usage.toString();
Designer.java,ActionMap actionMap = textConponent.getActionMap();,if (textConponent != null ) ActionMap actionMap = textConponent.getActionMap();
Designer.java,InputMap inputMap = textConponent.getInputMap();,if (textConponent != null ) InputMap inputMap = textConponent.getInputMap();
UselessOverridingMethodRule.java,ASTNameList thrownsExceptions = node.getThrows();,if (node != null ) ASTNameList thrownsExceptions = node.getThrows();
VfDocStyleTest.java,ASTElement element = elememts.iterator().next();,if (elememts != null ) ASTElement element = elememts.iterator().next();
VfDocStyleTest.java,ASTElement element = elememts.iterator().next();,if (elememts != null ) ASTElement element = elememts.iterator().next();
VfDocStyleTest.java,ASTElement element = elememts.iterator().next();,if (elememts != null ) ASTElement element = elememts.iterator().next();
ClassScope.java,res += mnd.toString();,if (mnd != null ) res += mnd.toString();
ZipFileExtractor.java,ZipFile zip = new ZipFile(zipPath.toFile());,if (ZipFile(zipPath != null ) ZipFile zip = new ZipFile(zipPath.toFile());
ZipFileExtractor.java,ZipFile zip = new ZipFile(zipPath.toFile());,if (ZipFile(zipPath != null ) ZipFile zip = new ZipFile(zipPath.toFile());
NoInlineJavaScriptRule.java,final Matcher matcher = scriptPattern.matcher(node.literal());,if (scriptPattern != null ) final Matcher matcher = scriptPattern.matcher(node.literal());
AbstractJUnitRule.java,String className = cid.getSimpleName();,if (cid != null ) String className = cid.getSimpleName();
CheckSkipResultRule.java,ASTType typeNode = node.getTypeNode();,if (node != null ) ASTType typeNode = node.getTypeNode();
ConsecutiveLiteralAppendsRule.java,Node nn = node.getTypeNameNode();,if (node != null ) Node nn = node.getTypeNameNode();
TypeHelper.java,int i = className.length();,if (className != null ) int i = className.length();
SingularFieldRule.java,List<NameOccurrence> usages = declaration.getUsages();,if (declaration != null ) List<NameOccurrence> usages = declaration.getUsages();
SingularFieldRule.java,Node location = no.getLocation();,if (no != null ) Node location = no.getLocation();
SingularFieldRule.java,Node potentialStatement = primaryExpressionParent.getParent();,if (primaryExpressionParent != null ) Node potentialStatement = primaryExpressionParent.getParent();
Java15PreviewTest.java,List<ASTClassOrInterfaceType> permittedSubclasses = classDecl.getPermittedSubclasses();,if (classDecl != null ) List<ASTClassOrInterfaceType> permittedSubclasses = classDecl.getPermittedSubclasses();
Java15PreviewTest.java,List<ASTClassOrInterfaceType> permittedSubclasses = interfaceDecl.getPermittedSubclasses();,if (interfaceDecl != null ) List<ASTClassOrInterfaceType> permittedSubclasses = interfaceDecl.getPermittedSubclasses();
SwitchExpressions.java,int k = day.toString().length();,if (day != null ) int k = day.toString().length();
StringToStringRule.java,"List<ASTMethodDeclaration> candidateMethods = getMethodsByNameAndArgsCount(methodName, args.size());","if (args != null ) List<ASTMethodDeclaration> candidateMethods = getMethodsByNameAndArgsCount(methodName, args.size());"
StringToStringRule.java,ASTFormalParameters methodParams = candidateMethod.getFormalParameters();,if (candidateMethod != null ) ASTFormalParameters methodParams = candidateMethod.getFormalParameters();
UnusedAssignmentRule.java,"SpanInfo bodyState = acceptOpt(resources, before.fork());","if (before != null ) SpanInfo bodyState = acceptOpt(resources, before.fork());"
LanguageFactory.java,Language language = iterator.next();,if (iterator != null ) Language language = iterator.next();
LanguageRegistry.java,Language language = iterator.next();,if (iterator != null ) Language language = iterator.next();
CloseResourceRule.java,TypeNode resVarType = resVarEntry.getValue();,if (resVarEntry != null ) TypeNode resVarType = resVarEntry.getValue();
CloseResourceRule.java,String opName = op.getImage();,if (op != null ) String opName = op.getImage();
UnnecessaryCaseChangeRule.java,JavaNode parent = expr.getParent().getParent(); // ASTArgumentList/ASTExpression/ASTPrimaryExpression,if (ASTArgumentList/ASTExpression/ASTPrimaryExpression != null ) JavaNode parent = expr.getParent().getParent(); // ASTArgumentList/ASTExpression/ASTPrimaryExpression
StringToStringRule.java,ASTFormalParameters methodParams = methodDeclaration.getFormalParameters();,if (methodDeclaration != null ) ASTFormalParameters methodParams = methodDeclaration.getFormalParameters();
StringToStringRule.java,String methodName = methodCall.getImage();,if (methodCall != null ) String methodName = methodCall.getImage();
StringToStringRule.java,boolean isArray = node.isArray();,if (node != null ) boolean isArray = node.isArray();
StringToStringRule.java,NameOccurrence qualifier = jocc.getNameForWhichThisIsAQualifier();,if (jocc != null ) NameOccurrence qualifier = jocc.getNameForWhichThisIsAQualifier();
UnnecessaryCaseChangeRule.java,String methodName = methodCall.getImage();,if (methodCall != null ) String methodName = methodCall.getImage();
Report.java,Iterator<SuppressedViolation> s = r.getSuppressedRuleViolations().iterator();,if (r != null ) Iterator<SuppressedViolation> s = r.getSuppressedRuleViolations().iterator();
RedundantFieldInitializerRule.java,value = literal.getValueAsInt();,if (literal != null ) value = literal.getValueAsInt();
RedundantFieldInitializerRule.java,value = literal.getValueAsLong();,if (literal != null ) value = literal.getValueAsLong();
RedundantFieldInitializerRule.java,value = literal.getValueAsFloat();,if (literal != null ) value = literal.getValueAsFloat();
RedundantFieldInitializerRule.java,value = literal.getValueAsDouble();,if (literal != null ) value = literal.getValueAsDouble();
CloseResourceRule.java,ASTVariableDeclaratorId variableId = entry.getKey();,if (entry != null ) ASTVariableDeclaratorId variableId = entry.getKey();
CloseResourceRule.java,ASTVariableInitializer initializer = var.getInitializer();,if (var != null ) ASTVariableInitializer initializer = var.getInitializer();
CloseResourceRule.java,String variableToClose = id.getImage();,if (id != null ) String variableToClose = id.getImage();
CloseResourceRule.java,ASTBlock finallyBody = finallyClause.getBody();,if (finallyClause != null ) ASTBlock finallyBody = finallyClause.getBody();
CloseResourceRule.java,String name = oName.getImage();,if (oName != null ) String name = oName.getImage();
CloseResourceRule.java,"String prefixPlusSuffix = prefix.getImage() + ""."" + suffix.getImage();","if (suffix != null ) String prefixPlusSuffix = prefix.getImage() + ""."" + suffix.getImage();"
CloseResourceRule.java,String suff = oSuffix.getImage();,if (oSuffix != null ) String suff = oSuffix.getImage();
CloseResourceRule.java,String paramName = pName.getImage();,if (pName != null ) String paramName = pName.getImage();
UnusedAssignmentRule.java,ASTClassOrInterfaceType superclass = decl.getSuperClassTypeNode();,if (decl != null ) ASTClassOrInterfaceType superclass = decl.getSuperClassTypeNode();
UnusedAssignmentRule.java,ASTVariableDeclaratorId var = (ASTVariableDeclaratorId) field.getNode();,if (field != null ) ASTVariableDeclaratorId var = (ASTVariableDeclaratorId) field.getNode();
UnusedAssignmentRule.java,boolean mayBeUsedByLeakedThis = this.thisIsLeaking && var.isField();,if (var != null ) boolean mayBeUsedByLeakedThis = this.thisIsLeaking && var.isField();
UnusedAssignmentRule.java,SpanInfo ctorHeader = beforeLocal.forkCapturingNonLocal();,if (beforeLocal != null ) SpanInfo ctorHeader = beforeLocal.forkCapturingNonLocal();
UnnecessaryCaseChangeRule.java,JavaNode parent = expr.getParent().getParent();,if (expr != null ) JavaNode parent = expr.getParent().getParent();
UnnecessaryCaseChangeRule.java,int n = exp.getNumChildren();,if (exp != null ) int n = exp.getNumChildren();
UnnecessaryCaseChangeRule.java,image = name.getImage();,if (name != null ) image = name.getImage();
RuleDocGenerator.java,String path = file.toString();,if (file != null ) String path = file.toString();
RuleDocGenerator.java,String path = file.toString();,if (file != null ) String path = file.toString();
AvoidThrowingNullPointerExceptionRule.java,String thrownImage = throwStatement.getFirstClassOrInterfaceTypeImage();,if (throwStatement != null ) String thrownImage = throwStatement.getFirstClassOrInterfaceTypeImage();
UseCollectionIsEmptyRule.java,Node expr = node.getParent().getParent();,if (node != null ) Node expr = node.getParent().getParent();
AvoidCallingFinalizeRule.java,return primaryPrefix == null || !primaryPrefix.usesSuperModifier();,if (!primaryPrefix != null ) return primaryPrefix == null || !primaryPrefix.usesSuperModifier();
AvoidCallingFinalizeRule.java,int argsCount = primarySuffix.getArgumentCount();,if (primarySuffix != null ) int argsCount = primarySuffix.getArgumentCount();
XMLRenderer.java,RuleViolation rv = violations.next();,if (violations != null ) RuleViolation rv = violations.next();
XMLRenderer.java,String nextFilename = determineFileName(rv.getFilename());,if (determineFileName(rv != null ) String nextFilename = determineFileName(rv.getFilename());
XMLRenderer.java,result = sb.toString();,if (sb != null ) result = sb.toString();
XSLTRenderer.java,TransformerFactory factory = TransformerFactory.newInstance();,if (TransformerFactory != null ) TransformerFactory factory = TransformerFactory.newInstance();
XSLTRenderer.java,Document doc = this.getDocument(w.toString());,if (this != null ) Document doc = this.getDocument(w.toString());
PMDTaskTest.java,String report = buildRule.getOutput();,if (buildRule != null ) String report = buildRule.getOutput();
UnusedAssignmentRule.java,ASTVariableDeclaratorId id = (ASTVariableDeclaratorId) var.getNode();,if (var != null ) ASTVariableDeclaratorId id = (ASTVariableDeclaratorId) var.getNode();
UnusedAssignmentRule.java,VariableNameDeclaration var = node.getVariableId().getNameDeclaration();,if (node != null ) VariableNameDeclaration var = node.getVariableId().getNameDeclaration();
UnusedAssignmentRule.java,SpanInfo breakTarget = before.forkEmpty();,if (before != null ) SpanInfo breakTarget = before.forkEmpty();
UnusedAssignmentRule.java,SpanInfo continueTarget = before.forkEmpty();,if (before != null ) SpanInfo continueTarget = before.forkEmpty();
UnusedAssignmentRule.java,AlgoState thenState = before.fork();,if (before != null ) AlgoState thenState = before.fork();
UnusedAssignmentRule.java,"AlgoState bodyState = acceptOpt(resources, before.fork());","if (before != null ) AlgoState bodyState = acceptOpt(resources, before.fork());"
UnusedAssignmentRule.java,AlgoState breakTarget = before.forkEmpty();,if (before != null ) AlgoState breakTarget = before.forkEmpty();
UnusedAssignmentRule.java,AlgoState continueTarget = before.forkEmpty();,if (before != null ) AlgoState continueTarget = before.forkEmpty();
UnusedAssignmentRule.java,"AlgoState iter = acceptOpt(body, before.fork());","if (before != null ) AlgoState iter = acceptOpt(body, before.fork());"
UnusedAssignmentRule.java,AlgoState ctorHeader = beforeLocal.forkCapturingNonLocal();,if (beforeLocal != null ) AlgoState ctorHeader = beforeLocal.forkCapturingNonLocal();
UnusedAssignmentRule.java,AlgoState staticInit = beforeLocal.forkEmptyNonLocal();,if (beforeLocal != null ) AlgoState staticInit = beforeLocal.forkEmptyNonLocal();
UnusedAssignmentRule.java,"AlgoState state = visitor.acceptOpt(ctor, ctorHeader.forkCapturingNonLocal());","if (ctorHeader != null ) AlgoState state = visitor.acceptOpt(ctor, ctorHeader.forkCapturingNonLocal());"
UnusedAssignmentRule.java,"AlgoState thenState = acceptOpt(node.getThenBranch(), before.fork());","if (before != null ) AlgoState thenState = acceptOpt(node.getThenBranch(), before.fork());"
UnusedAssignmentRule.java,"AlgoState iter = acceptOpt(body, before.fork());","if (before != null ) AlgoState iter = acceptOpt(body, before.fork());"
UnusedAssignmentRule.java,"AlgoState current = acceptOpt(catchClause, before.fork());","if (before != null ) AlgoState current = acceptOpt(catchClause, before.fork());"
UnusedAssignmentRule.java,before = breakTargets.pop();,if (breakTargets != null ) before = breakTargets.pop();
UnusedAssignmentRule.java,"AlgoState elseState = acceptOpt(node.getElseBranch(), before.fork());","if (before != null ) AlgoState elseState = acceptOpt(node.getElseBranch(), before.fork());"
UnusedAssignmentRule.java,breakTarget = breakTargets.peek();,if (breakTargets != null ) breakTarget = breakTargets.peek();
UnusedAssignmentRule.java,continueTarget = continueTargets.peek();,if (continueTargets != null ) continueTarget = continueTargets.peek();
UnusedAssignmentRule.java,"LivenessState thenData = acceptOpt(node.getThenBranch(), before.fork());","if (before != null ) LivenessState thenData = acceptOpt(node.getThenBranch(), before.fork());"
UnusedAssignmentRule.java,"LivenessState elseData = acceptOpt(node.getElseBranch(), before.fork());","if (before != null ) LivenessState elseData = acceptOpt(node.getElseBranch(), before.fork());"
UnusedAssignmentRule.java,LivenessState breakTarget = before.forkEmpty();,if (before != null ) LivenessState breakTarget = before.forkEmpty();
UnusedAssignmentRule.java,LivenessState continueTarget = before.forkEmpty();,if (before != null ) LivenessState continueTarget = before.forkEmpty();
UnusedAssignmentRule.java,"LivenessState iter = acceptOpt(body, before.fork());","if (before != null ) LivenessState iter = acceptOpt(body, before.fork());"
UnusedAssignmentRule.java,before = unnamedBreakTargets.pop();,if (unnamedBreakTargets != null ) before = unnamedBreakTargets.pop();
UnusedAssignmentRule.java,"ScopeData thenData = acceptOpt(node.getThenBranch(), before.fork());","if (before != null ) ScopeData thenData = acceptOpt(node.getThenBranch(), before.fork());"
UnusedAssignmentRule.java,"ScopeData elseData = acceptOpt(node.getElseBranch(), before.fork());","if (before != null ) ScopeData elseData = acceptOpt(node.getElseBranch(), before.fork());"
UnusedAssignmentRule.java,ScopeData breakTarget = before.forkEmpty();,if (before != null ) ScopeData breakTarget = before.forkEmpty();
UnusedAssignmentRule.java,ScopeData continueTarget = before.forkEmpty();,if (before != null ) ScopeData continueTarget = before.forkEmpty();
UnusedAssignmentRule.java,"ScopeData iter = acceptOpt(body, before.fork());","if (before != null ) ScopeData iter = acceptOpt(body, before.fork());"
UnusedAssignmentRule.java,breakTarget = unnamedBreakTargets.getFirst();,if (unnamedBreakTargets != null ) breakTarget = unnamedBreakTargets.getFirst();
UnusedAssignmentRule.java,continueTarget = unnamedContinueTargets.getFirst();,if (unnamedContinueTargets != null ) continueTarget = unnamedContinueTargets.getFirst();
UnusedAssignmentRule.java,String label = parent.getImage();,if (parent != null ) String label = parent.getImage();
UnusedAssignmentRule.java,labels = Collections.emptySet();,if (Collections != null ) labels = Collections.emptySet();
UnusedAssignmentRule.java,breakTarget = unnamedBreakTargets.pop();,if (unnamedBreakTargets != null ) breakTarget = unnamedBreakTargets.pop();
UnusedAssignmentRule.java,continueTarget = unnamedContinueTargets.pop();,if (unnamedContinueTargets != null ) continueTarget = unnamedContinueTargets.pop();
UnusedAssignmentRule.java,"ScopeData iter = acceptOpt(node.getBody(), before.fork());","if (before != null ) ScopeData iter = acceptOpt(node.getBody(), before.fork());"
UnusedAssignmentRule.java,"ScopeData iter = acceptOpt(node.getBody(), before.fork());","if (before != null ) ScopeData iter = acceptOpt(node.getBody(), before.fork());"
UnusedAssignmentRule.java,"ScopeData iter = acceptOpt(body, before.fork());","if (before != null ) ScopeData iter = acceptOpt(body, before.fork());"
UnusedAssignmentRule.java,"ScopeData iter = acceptOpt(body, before.fork());","if (before != null ) ScopeData iter = acceptOpt(body, before.fork());"
UnusedAssignmentRule.java,ScopeData thenData = before.fork();,if (before != null ) ScopeData thenData = before.fork();
StdCyclomaticComplexityRule.java,Entry classEntry = entryStack.pop();,if (entryStack != null ) Entry classEntry = entryStack.pop();
CPPTokenizerTest.java,public ExpectedException expectedException = ExpectedException.none();,if (ExpectedException != null ) public ExpectedException expectedException = ExpectedException.none();
UseStringBufferForStringAppendsRule.java,Node parent = node.getParent().getParent();,if (node != null ) Node parent = node.getParent().getParent();
JSPTokenizer.java,StringBuilder buffer = sourceCode.getCodeBuffer();,if (sourceCode != null ) StringBuilder buffer = sourceCode.getCodeBuffer();
JSPTokenizer.java,Token currentToken = (Token) tokenMgr.getNextToken();,if (tokenMgr != null ) Token currentToken = (Token) tokenMgr.getNextToken();
JSPTokenizer.java,currentToken = (Token) tokenMgr.getNextToken();,if (tokenMgr != null ) currentToken = (Token) tokenMgr.getNextToken();
JSPTokenizerTest.java,kind = Integer.parseInt(token.toString());,if (Integer != null ) kind = Integer.parseInt(token.toString());
CsTokenizerTest.java,List<TokenEntry> tokenList = tokens.getTokens();,if (tokens != null ) List<TokenEntry> tokenList = tokens.getTokens();
CsTokenizerTest.java,List<TokenEntry> tokenList = tokens.getTokens();,if (tokens != null ) List<TokenEntry> tokenList = tokens.getTokens();
ScalaTokenizer.java,Position tokenPosition = token.pos();,if (token != null ) Position tokenPosition = token.pos();
JavaTokensTokenizerTest.java,List<TokenEntry> tokenList = tokens.getTokens();,if (tokens != null ) List<TokenEntry> tokenList = tokens.getTokens();
JavaTokensTokenizerTest.java,List<TokenEntry> tokenList = tokens.getTokens();,if (tokens != null ) List<TokenEntry> tokenList = tokens.getTokens();
JavaTokensTokenizerTest.java,List<TokenEntry> tokenList = tokens.getTokens();,if (tokens != null ) List<TokenEntry> tokenList = tokens.getTokens();
CPPTokenizerContinuationTest.java,Token token = (Token) tokenManager.getNextToken();,if (tokenManager != null ) Token token = (Token) tokenManager.getNextToken();
CPPTokenizerContinuationTest.java,token = (Token) tokenManager.getNextToken();,if (tokenManager != null ) token = (Token) tokenManager.getNextToken();
EcmascriptTokenizerTest.java,List<TokenEntry> list = tokens.getTokens();,if (tokens != null ) List<TokenEntry> list = tokens.getTokens();
EcmascriptTokenizerTest.java,List<TokenEntry> list = tokens.getTokens();,if (tokens != null ) List<TokenEntry> list = tokens.getTokens();
EcmascriptTokenizerTest.java,List<TokenEntry> list = tokens.getTokens();,if (tokens != null ) List<TokenEntry> list = tokens.getTokens();
UnusedPrivateMethodRule.java,ASTMethodDeclarator node = (ASTMethodDeclarator) mnd.getNode();,if (mnd != null ) ASTMethodDeclarator node = (ASTMethodDeclarator) mnd.getNode();
XMLRenderer.java,String codeSnipet = match.getSourceCodeSlice();,if (match != null ) String codeSnipet = match.getSourceCodeSlice();
ScalaTokenizer.java,this.tokenIter = iterator.iterator();,if (iterator != null ) this.tokenIter = iterator.iterator();
UnnecessaryCastRule.java,ASTName name = (ASTName) no.getLocation();,if (no != null ) ASTName name = (ASTName) no.getLocation();
JUnitTestsShouldIncludeAssertRule.java,String img = name.getImage();,if (name != null ) String img = name.getImage();
JUnitTestsShouldIncludeAssertRule.java,String img = name.getImage();,if (name != null ) String img = name.getImage();
JUnitTestsShouldIncludeAssertRule.java,String img = name.getImage();,if (name != null ) String img = name.getImage();
AbstractJUnitRule.java,String className = cid.getImage();,if (cid != null ) String className = cid.getImage();
AbstractPMDProcessor.java,"final RuleSets rs = createRuleSets(ruleSetFactory, ctx.getReport());","if (ctx != null ) final RuleSets rs = createRuleSets(ruleSetFactory, ctx.getReport());"
TooManyFieldsRule.java,int val = entry.getValue();,if (entry != null ) int val = entry.getValue();
TooManyFieldsRule.java,Node n = nodes.get(entry.getKey());,if (nodes != null ) Node n = nodes.get(entry.getKey());
TooManyFieldsRule.java,String key = clazz.getImage();,if (clazz != null ) String key = clazz.getImage();
AbstractNodeTest.java,String log = loggingRule.getLog();,if (loggingRule != null ) String log = loggingRule.getLog();
DeprecatedAttrLogger.java,String name = rule.getName();,if (rule != null ) String name = rule.getName();
EcmascriptTreeBuilder.java,int nodeStart = node.getNode().getAbsolutePosition();,if (node != null ) int nodeStart = node.getNode().getAbsolutePosition();
ASTUserClass.java,String apexName = node.getDefiningType().getApexName();,if (node != null ) String apexName = node.getDefiningType().getApexName();
ASTUserEnum.java,String apexName = node.getDefiningType().getApexName();,if (node != null ) String apexName = node.getDefiningType().getApexName();
ASTUserInterface.java,String apexName = node.getDefiningType().getApexName();,if (node != null ) String apexName = node.getDefiningType().getApexName();
CognitiveComplexityVisitor.java,boolean hasElseStatement = node.getNode().hasElseStatement();,if (node != null ) boolean hasElseStatement = node.getNode().hasElseStatement();
CognitiveComplexityVisitor.java,BooleanOp op = node.getNode().getOp();,if (node != null ) BooleanOp op = node.getNode().getOp();
CognitiveComplexityVisitor.java,PrefixOp op = node.getNode().getOp();,if (node != null ) PrefixOp op = node.getNode().getOp();
Helper.java,VariableExpression n = variable.getNode();,if (variable != null ) VariableExpression n = variable.getNode();
Helper.java,VariableDeclaration n = variable.getNode();,if (variable != null ) VariableDeclaration n = variable.getNode();
Helper.java,Field n = variable.getNode();,if (variable != null ) Field n = variable.getNode();
Helper.java,Field n = variable.getNode();,if (variable != null ) Field n = variable.getNode();
ApexCRUDViolationRule.java,TypeRef a = field.getNode().getTypeName();,if (field != null ) TypeRef a = field.getNode().getTypeName();
ApexCRUDViolationRule.java,List<Identifier> ids = innerClassRef.getNames();,if (innerClassRef != null ) List<Identifier> ids = innerClassRef.getNames();
ApexCRUDViolationRule.java,List<Identifier> a = ref.getNode().getNames();,if (ref != null ) List<Identifier> a = ref.getNode().getNames();
ApexCRUDViolationRule.java,List<Identifier> identifiers = reference.getNode().getNames();,if (reference != null ) List<Identifier> identifiers = reference.getNode().getNames();
ApexCRUDViolationRule.java,final String canonQuery = node.getNode().getCanonicalQuery();,if (node != null ) final String canonQuery = node.getNode().getCanonicalQuery();
Helper.java,VariableExpression n = variable.getNode();,if (variable != null ) VariableExpression n = variable.getNode();
Helper.java,VariableDeclaration n = variable.getNode();,if (variable != null ) VariableDeclaration n = variable.getNode();
Helper.java,Field n = variable.getNode();,if (variable != null ) Field n = variable.getNode();
Helper.java,Field n = variable.getNode();,if (variable != null ) Field n = variable.getNode();
AttributeAxisIteratorTest.java,public JavaUtilLoggingRule loggingRule = new JavaUtilLoggingRule(Attribute.class.getName());,if (JavaUtilLoggingRule(Attribute != null ) public JavaUtilLoggingRule loggingRule = new JavaUtilLoggingRule(Attribute.class.getName());
AttributeAxisIteratorTest.java,String log = loggingRule.getLog();,if (loggingRule != null ) String log = loggingRule.getLog();
CsTokenizer.java,final int type = currentToken.getType();,if (currentToken != null ) final int type = currentToken.getType();
CsTokenizer.java,final int type = token.getType();,if (token != null ) final int type = token.getType();
DartTokenizer.java,final int type = currentToken.getType();,if (currentToken != null ) final int type = currentToken.getType();
KotlinTokenizer.java,final int type = currentToken.getType();,if (currentToken != null ) final int type = currentToken.getType();
FieldDeclarationsShouldBeAtStartRule.java,line = node.getBeginLine();,if (node != null ) line = node.getBeginLine();
FieldDeclarationsShouldBeAtStartRule.java,column = node.getBeginColumn();,if (node != null ) column = node.getBeginColumn();
ParserCornerCases.java,Iterator<E> wrapped = ImmutableSet.super.iterator();,if (ImmutableSet != null ) Iterator<E> wrapped = ImmutableSet.super.iterator();
TypeHelper.java,className = classNameBuffer.toString();,if (classNameBuffer != null ) className = classNameBuffer.toString();
TypeHelper.java,classLoader = ClassLoader.getSystemClassLoader();,if (ClassLoader != null ) classLoader = ClassLoader.getSystemClassLoader();
AttributeAxisIterator.java,"super.current = new AttributeNode(attribute, super.position());","if (super != null ) super.current = new AttributeNode(attribute, super.position());"
SaxonXPathRuleQuery.java,Configuration config = xpathEvaluator.getConfiguration();,if (xpathEvaluator != null ) Configuration config = xpathEvaluator.getConfiguration();
SaxonXPathRuleQuery.java,final Expression node = pending.pop();,if (pending != null ) final Expression node = pending.pop();
SaxonXPathRuleQuery.java,Expression firstStep = path.getFirstStep();,if (path != null ) Expression firstStep = path.getFirstStep();
SaxonXPathRuleQuery.java,PathExpression root = (PathExpression) filterExpression.getBaseExpression();,if (filterExpression != null ) PathExpression root = (PathExpression) filterExpression.getBaseExpression();
SaxonXPathRuleQuery.java,AxisExpression axis = (AxisExpression) root.getStepExpression();,if (root != null ) AxisExpression axis = (AxisExpression) root.getStepExpression();
SaxonXPathRuleQuery.java,"FilterExpression newfilter = new FilterExpression(start, filterExpression.getFilter());","if (filterExpression != null ) FilterExpression newfilter = new FilterExpression(start, filterExpression.getFilter());"
SaxonXPathRuleQuery.java,"PathExpression p = new PathExpression(newfilter, path.getRemainingSteps());","if (path != null ) PathExpression p = new PathExpression(newfilter, path.getRemainingSteps());"
SaxonXPathRuleQuery.java,AxisExpression axis = (AxisExpression) path.getStepExpression();,if (path != null ) AxisExpression axis = (AxisExpression) path.getStepExpression();
SaxonXPathRuleQuery.java,PathExpression secondPath = (PathExpression) path.getRemainingSteps();,if (path != null ) PathExpression secondPath = (PathExpression) path.getRemainingSteps();
SaxonXPathRuleQuery.java,AxisExpression axis = (AxisExpression) secondPath.getFirstStep();,if (secondPath != null ) AxisExpression axis = (AxisExpression) secondPath.getFirstStep();
SaxonXPathRuleQuery.java,FilterExpression filter = (FilterExpression) secondPath.getRemainingSteps();,if (secondPath != null ) FilterExpression filter = (FilterExpression) secondPath.getRemainingSteps();
SaxonXPathRuleQuery.java,axis = (AxisExpression) filter.getBaseExpression();,if (filter != null ) axis = (AxisExpression) filter.getBaseExpression();
SaxonXPathRuleQuery.java,"FilterExpression newFilter = new FilterExpression(start, filter.getFilter());","if (filter != null ) FilterExpression newFilter = new FilterExpression(start, filter.getFilter());"
SaxonXPathRuleQuery.java,AxisExpression axis = (AxisExpression) root.getStepExpression();,if (root != null ) AxisExpression axis = (AxisExpression) root.getStepExpression();
SaxonXPathRuleQuery.java,FilterExpression oldFilter = filterChain.pop();,if (filterChain != null ) FilterExpression oldFilter = filterChain.pop();
SaxonXPathRuleQuery.java,"FilterExpression newfilter = new FilterExpression(start, oldFilter.getFilter());","if (oldFilter != null ) FilterExpression newfilter = new FilterExpression(start, oldFilter.getFilter());"
SaxonXPathRuleQuery.java,oldFilter = filterChain.pop();,if (filterChain != null ) oldFilter = filterChain.pop();
SaxonXPathRuleQuery.java,"newfilter = new FilterExpression(newfilter, oldFilter.getFilter());","if (oldFilter != null ) newfilter = new FilterExpression(newfilter, oldFilter.getFilter());"
SaxonXPathRuleQuery.java,PathExpression oldPath = pathChain.pop();,if (pathChain != null ) PathExpression oldPath = pathChain.pop();
SaxonXPathRuleQuery.java,"PathExpression newPath = new PathExpression(start, oldPath.getStepExpression());","if (oldPath != null ) PathExpression newPath = new PathExpression(start, oldPath.getStepExpression());"
SaxonXPathRuleQuery.java,oldPath = pathChain.pop();,if (pathChain != null ) oldPath = pathChain.pop();
SaxonXPathRuleQuery.java,"newPath = new PathExpression(newPath, oldPath.getStepExpression());","if (oldPath != null ) newPath = new PathExpression(newPath, oldPath.getStepExpression());"
ApexCRUDViolationRule.java,final String method = node.getNode().getMethodName();,if (node != null ) final String method = node.getNode().getMethodName();
SaxonXPathRuleQuery.java,PathExpression root = (PathExpression) filterExpression.getBaseExpression();,if (filterExpression != null ) PathExpression root = (PathExpression) filterExpression.getBaseExpression();
SaxonXPathRuleQuery.java,AxisExpression axis = (AxisExpression) root.getStepExpression();,if (root != null ) AxisExpression axis = (AxisExpression) root.getStepExpression();
SaxonXPathRuleQuery.java,"FilterExpression newfilter = new FilterExpression(a, filterExpression.getFilter());","if (filterExpression != null ) FilterExpression newfilter = new FilterExpression(a, filterExpression.getFilter());"
SaxonXPathRuleQuery.java,"PathExpression p = new PathExpression(newfilter, path.getRemainingSteps());","if (path != null ) PathExpression p = new PathExpression(newfilter, path.getRemainingSteps());"
SaxonXPathRuleQuery.java,AxisExpression axis = (AxisExpression) path.getStepExpression();,if (path != null ) AxisExpression axis = (AxisExpression) path.getStepExpression();
SaxonXPathRuleQuery.java,PathExpression root = (PathExpression) filterExpression.getBaseExpression();,if (filterExpression != null ) PathExpression root = (PathExpression) filterExpression.getBaseExpression();
SaxonXPathRuleQuery.java,AxisExpression axis = (AxisExpression) root.getStepExpression();,if (root != null ) AxisExpression axis = (AxisExpression) root.getStepExpression();
SaxonXPathRuleQuery.java,"FilterExpression newfilter = new FilterExpression(a, filterExpression.getFilter());","if (filterExpression != null ) FilterExpression newfilter = new FilterExpression(a, filterExpression.getFilter());"
CsTokenizer.java,final int type = currentToken.getType();,if (currentToken != null ) final int type = currentToken.getType();
ASTLiteral.java,String result = sb.toString();,if (sb != null ) String result = sb.toString();
UselessOverridingMethodRule.java,int overriddenModifiers = node.getModifiers();,if (node != null ) int overriddenModifiers = node.getModifiers();
AbstractNamingConventionsRule.java,String name = node.getImage();,if (node != null ) String name = node.getImage();
AbstractNamingConventionsRule.java,String displayName = displayName(propertyDescriptor.name());,if (displayName(propertyDescriptor != null ) String displayName = displayName(propertyDescriptor.name());
MissingOverrideRule.java,"List<Method> methods = getMethods(name, params.getParameterCount());","if (params != null ) List<Method> methods = getMethods(name, params.getParameterCount());"
ConstructorCallsOverridableMethodRule.java,int numOfArguments = args.getArgumentCount();,if (args != null ) int numOfArguments = args.getArgumentCount();
ConstructorCallsOverridableMethodRule.java,count = aa.getArgumentCount();,if (aa != null ) count = aa.getArgumentCount();
CsTokenizer.java,Token token = tokenizer.getNextToken();,if (tokenizer != null ) Token token = tokenizer.getNextToken();
CsTokenizer.java,Token lookAhead = tokenizer.getNextToken();,if (tokenizer != null ) Token lookAhead = tokenizer.getNextToken();
CsTokenizer.java,lookAhead = tokenizer.getNextToken();,if (tokenizer != null ) lookAhead = tokenizer.getNextToken();
CsTokenizer.java,int ic = reader.read();,if (reader != null ) int ic = reader.read();
CsTokenizer.java,ic = reader.read();,if (reader != null ) ic = reader.read();
CsTokenizer.java,ic = reader.read();,if (reader != null ) ic = reader.read();
CsTokenizer.java,ic = reader.read();,if (reader != null ) ic = reader.read();
CsTokenizer.java,ic = reader.read();,if (reader != null ) ic = reader.read();
CsTokenizer.java,ic = reader.read();,if (reader != null ) ic = reader.read();
CsTokenizer.java,ic = reader.read();,if (reader != null ) ic = reader.read();
CsTokenizer.java,int next = reader.read();,if (reader != null ) int next = reader.read();
CsTokenizer.java,ic = reader.read();,if (reader != null ) ic = reader.read();
CsTokenizer.java,ic = reader.read();,if (reader != null ) ic = reader.read();
CsTokenizer.java,ic = reader.read();,if (reader != null ) ic = reader.read();
CsTokenizer.java,ic = reader.read();,if (reader != null ) ic = reader.read();
CsTokenizer.java,ic = reader.read();,if (reader != null ) ic = reader.read();
ApexTreeBuilder.java,token = lexer.nextToken();,if (lexer != null ) token = lexer.nextToken();
ApexTreeBuilder.java,endIndex = lexer.getCharIndex();,if (lexer != null ) endIndex = lexer.getCharIndex();
ApexTreeBuilder.java,Token token = lexer.nextToken();,if (lexer != null ) Token token = lexer.nextToken();
ApexProjectMirrorTest.java,final ApexProjectMemoizer toplevel = ApexMetrics.getFacade().getLanguageSpecificProjectMemoizer();,if (ApexMetrics != null ) final ApexProjectMemoizer toplevel = ApexMetrics.getFacade().getLanguageSpecificProjectMemoizer();
ApexProjectMirrorTest.java,MetricMemoizer<ASTMethod> op = toplevel.getOperationMemoizer(node.getQualifiedName());,if (toplevel != null ) MetricMemoizer<ASTMethod> op = toplevel.getOperationMemoizer(node.getQualifiedName());
AbstractMetricsComputer.java,MetricMemoizer<O> opStats = stats.getOperationMemoizer(op.getQualifiedName());,if (stats != null ) MetricMemoizer<O> opStats = stats.getOperationMemoizer(op.getQualifiedName());
ProjectMemoizerTest.java,final JavaProjectMemoizer toplevel = JavaMetrics.getFacade().getLanguageSpecificProjectMemoizer();,if (JavaMetrics != null ) final JavaProjectMemoizer toplevel = JavaMetrics.getFacade().getLanguageSpecificProjectMemoizer();
ProjectMemoizerTest.java,MetricMemoizer<MethodLikeNode> op = toplevel.getOperationMemoizer(node.getQualifiedName());,if (toplevel != null ) MetricMemoizer<MethodLikeNode> op = toplevel.getOperationMemoizer(node.getQualifiedName());
ProjectMemoizerTest.java,MetricMemoizer<ASTAnyTypeDeclaration> clazz = toplevel.getClassMemoizer(node.getQualifiedName());,if (toplevel != null ) MetricMemoizer<ASTAnyTypeDeclaration> clazz = toplevel.getClassMemoizer(node.getQualifiedName());
TreeExportCli.java,PropertySource bundle = treeRenderer.newPropertyBundle();,if (treeRenderer != null ) PropertySource bundle = treeRenderer.newPropertyBundle();
AbstractNode.java,final int n = node.getNumChildren();,if (node != null ) final int n = node.getNumChildren();
ApexRuleViolation.java,Node parent = node.jjtGetParent();,if (node != null ) Node parent = node.jjtGetParent();
ApexRuleViolation.java,parent = parent.jjtGetParent();,if (parent != null ) parent = parent.jjtGetParent();
AvoidDmlStatementsInLoopsRule.java,Node n = node.jjtGetParent();,if (node != null ) Node n = node.jjtGetParent();
AvoidSoqlInLoopsRule.java,Node n = node.jjtGetParent();,if (node != null ) Node n = node.jjtGetParent();
AvoidSoslInLoopsRule.java,Node n = node.jjtGetParent();,if (node != null ) Node n = node.jjtGetParent();
ApexBadCryptoRule.java,int numberOfChildren = methodCall.jjtGetNumChildren();,if (methodCall != null ) int numberOfChildren = methodCall.jjtGetNumChildren();
ApexCRUDViolationRule.java,int numberOfStatements = blockStatement.jjtGetNumChildren();,if (blockStatement != null ) int numberOfStatements = blockStatement.jjtGetNumChildren();
ApexOpenRedirectRule.java,int index = literal.jjtGetChildIndex();,if (literal != null ) int index = literal.jjtGetChildIndex();
ApexXSSFromEscapeFalseRule.java,int numberOfChildren = methodCall.jjtGetNumChildren();,if (methodCall != null ) int numberOfChildren = methodCall.jjtGetNumChildren();
AbstractNode.java,Node result = this.jjtGetParent();,if (this != null ) Node result = this.jjtGetParent();
AbstractNode.java,result = result.jjtGetParent();,if (result != null ) result = result.jjtGetParent();
AbstractNode.java,parentNode = parentNode.jjtGetParent();,if (parentNode != null ) parentNode = parentNode.jjtGetParent();
AbstractNode.java,parentNode = parentNode.jjtGetParent();,if (parentNode != null ) parentNode = parentNode.jjtGetParent();
AbstractNode.java,parentNode = parentNode.jjtGetParent();,if (parentNode != null ) parentNode = parentNode.jjtGetParent();
AbstractNode.java,final int n = node.jjtGetNumChildren();,if (node != null ) final int n = node.jjtGetNumChildren();
NodeIterator.java,Node parentNode = contextNode.jjtGetParent();,if (contextNode != null ) Node parentNode = contextNode.jjtGetParent();
NodeIterator.java,Node parentNode = contextNode.jjtGetParent();,if (contextNode != null ) Node parentNode = contextNode.jjtGetParent();
SaxonXPathRuleQuery.java,root = root.jjtGetParent();,if (root != null ) root = root.jjtGetParent();
Designer.java,Node parent = node.jjtGetParent();,if (node != null ) Node parent = node.jjtGetParent();
SimpleNodeTreeNodeAdapter.java,children = new ArrayList<>(node.jjtGetNumChildren());,if (ArrayList<>(node != null ) children = new ArrayList<>(node.jjtGetNumChildren());
ASTClassOrInterfaceDeclaration.java,current = current.jjtGetParent();,if (current != null ) current = current.jjtGetParent();
ASTFieldDeclaration.java,ASTClassOrInterfaceDeclaration n = (ASTClassOrInterfaceDeclaration) classOrInterfaceBody.jjtGetParent();,if (classOrInterfaceBody != null ) ASTClassOrInterfaceDeclaration n = (ASTClassOrInterfaceDeclaration) classOrInterfaceBody.jjtGetParent();
ASTVariableDeclaratorId.java,Node n = jjtGetParent().jjtGetParent();,if (jjtGetParent() != null ) Node n = jjtGetParent().jjtGetParent();
StatementAndBraceFinder.java,Node parent = node.jjtGetParent();,if (node != null ) Node parent = node.jjtGetParent();
StatementAndBraceFinder.java,ASTIfStatement st = (ASTIfStatement) node.jjtGetParent();,if (node != null ) ASTIfStatement st = (ASTIfStatement) node.jjtGetParent();
StatementAndBraceFinder.java,ASTForStatement parent = (ASTForStatement) node.jjtGetParent();,if (node != null ) ASTForStatement parent = (ASTForStatement) node.jjtGetParent();
ClassFanOutMetric.java,ASTClassOrInterfaceBodyDeclaration parent = (ASTClassOrInterfaceBodyDeclaration) node.jjtGetParent();,if (node != null ) ASTClassOrInterfaceBodyDeclaration parent = (ASTClassOrInterfaceBodyDeclaration) node.jjtGetParent();
CycloBaseVisitor.java,int childCount = node.jjtGetNumChildren();,if (node != null ) int childCount = node.jjtGetNumChildren();
QualifiedNameResolver.java,Node parent = node.jjtGetParent();,if (node != null ) Node parent = node.jjtGetParent();
QualifiedNameResolver.java,parent = parent.jjtGetParent();,if (parent != null ) parent = parent.jjtGetParent();
AbstractLombokAwareRule.java,Node parent = node.jjtGetParent();,if (node != null ) Node parent = node.jjtGetParent();
JavaRuleViolation.java,Node parent = node.jjtGetParent();,if (node != null ) Node parent = node.jjtGetParent();
JavaRuleViolation.java,parent = parent.jjtGetParent();,if (parent != null ) parent = parent.jjtGetParent();
AvoidReassigningLoopVariablesRule.java,final Node parent = checkNode.jjtGetParent();,if (checkNode != null ) final Node parent = checkNode.jjtGetParent();
AvoidReassigningLoopVariablesRule.java,checkNode = checkNode.jjtGetParent();,if (checkNode != null ) checkNode = checkNode.jjtGetParent();
PreserveStackTraceRule.java,Node parent = args.jjtGetParent().jjtGetParent();,if (args != null ) Node parent = args.jjtGetParent().jjtGetParent();
PreserveStackTraceRule.java,currentNode = currentNode.jjtGetParent();,if (currentNode != null ) currentNode = currentNode.jjtGetParent();
UnusedFormalParameterRule.java,int childIndex = node.jjtGetChildIndex();,if (node != null ) int childIndex = node.jjtGetChildIndex();
UnusedImportsRule.java,Node primaryPrefix = node.jjtGetParent();,if (node != null ) Node primaryPrefix = node.jjtGetParent();
UnusedImportsRule.java,Node expression = primaryPrefix.jjtGetParent();,if (primaryPrefix != null ) Node expression = primaryPrefix.jjtGetParent();
UseCollectionIsEmptyRule.java,Node expr = node.jjtGetParent().jjtGetParent();,if (node != null ) Node expr = node.jjtGetParent().jjtGetParent();
ConfusingTernaryRule.java,int n = node.jjtGetNumChildren();,if (node != null ) int n = node.jjtGetNumChildren();
FieldDeclarationsShouldBeAtStartOfClassRule.java,Node parent = node.jjtGetParent().jjtGetParent();,if (node != null ) Node parent = node.jjtGetParent().jjtGetParent();
IdenticalCatchBranchesRule.java,Node prefixOrSuffix = name.jjtGetParent();,if (name != null ) Node prefixOrSuffix = name.jjtGetParent();
PrematureDeclarationRule.java,Node blockOrSwitch = node.jjtGetParent().jjtGetParent();,if (node != null ) Node blockOrSwitch = node.jjtGetParent().jjtGetParent();
PrematureDeclarationRule.java,int count = blockOrSwitch.jjtGetNumChildren();,if (blockOrSwitch != null ) int count = blockOrSwitch.jjtGetNumChildren();
SignatureDeclareThrowsExceptionRule.java,Node parent = exception.jjtGetParent().jjtGetParent();,if (exception != null ) Node parent = exception.jjtGetParent().jjtGetParent();
SimplifyBooleanReturnsRule.java,Node blockStatement = ifNode.jjtGetParent().jjtGetParent();,if (ifNode != null ) Node blockStatement = ifNode.jjtGetParent().jjtGetParent();
SimplifyBooleanReturnsRule.java,Node block = blockStatement.jjtGetParent();,if (blockStatement != null ) Node block = blockStatement.jjtGetParent();
SingularFieldRule.java,Node potentialStatement = primaryExpressionParent.jjtGetParent();,if (primaryExpressionParent != null ) Node potentialStatement = primaryExpressionParent.jjtGetParent();
StdCyclomaticComplexityRule.java,int childCount = node.jjtGetNumChildren();,if (node != null ) int childCount = node.jjtGetNumChildren();
UseUtilityClassRule.java,ASTClassOrInterfaceDeclaration parent = (ASTClassOrInterfaceDeclaration) decl.jjtGetParent();,if (decl != null ) ASTClassOrInterfaceDeclaration parent = (ASTClassOrInterfaceDeclaration) decl.jjtGetParent();
UseUtilityClassRule.java,int i = decl.jjtGetNumChildren();,if (decl != null ) int i = decl.jjtGetNumChildren();
UselessOverridingMethodRule.java,ASTClassOrInterfaceBodyDeclaration parent = (ASTClassOrInterfaceBodyDeclaration) node.jjtGetParent();,if (node != null ) ASTClassOrInterfaceBodyDeclaration parent = (ASTClassOrInterfaceBodyDeclaration) node.jjtGetParent();
AssignmentInOperandRule.java,Node parent = node.jjtGetParent();,if (node != null ) Node parent = node.jjtGetParent();
AvoidFieldNameMatchingMethodNameRule.java,int n = node.jjtGetNumChildren();,if (node != null ) int n = node.jjtGetNumChildren();
ConstructorCallsOverridableMethodRule.java,int i = node.jjtGetNumChildren();,if (node != null ) int i = node.jjtGetNumChildren();
UnnecessaryCaseChangeRule.java,int n = exp.jjtGetNumChildren();,if (exp != null ) int n = exp.jjtGetNumChildren();
UselessOperationOnImmutableRule.java,Node primaryExpression = sn.jjtGetParent().jjtGetParent();,if (sn != null ) Node primaryExpression = sn.jjtGetParent().jjtGetParent();
NonThreadSafeSingletonRule.java,ASTStatementExpression expr = (ASTStatementExpression) oper.jjtGetParent();,if (oper != null ) ASTStatementExpression expr = (ASTStatementExpression) oper.jjtGetParent();
AvoidInstantiatingObjectsInLoopsRule.java,Node n = node.jjtGetParent();,if (node != null ) Node n = node.jjtGetParent();
BooleanInstantiationRule.java,ASTPrimaryExpression parent = (ASTPrimaryExpression) node.jjtGetParent();,if (node != null ) ASTPrimaryExpression parent = (ASTPrimaryExpression) node.jjtGetParent();
ConsecutiveAppendsShouldReuseRule.java,Node parent = node.jjtGetParent();,if (node != null ) Node parent = node.jjtGetParent();
ConsecutiveLiteralAppendsRule.java,Node parent = node.jjtGetParent();,if (node != null ) Node parent = node.jjtGetParent();
ConsecutiveLiteralAppendsRule.java,Node parentNode = node.jjtGetParent();,if (node != null ) Node parentNode = node.jjtGetParent();
ConsecutiveLiteralAppendsRule.java,parentNode = parentNode.jjtGetParent();,if (parentNode != null ) parentNode = parentNode.jjtGetParent();
ConsecutiveLiteralAppendsRule.java,int allChildren = parentNode.jjtGetNumChildren();,if (parentNode != null ) int allChildren = parentNode.jjtGetNumChildren();
InsufficientStringBufferDeclarationRule.java,Node statement = block.jjtGetParent();,if (block != null ) Node statement = block.jjtGetParent();
InsufficientStringBufferDeclarationRule.java,Node parentNode = node.jjtGetParent();,if (node != null ) Node parentNode = node.jjtGetParent();
InsufficientStringBufferDeclarationRule.java,parentNode = parentNode.jjtGetParent();,if (parentNode != null ) parentNode = parentNode.jjtGetParent();
InsufficientStringBufferDeclarationRule.java,int allChildren = parentNode.jjtGetNumChildren();,if (parentNode != null ) int allChildren = parentNode.jjtGetNumChildren();
UnnecessaryWrapperObjectCreationRule.java,ASTPrimaryExpression parent = (ASTPrimaryExpression) node.jjtGetParent();,if (node != null ) ASTPrimaryExpression parent = (ASTPrimaryExpression) node.jjtGetParent();
UseStringBufferForStringAppendsRule.java,Node parent = node.jjtGetParent().jjtGetParent();,if (node != null ) Node parent = node.jjtGetParent().jjtGetParent();
UseStringBufferLengthRule.java,Node parent = decl.jjtGetParent().jjtGetParent();,if (decl != null ) Node parent = decl.jjtGetParent().jjtGetParent();
UselessStringValueOfRule.java,Node parent = node.jjtGetParent();,if (node != null ) Node parent = node.jjtGetParent();
UselessStringValueOfRule.java,Node gp = parent.jjtGetParent();,if (parent != null ) Node gp = parent.jjtGetParent();
ClassScope.java,nextSibling = getNextSibling(occurrence.getLocation().jjtGetParent());,if (getNextSibling(occurrence != null ) nextSibling = getNextSibling(occurrence.getLocation().jjtGetParent());
ClassScope.java,List<TypedNameDeclaration> argumentTypes = new ArrayList<>(arguments.jjtGetNumChildren());,if (ArrayList<>(arguments != null ) List<TypedNameDeclaration> argumentTypes = new ArrayList<>(arguments.jjtGetNumChildren());
JavaNameOccurrence.java,primaryExpression = location.jjtGetParent().jjtGetParent();,if (location != null ) primaryExpression = location.jjtGetParent().jjtGetParent();
JavaNameOccurrence.java,Node node = gp.jjtGetParent();,if (gp != null ) Node node = gp.jjtGetParent();
JavaNameOccurrence.java,Node node = location.jjtGetParent();,if (location != null ) Node node = location.jjtGetParent();
ClassTypeResolver.java,Node prefix = node.jjtGetParent();,if (node != null ) Node prefix = node.jjtGetParent();
ClassTypeResolver.java,node = node.jjtGetParent();,if (node != null ) node = node.jjtGetParent();
ClassTypeResolver.java,TypeNode parent = (TypeNode) node.jjtGetParent();,if (node != null ) TypeNode parent = (TypeNode) node.jjtGetParent();
ClassTypeResolver.java,String imageToCompareTo = typeParameters.jjtGetChild(index).getImage();,if (typeParameters != null ) String imageToCompareTo = typeParameters.jjtGetChild(index).getImage();
NoInlineStyleInformationRule.java,ASTElement parent = (ASTElement) attributeNode.jjtGetParent();,if (attributeNode != null ) ASTElement parent = (ASTElement) attributeNode.jjtGetParent();
ASTName.java,nameComponents[i] = jjtGetChild(i).getImage();,if (jjtGetChild(i) != null ) nameComponents[i] = jjtGetChild(i).getImage();
ASTVariableOrConstantDeclaratorId.java,Node n = jjtGetParent().jjtGetParent();,if (jjtGetParent() != null ) Node n = jjtGetParent().jjtGetParent();
StatementAndBraceFinder.java,ASTForStatement st = (ASTForStatement) node.jjtGetParent();,if (node != null ) ASTForStatement st = (ASTForStatement) node.jjtGetParent();
StatementAndBraceFinder.java,ASTLoopStatement st = (ASTLoopStatement) node.jjtGetParent();,if (node != null ) ASTLoopStatement st = (ASTLoopStatement) node.jjtGetParent();
StatementAndBraceFinder.java,ASTWhileStatement statement = (ASTWhileStatement) node.jjtGetParent();,if (node != null ) ASTWhileStatement statement = (ASTWhileStatement) node.jjtGetParent();
StatementAndBraceFinder.java,ASTForStatement statement = (ASTForStatement) node.jjtGetParent();,if (node != null ) ASTForStatement statement = (ASTForStatement) node.jjtGetParent();
StatementAndBraceFinder.java,ASTForStatement parent = (ASTForStatement) node.jjtGetParent();,if (node != null ) ASTForStatement parent = (ASTForStatement) node.jjtGetParent();
CodeFormatRule.java,Node parent = node.jjtGetParent();,if (node != null ) Node parent = node.jjtGetParent();
CodeFormatRule.java,Node parent = node.jjtGetParent();,if (node != null ) Node parent = node.jjtGetParent();
CodeFormatRule.java,int thisIndex = node.jjtGetChildIndex();,if (node != null ) int thisIndex = node.jjtGetChildIndex();
NPathComplexityRule.java,children += element.jjtGetNumChildren();,if (element != null ) children += element.jjtGetNumChildren();
NPathComplexityRule.java,children += element.jjtGetNumChildren();,if (element != null ) children += element.jjtGetNumChildren();
PLSQLNameOccurrence.java,primaryExpression = location.jjtGetParent().jjtGetParent();,if (location != null ) primaryExpression = location.jjtGetParent().jjtGetParent();
AbstractXmlRule.java,final int numChildren = node.jjtGetNumChildren();,if (node != null ) final int numChildren = node.jjtGetNumChildren();
AbstractNcssCountRule.java,numNodes += treeSize.intValue();,if (treeSize != null ) numNodes += treeSize.intValue();
AbstractNcssCountRule.java,lineCount += nodeCount.intValue();,if (nodeCount != null ) lineCount += nodeCount.intValue();
AbstractJspNodesTst.java,Node rootNode = parser.CompilationUnit();,if (parser != null ) Node rootNode = parser.CompilationUnit();
JspDocStyleTest.java,ASTElement element = elementNodes.iterator().next();,if (elementNodes != null ) ASTElement element = elementNodes.iterator().next();
JspDocStyleTest.java,ASTAttribute attribute = attributeNodes.iterator().next();,if (attributeNodes != null ) ASTAttribute attribute = attributeNodes.iterator().next();
JspDocStyleTest.java,ASTCData cdata = cdataNodes.iterator().next();,if (cdataNodes != null ) ASTCData cdata = cdataNodes.iterator().next();
JspDocStyleTest.java,Iterator<ASTElement> iterator = elmts.iterator();,if (elmts != null ) Iterator<ASTElement> iterator = elmts.iterator();
JspDocStyleTest.java,ASTElement script = iterator.next();,if (iterator != null ) ASTElement script = iterator.next();
JspDocStyleTest.java,script = iterator.next();,if (iterator != null ) script = iterator.next();
AbstractPLSQLParserTst.java,LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();,if (languageVersion != null ) LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();
AbstractPLSQLParserTst.java,LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();,if (languageVersion != null ) LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();
AbstractPLSQLParserTst.java,LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();,if (languageVersion != null ) LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();
ScalaRuleTest.java,Parser parser = scalaVersionHandler.getParser(scalaVersionHandler.getDefaultParserOptions());,if (scalaVersionHandler != null ) Parser parser = scalaVersionHandler.getParser(scalaVersionHandler.getDefaultParserOptions());
VfParserTest.java,Parser parser = vfLang.getParser(vfLang.getDefaultParserOptions());,if (vfLang != null ) Parser parser = vfLang.getParser(vfLang.getDefaultParserOptions());
AbstractVfNodesTest.java,Node rootNode = parser.CompilationUnit();,if (parser != null ) Node rootNode = parser.CompilationUnit();
VfDocStyleTest.java,Iterator<ASTElement> iterator = elmts.iterator();,if (elmts != null ) Iterator<ASTElement> iterator = elmts.iterator();
XmlParserTest.java,Parser parser = xmlVersionHandler.getParser(xmlVersionHandler.getDefaultParserOptions());,if (xmlVersionHandler != null ) Parser parser = xmlVersionHandler.getParser(xmlVersionHandler.getDefaultParserOptions());
XmlParserTest.java,Parser parser = xmlVersionHandler.getParser(xmlVersionHandler.getDefaultParserOptions());,if (xmlVersionHandler != null ) Parser parser = xmlVersionHandler.getParser(xmlVersionHandler.getDefaultParserOptions());
XmlParserTest.java,Parser parser = xmlVersionHandler.getParser(xmlVersionHandler.getDefaultParserOptions());,if (xmlVersionHandler != null ) Parser parser = xmlVersionHandler.getParser(xmlVersionHandler.getDefaultParserOptions());
XmlParserTest.java,XmlParserOptions options = (XmlParserOptions) xmlVersionHandler.getDefaultParserOptions();,if (xmlVersionHandler != null ) XmlParserOptions options = (XmlParserOptions) xmlVersionHandler.getDefaultParserOptions();
IdenticalCatchBranchesRule.java,List<ASTCatchStatement> catchStatements = node.getCatchStatements();,if (node != null ) List<ASTCatchStatement> catchStatements = node.getCatchStatements();
VfDocStyleTest.java,Iterator<ASTElement> iterator = scripts.iterator();,if (scripts != null ) Iterator<ASTElement> iterator = scripts.iterator();
ParserTstUtil.java,LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();,if (languageVersion != null ) LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();
ASTBooleanLiteralTest.java,ASTBooleanLiteral b = ops.iterator().next();,if (ops != null ) ASTBooleanLiteral b = ops.iterator().next();
ASTBooleanLiteralTest.java,ASTBooleanLiteral b = ops.iterator().next();,if (ops != null ) ASTBooleanLiteral b = ops.iterator().next();
ASTFormalParameterTest.java,ASTFormalParameter b = iter.next();,if (iter != null ) ASTFormalParameter b = iter.next();
ASTImportDeclarationTest.java,ASTImportDeclaration i = ops.iterator().next();,if (ops != null ) ASTImportDeclaration i = ops.iterator().next();
ASTPackageDeclarationTest.java,ASTPackageDeclaration packageNode = nodes.iterator().next();,if (nodes != null ) ASTPackageDeclaration packageNode = nodes.iterator().next();
SimpleNodeTest.java,Iterator<ASTName> i = name.iterator();,if (name != null ) Iterator<ASTName> i = name.iterator();
SimpleNodeTest.java,Iterator<ASTName> i = name.iterator();,if (name != null ) Iterator<ASTName> i = name.iterator();
JavaMultifileVisitorTest.java,LanguageVersionHandler handler = ParserTstUtil.getDefaultLanguageVersionHandler();,if (ParserTstUtil != null ) LanguageVersionHandler handler = ParserTstUtil.getDefaultLanguageVersionHandler();
GlobalScopeTest.java,Scope scope = decl.getScope();,if (decl != null ) Scope scope = decl.getScope();
STBBaseTst.java,final LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();,if (languageVersion != null ) final LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();
AbstractJspNodesTst.java,Node rootNode = parser.CompilationUnit();,if (parser != null ) Node rootNode = parser.CompilationUnit();
JspDocStyleTest.java,ASTElement element = elementNodes.iterator().next();,if (elementNodes != null ) ASTElement element = elementNodes.iterator().next();
JspDocStyleTest.java,ASTAttribute attribute = attributeNodes.iterator().next();,if (attributeNodes != null ) ASTAttribute attribute = attributeNodes.iterator().next();
JspDocStyleTest.java,ASTCData cdata = cdataNodes.iterator().next();,if (cdataNodes != null ) ASTCData cdata = cdataNodes.iterator().next();
JspDocStyleTest.java,Iterator<ASTElement> iterator = elmts.iterator();,if (elmts != null ) Iterator<ASTElement> iterator = elmts.iterator();
JspDocStyleTest.java,ASTElement script = iterator.next();,if (iterator != null ) ASTElement script = iterator.next();
JspDocStyleTest.java,script = iterator.next();,if (iterator != null ) script = iterator.next();
ModelicaLoader.java,final Parser parser = modelicaLang.getParser(modelicaLang.getDefaultParserOptions());,if (modelicaLang != null ) final Parser parser = modelicaLang.getParser(modelicaLang.getDefaultParserOptions());
AbstractPLSQLParserTst.java,LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();,if (languageVersion != null ) LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();
AbstractPLSQLParserTst.java,LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();,if (languageVersion != null ) LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();
AbstractPLSQLParserTst.java,LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();,if (languageVersion != null ) LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();
ScalaRuleTest.java,Parser parser = scalaVersionHandler.getParser(scalaVersionHandler.getDefaultParserOptions());,if (scalaVersionHandler != null ) Parser parser = scalaVersionHandler.getParser(scalaVersionHandler.getDefaultParserOptions());
VfParserTest.java,Parser parser = vfLang.getParser(vfLang.getDefaultParserOptions());,if (vfLang != null ) Parser parser = vfLang.getParser(vfLang.getDefaultParserOptions());
AbstractVfNodesTest.java,Node rootNode = parser.CompilationUnit();,if (parser != null ) Node rootNode = parser.CompilationUnit();
VfDocStyleTest.java,Iterator<ASTElement> iterator = elmts.iterator();,if (elmts != null ) Iterator<ASTElement> iterator = elmts.iterator();
XmlParserTest.java,Parser parser = xmlVersionHandler.getParser(xmlVersionHandler.getDefaultParserOptions());,if (xmlVersionHandler != null ) Parser parser = xmlVersionHandler.getParser(xmlVersionHandler.getDefaultParserOptions());
XmlParserTest.java,Parser parser = xmlVersionHandler.getParser(xmlVersionHandler.getDefaultParserOptions());,if (xmlVersionHandler != null ) Parser parser = xmlVersionHandler.getParser(xmlVersionHandler.getDefaultParserOptions());
XmlParserTest.java,Parser parser = xmlVersionHandler.getParser(xmlVersionHandler.getDefaultParserOptions());,if (xmlVersionHandler != null ) Parser parser = xmlVersionHandler.getParser(xmlVersionHandler.getDefaultParserOptions());
XmlParserTest.java,XmlParserOptions options = (XmlParserOptions) xmlVersionHandler.getDefaultParserOptions();,if (xmlVersionHandler != null ) XmlParserOptions options = (XmlParserOptions) xmlVersionHandler.getDefaultParserOptions();
ClassTypeResolver.java,primaryNodeType = currentChild.getTypeDefinition();,if (currentChild != null ) primaryNodeType = currentChild.getTypeDefinition();
UnusedImportsRule.java,Iterator<ImportWrapper> it = imports.iterator();,if (imports != null ) Iterator<ImportWrapper> it = imports.iterator();
UnusedImportsRule.java,ImportWrapper i = it.next();,if (it != null ) ImportWrapper i = it.next();
PMDTaskImpl.java,final String inputPaths = ds.getBasedir().getPath();,if (ds != null ) final String inputPaths = ds.getBasedir().getPath();
ApexJorjeLogging.java,Logger log = Logger.getLogger(BaseApexLexer.class.getSimpleName());,if (Logger != null ) Logger log = Logger.getLogger(BaseApexLexer.class.getSimpleName());
PMD.java,LanguageVersionDiscoverer discoverer = configuration.getLanguageVersionDiscoverer();,if (configuration != null ) LanguageVersionDiscoverer discoverer = configuration.getLanguageVersionDiscoverer();
PMD.java,Language language = rule.getLanguage();,if (rule != null ) Language language = rule.getLanguage();
AbstractPMDProcessor.java,"RuleSets rs = createRuleSets(ruleSetFactory, ctx.getReport());","if (ctx != null ) RuleSets rs = createRuleSets(ruleSetFactory, ctx.getReport());"
ClassScope.java,Scope s = name.getScope();,if (name != null ) Scope s = name.getScope();
ClassScope.java,"final JavaNameOccurrence nameOccurrence = new JavaNameOccurrence(name, name.getImage());","if (name != null ) final JavaNameOccurrence nameOccurrence = new JavaNameOccurrence(name, name.getImage());"
PMDExecutor.java,Process process = pb.start();,if (pb != null ) Process process = pb.start();
PMDExecutor.java,int result = process.waitFor();,if (process != null ) int result = process.waitFor();
PMDExecutor.java,Process process = pb.start();,if (pb != null ) Process process = pb.start();
PMDExecutor.java,int result = process.waitFor();,if (process != null ) int result = process.waitFor();
ArrayIsStoredDirectlyRule.java,ASTFormalParameter[] arrs = getArrays(node.getParameters());,if (getArrays(node != null ) ASTFormalParameter[] arrs = getArrays(node.getParameters());
LinguisticNamingRule.java,String nameOfMethod = node.getMethodName();,if (node != null ) String nameOfMethod = node.getMethodName();
UselessOverridingMethodRule.java,ASTBlock block = node.getBlock();,if (node != null ) ASTBlock block = node.getBlock();
ConstructorCallsOverridableMethodRule.java,String methName = h.getASTMethodDeclarator().getImage();,if (h != null ) String methName = h.getASTMethodDeclarator().getImage();
ConstructorCallsOverridableMethodRule.java,int count = h.getASTMethodDeclarator().getParameterCount();,if (h != null ) int count = h.getASTMethodDeclarator().getParameterCount();
ConstructorCallsOverridableMethodRule.java,List<String> parameterTypes = getMethodDeclaratorParameterTypes(h.getASTMethodDeclarator());,if (getMethodDeclaratorParameterTypes(h != null ) List<String> parameterTypes = getMethodDeclaratorParameterTypes(h.getASTMethodDeclarator());
ConstructorCallsOverridableMethodRule.java,int paramCount = ch.getASTConstructorDeclaration().getParameterCount();,if (ch != null ) int paramCount = ch.getASTConstructorDeclaration().getParameterCount();
ConstructorCallsOverridableMethodRule.java,String matchName = h.getASTMethodDeclarator().getImage();,if (h != null ) String matchName = h.getASTMethodDeclarator().getImage();
ConstructorCallsOverridableMethodRule.java,int matchParamCount = h.getASTMethodDeclarator().getParameterCount();,if (h != null ) int matchParamCount = h.getASTMethodDeclarator().getParameterCount();
ConstructorCallsOverridableMethodRule.java,List<String> parameterTypes = getMethodDeclaratorParameterTypes(h.getASTMethodDeclarator());,if (getMethodDeclaratorParameterTypes(h != null ) List<String> parameterTypes = getMethodDeclaratorParameterTypes(h.getASTMethodDeclarator());
ConstructorCallsOverridableMethodRule.java,AccessNode parent = (AccessNode) node.jjtGetParent();,if (node != null ) AccessNode parent = (AccessNode) node.jjtGetParent();
JavaTypeDefinitionSimple.java,enclosingClass = forClass(clazz.getEnclosingClass());,if (forClass(clazz != null ) enclosingClass = forClass(clazz.getEnclosingClass());
ScalaParserTest.java,Parser parser = scalaVersionHandler.getParser(scalaVersionHandler.getDefaultParserOptions());,if (scalaVersionHandler != null ) Parser parser = scalaVersionHandler.getParser(scalaVersionHandler.getDefaultParserOptions());
ScalaRuleTest.java,Iterator<RuleViolation> rvIter = report.iterator();,if (report != null ) Iterator<RuleViolation> rvIter = report.iterator();
AbstractScalaNode.java,endColumn = pos.endColumn();,if (pos != null ) endColumn = pos.endColumn();
ScalaParserTest.java,Parser parser = scalaVersionHandler.getParser(scalaVersionHandler.getDefaultParserOptions());,if (scalaVersionHandler != null ) Parser parser = scalaVersionHandler.getParser(scalaVersionHandler.getDefaultParserOptions());
AbstractScalaNode.java,Position pos = node.pos();,if (node != null ) Position pos = node.pos();
XSLTRenderer.java,Writer writer = super.getWriter();,if (super != null ) Writer writer = super.getWriter();
XSLTRenderer.java,Document doc = this.getDocument(buffer.toString());,if (this != null ) Document doc = this.getDocument(buffer.toString());
Designer.java,StringReader reader = new StringReader(codeEditorPane.getText());,if (StringReader(codeEditorPane != null ) StringReader reader = new StringReader(codeEditorPane.getText());
CPPTokenizer.java,StringBuilder filtered = new StringBuilder(test.length());,if (StringBuilder(test != null ) StringBuilder filtered = new StringBuilder(test.length());
AbstractRuleSetFactoryTest.java,InputStream modifiedStream = new ByteArrayInputStream(file.getBytes());,if (ByteArrayInputStream(file != null ) InputStream modifiedStream = new ByteArrayInputStream(file.getBytes());
AttributeNode.java,value = SaxonXPathRuleQuery.getAtomicRepresentation(attribute.getValue());,if (SaxonXPathRuleQuery != null ) value = SaxonXPathRuleQuery.getAtomicRepresentation(attribute.getValue());
DumpFacade.java,String image = node.getImage();,if (node != null ) String image = node.getImage();
DumpFacade.java,Iterator<Attribute> attributeIter = node.getXPathAttributesIterator();,if (node != null ) Iterator<Attribute> attributeIter = node.getXPathAttributesIterator();
DumpFacade.java,Attribute attr = attributeIter.next();,if (attributeIter != null ) Attribute attr = attributeIter.next();
AbstractRenderer.java,final Path prefPath = Paths.get(prefix).toAbsolutePath();,if (Paths != null ) final Path prefPath = Paths.get(prefix).toAbsolutePath();
AbstractRenderer.java,final String prefPathString = prefPath.toString();,if (prefPath != null ) final String prefPathString = prefPath.toString();
FileDataSource.java,final Path prefPath = Paths.get(prefix).toAbsolutePath();,if (Paths != null ) final Path prefPath = Paths.get(prefix).toAbsolutePath();
FileDataSource.java,final String prefPathString = prefPath.toString();,if (prefPath != null ) final String prefPathString = prefPath.toString();
FileDataSource.java,final String absoluteFilePath = file.getAbsolutePath();,if (file != null ) final String absoluteFilePath = file.getAbsolutePath();
ScalaTokenizer.java,ScalaTokenFilter filter = new ScalaTokenFilter(tokens.iterator());,if (ScalaTokenFilter(tokens != null ) ScalaTokenFilter filter = new ScalaTokenFilter(tokens.iterator());
ScalaWrapperNode.java,Position pos = node.pos();,if (node != null ) Position pos = node.pos();
ScalaTokenizer.java,this.tokenListIter = tokenList.iterator();,if (tokenList != null ) this.tokenListIter = tokenList.iterator();
ScalaTokenizer.java,token = tokenListIter.next();,if (tokenListIter != null ) token = tokenListIter.next();
ParametricRuleViolation.java,filename = ctx.getSourceCodeFilename();,if (ctx != null ) filename = ctx.getSourceCodeFilename();
TextColorRenderer.java,lastFile = rv.getFilename();,if (rv != null ) lastFile = rv.getFilename();
TextColorRenderer.java,lastFile = error.getFile();,if (error != null ) lastFile = error.getFile();
VBHTMLRenderer.java,filename = rv.getFilename();,if (rv != null ) filename = rv.getFilename();
XMLRenderer.java,filename = rv.getFilename();,if (rv != null ) filename = rv.getFilename();
ASTBreakStatement.java,String result = super.getImage();,if (super != null ) String result = super.getImage();
ASTBreakStatement.java,result = getFirstDescendantOfType(ASTName.class).getImage();,if (getFirstDescendantOfType(ASTName != null ) result = getFirstDescendantOfType(ASTName.class).getImage();
ClassTypeResolver.java,type = expression.getTypeDefinition();,if (expression != null ) type = expression.getTypeDefinition();
ClassTypeResolver.java,type = expression.getTypeDefinition();,if (expression != null ) type = expression.getTypeDefinition();
ScalaWrapperNode.java,endLine = pos.endLine();,if (pos != null ) endLine = pos.endLine();
ScalaWrapperNode.java,beginColumn = pos.startColumn();,if (pos != null ) beginColumn = pos.startColumn();
ScalaTokenizer.java,String filename = source.getFileName();,if (source != null ) String filename = source.getFileName();
UnnecessaryFullyQualifiedNameRule.java,String name = node.getImage();,if (node != null ) String name = node.getImage();
UnnecessaryFullyQualifiedNameRule.java,String name = node.getImage();,if (node != null ) String name = node.getImage();
UnnecessaryFullyQualifiedNameRule.java,String name = node.getImage();,if (node != null ) String name = node.getImage();
DebugsShouldSpecifyLoggingLevelRule.java,String methodName = node.getFullMethodName();,if (node != null ) String methodName = node.getFullMethodName();
DebugsShouldSpecifyLoggingLevelRule.java,String methodName = node.getFullMethodName();,if (node != null ) String methodName = node.getFullMethodName();
CloseResourceRule.java,ASTType type = var.getTypeNode();,if (var != null ) ASTType type = var.getTypeNode();
ArrayInitializationVerbosenessRule.java,Matcher matcher = verbosePattern.matcher(node.getImage());,if (verbosePattern != null ) Matcher matcher = verbosePattern.matcher(node.getImage());
ApexTreeBuilder.java,currentToken = token.getText();,if (token != null ) currentToken = token.getText();
ApexTreeBuilder.java,currentTargetStart = lexer.getCharIndex();,if (lexer != null ) currentTargetStart = lexer.getCharIndex();
MethodNamingConventionsRule.java,String methodName = node.getImage();,if (node != null ) String methodName = node.getImage();
ApexTreeBuilder.java,apexDocTokenLocations = buildApexDocTokenLocations(sourceCode).listIterator();,if (buildApexDocTokenLocations(sourceCode) != null ) apexDocTokenLocations = buildApexDocTokenLocations(sourceCode).listIterator();
ApexTreeBuilder.java,final TokenLocation location = apexDocTokenLocations.next();,if (apexDocTokenLocations != null ) final TokenLocation location = apexDocTokenLocations.next();
AssignmentToNonFinalStaticRule.java,final Node location = initializedInConstructor(entry.getValue());,if (initializedInConstructor(entry != null ) final Node location = initializedInConstructor(entry.getValue());
UnnecessaryLocalBeforeReturnRule.java,final ScopedNode location = occ.getLocation();,if (occ != null ) final ScopedNode location = occ.getLocation();
JavaTypeDefinitionSimple.java,this.genericArgs = Collections.emptyList();,if (Collections != null ) this.genericArgs = Collections.emptyList();
Helper.java,FieldDeclaration n = variable.getNode();,if (variable != null ) FieldDeclaration n = variable.getNode();
Helper.java,name = nameField.getValue();,if (nameField != null ) name = nameField.getValue();
Helper.java,NewKeyValueObjectExpression n = variable.getNode();,if (variable != null ) NewKeyValueObjectExpression n = variable.getNode();
CycloMetric.java,BooleanOp op = sub.getNode().getOp();,if (sub != null ) BooleanOp op = sub.getNode().getOp();
ApexSOQLInjectionRule.java,Object o = literal.getNode().getLiteral();,if (literal != null ) Object o = literal.getNode().getLiteral();
ApexSOQLInjectionRule.java,VariableDeclaration o = (VariableDeclaration) node.getNode();,if (node != null ) VariableDeclaration o = (VariableDeclaration) node.getNode();
ApexSOQLInjectionRule.java,Object o = literal.getNode().getLiteral();,if (literal != null ) Object o = literal.getNode().getLiteral();
ApexSuggestUsingNamedCredRule.java,Object o = literal.getNode().getLiteral();,if (literal != null ) Object o = literal.getNode().getLiteral();
ApexXSSFromEscapeFalseRule.java,Object o = parameter.getNode().getLiteral();,if (parameter != null ) Object o = parameter.getNode().getLiteral();
ApexDocRule.java,boolean isPublic = modifier.isPublic();,if (modifier != null ) boolean isPublic = modifier.isPublic();
ApexDocRule.java,ModifierGroup modifierGroup = modifier.getNode().getModifiers();,if (modifier != null ) ModifierGroup modifierGroup = modifier.getNode().getModifiers();
AvoidHardcodingIdRule.java,Object o = node.getNode().getLiteral();,if (node != null ) Object o = node.getNode().getLiteral();
AvoidNonExistentAnnotationsRule.java,final UserClass userClass = node.getNode();,if (node != null ) final UserClass userClass = node.getNode();
AvoidNonExistentAnnotationsRule.java,final UserInterface userInterface = node.getNode();,if (node != null ) final UserInterface userInterface = node.getNode();
AvoidNonExistentAnnotationsRule.java,final UserEnum userEnum = node.getNode();,if (node != null ) final UserEnum userEnum = node.getNode();
AvoidNonExistentAnnotationsRule.java,final Method method = node.getNode();,if (node != null ) final Method method = node.getNode();
AvoidNonExistentAnnotationsRule.java,final Property property = node.getNode();,if (node != null ) final Property property = node.getNode();
AvoidNonExistentAnnotationsRule.java,final Field field = node.getNode();,if (node != null ) final Field field = node.getNode();
ApexInsecureEndpointRule.java,Object o = literalNode.getNode().getLiteral();,if (literalNode != null ) Object o = literalNode.getNode().getLiteral();
ApexInsecureEndpointRule.java,Object o = literalNode.getNode().getLiteral();,if (literalNode != null ) Object o = literalNode.getNode().getLiteral();
RuleDocGenerator.java,defaultValue = multiPropertyDescriptor.asDelimitedString(multiPropertyDescriptor.defaultValue());,if (multiPropertyDescriptor != null ) defaultValue = multiPropertyDescriptor.asDelimitedString(multiPropertyDescriptor.defaultValue());
RuleDocGenerator.java,defaultValue = String.valueOf(propertyDescriptor.defaultValue());,if (String != null ) defaultValue = String.valueOf(propertyDescriptor.defaultValue());
RuleDocGenerator.java,defaultValue = multiPropertyDescriptor.asDelimitedString(multiPropertyDescriptor.defaultValue());,if (multiPropertyDescriptor != null ) defaultValue = multiPropertyDescriptor.asDelimitedString(multiPropertyDescriptor.defaultValue());
RuleDocGenerator.java,defaultValue = String.valueOf(propertyDescriptor.defaultValue());,if (String != null ) defaultValue = String.valueOf(propertyDescriptor.defaultValue());
SignatureDeclareThrowsRuntimeExceptionRule.java,List<ASTName> exceptionList = Collections.emptyList();,if (Collections != null ) List<ASTName> exceptionList = Collections.emptyList();
Designer.java,initStartTimeMillis = System.currentTimeMillis();,if (System != null ) initStartTimeMillis = System.currentTimeMillis();
Designer.java,List<String> raw = params.getRaw();,if (params != null ) List<String> raw = params.getRaw();
Designer.java,Parent root = loader.load();,if (loader != null ) Parent root = loader.load();
Designer.java,ObservableList<Image> icons = primaryStage.getIcons();,if (primaryStage != null ) ObservableList<Image> icons = primaryStage.getIcons();
MainDesignerController.java,EventLogController wizard = eventLogController.getValue();,if (eventLogController != null ) EventLogController wizard = eventLogController.getValue();
MainDesignerController.java,Optional<Node> root = sourceEditorController.refreshAST();,if (sourceEditorController != null ) Optional<Node> root = sourceEditorController.refreshAST();
MainDesignerController.java,LanguageVersion guess = DesignerUtil.getLanguageVersionFromExtension(file.getName());,if (DesignerUtil != null ) LanguageVersion guess = DesignerUtil.getLanguageVersionFromExtension(file.getName());
NodeInfoPanelController.java,TreeItem<Object> previousSelection = scopeHierarchyTreeView.getSelectionModel().getSelectedItem();,if (scopeHierarchyTreeView != null ) TreeItem<Object> previousSelection = scopeHierarchyTreeView.getSelectionModel().getSelectedItem();
NodeInfoPanelController.java,ObservableList<String> result = FXCollections.observableArrayList();,if (FXCollections != null ) ObservableList<String> result = FXCollections.observableArrayList();
NodeInfoPanelController.java,Iterator<Attribute> attributeAxisIterator = node.getXPathAttributesIterator();,if (node != null ) Iterator<Attribute> attributeAxisIterator = node.getXPathAttributesIterator();
NodeInfoPanelController.java,Attribute attribute = attributeAxisIterator.next();,if (attributeAxisIterator != null ) Attribute attribute = attributeAxisIterator.next();
SourceEditorController.java,astManager = new ASTManager(mainController.getDesignerRoot());,if (ASTManager(mainController != null ) astManager = new ASTManager(mainController.getDesignerRoot());
SourceEditorController.java,RadioMenuItem item = new RadioMenuItem(lv.getShortName());,if (RadioMenuItem(lv != null ) RadioMenuItem item = new RadioMenuItem(lv.getShortName());
SourceEditorController.java,"current = astManager.updateIfChanged(source, auxclasspathClassLoader.getValue());","if (auxclasspathClassLoader != null ) current = astManager.updateIfChanged(source, auxclasspathClassLoader.getValue());"
XPathPanelController.java,Parent root = loader.load();,if (loader != null ) Parent root = loader.load();
XPathPanelController.java,root = loader.load();,if (loader != null ) root = loader.load();
NodeSelectionSource.java,MessageChannel<Node> channel = root.getNodeSelectionChannel();,if (root != null ) MessageChannel<Node> channel = root.getNodeSelectionChannel();
ASTManager.java,LanguageVersionHandler languageVersionHandler = getLanguageVersion().getLanguageVersionHandler();,if (getLanguageVersion() != null ) LanguageVersionHandler languageVersionHandler = getLanguageVersion().getLanguageVersionHandler();
ASTManager.java,Parser parser = languageVersionHandler.getParser(languageVersionHandler.getDefaultParserOptions());,if (languageVersionHandler != null ) Parser parser = languageVersionHandler.getParser(languageVersionHandler.getDefaultParserOptions());
AuxclasspathSetupController.java,List<File> files = chooser.showOpenMultipleDialog(designerRoot.getMainStage());,if (chooser != null ) List<File> files = chooser.showOpenMultipleDialog(designerRoot.getMainStage());
AuxclasspathSetupController.java,File f = fileListView.getSelectionModel().getSelectedItem();,if (fileListView != null ) File f = fileListView.getSelectionModel().getSelectedItem();
AuxclasspathSetupController.java,File selected = fileListView.getSelectionModel().getSelectedItem();,if (fileListView != null ) File selected = fileListView.getSelectionModel().getSelectedItem();
EventLogController.java,"logDetailsTextArea.setText(newVal == null ? """" : newVal.getDetails());","if (newVal != null ) logDetailsTextArea.setText(newVal == null ? """" : newVal.getDetails());"
EventLogController.java,root = loader.load();,if (loader != null ) root = loader.load();
DesignerUtil.java,Optional<T> o = optGetter.get();,if (optGetter != null ) Optional<T> o = optGetter.get();
SoftReferenceCache.java,T val = mySupplier.get();,if (mySupplier != null ) T val = mySupplier.get();
AstPackageExplorer.java,ClassLoader classLoader = Thread.currentThread().getContextClassLoader();,if (Thread != null ) ClassLoader classLoader = Thread.currentThread().getContextClassLoader();
AstPackageExplorer.java,URI uri = url.toURI();,if (url != null ) URI uri = url.toURI();
AstPackageExplorer.java,String schemeSpecific = uri.getSchemeSpecificPart();,if (uri != null ) String schemeSpecific = uri.getSchemeSpecificPart();
XPathAutocompleteProvider.java,String input = myCodeArea.getText();,if (myCodeArea != null ) String input = myCodeArea.getText();
XPathAutocompleteProvider.java,searchPoint = input.length();,if (input != null ) searchPoint = input.length();
XPathAutocompleteProvider.java,CompletionResultSource suggestionMaker = mySuggestionProvider.get();,if (mySuggestionProvider != null ) CompletionResultSource suggestionMaker = mySuggestionProvider.get();
XPathAutocompleteProvider.java,ContextMenu parentPopup = item.getParentPopup();,if (item != null ) ContextMenu parentPopup = item.getParentPopup();
RestorePropertyVisitor.java,Iterator<SettingsOwner> existingItems = container.iterator();,if (container != null ) Iterator<SettingsOwner> existingItems = container.iterator();
RestorePropertyVisitor.java,item = existingItems.next();,if (existingItems != null ) item = existingItems.next();
RestorePropertyVisitor.java,itemType = child.getNodeType();,if (child != null ) itemType = child.getNodeType();
RestorePropertyVisitor.java,item = (SettingsOwner) itemType.newInstance();,if (itemType != null ) item = (SettingsOwner) itemType.newInstance();
SettingsPersistenceUtil.java,DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();,if (DocumentBuilderFactory != null ) DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();
SettingsPersistenceUtil.java,SimpleBeanModelNode node = new SimpleBeanModelNode(root.getClass());,if (SimpleBeanModelNode(root != null ) SimpleBeanModelNode node = new SimpleBeanModelNode(root.getClass());
SettingsPersistenceUtil.java,BeanModelNodeSeq<SimpleBeanModelNode> seq = new BeanModelNodeSeq<>(d.getName());,if (BeanModelNodeSeq<>(d != null ) BeanModelNodeSeq<SimpleBeanModelNode> seq = new BeanModelNodeSeq<>(d.getName());
SimpleBeanModelNode.java,Set<BeanModelNode> allChildren = new HashSet<>(children.values());,if (HashSet<>(children != null ) Set<BeanModelNode> allChildren = new HashSet<>(children.values());
XmlInterface.java,DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();,if (DocumentBuilderFactory != null ) DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();
XmlInterface.java,documentBuilder = documentBuilderFactory.newDocumentBuilder();,if (documentBuilderFactory != null ) documentBuilder = documentBuilderFactory.newDocumentBuilder();
XmlInterface.java,Document document = documentBuilder.newDocument();,if (documentBuilder != null ) Document document = documentBuilder.newDocument();
XmlInterface.java,TransformerFactory transformerFactory = TransformerFactory.newInstance();,if (TransformerFactory != null ) TransformerFactory transformerFactory = TransformerFactory.newInstance();
XmlInterface.java,Transformer transformer = transformerFactory.newTransformer();,if (transformerFactory != null ) Transformer transformer = transformerFactory.newTransformer();
XmlInterfaceVersion1.java,NodeList children = element.getChildNodes();,if (element != null ) NodeList children = element.getChildNodes();
NodeStyleSpan.java,"int lastKnownEnd = getAbsolutePosition(node.getEndLine(), node.getEndColumn());","if (node != null ) int lastKnownEnd = getAbsolutePosition(node.getEndLine(), node.getEndColumn());"
SimpleRegexSyntaxHighlighter.java,lastKwEnd = matcher.end();,if (matcher != null ) lastKwEnd = matcher.end();
SyntaxHighlightingCodeArea.java,final ExecutorService executorService = Executors.newSingleThreadExecutor();,if (Executors != null ) final ExecutorService executorService = Executors.newSingleThreadExecutor();
UniformStyleCollection.java,PositionSnapshot current = span.snapshot();,if (span != null ) PositionSnapshot current = span.snapshot();
UniformStyleCollection.java,lastSpanEnd = previous.getBeginIndex();,if (previous != null ) lastSpanEnd = previous.getBeginIndex();
UniformStyleCollection.java,lastSpanEnd = current.getBeginIndex();,if (current != null ) lastSpanEnd = current.getBeginIndex();
UniformStyleCollection.java,lastSpanEnd = previous.getEndIndex();,if (previous != null ) lastSpanEnd = previous.getEndIndex();
UniformStyleCollection.java,Iterator<PositionSnapshot> overlaps = overlappingNodes.iterator();,if (overlappingNodes != null ) Iterator<PositionSnapshot> overlaps = overlappingNodes.iterator();
UniformStyleCollection.java,PositionSnapshot enclosing = overlaps.next();,if (overlaps != null ) PositionSnapshot enclosing = overlaps.next();
UniformStyleCollection.java,lastSpanEnd = enclosing.getEndIndex();,if (enclosing != null ) lastSpanEnd = enclosing.getEndIndex();
UniformStyleCollection.java,lastSpanEnd = previous.getEndIndex();,if (previous != null ) lastSpanEnd = previous.getEndIndex();
UniformStyleCollection.java,int depth = overlappingNodes.size();,if (overlappingNodes != null ) int depth = overlappingNodes.size();
UniformStyleCollection.java,lastSpanEnd = enclosing.getEndIndex();,if (enclosing != null ) lastSpanEnd = enclosing.getEndIndex();
ASTTreeCell.java,stringVal = value.toString();,if (value != null ) stringVal = value.toString();
ASTTreeCell.java,childrenProps[i] = prop.getName();,if (prop != null ) childrenProps[i] = prop.getName();
ASTTreeCell.java,String result = sb.toString();,if (sb != null ) String result = sb.toString();
ASTTreeCell.java,Clipboard clipboard = Clipboard.getSystemClipboard();,if (Clipboard != null ) Clipboard clipboard = Clipboard.getSystemClipboard();
ASTTreeItem.java,Node currentNode = pathToNode.next();,if (pathToNode != null ) Node currentNode = pathToNode.next();
AstTreeView.java,selectionEvents = eventSink.suppressible();,if (eventSink != null ) selectionEvents = eventSink.suppressible();
PropertyTableView.java,PropertyDescriptorSpec spec = this.getSelectionModel().getSelectedItem();,if (this != null ) PropertyDescriptorSpec spec = this.getSelectionModel().getSelectedItem();
PropertyTableView.java,PropertyDescriptorSpec selected = this.getSelectionModel().getSelectedItem();,if (this != null ) PropertyDescriptorSpec selected = this.getSelectionModel().getSelectedItem();
PropertyTableView.java,Stage dialog = editPropertyDialogCache.getValue();,if (editPropertyDialogCache != null ) Stage dialog = editPropertyDialogCache.getValue();
PropertyTableView.java,EditPropertyDialogController wizard = (EditPropertyDialogController) dialog.getUserData();,if (dialog != null ) EditPropertyDialogController wizard = (EditPropertyDialogController) dialog.getUserData();
PropertyTableView.java,root = loader.load();,if (loader != null ) root = loader.load();
ScopeHierarchyTreeItem.java,item = (ScopeHierarchyTreeItem) item.getParent();,if (item != null ) item = (ScopeHierarchyTreeItem) item.getParent();
ScopeHierarchyTreeItem.java,ScopeHierarchyTreeItem nameDeclaration = new ScopeHierarchyTreeItem(entry.getKey());,if (ScopeHierarchyTreeItem(entry != null ) ScopeHierarchyTreeItem nameDeclaration = new ScopeHierarchyTreeItem(entry.getKey());
ScopeHierarchyTreeItem.java,ScopeHierarchyTreeItem parent = buildAscendantHierarchyHelper(scope.getParent());,if (buildAscendantHierarchyHelper(scope != null ) ScopeHierarchyTreeItem parent = buildAscendantHierarchyHelper(scope.getParent());
TreeViewWrapper.java,virtualFlow = getVirtualFlow(wrapped.getSkin());,if (getVirtualFlow(wrapped != null ) virtualFlow = getVirtualFlow(wrapped.getSkin());
XpathViolationListCell.java,lastSpanEnd += text.getText().length();,if (text != null ) lastSpanEnd += text.getText().length();
NodeSelectionSource.java,MessageChannel<Node> channel = getDesignerRoot().getNodeSelectionChannel();,if (getDesignerRoot() != null ) MessageChannel<Node> channel = getDesignerRoot().getNodeSelectionChannel();
AntlrTokenFilter.java,discardingHiddenTokens = token.isHidden();,if (token != null ) discardingHiddenTokens = token.isHidden();
KotlinTokenizer.java,nextToken = (AntlrToken) super.getNextToken();,if (super != null ) nextToken = (AntlrToken) super.getNextToken();
KotlinTokenizer.java,final int type = currentToken.getType();,if (currentToken != null ) final int type = currentToken.getType();
KotlinTokenizer.java,final int type = currentToken.getType();,if (currentToken != null ) final int type = currentToken.getType();
AntlrHiddenTokenFilter.java,AntlrToken token = super.getNextToken();,if (super != null ) AntlrToken token = super.getNextToken();
JavaCCTokenFilter.java,GenericToken currentToken = (GenericToken) tokenManager.getNextToken();,if (tokenManager != null ) GenericToken currentToken = (GenericToken) tokenManager.getNextToken();
JavaCCTokenFilter.java,currentToken = (GenericToken) tokenManager.getNextToken();,if (tokenManager != null ) currentToken = (GenericToken) tokenManager.getNextToken();
JavaCCTokenFilter.java,GenericToken comment = currentToken.getPreviousComment();,if (currentToken != null ) GenericToken comment = currentToken.getPreviousComment();
JavaCCTokenFilter.java,comment = comment.getPreviousComment();,if (comment != null ) comment = comment.getPreviousComment();
AccessorMethodGenerationRule.java,ASTVariableInitializer varInit = varDecl.getInitializer();,if (varDecl != null ) ASTVariableInitializer varInit = varDecl.getInitializer();
SourceEditorController.java,Val<Integer> activePar = Val.wrap(codeEditorArea.currentParagraphProperty());,if (Val != null ) Val<Integer> activePar = Val.wrap(codeEditorArea.currentParagraphProperty());
SourceEditorController.java,int visibleLength = codeEditorArea.lastVisibleParToAllParIndex() - codeEditorArea.firstVisibleParToAllParIndex();,if (codeEditorArea != null ) int visibleLength = codeEditorArea.lastVisibleParToAllParIndex() - codeEditorArea.firstVisibleParToAllParIndex();
NodeParentageCrumbBar.java,constantPadding = childWidth - graphic.getWidth();,if (graphic != null ) constantPadding = childWidth - graphic.getWidth();
NodeParentageCrumbBar.java,Node parent = node.jjtGetParent();,if (node != null ) Node parent = node.jjtGetParent();
NodeParentageCrumbBar.java,parent = current.getValue().jjtGetParent();,if (current != null ) parent = current.getValue().jjtGetParent();
AstTreeView.java,pausableEvents = selectionEvents.pausable();,if (selectionEvents != null ) pausableEvents = selectionEvents.pausable();
MainDesignerController.java,File file = chooser.showOpenDialog(designerRoot.getMainStage());,if (chooser != null ) File file = chooser.showOpenDialog(designerRoot.getMainStage());
EventLogController.java,this.designerRoot = mediator.getDesignerRoot();,if (mediator != null ) this.designerRoot = mediator.getDesignerRoot();
EventLogController.java,this.myPopupStage = createStage(designerRoot.getMainStage());,if (createStage(designerRoot != null ) this.myPopupStage = createStage(designerRoot.getMainStage());
EventLogController.java,this.myPopupStage = createStage(owner.getMainStage());,if (createStage(owner != null ) this.myPopupStage = createStage(owner.getMainStage());
EventLogController.java,"logDetailsTextArea.setText(newVal == null ? """" : newVal.getStackTrace());","if (newVal != null ) logDetailsTextArea.setText(newVal == null ? """" : newVal.getStackTrace());"
LinguisticNamingRule.java,String nameOfMethod = node.getMethodName();,if (node != null ) String nameOfMethod = node.getMethodName();
LinguisticNamingRule.java,ASTResultType resultType = node.getResultType();,if (node != null ) ASTResultType resultType = node.getResultType();
LinguisticNamingRule.java,ASTResultType resultType = node.getResultType();,if (node != null ) ASTResultType resultType = node.getResultType();
AntlrTokenizer.java,AntlrToken token = (AntlrToken) tokenManager.getNextToken();,if (tokenManager != null ) AntlrToken token = (AntlrToken) tokenManager.getNextToken();
AntlrTokenizer.java,token = (AntlrToken) tokenManager.getNextToken();,if (tokenManager != null ) token = (AntlrToken) tokenManager.getNextToken();
DesignerIteratorUtil.java,ListIterator<T> li = lst.listIterator(lst.size());,if (lst != null ) ListIterator<T> li = lst.listIterator(lst.size());
CPPTokenizer.java,StringBuilder buffer = sourceCode.getCodeBuffer();,if (sourceCode != null ) StringBuilder buffer = sourceCode.getCodeBuffer();
CPPTokenizer.java,GenericToken currentToken = tokenFilter.getNextToken();,if (tokenFilter != null ) GenericToken currentToken = tokenFilter.getNextToken();
CPPTokenizer.java,currentToken = tokenFilter.getNextToken();,if (tokenFilter != null ) currentToken = tokenFilter.getNextToken();
JavaTokenizer.java,final String fileName = sourceCode.getFileName();,if (sourceCode != null ) final String fileName = sourceCode.getFileName();
JavaTokenizer.java,Token currentToken = (Token) tokenFilter.getNextToken();,if (tokenFilter != null ) Token currentToken = (Token) tokenFilter.getNextToken();
JavaTokenizer.java,currentToken = (Token) tokenFilter.getNextToken();,if (tokenFilter != null ) currentToken = (Token) tokenFilter.getNextToken();
EcmascriptTokenizer.java,Token currentToken = (Token) tokenFilter.getNextToken();,if (tokenFilter != null ) Token currentToken = (Token) tokenFilter.getNextToken();
EcmascriptTokenizer.java,currentToken = (Token) tokenFilter.getNextToken();,if (tokenFilter != null ) currentToken = (Token) tokenFilter.getNextToken();
MatlabTokenizer.java,Token currentToken = (Token) tokenFilter.getNextToken();,if (tokenFilter != null ) Token currentToken = (Token) tokenFilter.getNextToken();
MatlabTokenizer.java,currentToken = (Token) tokenFilter.getNextToken();,if (tokenFilter != null ) currentToken = (Token) tokenFilter.getNextToken();
ObjectiveCTokenizer.java,Token currentToken = (Token) tokenFilter.getNextToken();,if (tokenFilter != null ) Token currentToken = (Token) tokenFilter.getNextToken();
ObjectiveCTokenizer.java,currentToken = (Token) tokenFilter.getNextToken();,if (tokenFilter != null ) currentToken = (Token) tokenFilter.getNextToken();
PLSQLTokenizer.java,String fileName = sourceCode.getFileName();,if (sourceCode != null ) String fileName = sourceCode.getFileName();
PLSQLTokenizer.java,Token currentToken = (Token) tokenFilter.getNextToken();,if (tokenFilter != null ) Token currentToken = (Token) tokenFilter.getNextToken();
PLSQLTokenizer.java,currentToken = (Token) tokenFilter.getNextToken();,if (tokenFilter != null ) currentToken = (Token) tokenFilter.getNextToken();
PLSQLTokenizer.java,final StringBuilder stringBuilder = sourceCode.getCodeBuffer();,if (sourceCode != null ) final StringBuilder stringBuilder = sourceCode.getCodeBuffer();
PythonTokenizer.java,Token currentToken = (Token) tokenFilter.getNextToken();,if (tokenFilter != null ) Token currentToken = (Token) tokenFilter.getNextToken();
PythonTokenizer.java,currentToken = (Token) tokenFilter.getNextToken();,if (tokenFilter != null ) currentToken = (Token) tokenFilter.getNextToken();
AttributeAxisIterator.java,Method[] preFilter = bean.getClass().getMethods();,if (bean != null ) Method[] preFilter = bean.getClass().getMethods();
ASTManager.java,LanguageVersion ver = languageVersion.getValue();,if (languageVersion != null ) LanguageVersion ver = languageVersion.getValue();
ApexXpathRuleTest.java,List<Attribute> attributes = IteratorUtil.toList(expr.getXPathAttributesIterator());,if (IteratorUtil != null ) List<Attribute> attributes = IteratorUtil.toList(expr.getXPathAttributesIterator());
PLSQLTokenizer.java,StringBuilder sb = sourceCode.getCodeBuffer();,if (sourceCode != null ) StringBuilder sb = sourceCode.getCodeBuffer();
AbstractNode.java,DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();,if (DocumentBuilderFactory != null ) DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
AbstractNode.java,DocumentBuilder db = dbf.newDocumentBuilder();,if (dbf != null ) DocumentBuilder db = dbf.newDocumentBuilder();
AbstractNode.java,Document document = db.newDocument();,if (db != null ) Document document = db.newDocument();
AbstractNode.java,Attribute attr = iter.next();,if (iter != null ) Attribute attr = iter.next();
AbstractNode.java,AbstractNode child = (AbstractNode) iter.next();,if (iter != null ) AbstractNode child = (AbstractNode) iter.next();
CPDTest.java,Runtime runtime = Runtime.getRuntime();,if (Runtime != null ) Runtime runtime = Runtime.getRuntime();
EventLogController.java,"logDetailsTextArea.setText(newVal == null ? """" : newVal.getStackTrace());","if (newVal != null ) logDetailsTextArea.setText(newVal == null ? """" : newVal.getStackTrace());"
AstPackageExplorer.java,URL resource = resources.nextElement();,if (resources != null ) URL resource = resources.nextElement();
AstPackageExplorer.java,final String extension = FilenameUtils.getExtension(file.toString());,if (FilenameUtils != null ) final String extension = FilenameUtils.getExtension(file.toString());
XPathPanelController.java,String input = xpathExpressionArea.getText();,if (xpathExpressionArea != null ) String input = xpathExpressionArea.getText();
XPathPanelController.java,searchPoint = input.length();,if (input != null ) searchPoint = input.length();
AstPackageExplorer.java,File[] files = directory.listFiles();,if (directory != null ) File[] files = directory.listFiles();
XPathAutocompleteProvider.java,XPathSuggestionMaker suggestionMaker = mySuggestionProvider.get();,if (mySuggestionProvider != null ) XPathSuggestionMaker suggestionMaker = mySuggestionProvider.get();
XPathPanelController.java,Parent root = loader.load();,if (loader != null ) Parent root = loader.load();
XPathPanelController.java,String input = xpathExpressionArea.getText();,if (xpathExpressionArea != null ) String input = xpathExpressionArea.getText();
XPathPanelController.java,searchPoint = input.length();,if (input != null ) searchPoint = input.length();
PropertyTableView.java,Stage dialog = editPropertyDialogCache.get();,if (editPropertyDialogCache != null ) Stage dialog = editPropertyDialogCache.get();
PropertyTableView.java,Parent root = loader.load();,if (loader != null ) Parent root = loader.load();
XPathPanelController.java,List<String> suggestions = xPathSuggestions.getXPathSuggestions(input.trim());,if (xPathSuggestions != null ) List<String> suggestions = xPathSuggestions.getXPathSuggestions(input.trim());
XPathSuggestions.java,ClassLoader classLoader = Thread.currentThread().getContextClassLoader();,if (Thread != null ) ClassLoader classLoader = Thread.currentThread().getContextClassLoader();
XPathSuggestions.java,URL resource = resources.nextElement();,if (resources != null ) URL resource = resources.nextElement();
XPathSuggestions.java,File[] files = directory.listFiles();,if (directory != null ) File[] files = directory.listFiles();
MainDesignerController.java,List<LanguageVersion> supported = DesignerUtil.getSupportedLanguageVersions();,if (DesignerUtil != null ) List<LanguageVersion> supported = DesignerUtil.getSupportedLanguageVersions();
XPathPanelController.java,ObservableList<String> versionItems = choiceBox.getItems();,if (choiceBox != null ) ObservableList<String> versionItems = choiceBox.getItems();
AttributeAxisIterator.java,Method[] preFilter = contextNode.getClass().getMethods();,if (contextNode != null ) Method[] preFilter = contextNode.getClass().getMethods();
UnsynchronizedStaticDateFormatterRule.java,Node n = occ.getLocation();,if (occ != null ) Node n = occ.getLocation();
AvoidReassigningLoopVariablesRule.java,checkNode = checkNode.jjtGetParent();,if (checkNode != null ) checkNode = checkNode.jjtGetParent();
BeanMembersShouldSerializeRule.java,String varName = trimIfPrefix(decl.getImage());,if (trimIfPrefix(decl != null ) String varName = trimIfPrefix(decl.getImage());
JUnitTestsShouldIncludeAssertRule.java,String img = name.getImage();,if (name != null ) String img = name.getImage();
ASTLiteralTest.java,ASTLiteral literal = literals.iterator().next();,if (literals != null ) ASTLiteral literal = literals.iterator().next();
ASTLiteralTest.java,ASTLiteral literal = literals.iterator().next();,if (literals != null ) ASTLiteral literal = literals.iterator().next();
ASTLiteralTest.java,ASTLiteral literal = literals.iterator().next();,if (literals != null ) ASTLiteral literal = literals.iterator().next();
ASTLiteralTest.java,ASTLiteral literal = literals.iterator().next();,if (literals != null ) ASTLiteral literal = literals.iterator().next();
ASTLiteralTest.java,ASTLiteral literal = literals.iterator().next();,if (literals != null ) ASTLiteral literal = literals.iterator().next();
ASTLiteralTest.java,ASTLiteral literal = literals.iterator().next();,if (literals != null ) ASTLiteral literal = literals.iterator().next();
TypeHelper.java,ClassLoader classLoader = n.getType().getClassLoader();,if (n != null ) ClassLoader classLoader = n.getType().getClassLoader();
TypeHelper.java,classLoader = ClassLoader.getSystemClassLoader();,if (ClassLoader != null ) classLoader = ClassLoader.getSystemClassLoader();
KotlinTokenizer.java,final StringBuilder buffer = sourceCode.getCodeBuffer();,if (sourceCode != null ) final StringBuilder buffer = sourceCode.getCodeBuffer();
KotlinTokenizer.java,final ANTLRInputStream ais = new ANTLRInputStream(buffer.toString());,if (ANTLRInputStream(buffer != null ) final ANTLRInputStream ais = new ANTLRInputStream(buffer.toString());
KotlinTokenizer.java,Token token = lexer.nextToken();,if (lexer != null ) Token token = lexer.nextToken();
KotlinTokenizer.java,token = lexer.nextToken();,if (lexer != null ) token = lexer.nextToken();
KotlinTokenizer.java,StringBuilder buffer = sourceCode.getCodeBuffer();,if (sourceCode != null ) StringBuilder buffer = sourceCode.getCodeBuffer();
KotlinTokenizer.java,ANTLRInputStream ais = new ANTLRInputStream(buffer.toString());,if (ANTLRInputStream(buffer != null ) ANTLRInputStream ais = new ANTLRInputStream(buffer.toString());
SingletonClassReturningNewInstanceRule.java,localVarName = localVar.getVariableName();,if (localVar != null ) localVarName = localVar.getVariableName();
NcssMetric.java,Set<MetricOption> options = version.getOptions();,if (version != null ) Set<MetricOption> options = version.getOptions();
NcssMetric.java,Set<MetricOption> options = version.getOptions();,if (version != null ) Set<MetricOption> options = version.getOptions();
CycloMetric.java,Set<MetricOption> opts = options.getOptions();,if (options != null ) Set<MetricOption> opts = options.getOptions();
Benchmarker.java,InputStreamReader reader = new InputStreamReader(dataSource.getInputStream());,if (InputStreamReader(dataSource != null ) InputStreamReader reader = new InputStreamReader(dataSource.getInputStream());
CsTokenizer.java,Token token = tokenizer.getNextToken();,if (tokenizer != null ) Token token = tokenizer.getNextToken();
CsTokenizer.java,Token lookAhead = tokenizer.getNextToken();,if (tokenizer != null ) Token lookAhead = tokenizer.getNextToken();
CsTokenizer.java,lookAhead = tokenizer.getNextToken();,if (tokenizer != null ) lookAhead = tokenizer.getNextToken();
EcmascriptTokenizer.java,reader = new StringReader(buffer.toString());,if (StringReader(buffer != null ) reader = new StringReader(buffer.toString());
JSPTokenizer.java,reader = new StringReader(buffer.toString());,if (StringReader(buffer != null ) reader = new StringReader(buffer.toString());
MatlabTokenizer.java,reader = new StringReader(buffer.toString());,if (StringReader(buffer != null ) reader = new StringReader(buffer.toString());
ObjectiveCTokenizer.java,reader = new StringReader(buffer.toString());,if (StringReader(buffer != null ) reader = new StringReader(buffer.toString());
PythonTokenizer.java,reader = new StringReader(buffer.toString());,if (StringReader(buffer != null ) reader = new StringReader(buffer.toString());
VfTokenizer.java,reader = new StringReader(buffer.toString());,if (StringReader(buffer != null ) reader = new StringReader(buffer.toString());
AntlrTokenizer.java,GenericAntlrToken token = (GenericAntlrToken) tokenManager.getNextToken();,if (tokenManager != null ) GenericAntlrToken token = (GenericAntlrToken) tokenManager.getNextToken();
AntlrTokenizer.java,token = (GenericAntlrToken) tokenManager.getNextToken();,if (tokenManager != null ) token = (GenericAntlrToken) tokenManager.getNextToken();
AntlrTokenManager.java,final Token token = lexer.nextToken();,if (lexer != null ) final Token token = lexer.nextToken();
CpdExecutor.java,String output = IOUtils.toString(process.getInputStream());,if (IOUtils != null ) String output = IOUtils.toString(process.getInputStream());
CpdExecutor.java,String output = IOUtils.toString(process.getInputStream());,if (IOUtils != null ) String output = IOUtils.toString(process.getInputStream());
PMDExecutor.java,String output = IOUtils.toString(process.getInputStream());,if (IOUtils != null ) String output = IOUtils.toString(process.getInputStream());
PMDExecutor.java,String output = IOUtils.toString(process.getInputStream());,if (IOUtils != null ) String output = IOUtils.toString(process.getInputStream());
ApexTreeBuilder.java,AdditionalPassScope scope = new AdditionalPassScope(Errors.createErrors());,if (AdditionalPassScope(Errors != null ) AdditionalPassScope scope = new AdditionalPassScope(Errors.createErrors());
ApexTreeBuilder.java,Integer endIndex = lexer.getCharIndex();,if (lexer != null ) Integer endIndex = lexer.getCharIndex();
ApexDocRule.java,String value = x.getName().getValue();,if (x != null ) String value = x.getName().getValue();
AntlrTokenizer.java,Token token = (Token) tokenManager.getNextToken();,if (tokenManager != null ) Token token = (Token) tokenManager.getNextToken();
AntlrTokenizer.java,token = (Token) tokenManager.getNextToken();,if (tokenManager != null ) token = (Token) tokenManager.getNextToken();
AntlrTokenizer.java,StringBuilder buffer = sourceCode.getCodeBuffer();,if (sourceCode != null ) StringBuilder buffer = sourceCode.getCodeBuffer();
AntlrTokenizer.java,final CharStream charStream = CharStreams.fromString(buffer.toString());,if (CharStreams != null ) final CharStream charStream = CharStreams.fromString(buffer.toString());
AntlrTokenizer.java,Token token = lexer.nextToken();,if (lexer != null ) Token token = lexer.nextToken();
AntlrTokenizer.java,token = lexer.nextToken();,if (lexer != null ) token = lexer.nextToken();
StdCyclomaticComplexityRuleTest.java,ParserOptions parserOptions = javaLanguageVersion.getLanguageVersionHandler().getDefaultParserOptions();,if (javaLanguageVersion != null ) ParserOptions parserOptions = javaLanguageVersion.getLanguageVersionHandler().getDefaultParserOptions();
ConsecutiveLiteralAppendsRule.java,Node n = jno.getLocation();,if (jno != null ) Node n = jno.getLocation();
AbstractApexNode.java,int startOffset = loc.getStartIndex();,if (loc != null ) int startOffset = loc.getStartIndex();
AbstractApexNode.java,int endOffset = loc.getEndIndex();,if (loc != null ) int endOffset = loc.getEndIndex();
ApexDocRule.java,source = node.getSource();,if (node != null ) source = node.getSource();
ApexDocRule.java,Token token = lexer.nextToken();,if (lexer != null ) Token token = lexer.nextToken();
ApexDocRule.java,Integer endIndex = lexer.getCharIndex();,if (lexer != null ) Integer endIndex = lexer.getCharIndex();
ApexDocRule.java,token = lexer.nextToken();,if (lexer != null ) token = lexer.nextToken();
ApexDocRule.java,endIndex = lexer.getCharIndex();,if (lexer != null ) endIndex = lexer.getCharIndex();
RuleReference.java,rule = getClass().newInstance();,if (getClass() != null ) rule = getClass().newInstance();
AntlrTokenizer.java,CharStream charStream = CharStreams.fromString(buffer.toString());,if (CharStreams != null ) CharStream charStream = CharStreams.fromString(buffer.toString());
YAHTMLRenderer.java,ReportTree tree = report.getViolationTree();,if (report != null ) ReportTree tree = report.getViolationTree();
LinguisticNamingRule.java,String nameOfField = node.getVariableName();,if (node != null ) String nameOfField = node.getVariableName();
LinguisticNamingRule.java,String nameOfField = node.getVariableName();,if (node != null ) String nameOfField = node.getVariableName();
RuleTst.java,Iterator<RuleViolation> it = report.getViolationTree().iterator();,if (report != null ) Iterator<RuleViolation> it = report.getViolationTree().iterator();
UnnecessaryFullyQualifiedNameRule.java,String importName = firstMatch.getImportedName();,if (firstMatch != null ) String importName = firstMatch.getImportedName();
SwiftTokenizer.java,StringBuilder buffer = sourceCode.getCodeBuffer();,if (sourceCode != null ) StringBuilder buffer = sourceCode.getCodeBuffer();
SwiftTokenizer.java,ANTLRInputStream ais = new ANTLRInputStream(buffer.toString());,if (ANTLRInputStream(buffer != null ) ANTLRInputStream ais = new ANTLRInputStream(buffer.toString());
SwiftTokenizer.java,Token token = lexer.nextToken();,if (lexer != null ) Token token = lexer.nextToken();
SwiftTokenizer.java,token = lexer.nextToken();,if (lexer != null ) token = lexer.nextToken();
AttributeTypeAndNameIsInconsistentRule.java,String nameOfField = node.getVariableName();,if (node != null ) String nameOfField = node.getVariableName();
AttributeTypeAndNameIsInconsistentRule.java,String nameOfField = node.getVariableName();,if (node != null ) String nameOfField = node.getVariableName();
MethodTypeAndNameIsInconsistentRule.java,String nameOfMethod = node.getMethodName();,if (node != null ) String nameOfMethod = node.getMethodName();
MethodTypeAndNameIsInconsistentRule.java,ASTResultType resultType = node.getResultType();,if (node != null ) ASTResultType resultType = node.getResultType();
MethodTypeAndNameIsInconsistentRule.java,ASTResultType resultType = node.getResultType();,if (node != null ) ASTResultType resultType = node.getResultType();
MethodTypeAndNameIsInconsistentRule.java,ASTResultType resultType = node.getResultType();,if (node != null ) ASTResultType resultType = node.getResultType();
MethodTypeAndNameIsInconsistentRule.java,ASTResultType resultType = node.getResultType();,if (node != null ) ASTResultType resultType = node.getResultType();
AttributeTypeAndNameIsInconsistentRule.java,String nameOfField = node.getVariableName();,if (node != null ) String nameOfField = node.getVariableName();
MethodTypeAndNameIsInconsistentRule.java,rt = node.getResultType();,if (node != null ) rt = node.getResultType();
MethodTypeAndNameIsInconsistentRule.java,rt = node.getResultType(); // for void methods,if (methods != null ) rt = node.getResultType(); // for void methods
MethodTypeAndNameIsInconsistentRule.java,rt = node.getResultType();  // for void methods,if (methods != null ) rt = node.getResultType();  // for void methods
MethodTypeAndNameIsInconsistentRule.java,rt = node.getResultType();  // for void methods,if (methods != null ) rt = node.getResultType();  // for void methods
XPathPanelController.java,String input = xpathExpressionArea.getText();,if (xpathExpressionArea != null ) String input = xpathExpressionArea.getText();
XPathPanelController.java,searchPoint = input.length();,if (input != null ) searchPoint = input.length();
ClassTypeResolver.java,bounds[index] = typeNodes.get(index).getTypeDefinition();,if (typeNodes != null ) bounds[index] = typeNodes.get(index).getTypeDefinition();
FormalComment.java,JavadocTag tag = JavadocTag.tagFor(entry.getKey());,if (JavadocTag != null ) JavadocTag tag = JavadocTag.tagFor(entry.getKey());
Comment.java,JavadocTag tag = JavadocTag.tagFor(entry.getKey());,if (JavadocTag != null ) JavadocTag tag = JavadocTag.tagFor(entry.getKey());
CommentUtil.java,String line = rawLine.trim();,if (rawLine != null ) String line = rawLine.trim();
CommentUtil.java,List<String> result = new ArrayList<>(lines.size());,if (ArrayList<>(lines != null ) List<String> result = new ArrayList<>(lines.size());
AbstractCommentRule.java,String trimmed = comment.getImage().trim();,if (comment != null ) String trimmed = comment.getImage().trim();
AbstractCommentRule.java,String line = rawLine.trim();,if (rawLine != null ) String line = rawLine.trim();
AbstractCommentRule.java,String line = origLine.trim();,if (origLine != null ) String line = origLine.trim();
SyntaxHighlightingCodeArea.java,ExecutorService executorService = Executors.newSingleThreadExecutor();,if (Executors != null ) ExecutorService executorService = Executors.newSingleThreadExecutor();
AssignmentToNonFinalStaticRule.java,AccessNode accessNodeParent = (AccessNode) decl.getAccessNodeParent();,if (decl != null ) AccessNode accessNodeParent = (AccessNode) decl.getAccessNodeParent();
CustomCodeArea.java,ExecutorService executorService = Executors.newSingleThreadExecutor();,if (Executors != null ) ExecutorService executorService = Executors.newSingleThreadExecutor();
SourceEditorController.java,"current = astManager.updateCompilationUnit(source, auxclasspathClassLoader.getValue());","if (auxclasspathClassLoader != null ) current = astManager.updateCompilationUnit(source, auxclasspathClassLoader.getValue());"
NodeStyleSpan.java,"int lastKnownEnd = getAbsolutePosition(node.getEndLine(), node.getEndColumn());","if (node != null ) int lastKnownEnd = getAbsolutePosition(node.getEndLine(), node.getEndColumn());"
CustomCodeArea.java,private ExecutorService executorService = Executors.newSingleThreadExecutor();,if (Executors != null ) private ExecutorService executorService = Executors.newSingleThreadExecutor();
CustomCodeArea.java,ObservableList<String> styleClasses = this.getStyleClass();,if (this != null ) ObservableList<String> styleClasses = this.getStyleClass();
CustomCodeArea.java,executorService = Executors.newSingleThreadExecutor();,if (Executors != null ) executorService = Executors.newSingleThreadExecutor();
NodeStyleSpan.java,PositionSnapshot newSnap = NodeStyleSpan.this.snapshot();,if (NodeStyleSpan != null ) PositionSnapshot newSnap = NodeStyleSpan.this.snapshot();
UniformStyleCollection.java,int length = current.getLength();,if (current != null ) int length = current.getLength();
UniformStyleCollection.java,cachedSpans = builder.create();,if (builder != null ) cachedSpans = builder.create();
CustomCodeArea.java,accumulatedOffset += entry.getValue();,if (entry != null ) accumulatedOffset += entry.getValue();
StyleContext.java,PositionSnapshot snapshot = coord.snapshot();,if (coord != null ) PositionSnapshot snapshot = coord.snapshot();
CustomCodeArea.java,ObservableList<String> styleClasses = this.getStyleClass();,if (this != null ) ObservableList<String> styleClasses = this.getStyleClass();
StyleHelper.java,Set<String> previousClasses = Collections.emptySet();,if (Collections != null ) Set<String> previousClasses = Collections.emptySet();
XPathPanelController.java,List<String> suggestions = xPathSuggestions.getXPathSuggestions();,if (xPathSuggestions != null ) List<String> suggestions = xPathSuggestions.getXPathSuggestions();
AttributeAxisIterator.java,this.iterator = startNodeInfo.node.getXPathAttributes();,if (startNodeInfo != null ) this.iterator = startNodeInfo.node.getXPathAttributes();
NodeInfoPanelController.java,Iterator<Attribute> attributeAxisIterator = node.getXPathAttributes();,if (node != null ) Iterator<Attribute> attributeAxisIterator = node.getXPathAttributes();
AttributeAxisIterator.java,this.name = truncateMethodName(m.getName());,if (truncateMethodName(m != null ) this.name = truncateMethodName(m.getName());
AttributeAxisIterator.java,String methodName = method.getName();,if (method != null ) String methodName = method.getName();
AttributeAxisIterator.java,this.methodWrappers = methodCache.get(contextNode.getClass());,if (methodCache != null ) this.methodWrappers = methodCache.get(contextNode.getClass());
AuxClassPathController.java,List<File> files = chooser.showOpenMultipleDialog(designerRoot.getMainStage());,if (chooser != null ) List<File> files = chooser.showOpenMultipleDialog(designerRoot.getMainStage());
AuxClassPathController.java,File f = fileListView.getSelectionModel().getSelectedItem();,if (fileListView != null ) File f = fileListView.getSelectionModel().getSelectedItem();
AuxClassPathController.java,File selected = fileListView.getSelectionModel().getSelectedItem();,if (fileListView != null ) File selected = fileListView.getSelectionModel().getSelectedItem();
AuxClassPathController.java,private ClassLoader classLoader = getClass().getClassLoader();,if (getClass() != null ) private ClassLoader classLoader = getClass().getClassLoader();
AuxClassPathController.java,classLoader = PMDConfiguration.class.getClassLoader();,if (PMDConfiguration != null ) classLoader = PMDConfiguration.class.getClassLoader();
AuxClassPathController.java,SourceEditorController.auxclasspathFiles = fileListView.getItems();,if (fileListView != null ) SourceEditorController.auxclasspathFiles = fileListView.getItems();
AuxClassPathController.java,List<File> file = chooser.showOpenMultipleDialog(designerRoot.getMainStage());,if (chooser != null ) List<File> file = chooser.showOpenMultipleDialog(designerRoot.getMainStage());
AuxClassPathController.java,"classPath = classPath + "";"" + f.getAbsolutePath();","if (f != null ) classPath = classPath + "";"" + f.getAbsolutePath();"
AuxClassPathController.java,File f = fileList.getSelectionModel().getSelectedItem();,if (fileList != null ) File f = fileList.getSelectionModel().getSelectedItem();
GuardLogStatementRule.java,String lastPart = getLastPartOfName(name.getImage());,if (getLastPartOfName(name != null ) String lastPart = getLastPartOfName(name.getImage());
AuxClassPathController.java,int selectedId = fileList.getSelectionModel().getSelectedIndex();,if (fileList != null ) int selectedId = fileList.getSelectionModel().getSelectedIndex();
AuxClassPathController.java,File file = chooser.showOpenDialog(designerRoot.getMainStage());,if (chooser != null ) File file = chooser.showOpenDialog(designerRoot.getMainStage());
ClassTypeResolver.java,ASTType type = node.getTypeNode();,if (node != null ) ASTType type = node.getTypeNode();
ClassTypeResolver.java,JavaTypeDefinition typeDefinition = expression.getTypeDefinition();,if (expression != null ) JavaTypeDefinition typeDefinition = expression.getTypeDefinition();
AntLogHandler.java,clazz = clazz.getSuperclass();,if (clazz != null ) clazz = clazz.getSuperclass();
PrematureDeclarationRule.java,Node currentParent = node.jjtGetParent();,if (node != null ) Node currentParent = node.jjtGetParent();
PrematureDeclarationRule.java,currentParent = currentParent.jjtGetParent();,if (currentParent != null ) currentParent = currentParent.jjtGetParent();
PrematureDeclarationRule.java,int count = block.jjtGetNumChildren();,if (block != null ) int count = block.jjtGetNumChildren();
PrematureDeclarationRule.java,int count = block.jjtGetNumChildren();,if (block != null ) int count = block.jjtGetNumChildren();
PMD.java,Renderer renderer = configuration.createRenderer();,if (configuration != null ) Renderer renderer = configuration.createRenderer();
SourceCodeProcessor.java,VisitorStarter dataFlowFacade = languageVersion.getLanguageVersionHandler().getDataFlowFacade();,if (languageVersion != null ) VisitorStarter dataFlowFacade = languageVersion.getLanguageVersionHandler().getDataFlowFacade();
TimingReport.java,final TimedOperation timedOperation = entry.getKey();,if (entry != null ) final TimedOperation timedOperation = entry.getKey();
TimingReport.java,final TimedOperation timedOperation = entry.getKey();,if (entry != null ) final TimedOperation timedOperation = entry.getKey();
AbstractRuleChainVisitor.java,RuleSet ruleSet = entry.getKey();,if (entry != null ) RuleSet ruleSet = entry.getKey();
AbstractRuleChainVisitor.java,visits += ns.size();,if (ns != null ) visits += ns.size();
TimeTracker.java,wallClockStart = System.currentTimeMillis();,if (System != null ) wallClockStart = System.currentTimeMillis();
ScopeAndDeclarationFinder.java,Scope methodScope = node.getScope();,if (node != null ) Scope methodScope = node.getScope();
ScopeAndDeclarationFinder.java,int n = node.jjtGetNumChildren();,if (node != null ) int n = node.jjtGetNumChildren();
ScopeAndDeclarationFinder.java,localScope = node.getScope();,if (node != null ) localScope = node.getScope();
UnusedFormalParameterRule.java,ASTVariableDeclaratorId declNode = (ASTVariableDeclaratorId) nameDecl.getNode();,if (nameDecl != null ) ASTVariableDeclaratorId declNode = (ASTVariableDeclaratorId) nameDecl.getNode();
MethodScope.java,ImageFinderFunction finder = new ImageFinderFunction(occurrence.getImage());,if (ImageFinderFunction(occurrence != null ) ImageFinderFunction finder = new ImageFinderFunction(occurrence.getImage());
ClassScopeTest.java,List<NameOccurrence> occurrences = entry.getValue();,if (entry != null ) List<NameOccurrence> occurrences = entry.getValue();
PMD.java,long reportStart = System.nanoTime();,if (System != null ) long reportStart = System.nanoTime();
PMD.java,reportStart = System.nanoTime();,if (System != null ) reportStart = System.nanoTime();
PMD.java,long startFiles = System.nanoTime();,if (System != null ) long startFiles = System.nanoTime();
PMD.java,long endFiles = System.nanoTime();,if (System != null ) long endFiles = System.nanoTime();
PMD.java,long start = System.nanoTime();,if (System != null ) long start = System.nanoTime();
PMD.java,long end = System.nanoTime();,if (System != null ) long end = System.nanoTime();
RuleSet.java,long start = System.nanoTime();,if (System != null ) long start = System.nanoTime();
RuleSet.java,long end = System.nanoTime();,if (System != null ) long end = System.nanoTime();
RulesetsFactoryUtils.java,long loadRuleStart = System.nanoTime();,if (System != null ) long loadRuleStart = System.nanoTime();
RulesetsFactoryUtils.java,long endLoadRules = System.nanoTime();,if (System != null ) long endLoadRules = System.nanoTime();
SourceCodeProcessor.java,long start = System.nanoTime();,if (System != null ) long start = System.nanoTime();
SourceCodeProcessor.java,long end = System.nanoTime();,if (System != null ) long end = System.nanoTime();
SourceCodeProcessor.java,long start = System.nanoTime();,if (System != null ) long start = System.nanoTime();
SourceCodeProcessor.java,long end = System.nanoTime();,if (System != null ) long end = System.nanoTime();
SourceCodeProcessor.java,long start = System.nanoTime();,if (System != null ) long start = System.nanoTime();
SourceCodeProcessor.java,long end = System.nanoTime();,if (System != null ) long end = System.nanoTime();
SourceCodeProcessor.java,long start = System.nanoTime();,if (System != null ) long start = System.nanoTime();
SourceCodeProcessor.java,long end = System.nanoTime();,if (System != null ) long end = System.nanoTime();
SourceCodeProcessor.java,long start = System.nanoTime();,if (System != null ) long start = System.nanoTime();
SourceCodeProcessor.java,long end = System.nanoTime();,if (System != null ) long end = System.nanoTime();
SourceCodeProcessor.java,long start = System.nanoTime();,if (System != null ) long start = System.nanoTime();
SourceCodeProcessor.java,long end = System.nanoTime();,if (System != null ) long end = System.nanoTime();
AbstractRuleChainVisitor.java,long start = System.nanoTime();,if (System != null ) long start = System.nanoTime();
AbstractRuleChainVisitor.java,long end = System.nanoTime();,if (System != null ) long end = System.nanoTime();
AbstractRuleChainVisitor.java,start = System.nanoTime();,if (System != null ) start = System.nanoTime();
AbstractRuleChainVisitor.java,end = System.nanoTime();,if (System != null ) end = System.nanoTime();
AbstractPMDProcessor.java,long start = System.nanoTime();,if (System != null ) long start = System.nanoTime();
AbstractPMDProcessor.java,long end = System.nanoTime();,if (System != null ) long end = System.nanoTime();
MultiThreadProcessor.java,Throwable t = ee.getCause();,if (ee != null ) Throwable t = ee.getCause();
SingleMethodSingletonRule.java,String a = node.getImage(); // Get the name of the Class it's part of,if (of != null ) String a = node.getImage(); // Get the name of the Class it's part of
PythonTokenizer.java,Token currentToken = (Token) tokenManager.getNextToken();,if (tokenManager != null ) Token currentToken = (Token) tokenManager.getNextToken();
PythonTokenizer.java,currentToken = (Token) tokenManager.getNextToken();,if (tokenManager != null ) currentToken = (Token) tokenManager.getNextToken();
MethodNamingConventionsRule.java,String methodName = node.getImage();,if (node != null ) String methodName = node.getImage();
PLSQLTokenizer.java,Token currentToken = tokenMgr.getNextToken();,if (tokenMgr != null ) Token currentToken = tokenMgr.getNextToken();
PLSQLTokenizer.java,currentToken = tokenMgr.getNextToken();,if (tokenMgr != null ) currentToken = tokenMgr.getNextToken();
RuleSetFactoryTest.java,Logger logger = Logger.getLogger(RuleSetFactory.class.getName());,if (Logger != null ) Logger logger = Logger.getLogger(RuleSetFactory.class.getName());
ObjectiveCTokenizer.java,Token currentToken = (Token) tokenManager.getNextToken();,if (tokenManager != null ) Token currentToken = (Token) tokenManager.getNextToken();
ObjectiveCTokenizer.java,currentToken = (Token) tokenManager.getNextToken();,if (tokenManager != null ) currentToken = (Token) tokenManager.getNextToken();
MatlabTokenizer.java,Token currentToken = (Token) tokenManager.getNextToken();,if (tokenManager != null ) Token currentToken = (Token) tokenManager.getNextToken();
MatlabTokenizer.java,currentToken = (Token) tokenManager.getNextToken();,if (tokenManager != null ) currentToken = (Token) tokenManager.getNextToken();
EcmascriptTokenizer.java,Token currentToken = (Token) tokenManager.getNextToken();,if (tokenManager != null ) Token currentToken = (Token) tokenManager.getNextToken();
EcmascriptTokenizer.java,currentToken = (Token) tokenManager.getNextToken();,if (tokenManager != null ) currentToken = (Token) tokenManager.getNextToken();
JavaCCTokenFilter.java,currentToken = (GenericToken) tokenManager.getNextToken();,if (tokenManager != null ) currentToken = (GenericToken) tokenManager.getNextToken();
CPPTokenizer.java,Token currentToken = (Token) tokenManager.getNextToken();,if (tokenManager != null ) Token currentToken = (Token) tokenManager.getNextToken();
CPPTokenizer.java,currentToken = (Token) tokenManager.getNextToken();,if (tokenManager != null ) currentToken = (Token) tokenManager.getNextToken();
JavaTokenizer.java,StringBuilder stringBuilder = sourceCode.getCodeBuffer();,if (sourceCode != null ) StringBuilder stringBuilder = sourceCode.getCodeBuffer();
JavaTokenizer.java,String fileName = sourceCode.getFileName();,if (sourceCode != null ) String fileName = sourceCode.getFileName();
JavaTokenizer.java,Token currentToken = (Token) tokenMgr.getNextToken();,if (tokenMgr != null ) Token currentToken = (Token) tokenMgr.getNextToken();
JavaTokenizer.java,currentToken = (Token) tokenMgr.getNextToken();,if (tokenMgr != null ) currentToken = (Token) tokenMgr.getNextToken();
JavaTokenizer.java,currentToken = (Token) tokenMgr.getNextToken();,if (tokenMgr != null ) currentToken = (Token) tokenMgr.getNextToken();
RuleDocGenerator.java,String languageTersename = entry.getKey().getTerseName();,if (entry != null ) String languageTersename = entry.getKey().getTerseName();
UnnecessaryConstructorRule.java,Iterator<ASTConstructorDeclaration> iterator = nodes.iterator();,if (nodes != null ) Iterator<ASTConstructorDeclaration> iterator = nodes.iterator();
AttributeAxisIteratorTest.java,Attribute attribute = it.next();,if (it != null ) Attribute attribute = it.next();
IdenticalCatchBranchesRule.java,GenericToken current = node.jjtGetFirstToken();,if (node != null ) GenericToken current = node.jjtGetFirstToken();
IdenticalCatchBranchesRule.java,current = current.getNext();,if (current != null ) current = current.getNext();
AbstractJavaAccessNode.java,Node parent = this.jjtGetParent();,if (this != null ) Node parent = this.jjtGetParent();
AbstractLombokAwareRule.java,Node parent = node.jjtGetParent();,if (node != null ) Node parent = node.jjtGetParent();
AbstractLombokAwareRule.java,String annotationName = name.getImage();,if (name != null ) String annotationName = name.getImage();
UnusedPrivateFieldRule.java,Node parent = node.getAccessNodeParent().jjtGetParent();,if (node != null ) Node parent = node.getAccessNodeParent().jjtGetParent();
UnusedPrivateMethodRule.java,Node parent = node.getNode().jjtGetParent();,if (node != null ) Node parent = node.getNode().jjtGetParent();
AbstractJavaRule.java,Node parent = node.jjtGetParent();,if (node != null ) Node parent = node.jjtGetParent();
AbstractLombokAwareRule.java,Node parent = node.jjtGetParent();,if (node != null ) Node parent = node.jjtGetParent();
AbstractLombokAwareRule.java,String annotationName = name.getImage();,if (name != null ) String annotationName = name.getImage();
UnusedPrivateMethodRule.java,Node parent = node.getNode().jjtGetParent();,if (node != null ) Node parent = node.getNode().jjtGetParent();
UnusedPrivateFieldRule.java,Node parent = node.getAccessNodeParent().jjtGetParent();,if (node != null ) Node parent = node.getAccessNodeParent().jjtGetParent();
JavaQualifiedName.java,ImmutableList<String> packages = getClassName().getPackageList();,if (getClassName() != null ) ImmutableList<String> packages = getClassName().getPackageList();
JavaQualifiedName.java,ImmutableList<String> classes = getClassName().getClassList();,if (getClassName() != null ) ImmutableList<String> classes = getClassName().getClassList();
PackageStats.java,String topClassName = qname.getClassList().head();,if (qname != null ) String topClassName = qname.getClassList().head();
PackageStats.java,ImmutableList<String> nameClasses = qname.getClassList();,if (qname != null ) ImmutableList<String> nameClasses = qname.getClassList();
PackageStats.java,ImmutableList<String> packagePath = qname.getPackageList();,if (qname != null ) ImmutableList<String> packagePath = qname.getPackageList();
ClassTypeResolver.java,parent = parent.jjtGetParent();,if (parent != null ) parent = parent.jjtGetParent();
ClassTypeResolver.java,parent = parent.jjtGetParent();,if (parent != null ) parent = parent.jjtGetParent();
ClassTypeResolver.java,newMetadata = new AnonymousClassMetadata(parentTypeNode.getImage());,if (AnonymousClassMetadata(parentTypeNode != null ) newMetadata = new AnonymousClassMetadata(parentTypeNode.getImage());
ClassTypeResolver.java,newMetadata = new AnonymousClassMetadata(typedParent.getImage());,if (AnonymousClassMetadata(typedParent != null ) newMetadata = new AnonymousClassMetadata(typedParent.getImage());
ClassTypeResolver.java,ASTPackageDeclaration pkgDecl = node.getPackageDeclaration();,if (node != null ) ASTPackageDeclaration pkgDecl = node.getPackageDeclaration();
JavaQualifiedName.java,ImmutableList<String> reversed = classes.reverse();,if (classes != null ) ImmutableList<String> reversed = classes.reverse();
JavaQualifiedNameTest.java,JavaQualifiedName qname = coid.getQualifiedName();,if (coid != null ) JavaQualifiedName qname = coid.getQualifiedName();
JavaQualifiedNameTest.java,JavaQualifiedName qname = coid.getQualifiedName();,if (coid != null ) JavaQualifiedName qname = coid.getQualifiedName();
JavaQualifiedNameTest.java,JavaQualifiedName qname = coid.getQualifiedName();,if (coid != null ) JavaQualifiedName qname = coid.getQualifiedName();
JavaQualifiedNameTest.java,JavaQualifiedName qname = coid.getQualifiedName();,if (coid != null ) JavaQualifiedName qname = coid.getQualifiedName();
JavaQualifiedNameTest.java,JavaQualifiedName qname = coid.getQualifiedName();,if (coid != null ) JavaQualifiedName qname = coid.getQualifiedName();
JavaQualifiedNameTest.java,JavaQualifiedName qname = coid.getQualifiedName();,if (coid != null ) JavaQualifiedName qname = coid.getQualifiedName();
JavaQualifiedNameTest.java,JavaQualifiedName qname = coid.getQualifiedName();,if (coid != null ) JavaQualifiedName qname = coid.getQualifiedName();
JavaQualifiedNameTest.java,JavaQualifiedName qname = declaration.getQualifiedName();,if (declaration != null ) JavaQualifiedName qname = declaration.getQualifiedName();
JavaQualifiedNameTest.java,JavaQualifiedName qname = declaration.getQualifiedName();,if (declaration != null ) JavaQualifiedName qname = declaration.getQualifiedName();
JavaQualifiedNameTest.java,JavaQualifiedName qname = declaration.getQualifiedName();,if (declaration != null ) JavaQualifiedName qname = declaration.getQualifiedName();
PackageStatsTest.java,JavaQualifiedName qname = node.getQualifiedName();,if (node != null ) JavaQualifiedName qname = node.getQualifiedName();
QualifiedNameFactory.java,Node parent = node.jjtGetParent();,if (node != null ) Node parent = node.jjtGetParent();
QualifiedNameFactory.java,parent = parent.jjtGetParent();,if (parent != null ) parent = parent.jjtGetParent();
QualifiedNameFactory.java,Node parent = node.jjtGetParent();,if (node != null ) Node parent = node.jjtGetParent();
QualifiedNameFactory.java,parent = parent.jjtGetParent();,if (parent != null ) parent = parent.jjtGetParent();
QualifiedNameFactory.java,parent = parent.jjtGetParent();,if (parent != null ) parent = parent.jjtGetParent();
TooManyFieldsRule.java,int val = entry.getValue();,if (entry != null ) int val = entry.getValue();
TooManyFieldsRule.java,Node n = nodes.get(entry.getKey());,if (nodes != null ) Node n = nodes.get(entry.getKey());
TooManyFieldsRule.java,String key = clazz.getImage();,if (clazz != null ) String key = clazz.getImage();
AbstractNode.java,int n = node.jjtGetNumChildren();,if (node != null ) int n = node.jjtGetNumChildren();
PackageStats.java,String topClassName = qname.getClasses().head();,if (qname != null ) String topClassName = qname.getClasses().head();
PackageStats.java,ImmutableList<String> nameClasses = qname.getClasses();,if (qname != null ) ImmutableList<String> nameClasses = qname.getClasses();
PackageStats.java,ImmutableList<String> packagePath = qname.getPackages();,if (qname != null ) ImmutableList<String> packagePath = qname.getPackages();
TooManyFieldsRule.java,int val = stats.get(entry.getKey());,if (stats != null ) int val = stats.get(entry.getKey());
BeanMembersShouldSerializeRule.java,AccessNode accessNodeParent = entry.getKey().getAccessNodeParent();,if (entry != null ) AccessNode accessNodeParent = entry.getKey().getAccessNodeParent();
BeanMembersShouldSerializeRule.java,String varName = trimIfPrefix(entry.getKey().getImage());,if (trimIfPrefix(entry != null ) String varName = trimIfPrefix(entry.getKey().getImage());
AcceptanceTest.java,List<NameOccurrence> u = m.get(entry.getKey());,if (m != null ) List<NameOccurrence> u = m.get(entry.getKey());
BeanMembersShouldSerializeRule.java,AccessNode accessNodeParent = decl.getAccessNodeParent();,if (decl != null ) AccessNode accessNodeParent = decl.getAccessNodeParent();
BeanMembersShouldSerializeRule.java,String varName = trimIfPrefix(decl.getImage());,if (trimIfPrefix(decl != null ) String varName = trimIfPrefix(decl.getImage());
ClassScope.java,int usages = methodDeclarations.get(mnd).size();,if (methodDeclarations != null ) int usages = methodDeclarations.get(mnd).size();
ApexParser.java,Compilation astRoot = visitor.getTopLevel();,if (visitor != null ) Compilation astRoot = visitor.getTopLevel();
DBMSMetadata.java,sourceCodeObjects = sourceCodeObjectsStatement.executeQuery();,if (sourceCodeObjectsStatement != null ) sourceCodeObjects = sourceCodeObjectsStatement.executeQuery();
ASTLiteral.java,final String image = getImage().toLowerCase();,if (getImage() != null ) final String image = getImage().toLowerCase();
CommentContentRule.java,commentText = commentText.toUpperCase();,if (commentText != null ) commentText = commentText.toUpperCase();
AvoidFieldNameMatchingMethodNameRule.java,String varName = field.getVariableName().toLowerCase();,if (field != null ) String varName = field.getVariableName().toLowerCase();
SimpleTypedNameDeclaration.java,String lcType = typeImage.toLowerCase();,if (typeImage != null ) String lcType = typeImage.toLowerCase();
SimpleTypedNameDeclaration.java,String otherLcType = other.typeImage.toLowerCase();,if (other != null ) String otherLcType = other.typeImage.toLowerCase();
TypeInferenceResolver.java,BitSet resultBitSet = (BitSet) nextBitSet.clone();,if (nextBitSet != null ) BitSet resultBitSet = (BitSet) nextBitSet.clone();
VfUnescapeElRule.java,String name = attr.getName().toLowerCase();,if (attr != null ) String name = attr.getName().toLowerCase();
VfUnescapeElRule.java,String name = attr.getName().toLowerCase();,if (attr != null ) String name = attr.getName().toLowerCase();
VfUnescapeElRule.java,String name = attr.getName().toLowerCase();,if (attr != null ) String name = attr.getName().toLowerCase();
ApexParserOptions.java,int result = super.hashCode();,if (super != null ) int result = super.hashCode();
ForLoopCanBeForeachRule.java,String image = occ.getLocation().getImage();,if (occ != null ) String image = occ.getLocation().getImage();
AnyTokenizer.java,token = tokenizer.nextToken();,if (tokenizer != null ) token = tokenizer.nextToken();
ApexParser.java,suppressMarker = parserOptions.getSuppressMarker();,if (parserOptions != null ) suppressMarker = parserOptions.getSuppressMarker();
ProjectMemoizerTest.java,MetricMemoizer<MethodLike> op = toplevel.getOperationMemoizer(node.getQualifiedName());,if (toplevel != null ) MetricMemoizer<MethodLike> op = toplevel.getOperationMemoizer(node.getQualifiedName());
ClassTypeResolver.java,String name = node.getNameDeclaration().getTypeImage();,if (node != null ) String name = node.getNameDeclaration().getTypeImage();
AbstractPropertyDescriptorTester.java,double x = range * Math.random();,if (Math != null ) double x = range * Math.random();
CSVRendererTest.java,String report = renderer.render(list.iterator());,if (renderer != null ) String report = renderer.render(list.iterator());
CSVRendererTest.java,String report = renderer.render(list.iterator());,if (renderer != null ) String report = renderer.render(list.iterator());
XMLRendererTest.java,String report = renderer.render(list.iterator());,if (renderer != null ) String report = renderer.render(list.iterator());
XMLRendererTest.java,String report = renderer.render(list.iterator());,if (renderer != null ) String report = renderer.render(list.iterator());
XMLRendererTest.java,String report = renderer.render(list.iterator());,if (renderer != null ) String report = renderer.render(list.iterator());
XMLRendererTest.java,String report = renderer.render(list.iterator());,if (renderer != null ) String report = renderer.render(list.iterator());
MissingOverrideRule.java,ASTFormalParameters params = node.getFormalParameters();,if (node != null ) ASTFormalParameters params = node.getFormalParameters();
XmlNodeInvocationHandler.java,Node parent = node.getParentNode();,if (node != null ) Node parent = node.getParentNode();
XmlNodeInvocationHandler.java,NodeList childNodes = parent.getChildNodes();,if (parent != null ) NodeList childNodes = parent.getChildNodes();
XmlNodeInvocationHandler.java,Node parent = node.getParentNode();,if (node != null ) Node parent = node.getParentNode();
XmlNodeInvocationHandler.java,final NamedNodeMap attributes = node.getAttributes();,if (node != null ) final NamedNodeMap attributes = node.getAttributes();
ProjectMemoizerTest.java,MetricMemoizer<ASTMethodOrConstructorDeclaration> op = toplevel.getOperationMemoizer(node.getQualifiedName());,if (toplevel != null ) MetricMemoizer<ASTMethodOrConstructorDeclaration> op = toplevel.getOperationMemoizer(node.getQualifiedName());
JavaQualifiedName.java,Node parent = node.jjtGetParent();,if (node != null ) Node parent = node.jjtGetParent();
JavaQualifiedName.java,parent = parent.jjtGetParent();,if (parent != null ) parent = parent.jjtGetParent();
JavaQualifiedName.java,parent = parent.jjtGetParent();,if (parent != null ) parent = parent.jjtGetParent();
JavaQualifiedName.java,String name = clazz.getName();,if (clazz != null ) String name = clazz.getName();
JavaQualifiedName.java,ImmutableList<Integer> localIndices = ListFactory.emptyList();,if (ListFactory != null ) ImmutableList<Integer> localIndices = ListFactory.emptyList();
JavaQualifiedName.java,ImmutableList<String> classes = ListFactory.emptyList();,if (ListFactory != null ) ImmutableList<String> classes = ListFactory.emptyList();
JavaQualifiedName.java,toString = sb.toString();,if (sb != null ) toString = sb.toString();
PackageStats.java,String[] nameClasses = qname.getClasses();,if (qname != null ) String[] nameClasses = qname.getClasses();
PackageStats.java,String[] packagePath = qname.getPackages();,if (qname != null ) String[] packagePath = qname.getPackages();
JavaQualifiedName.java,toString = sb.toString();,if (sb != null ) toString = sb.toString();
ASTAnyTypeDeclaration.java,JavaQualifiedName parentQN = parent.getQualifiedName();,if (parent != null ) JavaQualifiedName parentQN = parent.getQualifiedName();
ASTClassOrInterfaceDeclaration.java,JavaQualifiedName parentQN = parent.getQualifiedName();,if (parent != null ) JavaQualifiedName parentQN = parent.getQualifiedName();
ASTAnnotationTypeDeclaration.java,JavaQualifiedName parentQN = parent.getQualifiedName();,if (parent != null ) JavaQualifiedName parentQN = parent.getQualifiedName();
ASTAnnotationTypeDeclaration.java,"qualifiedName = JavaQualifiedName.ofNestedClass(parentQN, this.getImage());","if (this != null ) qualifiedName = JavaQualifiedName.ofNestedClass(parentQN, this.getImage());"
ASTClassOrInterfaceDeclaration.java,JavaQualifiedName parentQN = parent.getQualifiedName();,if (parent != null ) JavaQualifiedName parentQN = parent.getQualifiedName();
ASTEnumDeclaration.java,JavaQualifiedName parentQN = parent.getQualifiedName();,if (parent != null ) JavaQualifiedName parentQN = parent.getQualifiedName();
ASTEnumDeclaration.java,"qualifiedName = JavaQualifiedName.ofNestedClass(parentQN, this.getImage());","if (this != null ) qualifiedName = JavaQualifiedName.ofNestedClass(parentQN, this.getImage());"
AbstractNode.java,int n = node.jjtGetNumChildren();,if (node != null ) int n = node.jjtGetNumChildren();
AttributeNode.java,final Object v = attribute.getValue();,if (attribute != null ) final Object v = attribute.getValue();
JaxenXPathRuleQuery.java,List<Step> steps = locationPath.getSteps();,if (locationPath != null ) List<Step> steps = locationPath.getSteps();
JaxenXPathRuleQuery.java,LocationPath relativeLocationPath = xpathFactory.createRelativeLocationPath();,if (xpathFactory != null ) LocationPath relativeLocationPath = xpathFactory.createRelativeLocationPath();
AbstractRuleChainVisitor.java,List<Node> nodes = nodeNameToNodes.get(node.toString());,if (nodeNameToNodes != null ) List<Node> nodes = nodeNameToNodes.get(node.toString());
JaxenXPathRuleQuery.java,List<XPath> xpaths = nodeNameToXPaths.get(node.toString());,if (nodeNameToXPaths != null ) List<XPath> xpaths = nodeNameToXPaths.get(node.toString());
XmlNodeInvocationHandler.java,String s = node.getNodeName();,if (node != null ) String s = node.getNodeName();
AttributeNode.java,Object v = attribute.getValue();,if (attribute != null ) Object v = attribute.getValue();
JaxenXPathRuleQuery.java,List<XPath> xpaths = nodeNameToXPaths.get(node.toString());,if (nodeNameToXPaths != null ) List<XPath> xpaths = nodeNameToXPaths.get(node.toString());
JaxenXPathRuleQuery.java,Expr node = pending.pop();,if (pending != null ) Expr node = pending.pop();
JaxenXPathRuleQuery.java,String propName = e.getKey().name();,if (e != null ) String propName = e.getKey().name();
SaxonXPathRuleQuery.java,String name = xpathVariable.getVariableQName().getLocalName();,if (xpathVariable != null ) String name = xpathVariable.getVariableQName().getLocalName();
SaxonXPathRuleQuery.java,"ValueRepresentation valueRepresentation = getRepresentation(entry.getKey(), entry.getValue());","if (entry != null ) ValueRepresentation valueRepresentation = getRepresentation(entry.getKey(), entry.getValue());"
SaxonXPathRuleQuery.java,root = root.jjtGetParent();,if (root != null ) root = root.jjtGetParent();
SaxonXPathRuleQuery.java,XPathStaticContext xpathStaticContext = xpathEvaluator.getStaticContext();,if (xpathEvaluator != null ) XPathStaticContext xpathStaticContext = xpathEvaluator.getStaticContext();
SaxonXPathRuleQuery.java,String name = propertyDescriptor.name();,if (propertyDescriptor != null ) String name = propertyDescriptor.name();
RuleSetUtils.java,String filename = StringUtils.chomp(ruleset.getFileName());,if (StringUtils != null ) String filename = StringUtils.chomp(ruleset.getFileName());
PreserveStackTraceRule.java,currentNode = currentNode.jjtGetParent();,if (currentNode != null ) currentNode = currentNode.jjtGetParent();
TccAttributeAccessCollector.java,currentMethodName = node.getQualifiedName().getOperation();,if (node != null ) currentMethodName = node.getQualifiedName().getOperation();
ASTClassOrInterfaceDeclaration.java,"qualifiedName = JavaQualifiedName.ofNestedClass(parentQN, this.getImage());","if (this != null ) qualifiedName = JavaQualifiedName.ofNestedClass(parentQN, this.getImage());"
RedundantFieldInitializerRule.java,value = parseInteger(literal.getImage());,if (parseInteger(literal != null ) value = parseInteger(literal.getImage());
RedundantFieldInitializerRule.java,String s = literal.getImage();,if (literal != null ) String s = literal.getImage();
RedundantFieldInitializerRule.java,String s = literal.getImage();,if (literal != null ) String s = literal.getImage();
RedundantFieldInitializerRule.java,result = result.negate();,if (result != null ) result = result.negate();
DocumentFile.java,this.filePath = file.getAbsolutePath();,if (file != null ) this.filePath = file.getAbsolutePath();
DocumentFile.java,currentGlobalOffset += scanner.nextLine().length();,if (scanner != null ) currentGlobalOffset += scanner.nextLine().length();
DocumentFileTest.java,final String actualContent = new String(stream.readAllBytes());,if (String(stream != null ) final String actualContent = new String(stream.readAllBytes());
DocumentFileTest.java,final String actualContent = new String(stream.readAllBytes());,if (String(stream != null ) final String actualContent = new String(stream.readAllBytes());
DocumentFileTest.java,final String actualContent = new String(stream.readAllBytes());,if (String(stream != null ) final String actualContent = new String(stream.readAllBytes());
DocumentFileTest.java,final String actualContent = new String(stream.readAllBytes());,if (String(stream != null ) final String actualContent = new String(stream.readAllBytes());
DocumentFileTest.java,final String actualContent = new String(stream.readAllBytes());,if (String(stream != null ) final String actualContent = new String(stream.readAllBytes());
DocumentFileTest.java,final String actualContent = new String(stream.readAllBytes());,if (String(stream != null ) final String actualContent = new String(stream.readAllBytes());
DocumentFileTest.java,final String actualContent = new String(stream.readAllBytes());,if (String(stream != null ) final String actualContent = new String(stream.readAllBytes());
DocumentFileTest.java,final String actualContent = new String(stream.readAllBytes());,if (String(stream != null ) final String actualContent = new String(stream.readAllBytes());
DocumentFileTest.java,final String actualContent = new String(stream.readAllBytes());,if (String(stream != null ) final String actualContent = new String(stream.readAllBytes());
DocumentOperationsApplierForNonOverlappingRegionsWithDocumentFileTest.java,final String actualContent = new String(stream.readAllBytes());,if (String(stream != null ) final String actualContent = new String(stream.readAllBytes());
DocumentOperationsApplierForNonOverlappingRegionsWithDocumentFileTest.java,final String actualContent = new String(stream.readAllBytes());,if (String(stream != null ) final String actualContent = new String(stream.readAllBytes());
DocumentOperationsApplierForNonOverlappingRegionsWithDocumentFileTest.java,final String actualContent = new String(stream.readAllBytes());,if (String(stream != null ) final String actualContent = new String(stream.readAllBytes());
DocumentOperationsApplierForNonOverlappingRegionsWithDocumentFileTest.java,final String actualContent = new String(stream.readAllBytes());,if (String(stream != null ) final String actualContent = new String(stream.readAllBytes());
DocumentOperationsApplierForNonOverlappingRegionsWithDocumentFileTest.java,final String actualContent = new String(stream.readAllBytes());,if (String(stream != null ) final String actualContent = new String(stream.readAllBytes());
DocumentOperationsApplierForNonOverlappingRegionsWithDocumentFileTest.java,final String actualContent = new String(stream.readAllBytes());,if (String(stream != null ) final String actualContent = new String(stream.readAllBytes());
DocumentOperationsApplierForNonOverlappingRegionsWithDocumentFileTest.java,final String actualContent = new String(stream.readAllBytes());,if (String(stream != null ) final String actualContent = new String(stream.readAllBytes());
MainDesignerController.java,XMLSettingsLoader loader = new XMLSettingsLoader(DesignerUtil.getSettingsFile());,if (XMLSettingsLoader(DesignerUtil != null ) XMLSettingsLoader loader = new XMLSettingsLoader(DesignerUtil.getSettingsFile());
MainDesignerController.java,List<LanguageVersion> supported = Arrays.asList(DesignerUtil.getSupportedLanguageVersions());,if (Arrays != null ) List<LanguageVersion> supported = Arrays.asList(DesignerUtil.getSupportedLanguageVersions());
MainDesignerController.java,XMLSettingsSaver saver = XMLSettingsSaver.forFile(DesignerUtil.getSettingsFile());,if (XMLSettingsSaver != null ) XMLSettingsSaver saver = XMLSettingsSaver.forFile(DesignerUtil.getSettingsFile());
MainDesignerController.java,Parent root = loader.load();,if (loader != null ) Parent root = loader.load();
MainDesignerController.java,String val = loaded.get(s.getKeyName());,if (loaded != null ) String val = loaded.get(s.getKeyName());
SourceEditorController.java,String source = codeEditorArea.getText();,if (codeEditorArea != null ) String source = codeEditorArea.getText();
SourceEditorController.java,Node previous = astManager.compilationUnitProperty().get();,if (astManager != null ) Node previous = astManager.compilationUnitProperty().get();
XPathPanelController.java,String xpath = xpathExpressionArea.getText();,if (xpathExpressionArea != null ) String xpath = xpathExpressionArea.getText();
ASTManager.java,LanguageVersionHandler languageVersionHandler = languageVersion.get().getLanguageVersionHandler();,if (languageVersion != null ) LanguageVersionHandler languageVersionHandler = languageVersion.get().getLanguageVersionHandler();
ASTManager.java,lastLanguageVersion = languageVersion.get();,if (languageVersion != null ) lastLanguageVersion = languageVersion.get();
DesignerUtil.java,LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();,if (languageVersion != null ) LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();
DesignerUtil.java,Parser parser = languageVersionHandler.getParser(languageVersionHandler.getDefaultParserOptions());,if (languageVersionHandler != null ) Parser parser = languageVersionHandler.getParser(languageVersionHandler.getDefaultParserOptions());
XMLSettingsLoader.java,DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();,if (DocumentBuilderFactory != null ) DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();
XMLSettingsSaver.java,DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();,if (DocumentBuilderFactory != null ) DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();
XMLSettingsSaver.java,documentBuilder = documentBuilderFactory.newDocumentBuilder();,if (documentBuilderFactory != null ) documentBuilder = documentBuilderFactory.newDocumentBuilder();
XMLSettingsSaver.java,document = documentBuilder.newDocument();,if (documentBuilder != null ) document = documentBuilder.newDocument();
XMLSettingsSaver.java,TransformerFactory transformerFactory = TransformerFactory.newInstance();,if (TransformerFactory != null ) TransformerFactory transformerFactory = TransformerFactory.newInstance();
XMLSettingsSaver.java,Transformer transformer = transformerFactory.newTransformer();,if (transformerFactory != null ) Transformer transformer = transformerFactory.newTransformer();
ApexCRUDViolationRule.java,TypeRef a = field.getNode().getTypeName();,if (field != null ) TypeRef a = field.getNode().getTypeName();
ApexCRUDViolationRule.java,List<Identifier> a = ref.getNode().getJadtIdentifiers();,if (ref != null ) List<Identifier> a = ref.getNode().getJadtIdentifiers();
ApexCRUDViolationRule.java,List<Identifier> identifiers = reference.getNode().getJadtIdentifiers();,if (reference != null ) List<Identifier> identifiers = reference.getNode().getJadtIdentifiers();
TypeHelper.java,superC = superC.getSuperclass();,if (superC != null ) superC = superC.getSuperclass();
AttributeNode.java,value = EmptySequence.getInstance();,if (EmptySequence != null ) value = EmptySequence.getInstance();
SaxonXPathRuleQuery.java,Object value = entry.getValue();,if (entry != null ) Object value = entry.getValue();
RuleDocGenerator.java,List<RuleSet> additionalRulesetsForLanguage = sortedAdditionalRulesets.get(entry.getKey());,if (sortedAdditionalRulesets != null ) List<RuleSet> additionalRulesetsForLanguage = sortedAdditionalRulesets.get(entry.getKey());
RuleFactory.java,Set<PropertyDescriptorField> valueKeys = pdFactory.expectableFields();,if (pdFactory != null ) Set<PropertyDescriptorField> valueKeys = pdFactory.expectableFields();
RuleFactory.java,String valueStr = propertyElement.getAttribute(field.attributeName());,if (propertyElement != null ) String valueStr = propertyElement.getAttribute(field.attributeName());
RuleFactory.java,String nodeName = node.getNodeName();,if (node != null ) String nodeName = node.getNodeName();
RuleSetFactory.java,final NodeList nodeList = parentNode.getChildNodes();,if (parentNode != null ) final NodeList nodeList = parentNode.getChildNodes();
RuleSetFactory.java,String typeId = propertyElement.getAttribute(PropertyDescriptorField.TYPE.attributeName());,if (propertyElement != null ) String typeId = propertyElement.getAttribute(PropertyDescriptorField.TYPE.attributeName());
RuleSetFactory.java,String name = propertyElement.getAttribute(PropertyDescriptorField.NAME.attributeName());,if (propertyElement != null ) String name = propertyElement.getAttribute(PropertyDescriptorField.NAME.attributeName());
RuleSetFactory.java,NamedNodeMap atts = propertyElement.getAttributes();,if (propertyElement != null ) NamedNodeMap atts = propertyElement.getAttributes();
RuleSetFactory.java,Language language = rule.getLanguage();,if (rule != null ) Language language = rule.getLanguage();
RuleSetFactory.java,final NodeList nodeList = ruleElement.getChildNodes();,if (ruleElement != null ) final NodeList nodeList = ruleElement.getChildNodes();
RuleSetFactory.java,String nodeName = node.getNodeName();,if (node != null ) String nodeName = node.getNodeName();
NPathComplexityRule.java,children += element.jjtGetNumChildren();,if (element != null ) children += element.jjtGetNumChildren();
NPathComplexityRule.java,children += element.jjtGetNumChildren();,if (element != null ) children += element.jjtGetNumChildren();
MainDesignerController.java,File file = chooser.showOpenDialog(designerApp.getMainStage());,if (chooser != null ) File file = chooser.showOpenDialog(designerApp.getMainStage());
ClassTypeResolver.java,previousType = JavaTypeDefinition.forClass(node.getType());,if (JavaTypeDefinition != null ) previousType = JavaTypeDefinition.forClass(node.getType());
FileAnalysisCache.java,classpathChecksum = inputStream.readLong();,if (inputStream != null ) classpathChecksum = inputStream.readLong();
ResourceLoader.java,final URLConnection connection = resource.openConnection();,if (resource != null ) final URLConnection connection = resource.openConnection();
ResourceLoader.java,final InputStream inputStream = connection.getInputStream();,if (connection != null ) final InputStream inputStream = connection.getInputStream();
RuleSetFactory.java,Set<PropertyDescriptorField> valueKeys = pdFactory.expectableFields();,if (pdFactory != null ) Set<PropertyDescriptorField> valueKeys = pdFactory.expectableFields();
RuleSetFactory.java,String valueStr = propertyElement.getAttribute(field.attributeName());,if (propertyElement != null ) String valueStr = propertyElement.getAttribute(field.attributeName());
AbstractPropertyDescriptorFactory.java,characterStr = valuesById.get(DELIMITER).trim();,if (valuesById != null ) characterStr = valuesById.get(DELIMITER).trim();
PropertyBuilderConversionWrapper.java,characterStr = valuesById.get(DELIMITER).trim();,if (valuesById != null ) characterStr = valuesById.get(DELIMITER).trim();
SourceEditorController.java,TreeItem<Node> selected = astTreeView.getSelectionModel().getSelectedItem();,if (astTreeView != null ) TreeItem<Node> selected = astTreeView.getSelectionModel().getSelectedItem();
SignatureDeclareThrowsExceptionRule.java,List<ASTName> exceptionList = Collections.emptyList();,if (Collections != null ) List<ASTName> exceptionList = Collections.emptyList();
SignatureDeclareThrowsException.java,clazz = clazz.getSuperclass();,if (clazz != null ) clazz = clazz.getSuperclass();
SignatureDeclareThrowsException.java,Node parent = exception.jjtGetParent().jjtGetParent();,if (exception != null ) Node parent = exception.jjtGetParent().jjtGetParent();
UnusedImportsRule.java,className = importedType.getImage();,if (importedType != null ) className = importedType.getImage();
UnusedImports.java,Iterator<ImportWrapper> it = imports.iterator();,if (imports != null ) Iterator<ImportWrapper> it = imports.iterator();
UnusedImports.java,ImportWrapper i = it.next();,if (it != null ) ImportWrapper i = it.next();
LooseCouplingRule.java,String typeName = node.getImage();,if (node != null ) String typeName = node.getImage();
AvoidHardcodingIdRule.java,Object o = literalNode.getNode().getLiteral();,if (literalNode != null ) Object o = literalNode.getNode().getLiteral();
RedundantFieldInitializerRule.java,value = Double.valueOf(literal.getImage());,if (Double != null ) value = Double.valueOf(literal.getImage());
MainDesignerController.java,ObservableList<String> versionItems = xpathVersionChoiceBox.getItems();,if (xpathVersionChoiceBox != null ) ObservableList<String> versionItems = xpathVersionChoiceBox.getItems();
MainDesignerController.java,LanguageVersion[] supported = DesignerUtil.getSupportedLanguageVersions();,if (DesignerUtil != null ) LanguageVersion[] supported = DesignerUtil.getSupportedLanguageVersions();
MainDesignerController.java,ObservableList<LanguageVersion> items = languageChoiceBox.getItems();,if (languageChoiceBox != null ) ObservableList<LanguageVersion> items = languageChoiceBox.getItems();
ManagedSubscription.java,executorService = Executors.newSingleThreadExecutor();,if (Executors != null ) executorService = Executors.newSingleThreadExecutor();
DesignerWindowController.java,private ExecutorService executorService = Executors.newSingleThreadExecutor();,if (Executors != null ) private ExecutorService executorService = Executors.newSingleThreadExecutor();
DesignerWindowController.java,CustomCodeArea area = view.getCodeEditorArea();,if (view != null ) CustomCodeArea area = view.getCodeEditorArea();
DesignerWindowController.java,ObservableList<String> xpathVersionChoiceBox = view.getXpathVersionChoiceBox().getItems();,if (view != null ) ObservableList<String> xpathVersionChoiceBox = view.getXpathVersionChoiceBox().getItems();
DesignerWindowController.java,TreeView<Node> astTreeView = view.getAstTreeView();,if (view != null ) TreeView<Node> astTreeView = view.getAstTreeView();
DesignerWindowController.java,TreeView<Node> astTreeView = view.getAstTreeView();,if (view != null ) TreeView<Node> astTreeView = view.getAstTreeView();
DesignerWindowController.java,LanguageVersion[] supported = DesignerUtil.getSupportedLanguageVersions();,if (DesignerUtil != null ) LanguageVersion[] supported = DesignerUtil.getSupportedLanguageVersions();
DesignerWindowController.java,ObservableList<LanguageVersion> items = view.getLanguageChoiceBox().getItems();,if (view != null ) ObservableList<LanguageVersion> items = view.getLanguageChoiceBox().getItems();
DesignerWindowController.java,String source = view.getCodeEditorArea().getText();,if (view != null ) String source = view.getCodeEditorArea().getText();
DesignerWindowController.java,LanguageVersion guess = DesignerUtil.getLanguageVersionFromExtension(file.getName());,if (DesignerUtil != null ) LanguageVersion guess = DesignerUtil.getLanguageVersionFromExtension(file.getName());
DesignerWindowController.java,DesignerWindowSettings setting = DesignerWindowSettings.ofKeyName(e.getKey());,if (DesignerWindowSettings != null ) DesignerWindowSettings setting = DesignerWindowSettings.ofKeyName(e.getKey());
DesignerWindowController.java,ListView<Node> xpathResultsListView = view.getXpathResultListView();,if (view != null ) ListView<Node> xpathResultsListView = view.getXpathResultListView();
DesignerWindowController.java,String xpath = view.getXpathExpressionArea().getText();,if (view != null ) String xpath = view.getXpathExpressionArea().getText();
ASTManager.java,lastLanguageVersion = languageVersion.get();,if (languageVersion != null ) lastLanguageVersion = languageVersion.get();
DesignerUtil.java,ObservableList<String> result = FXCollections.observableArrayList();,if (FXCollections != null ) ObservableList<String> result = FXCollections.observableArrayList();
DesignerUtil.java,Attribute attribute = attributeAxisIterator.next();,if (attributeAxisIterator != null ) Attribute attribute = attributeAxisIterator.next();
StyleContext.java,lastOffset = bound.getPosition();,if (bound != null ) lastOffset = bound.getPosition();
StyleContext.java,int totalLength = codeArea.getLength();,if (codeArea != null ) int totalLength = codeArea.getLength();
RuleSetSchemaTest.java,DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();,if (DocumentBuilderFactory != null ) DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
RuleSetSchemaTest.java,DocumentBuilder builder = dbf.newDocumentBuilder();,if (dbf != null ) DocumentBuilder builder = dbf.newDocumentBuilder();
StyleContext.java,lastOffset = bound.getOffset();,if (bound != null ) lastOffset = bound.getOffset();
DesignerWindowPresenter.java,File file = chooser.showOpenDialog(Designer.getMainStage());,if (chooser != null ) File file = chooser.showOpenDialog(Designer.getMainStage());
DesignerWindowPresenter.java,Toggle selected = view.getBottomTabsToggleGroup().getSelectedToggle();,if (view != null ) Toggle selected = view.getBottomTabsToggleGroup().getSelectedToggle();
DesignerWindow.java,final double bottomEditorPaneMinHeightWhenMaximized = violationsTitledPane.getPrefHeight();,if (violationsTitledPane != null ) final double bottomEditorPaneMinHeightWhenMaximized = violationsTitledPane.getPrefHeight();
DesignerWindow.java,final double bottomEditorPaneMinHeightWhenNotMaximized = violationsTitledPane.getPrefHeight();,if (violationsTitledPane != null ) final double bottomEditorPaneMinHeightWhenNotMaximized = violationsTitledPane.getPrefHeight();
SyntaxHighlighter.java,styleClass = groupToClass.getValue();,if (groupToClass != null ) styleClass = groupToClass.getValue();
SyntaxHighlighter.java,lastKwEnd = matcher.end();,if (matcher != null ) lastKwEnd = matcher.end();
DesignerWindowPresenter.java,ObservableList<MenuItem> openRecentMenuItems = view.getOpenRecentMenu().getItems();,if (view != null ) ObservableList<MenuItem> openRecentMenuItems = view.getOpenRecentMenu().getItems();
DesignerWindowPresenter.java,ToggleGroup tg = view.getXpathVersionToggleGroup();,if (view != null ) ToggleGroup tg = view.getXpathVersionToggleGroup();
DesignerWindowPresenter.java,ToggleGroup xpathVersionToggleGroup = view.getXpathVersionToggleGroup();,if (view != null ) ToggleGroup xpathVersionToggleGroup = view.getXpathVersionToggleGroup();
StyleContext.java,executorService = Executors.newSingleThreadExecutor();,if (Executors != null ) executorService = Executors.newSingleThreadExecutor();
DesignerWindowPresenter.java,ObservableList<MenuItem> items = view.getLanguageMenu().getItems();,if (view != null ) ObservableList<MenuItem> items = view.getLanguageMenu().getItems();
DesignerWindowPresenter.java,RadioMenuItem item = new RadioMenuItem(version.getShortName());,if (RadioMenuItem(version != null ) RadioMenuItem item = new RadioMenuItem(version.getShortName());
DesignerWindowPresenter.java,RadioMenuItem item = new RadioMenuItem(version.getShortName());,if (RadioMenuItem(version != null ) RadioMenuItem item = new RadioMenuItem(version.getShortName());
SyntaxHighlightingComputer.java,styleClass = groupToClass.getValue();,if (groupToClass != null ) styleClass = groupToClass.getValue();
SyntaxHighlightingComputer.java,lastKwEnd = matcher.end();,if (matcher != null ) lastKwEnd = matcher.end();
CodeClimateRenderer.java,String porpertyName = property.name();,if (property != null ) String porpertyName = property.name();
Benchmarker.java,Reader reader = new InputStreamReader(dataSource.getInputStream());,if (InputStreamReader(dataSource != null ) Reader reader = new InputStreamReader(dataSource.getInputStream());
PmdRunnable.java,InputStream stream = new BufferedInputStream(dataSource.getInputStream());,if (BufferedInputStream(dataSource != null ) InputStream stream = new BufferedInputStream(dataSource.getInputStream());
RuleTst.java,DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();,if (DocumentBuilderFactory != null ) DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();
AbstractAnalysisCache.java,classLoaderChecksum = Arrays.hashCode(urlClassLoader.getURLs());,if (Arrays != null ) classLoaderChecksum = Arrays.hashCode(urlClassLoader.getURLs());
PMDTestRunner.java,List<Rule> rules = new ArrayList<>(test.getRules());,if (ArrayList<>(test != null ) List<Rule> rules = new ArrayList<>(test.getRules());
PMDTestRunner.java,Description ruleDescription = Description.createSuiteDescription(r.getName());,if (Description != null ) Description ruleDescription = Description.createSuiteDescription(r.getName());
PMDTestRunner.java,boolean regressionTestMode = TestDescriptor.inRegressionTestMode();,if (TestDescriptor != null ) boolean regressionTestMode = TestDescriptor.inRegressionTestMode();
PMDTestRunner.java,Iterator<TestDescriptor> it = allTests.iterator();,if (allTests != null ) Iterator<TestDescriptor> it = allTests.iterator();
PMDTestRunner.java,TestDescriptor t = it.next();,if (it != null ) TestDescriptor t = it.next();
DesignerWindowPresenter.java,n = model.getCompilationUnit();,if (model != null ) n = model.getCompilationUnit();
ApexMultifileVisitorFacade.java,ApexMetricsFacade facade = ApexMetrics.getFacade();,if (ApexMetrics != null ) ApexMetricsFacade facade = ApexMetrics.getFacade();
ApexMultifileVisitorFacade.java,ApexMultifileVisitor visitor = new ApexMultifileVisitor(facade.getProjectMirror());,if (ApexMultifileVisitor(facade != null ) ApexMultifileVisitor visitor = new ApexMultifileVisitor(facade.getProjectMirror());
ApexMultifileVisitorTest.java,final ApexSignatureMatcher toplevel = ApexMetrics.getFacade().getProjectMirror();,if (ApexMetrics != null ) final ApexSignatureMatcher toplevel = ApexMetrics.getFacade().getProjectMirror();
MultifileVisitorFacade.java,PackageStats projectMirror = MultifileFacade.getTopLevelPackageStats();,if (MultifileFacade != null ) PackageStats projectMirror = MultifileFacade.getTopLevelPackageStats();
ClassStatsTest.java,final ProjectMirror toplevel = MultifileFacade.getTopLevelPackageStats();,if (MultifileFacade != null ) final ProjectMirror toplevel = MultifileFacade.getTopLevelPackageStats();
JavaMultifileVisitorTest.java,final ProjectMirror toplevel = MultifileFacade.getTopLevelPackageStats();,if (MultifileFacade != null ) final ProjectMirror toplevel = MultifileFacade.getTopLevelPackageStats();
JavaMultifileVisitorTest.java,final ProjectMirror toplevel = MultifileFacade.getTopLevelPackageStats();,if (MultifileFacade != null ) final ProjectMirror toplevel = MultifileFacade.getTopLevelPackageStats();
ASTTreeNode.java,Node parent = node.jjtGetParent();,if (node != null ) Node parent = node.jjtGetParent();
ASTTreeNode.java,LanguageVersionHandler languageVersionHandler = controller.getLanguageVersionHandler();,if (controller != null ) LanguageVersionHandler languageVersionHandler = controller.getLanguageVersionHandler();
ASTTreeNode.java,Attribute attribute = attributeAxisIterator.next();,if (attributeAxisIterator != null ) Attribute attribute = attributeAxisIterator.next();
DesignerController.java,LanguageVersion[] supported = DesignerUtil.getSupportedLanguageVersions();,if (DesignerUtil != null ) LanguageVersion[] supported = DesignerUtil.getSupportedLanguageVersions();
DesignerController.java,ObservableList<MenuItem> items = languageMenu.getItems();,if (languageMenu != null ) ObservableList<MenuItem> items = languageMenu.getItems();
DesignerController.java,RadioMenuItem item = new RadioMenuItem(version.getShortName());,if (RadioMenuItem(version != null ) RadioMenuItem item = new RadioMenuItem(version.getShortName());
DesignerController.java,ObservableList<Node> xpathResults = xpathResultListView.getItems();,if (xpathResultListView != null ) ObservableList<Node> xpathResults = xpathResultListView.getItems();
DesignerController.java,Parser parser = languageVersionHandler.getParser(languageVersionHandler.getDefaultParserOptions());,if (languageVersionHandler != null ) Parser parser = languageVersionHandler.getParser(languageVersionHandler.getDefaultParserOptions());
DesignerController.java,double x = event.getScreenX();,if (event != null ) double x = event.getScreenX();
DesignerController.java,double y = event.getScreenY();,if (event != null ) double y = event.getScreenY();
RuleSetFactory.java,DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();,if (DocumentBuilderFactory != null ) DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();
RuleSetFactory.java,DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();,if (DocumentBuilderFactory != null ) DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();
ASTTreeItem.java,ObservableList<String> result = FXCollections.observableArrayList();,if (FXCollections != null ) ObservableList<String> result = FXCollections.observableArrayList();
ASTTreeItem.java,Attribute attribute = attributeAxisIterator.next();,if (attributeAxisIterator != null ) Attribute attribute = attributeAxisIterator.next();
ASTTreeItem.java,String s = getValue().toString();,if (getValue() != null ) String s = getValue().toString();
LanguageRegistry.java,Iterator<Language> iterator = languageLoader.iterator();,if (languageLoader != null ) Iterator<Language> iterator = languageLoader.iterator();
LanguageRegistry.java,Language language = iterator.next();,if (iterator != null ) Language language = iterator.next();
DesignerController.java,LanguageVersion[] versions = DesignerUtil.getSupportedLanguageVersions();,if (DesignerUtil != null ) LanguageVersion[] versions = DesignerUtil.getSupportedLanguageVersions();
JavaQualifiedName.java,String name = clazz.getName();,if (clazz != null ) String name = clazz.getName();
ClassStatsTest.java,final JavaOperationSigMask opSigMask = new JavaOperationSigMask().coverAbstract();,if (JavaOperationSigMask() != null ) final JavaOperationSigMask opSigMask = new JavaOperationSigMask().coverAbstract();
SourceCodeProcessor.java,long start = System.nanoTime();,if (System != null ) long start = System.nanoTime();
SourceCodeProcessor.java,long end = System.nanoTime();,if (System != null ) long end = System.nanoTime();
JavaMetricsVisitorFacade.java,JavaMetricsFacade facade = JavaMetrics.getFacade();,if (JavaMetrics != null ) JavaMetricsFacade facade = JavaMetrics.getFacade();
JavaMetricsVisitorFacade.java,JavaMetricsVisitor visitor = new JavaMetricsVisitor(facade.getLanguageSpecificProjectMemoizer());,if (JavaMetricsVisitor(facade != null ) JavaMetricsVisitor visitor = new JavaMetricsVisitor(facade.getLanguageSpecificProjectMemoizer());
ClassStatsTest.java,final ProjectMirror toplevel = MultifileFacade.getProjectMirror();,if (MultifileFacade != null ) final ProjectMirror toplevel = MultifileFacade.getProjectMirror();
JavaMultifileVisitorTest.java,final ProjectMirror toplevel = MultifileFacade.getProjectMirror();,if (MultifileFacade != null ) final ProjectMirror toplevel = MultifileFacade.getProjectMirror();
JavaMultifileVisitorTest.java,final ProjectMirror toplevel = MultifileFacade.getProjectMirror();,if (MultifileFacade != null ) final ProjectMirror toplevel = MultifileFacade.getProjectMirror();
JavaMetricsVisitorTest.java,final JavaSignatureMatcher toplevel = JavaMetrics.getFacade().getTopLevelPackageStats();,if (JavaMetrics != null ) final JavaSignatureMatcher toplevel = JavaMetrics.getFacade().getTopLevelPackageStats();
JavaMetricsVisitorTest.java,final JavaSignatureMatcher toplevel = JavaMetrics.getFacade().getTopLevelPackageStats();,if (JavaMetrics != null ) final JavaSignatureMatcher toplevel = JavaMetrics.getFacade().getTopLevelPackageStats();
JavaMetricsVisitorTest.java,final JavaSignatureMatcher toplevel = JavaMetrics.getFacade().getTopLevelPackageStats();,if (JavaMetrics != null ) final JavaSignatureMatcher toplevel = JavaMetrics.getFacade().getTopLevelPackageStats();
JavaMetricsVisitorTest.java,LanguageVersionHandler handler = ParserTstUtil.getDefaultLanguageVersionHandler();,if (ParserTstUtil != null ) LanguageVersionHandler handler = ParserTstUtil.getDefaultLanguageVersionHandler();
GodClassRule.java,image = name.getImage();,if (name != null ) image = name.getImage();
GodClassRule.java,int methodCount = methodAttributeAccess.size();,if (methodAttributeAccess != null ) int methodCount = methodAttributeAccess.size();
GodClassRule.java,List<String> methods = new ArrayList<>(methodAttributeAccess.keySet());,if (ArrayList<>(methodAttributeAccess != null ) List<String> methods = new ArrayList<>(methodAttributeAccess.keySet());
GodClassRule.java,int methodCount = methods.size();,if (methods != null ) int methodCount = methods.size();
GodClassRule.java,variableName = name.getImage();,if (name != null ) variableName = name.getImage();
GodClassRule.java,"result = findVariableDeclaration(variableName, scope.getParent());","if (scope != null ) result = findVariableDeclaration(variableName, scope.getParent());"
JavaTypeDefinition.java,typeParameters = clazz.getSuperclass().getTypeParameters();,if (clazz != null ) typeParameters = clazz.getSuperclass().getTypeParameters();
JavaTypeDefinition.java,typeParameters = clazz.getTypeParameters();,if (clazz != null ) typeParameters = clazz.getTypeParameters();
JavaTypeDefinition.java,this.genericArgs = Collections.emptyList();,if (Collections != null ) this.genericArgs = Collections.emptyList();
JavaTypeDefinition.java,enclosingClass = forClass(clazz.getEnclosingClass());,if (forClass(clazz != null ) enclosingClass = forClass(clazz.getEnclosingClass());
MetricOptions.java,Set<MetricOption> options = version.getOptions();,if (version != null ) Set<MetricOption> options = version.getOptions();
CycloMetric.java,Set<MetricOption> options = version.getOptions();,if (version != null ) Set<MetricOption> options = version.getOptions();
ParserTstUtil.java,LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();,if (languageVersion != null ) LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();
CycloMetric.java,BooleanExpressionType type = sub.getNode().getBooleanExpressionType();,if (sub != null ) BooleanExpressionType type = sub.getNode().getBooleanExpressionType();
ForLoopShouldBeForeachRule.java,"VariableNameDeclaration iterableDeclaration = findDeclaration(iterableName, node.getScope());","if (node != null ) VariableNameDeclaration iterableDeclaration = findDeclaration(iterableName, node.getScope());"
RuleDocGenerator.java,Iterator<RuleSet> registeredRuleSets = ruleSetFactory.getRegisteredRuleSets();,if (ruleSetFactory != null ) Iterator<RuleSet> registeredRuleSets = ruleSetFactory.getRegisteredRuleSets();
RuleDocGenerator.java,RuleSet ruleset = registeredRuleSets.next();,if (registeredRuleSets != null ) RuleSet ruleset = registeredRuleSets.next();
ApexMetricsVisitorTest.java,final ApexSignatureMatcher toplevel = ApexMetrics.getApexProjectMirror();,if (ApexMetrics != null ) final ApexSignatureMatcher toplevel = ApexMetrics.getApexProjectMirror();
ApexProjectMirrorTest.java,final ApexProjectMirror toplevel = ApexMetrics.getApexProjectMirror();,if (ApexMetrics != null ) final ApexProjectMirror toplevel = ApexMetrics.getApexProjectMirror();
ApexProjectMirrorTest.java,MetricMemoizer<ASTMethod> op = toplevel.getOperationStats(node.getQualifiedName());,if (toplevel != null ) MetricMemoizer<ASTMethod> op = toplevel.getOperationStats(node.getQualifiedName());
ASTAnnotationTypeDeclaration.java,"qualifiedName = JavaQualifiedName.makeNestedClassOf(parentQN, this.getImage());","if (this != null ) qualifiedName = JavaQualifiedName.makeNestedClassOf(parentQN, this.getImage());"
ASTClassOrInterfaceDeclaration.java,"qualifiedName = JavaQualifiedName.makeNestedClassOf(parentQN, this.getImage());","if (this != null ) qualifiedName = JavaQualifiedName.makeNestedClassOf(parentQN, this.getImage());"
ASTEnumDeclaration.java,"qualifiedName = JavaQualifiedName.makeNestedClassOf(parentQN, this.getImage());","if (this != null ) qualifiedName = JavaQualifiedName.makeNestedClassOf(parentQN, this.getImage());"
AbstractMetricsComputer.java,MetricMemoizer<O> opStats = stats.getOperationStats(op.getQualifiedName());,if (stats != null ) MetricMemoizer<O> opStats = stats.getOperationStats(op.getQualifiedName());
JavaMetricsVisitorTest.java,final JavaSignatureMatcher toplevel = JavaMetrics.getTopLevelPackageStats();,if (JavaMetrics != null ) final JavaSignatureMatcher toplevel = JavaMetrics.getTopLevelPackageStats();
JavaMetricsVisitorTest.java,final JavaSignatureMatcher toplevel = JavaMetrics.getTopLevelPackageStats();,if (JavaMetrics != null ) final JavaSignatureMatcher toplevel = JavaMetrics.getTopLevelPackageStats();
JavaMetricsVisitorTest.java,final JavaSignatureMatcher toplevel = JavaMetrics.getTopLevelPackageStats();,if (JavaMetrics != null ) final JavaSignatureMatcher toplevel = JavaMetrics.getTopLevelPackageStats();
PackageStatsTest.java,final PackageStats toplevel = JavaMetrics.getTopLevelPackageStats();,if (JavaMetrics != null ) final PackageStats toplevel = JavaMetrics.getTopLevelPackageStats();
PackageStatsTest.java,MetricMemoizer<ASTMethodOrConstructorDeclaration> op = toplevel.getOperationStats(node.getQualifiedName());,if (toplevel != null ) MetricMemoizer<ASTMethodOrConstructorDeclaration> op = toplevel.getOperationStats(node.getQualifiedName());
PackageStatsTest.java,MetricMemoizer<ASTAnyTypeDeclaration> clazz = toplevel.getClassStats(node.getQualifiedName());,if (toplevel != null ) MetricMemoizer<ASTAnyTypeDeclaration> clazz = toplevel.getClassStats(node.getQualifiedName());
DataStructureTest.java,JavaQualifiedName qname = node.getQualifiedName();,if (node != null ) JavaQualifiedName qname = node.getQualifiedName();
DataStructureTest.java,final PackageStats toplevel = JavaMetrics.getTopLevelPackageStats();,if (JavaMetrics != null ) final PackageStats toplevel = JavaMetrics.getTopLevelPackageStats();
DataStructureTest.java,MetricMemoizer<ASTMethodOrConstructorDeclaration> op = toplevel.getOperationStats(node.getQualifiedName());,if (toplevel != null ) MetricMemoizer<ASTMethodOrConstructorDeclaration> op = toplevel.getOperationStats(node.getQualifiedName());
DataStructureTest.java,MetricMemoizer<ASTAnyTypeDeclaration> clazz = toplevel.getClassStats(node.getQualifiedName());,if (toplevel != null ) MetricMemoizer<ASTAnyTypeDeclaration> clazz = toplevel.getClassStats(node.getQualifiedName());
ApexProjectMirrorTest.java,MetricMemoizer<ASTUserClass> clazz = toplevel.getClassStats(node.getQualifiedName());,if (toplevel != null ) MetricMemoizer<ASTUserClass> clazz = toplevel.getClassStats(node.getQualifiedName());
RuleDocGenerator.java,List<Rule> sortedRules = new ArrayList<>(ruleset.getRules());,if (ArrayList<>(ruleset != null ) List<Rule> sortedRules = new ArrayList<>(ruleset.getRules());
DataStructureTest.java,final JavaProjectMirror toplevel = JavaMetrics.getJavaProjectMirror();,if (JavaMetrics != null ) final JavaProjectMirror toplevel = JavaMetrics.getJavaProjectMirror();
JavaMetricsVisitorTest.java,final JavaProjectMirror toplevel = JavaMetrics.getJavaProjectMirror();,if (JavaMetrics != null ) final JavaProjectMirror toplevel = JavaMetrics.getJavaProjectMirror();
JavaMetricsVisitorTest.java,final JavaProjectMirror toplevel = JavaMetrics.getJavaProjectMirror();,if (JavaMetrics != null ) final JavaProjectMirror toplevel = JavaMetrics.getJavaProjectMirror();
JavaMetricsVisitorTest.java,final JavaProjectMirror toplevel = JavaMetrics.getJavaProjectMirror();,if (JavaMetrics != null ) final JavaProjectMirror toplevel = JavaMetrics.getJavaProjectMirror();
DataStructureTest.java,final PackageStats toplevel = JavaMetrics.getTopLevelPackageStats();,if (JavaMetrics != null ) final PackageStats toplevel = JavaMetrics.getTopLevelPackageStats();
JavaMetricsVisitorTest.java,final PackageStats toplevel = JavaMetrics.getTopLevelPackageStats();,if (JavaMetrics != null ) final PackageStats toplevel = JavaMetrics.getTopLevelPackageStats();
JavaMetricsVisitorTest.java,final PackageStats toplevel = JavaMetrics.getTopLevelPackageStats();,if (JavaMetrics != null ) final PackageStats toplevel = JavaMetrics.getTopLevelPackageStats();
JavaMetricsVisitorTest.java,final PackageStats toplevel = JavaMetrics.getTopLevelPackageStats();,if (JavaMetrics != null ) final PackageStats toplevel = JavaMetrics.getTopLevelPackageStats();
JavaMetricsFacade.java,JavaQualifiedName qname = node.getQualifiedName();,if (node != null ) JavaQualifiedName qname = node.getQualifiedName();
PackageStats.java,JavaQualifiedName qname = node.getQualifiedName();,if (node != null ) JavaQualifiedName qname = node.getQualifiedName();
ASTAnnotationTypeDeclaration.java,QualifiedName parentQN = parent.getQualifiedName();,if (parent != null ) QualifiedName parentQN = parent.getQualifiedName();
ASTAnnotationTypeDeclaration.java,"qualifiedName = QualifiedName.makeNestedClassOf(parentQN, this.getImage());","if (this != null ) qualifiedName = QualifiedName.makeNestedClassOf(parentQN, this.getImage());"
ASTClassOrInterfaceDeclaration.java,QualifiedName parentQN = parent.getQualifiedName();,if (parent != null ) QualifiedName parentQN = parent.getQualifiedName();
ASTClassOrInterfaceDeclaration.java,"qualifiedName = QualifiedName.makeNestedClassOf(parentQN, this.getImage());","if (this != null ) qualifiedName = QualifiedName.makeNestedClassOf(parentQN, this.getImage());"
ASTEnumDeclaration.java,QualifiedName parentQN = parent.getQualifiedName();,if (parent != null ) QualifiedName parentQN = parent.getQualifiedName();
ASTEnumDeclaration.java,"qualifiedName = QualifiedName.makeNestedClassOf(parentQN, this.getImage());","if (this != null ) qualifiedName = QualifiedName.makeNestedClassOf(parentQN, this.getImage());"
PackageStats.java,QualifiedName qname = node.getQualifiedName();,if (node != null ) QualifiedName qname = node.getQualifiedName();
QualifiedNameTest.java,QualifiedName qname = coid.getQualifiedName();,if (coid != null ) QualifiedName qname = coid.getQualifiedName();
QualifiedNameTest.java,QualifiedName qname = coid.getQualifiedName();,if (coid != null ) QualifiedName qname = coid.getQualifiedName();
QualifiedNameTest.java,QualifiedName qname = coid.getQualifiedName();,if (coid != null ) QualifiedName qname = coid.getQualifiedName();
QualifiedNameTest.java,QualifiedName qname = coid.getQualifiedName();,if (coid != null ) QualifiedName qname = coid.getQualifiedName();
QualifiedNameTest.java,QualifiedName qname = coid.getQualifiedName();,if (coid != null ) QualifiedName qname = coid.getQualifiedName();
QualifiedNameTest.java,QualifiedName qname = coid.getQualifiedName();,if (coid != null ) QualifiedName qname = coid.getQualifiedName();
QualifiedNameTest.java,QualifiedName qname = coid.getQualifiedName();,if (coid != null ) QualifiedName qname = coid.getQualifiedName();
QualifiedNameTest.java,QualifiedName qname = declaration.getQualifiedName();,if (declaration != null ) QualifiedName qname = declaration.getQualifiedName();
QualifiedNameTest.java,QualifiedName qname = declaration.getQualifiedName();,if (declaration != null ) QualifiedName qname = declaration.getQualifiedName();
QualifiedNameTest.java,QualifiedName qname = declaration.getQualifiedName();,if (declaration != null ) QualifiedName qname = declaration.getQualifiedName();
DataStructureTest.java,QualifiedName qname = node.getQualifiedName();,if (node != null ) QualifiedName qname = node.getQualifiedName();
MethodTypeResolution.java,JavaTypeDefinition returnType = context.resolveTypeDefinition(method.getGenericReturnType());,if (context != null ) JavaTypeDefinition returnType = context.resolveTypeDefinition(method.getGenericReturnType());
DefaultNpathVisitor.java,complexity *= child.getComplexity();,if (child != null ) complexity *= child.getComplexity();
DataStructureTest.java,final JavaPackageStats toplevel = JavaMetrics.getTopLevelPackageStats();,if (JavaMetrics != null ) final JavaPackageStats toplevel = JavaMetrics.getTopLevelPackageStats();
JavaMetricsVisitorTest.java,final JavaPackageStats toplevel = JavaMetrics.getTopLevelPackageStats();,if (JavaMetrics != null ) final JavaPackageStats toplevel = JavaMetrics.getTopLevelPackageStats();
JavaMetricsVisitorTest.java,final JavaPackageStats toplevel = JavaMetrics.getTopLevelPackageStats();,if (JavaMetrics != null ) final JavaPackageStats toplevel = JavaMetrics.getTopLevelPackageStats();
JavaMetricsVisitorTest.java,final JavaPackageStats toplevel = JavaMetrics.getTopLevelPackageStats();,if (JavaMetrics != null ) final JavaPackageStats toplevel = JavaMetrics.getTopLevelPackageStats();
ClasspathClassLoader.java,StringBuilder sb = new StringBuilder(getClass().getSimpleName());,if (StringBuilder(getClass() != null ) StringBuilder sb = new StringBuilder(getClass().getSimpleName());
CreateXMLRulePanel.java,boolean hasXPathQuery = StringUtil.isNotEmpty(xpathQueryArea.getText());,if (StringUtil != null ) boolean hasXPathQuery = StringUtil.isNotEmpty(xpathQueryArea.getText());
ClassTypeResolver.java,previousType = JavaTypeDefinition.forClass(node.getType());,if (JavaTypeDefinition != null ) previousType = JavaTypeDefinition.forClass(node.getType());
RuleSet.java,final RuleSetReference ruleSetReference = new RuleSetReference(ruleSet.getFileName());,if (RuleSetReference(ruleSet != null ) final RuleSetReference ruleSetReference = new RuleSetReference(ruleSet.getFileName());
DataStructureTest.java,final PackageStats toplevel = Metrics.getTopLevelPackageStats();,if (Metrics != null ) final PackageStats toplevel = Metrics.getTopLevelPackageStats();
JavaMetricsVisitorTest.java,final PackageStats toplevel = Metrics.getTopLevelPackageStats();,if (Metrics != null ) final PackageStats toplevel = Metrics.getTopLevelPackageStats();
JavaMetricsVisitorTest.java,final PackageStats toplevel = Metrics.getTopLevelPackageStats();,if (Metrics != null ) final PackageStats toplevel = Metrics.getTopLevelPackageStats();
JavaMetricsVisitorTest.java,final PackageStats toplevel = Metrics.getTopLevelPackageStats();,if (Metrics != null ) final PackageStats toplevel = Metrics.getTopLevelPackageStats();
ClassTypeResolver.java,methodArgsArity = astArgumentList.jjtGetNumChildren();,if (astArgumentList != null ) methodArgsArity = astArgumentList.jjtGetNumChildren();
ClassTypeResolver.java,methodArgsArity = astArgumentList.jjtGetNumChildren();,if (astArgumentList != null ) methodArgsArity = astArgumentList.jjtGetNumChildren();
ClassTypeResolver.java,String strName = anImportDeclaration.getImportedName();,if (anImportDeclaration != null ) String strName = anImportDeclaration.getImportedName();
ClassStats.java,ClassMetric metric = key.getCalculator();,if (key != null ) ClassMetric metric = key.getCalculator();
OperationStats.java,OperationMetric metric = key.getCalculator();,if (key != null ) OperationMetric metric = key.getCalculator();
StringUtil.java,final PackageStats toplevel = Metrics.getTopLevelPackageStats();,if (Metrics != null ) final PackageStats toplevel = Metrics.getTopLevelPackageStats();
DataStructureTest.java,final PackageStats toplevel = Metrics.getTopLevelPackageStats();,if (Metrics != null ) final PackageStats toplevel = Metrics.getTopLevelPackageStats();
DataStructureTest.java,final PackageStats toplevel = Metrics.getTopLevelPackageStats();,if (Metrics != null ) final PackageStats toplevel = Metrics.getTopLevelPackageStats();
AbstractMultiNumericProperty.java,double number = value.doubleValue();,if (value != null ) double number = value.doubleValue();
AbstractNumericProperty.java,double number = value.doubleValue();,if (value != null ) double number = value.doubleValue();
PropertyDescriptorFactory.java,typeName = type.getSimpleName();,if (type != null ) typeName = type.getSimpleName();
MethodTypeResolution.java,List<JavaTypeDefinition> subtypeableArgs = subtypeableMethod.getParameterTypes();,if (subtypeableMethod != null ) List<JavaTypeDefinition> subtypeableArgs = subtypeableMethod.getParameterTypes();
MethodTypeResolution.java,List<JavaTypeDefinition> methodTypeArgs = method.getParameterTypes();,if (method != null ) List<JavaTypeDefinition> methodTypeArgs = method.getParameterTypes();
PropertyDescriptorFactory.java,typeName = type.getSimpleName();,if (type != null ) typeName = type.getSimpleName();
AbstractPropertyDescriptorTester.java,double x = range * Math.random();,if (Math != null ) double x = range * Math.random();
ClassTypeResolver.java,List<JavaTypeDefinition> subtypeableArgs = subtypeableMethod.getParameterTypes();,if (subtypeableMethod != null ) List<JavaTypeDefinition> subtypeableArgs = subtypeableMethod.getParameterTypes();
ClassTypeResolver.java,List<JavaTypeDefinition> methodTypeArgs = method.getParameterTypes();,if (method != null ) List<JavaTypeDefinition> methodTypeArgs = method.getParameterTypes();
ClassTypeResolver.java,List<JavaTypeDefinition> methodParameters = methodType.getParameterTypes();,if (methodType != null ) List<JavaTypeDefinition> methodParameters = methodType.getParameterTypes();
ClassTypeResolver.java,JavaTypeDefinition varargComponentType = methodType.getVarargComponentType();,if (methodType != null ) JavaTypeDefinition varargComponentType = methodType.getVarargComponentType();
ClassTypeResolver.java,int indexInPrimitive = primitiveSubTypeOrder.indexOf(argument.getType());,if (primitiveSubTypeOrder != null ) int indexInPrimitive = primitiveSubTypeOrder.indexOf(argument.getType());
ClassTypeResolver.java,int indexInBoxed = boxedPrimitivesSubTypeOrder.indexOf(argument.getType());,if (boxedPrimitivesSubTypeOrder != null ) int indexInBoxed = boxedPrimitivesSubTypeOrder.indexOf(argument.getType());
ClassTypeResolver.java,int indexOfParameter = primitiveSubTypeOrder.indexOf(parameter.getType());,if (primitiveSubTypeOrder != null ) int indexOfParameter = primitiveSubTypeOrder.indexOf(parameter.getType());
ClassTypeResolver.java,int indexOfArg = primitiveSubTypeOrder.indexOf(argument.getType());,if (primitiveSubTypeOrder != null ) int indexOfArg = primitiveSubTypeOrder.indexOf(argument.getType());
ClassTypeResolver.java,JavaTypeDefinition returnType = context.resolveTypeDefinition(method.getGenericReturnType());,if (context != null ) JavaTypeDefinition returnType = context.resolveTypeDefinition(method.getGenericReturnType());
OperationSignature.java,String name = node.getName();,if (node != null ) String name = node.getName();
RuleTst.java,"rule = findRule(rule.getRuleSetName(), rule.getName());","if (rule != null ) rule = findRule(rule.getRuleSetName(), rule.getName());"
JavaTypeDefinition.java,typeParameters = clazz.getTypeParameters();,if (clazz != null ) typeParameters = clazz.getTypeParameters();
AbstractApexNode.java,RealLoc loc = (RealLoc) node.getLoc();,if (node != null ) RealLoc loc = (RealLoc) node.getLoc();
AbstractApexNode.java,Loc loc = node.getLoc();,if (node != null ) Loc loc = node.getLoc();
Helper.java,NewNameValueObjectExpression n = variable.getNode();,if (variable != null ) NewNameValueObjectExpression n = variable.getNode();
ApexCpdTest.java,Match match = matches.next();,if (matches != null ) Match match = matches.next();
ClassTypeResolver.java,methodArgsArity = astArgumentList.jjtGetNumChildren();,if (astArgumentList != null ) methodArgsArity = astArgumentList.jjtGetNumChildren();
ParameterizedMetricKey.java,int result = key.hashCode();,if (key != null ) int result = key.hashCode();
CollectionUtil.java,return b == null || b.isEmpty();,if (b != null ) return b == null || b.isEmpty();
JavaTypeDefinition.java,typeParameters = resolveTypeDefinition(clazz.getGenericSuperclass()).clazz.getTypeParameters();,if (resolveTypeDefinition(clazz != null ) typeParameters = resolveTypeDefinition(clazz.getGenericSuperclass()).clazz.getTypeParameters();
ClassTypeResolver.java,JavaTypeDefinitionBuilder builder = JavaTypeDefinition.builder(node.getType());,if (JavaTypeDefinition != null ) JavaTypeDefinitionBuilder builder = JavaTypeDefinition.builder(node.getType());
ClassTypeResolver.java,TypeVariable[] classTypeParameters = clazz.getTypeParameters();,if (clazz != null ) TypeVariable[] classTypeParameters = clazz.getTypeParameters();
ClassTypeResolver.java,context = typeDef.build();,if (typeDef != null ) context = typeDef.build();
ClassTypeResolver.java,JavaTypeDefinitionBuilder builder = JavaTypeDefinition.builder(parent.getType());,if (JavaTypeDefinition != null ) JavaTypeDefinitionBuilder builder = JavaTypeDefinition.builder(parent.getType());
CommentContentRule.java,currentBadWords[i] = originalBadWords[i].toUpperCase();,if (originalBadWords[i] != null ) currentBadWords[i] = originalBadWords[i].toUpperCase();
RuleSetFactory.java,String valueStr = propertyElement.getAttribute(entry.getKey());,if (propertyElement != null ) String valueStr = propertyElement.getAttribute(entry.getKey());
AbstractMultiValueProperty.java,"return value == null ? """" : value.toString();","if (value != null ) return value == null ? """" : value.toString();"
AbstractSingleValueProperty.java,"return value == null ? """" : value.toString();","if (value != null ) return value == null ? """" : value.toString();"
ParameterizedMetricKey.java,int result = key.hashCode();,if (key != null ) int result = key.hashCode();
CyclomaticComplexityRule.java,TypeKind kind = node.getTypeKind();,if (node != null ) TypeKind kind = node.getTypeKind();
OperationSignature.java,int length = node.getEndLine() - node.getBeginLine();,if (node != null ) int length = node.getEndLine() - node.getBeginLine();
AbstractSingleValueProperty.java,"return values == null ? """" : values.toString();","if (values != null ) return values == null ? """" : values.toString();"
MethodPropertyTest.java,Method[] methods = String.class.getDeclaredMethods();,if (String != null ) Method[] methods = String.class.getDeclaredMethods();
MethodPropertyTest.java,Method[] allMethods = HashMap.class.getDeclaredMethods();,if (HashMap != null ) Method[] allMethods = HashMap.class.getDeclaredMethods();
MethodPropertyTest.java,Method[] methods = String.class.getDeclaredMethods();,if (String != null ) Method[] methods = String.class.getDeclaredMethods();
MethodPropertyTest.java,Method[] allMethods = String.class.getDeclaredMethods();,if (String != null ) Method[] allMethods = String.class.getDeclaredMethods();
AbstractProperty.java,"return value == null ? """" : value.toString();","if (value != null ) return value == null ? """" : value.toString();"
ParameterizedMetricKey.java,int result = key.hashCode();,if (key != null ) int result = key.hashCode();
ParameterizedMetricKey.java,int result = key.hashCode();,if (key != null ) int result = key.hashCode();
ClassStats.java,OperationMetric metric = key.getCalculator();,if (key != null ) OperationMetric metric = key.getCalculator();
StdCyclomaticComplexityRule.java,ClassEntry classEntry = entryStack.pop();,if (entryStack != null ) ClassEntry classEntry = entryStack.pop();
StdCyclomaticComplexityRule.java,ClassEntry classEntry = entryStack.pop();,if (entryStack != null ) ClassEntry classEntry = entryStack.pop();
StdCyclomaticComplexityRule.java,ClassEntry classEntry = entryStack.peek();,if (entryStack != null ) ClassEntry classEntry = entryStack.peek();
ClassTypeResolver.java,Package accessingPackage = accessingClass.getPackage();,if (accessingClass != null ) Package accessingPackage = accessingClass.getPackage();
ClassTypeResolver.java,"previousNameType = getNextTypeDefinition(previousNameType, field.getGenericType());","if (field != null ) previousNameType = getNextTypeDefinition(previousNameType, field.getGenericType());"
ClassTypeResolver.java,Type genericSuperClass = classWrapper.getType().getGenericSuperclass();,if (classWrapper != null ) Type genericSuperClass = classWrapper.getType().getGenericSuperclass();
ClassTypeResolver.java,TypeVariable[] classTypeParameters = clazz.getTypeParameters();,if (clazz != null ) TypeVariable[] classTypeParameters = clazz.getTypeParameters();
ClassTypeResolver.java,Package accessingPackage = accessingClass.getPackage();,if (accessingClass != null ) Package accessingPackage = accessingClass.getPackage();
ClassTypeResolver.java,primaryNodeType = currentChild.getType();,if (currentChild != null ) primaryNodeType = currentChild.getType();
AbstractMetric.java,PackageStats toplevel = Metrics.getTopLevelPackageStats();,if (Metrics != null ) PackageStats toplevel = Metrics.getTopLevelPackageStats();
ClassTypeResolver.java,"Field field = getFieldFromClass(previousChild.getType(), currentChild.getImage());","if (currentChild != null ) Field field = getFieldFromClass(previousChild.getType(), currentChild.getImage());"
ClassTypeResolverTest.java,Node parent = node.jjtGetParent();,if (node != null ) Node parent = node.jjtGetParent();
ClassStats.java,"double val = metric.computeFor(node, Metrics.getTopLevelPackageStats());","if (Metrics != null ) double val = metric.computeFor(node, Metrics.getTopLevelPackageStats());"
OperationStats.java,"double val = metric.computeFor(node, Metrics.getTopLevelPackageStats());","if (Metrics != null ) double val = metric.computeFor(node, Metrics.getTopLevelPackageStats());"
StdCycloMetric.java,int childCount = node.jjtGetNumChildren();,if (node != null ) int childCount = node.jjtGetNumChildren();
ClassTypeResolver.java,"previousNameType = getNextClassWrapper(previousNameType, field.getGenericType());","if (field != null ) previousNameType = getNextClassWrapper(previousNameType, field.getGenericType());"
ClassTypeResolver.java,Type genericSuperClass = inheritedClass.getType().getGenericSuperclass();,if (inheritedClass != null ) Type genericSuperClass = inheritedClass.getType().getGenericSuperclass();
ClassTypeResolver.java,"Field field = searchClassForField(previousChild.getType(), currentChild.getImage());","if (currentChild != null ) Field field = searchClassForField(previousChild.getType(), currentChild.getImage());"
ClassTypeResolver.java,primaryNodeType = currentChild.getType();,if (currentChild != null ) primaryNodeType = currentChild.getType();
ClassTypeResolver.java,Type genericSuperClass = inheritedClass.getClazz().getGenericSuperclass();,if (inheritedClass != null ) Type genericSuperClass = inheritedClass.getClazz().getGenericSuperclass();
ClassTypeResolver.java,TypeWrapper typeWrapper = new TypeWrapper(node.getType());,if (TypeWrapper(node != null ) TypeWrapper typeWrapper = new TypeWrapper(node.getType());
ClassTypeResolver.java,Class typeArgumentClass = typeArgumentNode.getType();,if (typeArgumentNode != null ) Class typeArgumentClass = typeArgumentNode.getType();
ClassTypeResolver.java,myType = parameter.getType();,if (parameter != null ) myType = parameter.getType();
ClassTypeResolver.java,Type genericSuperClass = inheritedClass.clazz.getGenericSuperclass();,if (inheritedClass != null ) Type genericSuperClass = inheritedClass.clazz.getGenericSuperclass();
ClassTypeResolver.java,ClassWrapper classWrapper = new ClassWrapper(node.getType());,if (ClassWrapper(node != null ) ClassWrapper classWrapper = new ClassWrapper(node.getType());
CyclomaticComplexityRule.java,ClassEntry classEntry = entryStack.peek();,if (entryStack != null ) ClassEntry classEntry = entryStack.peek();
ModifiedCyclomaticComplexityRule.java,ClassEntry classEntry = entryStack.peek();,if (entryStack != null ) ClassEntry classEntry = entryStack.peek();
StdCyclomaticComplexityRule.java,Entry entry = entryStack.peek();,if (entryStack != null ) Entry entry = entryStack.peek();
StdCyclomaticComplexityRule.java,int childCount = node.jjtGetNumChildren();,if (node != null ) int childCount = node.jjtGetNumChildren();
StdCyclomaticComplexityRule.java,Entry classEntry = entryStack.pop();,if (entryStack != null ) Entry classEntry = entryStack.pop();
StdCyclomaticComplexityRule.java,Entry methodEntry = entryStack.pop();,if (entryStack != null ) Entry methodEntry = entryStack.pop();
StdCyclomaticComplexityRule.java,Entry classEntry = entryStack.peek();,if (entryStack != null ) Entry classEntry = entryStack.peek();
StdCyclomaticComplexityRule.java,Entry classEntry = entryStack.pop();,if (entryStack != null ) Entry classEntry = entryStack.pop();
StdCyclomaticComplexityRule.java,Entry constructorEntry = entryStack.pop();,if (entryStack != null ) Entry constructorEntry = entryStack.pop();
StdCyclomaticComplexityRule.java,Entry classEntry = entryStack.peek();,if (entryStack != null ) Entry classEntry = entryStack.peek();
QualifiedName.java,QualifiedName parentQName = parent.getQualifiedName();,if (parent != null ) QualifiedName parentQName = parent.getQualifiedName();
ClassTypeResolver.java,ClassWrapper classWrapper = new ClassWrapper(node.getType());,if (ClassWrapper(node != null ) ClassWrapper classWrapper = new ClassWrapper(node.getType());
ClassTypeResolver.java,Class typeArgumentClass = typeArgumentNode.getType();,if (typeArgumentNode != null ) Class typeArgumentClass = typeArgumentNode.getType();
Metrics.java,QualifiedName qname = node.getQualifiedName();,if (node != null ) QualifiedName qname = node.getQualifiedName();
Metrics.java,QualifiedName qname = node.getQualifiedName();,if (node != null ) QualifiedName qname = node.getQualifiedName();
ClassTypeResolver.java,Type fieldType = field.getGenericType();,if (field != null ) Type fieldType = field.getGenericType();
ClassTypeResolver.java,"Field field = getFieldFromClass(previousChild.getType(), currentChild.getImage());","if (currentChild != null ) Field field = getFieldFromClass(previousChild.getType(), currentChild.getImage());"
MetricsVisitor.java,QualifiedName qname = node.getQualifiedName();,if (node != null ) QualifiedName qname = node.getQualifiedName();
MetricsVisitor.java,QualifiedName qname = node.getQualifiedName();,if (node != null ) QualifiedName qname = node.getQualifiedName();
PackageStats.java,String[] classes = qname.getClasses();,if (qname != null ) String[] classes = qname.getClasses();
ClassTypeResolver.java,String name = node.getImage();,if (node != null ) String name = node.getImage();
ClassTypeResolver.java,Class clazz = previousChild.getType();,if (previousChild != null ) Class clazz = previousChild.getType();
ClassTypeResolver.java,String image = currentChild.getImage();,if (currentChild != null ) String image = currentChild.getImage();
ClassTypeResolver.java,primaryNodeType = currentChild.getType();,if (currentChild != null ) primaryNodeType = currentChild.getType();
DataflowAnomalyAnalysisRule.java,Iterator<DataFlowNode> pathIterator = path.iterator();,if (path != null ) Iterator<DataFlowNode> pathIterator = path.iterator();
DataflowAnomalyAnalysisRule.java,DataFlowNode inode = pathIterator.next();,if (pathIterator != null ) DataFlowNode inode = pathIterator.next();
AbstractDataFlowNode.java,String tmp = type.toString();,if (type != null ) String tmp = type.toString();
AbstractDataFlowNode.java,int newTmpInt = Integer.parseInt(st.nextToken());,if (Integer != null ) int newTmpInt = Integer.parseInt(st.nextToken());
ClassTypeResolver.java,primaryNodeType = currentChild.getType();,if (currentChild != null ) primaryNodeType = currentChild.getType();
ASTClassOrInterfaceDeclaration.java,QualifiedName parentQN = parent.getQualifiedName();,if (parent != null ) QualifiedName parentQN = parent.getQualifiedName();
ASTConstructorDeclaration.java,int numParams = params.jjtGetNumChildren();,if (params != null ) int numParams = params.jjtGetNumChildren();
ASTMethodDeclaration.java,int numParams = params.jjtGetNumChildren();,if (params != null ) int numParams = params.jjtGetNumChildren();
QualifiedNameTest.java,QualifiedName qname = declaration.getQualifiedName();,if (declaration != null ) QualifiedName qname = declaration.getQualifiedName();
QualifiableNode.java,hash += operation.hashCode();,if (operation != null ) hash += operation.hashCode();
QualifiedNameTest.java,QualifiableNode.QualifiedName qname = coid.getQualifiedName();,if (coid != null ) QualifiableNode.QualifiedName qname = coid.getQualifiedName();
QualifiedNameTest.java,QualifiableNode.QualifiedName qname = coid.getQualifiedName();,if (coid != null ) QualifiableNode.QualifiedName qname = coid.getQualifiedName();
QualifiedNameTest.java,QualifiableNode.QualifiedName qname = coid.getQualifiedName();,if (coid != null ) QualifiableNode.QualifiedName qname = coid.getQualifiedName();
QualifiedNameTest.java,QualifiableNode.QualifiedName qname = coid.getQualifiedName();,if (coid != null ) QualifiableNode.QualifiedName qname = coid.getQualifiedName();
QualifiedNameTest.java,QualifiableNode.QualifiedName qname = declaration.getQualifiedName();,if (declaration != null ) QualifiableNode.QualifiedName qname = declaration.getQualifiedName();
QualifiedNameTest.java,QualifiableNode.QualifiedName qname = declaration.getQualifiedName();,if (declaration != null ) QualifiableNode.QualifiedName qname = declaration.getQualifiedName();
QualifiedNameTest.java,QualifiableNode.QualifiedName qname = declaration.getQualifiedName();,if (declaration != null ) QualifiableNode.QualifiedName qname = declaration.getQualifiedName();
QualifiedNameTest.java,QualifiableNode.QualifiedName qname = declaration.getQualifiedName();,if (declaration != null ) QualifiableNode.QualifiedName qname = declaration.getQualifiedName();
RuleSet.java,final LanguageVersion min = rule.getMinimumLanguageVersion();,if (rule != null ) final LanguageVersion min = rule.getMinimumLanguageVersion();
RuleSet.java,final LanguageVersion max = rule.getMaximumLanguageVersion();,if (rule != null ) final LanguageVersion max = rule.getMaximumLanguageVersion();
RuleSet.java,long start = System.nanoTime();,if (System != null ) long start = System.nanoTime();
RuleSet.java,long end = System.nanoTime();,if (System != null ) long end = System.nanoTime();
RuleSet.java,Iterator<Rule> iter = rules.iterator();,if (rules != null ) Iterator<Rule> iter = rules.iterator();
RuleSet.java,Rule rule = iter.next();,if (iter != null ) Rule rule = iter.next();
QualifiableNode.java,this.operation = sb.toString();,if (sb != null ) this.operation = sb.toString();
ASTFieldDeclaration.java,QualifiedName parent = getFirstParentOfType(ASTClassOrInterfaceDeclaration.class).getQualifiedName();,if (getFirstParentOfType(ASTClassOrInterfaceDeclaration != null ) QualifiedName parent = getFirstParentOfType(ASTClassOrInterfaceDeclaration.class).getQualifiedName();
QualifiableNode.java,hash += suffix.hashCode();,if (suffix != null ) hash += suffix.hashCode();
QualifiableNode.java,this.operation = sb.toString();,if (sb != null ) this.operation = sb.toString();
QualifiableNode.java,hash += operation.hashCode();,if (operation != null ) hash += operation.hashCode();
PackageStats.java,String[] classes = qname.getClasses();,if (qname != null ) String[] classes = qname.getClasses();
PackageStats.java,String[] packagePath = qname.getPackages();,if (qname != null ) String[] packagePath = qname.getPackages();
ASTConstructorDeclaration.java,ASTFormalParameters params = this.getParameters();,if (this != null ) ASTFormalParameters params = this.getParameters();
Metrics.java,String qname = node.getQualifiedName(); //TODO,if (//TODO != null ) String qname = node.getQualifiedName(); //TODO
Metrics.java,String qname = node.getQualifiedName(); //TODO,if (//TODO != null ) String qname = node.getQualifiedName(); //TODO
RuleSet.java,long start = System.nanoTime();,if (System != null ) long start = System.nanoTime();
RuleSet.java,long end = System.nanoTime();,if (System != null ) long end = System.nanoTime();
RuleSet.java,final LanguageVersion min = rule.getMinimumLanguageVersion();,if (rule != null ) final LanguageVersion min = rule.getMinimumLanguageVersion();
RuleSet.java,final LanguageVersion max = rule.getMaximumLanguageVersion();,if (rule != null ) final LanguageVersion max = rule.getMaximumLanguageVersion();
RuleSet.java,Iterator<Rule> iter = rules.iterator();,if (rules != null ) Iterator<Rule> iter = rules.iterator();
RuleSet.java,Rule rule = iter.next();,if (iter != null ) Rule rule = iter.next();
HTMLRenderer.java,String d = StringUtil.htmlEncode(rv.getDescription());,if (StringUtil != null ) String d = StringUtil.htmlEncode(rv.getDescription());
RuleSetReferenceIdTest.java,InputStream inputStream = ruleSetReferenceId.getInputStream(RuleSetReferenceIdTest.class.getClassLoader());,if (ruleSetReferenceId != null ) InputStream inputStream = ruleSetReferenceId.getInputStream(RuleSetReferenceIdTest.class.getClassLoader());
RuleSetReferenceIdTest.java,InputStream inputStream = ruleSetReferenceId.getInputStream(RuleSetReferenceIdTest.class.getClassLoader());,if (ruleSetReferenceId != null ) InputStream inputStream = ruleSetReferenceId.getInputStream(RuleSetReferenceIdTest.class.getClassLoader());
AbstractLanguageVersionTest.java,Language language = LanguageRegistry.getLanguage(sourceLanguage.getName());,if (LanguageRegistry != null ) Language language = LanguageRegistry.getLanguage(sourceLanguage.getName());
AbstractLanguageVersionTest.java,languageVersion = language.getVersion(sourceLanguage.getVersion());,if (language != null ) languageVersion = language.getVersion(sourceLanguage.getVersion());
ApexCRUDViolationRule.java,ArrayList<ClassTypeRef> inner = (ArrayList<ClassTypeRef>) optionalContainer.get();,if (optionalContainer != null ) ArrayList<ClassTypeRef> inner = (ArrayList<ClassTypeRef>) optionalContainer.get();
JUnitTestsShouldIncludeAssertRule.java,String img = subChild.getImage();,if (subChild != null ) String img = subChild.getImage();
ASTAnnotation.java,"final String ruleAnno = ""PMD."" + rule.getName();","if (rule != null ) final String ruleAnno = ""PMD."" + rule.getName();"
ASTAnnotation.java,String image = param.getImage();,if (param != null ) String image = param.getImage();
ASTAnnotationParameter.java,result = node.getValue().toString();,if (node != null ) result = node.getValue().toString();
ApexRuleViolation.java,Node parent = node.jjtGetParent();,if (node != null ) Node parent = node.jjtGetParent();
ApexRuleViolation.java,parent = parent.jjtGetParent();,if (parent != null ) parent = parent.jjtGetParent();
VfDocStyleTest.java,ASTCommentTag comment = comments.iterator().next();,if (comments != null ) ASTCommentTag comment = comments.iterator().next();
RuleSetReferenceIdTest.java,InputStream inputStream = ruleSetReferenceId.getInputStream(RuleSetReferenceIdTest.class.getClassLoader());,if (ruleSetReferenceId != null ) InputStream inputStream = ruleSetReferenceId.getInputStream(RuleSetReferenceIdTest.class.getClassLoader());
RuleSetReferenceIdTest.java,InputStream inputStream = ruleSetReferenceId.getInputStream(RuleSetReferenceIdTest.class.getClassLoader());,if (ruleSetReferenceId != null ) InputStream inputStream = ruleSetReferenceId.getInputStream(RuleSetReferenceIdTest.class.getClassLoader());
AccessorClassGenerationRule.java,argumentCount = aa.getArgumentCount();,if (aa != null ) argumentCount = aa.getArgumentCount();
AccessorClassGenerationRule.java,"name = stripString(aPackageName + '.', an.getImage());","if (an != null ) name = stripString(aPackageName + '.', an.getImage());"
AccessorClassGenerationRule.java,String aName = li.previous();,if (li != null ) String aName = li.previous();
AccessorClassGenerationRule.java,name = name.substring(findName.length());,if (name != null ) name = name.substring(findName.length());
AccessorClassGenerationRule.java,String typeName = node.getImage();,if (node != null ) String typeName = node.getImage();
AccessorClassGenerationRule.java,String typeName = node.getImage();,if (node != null ) String typeName = node.getImage();
AccessorClassGenerationRule.java,ASTConstructorDeclaration cd = constructors.next();,if (constructors != null ) ASTConstructorDeclaration cd = constructors.next();
AccessorClassGenerationRule.java,AllocData ad = allocations.next();,if (allocations != null ) AllocData ad = allocations.next();
ASTAnnotation.java,String image = param.getImage();,if (param != null ) String image = param.getImage();
ASTAnnotationParameter.java,result = node.getValue().toString();,if (node != null ) result = node.getValue().toString();
ASTAnnotationParameter.java,Object value = node.getValue();,if (node != null ) Object value = node.getValue();
AccessorClassGenerationRule.java,argumentCount = aa.getArgumentCount();,if (aa != null ) argumentCount = aa.getArgumentCount();
AccessorClassGenerationRule.java,"name = stripString(aPackageName + '.', an.getImage());","if (an != null ) name = stripString(aPackageName + '.', an.getImage());"
AccessorClassGenerationRule.java,String aName = li.previous();,if (li != null ) String aName = li.previous();
AccessorClassGenerationRule.java,name = name.substring(findName.length());,if (name != null ) name = name.substring(findName.length());
AccessorClassGenerationRule.java,String typeName = node.getImage();,if (node != null ) String typeName = node.getImage();
AccessorClassGenerationRule.java,String typeName = node.getImage();,if (node != null ) String typeName = node.getImage();
AccessorClassGenerationRule.java,ASTConstructorDeclaration cd = constructors.next();,if (constructors != null ) ASTConstructorDeclaration cd = constructors.next();
AccessorClassGenerationRule.java,AllocData ad = allocations.next();,if (allocations != null ) AllocData ad = allocations.next();
ASTAnnotationParameter.java,Object value = node.getValue();,if (node != null ) Object value = node.getValue();
AccessorMethodGenerationRule.java,Node n = no.getLocation();,if (no != null ) Node n = no.getLocation();
VfUnescapeElRule.java,prevToken = previousText.jjtGetLastToken().toString();,if (previousText != null ) prevToken = previousText.jjtGetLastToken().toString();
VfParserTest.java,Parser parser = jspLang.getParser(jspLang.getDefaultParserOptions());,if (jspLang != null ) Parser parser = jspLang.getParser(jspLang.getDefaultParserOptions());
VfDocStyleTest.java,Iterator<ASTElExpression> iterator = exprs.iterator();,if (exprs != null ) Iterator<ASTElExpression> iterator = exprs.iterator();
VfDocStyleTest.java,ASTElExpression script = iterator.next();,if (iterator != null ) ASTElExpression script = iterator.next();
VfDocStyleTest.java,script = iterator.next();,if (iterator != null ) script = iterator.next();
VfDocStyleTest.java,ASTAttributeValue attr = attributes.iterator().next();,if (attributes != null ) ASTAttributeValue attr = attributes.iterator().next();
VfUnescapeElRule.java,boolean foundAny = !ids.isEmpty();,if (!ids != null ) boolean foundAny = !ids.isEmpty();
VfUnescapeElRule.java,String name = attr.getName();,if (attr != null ) String name = attr.getName();
VfDocStyleTest.java,ASTText script = scripts.iterator().next();,if (scripts != null ) ASTText script = scripts.iterator().next();
VfDocStyleTest.java,ASTText script = scripts.iterator().next();,if (scripts != null ) ASTText script = scripts.iterator().next();
VfDocStyleTest.java,Iterator<ASTAttributeValue> iterator = attributes.iterator();,if (attributes != null ) Iterator<ASTAttributeValue> iterator = attributes.iterator();
VfDocStyleTest.java,Iterator<ASTAttributeValue> iterator = attributes.iterator();,if (attributes != null ) Iterator<ASTAttributeValue> iterator = attributes.iterator();
VfDocStyleTest.java,ASTAttributeValue attr = iterator.next();,if (iterator != null ) ASTAttributeValue attr = iterator.next();
VfDocStyleTest.java,attr = iterator.next();,if (iterator != null ) attr = iterator.next();
VfDocStyleTest.java,ASTAttributeValue attr = attributes.iterator().next();,if (attributes != null ) ASTAttributeValue attr = attributes.iterator().next();
VfDocStyleTest.java,ASTAttributeValue attr = attributes.iterator().next();,if (attributes != null ) ASTAttributeValue attr = attributes.iterator().next();
VfDocStyleTest.java,ASTAttributeValue attr = attributes.iterator().next();,if (attributes != null ) ASTAttributeValue attr = attributes.iterator().next();
VfDocStyleTest.java,ASTAttributeValue attr = attributes.iterator().next();,if (attributes != null ) ASTAttributeValue attr = attributes.iterator().next();
JspPageStyleTest.java,ASTElExpression expression = expressions.iterator().next();,if (expressions != null ) ASTElExpression expression = expressions.iterator().next();
JspPageStyleTest.java,ASTElExpression expression = expressions.iterator().next();,if (expressions != null ) ASTElExpression expression = expressions.iterator().next();
VfDocStyleTest.java,ASTAttributeValue attr = attributes.iterator().next();,if (attributes != null ) ASTAttributeValue attr = attributes.iterator().next();
VfDocStyleTest.java,ASTAttributeValue attr = attributes.iterator().next();,if (attributes != null ) ASTAttributeValue attr = attributes.iterator().next();
VfDocStyleTest.java,ASTAttributeValue attr = attributes.iterator().next();,if (attributes != null ) ASTAttributeValue attr = attributes.iterator().next();
VfDocStyleTest.java,ASTAttributeValue attr = attributes.iterator().next();,if (attributes != null ) ASTAttributeValue attr = attributes.iterator().next();
XPathJspRuleTest.java,RuleViolation rv = report.iterator().next();,if (report != null ) RuleViolation rv = report.iterator().next();
VfParserTest.java,Parser parser = jspLang.getParser(jspLang.getDefaultParserOptions());,if (jspLang != null ) Parser parser = jspLang.getParser(jspLang.getDefaultParserOptions());
VfDocStyleTest.java,Iterator<ASTElExpression> iterator = exprs.iterator();,if (exprs != null ) Iterator<ASTElExpression> iterator = exprs.iterator();
VfDocStyleTest.java,ASTElExpression script = iterator.next();,if (iterator != null ) ASTElExpression script = iterator.next();
VfDocStyleTest.java,script = iterator.next();,if (iterator != null ) script = iterator.next();
VfDocStyleTest.java,ASTAttributeValue attr = attributes.iterator().next();,if (attributes != null ) ASTAttributeValue attr = attributes.iterator().next();
AccessorMethodGenerationRule.java,Node n = no.getLocation();,if (no != null ) Node n = no.getLocation();
VfUnescapeElRule.java,boolean foundAny = !ids.isEmpty();,if (!ids != null ) boolean foundAny = !ids.isEmpty();
VfUnescapeElRule.java,String name = attr.getName();,if (attr != null ) String name = attr.getName();
VfDocStyleTest.java,ASTText script = scripts.iterator().next();,if (scripts != null ) ASTText script = scripts.iterator().next();
VfDocStyleTest.java,ASTText script = scripts.iterator().next();,if (scripts != null ) ASTText script = scripts.iterator().next();
VfDocStyleTest.java,Iterator<ASTAttributeValue> iterator = attributes.iterator();,if (attributes != null ) Iterator<ASTAttributeValue> iterator = attributes.iterator();
VfDocStyleTest.java,Iterator<ASTAttributeValue> iterator = attributes.iterator();,if (attributes != null ) Iterator<ASTAttributeValue> iterator = attributes.iterator();
VfDocStyleTest.java,ASTAttributeValue attr = iterator.next();,if (iterator != null ) ASTAttributeValue attr = iterator.next();
VfDocStyleTest.java,attr = iterator.next();,if (iterator != null ) attr = iterator.next();
VfDocStyleTest.java,ASTAttributeValue attr = attributes.iterator().next();,if (attributes != null ) ASTAttributeValue attr = attributes.iterator().next();
VfDocStyleTest.java,ASTAttributeValue attr = attributes.iterator().next();,if (attributes != null ) ASTAttributeValue attr = attributes.iterator().next();
VfDocStyleTest.java,ASTAttributeValue attr = attributes.iterator().next();,if (attributes != null ) ASTAttributeValue attr = attributes.iterator().next();
VfDocStyleTest.java,ASTAttributeValue attr = attributes.iterator().next();,if (attributes != null ) ASTAttributeValue attr = attributes.iterator().next();
InsufficientStringBufferDeclarationRule.java,anticipatedLength += str.length();,if (str != null ) anticipatedLength += str.length();
JspPageStyleTest.java,ASTElExpression expression = expressions.iterator().next();,if (expressions != null ) ASTElExpression expression = expressions.iterator().next();
JspPageStyleTest.java,ASTElExpression expression = expressions.iterator().next();,if (expressions != null ) ASTElExpression expression = expressions.iterator().next();
VfDocStyleTest.java,ASTAttributeValue attr = attributes.iterator().next();,if (attributes != null ) ASTAttributeValue attr = attributes.iterator().next();
VfDocStyleTest.java,ASTAttributeValue attr = attributes.iterator().next();,if (attributes != null ) ASTAttributeValue attr = attributes.iterator().next();
VfDocStyleTest.java,ASTAttributeValue attr = attributes.iterator().next();,if (attributes != null ) ASTAttributeValue attr = attributes.iterator().next();
VfDocStyleTest.java,ASTAttributeValue attr = attributes.iterator().next();,if (attributes != null ) ASTAttributeValue attr = attributes.iterator().next();
XPathJspRuleTest.java,RuleViolation rv = report.iterator().next();,if (report != null ) RuleViolation rv = report.iterator().next();
UnnecessaryLocalBeforeReturnRule.java,VariableNameDeclaration key = entry.getKey();,if (entry != null ) VariableNameDeclaration key = entry.getKey();
UnnecessaryLocalBeforeReturnRule.java,String var = name.getImage();,if (name != null ) String var = name.getImage();
UnnecessaryLocalBeforeReturnRule.java,Node block = blockStatement.jjtGetParent();,if (blockStatement != null ) Node block = blockStatement.jjtGetParent();
CachedRuleViolation.java,final String fileName = stream.readUTF();,if (stream != null ) final String fileName = stream.readUTF();
UnnecessaryLocalBeforeReturnRule.java,VariableNameDeclaration key = entry.getKey();,if (entry != null ) VariableNameDeclaration key = entry.getKey();
UnnecessaryLocalBeforeReturnRule.java,String var = name.getImage();,if (name != null ) String var = name.getImage();
UnnecessaryLocalBeforeReturnRule.java,Node block = blockStatement.jjtGetParent();,if (blockStatement != null ) Node block = blockStatement.jjtGetParent();
UnnecessaryLocalBeforeReturnRule.java,ASTBlock block = (ASTBlock)blockStatement.jjtGetParent();,if ((ASTBlock)blockStatement != null ) ASTBlock block = (ASTBlock)blockStatement.jjtGetParent();
ApexParserOptions.java,int result = super.hashCode();,if (super != null ) int result = super.hashCode();
AbstractApexNode.java,RealLoc loc = (RealLoc) node.getLoc();,if (node != null ) RealLoc loc = (RealLoc) node.getLoc();
AbstractApexNode.java,Loc loc = node.getLoc();,if (node != null ) Loc loc = node.getLoc();
ApexParser.java,suppressMarker = parserOptions.getSuppressMarker();,if (parserOptions != null ) suppressMarker = parserOptions.getSuppressMarker();
ApexParser.java,Compilation astRoot = visitor.getTopLevel();,if (visitor != null ) Compilation astRoot = visitor.getTopLevel();
ApexRuleChainVisitor.java,Node node = stack.pop();,if (stack != null ) Node node = stack.pop();
StdCyclomaticComplexityRule.java,Entry classEntry = entryStack.pop();,if (entryStack != null ) Entry classEntry = entryStack.pop();
StdCyclomaticComplexityRule.java,Entry classEntry = entryStack.pop();,if (entryStack != null ) Entry classEntry = entryStack.pop();
StdCyclomaticComplexityRule.java,Entry classEntry = entryStack.pop();,if (entryStack != null ) Entry classEntry = entryStack.pop();
StdCyclomaticComplexityRule.java,Entry methodEntry = entryStack.pop();,if (entryStack != null ) Entry methodEntry = entryStack.pop();
StdCyclomaticComplexityRule.java,Entry classEntry = entryStack.peek();,if (entryStack != null ) Entry classEntry = entryStack.peek();
TooManyFieldsRule.java,int val = entry.getValue();,if (entry != null ) int val = entry.getValue();
TooManyFieldsRule.java,Node n = nodes.get(entry.getKey());,if (nodes != null ) Node n = nodes.get(entry.getKey());
TooManyFieldsRule.java,String key = clazz.getImage();,if (clazz != null ) String key = clazz.getImage();
MethodNamingConventionsRule.java,String methodName = node.getImage();,if (node != null ) String methodName = node.getImage();
MethodWithSameNameAsEnclosingClassRule.java,String className = node.getImage();,if (node != null ) String className = node.getImage();
VariableNamingConventionsRule.java,String varName = node.getImage();,if (node != null ) String varName = node.getImage();
PMDConfiguration.java,private int threads = Runtime.getRuntime().availableProcessors();,if (Runtime != null ) private int threads = Runtime.getRuntime().availableProcessors();
PMDConfiguration.java,private ClassLoader classLoader = getClass().getClassLoader();,if (getClass() != null ) private ClassLoader classLoader = getClass().getClassLoader();
PMDConfiguration.java,this.classLoader = getClass().getClassLoader();,if (getClass() != null ) this.classLoader = getClass().getClassLoader();
PMDConfiguration.java,classLoader = PMDConfiguration.class.getClassLoader();,if (PMDConfiguration != null ) classLoader = PMDConfiguration.class.getClassLoader();
RuleSetReferenceId.java,int responseCode = connection.getResponseCode();,if (connection != null ) int responseCode = connection.getResponseCode();
RuleSetWriter.java,DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();,if (DocumentBuilderFactory != null ) DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();
RuleSetWriter.java,DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();,if (documentBuilderFactory != null ) DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();
RuleSetWriter.java,document = documentBuilder.newDocument();,if (documentBuilder != null ) document = documentBuilder.newDocument();
RuleSetWriter.java,TransformerFactory transformerFactory = TransformerFactory.newInstance();,if (TransformerFactory != null ) TransformerFactory transformerFactory = TransformerFactory.newInstance();
RuleSetWriter.java,Transformer transformer = transformerFactory.newTransformer();,if (transformerFactory != null ) Transformer transformer = transformerFactory.newTransformer();
RuleSetWriter.java,Element descriptionElement = createDescriptionElement(ruleSet.getDescription());,if (createDescriptionElement(ruleSet != null ) Element descriptionElement = createDescriptionElement(ruleSet.getDescription());
RuleSetWriter.java,RuleSetReference ruleSetReference = ruleReference.getRuleSetReference();,if (ruleReference != null ) RuleSetReference ruleSetReference = ruleReference.getRuleSetReference();
RuleSetWriter.java,Language language = ruleReference.getOverriddenLanguage();,if (ruleReference != null ) Language language = ruleReference.getOverriddenLanguage();
RuleSetWriter.java,LanguageVersion minimumLanguageVersion = ruleReference.getOverriddenMinimumLanguageVersion();,if (ruleReference != null ) LanguageVersion minimumLanguageVersion = ruleReference.getOverriddenMinimumLanguageVersion();
RuleSetWriter.java,LanguageVersion maximumLanguageVersion = ruleReference.getOverriddenMaximumLanguageVersion();,if (ruleReference != null ) LanguageVersion maximumLanguageVersion = ruleReference.getOverriddenMaximumLanguageVersion();
RuleSetWriter.java,Boolean deprecated = ruleReference.isOverriddenDeprecated();,if (ruleReference != null ) Boolean deprecated = ruleReference.isOverriddenDeprecated();
RuleSetWriter.java,String name = ruleReference.getOverriddenName();,if (ruleReference != null ) String name = ruleReference.getOverriddenName();
RuleSetWriter.java,String message = ruleReference.getOverriddenMessage();,if (ruleReference != null ) String message = ruleReference.getOverriddenMessage();
RuleSetWriter.java,String externalInfoUrl = ruleReference.getOverriddenExternalInfoUrl();,if (ruleReference != null ) String externalInfoUrl = ruleReference.getOverriddenExternalInfoUrl();
RuleSetWriter.java,String description = ruleReference.getOverriddenDescription();,if (ruleReference != null ) String description = ruleReference.getOverriddenDescription();
RuleSetWriter.java,RulePriority priority = ruleReference.getOverriddenPriority();,if (ruleReference != null ) RulePriority priority = ruleReference.getOverriddenPriority();
RuleSetWriter.java,List<String> examples = ruleReference.getOverriddenExamples();,if (ruleReference != null ) List<String> examples = ruleReference.getOverriddenExamples();
RuleSetWriter.java,Object defaultValue = propertyDescriptor.defaultValue();,if (propertyDescriptor != null ) Object defaultValue = propertyDescriptor.defaultValue();
RuleSetWriter.java,Object defaultValue = propertyDescriptor.defaultValue();,if (propertyDescriptor != null ) Object defaultValue = propertyDescriptor.defaultValue();
RuleSetWriter.java,Object value = entry.getValue();,if (entry != null ) Object value = entry.getValue();
DCD.java,String name = file.getPath();,if (file != null ) String name = file.getPath();
DCD.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
DCD.java,UsageGraph usageGraph = builder.getUsageGraph();,if (builder != null ) UsageGraph usageGraph = builder.getUsageGraph();
DCD.java,long end = System.currentTimeMillis();,if (System != null ) long end = System.currentTimeMillis();
UsageNodeVisitor.java,final Method method = node.getMember();,if (node != null ) final Method method = node.getMember();
TypeSignatureVisitor.java,type = array.getClass();,if (array != null ) type = array.getClass();
LanguageVersionDiscoverer.java,currentLanguageVersion = languageVersion.getLanguage().getDefaultVersion();,if (languageVersion != null ) currentLanguageVersion = languageVersion.getLanguage().getDefaultVersion();
LanguageVersionDiscoverer.java,languageVersion = language.getDefaultVersion();,if (language != null ) languageVersion = language.getDefaultVersion();
AbstractNode.java,Node result = this.jjtGetParent();,if (this != null ) Node result = this.jjtGetParent();
AbstractNode.java,result = result.jjtGetParent();,if (result != null ) result = result.jjtGetParent();
AbstractNode.java,parentNode = parentNode.jjtGetParent();,if (parentNode != null ) parentNode = parentNode.jjtGetParent();
AbstractNode.java,parentNode = parentNode.jjtGetParent();,if (parentNode != null ) parentNode = parentNode.jjtGetParent();
AbstractNode.java,int n = node.jjtGetNumChildren();,if (node != null ) int n = node.jjtGetNumChildren();
AbstractNode.java,DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();,if (DocumentBuilderFactory != null ) DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
AbstractNode.java,DocumentBuilder db = dbf.newDocumentBuilder();,if (dbf != null ) DocumentBuilder db = dbf.newDocumentBuilder();
AbstractNode.java,Document document = db.newDocument();,if (db != null ) Document document = db.newDocument();
AbstractNode.java,Document ownerDocument = parentNode.getOwnerDocument();,if (parentNode != null ) Document ownerDocument = parentNode.getOwnerDocument();
AbstractNode.java,Attribute attr = iter.next();,if (iter != null ) Attribute attr = iter.next();
AbstractNode.java,AbstractNode child = (AbstractNode) iter.next();,if (iter != null ) AbstractNode child = (AbstractNode) iter.next();
AbstractNode.java,int n = node.jjtGetNumChildren();,if (node != null ) int n = node.jjtGetNumChildren();
AbstractTokenManager.java,String fileName = AbstractTokenManager.fileName.get();,if (AbstractTokenManager != null ) String fileName = AbstractTokenManager.fileName.get();
AttributeAxisIterator.java,Attribute attribute = this.iterator.next();,if (this != null ) Attribute attribute = this.iterator.next();
AttributeAxisIterator.java,"super.current = new AttributeNode(attribute, super.position());","if (super != null ) super.current = new AttributeNode(attribute, super.position());"
AttributeNode.java,Object v = attribute.getValue();,if (attribute != null ) Object v = attribute.getValue();
AttributeNode.java,value = EmptySequence.getInstance();,if (EmptySequence != null ) value = EmptySequence.getInstance();
ElementNode.java,this.id = idGenerator.getNextId();,if (idGenerator != null ) this.id = idGenerator.getNextId();
AbstractDataFlowNode.java,this.line = node.getBeginLine();,if (node != null ) this.line = node.getBeginLine();
AbstractDataFlowNode.java,String tmp = type.toString();,if (type != null ) String tmp = type.toString();
AbstractDataFlowNode.java,int newTmpInt = Integer.parseInt(st.nextToken());,if (Integer != null ) int newTmpInt = Integer.parseInt(st.nextToken());
ParametricRuleViolation.java,filename = ctx.getSourceCodeFilename();,if (ctx != null ) filename = ctx.getSourceCodeFilename();
ParametricRuleViolation.java,beginLine = node.getBeginLine();,if (node != null ) beginLine = node.getBeginLine();
ParametricRuleViolation.java,beginColumn = node.getBeginColumn();,if (node != null ) beginColumn = node.getBeginColumn();
ParametricRuleViolation.java,endLine = node.getEndLine();,if (node != null ) endLine = node.getEndLine();
ParametricRuleViolation.java,endColumn = node.getEndColumn();,if (node != null ) endColumn = node.getEndColumn();
PropertyDescriptorFactory.java,typeName = type.getSimpleName();,if (type != null ) typeName = type.getSimpleName();
StatisticalRuleHelper.java,total += point.getScore();,if (point != null ) total += point.getScore();
StatisticalRuleHelper.java,low = dataPoints.first().getScore();,if (dataPoints != null ) low = dataPoints.first().getScore();
StatisticalRuleHelper.java,high = dataPoints.last().getScore();,if (dataPoints != null ) high = dataPoints.last().getScore();
JaxenXPathRuleQuery.java,List<XPath> xpaths = nodeNameToXPaths.get(node.toString());,if (nodeNameToXPaths != null ) List<XPath> xpaths = nodeNameToXPaths.get(node.toString());
JaxenXPathRuleQuery.java,Expr node = pending.pop();,if (pending != null ) Expr node = pending.pop();
JaxenXPathRuleQuery.java,List<Step> steps = locationPath.getSteps();,if (locationPath != null ) List<Step> steps = locationPath.getSteps();
JaxenXPathRuleQuery.java,LocationPath relativeLocationPath = xpathFactory.createRelativeLocationPath();,if (xpathFactory != null ) LocationPath relativeLocationPath = xpathFactory.createRelativeLocationPath();
JaxenXPathRuleQuery.java,String propName = e.getKey().name();,if (e != null ) String propName = e.getKey().name();
SaxonXPathRuleQuery.java,String name = xpathVariable.getVariableQName().getLocalName();,if (xpathVariable != null ) String name = xpathVariable.getVariableQName().getLocalName();
SaxonXPathRuleQuery.java,Object value = entry.getValue();,if (entry != null ) Object value = entry.getValue();
SaxonXPathRuleQuery.java,root = root.jjtGetParent();,if (root != null ) root = root.jjtGetParent();
SaxonXPathRuleQuery.java,XPathStaticContext xpathStaticContext = xpathEvaluator.getStaticContext();,if (xpathEvaluator != null ) XPathStaticContext xpathStaticContext = xpathEvaluator.getStaticContext();
SaxonXPathRuleQuery.java,String name = propertyDescriptor.name();,if (propertyDescriptor != null ) String name = propertyDescriptor.name();
Initializer.java,LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();,if (languageVersion != null ) LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();
Initializer.java,LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();,if (languageVersion != null ) LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();
RendererFactory.java,renderer = constructor.newInstance();,if (constructor != null ) renderer = constructor.newInstance();
RendererFactory.java,String value = properties.getProperty(prop.name());,if (properties != null ) String value = properties.getProperty(prop.name());
RendererFactory.java,constructor = rendererClass.getConstructor();,if (rendererClass != null ) constructor = rendererClass.getConstructor();
DBMSMetadata.java,Properties mergedProperties = dbURI.getDbType().getProperties();,if (dbURI != null ) Properties mergedProperties = dbURI.getDbType().getProperties();
DBMSMetadata.java,Properties mergedProperties = dbURI.getDbType().getProperties();,if (dbURI != null ) Properties mergedProperties = dbURI.getDbType().getProperties();
DBMSMetadata.java,Properties dbURIProperties = dbURI.getDbType().getProperties();,if (dbURI != null ) Properties dbURIProperties = dbURI.getDbType().getProperties();
DBMSMetadata.java,this.returnType = dbURI.getSourceCodeType();,if (dbURI != null ) this.returnType = dbURI.getSourceCodeType();
DBMSMetadata.java,String driverClass = dbURI.getDriverClass();,if (dbURI != null ) String driverClass = dbURI.getDriverClass();
DBMSMetadata.java,String urlString = dbURI.getURL().toString();,if (dbURI != null ) String urlString = dbURI.getURL().toString();
DBMSMetadata.java,sourceCodeObjects = sourceCodeObjectsStatement.executeQuery();,if (sourceCodeObjectsStatement != null ) sourceCodeObjects = sourceCodeObjectsStatement.executeQuery();
DBMSMetadata.java,DatabaseMetaData metadata = connection.getMetaData();,if (connection != null ) DatabaseMetaData metadata = connection.getMetaData();
DBMSMetadata.java,List<String> schemasList = dburi.getSchemasList();,if (dburi != null ) List<String> schemasList = dburi.getSchemasList();
FileExtensionFilter.java,String name = file.getName();,if (file != null ) String name = file.getName();
Filters.java,String path = file.getPath();,if (file != null ) String path = file.getPath();
ConfigurationTest.java,Renderer renderer = configuration.createRenderer();,if (configuration != null ) Renderer renderer = configuration.createRenderer();
ConfigurationTest.java,renderer = configuration.createRenderer();,if (configuration != null ) renderer = configuration.createRenderer();
RuleSetReferenceIdTest.java,InputStream inputStream = ruleSetReferenceId.getInputStream(RuleSetReferenceIdTest.class.getClassLoader());,if (ruleSetReferenceId != null ) InputStream inputStream = ruleSetReferenceId.getInputStream(RuleSetReferenceIdTest.class.getClassLoader());
RuleSetReferenceIdTest.java,InputStream inputStream = ruleSetReferenceId.getInputStream(RuleSetReferenceIdTest.class.getClassLoader());,if (ruleSetReferenceId != null ) InputStream inputStream = ruleSetReferenceId.getInputStream(RuleSetReferenceIdTest.class.getClassLoader());
RuleViolationComparatorTest.java,long seed = System.nanoTime();,if (System != null ) long seed = System.nanoTime();
AbstractJavaParser.java,String suppressMarker = getParserOptions().getSuppressMarker();,if (getParserOptions() != null ) String suppressMarker = getParserOptions().getSuppressMarker();
DumpFacade.java,String image = node.getImage();,if (node != null ) String image = node.getImage();
JavaDataFlowNode.java,res = super.toString();,if (super != null ) res = super.toString();
JavaRuleViolation.java,final Scope scope = node.getScope();,if (node != null ) final Scope scope = node.getScope();
JavaRuleViolation.java,Node parent = node.jjtGetParent();,if (node != null ) Node parent = node.jjtGetParent();
JavaRuleViolation.java,parent = parent.jjtGetParent();,if (parent != null ) parent = parent.jjtGetParent();
JavaRuleViolation.java,variableName = node.getImage();,if (node != null ) variableName = node.getImage();
CheckSkipResultRule.java,ASTType typeNode = node.getTypeNode();,if (node != null ) ASTType typeNode = node.getTypeNode();
CheckSkipResultRule.java,NameOccurrence qualifier = jocc.getNameForWhichThisIsAQualifier();,if (jocc != null ) NameOccurrence qualifier = jocc.getNameForWhichThisIsAQualifier();
CheckSkipResultRule.java,Node loc = jocc.getLocation();,if (jocc != null ) Node loc = jocc.getLocation();
OverrideBothEqualsAndHashcodeRule.java,paramName = param.getImage();,if (param != null ) paramName = param.getImage();
NPathComplexityRule.java,children += element.jjtGetNumChildren();,if (element != null ) children += element.jjtGetNumChildren();
NPathComplexityRule.java,children += element.jjtGetNumChildren();,if (element != null ) children += element.jjtGetNumChildren();
StdCyclomaticComplexityRule.java,Entry entry = entryStack.peek();,if (entryStack != null ) Entry entry = entryStack.peek();
StdCyclomaticComplexityRule.java,int childCount = node.jjtGetNumChildren();,if (node != null ) int childCount = node.jjtGetNumChildren();
StdCyclomaticComplexityRule.java,Entry classEntry = entryStack.pop();,if (entryStack != null ) Entry classEntry = entryStack.pop();
StdCyclomaticComplexityRule.java,Entry methodEntry = entryStack.pop();,if (entryStack != null ) Entry methodEntry = entryStack.pop();
StdCyclomaticComplexityRule.java,Entry classEntry = entryStack.peek();,if (entryStack != null ) Entry classEntry = entryStack.peek();
StdCyclomaticComplexityRule.java,Entry classEntry = entryStack.pop();,if (entryStack != null ) Entry classEntry = entryStack.pop();
StdCyclomaticComplexityRule.java,Entry constructorEntry = entryStack.pop();,if (entryStack != null ) Entry constructorEntry = entryStack.pop();
StdCyclomaticComplexityRule.java,Entry classEntry = entryStack.peek();,if (entryStack != null ) Entry classEntry = entryStack.peek();
TooManyFieldsRule.java,String key = clazz.getImage();,if (clazz != null ) String key = clazz.getImage();
AssignmentInOperandRule.java,Node parent = node.jjtGetParent();,if (node != null ) Node parent = node.jjtGetParent();
DataflowAnomalyAnalysisRule.java,Iterator<DataFlowNode> pathIterator = path.iterator();,if (path != null ) Iterator<DataFlowNode> pathIterator = path.iterator();
DataflowAnomalyAnalysisRule.java,DataFlowNode inode = pathIterator.next();,if (pathIterator != null ) DataFlowNode inode = pathIterator.next();
DataflowAnomalyAnalysisRule.java,Usage lastUsage = usagesByVarName.get(va.getVariableName());,if (usagesByVarName != null ) Usage lastUsage = usagesByVarName.get(va.getVariableName());
DataflowAnomalyAnalysisRule.java,int startLine = u.node.getLine();,if (u != null ) int startLine = u.node.getLine();
DataflowAnomalyAnalysisRule.java,int endLine = inode.getLine();,if (inode != null ) int endLine = inode.getLine();
DataflowAnomalyAnalysisRule.java,Node lastNode = inode.getNode();,if (inode != null ) Node lastNode = inode.getNode();
DataflowAnomalyAnalysisRule.java,Node firstNode = u.node.getNode();,if (u != null ) Node firstNode = u.node.getNode();
SuspiciousOctalEscapeRule.java,String image = node.getImage();,if (node != null ) String image = node.getImage();
LooseCouplingRule.java,String typeName = node.getImage();,if (node != null ) String typeName = node.getImage();
LoosePackageCouplingRule.java,this.thisPackage = node.getPackageNameImage();,if (node != null ) this.thisPackage = node.getPackageNameImage();
LoosePackageCouplingRule.java,String importPackage = node.getPackageName();,if (node != null ) String importPackage = node.getPackageName();
LoosePackageCouplingRule.java,String importedName = node.getImportedName();,if (node != null ) String importedName = node.getImportedName();
AccessorClassGenerationRule.java,argumentCount = aa.getArgumentCount();,if (aa != null ) argumentCount = aa.getArgumentCount();
AccessorClassGenerationRule.java,"name = stripString(aPackageName + '.', an.getImage());","if (an != null ) name = stripString(aPackageName + '.', an.getImage());"
AccessorClassGenerationRule.java,String aName = li.previous();,if (li != null ) String aName = li.previous();
AccessorClassGenerationRule.java,name = name.substring(findName.length());,if (name != null ) name = name.substring(findName.length());
AccessorClassGenerationRule.java,String typeName = node.getImage();,if (node != null ) String typeName = node.getImage();
AccessorClassGenerationRule.java,String typeName = node.getImage();,if (node != null ) String typeName = node.getImage();
AccessorClassGenerationRule.java,ASTConstructorDeclaration cd = constructors.next();,if (constructors != null ) ASTConstructorDeclaration cd = constructors.next();
AccessorClassGenerationRule.java,AllocData ad = allocations.next();,if (allocations != null ) AllocData ad = allocations.next();
AvoidReassigningParametersRule.java,VariableNameDeclaration decl = entry.getKey();,if (entry != null ) VariableNameDeclaration decl = entry.getKey();
AvoidReassigningParametersRule.java,List<NameOccurrence> usages = entry.getValue();,if (entry != null ) List<NameOccurrence> usages = entry.getValue();
CloseResourceRule.java,ASTType type = var.getTypeNode();,if (var != null ) ASTType type = var.getTypeNode();
CloseResourceRule.java,String variableToClose = id.getImage();,if (id != null ) String variableToClose = id.getImage();
CloseResourceRule.java,String name = oName.getImage();,if (oName != null ) String name = oName.getImage();
CloseResourceRule.java,"String prefixPlusSuffix = prefix.getImage() + ""."" + suffix.getImage();","if (suffix != null ) String prefixPlusSuffix = prefix.getImage() + ""."" + suffix.getImage();"
CloseResourceRule.java,String suff = oSuffix.getImage();,if (oSuffix != null ) String suff = oSuffix.getImage();
CloseResourceRule.java,String paramName = pName.getImage();,if (pName != null ) String paramName = pName.getImage();
ConstructorCallsOverridableMethodRule.java,int i = node.jjtGetNumChildren();,if (node != null ) int i = node.jjtGetNumChildren();
ConstructorCallsOverridableMethodRule.java,int numOfArguments = args.getArgumentCount();,if (args != null ) int numOfArguments = args.getArgumentCount();
ConstructorCallsOverridableMethodRule.java,String name = child.getImage(); // special case,if (case != null ) String name = child.getImage(); // special case
ConstructorCallsOverridableMethodRule.java,String name = child.getImage();,if (child != null ) String name = child.getImage();
ConstructorCallsOverridableMethodRule.java,String value = st.nextToken();,if (st != null ) String value = st.nextToken();
ConstructorCallsOverridableMethodRule.java,String name = child.getImage();,if (child != null ) String name = child.getImage();
ConstructorCallsOverridableMethodRule.java,count = aa.getArgumentCount();,if (aa != null ) count = aa.getArgumentCount();
ConstructorCallsOverridableMethodRule.java,name = eci.getImage();,if (eci != null ) name = eci.getImage();
ConstructorCallsOverridableMethodRule.java,eci = ci.getASTExplicitConstructorInvocation();,if (ci != null ) eci = ci.getASTExplicitConstructorInvocation();
ConstructorCallsOverridableMethodRule.java,calledMethods = Collections.emptyList();,if (Collections != null ) calledMethods = Collections.emptyList();
ConstructorCallsOverridableMethodRule.java,allMethodsOfClass = Collections.emptyMap();,if (Collections != null ) allMethodsOfClass = Collections.emptyMap();
ConstructorCallsOverridableMethodRule.java,calledConstructors = Collections.emptyList();,if (Collections != null ) calledConstructors = Collections.emptyList();
ConstructorCallsOverridableMethodRule.java,allPrivateConstructorsOfClass = Collections.emptyMap();,if (Collections != null ) allPrivateConstructorsOfClass = Collections.emptyMap();
ConstructorCallsOverridableMethodRule.java,String className = node.getImage();,if (node != null ) String className = node.getImage();
ConstructorCallsOverridableMethodRule.java,String methName = h.getASTMethodDeclarator().getImage();,if (h != null ) String methName = h.getASTMethodDeclarator().getImage();
ConstructorCallsOverridableMethodRule.java,int count = h.getASTMethodDeclarator().getParameterCount();,if (h != null ) int count = h.getASTMethodDeclarator().getParameterCount();
ConstructorCallsOverridableMethodRule.java,List<String> parameterTypes = getMethodDeclaratorParameterTypes(h.getASTMethodDeclarator());,if (getMethodDeclaratorParameterTypes(h != null ) List<String> parameterTypes = getMethodDeclaratorParameterTypes(h.getASTMethodDeclarator());
ConstructorCallsOverridableMethodRule.java,int paramCount = ch.getASTConstructorDeclaration().getParameterCount();,if (ch != null ) int paramCount = ch.getASTConstructorDeclaration().getParameterCount();
ConstructorCallsOverridableMethodRule.java,MethodHolder h = entry.getKey();,if (entry != null ) MethodHolder h = entry.getKey();
ConstructorCallsOverridableMethodRule.java,List<MethodInvocation> calledMeths = entry.getValue();,if (entry != null ) List<MethodInvocation> calledMeths = entry.getValue();
ConstructorCallsOverridableMethodRule.java,MethodInvocation meth = calledMethsIter.next();,if (calledMethsIter != null ) MethodInvocation meth = calledMethsIter.next();
ConstructorCallsOverridableMethodRule.java,ConstructorHolder ch = entry.getKey();,if (entry != null ) ConstructorHolder ch = entry.getKey();
ConstructorCallsOverridableMethodRule.java,List<MethodInvocation> calledMeths = entry.getValue();,if (entry != null ) List<MethodInvocation> calledMeths = entry.getValue();
ConstructorCallsOverridableMethodRule.java,MethodInvocation meth = calledMethsIter.next(); // CCE,if (CCE != null ) MethodInvocation meth = calledMethsIter.next(); // CCE
ConstructorCallsOverridableMethodRule.java,String methName = meth.getName();,if (meth != null ) String methName = meth.getName();
ConstructorCallsOverridableMethodRule.java,int methArgCount = meth.getArgumentCount();,if (meth != null ) int methArgCount = meth.getArgumentCount();
ConstructorCallsOverridableMethodRule.java,String matchName = h.getASTMethodDeclarator().getImage();,if (h != null ) String matchName = h.getASTMethodDeclarator().getImage();
ConstructorCallsOverridableMethodRule.java,int matchParamCount = h.getASTMethodDeclarator().getParameterCount();,if (h != null ) int matchParamCount = h.getASTMethodDeclarator().getParameterCount();
ConstructorCallsOverridableMethodRule.java,List<String> parameterTypes = getMethodDeclaratorParameterTypes(h.getASTMethodDeclarator());,if (getMethodDeclaratorParameterTypes(h != null ) List<String> parameterTypes = getMethodDeclaratorParameterTypes(h.getASTMethodDeclarator());
ConstructorCallsOverridableMethodRule.java,ConstructorInvocation calledC = ch.getCalledConstructor();,if (ch != null ) ConstructorInvocation calledC = ch.getCalledConstructor();
ConstructorCallsOverridableMethodRule.java,int cCount = calledC.getArgumentCount();,if (calledC != null ) int cCount = calledC.getArgumentCount();
ConstructorCallsOverridableMethodRule.java,ASTExplicitConstructorInvocation eci = ch.getASTExplicitConstructorInvocation();,if (ch != null ) ASTExplicitConstructorInvocation eci = ch.getASTExplicitConstructorInvocation();
ConstructorCallsOverridableMethodRule.java,AccessNode parent = (AccessNode) node.jjtGetParent();,if (node != null ) AccessNode parent = (AccessNode) node.jjtGetParent();
ConstructorCallsOverridableMethodRule.java,List<String> packClass = meth.getQualifierNames();,if (meth != null ) List<String> packClass = meth.getQualifierNames();
SimplifyBooleanReturnsRule.java,ASTResultType r = node.getResultType();,if (node != null ) ASTResultType r = node.getResultType();
SimplifyBooleanReturnsRule.java,Node blockStatement = ifNode.jjtGetParent().jjtGetParent();,if (ifNode != null ) Node blockStatement = ifNode.jjtGetParent().jjtGetParent();
SimplifyBooleanReturnsRule.java,Node block = blockStatement.jjtGetParent();,if (blockStatement != null ) Node block = blockStatement.jjtGetParent();
BeanMembersShouldSerializeRule.java,imageArray[i] = nodes.get(i).getImage();,if (nodes != null ) imageArray[i] = nodes.get(i).getImage();
BeanMembersShouldSerializeRule.java,List<ASTMethodDeclarator> getSetMethList = new ArrayList<>(methods.size());,if (ArrayList<>(methods != null ) List<ASTMethodDeclarator> getSetMethList = new ArrayList<>(methods.size());
BeanMembersShouldSerializeRule.java,AccessNode accessNodeParent = decl.getAccessNodeParent();,if (decl != null ) AccessNode accessNodeParent = decl.getAccessNodeParent();
BeanMembersShouldSerializeRule.java,String varName = trimIfPrefix(decl.getImage());,if (trimIfPrefix(decl != null ) String varName = trimIfPrefix(decl.getImage());
BeanMembersShouldSerializeRule.java,String methodName = meth.getImage();,if (meth != null ) String methodName = meth.getImage();
MoreThanOneLoggerRule.java,count = stack.pop();,if (stack != null ) count = stack.pop();
AvoidFieldNameMatchingMethodNameRule.java,int n = node.jjtGetNumChildren();,if (node != null ) int n = node.jjtGetNumChildren();
AvoidFieldNameMatchingMethodNameRule.java,String varName = field.getVariableName().toLowerCase();,if (field != null ) String varName = field.getVariableName().toLowerCase();
MethodNamingConventionsRule.java,String methodName = node.getImage();,if (node != null ) String methodName = node.getImage();
VariableNamingConventionsRule.java,boolean isStatic = node.isStatic();,if (node != null ) boolean isStatic = node.isStatic();
VariableNamingConventionsRule.java,boolean isFinal = node.isFinal();,if (node != null ) boolean isFinal = node.isFinal();
VariableNamingConventionsRule.java,String varName = variableDeclaratorId.getImage();,if (variableDeclaratorId != null ) String varName = variableDeclaratorId.getImage();
PrematureDeclarationRule.java,Node currentParent = node.jjtGetParent();,if (node != null ) Node currentParent = node.jjtGetParent();
PrematureDeclarationRule.java,currentParent = currentParent.jjtGetParent();,if (currentParent != null ) currentParent = currentParent.jjtGetParent();
PrematureDeclarationRule.java,int count = block.jjtGetNumChildren();,if (block != null ) int count = block.jjtGetNumChildren();
PrematureDeclarationRule.java,int count = block.jjtGetNumChildren();,if (block != null ) int count = block.jjtGetNumChildren();
RedundantFieldInitializerRule.java,value = parseInteger(literal.getImage());,if (parseInteger(literal != null ) value = parseInteger(literal.getImage());
RedundantFieldInitializerRule.java,String s = literal.getImage();,if (literal != null ) String s = literal.getImage();
RedundantFieldInitializerRule.java,String s = literal.getImage();,if (literal != null ) String s = literal.getImage();
RedundantFieldInitializerRule.java,value = Double.valueOf(literal.getImage());,if (Double != null ) value = Double.valueOf(literal.getImage());
RedundantFieldInitializerRule.java,result = result.negate();,if (result != null ) result = result.negate();
SignatureDeclareThrowsExceptionRule.java,List<ASTName> exceptionList = Collections.emptyList();,if (Collections != null ) List<ASTName> exceptionList = Collections.emptyList();
SignatureDeclareThrowsExceptionRule.java,Node parent = exception.jjtGetParent().jjtGetParent();,if (exception != null ) Node parent = exception.jjtGetParent().jjtGetParent();
UselessOverridingMethodRule.java,ASTResultType type = node.getResultType();,if (node != null ) ASTResultType type = node.getResultType();
UselessOverridingMethodRule.java,ASTBlock block = node.getBlock();,if (node != null ) ASTBlock block = node.getBlock();
UselessOverridingMethodRule.java,ASTClassOrInterfaceBodyDeclaration parent = (ASTClassOrInterfaceBodyDeclaration) node.jjtGetParent();,if (node != null ) ASTClassOrInterfaceBodyDeclaration parent = (ASTClassOrInterfaceBodyDeclaration) node.jjtGetParent();
UnusedFormalParameterRule.java,ASTNameList throwsList = node.getThrows();,if (node != null ) ASTNameList throwsList = node.getThrows();
UnusedFormalParameterRule.java,VariableNameDeclaration nameDecl = entry.getKey();,if (entry != null ) VariableNameDeclaration nameDecl = entry.getKey();
UnusedFormalParameterRule.java,int childIndex = node.jjtGetChildIndex();,if (node != null ) int childIndex = node.jjtGetChildIndex();
UnusedPrivateFieldRule.java,VariableNameDeclaration decl = entry.getKey();,if (entry != null ) VariableNameDeclaration decl = entry.getKey();
UnusedPrivateFieldRule.java,AccessNode accessNodeParent = decl.getAccessNodeParent();,if (decl != null ) AccessNode accessNodeParent = decl.getAccessNodeParent();
UnusedPrivateMethodRule.java,Node occNode = occ.getLocation();,if (occ != null ) Node occNode = occ.getLocation();
UnusedPrivateMethodRule.java,ASTMethodDeclarator node = (ASTMethodDeclarator) mnd.getNode();,if (mnd != null ) ASTMethodDeclarator node = (ASTMethodDeclarator) mnd.getNode();
TypeHelper.java,superC = superC.getSuperclass();,if (superC != null ) superC = superC.getSuperclass();
TypeOfFunction.java,nodeTypeName = attr.getStringValue();,if (attr != null ) nodeTypeName = attr.getStringValue();
TypeOfFunction.java,superC = superC.getSuperclass();,if (superC != null ) superC = superC.getSuperclass();
LanguageVersionDiscovererTest.java,LanguageVersionDiscoverer languageVersionDiscoverer = configuration.getLanguageVersionDiscoverer();,if (configuration != null ) LanguageVersionDiscoverer languageVersionDiscoverer = configuration.getLanguageVersionDiscoverer();
JavaRuleViolationTest.java,final ParserOptions options = languageVersionHandler.getDefaultParserOptions();,if (languageVersionHandler != null ) final ParserOptions options = languageVersionHandler.getDefaultParserOptions();
EcmascriptParserOptions.java,int result = super.hashCode();,if (super != null ) int result = super.hashCode();
AbstractEcmascriptNode.java,int startOffset = node.getAbsolutePosition();,if (node != null ) int startOffset = node.getAbsolutePosition();
AbstractEcmascriptNode.java,int endOffset = startOffset + node.getLength();,if (node != null ) int endOffset = startOffset + node.getLength();
DumpFacade.java,String image = node.getImage();,if (node != null ) String image = node.getImage();
EcmascriptParser.java,suppressMarker = parserOptions.getSuppressMarker();,if (parserOptions != null ) suppressMarker = parserOptions.getSuppressMarker();
EcmascriptTreeBuilder.java,int nodeStart = node.getNode().getAbsolutePosition();,if (node != null ) int nodeStart = node.getNode().getAbsolutePosition();
EcmascriptTreeBuilder.java,int problemStart = parseProblem.getFileOffset();,if (parseProblem != null ) int problemStart = parseProblem.getFileOffset();
EcmascriptRuleChainVisitor.java,Node node = stack.pop();,if (stack != null ) Node node = stack.pop();
ConsistentReturnRule.java,hasResult = Boolean.valueOf(returnStatement.hasResult());,if (Boolean != null ) hasResult = Boolean.valueOf(returnStatement.hasResult());
EcmascriptParserOptionsTest.java,parserOptions = (EcmascriptParserOptions) rule.getParserOptions();,if (rule != null ) parserOptions = (EcmascriptParserOptions) rule.getParserOptions();
DumpFacade.java,String image = node.getImage();,if (node != null ) String image = node.getImage();
MatlabTokenizer.java,StringBuilder buffer = sourceCode.getCodeBuffer();,if (sourceCode != null ) StringBuilder buffer = sourceCode.getCodeBuffer();
MatlabTokenizer.java,reader = new StringReader(buffer.toString());,if (StringReader(buffer != null ) reader = new StringReader(buffer.toString());
MatlabTokenizer.java,Token currentToken = (Token) tokenManager.getNextToken();,if (tokenManager != null ) Token currentToken = (Token) tokenManager.getNextToken();
MatlabTokenizer.java,currentToken = (Token) tokenManager.getNextToken();,if (tokenManager != null ) currentToken = (Token) tokenManager.getNextToken();
DumpFacade.java,String image = node.getImage();,if (node != null ) String image = node.getImage();
DumpFacade.java,image = node.getImage();,if (node != null ) image = node.getImage();
PLSQLDataFlowNode.java,res += super.toString();,if (super != null ) res += super.toString();
CyclomaticComplexityRule.java,Entry entry = entryStack.peek();,if (entryStack != null ) Entry entry = entryStack.peek();
CyclomaticComplexityRule.java,Entry entry = entryStack.peek();,if (entryStack != null ) Entry entry = entryStack.peek();
CyclomaticComplexityRule.java,Entry classEntry = entryStack.pop();,if (entryStack != null ) Entry classEntry = entryStack.pop();
CyclomaticComplexityRule.java,Entry classEntry = entryStack.pop();,if (entryStack != null ) Entry classEntry = entryStack.pop();
CyclomaticComplexityRule.java,Entry methodEntry = entryStack.pop();,if (entryStack != null ) Entry methodEntry = entryStack.pop();
CyclomaticComplexityRule.java,Entry classEntry = entryStack.peek();,if (entryStack != null ) Entry classEntry = entryStack.peek();
CyclomaticComplexityRule.java,Entry methodEntry = entryStack.pop();,if (entryStack != null ) Entry methodEntry = entryStack.pop();
CyclomaticComplexityRule.java,Entry classEntry = entryStack.peek();,if (entryStack != null ) Entry classEntry = entryStack.peek();
CyclomaticComplexityRule.java,Entry methodEntry = entryStack.pop();,if (entryStack != null ) Entry methodEntry = entryStack.pop();
CyclomaticComplexityRule.java,Entry classEntry = entryStack.peek();,if (entryStack != null ) Entry classEntry = entryStack.peek();
NPathComplexityRule.java,children += element.jjtGetNumChildren();,if (element != null ) children += element.jjtGetNumChildren();
NPathComplexityRule.java,children += element.jjtGetNumChildren();,if (element != null ) children += element.jjtGetNumChildren();
TooManyFieldsRule.java,String key = clazz.getImage();,if (clazz != null ) String key = clazz.getImage();
PythonTokenizer.java,StringBuilder buffer = sourceCode.getCodeBuffer();,if (sourceCode != null ) StringBuilder buffer = sourceCode.getCodeBuffer();
PythonTokenizer.java,reader = new StringReader(buffer.toString());,if (StringReader(buffer != null ) reader = new StringReader(buffer.toString());
PythonTokenizer.java,Token currentToken = (Token) tokenManager.getNextToken();,if (tokenManager != null ) Token currentToken = (Token) tokenManager.getNextToken();
PythonTokenizer.java,currentToken = (Token) tokenManager.getNextToken();,if (tokenManager != null ) currentToken = (Token) tokenManager.getNextToken();
AbstractLanguageVersionTest.java,Language language = LanguageRegistry.getLanguage(sourceLanguage.getName());,if (LanguageRegistry != null ) Language language = LanguageRegistry.getLanguage(sourceLanguage.getName());
AbstractLanguageVersionTest.java,languageVersion = language.getVersion(sourceLanguage.getVersion());,if (language != null ) languageVersion = language.getVersion(sourceLanguage.getVersion());
DumpFacade.java,String image = node.getImage();,if (node != null ) String image = node.getImage();
DumpFacade.java,Iterator<Attribute> iterator = node.getAttributeIterator();,if (node != null ) Iterator<Attribute> iterator = node.getAttributeIterator();
DumpFacade.java,Attribute attribute = iterator.next();,if (iterator != null ) Attribute attribute = iterator.next();
AbstractDomXmlRule.java,final Node domNode = node.getNode();,if (node != null ) final Node domNode = node.getNode();
AbstractDomXmlRule.java,NamedNodeMap attributes = domNode.getAttributes();,if (domNode != null ) NamedNodeMap attributes = domNode.getAttributes();
AbstractXmlRule.java,final int numChildren = node.jjtGetNumChildren();,if (node != null ) final int numChildren = node.jjtGetNumChildren();
XmlRuleChainVisitor.java,Node node = stack.pop();,if (stack != null ) Node node = stack.pop();
XmlParserOptionsTest.java,options = (XmlParserOptions) rule.getParserOptions();,if (rule != null ) options = (XmlParserOptions) rule.getParserOptions();
UnnecessaryLocalBeforeReturnRule.java,ASTBlock block = (ASTBlock) blockStatement.jjtGetParent();,if (blockStatement != null ) ASTBlock block = (ASTBlock) blockStatement.jjtGetParent();
MatchAlgorithm.java,Mark mark = occurrences.next();,if (occurrences != null ) Mark mark = occurrences.next();
SourceCode.java,List<String> lines = cl.getCode();,if (cl != null ) List<String> lines = cl.getCode();
AbstractPMDProcessor.java,long start = System.nanoTime();,if (System != null ) long start = System.nanoTime();
MonoThreadProcessor.java,InputStream stream = new BufferedInputStream(dataSource.getInputStream());,if (BufferedInputStream(dataSource != null ) InputStream stream = new BufferedInputStream(dataSource.getInputStream());
MultiThreadProcessor.java,report = future.get();,if (future != null ) report = future.get();
MultiThreadProcessor.java,Throwable t = ee.getCause();,if (ee != null ) Throwable t = ee.getCause();
PmdRunnable.java,PmdThread thread = (PmdThread) Thread.currentThread();,if (Thread != null ) PmdThread thread = (PmdThread) Thread.currentThread();
PmdRunnable.java,RuleContext ctx = thread.getRuleContext();,if (thread != null ) RuleContext ctx = thread.getRuleContext();
PmdRunnable.java,RuleSets rs = thread.getRuleSets(configuration.getRuleSets());,if (thread != null ) RuleSets rs = thread.getRuleSets(configuration.getRuleSets());
AbstractNcssCountRule.java,numNodes += treeSize.intValue();,if (treeSize != null ) numNodes += treeSize.intValue();
AbstractNcssCountRule.java,lineCount += nodeCount.intValue();,if (nodeCount != null ) lineCount += nodeCount.intValue();
ApexCRUDViolationRule.java,int numberOfStatements = blockStatement.jjtGetNumChildren();,if (blockStatement != null ) int numberOfStatements = blockStatement.jjtGetNumChildren();
ApexCRUDViolationRule.java,final String method = node.getNode().getMethodName();,if (node != null ) final String method = node.getNode().getMethodName();
ApexCRUDViolationRule.java,List<Identifier> a = ref.getNode().getJadtIdentifiers();,if (ref != null ) List<Identifier> a = ref.getNode().getJadtIdentifiers();
ApexCRUDViolationRule.java,int numberOfStatements = blockStatement.jjtGetNumChildren();,if (blockStatement != null ) int numberOfStatements = blockStatement.jjtGetNumChildren();
ApexCRUDViolationRule.java,final String method = node.getNode().getMethodName();,if (node != null ) final String method = node.getNode().getMethodName();
ApexCRUDViolationRule.java,List<Identifier> a = ref.getNode().getJadtIdentifiers();,if (ref != null ) List<Identifier> a = ref.getNode().getJadtIdentifiers();
ClassScope.java,int nameLength = typeImage.length();,if (typeImage != null ) int nameLength = typeImage.length();
ClassScope.java,Scope s = name.getScope();,if (name != null ) Scope s = name.getScope();
ClassScope.java,"final JavaNameOccurrence nameOccurrence = new JavaNameOccurrence(name, name.getImage());","if (name != null ) final JavaNameOccurrence nameOccurrence = new JavaNameOccurrence(name, name.getImage());"
ChecksumAware.java,Rule r = it.next();,if (it != null ) Rule r = it.next();
ChecksumAware.java,StringReader reader = new StringReader(codeEditorPane.getText());,if (StringReader(codeEditorPane != null ) StringReader reader = new StringReader(codeEditorPane.getText());
RuleSetTest.java,Collection rules = IUT.getRules();,if (IUT != null ) Collection rules = IUT.getRules();
RuleSetTest.java,Iterator i = rules.iterator();,if (rules != null ) Iterator i = rules.iterator();
RuleSetTest.java,Iterator violations = context.getReport().iterator();,if (context != null ) Iterator violations = context.getReport().iterator();
RuleSetTest.java,Iterator expected = values.iterator();,if (values != null ) Iterator expected = values.iterator();
CloneMethodMustImplementCloneable.java,clazz = clazz.getSuperclass();,if (clazz != null ) clazz = clazz.getSuperclass();
ApexBadCryptoRule.java,int numberOfChildren = methodCall.jjtGetNumChildren();,if (methodCall != null ) int numberOfChildren = methodCall.jjtGetNumChildren();
ApexCRUDViolationRule.java,final String method = node.getNode().getMethodName();,if (node != null ) final String method = node.getNode().getMethodName();
ApexCRUDViolationRule.java,List<Identifier> a = ref.getNode().getJadtIdentifiers();,if (ref != null ) List<Identifier> a = ref.getNode().getJadtIdentifiers();
ApexCRUDViolationRule.java,final boolean hasMapping = checkedTypeToDMLOperationViaESAPI.containsKey(typeToCheck.toString());,if (checkedTypeToDMLOperationViaESAPI != null ) final boolean hasMapping = checkedTypeToDMLOperationViaESAPI.containsKey(typeToCheck.toString());
ApexCRUDViolationRule.java,List<Identifier> identifiers = reference.getNode().getJadtIdentifiers();,if (reference != null ) List<Identifier> identifiers = reference.getNode().getJadtIdentifiers();
ApexInsecureEndpointRule.java,Object o = literalNode.getNode().getLiteral();,if (literalNode != null ) Object o = literalNode.getNode().getLiteral();
ApexInsecureEndpointRule.java,Object o = literalNode.getNode().getLiteral();,if (literalNode != null ) Object o = literalNode.getNode().getLiteral();
ApexSOQLInjectionRule.java,Object o = literal.getNode().getLiteral();,if (literal != null ) Object o = literal.getNode().getLiteral();
ApexSOQLInjectionRule.java,Object o = literal.getNode().getLiteral();,if (literal != null ) Object o = literal.getNode().getLiteral();
ApexXSSFromEscapeFalseRule.java,int numberOfChildren = methodCall.jjtGetNumChildren();,if (methodCall != null ) int numberOfChildren = methodCall.jjtGetNumChildren();
ApexXSSFromEscapeFalseRule.java,Object o = parameter.getNode().getLiteral();,if (parameter != null ) Object o = parameter.getNode().getLiteral();
Helper.java,VariableExpression n = variable.getNode();,if (variable != null ) VariableExpression n = variable.getNode();
ApexCRUDViolationRule.java,final String type = varToTypeMapping.get(sb.toString());,if (varToTypeMapping != null ) final String type = varToTypeMapping.get(sb.toString());
ApexCRUDViolationRule.java,String type = varToTypeMapping.get(variableWithClass.toString());,if (varToTypeMapping != null ) String type = varToTypeMapping.get(variableWithClass.toString());
ApexInsecureEndpointRule.java,VariableExpression varExpression = variableNode.getNode();,if (variableNode != null ) VariableExpression varExpression = variableNode.getNode();
ApexInsecureEndpointRule.java,VariableExpression varExpression = variableNode.getNode();,if (variableNode != null ) VariableExpression varExpression = variableNode.getNode();
ApexSOQLInjectionRule.java,final VariableExpression l = left.getNode();,if (left != null ) final VariableExpression l = left.getNode();
ApexSOQLInjectionRule.java,final VariableExpression var = left.getNode();,if (left != null ) final VariableExpression var = left.getNode();
ApexSOQLInjectionRule.java,boolean isLiteral = selectContainingVariables.get(sb.toString());,if (selectContainingVariables != null ) boolean isLiteral = selectContainingVariables.get(sb.toString());
ApexSOQLInjectionRule.java,boolean isLiteral = selectContainingVariables.get(sb.toString());,if (selectContainingVariables != null ) boolean isLiteral = selectContainingVariables.get(sb.toString());
ApexXSSFromURLParamRule.java,VariableExpression n = left.getNode();,if (left != null ) VariableExpression n = left.getNode();
ApexXSSFromURLParamRule.java,VariableExpression n = variable.getNode();,if (variable != null ) VariableExpression n = variable.getNode();
ApexBadCryptoRule.java,int numberOfChildren = methodCall.jjtGetNumChildren();,if (methodCall != null ) int numberOfChildren = methodCall.jjtGetNumChildren();
ApexCRUDViolationRule.java,final String method = node.getNode().getMethodName();,if (node != null ) final String method = node.getNode().getMethodName();
ApexCRUDViolationRule.java,List<Identifier> a = ref.getNode().getJadtIdentifiers();,if (ref != null ) List<Identifier> a = ref.getNode().getJadtIdentifiers();
ApexCRUDViolationRule.java,final boolean hasMapping = checkedTypeToDMLOperationViaESAPI.containsKey(typeToCheck.toString());,if (checkedTypeToDMLOperationViaESAPI != null ) final boolean hasMapping = checkedTypeToDMLOperationViaESAPI.containsKey(typeToCheck.toString());
ApexCRUDViolationRule.java,List<Identifier> identifiers = reference.getNode().getJadtIdentifiers();,if (reference != null ) List<Identifier> identifiers = reference.getNode().getJadtIdentifiers();
ApexInsecureEndpointRule.java,Object o = literalNode.getNode().getLiteral();,if (literalNode != null ) Object o = literalNode.getNode().getLiteral();
ApexInsecureEndpointRule.java,Object o = literalNode.getNode().getLiteral();,if (literalNode != null ) Object o = literalNode.getNode().getLiteral();
ApexSOQLInjectionRule.java,Object o = literal.getNode().getLiteral();,if (literal != null ) Object o = literal.getNode().getLiteral();
ApexSOQLInjectionRule.java,Object o = literal.getNode().getLiteral();,if (literal != null ) Object o = literal.getNode().getLiteral();
ApexXSSFromEscapeFalseRule.java,int numberOfChildren = methodCall.jjtGetNumChildren();,if (methodCall != null ) int numberOfChildren = methodCall.jjtGetNumChildren();
ApexXSSFromEscapeFalseRule.java,Object o = parameter.getNode().getLiteral();,if (parameter != null ) Object o = parameter.getNode().getLiteral();
Helper.java,VariableExpression n = variable.getNode();,if (variable != null ) VariableExpression n = variable.getNode();
ApexBadCryptoRule.java,int numberOfChildren = methodCall.jjtGetNumChildren();,if (methodCall != null ) int numberOfChildren = methodCall.jjtGetNumChildren();
ApexCRUDViolationRule.java,final String method = node.getNode().getMethodName();,if (node != null ) final String method = node.getNode().getMethodName();
ApexCRUDViolationRule.java,List<Identifier> a = ref.getNode().getJadtIdentifiers();,if (ref != null ) List<Identifier> a = ref.getNode().getJadtIdentifiers();
ApexCRUDViolationRule.java,final String type = varToTypeMapping.get(sb.toString());,if (varToTypeMapping != null ) final String type = varToTypeMapping.get(sb.toString());
ApexCRUDViolationRule.java,final boolean hasMapping = checkedTypeToDMLOperationViaESAPI.containsKey(typeToCheck.toString());,if (checkedTypeToDMLOperationViaESAPI != null ) final boolean hasMapping = checkedTypeToDMLOperationViaESAPI.containsKey(typeToCheck.toString());
ApexCRUDViolationRule.java,List<Identifier> identifiers = reference.getNode().getJadtIdentifiers();,if (reference != null ) List<Identifier> identifiers = reference.getNode().getJadtIdentifiers();
ApexCRUDViolationRule.java,String type = varToTypeMapping.get(variableWithClass.toString());,if (varToTypeMapping != null ) String type = varToTypeMapping.get(variableWithClass.toString());
ApexInsecureEndpointRule.java,Object o = literalNode.getNode().getLiteral();,if (literalNode != null ) Object o = literalNode.getNode().getLiteral();
ApexInsecureEndpointRule.java,VariableExpression varExpression = variableNode.getNode();,if (variableNode != null ) VariableExpression varExpression = variableNode.getNode();
ApexInsecureEndpointRule.java,Object o = literalNode.getNode().getLiteral();,if (literalNode != null ) Object o = literalNode.getNode().getLiteral();
ApexInsecureEndpointRule.java,VariableExpression varExpression = variableNode.getNode();,if (variableNode != null ) VariableExpression varExpression = variableNode.getNode();
ApexSOQLInjectionRule.java,final VariableExpression l = left.getNode();,if (left != null ) final VariableExpression l = left.getNode();
ApexSOQLInjectionRule.java,Object o = literal.getNode().getLiteral();,if (literal != null ) Object o = literal.getNode().getLiteral();
ApexSOQLInjectionRule.java,final VariableExpression var = left.getNode();,if (left != null ) final VariableExpression var = left.getNode();
ApexSOQLInjectionRule.java,Object o = literal.getNode().getLiteral();,if (literal != null ) Object o = literal.getNode().getLiteral();
ApexSOQLInjectionRule.java,boolean isLiteral = selectContainingVariables.get(sb.toString());,if (selectContainingVariables != null ) boolean isLiteral = selectContainingVariables.get(sb.toString());
ApexSOQLInjectionRule.java,boolean isLiteral = selectContainingVariables.get(sb.toString());,if (selectContainingVariables != null ) boolean isLiteral = selectContainingVariables.get(sb.toString());
ApexXSSFromEscapeFalseRule.java,int numberOfChildren = methodCall.jjtGetNumChildren();,if (methodCall != null ) int numberOfChildren = methodCall.jjtGetNumChildren();
ApexXSSFromEscapeFalseRule.java,Object o = parameter.getNode().getLiteral();,if (parameter != null ) Object o = parameter.getNode().getLiteral();
ApexXSSFromURLParamRule.java,VariableExpression n = left.getNode();,if (left != null ) VariableExpression n = left.getNode();
ApexXSSFromURLParamRule.java,VariableExpression n = variable.getNode();,if (variable != null ) VariableExpression n = variable.getNode();
ApexXSSFromURLParamRule.java,VariableExpression n = left.getNode();,if (left != null ) VariableExpression n = left.getNode();
ApexXSSFromURLParamRule.java,VariableExpression n = variable.getNode();,if (variable != null ) VariableExpression n = variable.getNode();
ClasspathClassLoader.java,String token = toker.nextToken();,if (toker != null ) String token = toker.nextToken();
ClasspathClassLoader.java,line = line.trim();,if (line != null ) line = line.trim();
ClasspathClassLoader.java,StringBuilder sb = new StringBuilder(getClass().getSimpleName());,if (StringBuilder(getClass() != null ) StringBuilder sb = new StringBuilder(getClass().getSimpleName());
ApexBadCryptoRule.java,int numberOfChildren = methodCall.jjtGetNumChildren();,if (methodCall != null ) int numberOfChildren = methodCall.jjtGetNumChildren();
ApexCRUDViolationRule.java,final String method = node.getNode().getMethodName();,if (node != null ) final String method = node.getNode().getMethodName();
ApexCRUDViolationRule.java,List<Identifier> a = ref.getNode().getJadtIdentifiers();,if (ref != null ) List<Identifier> a = ref.getNode().getJadtIdentifiers();
ApexCRUDViolationRule.java,final String type = varToTypeMapping.get(sb.toString());,if (varToTypeMapping != null ) final String type = varToTypeMapping.get(sb.toString());
ApexCRUDViolationRule.java,final boolean hasMapping = checkedTypeToDMLOperationViaESAPI.containsKey(typeToCheck.toString());,if (checkedTypeToDMLOperationViaESAPI != null ) final boolean hasMapping = checkedTypeToDMLOperationViaESAPI.containsKey(typeToCheck.toString());
ApexCRUDViolationRule.java,List<Identifier> identifiers = reference.getNode().getJadtIdentifiers();,if (reference != null ) List<Identifier> identifiers = reference.getNode().getJadtIdentifiers();
ApexCRUDViolationRule.java,String type = varToTypeMapping.get(variableWithClass.toString());,if (varToTypeMapping != null ) String type = varToTypeMapping.get(variableWithClass.toString());
ApexInsecureEndpointRule.java,Object o = literalNode.getNode().getLiteral();,if (literalNode != null ) Object o = literalNode.getNode().getLiteral();
ApexInsecureEndpointRule.java,VariableExpression varExpression = variableNode.getNode();,if (variableNode != null ) VariableExpression varExpression = variableNode.getNode();
ApexInsecureEndpointRule.java,Object o = literalNode.getNode().getLiteral();,if (literalNode != null ) Object o = literalNode.getNode().getLiteral();
ApexInsecureEndpointRule.java,VariableExpression varExpression = variableNode.getNode();,if (variableNode != null ) VariableExpression varExpression = variableNode.getNode();
ApexSOQLInjectionRule.java,final VariableExpression l = left.getNode();,if (left != null ) final VariableExpression l = left.getNode();
ApexSOQLInjectionRule.java,final VariableExpression l = left.getNode();,if (left != null ) final VariableExpression l = left.getNode();
ApexXSSFromEscapeFalseRule.java,int numberOfChildren = methodCall.jjtGetNumChildren();,if (methodCall != null ) int numberOfChildren = methodCall.jjtGetNumChildren();
ApexXSSFromEscapeFalseRule.java,Object o = parameter.getNode().getLiteral();,if (parameter != null ) Object o = parameter.getNode().getLiteral();
ApexXSSFromURLParamRule.java,VariableExpression n = left.getNode();,if (left != null ) VariableExpression n = left.getNode();
ApexXSSFromURLParamRule.java,VariableExpression n = variable.getNode();,if (variable != null ) VariableExpression n = variable.getNode();
XmlParserTest.java,XmlParserOptions options = (XmlParserOptions)xmlVersionHandler.getDefaultParserOptions();,if ((XmlParserOptions)xmlVersionHandler != null ) XmlParserOptions options = (XmlParserOptions)xmlVersionHandler.getDefaultParserOptions();
ApexSOQLInjectionRule.java,final VariableExpression l = left.getNode();,if (left != null ) final VariableExpression l = left.getNode();
ApexParserOptions.java,int result = super.hashCode();,if (super != null ) int result = super.hashCode();
AbstractApexNode.java,RealLoc loc = (RealLoc) node.getLoc();,if (node != null ) RealLoc loc = (RealLoc) node.getLoc();
AbstractApexNode.java,Loc loc = node.getLoc();,if (node != null ) Loc loc = node.getLoc();
ApexParser.java,suppressMarker = parserOptions.getSuppressMarker();,if (parserOptions != null ) suppressMarker = parserOptions.getSuppressMarker();
ApexParser.java,Compilation astRoot = visitor.getTopLevel();,if (visitor != null ) Compilation astRoot = visitor.getTopLevel();
ApexRootNode.java,this.endLine = positioner.getLastLine();,if (positioner != null ) this.endLine = positioner.getLastLine();
ApexRootNode.java,this.endColumn = positioner.getLastLineColumn();,if (positioner != null ) this.endColumn = positioner.getLastLineColumn();
DumpFacade.java,String image = node.getImage();,if (node != null ) String image = node.getImage();
ApexRuleChainVisitor.java,Node node = stack.pop();,if (stack != null ) Node node = stack.pop();
AbstractNcssCountRule.java,numNodes += treeSize.intValue();,if (treeSize != null ) numNodes += treeSize.intValue();
AbstractNcssCountRule.java,lineCount += nodeCount.intValue();,if (nodeCount != null ) lineCount += nodeCount.intValue();
StdCyclomaticComplexityRule.java,Entry classEntry = entryStack.pop();,if (entryStack != null ) Entry classEntry = entryStack.pop();
StdCyclomaticComplexityRule.java,Entry classEntry = entryStack.pop();,if (entryStack != null ) Entry classEntry = entryStack.pop();
StdCyclomaticComplexityRule.java,Entry classEntry = entryStack.pop();,if (entryStack != null ) Entry classEntry = entryStack.pop();
StdCyclomaticComplexityRule.java,Entry methodEntry = entryStack.pop();,if (entryStack != null ) Entry methodEntry = entryStack.pop();
StdCyclomaticComplexityRule.java,Entry classEntry = entryStack.peek();,if (entryStack != null ) Entry classEntry = entryStack.peek();
TooManyFieldsRule.java,int val = entry.getValue();,if (entry != null ) int val = entry.getValue();
TooManyFieldsRule.java,Node n = nodes.get(entry.getKey());,if (nodes != null ) Node n = nodes.get(entry.getKey());
TooManyFieldsRule.java,String key = clazz.getImage();,if (clazz != null ) String key = clazz.getImage();
AvoidDmlStatementsInLoopsRule.java,Node n = node.jjtGetParent();,if (node != null ) Node n = node.jjtGetParent();
AvoidSoqlInLoopsRule.java,Node n = node.jjtGetParent();,if (node != null ) Node n = node.jjtGetParent();
MethodNamingConventionsRule.java,String methodName = node.getImage();,if (node != null ) String methodName = node.getImage();
MethodWithSameNameAsEnclosingClassRule.java,String className = node.getImage();,if (node != null ) String className = node.getImage();
VariableNamingConventionsRule.java,String varName = node.getImage();,if (node != null ) String varName = node.getImage();
ApexParserTest.java,File[] fList = directory.listFiles();,if (directory != null ) File[] fList = directory.listFiles();
XmlParserOptions.java,int result = super.hashCode();,if (super != null ) int result = super.hashCode();
DumpFacade.java,String image = node.getImage();,if (node != null ) String image = node.getImage();
DumpFacade.java,Iterator<Attribute> iterator = node.getAttributeIterator();,if (node != null ) Iterator<Attribute> iterator = node.getAttributeIterator();
DumpFacade.java,Attribute attribute = iterator.next();,if (iterator != null ) Attribute attribute = iterator.next();
AbstractDomXmlRule.java,final Node domNode = node.getNode();,if (node != null ) final Node domNode = node.getNode();
AbstractDomXmlRule.java,NamedNodeMap attributes = domNode.getAttributes();,if (domNode != null ) NamedNodeMap attributes = domNode.getAttributes();
AbstractXmlRule.java,final int numChildren = node.jjtGetNumChildren();,if (node != null ) final int numChildren = node.jjtGetNumChildren();
XmlRuleChainVisitor.java,Node node = stack.pop();,if (stack != null ) Node node = stack.pop();
XmlParserOptionsTest.java,options = (XmlParserOptions) rule.getParserOptions();,if (rule != null ) options = (XmlParserOptions) rule.getParserOptions();
XmlParserTest.java,XmlParserOptions options = (XmlParserOptions)xmlVersionHandler.getDefaultParserOptions();,if ((XmlParserOptions)xmlVersionHandler != null ) XmlParserOptions options = (XmlParserOptions)xmlVersionHandler.getDefaultParserOptions();
PLSQLTokenizer.java,String fileName = sourceCode.getFileName();,if (sourceCode != null ) String fileName = sourceCode.getFileName();
PLSQLTokenizer.java,StringBuilder sb = sourceCode.getCodeBuffer();,if (sourceCode != null ) StringBuilder sb = sourceCode.getCodeBuffer();
PLSQLTokenizer.java,Token currentToken = tokenMgr.getNextToken();,if (tokenMgr != null ) Token currentToken = tokenMgr.getNextToken();
PLSQLTokenizer.java,currentToken = tokenMgr.getNextToken();,if (tokenMgr != null ) currentToken = tokenMgr.getNextToken();
ASTVariableOrConstantDeclaratorId.java,Node n = jjtGetParent().jjtGetParent();,if (jjtGetParent() != null ) Node n = jjtGetParent().jjtGetParent();
DumpFacade.java,String image = node.getImage();,if (node != null ) String image = node.getImage();
DumpFacade.java,image = node.getImage();,if (node != null ) image = node.getImage();
PLSQLDataFlowNode.java,res += super.toString();,if (super != null ) res += super.toString();
VariableAccessVisitor.java,DataFlowNode inode = node.getDataFlowNode();,if (node != null ) DataFlowNode inode = node.getDataFlowNode();
VariableAccessVisitor.java,NameDeclaration vnd = entry.getKey();,if (entry != null ) NameDeclaration vnd = entry.getKey();
AbstractNcssCountRule.java,numNodes += treeSize.intValue();,if (treeSize != null ) numNodes += treeSize.intValue();
AbstractNcssCountRule.java,lineCount += nodeCount.intValue();,if (nodeCount != null ) lineCount += nodeCount.intValue();
CyclomaticComplexityRule.java,Entry entry = entryStack.peek();,if (entryStack != null ) Entry entry = entryStack.peek();
CyclomaticComplexityRule.java,Entry entry = entryStack.peek();,if (entryStack != null ) Entry entry = entryStack.peek();
CyclomaticComplexityRule.java,Entry classEntry = entryStack.pop();,if (entryStack != null ) Entry classEntry = entryStack.pop();
CyclomaticComplexityRule.java,Entry classEntry = entryStack.pop();,if (entryStack != null ) Entry classEntry = entryStack.pop();
CyclomaticComplexityRule.java,Entry methodEntry = entryStack.pop();,if (entryStack != null ) Entry methodEntry = entryStack.pop();
CyclomaticComplexityRule.java,Entry classEntry = entryStack.peek();,if (entryStack != null ) Entry classEntry = entryStack.peek();
CyclomaticComplexityRule.java,Entry methodEntry = entryStack.pop();,if (entryStack != null ) Entry methodEntry = entryStack.pop();
CyclomaticComplexityRule.java,Entry classEntry = entryStack.peek();,if (entryStack != null ) Entry classEntry = entryStack.peek();
CyclomaticComplexityRule.java,Entry methodEntry = entryStack.pop();,if (entryStack != null ) Entry methodEntry = entryStack.pop();
CyclomaticComplexityRule.java,Entry classEntry = entryStack.peek();,if (entryStack != null ) Entry classEntry = entryStack.peek();
NcssObjectCountRule.java,numNodes += treeSize.intValue();,if (treeSize != null ) numNodes += treeSize.intValue();
ScopeAndDeclarationFinder.java,ASTObjectDeclaration n = null; // node.getPackageDeclaration();,if (node != null ) ASTObjectDeclaration n = null; // node.getPackageDeclaration();
StatementAndBraceFinderTest.java,dfn = (DataFlowNode) st.getDataFlowNode();,if (st != null ) dfn = (DataFlowNode) st.getDataFlowNode();
StatementAndBraceFinderTest.java,List<DataFlowNode> dfns = dfn.getFlow();,if (dfn != null ) List<DataFlowNode> dfns = dfn.getFlow();
JSPTokenizer.java,StringBuilder buffer = sourceCode.getCodeBuffer();,if (sourceCode != null ) StringBuilder buffer = sourceCode.getCodeBuffer();
JSPTokenizer.java,reader = new StringReader(buffer.toString());,if (StringReader(buffer != null ) reader = new StringReader(buffer.toString());
JSPTokenizer.java,Token currentToken = (Token) tokenMgr.getNextToken();,if (tokenMgr != null ) Token currentToken = (Token) tokenMgr.getNextToken();
JSPTokenizer.java,currentToken = (Token) tokenMgr.getNextToken();,if (tokenMgr != null ) currentToken = (Token) tokenMgr.getNextToken();
DumpFacade.java,String image = node.getImage();,if (node != null ) String image = node.getImage();
OpenTagRegister.java,String parentName = parent.getName();,if (parent != null ) String parentName = parent.getName();
DuplicateJspImportsRule.java,String values = node.getValue();,if (node != null ) String values = node.getValue();
DuplicateJspImportsRule.java,int count = st.countTokens();,if (st != null ) int count = st.countTokens();
DuplicateJspImportsRule.java,String token = st.nextToken();,if (st != null ) String token = st.nextToken();
JspDocStyleTest.java,ASTElement element = elementNodes.iterator().next();,if (elementNodes != null ) ASTElement element = elementNodes.iterator().next();
JspDocStyleTest.java,ASTAttribute attribute = attributeNodes.iterator().next();,if (attributeNodes != null ) ASTAttribute attribute = attributeNodes.iterator().next();
JspDocStyleTest.java,ASTCData cdata = cdataNodes.iterator().next();,if (cdataNodes != null ) ASTCData cdata = cdataNodes.iterator().next();
JspDocStyleTest.java,ASTDoctypeExternalId externalId = externalIds.iterator().next();,if (externalIds != null ) ASTDoctypeExternalId externalId = externalIds.iterator().next();
JspDocStyleTest.java,ASTCommentTag comment = comments.iterator().next();,if (comments != null ) ASTCommentTag comment = comments.iterator().next();
JspDocStyleTest.java,ASTHtmlScript script = scripts.iterator().next();,if (scripts != null ) ASTHtmlScript script = scripts.iterator().next();
JspDocStyleTest.java,ASTHtmlScript script = scripts.iterator().next();,if (scripts != null ) ASTHtmlScript script = scripts.iterator().next();
JspDocStyleTest.java,ASTHtmlScript script = scripts.iterator().next();,if (scripts != null ) ASTHtmlScript script = scripts.iterator().next();
JspDocStyleTest.java,ASTHtmlScript next = script.iterator().next();,if (script != null ) ASTHtmlScript next = script.iterator().next();
JspDocStyleTest.java,ASTText script = scripts.iterator().next();,if (scripts != null ) ASTText script = scripts.iterator().next();
JspDocStyleTest.java,Iterator<ASTElement> iterator = elmts.iterator();,if (elmts != null ) Iterator<ASTElement> iterator = elmts.iterator();
JspDocStyleTest.java,ASTElement script = iterator.next();,if (iterator != null ) ASTElement script = iterator.next();
JspDocStyleTest.java,script = iterator.next();,if (iterator != null ) script = iterator.next();
JspDocStyleTest.java,ASTText script = scripts.iterator().next();,if (scripts != null ) ASTText script = scripts.iterator().next();
JspDocStyleTest.java,Iterator<ASTElExpression> iterator = exprs.iterator();,if (exprs != null ) Iterator<ASTElExpression> iterator = exprs.iterator();
JspDocStyleTest.java,ASTElExpression script = iterator.next();,if (iterator != null ) ASTElExpression script = iterator.next();
JspDocStyleTest.java,script = iterator.next();,if (iterator != null ) script = iterator.next();
JspDocStyleTest.java,Iterator<ASTUnparsedText> iterator = sortedUnparsedTxts.iterator();,if (sortedUnparsedTxts != null ) Iterator<ASTUnparsedText> iterator = sortedUnparsedTxts.iterator();
JspDocStyleTest.java,ASTJspExpression script = scripts.iterator().next();,if (scripts != null ) ASTJspExpression script = scripts.iterator().next();
JspDocStyleTest.java,ASTText script = scripts.iterator().next();,if (scripts != null ) ASTText script = scripts.iterator().next();
JspDocStyleTest.java,ASTText script = scripts.iterator().next();,if (scripts != null ) ASTText script = scripts.iterator().next();
JspDocStyleTest.java,ASTAttributeValue attr =  attributes.iterator().next();,if (attributes != null ) ASTAttributeValue attr =  attributes.iterator().next();
JspDocStyleTest.java,ASTAttributeValue attr =  attributes.iterator().next();,if (attributes != null ) ASTAttributeValue attr =  attributes.iterator().next();
JspDocStyleTest.java,ASTAttributeValue attr =  attributes.iterator().next();,if (attributes != null ) ASTAttributeValue attr =  attributes.iterator().next();
JspDocStyleTest.java,ASTAttributeValue attr =  attributes.iterator().next();,if (attributes != null ) ASTAttributeValue attr =  attributes.iterator().next();
JspDocStyleTest.java,Iterator<ASTAttributeValue> iterator = attributes.iterator();,if (attributes != null ) Iterator<ASTAttributeValue> iterator = attributes.iterator();
JspDocStyleTest.java,ASTAttributeValue attr =  attributes.iterator().next();,if (attributes != null ) ASTAttributeValue attr =  attributes.iterator().next();
JspDocStyleTest.java,Iterator<ASTAttributeValue> iterator = attributes.iterator();,if (attributes != null ) Iterator<ASTAttributeValue> iterator = attributes.iterator();
JspDocStyleTest.java,ASTAttributeValue attr =  iterator.next();,if (iterator != null ) ASTAttributeValue attr =  iterator.next();
JspDocStyleTest.java,attr = iterator.next();,if (iterator != null ) attr = iterator.next();
JspDocStyleTest.java,Iterator<ASTAttributeValue> iterator = attributes.iterator();,if (attributes != null ) Iterator<ASTAttributeValue> iterator = attributes.iterator();
JspDocStyleTest.java,ASTAttributeValue attr =  iterator.next();,if (iterator != null ) ASTAttributeValue attr =  iterator.next();
JspDocStyleTest.java,attr = iterator.next();,if (iterator != null ) attr = iterator.next();
JspDocStyleTest.java,Iterator<ASTAttributeValue> iterator = attributes.iterator();,if (attributes != null ) Iterator<ASTAttributeValue> iterator = attributes.iterator();
JspDocStyleTest.java,ASTAttributeValue attr =  iterator.next();,if (iterator != null ) ASTAttributeValue attr =  iterator.next();
JspDocStyleTest.java,ASTAttributeValue attr =  attributes.iterator().next();,if (attributes != null ) ASTAttributeValue attr =  attributes.iterator().next();
JspDocStyleTest.java,ASTAttributeValue attr =  attributes.iterator().next();,if (attributes != null ) ASTAttributeValue attr =  attributes.iterator().next();
JspDocStyleTest.java,ASTAttributeValue attr =  attributes.iterator().next();,if (attributes != null ) ASTAttributeValue attr =  attributes.iterator().next();
JspDocStyleTest.java,ASTAttributeValue attr =  attributes.iterator().next();,if (attributes != null ) ASTAttributeValue attr =  attributes.iterator().next();
JspDocStyleTest.java,ASTAttributeValue attr =  attributes.iterator().next();,if (attributes != null ) ASTAttributeValue attr =  attributes.iterator().next();
JspDocStyleTest.java,ASTAttributeValue attr =  attributes.iterator().next();,if (attributes != null ) ASTAttributeValue attr =  attributes.iterator().next();
EcmascriptParserOptions.java,int result = super.hashCode();,if (super != null ) int result = super.hashCode();
AbstractEcmascriptNode.java,int startOffset = node.getAbsolutePosition();,if (node != null ) int startOffset = node.getAbsolutePosition();
AbstractEcmascriptNode.java,int endOffset = startOffset + node.getLength();,if (node != null ) int endOffset = startOffset + node.getLength();
DumpFacade.java,String image = node.getImage();,if (node != null ) String image = node.getImage();
EcmascriptTreeBuilder.java,int nodeStart = node.getNode().getAbsolutePosition();,if (node != null ) int nodeStart = node.getNode().getAbsolutePosition();
EcmascriptTreeBuilder.java,int problemStart = parseProblem.getFileOffset();,if (parseProblem != null ) int problemStart = parseProblem.getFileOffset();
EcmascriptRuleChainVisitor.java,Node node = stack.pop();,if (stack != null ) Node node = stack.pop();
ConsistentReturnRule.java,hasResult = Boolean.valueOf(returnStatement.hasResult());,if (Boolean != null ) hasResult = Boolean.valueOf(returnStatement.hasResult());
EcmascriptParserOptionsTest.java,parserOptions = (EcmascriptParserOptions) rule.getParserOptions();,if (rule != null ) parserOptions = (EcmascriptParserOptions) rule.getParserOptions();
AbstractCommentRule.java,line = line.trim();,if (line != null ) line = line.trim();
ConstructorCallsOverridableMethodRule.java,String name = child.getImage();// special case,if (case != null ) String name = child.getImage();// special case
ConstructorCallsOverridableMethodRule.java,MethodInvocation meth = calledMethsIter.next();// CCE,if (CCE != null ) MethodInvocation meth = calledMethsIter.next();// CCE
UselessAssignment.java,DataFlowNode dfan = (DataFlowNode)i.next();,if ((DataFlowNode)i != null ) DataFlowNode dfan = (DataFlowNode)i.next();
UselessAssignment.java,List va = dfan.getVariableAccess();,if (dfan != null ) List va = dfan.getVariableAccess();
UselessAssignment.java,VariableAccess o = (VariableAccess)j.next();,if ((VariableAccess)j != null ) VariableAccess o = (VariableAccess)j.next();
ConstructorCallsOverridableMethodRule.java,String name = child.getImage();//special case,if (case != null ) String name = child.getImage();//special case
ConstructorCallsOverridableMethodRule.java,MethodInvocation meth = calledMethsIter.next();//CCE,if (calledMethsIter != null ) MethodInvocation meth = calledMethsIter.next();//CCE
DuplicateImportsRule.java,String singleTypeFullName = thisSingleTypeImport.getName(); //java.io.File,if (//java != null ) String singleTypeFullName = thisSingleTypeImport.getName(); //java.io.File
AbstractJavaParser.java,String suppressMarker = getParserOptions().getSuppressMarker();,if (getParserOptions() != null ) String suppressMarker = getParserOptions().getSuppressMarker();
DumpFacade.java,String image = node.getImage();,if (node != null ) String image = node.getImage();
JavaDataFlowNode.java,res = super.toString();,if (super != null ) res = super.toString();
VariableAccessVisitor.java,DataFlowNode inode = node.getDataFlowNode();,if (node != null ) DataFlowNode inode = node.getDataFlowNode();
VariableAccessVisitor.java,VariableNameDeclaration vnd = entry.getKey();,if (entry != null ) VariableNameDeclaration vnd = entry.getKey();
GenericLiteralCheckerRule.java,String image = node.getImage();,if (node != null ) String image = node.getImage();
BooleanInstantiationRule.java,ASTPrimaryExpression parent = (ASTPrimaryExpression) node.jjtGetParent();,if (node != null ) ASTPrimaryExpression parent = (ASTPrimaryExpression) node.jjtGetParent();
StdCyclomaticComplexityRule.java,Entry entry = entryStack.peek();,if (entryStack != null ) Entry entry = entryStack.peek();
StdCyclomaticComplexityRule.java,int childCount = node.jjtGetNumChildren();,if (node != null ) int childCount = node.jjtGetNumChildren();
StdCyclomaticComplexityRule.java,Entry classEntry = entryStack.pop();,if (entryStack != null ) Entry classEntry = entryStack.pop();
StdCyclomaticComplexityRule.java,Entry methodEntry = entryStack.pop();,if (entryStack != null ) Entry methodEntry = entryStack.pop();
StdCyclomaticComplexityRule.java,Entry classEntry = entryStack.peek();,if (entryStack != null ) Entry classEntry = entryStack.peek();
StdCyclomaticComplexityRule.java,Entry classEntry = entryStack.pop();,if (entryStack != null ) Entry classEntry = entryStack.pop();
StdCyclomaticComplexityRule.java,Entry constructorEntry = entryStack.pop();,if (entryStack != null ) Entry constructorEntry = entryStack.pop();
StdCyclomaticComplexityRule.java,Entry classEntry = entryStack.peek();,if (entryStack != null ) Entry classEntry = entryStack.peek();
AssignmentToNonFinalStaticRule.java,AccessNode accessNodeParent = (AccessNode)decl.getAccessNodeParent();,if ((AccessNode)decl != null ) AccessNode accessNodeParent = (AccessNode)decl.getAccessNodeParent();
AssignmentToNonFinalStaticRule.java,Node node = occ.getLocation();,if (occ != null ) Node node = occ.getLocation();
SingularFieldRule.java,Node potentialStatement = primaryExpressionParent.jjtGetParent();,if (primaryExpressionParent != null ) Node potentialStatement = primaryExpressionParent.jjtGetParent();
DuplicateImportsRule.java,String singleTypeFullName = thisSingleTypeImport.getName();	//java.io.File,if (//java != null ) String singleTypeFullName = thisSingleTypeImport.getName();	//java.io.File
UnnecessaryFullyQualifiedNameRule.java,String name = node.getImage();,if (node != null ) String name = node.getImage();
AbstractJUnitRule.java,String className = cid.getImage();,if (cid != null ) String className = cid.getImage();
MoreThanOneLoggerRule.java,count = stack.pop();,if (stack != null ) count = stack.pop();
ConsecutiveAppendsShouldReuseRule.java,String image = name.getImage();,if (name != null ) String image = name.getImage();
ConsecutiveAppendsShouldReuseRule.java,final String name = primarySuffix.getImage();,if (primarySuffix != null ) final String name = primarySuffix.getImage();
ConsecutiveAppendsShouldReuseRule.java,final String variable = astName.getImage();,if (astName != null ) final String variable = astName.getImage();
InefficientStringBufferingRule.java,VariableNameDeclaration vnd = (VariableNameDeclaration)name.getNameDeclaration();,if ((VariableNameDeclaration)name != null ) VariableNameDeclaration vnd = (VariableNameDeclaration)name.getNameDeclaration();
InefficientStringBufferingRule.java,ASTName name = iterator.next();,if (iterator != null ) ASTName name = iterator.next();
InefficientStringBufferingRule.java,VariableNameDeclaration vnd = (VariableNameDeclaration) name.getNameDeclaration();,if (name != null ) VariableNameDeclaration vnd = (VariableNameDeclaration) name.getNameDeclaration();
InefficientStringBufferingRule.java,ASTLocalVariableDeclaration l = (ASTLocalVariableDeclaration)vnd.getAccessNodeParent();,if ((ASTLocalVariableDeclaration)vnd != null ) ASTLocalVariableDeclaration l = (ASTLocalVariableDeclaration)vnd.getAccessNodeParent();
InefficientStringBufferingRule.java,ASTFormalParameter p = (ASTFormalParameter) vnd.getAccessNodeParent();,if (vnd != null ) ASTFormalParameter p = (ASTFormalParameter) vnd.getAccessNodeParent();
InsufficientStringBufferDeclarationRule.java,anticipatedLength += str.length();,if (str != null ) anticipatedLength += str.length();
StringInstantiationRule.java,NameDeclaration nd = name.getNameDeclaration();,if (name != null ) NameDeclaration nd = name.getNameDeclaration();
JavaNameOccurrence.java,Node node = location.jjtGetParent();,if (location != null ) Node node = location.jjtGetParent();
ScopeAndDeclarationFinder.java,Scope methodScope = node.getScope();,if (node != null ) Scope methodScope = node.getScope();
ScopeAndDeclarationFinder.java,int n = node.jjtGetNumChildren();,if (node != null ) int n = node.jjtGetNumChildren();
ScopeAndDeclarationFinder.java,localScope = node.getScope();,if (node != null ) localScope = node.getScope();
ClassTypeResolver.java,String typeName = node.getImage();,if (node != null ) String typeName = node.getImage();
ClassTypeResolver.java,String name = node.getImage();,if (node != null ) String name = node.getImage();
ClassTypeResolver.java,String name = node.getNameDeclaration().getTypeImage();,if (node != null ) String name = node.getNameDeclaration().getTypeImage();
ClassTypeResolver.java,ASTPackageDeclaration pkgDecl = node.getPackageDeclaration();,if (node != null ) ASTPackageDeclaration pkgDecl = node.getPackageDeclaration();
ClassTypeResolver.java,String strPackage = anImportDeclaration.getPackageName();,if (anImportDeclaration != null ) String strPackage = anImportDeclaration.getPackageName();
ClassTypeResolver.java,String strName = anImportDeclaration.getImportedName();,if (anImportDeclaration != null ) String strName = anImportDeclaration.getImportedName();
TypeHelper.java,superC = superC.getSuperclass();,if (superC != null ) superC = superC.getSuperclass();
UnusedImports.java,Iterator<ImportWrapper> it = imports.iterator();,if (imports != null ) Iterator<ImportWrapper> it = imports.iterator();
UnusedImports.java,ImportWrapper i = it.next();,if (it != null ) ImportWrapper i = it.next();
TypeOfFunction.java,nodeTypeName = attr.getStringValue();,if (attr != null ) nodeTypeName = attr.getStringValue();
TypeOfFunction.java,superC = superC.getSuperclass();,if (superC != null ) superC = superC.getSuperclass();
ASTPackageDeclarationTest.java,ASTPackageDeclaration packageNode = nodes.iterator().next();,if (nodes != null ) ASTPackageDeclaration packageNode = nodes.iterator().next();
XPathRuleTest.java,RuleViolation rv = report.iterator().next();,if (report != null ) RuleViolation rv = report.iterator().next();
XPathRuleTest.java,RuleViolation rv = report.iterator().next();,if (report != null ) RuleViolation rv = report.iterator().next();
XPathRuleTest.java,ParserOptions parserOptions = language.getLanguageVersionHandler().getDefaultParserOptions();,if (language != null ) ParserOptions parserOptions = language.getLanguageVersionHandler().getDefaultParserOptions();
XPathRuleTest.java,ParserOptions parserOptions = language.getLanguageVersionHandler().getDefaultParserOptions();,if (language != null ) ParserOptions parserOptions = language.getLanguageVersionHandler().getDefaultParserOptions();
AcceptanceTest.java,List<NameOccurrence> usages = vdi.getUsages();,if (vdi != null ) List<NameOccurrence> usages = vdi.getUsages();
ClassScopeTest.java,List<NameOccurrence> occurrences = entry.getValue();,if (entry != null ) List<NameOccurrence> occurrences = entry.getValue();
NameOccurrencesTest.java,List<JavaNameOccurrence> names = occs.getNames();,if (occs != null ) List<JavaNameOccurrence> names = occs.getNames();
STBBaseTst.java,LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();,if (languageVersion != null ) LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();
ScopeAndDeclarationFinderTest.java,LocalScope scope = (LocalScope)l.getScope();,if ((LocalScope)l != null ) LocalScope scope = (LocalScope)l.getScope();
ClassTypeResolverTest.java,VariableNameDeclaration declaration = (VariableNameDeclaration)theStringTokenizer.getNameDeclaration();,if ((VariableNameDeclaration)theStringTokenizer != null ) VariableNameDeclaration declaration = (VariableNameDeclaration)theStringTokenizer.getNameDeclaration();
ClassTypeResolverTest.java,ASTVariableDeclaratorId id = (ASTVariableDeclaratorId)declaration.getNode();,if ((ASTVariableDeclaratorId)declaration != null ) ASTVariableDeclaratorId id = (ASTVariableDeclaratorId)declaration.getNode();
PMDASMClassLoaderTest.java,Runtime runtime = Runtime.getRuntime();,if (Runtime != null ) Runtime runtime = Runtime.getRuntime();
PMDASMClassLoaderTest.java,long usedBytesBefore = runtime.totalMemory() - runtime.freeMemory();,if (runtime != null ) long usedBytesBefore = runtime.totalMemory() - runtime.freeMemory();
PMDASMClassLoaderTest.java,long usedBytesAfter = runtime.totalMemory() - runtime.freeMemory();,if (runtime != null ) long usedBytesAfter = runtime.totalMemory() - runtime.freeMemory();
ApexSOQLInjectionRule.java,final VariableExpression l = left.getNode();,if (left != null ) final VariableExpression l = left.getNode();
ApexCRUDViolationRule.java,String type = varToTypeMapping.get(sb.toString());,if (varToTypeMapping != null ) String type = varToTypeMapping.get(sb.toString());
RuleSet.java,Rule r = it.next();,if (it != null ) Rule r = it.next();
RuleSet.java,RuleSetReference ruleSetReference = new RuleSetReference(ruleSet.getFileName());,if (RuleSetReference(ruleSet != null ) RuleSetReference ruleSetReference = new RuleSetReference(ruleSet.getFileName());
Designer.java,StringReader reader = new StringReader(codeEditorPane.getText());,if (StringReader(codeEditorPane != null ) StringReader reader = new StringReader(codeEditorPane.getText());
RuleSetTest.java,Collection rules = IUT.getRules();,if (IUT != null ) Collection rules = IUT.getRules();
RuleSetTest.java,Iterator i = rules.iterator();,if (rules != null ) Iterator i = rules.iterator();
RuleSetTest.java,Iterator violations = context.getReport().iterator();,if (context != null ) Iterator violations = context.getReport().iterator();
RuleSetTest.java,RuleViolation violation = (RuleViolation) violations.next();,if (violations != null ) RuleViolation violation = (RuleViolation) violations.next();
RuleSetTest.java,Iterator expected = values.iterator();,if (values != null ) Iterator expected = values.iterator();
RuleSetTest.java,RuleViolation violation = (RuleViolation) expected.next();,if (expected != null ) RuleViolation violation = (RuleViolation) expected.next();
ApexCRUDViolationRule.java,String type = varToTypeMapping.get(sb.toString());,if (varToTypeMapping != null ) String type = varToTypeMapping.get(sb.toString());
ClasspathClassLoader.java,String token = toker.nextToken();,if (toker != null ) String token = toker.nextToken();
ClasspathClassLoader.java,line = line.trim();,if (line != null ) line = line.trim();
ClasspathClassLoader.java,StringBuilder sb = new StringBuilder(getClass().getSimpleName());,if (StringBuilder(getClass() != null ) StringBuilder sb = new StringBuilder(getClass().getSimpleName());
STBBaseTst.java,LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();,if (languageVersion != null ) LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();
UnnecessaryFullyQualifiedNameRule.java,String name = node.getImage();,if (node != null ) String name = node.getImage();
DOMLineNumbers.java,"String te = unexpandEntities(n, n.getNodeValue());","if (n != null ) String te = unexpandEntities(n, n.getNodeValue());"
DOMLineNumbers.java,"String te = unexpandEntities(n, n.getNodeValue());","if (n != null ) String te = unexpandEntities(n, n.getNodeValue());"
DOMLineNumbers.java,nextIndex += te.length();,if (te != null ) nextIndex += te.length();
RuleTst.java,String propertyName = (String)entry.getKey();,if ((String)entry != null ) String propertyName = (String)entry.getKey();
RuleChain.java,RuleChainVisitor visitor = getRuleChainVisitor(rule.getLanguage());,if (getRuleChainVisitor(rule != null ) RuleChainVisitor visitor = getRuleChainVisitor(rule.getLanguage());
RuleSetWriter.java,DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();,if (DocumentBuilderFactory != null ) DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();
RuleSetWriter.java,DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();,if (documentBuilderFactory != null ) DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();
RuleSetWriter.java,document = documentBuilder.newDocument();,if (documentBuilder != null ) document = documentBuilder.newDocument();
RuleSetWriter.java,TransformerFactory transformerFactory = TransformerFactory.newInstance();,if (TransformerFactory != null ) TransformerFactory transformerFactory = TransformerFactory.newInstance();
RuleSetWriter.java,Transformer transformer = transformerFactory.newTransformer();,if (transformerFactory != null ) Transformer transformer = transformerFactory.newTransformer();
RuleSetWriter.java,Element descriptionElement = createDescriptionElement(ruleSet.getDescription());,if (createDescriptionElement(ruleSet != null ) Element descriptionElement = createDescriptionElement(ruleSet.getDescription());
RuleSetWriter.java,RuleSetReference ruleSetReference = ruleReference.getRuleSetReference();,if (ruleReference != null ) RuleSetReference ruleSetReference = ruleReference.getRuleSetReference();
RuleSetWriter.java,Language language = ruleReference.getOverriddenLanguage();,if (ruleReference != null ) Language language = ruleReference.getOverriddenLanguage();
RuleSetWriter.java,LanguageVersion minimumLanguageVersion = ruleReference.getOverriddenMinimumLanguageVersion();,if (ruleReference != null ) LanguageVersion minimumLanguageVersion = ruleReference.getOverriddenMinimumLanguageVersion();
RuleSetWriter.java,LanguageVersion maximumLanguageVersion = ruleReference.getOverriddenMaximumLanguageVersion();,if (ruleReference != null ) LanguageVersion maximumLanguageVersion = ruleReference.getOverriddenMaximumLanguageVersion();
RuleSetWriter.java,Boolean deprecated = ruleReference.isOverriddenDeprecated();,if (ruleReference != null ) Boolean deprecated = ruleReference.isOverriddenDeprecated();
RuleSetWriter.java,String name = ruleReference.getOverriddenName();,if (ruleReference != null ) String name = ruleReference.getOverriddenName();
RuleSetWriter.java,String message = ruleReference.getOverriddenMessage();,if (ruleReference != null ) String message = ruleReference.getOverriddenMessage();
RuleSetWriter.java,String externalInfoUrl = ruleReference.getOverriddenExternalInfoUrl();,if (ruleReference != null ) String externalInfoUrl = ruleReference.getOverriddenExternalInfoUrl();
RuleSetWriter.java,String description = ruleReference.getOverriddenDescription();,if (ruleReference != null ) String description = ruleReference.getOverriddenDescription();
RuleSetWriter.java,RulePriority priority = ruleReference.getOverriddenPriority();,if (ruleReference != null ) RulePriority priority = ruleReference.getOverriddenPriority();
RuleSetWriter.java,List<String> examples = ruleReference.getOverriddenExamples();,if (ruleReference != null ) List<String> examples = ruleReference.getOverriddenExamples();
RuleSetWriter.java,Object defaultValue = propertyDescriptor.defaultValue();,if (propertyDescriptor != null ) Object defaultValue = propertyDescriptor.defaultValue();
RuleSetWriter.java,Object defaultValue = propertyDescriptor.defaultValue();,if (propertyDescriptor != null ) Object defaultValue = propertyDescriptor.defaultValue();
RuleSetWriter.java,Object value = entry.getValue();,if (entry != null ) Object value = entry.getValue();
RuleSetWriter.java,"final Element propertyElement = createPropertyValueElement(propertyDescriptor, propertyDescriptor.defaultValue());","if (propertyDescriptor != null ) final Element propertyElement = createPropertyValueElement(propertyDescriptor, propertyDescriptor.defaultValue());"
SourceCodeProcessor.java,long start = System.nanoTime();,if (System != null ) long start = System.nanoTime();
SourceCodeProcessor.java,long end = System.nanoTime();,if (System != null ) long end = System.nanoTime();
SourceCodeProcessor.java,long start = System.nanoTime();,if (System != null ) long start = System.nanoTime();
SourceCodeProcessor.java,long end = System.nanoTime();,if (System != null ) long end = System.nanoTime();
SourceCodeProcessor.java,long start = System.nanoTime();,if (System != null ) long start = System.nanoTime();
SourceCodeProcessor.java,VisitorStarter dataFlowFacade = languageVersion.getLanguageVersionHandler().getDataFlowFacade();,if (languageVersion != null ) VisitorStarter dataFlowFacade = languageVersion.getLanguageVersionHandler().getDataFlowFacade();
SourceCodeProcessor.java,long end = System.nanoTime();,if (System != null ) long end = System.nanoTime();
SourceCodeProcessor.java,long start = System.nanoTime();,if (System != null ) long start = System.nanoTime();
SourceCodeProcessor.java,long end = System.nanoTime();,if (System != null ) long end = System.nanoTime();
SourceCodeProcessor.java,LanguageVersion languageVersion = ctx.getLanguageVersion();,if (ctx != null ) LanguageVersion languageVersion = ctx.getLanguageVersion();
SourceCodeProcessor.java,LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();,if (languageVersion != null ) LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();
SourceCodeProcessor.java,Language language = languageVersion.getLanguage();,if (languageVersion != null ) Language language = languageVersion.getLanguage();
SourceCodeProcessor.java,LanguageVersion languageVersion = configuration.getLanguageVersionOfFile(ctx.getSourceCodeFilename());,if (configuration != null ) LanguageVersion languageVersion = configuration.getLanguageVersionOfFile(ctx.getSourceCodeFilename());
Benchmarker.java,languageVersion = language.getDefaultVersion();,if (language != null ) languageVersion = language.getDefaultVersion();
Benchmarker.java,long end = System.currentTimeMillis();,if (System != null ) long end = System.currentTimeMillis();
TextReport.java,StringBuilder buffer = new StringBuilder(result.rule.getName());,if (StringBuilder(result != null ) StringBuilder buffer = new StringBuilder(result.rule.getName());
TextReport.java,List<BenchmarkResult> results = new ArrayList<>(benchmarksByName.values());,if (ArrayList<>(benchmarksByName != null ) List<BenchmarkResult> results = new ArrayList<>(benchmarksByName.values());
PMDCommandLineInterface.java,Object deflt = property.defaultValue();,if (property != null ) Object deflt = property.defaultValue();
CPD.java,String falseFilePath =  sourceObject.getPseudoFileName();,if (sourceObject != null ) String falseFilePath =  sourceObject.getPseudoFileName();
GUI.java,AbstractButton button = (AbstractButton)e.getItem();,if ((AbstractButton)e != null ) AbstractButton button = (AbstractButton)e.getItem();
GUI.java,int[] selectionIndices = resultsTable.getSelectedRows();,if (resultsTable != null ) int[] selectionIndices = resultsTable.getSelectedRows();
GUI.java,TableModel model = resultsTable.getModel();,if (resultsTable != null ) TableModel model = resultsTable.getModel();
GUI.java,int[] selectionIndices = resultsTable.getSelectedRows();,if (resultsTable != null ) int[] selectionIndices = resultsTable.getSelectedRows();
GUI.java,int colCount = resultsTable.getColumnCount();,if (resultsTable != null ) int colCount = resultsTable.getColumnCount();
GUI.java,StringSelection ss = new StringSelection(sb.toString());,if (StringSelection(sb != null ) StringSelection ss = new StringSelection(sb.toString());
GUI.java,int[] selectionIndices = resultsTable.getSelectedRows();,if (resultsTable != null ) int[] selectionIndices = resultsTable.getSelectedRows();
GUI.java,alignments[i] = matchColumns[i].alignment();,if (matchColumns[i] != null ) alignments[i] = matchColumns[i].alignment();
GUI.java,final JTableHeader header = resultsTable.getTableHeader();,if (resultsTable != null ) final JTableHeader header = resultsTable.getTableHeader();
GUI.java,String[] extensions = config.extensions();,if (config != null ) String[] extensions = config.extensions();
GUI.java,Set<String> sourceIDs = new HashSet<>(match.getMarkCount());,if (HashSet<>(match != null ) Set<String> sourceIDs = new HashSet<>(match.getMarkCount());
GUI.java,String sourceId = sourceIDs.iterator().next();,if (sourceIDs != null ) String sourceId = sourceIDs.iterator().next();
GUI.java,final long start = System.currentTimeMillis();,if (System != null ) final long start = System.currentTimeMillis();
GUI.java,long now = System.currentTimeMillis();,if (System != null ) long now = System.currentTimeMillis();
GUI.java,Comparator<Match> comparator = matchColumns[columnIndex].sorter();,if (matchColumns[columnIndex] != null ) Comparator<Match> comparator = matchColumns[columnIndex].sorter();
GUI.java,SortingTableModel<Match> model = (SortingTableModel<Match>)resultsTable.getModel();,if ((SortingTableModel<Match>)resultsTable != null ) SortingTableModel<Match> model = (SortingTableModel<Match>)resultsTable.getModel();
GUI.java,TableColumnModel colModel = resultsTable.getColumnModel();,if (resultsTable != null ) TableColumnModel colModel = resultsTable.getColumnModel();
GUI.java,width = matchColumns[i].width();,if (matchColumns[i] != null ) width = matchColumns[i].width();
LanguageFactory.java,Iterator<Language> iterator = languageLoader.iterator();,if (languageLoader != null ) Iterator<Language> iterator = languageLoader.iterator();
LanguageFactory.java,Language language = iterator.next();,if (iterator != null ) Language language = iterator.next();
SimpleRenderer.java,Mark mark = occurrences.next();,if (occurrences != null ) Mark mark = occurrences.next();
SimpleRenderer.java,String source = match.getSourceCodeSlice();,if (match != null ) String source = match.getSourceCodeSlice();
SourceCode.java,encoding = inputStream.getBOMCharsetName();,if (inputStream != null ) encoding = inputStream.getBOMCharsetName();
DCD.java,String name = file.getPath();,if (file != null ) String name = file.getPath();
DCD.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
DCD.java,UsageGraph usageGraph = builder.getUsageGraph();,if (builder != null ) UsageGraph usageGraph = builder.getUsageGraph();
DCD.java,long end = System.currentTimeMillis();,if (System != null ) long end = System.currentTimeMillis();
UsageNodeVisitor.java,final Method method = node.getMember();,if (node != null ) final Method method = node.getMember();
LanguageFilenameFilter.java,List<String> extensions = language.getExtensions();,if (language != null ) List<String> extensions = language.getExtensions();
LanguageVersionDiscoverer.java,currentLanguageVersion = languageVersion.getLanguage().getDefaultVersion();,if (languageVersion != null ) currentLanguageVersion = languageVersion.getLanguage().getDefaultVersion();
LanguageVersionDiscoverer.java,languageVersion = language.getDefaultVersion();,if (language != null ) languageVersion = language.getDefaultVersion();
AbstractNode.java,parentNode = parentNode.jjtGetParent();,if (parentNode != null ) parentNode = parentNode.jjtGetParent();
AbstractNode.java,parentNode = parentNode.jjtGetParent();,if (parentNode != null ) parentNode = parentNode.jjtGetParent();
AbstractNode.java,int n = node.jjtGetNumChildren();,if (node != null ) int n = node.jjtGetNumChildren();
AbstractNode.java,DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();,if (DocumentBuilderFactory != null ) DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
AbstractNode.java,DocumentBuilder db = dbf.newDocumentBuilder();,if (dbf != null ) DocumentBuilder db = dbf.newDocumentBuilder();
AbstractNode.java,Document document = db.newDocument();,if (db != null ) Document document = db.newDocument();
AbstractNode.java,Document ownerDocument = parentNode.getOwnerDocument();,if (parentNode != null ) Document ownerDocument = parentNode.getOwnerDocument();
AbstractNode.java,Attribute attr = iter.next();,if (iter != null ) Attribute attr = iter.next();
AbstractNode.java,AbstractNode child = (AbstractNode) iter.next();,if (iter != null ) AbstractNode child = (AbstractNode) iter.next();
AbstractNode.java,int n = node.jjtGetNumChildren();,if (node != null ) int n = node.jjtGetNumChildren();
AbstractTokenManager.java,String fileName = AbstractTokenManager.fileName.get();,if (AbstractTokenManager != null ) String fileName = AbstractTokenManager.fileName.get();
SourceCodePositioner.java,sourceCodeLength = sourceCode.length();,if (sourceCode != null ) sourceCodeLength = sourceCode.length();
AttributeAxisIterator.java,Attribute attribute = this.iterator.next();,if (this != null ) Attribute attribute = this.iterator.next();
AttributeAxisIterator.java,"super.current = new AttributeNode(attribute, super.position());","if (super != null ) super.current = new AttributeNode(attribute, super.position());"
AttributeNode.java,Object v = attribute.getValue();,if (attribute != null ) Object v = attribute.getValue();
AttributeNode.java,value = EmptySequence.getInstance();,if (EmptySequence != null ) value = EmptySequence.getInstance();
ElementNode.java,this.id = idGenerator.getNextId();,if (idGenerator != null ) this.id = idGenerator.getNextId();
AbstractDataFlowNode.java,this.line = node.getBeginLine();,if (node != null ) this.line = node.getBeginLine();
AbstractDataFlowNode.java,String tmp = type.toString();,if (type != null ) String tmp = type.toString();
AbstractDataFlowNode.java,int newTmpInt = Integer.parseInt(st.nextToken());,if (Integer != null ) int newTmpInt = Integer.parseInt(st.nextToken());
DAAPathFinder.java,DataFlowNode inode = currentPath.getLast();,if (currentPath != null ) DataFlowNode inode = currentPath.getLast();
DAAPathFinder.java,DataFlowNode inode = currentPath.getLast();,if (currentPath != null ) DataFlowNode inode = currentPath.getLast();
DAAPathFinder.java,DataFlowNode inode = currentPath.getLast();,if (currentPath != null ) DataFlowNode inode = currentPath.getLast();
ReportHTMLPrintVisitor.java,RuleViolation vio = vnode.getRuleViolation();,if (vnode != null ) RuleViolation vio = vnode.getRuleViolation();
ReportHTMLPrintVisitor.java,str = pnode.getPackageName();,if (pnode != null ) str = pnode.getPackageName();
ReportHTMLPrintVisitor.java,String str = cnode.getClassName();,if (cnode != null ) String str = cnode.getClassName();
ReportTree.java,node = iterNode.getParent();,if (iterNode != null ) node = iterNode.getParent();
ReportTree.java,iterNode = iterNode.getFirstChild();,if (iterNode != null ) iterNode = iterNode.getFirstChild();
ReportTree.java,String packageName = violation.getPackageName();,if (violation != null ) String packageName = violation.getPackageName();
ReportTree.java,String cl = violation.getClassName();,if (violation != null ) String cl = violation.getClassName();
AbstractRule.java,private String name = getClass().getName();,if (getClass() != null ) private String name = getClass().getName();
AbstractRule.java,private String ruleClass = getClass().getName();,if (getClass() != null ) private String ruleClass = getClass().getName();
AbstractRule.java,boolean equality = getClass() == o.getClass();,if (o != null ) boolean equality = getClass() == o.getClass();
AbstractRuleChainVisitor.java,RuleSet ruleSet = entry.getKey();,if (entry != null ) RuleSet ruleSet = entry.getKey();
ParametricRuleViolation.java,filename = ctx.getSourceCodeFilename();,if (ctx != null ) filename = ctx.getSourceCodeFilename();
ParametricRuleViolation.java,beginLine = node.getBeginLine();,if (node != null ) beginLine = node.getBeginLine();
ParametricRuleViolation.java,beginColumn = node.getBeginColumn();,if (node != null ) beginColumn = node.getBeginColumn();
ParametricRuleViolation.java,endLine = node.getEndLine();,if (node != null ) endLine = node.getEndLine();
ParametricRuleViolation.java,endColumn = node.getEndColumn();,if (node != null ) endColumn = node.getEndColumn();
JaxenXPathRuleQuery.java,List<XPath> xpaths = nodeNameToXPaths.get(node.toString());,if (nodeNameToXPaths != null ) List<XPath> xpaths = nodeNameToXPaths.get(node.toString());
JaxenXPathRuleQuery.java,Expr node = pending.pop();,if (pending != null ) Expr node = pending.pop();
JaxenXPathRuleQuery.java,List<Step> steps = locationPath.getSteps();,if (locationPath != null ) List<Step> steps = locationPath.getSteps();
JaxenXPathRuleQuery.java,LocationPath relativeLocationPath = xpathFactory.createRelativeLocationPath();,if (xpathFactory != null ) LocationPath relativeLocationPath = xpathFactory.createRelativeLocationPath();
JaxenXPathRuleQuery.java,String propName = e.getKey().name();,if (e != null ) String propName = e.getKey().name();
Initializer.java,LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();,if (languageVersion != null ) LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();
Initializer.java,LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();,if (languageVersion != null ) LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();
AbstractPMDProcessor.java,long start = System.nanoTime();,if (System != null ) long start = System.nanoTime();
AbstractPMDProcessor.java,long end = System.nanoTime();,if (System != null ) long end = System.nanoTime();
MonoThreadProcessor.java,InputStream stream = new BufferedInputStream(dataSource.getInputStream());,if (BufferedInputStream(dataSource != null ) InputStream stream = new BufferedInputStream(dataSource.getInputStream());
MultiThreadProcessor.java,report = future.get();,if (future != null ) report = future.get();
MultiThreadProcessor.java,Throwable t = ee.getCause();,if (ee != null ) Throwable t = ee.getCause();
PmdRunnable.java,PmdThread thread = (PmdThread) Thread.currentThread();,if (Thread != null ) PmdThread thread = (PmdThread) Thread.currentThread();
PmdRunnable.java,RuleContext ctx = thread.getRuleContext();,if (thread != null ) RuleContext ctx = thread.getRuleContext();
PmdRunnable.java,RuleSets rs = thread.getRuleSets(configuration.getRuleSets());,if (thread != null ) RuleSets rs = thread.getRuleSets(configuration.getRuleSets());
AbstractIncrementingRenderer.java,Iterator<RuleViolation> violations = report.iterator();,if (report != null ) Iterator<RuleViolation> violations = report.iterator();
CSVWriter.java,rv = items.next();,if (items != null ) rv = items.next();
EmacsRenderer.java,RuleViolation rv = violations.next();,if (violations != null ) RuleViolation rv = violations.next();
HTMLRenderer.java,RuleViolation rv = violations.next();,if (violations != null ) RuleViolation rv = violations.next();
HTMLRenderer.java,String d = StringUtil.htmlEncode(rv.getDescription());,if (StringUtil != null ) String d = StringUtil.htmlEncode(rv.getDescription());
HTMLRenderer.java,String infoUrl = rv.getRule().getExternalInfoUrl();,if (rv != null ) String infoUrl = rv.getRule().getExternalInfoUrl();
IDEAJRenderer.java,RuleViolation rv = violations.next();,if (violations != null ) RuleViolation rv = violations.next();
IDEAJRenderer.java,RuleViolation rv = violations.next();,if (violations != null ) RuleViolation rv = violations.next();
RendererFactory.java,renderer = constructor.newInstance();,if (constructor != null ) renderer = constructor.newInstance();
RendererFactory.java,String value = properties.getProperty(prop.name());,if (properties != null ) String value = properties.getProperty(prop.name());
RendererFactory.java,constructor = rendererClass.getConstructor();,if (rendererClass != null ) constructor = rendererClass.getConstructor();
TextColorRenderer.java,lastFile = rv.getFilename();,if (rv != null ) lastFile = rv.getFilename();
TextColorRenderer.java,String key = entry.getKey();,if (entry != null ) String key = entry.getKey();
TextColorRenderer.java,lastFile = error.getFile();,if (error != null ) lastFile = error.getFile();
TextColorRenderer.java,String txt = br.readLine();,if (br != null ) String txt = br.readLine();
TextColorRenderer.java,"code = txt == null ? """" : txt.trim();","if (txt != null ) code = txt == null ? """" : txt.trim();"
TextColorRenderer.java,"this.pwd = new File(""."").getCanonicalPath();","if (File("" != null ) this.pwd = new File(""."").getCanonicalPath();"
TextPadRenderer.java,RuleViolation rv = violations.next();,if (violations != null ) RuleViolation rv = violations.next();
TextRenderer.java,RuleViolation rv = violations.next();,if (violations != null ) RuleViolation rv = violations.next();
VBHTMLRenderer.java,RuleViolation rv = violations.next();,if (violations != null ) RuleViolation rv = violations.next();
VBHTMLRenderer.java,filename = rv.getFilename();,if (rv != null ) filename = rv.getFilename();
XSLTRenderer.java,TransformerFactory factory = TransformerFactory.newInstance();,if (TransformerFactory != null ) TransformerFactory factory = TransformerFactory.newInstance();
XSLTRenderer.java,Writer writer = super.getWriter();,if (super != null ) Writer writer = super.getWriter();
XSLTRenderer.java,Document doc = this.getDocument(buffer.toString());,if (this != null ) Document doc = this.getDocument(buffer.toString());
XSLTRenderer.java,DocumentBuilder parser = DocumentBuilderFactory.newInstance().newDocumentBuilder();,if (DocumentBuilderFactory != null ) DocumentBuilder parser = DocumentBuilderFactory.newInstance().newDocumentBuilder();
YAHTMLRenderer.java,ReportTree tree = report.getViolationTree();,if (report != null ) ReportTree tree = report.getViolationTree();
FileIterable.java,line = lineReader.readLine();,if (lineReader != null ) line = lineReader.readLine();
DBMSMetadata.java,Properties mergedProperties = dbURI.getDbType().getProperties();,if (dbURI != null ) Properties mergedProperties = dbURI.getDbType().getProperties();
DBMSMetadata.java,Properties dbURIProperties = dbURI.getDbType().getProperties();,if (dbURI != null ) Properties dbURIProperties = dbURI.getDbType().getProperties();
DBMSMetadata.java,this.returnType =  dbURI.getSourceCodeType();,if (dbURI != null ) this.returnType =  dbURI.getSourceCodeType();
DBMSMetadata.java,String driverClass = dbURI.getDriverClass();,if (dbURI != null ) String driverClass = dbURI.getDriverClass();
DBMSMetadata.java,String urlString = dbURI.getURL().toString();,if (dbURI != null ) String urlString = dbURI.getURL().toString();
DBMSMetadata.java,sourceCodeObjects = sourceCodeObjectsStatement.executeQuery();,if (sourceCodeObjectsStatement != null ) sourceCodeObjects = sourceCodeObjectsStatement.executeQuery();
DBURI.java,String query = dburi.getRawQuery();,if (dburi != null ) String query = dburi.getRawQuery();
DBURI.java,String query = dburi.getQuery();,if (dburi != null ) String query = dburi.getQuery();
DBURI.java,sourceCodeTypes = dbType.getSourceCodeTypes();,if (dbType != null ) sourceCodeTypes = dbType.getSourceCodeTypes();
ResourceLoader.java,ClassLoader cl = this.getClass().getClassLoader();,if (this != null ) ClassLoader cl = this.getClass().getClassLoader();
ResourceLoader.java,cl = ClassLoader.getSystemClassLoader();,if (ClassLoader != null ) cl = ClassLoader.getSystemClassLoader();
CreateXMLRulePanel.java,boolean hasXPathQuery = StringUtil.isNotEmpty(xpathQueryArea.getText());,if (StringUtil != null ) boolean hasXPathQuery = StringUtil.isNotEmpty(xpathQueryArea.getText());
DFAPanel.java,List<DataFlowNode> kids = node.getChildren();,if (node != null ) List<DataFlowNode> kids = node.getChildren();
DFAPanel.java,List<VariableAccess> access = flow.get(i).getVariableAccess();,if (flow != null ) List<VariableAccess> access = flow.get(i).getVariableAccess();
DFAPanel.java,labels[i] = exp.toString();,if (exp != null ) labels[i] = exp.toString();
DFAPanel.java,List<DataFlowNode> flow = node.getDataFlowNode().getFlow();,if (node != null ) List<DataFlowNode> flow = node.getDataFlowNode().getFlow();
DFAPanel.java,y = computeDrawPos(inode.getIndex());,if (computeDrawPos(inode != null ) y = computeDrawPos(inode.getIndex());
DFAPanel.java,String idx = String.valueOf(inode.getIndex());,if (String != null ) String idx = String.valueOf(inode.getIndex());
Designer.java,LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();,if (languageVersion != null ) LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();
Designer.java,Parser parser = languageVersionHandler.getParser(languageVersionHandler.getDefaultParserOptions());,if (languageVersionHandler != null ) Parser parser = languageVersionHandler.getParser(languageVersionHandler.getDefaultParserOptions());
Designer.java,Node parent = node.jjtGetParent();,if (node != null ) Node parent = node.jjtGetParent();
Designer.java,Attribute attribute = attributeAxisIterator.next();,if (attributeAxisIterator != null ) Attribute attribute = attributeAxisIterator.next();
Designer.java,"TreePath curPath = getPathForLocation(e.getX(), e.getY());","if (e != null ) TreePath curPath = getPathForLocation(e.getX(), e.getY());"
Designer.java,TreeNode node = (TreeNode) parent.getLastPathComponent();,if (parent != null ) TreeNode node = (TreeNode) parent.getLastPathComponent();
Designer.java,DFAGraphRule dfaGraphRule = languageVersion.getLanguageVersionHandler().getDFAGraphRule();,if (languageVersion != null ) DFAGraphRule dfaGraphRule = languageVersion.getLanguageVersionHandler().getDFAGraphRule();
Designer.java,StringReader reader = new StringReader(codeEditorPane.getText());,if (StringReader(codeEditorPane != null ) StringReader reader = new StringReader(codeEditorPane.getText());
Designer.java,List<DFAGraphMethod> methods = dfaGraphRule.getMethods();,if (dfaGraphRule != null ) List<DFAGraphMethod> methods = dfaGraphRule.getMethods();
Designer.java,Scope scope = astTreeNode.getScope();,if (astTreeNode != null ) Scope scope = astTreeNode.getScope();
Designer.java,scope = scope.getParent();,if (scope != null ) scope = scope.getParent();
Designer.java,List<String> attributes = astTreeNode.getAttributes();,if (astTreeNode != null ) List<String> attributes = astTreeNode.getAttributes();
Designer.java,name = value.toString();,if (value != null ) name = value.toString();
Designer.java,text = sb.toString();,if (sb != null ) text = sb.toString();
Designer.java,text = value.toString();,if (value != null ) text = value.toString();
Designer.java,ListSelectionModel lsm = (ListSelectionModel) e.getSource();,if (e != null ) ListSelectionModel lsm = (ListSelectionModel) e.getSource();
Designer.java,Object o = xpathResults.get(lsm.getMinSelectionIndex());,if (xpathResults != null ) Object o = xpathResults.get(lsm.getMinSelectionIndex());
Designer.java,JRadioButtonMenuItem button = new JRadioButtonMenuItem(languageVersion.getShortName());,if (JRadioButtonMenuItem(languageVersion != null ) JRadioButtonMenuItem button = new JRadioButtonMenuItem(languageVersion.getShortName());
Designer.java,JFrame tmp = (JFrame) e.getSource();,if (e != null ) JFrame tmp = (JFrame) e.getSource();
Designer.java,TreeSelectionModel model = astTreeWidget.getSelectionModel();,if (astTreeWidget != null ) TreeSelectionModel model = astTreeWidget.getSelectionModel();
Designer.java,ActionMap actionMap = textConponent.getActionMap();,if (textConponent != null ) ActionMap actionMap = textConponent.getActionMap();
Designer.java,InputMap inputMap = textConponent.getInputMap();,if (textConponent != null ) InputMap inputMap = textConponent.getInputMap();
Designer.java,Source source = new DOMSource(node.getAsDocument());,if (DOMSource(node != null ) Source source = new DOMSource(node.getAsDocument());
Designer.java,TransformerFactory transformerFactory = TransformerFactory.newInstance();,if (TransformerFactory != null ) TransformerFactory transformerFactory = TransformerFactory.newInstance();
Designer.java,Transformer xformer = transformerFactory.newTransformer();,if (transformerFactory != null ) Transformer xformer = transformerFactory.newTransformer();
Designer.java,DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();,if (DocumentBuilderFactory != null ) DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();
Designer.java,Element settingsElement = document.getDocumentElement();,if (document != null ) Element settingsElement = document.getDocumentElement();
Designer.java,DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();,if (DocumentBuilderFactory != null ) DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();
Designer.java,DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();,if (documentBuilderFactory != null ) DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();
Designer.java,Document document = documentBuilder.newDocument();,if (documentBuilder != null ) Document document = documentBuilder.newDocument();
Designer.java,TransformerFactory transformerFactory = TransformerFactory.newInstance();,if (TransformerFactory != null ) TransformerFactory transformerFactory = TransformerFactory.newInstance();
Designer.java,Transformer transformer = transformerFactory.newTransformer();,if (transformerFactory != null ) Transformer transformer = transformerFactory.newTransformer();
FileExtensionFilter.java,String name = file.getName();,if (file != null ) String name = file.getName();
Filters.java,String path = file.getPath();,if (file != null ) String path = file.getPath();
ASTPanel.java,TreePath path = new TreePath(list.toArray());,if (TreePath(list != null ) TreePath path = new TreePath(list.toArray());
ViewerModel.java,LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();,if (languageVersion != null ) LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();
ConfigurationTest.java,Renderer renderer = configuration.createRenderer();,if (configuration != null ) Renderer renderer = configuration.createRenderer();
ConfigurationTest.java,renderer = configuration.createRenderer();,if (configuration != null ) renderer = configuration.createRenderer();
RuleSetTest.java,Collection rules = IUT.getRules();,if (IUT != null ) Collection rules = IUT.getRules();
RuleSetTest.java,Iterator i = rules.iterator();,if (rules != null ) Iterator i = rules.iterator();
RuleSetTest.java,Iterator violations = context.getReport().iterator();,if (context != null ) Iterator violations = context.getReport().iterator();
RuleSetTest.java,RuleViolation violation = (RuleViolation) violations.next();,if (violations != null ) RuleViolation violation = (RuleViolation) violations.next();
RuleSetTest.java,Iterator expected = values.iterator();,if (values != null ) Iterator expected = values.iterator();
RuleSetTest.java,RuleViolation violation = (RuleViolation) expected.next();,if (expected != null ) RuleViolation violation = (RuleViolation) expected.next();
RuleViolationComparatorTest.java,long seed = System.nanoTime();,if (System != null ) long seed = System.nanoTime();
XMLRendererTest.java,file = file.getNextSibling();,if (file != null ) file = file.getNextSibling();
XMLRendererTest.java,file = file.getNextSibling();,if (file != null ) file = file.getNextSibling();
RuleSetFactory.java,private ClassLoader classLoader = RuleSetFactory.class.getClassLoader();,if (RuleSetFactory != null ) private ClassLoader classLoader = RuleSetFactory.class.getClassLoader();
SourceCodeProcessor.java,long end = System.nanoTime();,if (System != null ) long end = System.nanoTime();
FileAnalysisCacheTest.java,final FileAnalysisCache cache = new FileAnalysisCache(tempFolder.getRoot());,if (FileAnalysisCache(tempFolder != null ) final FileAnalysisCache cache = new FileAnalysisCache(tempFolder.getRoot());
FileAnalysisCache.java,cache.rulesetChecksum = inputStream.readLong();,if (inputStream != null ) cache.rulesetChecksum = inputStream.readLong();
FileAnalysisCache.java,cache.classpathChecksum = inputStream.readLong();,if (inputStream != null ) cache.classpathChecksum = inputStream.readLong();
FileAnalysisCacheTest.java,final FileAnalysisCache cache = FileAnalysisCache.fromFile(tempFolder.getRoot());,if (FileAnalysisCache != null ) final FileAnalysisCache cache = FileAnalysisCache.fromFile(tempFolder.getRoot());
FileAnalysisCache.java,final AnalysisResult analysisResult = fileResultsCache.get(sourceFile.getPath());,if (fileResultsCache != null ) final AnalysisResult analysisResult = fileResultsCache.get(sourceFile.getPath());
FileAnalysisCache.java,classLoaderChecksum = Arrays.hashCode(urlClassLoader.getURLs());,if (Arrays != null ) classLoaderChecksum = Arrays.hashCode(urlClassLoader.getURLs());
FileAnalysisCache.java,rulesetChecksum = ruleSets.getChecksum();,if (ruleSets != null ) rulesetChecksum = ruleSets.getChecksum();
FileAnalysisCache.java,final AnalysisResult analysisResult = updatedResultsCache.get(ruleViolation.getFilename());,if (updatedResultsCache != null ) final AnalysisResult analysisResult = updatedResultsCache.get(ruleViolation.getFilename());
SourceCodeProcessor.java,long start = System.nanoTime();,if (System != null ) long start = System.nanoTime();
SourceCodeProcessor.java,long end = System.nanoTime();,if (System != null ) long end = System.nanoTime();
SourceCodeProcessor.java,long start = System.nanoTime();,if (System != null ) long start = System.nanoTime();
SourceCodeProcessor.java,long end = System.nanoTime();,if (System != null ) long end = System.nanoTime();
SourceCodeProcessor.java,long start = System.nanoTime();,if (System != null ) long start = System.nanoTime();
SourceCodeProcessor.java,VisitorStarter dataFlowFacade = languageVersion.getLanguageVersionHandler().getDataFlowFacade();,if (languageVersion != null ) VisitorStarter dataFlowFacade = languageVersion.getLanguageVersionHandler().getDataFlowFacade();
SourceCodeProcessor.java,long end = System.nanoTime();,if (System != null ) long end = System.nanoTime();
SourceCodeProcessor.java,long start = System.nanoTime();,if (System != null ) long start = System.nanoTime();
SourceCodeProcessor.java,long end = System.nanoTime();,if (System != null ) long end = System.nanoTime();
SourceCodeProcessor.java,LanguageVersion languageVersion = ctx.getLanguageVersion();,if (ctx != null ) LanguageVersion languageVersion = ctx.getLanguageVersion();
SourceCodeProcessor.java,LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();,if (languageVersion != null ) LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();
SourceCodeProcessor.java,Language language = languageVersion.getLanguage();,if (languageVersion != null ) Language language = languageVersion.getLanguage();
SourceCodeProcessor.java,LanguageVersion languageVersion = configuration.getLanguageVersionOfFile(ctx.getSourceCodeFilename());,if (configuration != null ) LanguageVersion languageVersion = configuration.getLanguageVersionOfFile(ctx.getSourceCodeFilename());
ConfigurationTest.java,Renderer renderer = configuration.createRenderer();,if (configuration != null ) Renderer renderer = configuration.createRenderer();
ConfigurationTest.java,renderer = configuration.createRenderer();,if (configuration != null ) renderer = configuration.createRenderer();
SingularFieldRule.java,Node parent = node.jjtGetParent();,if (node != null ) Node parent = node.jjtGetParent();
SingularFieldRule.java,String annotationName = name.getImage();,if (name != null ) String annotationName = name.getImage();
UnusedPrivateFieldRule.java,Node parent = node.jjtGetParent();,if (node != null ) Node parent = node.jjtGetParent();
UnusedPrivateFieldRule.java,String annotationName = name.getImage();,if (name != null ) String annotationName = name.getImage();
CloneMethodMustImplementCloneable.java,clazz = clazz.getSuperclass();,if (clazz != null ) clazz = clazz.getSuperclass();
AbstractRule.java,List<String> copy = new ArrayList<>(examples.size());,if (ArrayList<>(examples != null ) List<String> copy = new ArrayList<>(examples.size());
AbstractRule.java,List<String> copy = new ArrayList<>(ruleChainVisits.size());,if (ArrayList<>(ruleChainVisits != null ) List<String> copy = new ArrayList<>(ruleChainVisits.size());
CloneMethodMustImplementCloneable.java,clazz = clazz.getSuperclass();,if (clazz != null ) clazz = clazz.getSuperclass();
InvalidSlf4jMessageFormatRule.java,final NameDeclaration nameDeclaration = node.getNameDeclaration();,if (node != null ) final NameDeclaration nameDeclaration = node.getNameDeclaration();
InvalidSlf4jMessageFormatRule.java,VariableNameDeclaration declaration = (VariableNameDeclaration)variable.getNameDeclaration();,if ((VariableNameDeclaration)variable != null ) VariableNameDeclaration declaration = (VariableNameDeclaration)variable.getNameDeclaration();
Benchmarker.java,reader = new InputStreamReader(dataSource.getInputStream());,if (InputStreamReader(dataSource != null ) reader = new InputStreamReader(dataSource.getInputStream());
StdCyclomaticComplexityRule.java,Entry classEntry = entryStack.pop();,if (entryStack != null ) Entry classEntry = entryStack.pop();
StdCyclomaticComplexityRule.java,Entry classEntry = entryStack.pop();,if (entryStack != null ) Entry classEntry = entryStack.pop();
StdCyclomaticComplexityRule.java,Entry classEntry = entryStack.pop();,if (entryStack != null ) Entry classEntry = entryStack.pop();
StdCyclomaticComplexityRule.java,Entry classEntry = entryStack.pop();,if (entryStack != null ) Entry classEntry = entryStack.pop();
AvoidLogicInTriggerRule.java,Node n = node.jjtGetParent();,if (node != null ) Node n = node.jjtGetParent();
PMD.java,String filePaths = br.readLine();,if (br != null ) String filePaths = br.readLine();
CodeClimateRenderer.java,String porpertyName = property.name();,if (property != null ) String porpertyName = property.name();
CodeClimateRenderer.java,String result = original.trim();,if (original != null ) String result = original.trim();
CodeClimateRenderer.java,String porpertyName = property.name();,if (property != null ) String porpertyName = property.name();
CodeClimateRenderer.java,propertyValue = rule.getProperty(property).toString();,if (rule != null ) propertyValue = rule.getProperty(property).toString();
CodeClimateRenderer.java,defaultValue = property.defaultValue().toString();,if (property != null ) defaultValue = property.defaultValue().toString();
CodeClimateRenderer.java,Rule rule = rv.getRule();,if (rv != null ) Rule rule = rv.getRule();
CodeClimateRenderer.java,Rule rule = rv.getRule();,if (rv != null ) Rule rule = rv.getRule();
CodeClimateRenderer.java,String result = original.trim();,if (original != null ) String result = original.trim();
ApexParserTest.java,File[] fList = directory.listFiles();,if (directory != null ) File[] fList = directory.listFiles();
CodeClimateRenderer.java,List<String> examples = rv.getRule().getExamples();,if (rv != null ) List<String> examples = rv.getRule().getExamples();
CodeClimateRenderer.java,issue.content = new CodeClimateIssue.Content(rule.getDescription());,if (CodeClimateIssue != null ) issue.content = new CodeClimateIssue.Content(rule.getDescription());
CodeClimateRenderer.java,String result = rv.getDescription().trim();,if (rv != null ) String result = rv.getDescription().trim();
CodeClimateRenderer.java,issue.description = rv.getDescription();,if (rv != null ) issue.description = rv.getDescription();
Designer.java,Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();,if (Toolkit != null ) Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
DFAPanel.java,wrapper = (ElementWrapper) nodeList.getSelectedValue();,if (nodeList != null ) wrapper = (ElementWrapper) nodeList.getSelectedValue();
CodeClimateRenderer.java,Rule rule = rv.getRule();,if (rv != null ) Rule rule = rv.getRule();
AbstractApexNode.java,RealLoc loc = (RealLoc)node.getLoc();,if ((RealLoc)node != null ) RealLoc loc = (RealLoc)node.getLoc();
AbstractNcssCountRule.java,numNodes += treeSize.intValue();,if (treeSize != null ) numNodes += treeSize.intValue();
AbstractNcssCountRule.java,lineCount += nodeCount.intValue();,if (nodeCount != null ) lineCount += nodeCount.intValue();
ApexRootNode.java,this.endLine = positioner.getLastLine();,if (positioner != null ) this.endLine = positioner.getLastLine();
ApexRootNode.java,this.endColumn = positioner.getLastLineColumn();,if (positioner != null ) this.endColumn = positioner.getLastLineColumn();
ApexParserOptions.java,int result = super.hashCode();,if (super != null ) int result = super.hashCode();
AbstractApexNode.java,Loc loc = node.getLoc();,if (node != null ) Loc loc = node.getLoc();
ApexParser.java,suppressMarker = parserOptions.getSuppressMarker();,if (parserOptions != null ) suppressMarker = parserOptions.getSuppressMarker();
ApexParser.java,Compilation astRoot = visitor.getTopLevel();,if (visitor != null ) Compilation astRoot = visitor.getTopLevel();
DumpFacade.java,String image = node.getImage();,if (node != null ) String image = node.getImage();
ApexRuleChainVisitor.java,Node node = stack.pop();,if (stack != null ) Node node = stack.pop();
AvoidSoqlInLoopsRule.java,Node n = node.jjtGetParent();,if (node != null ) Node n = node.jjtGetParent();
StdCyclomaticComplexityRule.java,Entry classEntry = entryStack.pop();,if (entryStack != null ) Entry classEntry = entryStack.pop();
StdCyclomaticComplexityRule.java,Entry classEntry = entryStack.pop();,if (entryStack != null ) Entry classEntry = entryStack.pop();
StdCyclomaticComplexityRule.java,Entry methodEntry = entryStack.pop();,if (entryStack != null ) Entry methodEntry = entryStack.pop();
StdCyclomaticComplexityRule.java,Entry classEntry = entryStack.peek();,if (entryStack != null ) Entry classEntry = entryStack.peek();
TooManyFieldsRule.java,String key = clazz.getImage();,if (clazz != null ) String key = clazz.getImage();
MethodNamingConventionsRule.java,String methodName = node.getImage();,if (node != null ) String methodName = node.getImage();
MethodWithSameNameAsEnclosingClassRule.java,String className = node.getImage();,if (node != null ) String className = node.getImage();
VariableNamingConventionsRule.java,String varName = node.getImage();,if (node != null ) String varName = node.getImage();
ApexParserTest.java,File[] fList = directory.listFiles();,if (directory != null ) File[] fList = directory.listFiles();
StdCyclomaticComplexityRule.java,Entry methodEntry = entryStack.pop();,if (entryStack != null ) Entry methodEntry = entryStack.pop();
StdCyclomaticComplexityRule.java,Entry classEntry = entryStack.peek();,if (entryStack != null ) Entry classEntry = entryStack.peek();
UnusedFormalParameterRule.java,VariableNameDeclaration nameDecl = entry.getKey();,if (entry != null ) VariableNameDeclaration nameDecl = entry.getKey();
UnusedPrivateFieldRule.java,VariableNameDeclaration decl = entry.getKey();,if (entry != null ) VariableNameDeclaration decl = entry.getKey();
UnusedPrivateFieldRule.java,AccessNode accessNodeParent = decl.getAccessNodeParent();,if (decl != null ) AccessNode accessNodeParent = decl.getAccessNodeParent();
UnusedPrivateFieldRule.java,Node parent = node.jjtGetParent();,if (node != null ) Node parent = node.jjtGetParent();
UnusedPrivateFieldRule.java,String annotationName = name.getImage();,if (name != null ) String annotationName = name.getImage();
UnusedPrivateMethodRule.java,Node occNode = occ.getLocation();,if (occ != null ) Node occNode = occ.getLocation();
UnusedPrivateMethodRule.java,ASTMethod node = (ASTMethod) mnd.getNode();,if (mnd != null ) ASTMethod node = (ASTMethod) mnd.getNode();
VariableNamingConventionsRule.java,String varName = variableDeclaratorId.getImage();,if (variableDeclaratorId != null ) String varName = variableDeclaratorId.getImage();
AbstractApexNode.java,Loc loc = node.getLoc();,if (node != null ) Loc loc = node.getLoc();
AbstractApexNode.java,Loc loc = node.getLoc();,if (node != null ) Loc loc = node.getLoc();
AbstractNcssCountRule.java,numNodes += treeSize.intValue();,if (treeSize != null ) numNodes += treeSize.intValue();
AbstractNcssCountRule.java,lineCount += nodeCount.intValue();,if (nodeCount != null ) lineCount += nodeCount.intValue();
NPathComplexityRule.java,children += element.jjtGetNumChildren();,if (element != null ) children += element.jjtGetNumChildren();
StdCyclomaticComplexityRule.java,Entry classEntry = entryStack.pop();,if (entryStack != null ) Entry classEntry = entryStack.pop();
StdCyclomaticComplexityRule.java,Entry methodEntry = entryStack.pop();,if (entryStack != null ) Entry methodEntry = entryStack.pop();
StdCyclomaticComplexityRule.java,Entry classEntry = entryStack.peek();,if (entryStack != null ) Entry classEntry = entryStack.peek();
StdCyclomaticComplexityRule.java,Entry classEntry = entryStack.pop();,if (entryStack != null ) Entry classEntry = entryStack.pop();
StdCyclomaticComplexityRule.java,Entry constructorEntry = entryStack.pop();,if (entryStack != null ) Entry constructorEntry = entryStack.pop();
StdCyclomaticComplexityRule.java,Entry classEntry = entryStack.peek();,if (entryStack != null ) Entry classEntry = entryStack.peek();
AvoidFieldNameMatchingMethodNameRule.java,int n = node.jjtGetNumChildren();,if (node != null ) int n = node.jjtGetNumChildren();
ApexParser.java,UserClass astRoot = visitor.getTopLevel();,if (visitor != null ) UserClass astRoot = visitor.getTopLevel();
ApexParserOptions.java,int result = super.hashCode();,if (super != null ) int result = super.hashCode();
AbstractApexNode.java,Loc loc = node.getLoc();,if (node != null ) Loc loc = node.getLoc();
AbstractApexNode.java,Loc loc = node.getLoc();,if (node != null ) Loc loc = node.getLoc();
AbstractApexNode.java,Loc loc = node.getLoc();,if (node != null ) Loc loc = node.getLoc();
ApexParser.java,suppressMarker = parserOptions.getSuppressMarker();,if (parserOptions != null ) suppressMarker = parserOptions.getSuppressMarker();
ApexParser.java,UserClass astRoot = visitor.getTopLevel();,if (visitor != null ) UserClass astRoot = visitor.getTopLevel();
DumpFacade.java,String image = node.getImage();,if (node != null ) String image = node.getImage();
ApexRuleChainVisitor.java,Node node = stack.pop();,if (stack != null ) Node node = stack.pop();
AbstractNcssCountRule.java,numNodes += treeSize.intValue();,if (treeSize != null ) numNodes += treeSize.intValue();
AbstractNcssCountRule.java,lineCount += nodeCount.intValue();,if (nodeCount != null ) lineCount += nodeCount.intValue();
NPathComplexityRule.java,children += element.jjtGetNumChildren();,if (element != null ) children += element.jjtGetNumChildren();
StdCyclomaticComplexityRule.java,Entry classEntry = entryStack.pop();,if (entryStack != null ) Entry classEntry = entryStack.pop();
StdCyclomaticComplexityRule.java,Entry methodEntry = entryStack.pop();,if (entryStack != null ) Entry methodEntry = entryStack.pop();
StdCyclomaticComplexityRule.java,Entry classEntry = entryStack.peek();,if (entryStack != null ) Entry classEntry = entryStack.peek();
StdCyclomaticComplexityRule.java,Entry classEntry = entryStack.pop();,if (entryStack != null ) Entry classEntry = entryStack.pop();
StdCyclomaticComplexityRule.java,Entry constructorEntry = entryStack.pop();,if (entryStack != null ) Entry constructorEntry = entryStack.pop();
StdCyclomaticComplexityRule.java,Entry classEntry = entryStack.peek();,if (entryStack != null ) Entry classEntry = entryStack.peek();
TooManyFieldsRule.java,String key = clazz.getImage();,if (clazz != null ) String key = clazz.getImage();
ApexParserTest.java,File[] fList = directory.listFiles();,if (directory != null ) File[] fList = directory.listFiles();
ApexParserOptions.java,int result = super.hashCode();,if (super != null ) int result = super.hashCode();
AbstractApexNode.java,Loc loc = node.getLoc();,if (node != null ) Loc loc = node.getLoc();
AbstractApexNode.java,Loc loc = node.getLoc();,if (node != null ) Loc loc = node.getLoc();
AbstractApexNode.java,Loc loc = node.getLoc();,if (node != null ) Loc loc = node.getLoc();
ApexParser.java,suppressMarker = parserOptions.getSuppressMarker();,if (parserOptions != null ) suppressMarker = parserOptions.getSuppressMarker();
ApexParser.java,UserClass astRoot = visitor.getTopLevel();,if (visitor != null ) UserClass astRoot = visitor.getTopLevel();
DumpFacade.java,String image = node.getImage();,if (node != null ) String image = node.getImage();
ApexRuleChainVisitor.java,Node node = stack.pop();,if (stack != null ) Node node = stack.pop();
AbstractNcssCountRule.java,numNodes += treeSize.intValue();,if (treeSize != null ) numNodes += treeSize.intValue();
AbstractNcssCountRule.java,lineCount += nodeCount.intValue();,if (nodeCount != null ) lineCount += nodeCount.intValue();
NPathComplexityRule.java,children += element.jjtGetNumChildren();,if (element != null ) children += element.jjtGetNumChildren();
NPathComplexityRule.java,children += element.jjtGetNumChildren();,if (element != null ) children += element.jjtGetNumChildren();
StdCyclomaticComplexityRule.java,Entry classEntry = entryStack.pop();,if (entryStack != null ) Entry classEntry = entryStack.pop();
StdCyclomaticComplexityRule.java,Entry methodEntry = entryStack.pop();,if (entryStack != null ) Entry methodEntry = entryStack.pop();
StdCyclomaticComplexityRule.java,Entry classEntry = entryStack.peek();,if (entryStack != null ) Entry classEntry = entryStack.peek();
StdCyclomaticComplexityRule.java,Entry classEntry = entryStack.pop();,if (entryStack != null ) Entry classEntry = entryStack.pop();
StdCyclomaticComplexityRule.java,Entry constructorEntry = entryStack.pop();,if (entryStack != null ) Entry constructorEntry = entryStack.pop();
StdCyclomaticComplexityRule.java,Entry classEntry = entryStack.peek();,if (entryStack != null ) Entry classEntry = entryStack.peek();
TooManyFieldsRule.java,String key = clazz.getImage();,if (clazz != null ) String key = clazz.getImage();
ApexParserTest.java,File[] fList = directory.listFiles();,if (directory != null ) File[] fList = directory.listFiles();
ApexParserOptions.java,int result = super.hashCode();,if (super != null ) int result = super.hashCode();
AbstractApexNode.java,Loc loc = node.getLoc();,if (node != null ) Loc loc = node.getLoc();
AbstractApexNode.java,Loc loc = node.getLoc();,if (node != null ) Loc loc = node.getLoc();
AbstractApexNode.java,Loc loc = node.getLoc();,if (node != null ) Loc loc = node.getLoc();
ApexParser.java,suppressMarker = parserOptions.getSuppressMarker();,if (parserOptions != null ) suppressMarker = parserOptions.getSuppressMarker();
ApexParser.java,UserClass astRoot = visitor.getTopLevel();,if (visitor != null ) UserClass astRoot = visitor.getTopLevel();
DumpFacade.java,String image = node.getImage();,if (node != null ) String image = node.getImage();
ApexRuleChainVisitor.java,Node node = stack.pop();,if (stack != null ) Node node = stack.pop();
TooManyFieldsRule.java,String key = clazz.getImage();,if (clazz != null ) String key = clazz.getImage();
ApexParserTest.java,File[] fList = directory.listFiles();,if (directory != null ) File[] fList = directory.listFiles();
ApexParserTest.java,ClassLoader classLoader = getClass().getClassLoader();,if (getClass() != null ) ClassLoader classLoader = getClass().getClassLoader();
AbstractApexNode.java,Loc loc = node.getLoc();,if (node != null ) Loc loc = node.getLoc();
AbstractApexNode.java,Loc loc = node.getLoc();,if (node != null ) Loc loc = node.getLoc();
AbstractApexNode.java,Loc loc = node.getLoc();,if (node != null ) Loc loc = node.getLoc();
ApexParser.java,suppressMarker = parserOptions.getSuppressMarker();,if (parserOptions != null ) suppressMarker = parserOptions.getSuppressMarker();
ApexParser.java,UserClass astRoot = visitor.getTopLevel();,if (visitor != null ) UserClass astRoot = visitor.getTopLevel();
DumpFacade.java,String image = node.getImage();,if (node != null ) String image = node.getImage();
SimpleRule.java,MethodInfo methodInfo = method.getNode().getMethodInfo();,if (method != null ) MethodInfo methodInfo = method.getNode().getMethodInfo();
SimpleRule.java,List<Parameter> parameters = methodInfo.getParameters();,if (methodInfo != null ) List<Parameter> parameters = methodInfo.getParameters();
ApexParser.java,suppressMarker = parserOptions.getSuppressMarker();,if (parserOptions != null ) suppressMarker = parserOptions.getSuppressMarker();
SimpleRule.java,MethodInfo methodInfo = method.getNode().getMethodInfo();,if (method != null ) MethodInfo methodInfo = method.getNode().getMethodInfo();
SimpleRule.java,List<Parameter> parameters = methodInfo.getParameters();,if (methodInfo != null ) List<Parameter> parameters = methodInfo.getParameters();
SampleVisitor.java,MethodInfo methodInfo = method.getMethodInfo();,if (method != null ) MethodInfo methodInfo = method.getMethodInfo();
SampleVisitor.java,List<Parameter> parameters = methodInfo.getParameters();,if (methodInfo != null ) List<Parameter> parameters = methodInfo.getParameters();
ApexRuleChainVisitor.java,Node node = stack.pop();,if (stack != null ) Node node = stack.pop();
ApexParserOptions.java,int result = super.hashCode();,if (super != null ) int result = super.hashCode();
AbstractApexNode.java,int startOffset = node.getAbsolutePosition();,if (node != null ) int startOffset = node.getAbsolutePosition();
AbstractApexNode.java,int endOffset = startOffset + node.getLength();,if (node != null ) int endOffset = startOffset + node.getLength();
ApexTreeBuilder.java,int nodeStart = node.getNode().getAbsolutePosition();,if (node != null ) int nodeStart = node.getNode().getAbsolutePosition();
ApexTreeBuilder.java,int problemStart = parseProblem.getFileOffset();,if (parseProblem != null ) int problemStart = parseProblem.getFileOffset();
DumpFacade.java,String image = node.getImage();,if (node != null ) String image = node.getImage();
ConsistentReturnRule.java,hasResult = Boolean.valueOf(returnStatement.hasResult());,if (Boolean != null ) hasResult = Boolean.valueOf(returnStatement.hasResult());
CsTokenizer.java,Token token = tokenizer.getNextToken();,if (tokenizer != null ) Token token = tokenizer.getNextToken();
CsTokenizer.java,Token lookAhead = tokenizer.getNextToken();,if (tokenizer != null ) Token lookAhead = tokenizer.getNextToken();
CsTokenizer.java,lookAhead = tokenizer.getNextToken();,if (tokenizer != null ) lookAhead = tokenizer.getNextToken();
CsTokenizer.java,int ic = reader.read();,if (reader != null ) int ic = reader.read();
CsTokenizer.java,ic = reader.read();,if (reader != null ) ic = reader.read();
CsTokenizer.java,ic = reader.read();,if (reader != null ) ic = reader.read();
CsTokenizer.java,ic = reader.read();,if (reader != null ) ic = reader.read();
CsTokenizer.java,ic = reader.read();,if (reader != null ) ic = reader.read();
CsTokenizer.java,ic = reader.read();,if (reader != null ) ic = reader.read();
CsTokenizer.java,ic = reader.read();,if (reader != null ) ic = reader.read();
CsTokenizer.java,int next = reader.read();,if (reader != null ) int next = reader.read();
CsTokenizer.java,ic = reader.read();,if (reader != null ) ic = reader.read();
CsTokenizerTest.java,List<TokenEntry> tokenList = tokens.getTokens();,if (tokens != null ) List<TokenEntry> tokenList = tokens.getTokens();
CsTokenizerTest.java,List<TokenEntry> tokenList = tokens.getTokens();,if (tokens != null ) List<TokenEntry> tokenList = tokens.getTokens();
JSPTokenizer.java,StringBuilder buffer = sourceCode.getCodeBuffer();,if (sourceCode != null ) StringBuilder buffer = sourceCode.getCodeBuffer();
JSPTokenizer.java,reader = new StringReader(buffer.toString());,if (StringReader(buffer != null ) reader = new StringReader(buffer.toString());
JSPTokenizer.java,Token currentToken = (Token) tokenMgr.getNextToken();,if (tokenMgr != null ) Token currentToken = (Token) tokenMgr.getNextToken();
JSPTokenizer.java,currentToken = (Token) tokenMgr.getNextToken();,if (tokenMgr != null ) currentToken = (Token) tokenMgr.getNextToken();
DumpFacade.java,String image = node.getImage();,if (node != null ) String image = node.getImage();
OpenTagRegister.java,String parentName = parent.getName();,if (parent != null ) String parentName = parent.getName();
DuplicateJspImportsRule.java,String values = node.getValue();,if (node != null ) String values = node.getValue();
DuplicateJspImportsRule.java,int count = st.countTokens();,if (st != null ) int count = st.countTokens();
DuplicateJspImportsRule.java,String token = st.nextToken();,if (st != null ) String token = st.nextToken();
NoInlineStyleInformationRule.java,ASTElement parent = (ASTElement) attributeNode.jjtGetParent();,if (attributeNode != null ) ASTElement parent = (ASTElement) attributeNode.jjtGetParent();
JspParserTest.java,Parser parser = jspLang.getParser(jspLang.getDefaultParserOptions());,if (jspLang != null ) Parser parser = jspLang.getParser(jspLang.getDefaultParserOptions());
AbstractJspNodesTst.java,Node rootNode = parser.CompilationUnit();,if (parser != null ) Node rootNode = parser.CompilationUnit();
JspDocStyleTest.java,ASTElement element = elementNodes.iterator().next();,if (elementNodes != null ) ASTElement element = elementNodes.iterator().next();
JspDocStyleTest.java,ASTAttribute attribute = attributeNodes.iterator().next();,if (attributeNodes != null ) ASTAttribute attribute = attributeNodes.iterator().next();
JspDocStyleTest.java,ASTCData cdata = cdataNodes.iterator().next();,if (cdataNodes != null ) ASTCData cdata = cdataNodes.iterator().next();
JspDocStyleTest.java,ASTDoctypeExternalId externalId = externalIds.iterator().next();,if (externalIds != null ) ASTDoctypeExternalId externalId = externalIds.iterator().next();
JspDocStyleTest.java,ASTCommentTag comment = comments.iterator().next();,if (comments != null ) ASTCommentTag comment = comments.iterator().next();
JspDocStyleTest.java,ASTHtmlScript script = scripts.iterator().next();,if (scripts != null ) ASTHtmlScript script = scripts.iterator().next();
JspDocStyleTest.java,ASTHtmlScript script = scripts.iterator().next();,if (scripts != null ) ASTHtmlScript script = scripts.iterator().next();
JspDocStyleTest.java,ASTHtmlScript script = scripts.iterator().next();,if (scripts != null ) ASTHtmlScript script = scripts.iterator().next();
JspDocStyleTest.java,ASTHtmlScript next = script.iterator().next();,if (script != null ) ASTHtmlScript next = script.iterator().next();
JspDocStyleTest.java,ASTText script = scripts.iterator().next();,if (scripts != null ) ASTText script = scripts.iterator().next();
JspDocStyleTest.java,Iterator<ASTElement> iterator = elmts.iterator();,if (elmts != null ) Iterator<ASTElement> iterator = elmts.iterator();
JspDocStyleTest.java,ASTElement script = iterator.next();,if (iterator != null ) ASTElement script = iterator.next();
JspDocStyleTest.java,script = iterator.next();,if (iterator != null ) script = iterator.next();
JspDocStyleTest.java,ASTText script = scripts.iterator().next();,if (scripts != null ) ASTText script = scripts.iterator().next();
JspDocStyleTest.java,Iterator<ASTElExpression> iterator = exprs.iterator();,if (exprs != null ) Iterator<ASTElExpression> iterator = exprs.iterator();
JspDocStyleTest.java,ASTElExpression script = iterator.next();,if (iterator != null ) ASTElExpression script = iterator.next();
JspDocStyleTest.java,script = iterator.next();,if (iterator != null ) script = iterator.next();
JspDocStyleTest.java,Iterator<ASTUnparsedText> iterator = sortedUnparsedTxts.iterator();,if (sortedUnparsedTxts != null ) Iterator<ASTUnparsedText> iterator = sortedUnparsedTxts.iterator();
JspDocStyleTest.java,ASTJspExpression script = scripts.iterator().next();,if (scripts != null ) ASTJspExpression script = scripts.iterator().next();
JspDocStyleTest.java,ASTText script = scripts.iterator().next();,if (scripts != null ) ASTText script = scripts.iterator().next();
JspDocStyleTest.java,ASTText script = scripts.iterator().next();,if (scripts != null ) ASTText script = scripts.iterator().next();
JspDocStyleTest.java,ASTAttributeValue attr =  attributes.iterator().next();,if (attributes != null ) ASTAttributeValue attr =  attributes.iterator().next();
JspDocStyleTest.java,ASTAttributeValue attr =  attributes.iterator().next();,if (attributes != null ) ASTAttributeValue attr =  attributes.iterator().next();
JspDocStyleTest.java,ASTAttributeValue attr =  attributes.iterator().next();,if (attributes != null ) ASTAttributeValue attr =  attributes.iterator().next();
JspDocStyleTest.java,ASTAttributeValue attr =  attributes.iterator().next();,if (attributes != null ) ASTAttributeValue attr =  attributes.iterator().next();
JspDocStyleTest.java,Iterator<ASTAttributeValue> iterator = attributes.iterator();,if (attributes != null ) Iterator<ASTAttributeValue> iterator = attributes.iterator();
JspDocStyleTest.java,ASTAttributeValue attr =  attributes.iterator().next();,if (attributes != null ) ASTAttributeValue attr =  attributes.iterator().next();
JspDocStyleTest.java,Iterator<ASTAttributeValue> iterator = attributes.iterator();,if (attributes != null ) Iterator<ASTAttributeValue> iterator = attributes.iterator();
JspDocStyleTest.java,ASTAttributeValue attr =  iterator.next();,if (iterator != null ) ASTAttributeValue attr =  iterator.next();
JspDocStyleTest.java,attr = iterator.next();,if (iterator != null ) attr = iterator.next();
JspDocStyleTest.java,Iterator<ASTAttributeValue> iterator = attributes.iterator();,if (attributes != null ) Iterator<ASTAttributeValue> iterator = attributes.iterator();
JspDocStyleTest.java,ASTAttributeValue attr =  iterator.next();,if (iterator != null ) ASTAttributeValue attr =  iterator.next();
JspDocStyleTest.java,attr = iterator.next();,if (iterator != null ) attr = iterator.next();
JspDocStyleTest.java,Iterator<ASTAttributeValue> iterator = attributes.iterator();,if (attributes != null ) Iterator<ASTAttributeValue> iterator = attributes.iterator();
JspDocStyleTest.java,ASTAttributeValue attr =  iterator.next();,if (iterator != null ) ASTAttributeValue attr =  iterator.next();
JspDocStyleTest.java,ASTAttributeValue attr =  attributes.iterator().next();,if (attributes != null ) ASTAttributeValue attr =  attributes.iterator().next();
JspDocStyleTest.java,ASTAttributeValue attr =  attributes.iterator().next();,if (attributes != null ) ASTAttributeValue attr =  attributes.iterator().next();
JspDocStyleTest.java,ASTAttributeValue attr =  attributes.iterator().next();,if (attributes != null ) ASTAttributeValue attr =  attributes.iterator().next();
JspDocStyleTest.java,ASTAttributeValue attr =  attributes.iterator().next();,if (attributes != null ) ASTAttributeValue attr =  attributes.iterator().next();
JspDocStyleTest.java,ASTAttributeValue attr =  attributes.iterator().next();,if (attributes != null ) ASTAttributeValue attr =  attributes.iterator().next();
JspDocStyleTest.java,ASTAttributeValue attr =  attributes.iterator().next();,if (attributes != null ) ASTAttributeValue attr =  attributes.iterator().next();
JspPageStyleTest.java,ASTJspComment comment = comments.iterator().next();,if (comments != null ) ASTJspComment comment = comments.iterator().next();
JspPageStyleTest.java,ASTJspDirective directive = directives.iterator().next();,if (directives != null ) ASTJspDirective directive = directives.iterator().next();
JspPageStyleTest.java,ASTJspDeclaration declaration = declarations.iterator().next();,if (declarations != null ) ASTJspDeclaration declaration = declarations.iterator().next();
JspPageStyleTest.java,ASTJspScriptlet scriptlet = scriptlets.iterator().next();,if (scriptlets != null ) ASTJspScriptlet scriptlet = scriptlets.iterator().next();
JspPageStyleTest.java,ASTJspExpression expression = expressions.iterator().next();,if (expressions != null ) ASTJspExpression expression = expressions.iterator().next();
JspPageStyleTest.java,ASTJspExpressionInAttribute expression = expressions.iterator().next();,if (expressions != null ) ASTJspExpressionInAttribute expression = expressions.iterator().next();
JspPageStyleTest.java,ASTElExpression expression = expressions.iterator().next();,if (expressions != null ) ASTElExpression expression = expressions.iterator().next();
JspPageStyleTest.java,ASTElExpression expression = expressions.iterator().next();,if (expressions != null ) ASTElExpression expression = expressions.iterator().next();
JspPageStyleTest.java,ASTValueBinding valueBinding = valueBindings.iterator().next();,if (valueBindings != null ) ASTValueBinding valueBinding = valueBindings.iterator().next();
XPathJspRuleTest.java,RuleViolation rv = report.iterator().next();,if (report != null ) RuleViolation rv = report.iterator().next();
MatlabTokenizer.java,StringBuilder buffer = sourceCode.getCodeBuffer();,if (sourceCode != null ) StringBuilder buffer = sourceCode.getCodeBuffer();
MatlabTokenizer.java,reader = new StringReader(buffer.toString());,if (StringReader(buffer != null ) reader = new StringReader(buffer.toString());
MatlabTokenizer.java,Token currentToken = (Token) tokenManager.getNextToken();,if (tokenManager != null ) Token currentToken = (Token) tokenManager.getNextToken();
MatlabTokenizer.java,currentToken = (Token) tokenManager.getNextToken();,if (tokenManager != null ) currentToken = (Token) tokenManager.getNextToken();
PHPTokenizer.java,List<String> code = tokens.getCode();,if (tokens != null ) List<String> code = tokens.getCode();
PLSQLTokenizer.java,String fileName = sourceCode.getFileName();,if (sourceCode != null ) String fileName = sourceCode.getFileName();
PLSQLTokenizer.java,StringBuilder sb = sourceCode.getCodeBuffer();,if (sourceCode != null ) StringBuilder sb = sourceCode.getCodeBuffer();
PLSQLTokenizer.java,Token currentToken = tokenMgr.getNextToken();,if (tokenMgr != null ) Token currentToken = tokenMgr.getNextToken();
PLSQLTokenizer.java,currentToken = tokenMgr.getNextToken();,if (tokenMgr != null ) currentToken = tokenMgr.getNextToken();
ASTVariableOrConstantDeclaratorId.java,Node n = jjtGetParent().jjtGetParent();,if (jjtGetParent() != null ) Node n = jjtGetParent().jjtGetParent();
DumpFacade.java,String image = node.getImage();,if (node != null ) String image = node.getImage();
DumpFacade.java,image = node.getImage();,if (node != null ) image = node.getImage();
PLSQLDataFlowNode.java,res += super.toString();,if (super != null ) res += super.toString();
StatementAndBraceFinder.java,ASTForStatement st = (ASTForStatement) node.jjtGetParent();,if (node != null ) ASTForStatement st = (ASTForStatement) node.jjtGetParent();
StatementAndBraceFinder.java,ASTLoopStatement st = (ASTLoopStatement) node.jjtGetParent();,if (node != null ) ASTLoopStatement st = (ASTLoopStatement) node.jjtGetParent();
StatementAndBraceFinder.java,ASTWhileStatement statement = (ASTWhileStatement) node.jjtGetParent();,if (node != null ) ASTWhileStatement statement = (ASTWhileStatement) node.jjtGetParent();
StatementAndBraceFinder.java,ASTForStatement statement = (ASTForStatement) node.jjtGetParent();,if (node != null ) ASTForStatement statement = (ASTForStatement) node.jjtGetParent();
StatementAndBraceFinder.java,ASTForStatement parent = (ASTForStatement) node.jjtGetParent();,if (node != null ) ASTForStatement parent = (ASTForStatement) node.jjtGetParent();
VariableAccessVisitor.java,DataFlowNode inode = node.getDataFlowNode();,if (node != null ) DataFlowNode inode = node.getDataFlowNode();
VariableAccessVisitor.java,NameDeclaration vnd = entry.getKey();,if (entry != null ) NameDeclaration vnd = entry.getKey();
AbstractNcssCountRule.java,numNodes += treeSize.intValue();,if (treeSize != null ) numNodes += treeSize.intValue();
AbstractNcssCountRule.java,lineCount += nodeCount.intValue();,if (nodeCount != null ) lineCount += nodeCount.intValue();
CyclomaticComplexityRule.java,Entry entry = entryStack.peek();,if (entryStack != null ) Entry entry = entryStack.peek();
CyclomaticComplexityRule.java,Entry entry = entryStack.peek();,if (entryStack != null ) Entry entry = entryStack.peek();
CyclomaticComplexityRule.java,Entry classEntry = entryStack.pop();,if (entryStack != null ) Entry classEntry = entryStack.pop();
CyclomaticComplexityRule.java,Entry classEntry = entryStack.pop();,if (entryStack != null ) Entry classEntry = entryStack.pop();
CyclomaticComplexityRule.java,Entry methodEntry = entryStack.pop();,if (entryStack != null ) Entry methodEntry = entryStack.pop();
CyclomaticComplexityRule.java,Entry classEntry = entryStack.peek();,if (entryStack != null ) Entry classEntry = entryStack.peek();
CyclomaticComplexityRule.java,Entry methodEntry = entryStack.pop();,if (entryStack != null ) Entry methodEntry = entryStack.pop();
CyclomaticComplexityRule.java,Entry classEntry = entryStack.peek();,if (entryStack != null ) Entry classEntry = entryStack.peek();
CyclomaticComplexityRule.java,Entry methodEntry = entryStack.pop();,if (entryStack != null ) Entry methodEntry = entryStack.pop();
CyclomaticComplexityRule.java,Entry classEntry = entryStack.peek();,if (entryStack != null ) Entry classEntry = entryStack.peek();
NPathComplexityRule.java,children += element.jjtGetNumChildren();,if (element != null ) children += element.jjtGetNumChildren();
NPathComplexityRule.java,children += element.jjtGetNumChildren();,if (element != null ) children += element.jjtGetNumChildren();
NcssObjectCountRule.java,numNodes += treeSize.intValue();,if (treeSize != null ) numNodes += treeSize.intValue();
TooManyFieldsRule.java,String key = clazz.getImage();,if (clazz != null ) String key = clazz.getImage();
ClassScope.java,int v = anonymousInnerClassCounter.get().intValue();,if (anonymousInnerClassCounter != null ) int v = anonymousInnerClassCounter.get().intValue();
ClassScope.java,Node n = occurrence.getLocation();,if (occurrence != null ) Node n = occurrence.getLocation();
ClassScope.java,Node n = occurrence.getLocation();,if (occurrence != null ) Node n = occurrence.getLocation();
ClassScope.java,int args = occurrence.getArgumentCount();,if (occurrence != null ) int args = occurrence.getArgumentCount();
ClassScope.java,res += mnd.toString();,if (mnd != null ) res += mnd.toString();
ClassScope.java,int usages = methodNames.get(mnd).size();,if (methodNames != null ) int usages = methodNames.get(mnd).size();
LocalScope.java,Node n = occurrence.getLocation();,if (occurrence != null ) Node n = occurrence.getLocation();
LocalScope.java,ImageFinderFunction finder = new ImageFinderFunction(occurrence.getImage());,if (ImageFinderFunction(occurrence != null ) ImageFinderFunction finder = new ImageFinderFunction(occurrence.getImage());
MethodScope.java,Node n = occurrence.getLocation();,if (occurrence != null ) Node n = occurrence.getLocation();
MethodScope.java,ImageFinderFunction finder = new ImageFinderFunction(occurrence.getImage());,if (ImageFinderFunction(occurrence != null ) ImageFinderFunction finder = new ImageFinderFunction(occurrence.getImage());
OccurrenceFinder.java,List<PLSQLNameOccurrence> names = nameFinder.getNames();,if (nameFinder != null ) List<PLSQLNameOccurrence> names = nameFinder.getNames();
OccurrenceFinder.java,Scope scope = decl.getScope();,if (decl != null ) Scope scope = decl.getScope();
OccurrenceFinder.java,Set<NameDeclaration> found = search.getResult();,if (search != null ) Set<NameDeclaration> found = search.getResult();
PLSQLNameOccurrence.java,primaryExpression = location.jjtGetParent().jjtGetParent();,if (location != null ) primaryExpression = location.jjtGetParent().jjtGetParent();
ScopeAndDeclarationFinder.java,ASTObjectDeclaration n = null; // node.getPackageDeclaration();,if (node != null ) ASTObjectDeclaration n = null; // node.getPackageDeclaration();
SourceFileScope.java,ImageFinderFunction finder = new ImageFinderFunction(occ.getImage());,if (ImageFinderFunction(occ != null ) ImageFinderFunction finder = new ImageFinderFunction(occ.getImage());
AbstractPLSQLParserTst.java,LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();,if (languageVersion != null ) LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();
AbstractPLSQLParserTst.java,LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();,if (languageVersion != null ) LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();
AbstractPLSQLParserTst.java,LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();,if (languageVersion != null ) LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();
StatementAndBraceFinderTest.java,DataFlowNode dfn = ex.getDataFlowNode();,if (ex != null ) DataFlowNode dfn = ex.getDataFlowNode();
StatementAndBraceFinderTest.java,List<DataFlowNode> dfns = dfn.getParents();,if (dfn != null ) List<DataFlowNode> dfns = dfn.getParents();
StatementAndBraceFinderTest.java,ASTProgramUnit exParent = (ASTProgramUnit) parentDfn.getNode();,if (parentDfn != null ) ASTProgramUnit exParent = (ASTProgramUnit) parentDfn.getNode();
StatementAndBraceFinderTest.java,dfn = (DataFlowNode) st.getDataFlowNode();,if (st != null ) dfn = (DataFlowNode) st.getDataFlowNode();
StatementAndBraceFinderTest.java,List<DataFlowNode> dfns = dfn.getFlow();,if (dfn != null ) List<DataFlowNode> dfns = dfn.getFlow();
PythonTokenizer.java,StringBuilder buffer = sourceCode.getCodeBuffer();,if (sourceCode != null ) StringBuilder buffer = sourceCode.getCodeBuffer();
PythonTokenizer.java,reader = new StringReader(buffer.toString());,if (StringReader(buffer != null ) reader = new StringReader(buffer.toString());
PythonTokenizer.java,Token currentToken = (Token) tokenManager.getNextToken();,if (tokenManager != null ) Token currentToken = (Token) tokenManager.getNextToken();
PythonTokenizer.java,currentToken = (Token) tokenManager.getNextToken();,if (tokenManager != null ) currentToken = (Token) tokenManager.getNextToken();
ScalaTokenizer.java,String filename = source.getFileName();,if (source != null ) String filename = source.getFileName();
ASTStringLiteral.java,Token tok = node.getFirstToken();,if (node != null ) Token tok = node.getFirstToken();
MacroParseException.java,final StringBuffer sb = new StringBuffer(super.getMessage());,if (StringBuffer(super != null ) final StringBuffer sb = new StringBuffer(super.getMessage());
TemplateParseException.java,final StringBuffer sb = new StringBuffer(super.getMessage());,if (StringBuffer(super != null ) final StringBuffer sb = new StringBuffer(super.getMessage());
RuntimeMacro.java,this.macroName = macroName.intern();,if (macroName != null ) this.macroName = macroName.intern();
NoInlineJavaScriptRule.java,final Matcher matcher = scriptPattern.matcher(node.literal());,if (scriptPattern != null ) final Matcher matcher = scriptPattern.matcher(node.literal());
NoInlineJavaScriptRule.java,final String currentMatch = matcher.group();,if (matcher != null ) final String currentMatch = matcher.group();
UnusedMacroParameterRule.java,final String text = literalInMacro.literal();,if (literalInMacro != null ) final String text = literalInMacro.literal();
VmParserTest.java,final Parser parser = vmLang.getParser(vmLang.getDefaultParserOptions());,if (vmLang != null ) final Parser parser = vmLang.getParser(vmLang.getDefaultParserOptions());
XmlParserOptions.java,int result = super.hashCode();,if (super != null ) int result = super.hashCode();
DOMLineNumbers.java,"String te = unexpandEntities(n, n.getNodeValue());","if (n != null ) String te = unexpandEntities(n, n.getNodeValue());"
DOMLineNumbers.java,nextIndex += n.getNodeValue().length();,if (n != null ) nextIndex += n.getNodeValue().length();
DOMLineNumbers.java,"String te = unexpandEntities(n, n.getNodeValue());","if (n != null ) String te = unexpandEntities(n, n.getNodeValue());"
DOMLineNumbers.java,nextIndex += te.length();,if (te != null ) nextIndex += te.length();
DOMLineNumbers.java,DocumentType doctype = n.getOwnerDocument().getDoctype();,if (n != null ) DocumentType doctype = n.getOwnerDocument().getDoctype();
DOMLineNumbers.java,NamedNodeMap entities = doctype.getEntities();,if (doctype != null ) NamedNodeMap entities = doctype.getEntities();
DOMLineNumbers.java,String internalSubset = doctype.getInternalSubset();,if (doctype != null ) String internalSubset = doctype.getInternalSubset();
DOMLineNumbers.java,String entityName = item.getNodeName();,if (item != null ) String entityName = item.getNodeName();
DOMLineNumbers.java,Node firstChild = item.getFirstChild();,if (item != null ) Node firstChild = item.getFirstChild();
DumpFacade.java,String image = node.getImage();,if (node != null ) String image = node.getImage();
DumpFacade.java,Iterator<Attribute> iterator = node.getAttributeIterator();,if (node != null ) Iterator<Attribute> iterator = node.getAttributeIterator();
DumpFacade.java,Attribute attribute = iterator.next();,if (iterator != null ) Attribute attribute = iterator.next();
XmlNodeInvocationHandler.java,Node parent = node.getParentNode();,if (node != null ) Node parent = node.getParentNode();
XmlNodeInvocationHandler.java,NodeList childNodes = parent.getChildNodes();,if (parent != null ) NodeList childNodes = parent.getChildNodes();
XmlNodeInvocationHandler.java,Node parent = node.getParentNode();,if (node != null ) Node parent = node.getParentNode();
XmlNodeInvocationHandler.java,final NamedNodeMap attributes = node.getAttributes();,if (node != null ) final NamedNodeMap attributes = node.getAttributes();
XmlNodeInvocationHandler.java,String s = node.getNodeName();,if (node != null ) String s = node.getNodeName();
XmlParser.java,DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();,if (DocumentBuilderFactory != null ) DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
XmlParser.java,DocumentBuilder documentBuilder = dbf.newDocumentBuilder();,if (dbf != null ) DocumentBuilder documentBuilder = dbf.newDocumentBuilder();
AbstractDomXmlRule.java,final Node domNode = node.getNode();,if (node != null ) final Node domNode = node.getNode();
AbstractDomXmlRule.java,NamedNodeMap attributes = domNode.getAttributes();,if (domNode != null ) NamedNodeMap attributes = domNode.getAttributes();
AbstractXmlRule.java,final int numChildren = node.jjtGetNumChildren();,if (node != null ) final int numChildren = node.jjtGetNumChildren();
XmlRuleChainVisitor.java,Node node = stack.pop();,if (stack != null ) Node node = stack.pop();
XmlParserOptionsTest.java,options = (XmlParserOptions) rule.getParserOptions();,if (rule != null ) options = (XmlParserOptions) rule.getParserOptions();
XmlParserTest.java,Parser parser = xmlVersionHandler.getParser(xmlVersionHandler.getDefaultParserOptions());,if (xmlVersionHandler != null ) Parser parser = xmlVersionHandler.getParser(xmlVersionHandler.getDefaultParserOptions());
XmlParserTest.java,Parser parser = xmlVersionHandler.getParser(xmlVersionHandler.getDefaultParserOptions());,if (xmlVersionHandler != null ) Parser parser = xmlVersionHandler.getParser(xmlVersionHandler.getDefaultParserOptions());
XmlParserTest.java,Parser parser = xmlVersionHandler.getParser(xmlVersionHandler.getDefaultParserOptions());,if (xmlVersionHandler != null ) Parser parser = xmlVersionHandler.getParser(xmlVersionHandler.getDefaultParserOptions());
XmlParserTest.java,Locale oldLocale = Locale.getDefault();,if (Locale != null ) Locale oldLocale = Locale.getDefault();
XmlParserTest.java,XmlParserOptions options = (XmlParserOptions)xmlVersionHandler.getDefaultParserOptions();,if ((XmlParserOptions)xmlVersionHandler != null ) XmlParserOptions options = (XmlParserOptions)xmlVersionHandler.getDefaultParserOptions();
XmlParserTest.java,Attribute attribute = attributeIterator.next();,if (attributeIterator != null ) Attribute attribute = attributeIterator.next();
XmlParserTest.java,Attribute attribute = attributeIterator.next();,if (attributeIterator != null ) Attribute attribute = attributeIterator.next();
ApexTokenizer.java,StringBuilder buffer = sourceCode.getCodeBuffer();,if (sourceCode != null ) StringBuilder buffer = sourceCode.getCodeBuffer();
ApexTokenizer.java,reader = new StringReader(buffer.toString());,if (StringReader(buffer != null ) reader = new StringReader(buffer.toString());
ApexTokenizer.java,Token currentToken = (Token) tokenManager.getNextToken();,if (tokenManager != null ) Token currentToken = (Token) tokenManager.getNextToken();
ApexTokenizer.java,currentToken = (Token) tokenManager.getNextToken();,if (tokenManager != null ) currentToken = (Token) tokenManager.getNextToken();
TestClassWithoutTestCasesRule.java,ASTMethodDeclaration md = it.next();,if (it != null ) ASTMethodDeclaration md = it.next();
AccessorClassGenerationRule.java,String interfaceName = node.getImage();,if (node != null ) String interfaceName = node.getImage();
AccessorClassGenerationRule.java,String interfaceName = node.getImage();,if (node != null ) String interfaceName = node.getImage();
AccessorClassGenerationRule.java,String className = node.getImage();,if (node != null ) String className = node.getImage();
AccessorClassGenerationRule.java,String className = node.getImage();,if (node != null ) String className = node.getImage();
AccessorClassGenerationRule.java,String interfaceName = node.getImage();,if (node != null ) String interfaceName = node.getImage();
AccessorClassGenerationRule.java,String interfaceName = node.getImage();,if (node != null ) String interfaceName = node.getImage();
CPDCommandLineInterface.java,File directory = file.getAbsoluteFile().getParentFile();,if (file != null ) File directory = file.getAbsoluteFile().getParentFile();
CPDCommandLineInterface.java,String filename = file.getName();,if (file != null ) String filename = file.getName();
JSPTokenizer.java,StringBuilder buffer = sourceCode.getCodeBuffer();,if (sourceCode != null ) StringBuilder buffer = sourceCode.getCodeBuffer();
JSPTokenizer.java,Token currentToken = (Token) tokenMgr.getNextToken();,if (tokenMgr != null ) Token currentToken = (Token) tokenMgr.getNextToken();
JSPTokenizer.java,currentToken = (Token) tokenMgr.getNextToken();,if (tokenMgr != null ) currentToken = (Token) tokenMgr.getNextToken();
JspDocStyleTest.java,ASTElement script = (ASTElement) iterator.next();,if (iterator != null ) ASTElement script = (ASTElement) iterator.next();
JspDocStyleTest.java,script = (ASTElement) iterator.next();,if (iterator != null ) script = (ASTElement) iterator.next();
JspDocStyleTest.java,ASTElExpression script = (ASTElExpression) iterator.next();,if (iterator != null ) ASTElExpression script = (ASTElExpression) iterator.next();
JspDocStyleTest.java,script = (ASTElExpression) iterator.next();,if (iterator != null ) script = (ASTElExpression) iterator.next();
PMDTestRunner.java,List<Rule> rules = new ArrayList<Rule>(test.getRules());,if (ArrayList<Rule>(test != null ) List<Rule> rules = new ArrayList<Rule>(test.getRules());
GodClassRule.java,List<String> methods = new ArrayList<String>(methodAttributeAccess.keySet());,if (ArrayList<String>(methodAttributeAccess != null ) List<String> methods = new ArrayList<String>(methodAttributeAccess.keySet());
BeanMembersShouldSerializeRule.java,List<ASTMethodDeclarator> getSetMethList = new ArrayList<ASTMethodDeclarator>(methods.size());,if (ArrayList<ASTMethodDeclarator>(methods != null ) List<ASTMethodDeclarator> getSetMethList = new ArrayList<ASTMethodDeclarator>(methods.size());
RegexHelper.java,patterns = new ArrayList<Pattern>(list.size());,if (ArrayList<Pattern>(list != null ) patterns = new ArrayList<Pattern>(list.size());
ClassScopeTest.java,Iterator i = m.keySet().iterator();,if (m != null ) Iterator i = m.keySet().iterator();
ClassScopeTest.java,Iterator i = m.entrySet().iterator();,if (m != null ) Iterator i = m.entrySet().iterator();
ClassScopeTest.java,entry = (Map.Entry) i.next();,if (i != null ) entry = (Map.Entry) i.next();
ClassScopeTest.java,List usages = (List) entry.getValue();,if (entry != null ) List usages = (List) entry.getValue();
ClassScopeTest.java,Iterator i = m.entrySet().iterator();,if (m != null ) Iterator i = m.entrySet().iterator();
ClassScopeTest.java,entry = (Map.Entry) i.next();,if (i != null ) entry = (Map.Entry) i.next();
ClassScopeTest.java,List usages = (List) entry.getValue();,if (entry != null ) List usages = (List) entry.getValue();
GlobalScopeTest.java,Map m = scope.getDeclarations();,if (scope != null ) Map m = scope.getDeclarations();
LocalScopeTest.java,Map vars = node.getScope().getDeclarations();,if (node != null ) Map vars = node.getScope().getDeclarations();
LocalScopeTest.java,Map vars = node.getScope().getDeclarations();,if (node != null ) Map vars = node.getScope().getDeclarations();
LocalScopeTest.java,Map vars = node.getScope().getDeclarations();,if (node != null ) Map vars = node.getScope().getDeclarations();
SourceFileScopeTest.java,Map m = acu.getScope().getDeclarations();,if (acu != null ) Map m = acu.getScope().getDeclarations();
SourceFileScopeTest.java,Map m = acu.getScope().getDeclarations();,if (acu != null ) Map m = acu.getScope().getDeclarations();
SourceFileScopeTest.java,Iterator iterator = m.keySet().iterator();,if (m != null ) Iterator iterator = m.keySet().iterator();
TextReport.java,List<BenchmarkResult> results = new ArrayList<BenchmarkResult>(benchmarksByName.values());,if (ArrayList<BenchmarkResult>(benchmarksByName != null ) List<BenchmarkResult> results = new ArrayList<BenchmarkResult>(benchmarksByName.values());
GUI.java,Set<String> sourceIDs = new HashSet<String>(match.getMarkCount());,if (HashSet<String>(match != null ) Set<String> sourceIDs = new HashSet<String>(match.getMarkCount());
AbstractRule.java,List<String> copy = new ArrayList<String>(examples.size());,if (ArrayList<String>(examples != null ) List<String> copy = new ArrayList<String>(examples.size());
AbstractRule.java,List<String> copy = new ArrayList<String>(ruleChainVisits.size());,if (ArrayList<String>(ruleChainVisits != null ) List<String> copy = new ArrayList<String>(ruleChainVisits.size());
SimpleNodeTreeNodeAdapter.java,children = new ArrayList<TreeNode>(node.jjtGetNumChildren());,if (ArrayList<TreeNode>(node != null ) children = new ArrayList<TreeNode>(node.jjtGetNumChildren());
DBURITest.java,List result = instance.getSchemasList();,if (instance != null ) List result = instance.getSchemasList();
DBURITest.java,List result = instance.getSourceCodeTypesList();,if (instance != null ) List result = instance.getSourceCodeTypesList();
DBURITest.java,List result = instance.getSourceCodeNamesList();,if (instance != null ) List result = instance.getSourceCodeNamesList();
DBURITest.java,List result = instance.getLanguagesList();,if (instance != null ) List result = instance.getLanguagesList();
DBURITest.java,Map result = instance.getParameters();,if (instance != null ) Map result = instance.getParameters();
SourceCodeProcessor.java,LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();,if (languageVersion != null ) LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();
CsTokenizer.java,int ic = reader.read();,if (reader != null ) int ic = reader.read();
CsTokenizer.java,ic = reader.read();,if (reader != null ) ic = reader.read();
CsTokenizer.java,ic = reader.read();,if (reader != null ) ic = reader.read();
CsTokenizer.java,ic = reader.read();,if (reader != null ) ic = reader.read();
CsTokenizer.java,ic = reader.read();,if (reader != null ) ic = reader.read();
CsTokenizer.java,ic = reader.read();,if (reader != null ) ic = reader.read();
CsTokenizer.java,ic = reader.read();,if (reader != null ) ic = reader.read();
CsTokenizer.java,int next = reader.read();,if (reader != null ) int next = reader.read();
CsTokenizer.java,ic = reader.read();,if (reader != null ) ic = reader.read();
CsTokenizer.java,ic = reader.read();,if (reader != null ) ic = reader.read();
CsTokenizer.java,ic = reader.read();,if (reader != null ) ic = reader.read();
CsTokenizer.java,ic = reader.read();,if (reader != null ) ic = reader.read();
CsTokenizerTest.java,List<TokenEntry> tokenList = tokens.getTokens();,if (tokens != null ) List<TokenEntry> tokenList = tokens.getTokens();
CsTokenizerTest.java,List<TokenEntry> tokenList = tokens.getTokens();,if (tokens != null ) List<TokenEntry> tokenList = tokens.getTokens();
PMDTaskImpl.java,RuleSets rules = ruleSetFactory.createRuleSets(configuration.getRuleSets());,if (ruleSetFactory != null ) RuleSets rules = ruleSetFactory.createRuleSets(configuration.getRuleSets());
PmdRunnable.java,RuleSets rs = thread.getRuleSets(configuration.getRuleSets());,if (thread != null ) RuleSets rs = thread.getRuleSets(configuration.getRuleSets());
LocalScope.java,ImageFinderFunction finder = new ImageFinderFunction(occurrence.getImage());,if (ImageFinderFunction(occurrence != null ) ImageFinderFunction finder = new ImageFinderFunction(occurrence.getImage());
ClassScope.java,Node n = occurrence.getLocation();,if (occurrence != null ) Node n = occurrence.getLocation();
ClassScope.java,Node n = occurrence.getLocation();,if (occurrence != null ) Node n = occurrence.getLocation();
LocalScope.java,Node n = occurrence.getLocation();,if (occurrence != null ) Node n = occurrence.getLocation();
MethodScope.java,Node n = occurrence.getLocation();,if (occurrence != null ) Node n = occurrence.getLocation();
OccurrenceFinder.java,decl = search.getResult();,if (search != null ) decl = search.getResult();
OccurrenceFinder.java,Scope scope = decl.getScope();,if (decl != null ) Scope scope = decl.getScope();
OccurrenceFinder.java,decl = search.getResult();,if (search != null ) decl = search.getResult();
ClassScope.java,Node n = javaOccurrence.getLocation();,if (javaOccurrence != null ) Node n = javaOccurrence.getLocation();
ClassScope.java,Scope innerClassScope = innerClass.getScope();,if (innerClass != null ) Scope innerClassScope = innerClass.getScope();
ClassScope.java,Node n = javaOccurrence.getLocation();,if (javaOccurrence != null ) Node n = javaOccurrence.getLocation();
ClassScope.java,NameDeclaration result = finder.getDecl();,if (finder != null ) NameDeclaration result = finder.getDecl();
ClassScope.java,result = finder.getDecl();,if (finder != null ) result = finder.getDecl();
LocalScope.java,Node n = javaOccurrence.getLocation();,if (javaOccurrence != null ) Node n = javaOccurrence.getLocation();
MethodScope.java,Node n = javaOccurrence.getLocation();,if (javaOccurrence != null ) Node n = javaOccurrence.getLocation();
OccurrenceFinder.java,decl = search.getResult();,if (search != null ) decl = search.getResult();
OccurrenceFinder.java,Scope startingScope = decl.getScope();,if (decl != null ) Scope startingScope = decl.getScope();
OccurrenceFinder.java,startingScope = clazzDeclaration.getScope();,if (clazzDeclaration != null ) startingScope = clazzDeclaration.getScope();
OccurrenceFinder.java,decl = search.getResult();,if (search != null ) decl = search.getResult();
ConsecutiveAppendsShouldReuseRule.java,String image = name.getImage();,if (name != null ) String image = name.getImage();
ConsecutiveAppendsShouldReuseRule.java,String image = name.getImage();,if (name != null ) String image = name.getImage();
ConsecutiveLiteralAppendsRule.java,Node n = jno.getLocation();,if (jno != null ) Node n = jno.getLocation();
ConsecutiveLiteralAppendsRule.java,Node parent = node.jjtGetParent();,if (node != null ) Node parent = node.jjtGetParent();
ConsecutiveLiteralAppendsRule.java,Node parentNode = node.jjtGetParent();,if (node != null ) Node parentNode = node.jjtGetParent();
ConsecutiveLiteralAppendsRule.java,parentNode = parentNode.jjtGetParent();,if (parentNode != null ) parentNode = parentNode.jjtGetParent();
ConsecutiveLiteralAppendsRule.java,int allChildren = parentNode.jjtGetNumChildren();,if (parentNode != null ) int allChildren = parentNode.jjtGetNumChildren();
ConsecutiveLiteralAppendsRule.java,Node nn = node.getTypeNameNode();,if (node != null ) Node nn = node.getTypeNameNode();
RuleSetToDocs.java,Document document = (Document) dom.getNode();,if (dom != null ) Document document = (Document) dom.getNode();
RuleSetToDocs.java,NodeList children = parent.getChildNodes();,if (parent != null ) NodeList children = parent.getChildNodes();
RuleSetToDocs.java,String content = node.getTextContent();,if (node != null ) String content = node.getTextContent();
RuntimeRulePropertiesAnalyzer.java,String classAtt = classAttribute.getTextContent();,if (classAttribute != null ) String classAtt = classAttribute.getTextContent();
RuntimeRulePropertiesAnalyzer.java,Object ruleInstance = clazz.newInstance();,if (clazz != null ) Object ruleInstance = clazz.newInstance();
RuntimeRulePropertiesAnalyzer.java,NodeList ruleChilds = rule.getChildNodes();,if (rule != null ) NodeList ruleChilds = rule.getChildNodes();
FileUtil.java,File parentDir = filename.getParentFile();,if (filename != null ) File parentDir = filename.getParentFile();
FileUtil.java,File[] files = file.listFiles();,if (file != null ) File[] files = file.listFiles();
FileUtil.java,line = br.readLine();,if (br != null ) line = br.readLine();
XmlUtil.java,TransformerFactory factory = TransformerFactory.newInstance();,if (TransformerFactory != null ) TransformerFactory factory = TransformerFactory.newInstance();
XmlUtil.java,DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();,if (DocumentBuilderFactory != null ) DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
XmlUtil.java,DocumentBuilder parser = factory.newDocumentBuilder();,if (factory != null ) DocumentBuilder parser = factory.newDocumentBuilder();
XmlUtil.java,doc = parser.newDocument();,if (parser != null ) doc = parser.newDocument();
XmlUtil.java,TransformerFactory tFactory = TransformerFactory.newInstance();,if (TransformerFactory != null ) TransformerFactory tFactory = TransformerFactory.newInstance();
XmlUtil.java,Transformer transformer = tFactory.newTransformer();,if (tFactory != null ) Transformer transformer = tFactory.newTransformer();
PmdPreSite.java,Set<Artifact> runtimeArtifacts = project.getArtifacts();,if (project != null ) Set<Artifact> runtimeArtifacts = project.getArtifacts();
RuleSetToDocsTest.java,ClassLoader cl = RuleSetToDocsTest.class.getClassLoader();,if (RuleSetToDocsTest != null ) ClassLoader cl = RuleSetToDocsTest.class.getClassLoader();
RuleSetToDocsTest.java,Object ruleInstance = clazz.newInstance();,if (clazz != null ) Object ruleInstance = clazz.newInstance();
ClassScope.java,int nameLength = typeImage.length();,if (typeImage != null ) int nameLength = typeImage.length();
SingleMethodSingletonRule.java,String varName = varDeclaratorId.getImage();,if (varDeclaratorId != null ) String varName = varDeclaratorId.getImage();
SingleMethodSingletonRule.java,String varName=varDeclaratorId.getImage();,if (varName=varDeclaratorId != null ) String varName=varDeclaratorId.getImage();
SingletonClassReturningNewInstanceRule.java,localVarName = localVar.getVariableName();,if (localVar != null ) localVarName = localVar.getVariableName();
SourceCode.java,c = code.get();,if (code != null ) c = code.get();
SourceCode.java,List<String> lines = cl.getCode();,if (cl != null ) List<String> lines = cl.getCode();
SourceCode.java,List<String> lines = cl.getCode();,if (cl != null ) List<String> lines = cl.getCode();
XMLRenderer.java,RuleViolation rv = violations.next();,if (violations != null ) RuleViolation rv = violations.next();
XMLRenderer.java,filename = rv.getFilename();,if (rv != null ) filename = rv.getFilename();
XMLRenderer.java,Report.ReadableDuration d = new Report.ReadableDuration(rpt.getElapsedTimeInMillis());,if (Report != null ) Report.ReadableDuration d = new Report.ReadableDuration(rpt.getElapsedTimeInMillis());
DBMSMetadataTest.java,ResultSetMetaData metaData = resultSet.getMetaData();,if (resultSet != null ) ResultSetMetaData metaData = resultSet.getMetaData();
DBMSMetadataTest.java,String driverClass = dbURI.getDriverClass();,if (dbURI != null ) String driverClass = dbURI.getDriverClass();
DBMSMetadataTest.java,Connection result = instance.getConnection();,if (instance != null ) Connection result = instance.getConnection();
DBMSMetadataTest.java,Connection result = instance.getConnection();,if (instance != null ) Connection result = instance.getConnection();
DBMSMetadataTest.java,String driverClass = testURI.getDriverClass();,if (testURI != null ) String driverClass = testURI.getDriverClass();
DBMSMetadataTest.java,Connection result = instance.getConnection();,if (instance != null ) Connection result = instance.getConnection();
DBMSMetadataTest.java,String driverClass = testURI.getDriverClass();,if (testURI != null ) String driverClass = testURI.getDriverClass();
DBMSMetadataTest.java,Connection result = instance.getConnection();,if (instance != null ) Connection result = instance.getConnection();
DBMSMetadataTest.java,List<SourceObject> sourceObjectList = instance.getSourceObjectList();,if (instance != null ) List<SourceObject> sourceObjectList = instance.getSourceObjectList();
DBTypeTest.java,Properties result = instance.getProperties();,if (instance != null ) Properties result = instance.getProperties();
DBTypeTest.java,Properties result = instance.getProperties();,if (instance != null ) Properties result = instance.getProperties();
DBTypeTest.java,Properties result = instance.getProperties();,if (instance != null ) Properties result = instance.getProperties();
DBURITest.java,String query = dburi.getQuery();,if (dburi != null ) String query = dburi.getQuery();
DBURITest.java,URI result = instance.getUri();,if (instance != null ) URI result = instance.getUri();
DBURITest.java,DBType result = instance.getDbType();,if (instance != null ) DBType result = instance.getDbType();
DBURITest.java,DBType result = instance.getDbType();,if (instance != null ) DBType result = instance.getDbType();
DBURITest.java,List result = instance.getSchemasList();,if (instance != null ) List result = instance.getSchemasList();
DBURITest.java,List result = instance.getSourceCodeTypesList();,if (instance != null ) List result = instance.getSourceCodeTypesList();
DBURITest.java,List result = instance.getSourceCodeNamesList();,if (instance != null ) List result = instance.getSourceCodeNamesList();
DBURITest.java,List result = instance.getLanguagesList();,if (instance != null ) List result = instance.getLanguagesList();
DBURITest.java,String result = instance.getDriverClass();,if (instance != null ) String result = instance.getDriverClass();
DBURITest.java,String result = instance.getDriverClass();,if (instance != null ) String result = instance.getDriverClass();
DBURITest.java,String result = instance.getCharacterSet();,if (instance != null ) String result = instance.getCharacterSet();
DBURITest.java,int result = instance.getSourceCodeType();,if (instance != null ) int result = instance.getSourceCodeType();
DBURITest.java,String result = instance.getSubprotocol();,if (instance != null ) String result = instance.getSubprotocol();
DBURITest.java,String result = instance.getSubprotocol();,if (instance != null ) String result = instance.getSubprotocol();
DBURITest.java,String result = instance.getSubnamePrefix();,if (instance != null ) String result = instance.getSubnamePrefix();
DBURITest.java,String result = instance.getSubnamePrefix();,if (instance != null ) String result = instance.getSubnamePrefix();
DBURITest.java,Map result = instance.getParameters();,if (instance != null ) Map result = instance.getParameters();
DBURITest.java,String result = instance.getCharacterSet();,if (instance != null ) String result = instance.getCharacterSet();
DBURITest.java,String result = instance.getCharacterSet();,if (instance != null ) String result = instance.getCharacterSet();
VariableAccessVisitor.java,VariableNameDeclaration vnd = (VariableNameDeclaration)entry.getKey();,if ((VariableNameDeclaration)entry != null ) VariableNameDeclaration vnd = (VariableNameDeclaration)entry.getKey();
AccessorClassGenerationRule.java,String className = node.getImage();,if (node != null ) String className = node.getImage();
AccessorClassGenerationRule.java,String className = node.getImage();,if (node != null ) String className = node.getImage();
NonThreadSafeSingletonRule.java,ASTStatementExpression expr = (ASTStatementExpression) oper.jjtGetParent();,if (oper != null ) ASTStatementExpression expr = (ASTStatementExpression) oper.jjtGetParent();
NonThreadSafeSingletonRule.java,name = priSuf.getImage();,if (priSuf != null ) name = priSuf.getImage();
NonThreadSafeSingletonRule.java,name = astName.getImage();,if (astName != null ) name = astName.getImage();
BeanMembersShouldSerializeRule.java,imageArray[i] = nodes.get(i).getImage();,if (nodes != null ) imageArray[i] = nodes.get(i).getImage();
BeanMembersShouldSerializeRule.java,List<ASTMethodDeclarator> getSetMethList = new ArrayList<ASTMethodDeclarator>(methods.size());,if (ArrayList<ASTMethodDeclarator>(methods != null ) List<ASTMethodDeclarator> getSetMethList = new ArrayList<ASTMethodDeclarator>(methods.size());
BeanMembersShouldSerializeRule.java,AccessNode accessNodeParent = decl.getAccessNodeParent();,if (decl != null ) AccessNode accessNodeParent = decl.getAccessNodeParent();
BeanMembersShouldSerializeRule.java,String varName = trimIfPrefix(decl.getImage());,if (trimIfPrefix(decl != null ) String varName = trimIfPrefix(decl.getImage());
BeanMembersShouldSerializeRule.java,String methodName = meth.getImage();,if (meth != null ) String methodName = meth.getImage();
VariableNamingConventionsRule.java,boolean isStatic = node.isStatic();,if (node != null ) boolean isStatic = node.isStatic();
VariableNamingConventionsRule.java,boolean isFinal = node.isFinal();,if (node != null ) boolean isFinal = node.isFinal();
VariableNamingConventionsRule.java,String varName = variableDeclaratorId.getImage();,if (variableDeclaratorId != null ) String varName = variableDeclaratorId.getImage();
MethodArgumentCouldBeFinalRule.java,AccessNode node = (AccessNode)var.getAccessNodeParent();,if ((AccessNode)var != null ) AccessNode node = (AccessNode)var.getAccessNodeParent();
RedundantFieldInitializerRule.java,value = parseInteger(literal.getImage());,if (parseInteger(literal != null ) value = parseInteger(literal.getImage());
RedundantFieldInitializerRule.java,String s = literal.getImage();,if (literal != null ) String s = literal.getImage();
RedundantFieldInitializerRule.java,String s = literal.getImage();,if (literal != null ) String s = literal.getImage();
RedundantFieldInitializerRule.java,value = Double.valueOf(literal.getImage());,if (Double != null ) value = Double.valueOf(literal.getImage());
Linker.java,StackObject firstStackObject = braceStack.get(sc.getFirstIndex());,if (braceStack != null ) StackObject firstStackObject = braceStack.get(sc.getFirstIndex());
Linker.java,int x = sc.getLastIndex() - sc.getFirstIndex();,if (sc != null ) int x = sc.getLastIndex() - sc.getFirstIndex();
Linker.java,DataFlowNode node = stackObject.getDataFlowNode();,if (stackObject != null ) DataFlowNode node = stackObject.getDataFlowNode();
Linker.java,List<DataFlowNode> bList = node.getFlow();,if (node != null ) List<DataFlowNode> bList = node.getFlow();
Linker.java,String label = node.getNode().getImage();,if (node != null ) String label = node.getNode().getImage();
Linker.java,DataFlowNode node = so.getDataFlowNode();,if (so != null ) DataFlowNode node = so.getDataFlowNode();
Linker.java,DataFlowNode node = so.getDataFlowNode();,if (so != null ) DataFlowNode node = so.getDataFlowNode();
PMD.java,long endFiles = System.nanoTime();,if (System != null ) long endFiles = System.nanoTime();
RuleSetFactory.java,private ClassLoader classLoader = RuleSetFactory.class.getClassLoader();,if (RuleSetFactory != null ) private ClassLoader classLoader = RuleSetFactory.class.getClassLoader();
RuleSetFactory.java,DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();,if (DocumentBuilderFactory != null ) DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();
RuleSetFactory.java,Element ruleSetElement = document.getDocumentElement();,if (document != null ) Element ruleSetElement = document.getDocumentElement();
RuleSetFactory.java,NodeList nodeList = ruleSetElement.getChildNodes();,if (ruleSetElement != null ) NodeList nodeList = ruleSetElement.getChildNodes();
RuleSetFactory.java,String nodeName = node.getNodeName();,if (node != null ) String nodeName = node.getNodeName();
RuleSetFactory.java,NodeList childNodes = ruleElement.getChildNodes();,if (ruleElement != null ) NodeList childNodes = ruleElement.getChildNodes();
RuleSetFactory.java,priority = parseTextNode(child).trim();,if (parseTextNode(child) != null ) priority = parseTextNode(child).trim();
RuleSetFactory.java,Language language = rule.getLanguage();,if (rule != null ) Language language = rule.getLanguage();
RuleSetFactory.java,final NodeList nodeList = ruleElement.getChildNodes();,if (ruleElement != null ) final NodeList nodeList = ruleElement.getChildNodes();
RuleSetFactory.java,String nodeName = node.getNodeName();,if (node != null ) String nodeName = node.getNodeName();
RuleSetFactory.java,final NodeList nodeList = parentNode.getChildNodes();,if (parentNode != null ) final NodeList nodeList = parentNode.getChildNodes();
RuleSetFactory.java,String valueStr = propertyElement.getAttribute(entry.getKey());,if (propertyElement != null ) String valueStr = propertyElement.getAttribute(entry.getKey());
RuleSetFactory.java,final int nodeCount = node.getChildNodes().getLength();,if (node != null ) final int nodeCount = node.getChildNodes().getLength();
StatementAndBraceFinder.java,ASTForStatement st = (ASTForStatement) node.jjtGetParent();,if (node != null ) ASTForStatement st = (ASTForStatement) node.jjtGetParent();
StatementAndBraceFinder.java,ASTLoopStatement st = (ASTLoopStatement) node.jjtGetParent();,if (node != null ) ASTLoopStatement st = (ASTLoopStatement) node.jjtGetParent();
NPathComplexityRule.java,children += element.jjtGetNumChildren();,if (element != null ) children += element.jjtGetNumChildren();
NPathComplexityRule.java,children += element.jjtGetNumChildren();,if (element != null ) children += element.jjtGetNumChildren();
PLSQLNameOccurrence.java,Node node = gp.jjtGetParent();,if (gp != null ) Node node = gp.jjtGetParent();
PLSQLNameOccurrence.java,Node node = location.jjtGetParent();,if (location != null ) Node node = location.jjtGetParent();
AbstractTokenizerTest.java,List<TokenEntry> entries = tokens.getTokens();,if (tokens != null ) List<TokenEntry> entries = tokens.getTokens();
XMLRenderer.java,DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();,if (DocumentBuilderFactory != null ) DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
XMLRenderer.java,DocumentBuilder parser = factory.newDocumentBuilder();,if (factory != null ) DocumentBuilder parser = factory.newDocumentBuilder();
XMLRenderer.java,TransformerFactory tf = TransformerFactory.newInstance();,if (TransformerFactory != null ) TransformerFactory tf = TransformerFactory.newInstance();
XMLRenderer.java,Transformer transformer = tf.newTransformer();,if (tf != null ) Transformer transformer = tf.newTransformer();
SequenceChecker.java,aktStatus = this.aktStatus.step(so.getType());,if (this != null ) aktStatus = this.aktStatus.step(so.getType());
SummaryHTMLRenderer.java,String ruleName = entry.getKey();,if (entry != null ) String ruleName = entry.getKey();
StringUtil.java,last = index + oldString.length();,if (oldString != null ) last = index + oldString.length();
StringUtil.java,int length = source.length();,if (source != null ) int length = source.length();
StringUtil.java,char[] chars = source.toCharArray();,if (source != null ) char[] chars = source.toCharArray();
StringUtil.java,int len = separator.length();,if (separator != null ) int len = separator.length();
PrematureDeclarationRule.java,Node currentParent = node.jjtGetParent();,if (node != null ) Node currentParent = node.jjtGetParent();
PrematureDeclarationRule.java,currentParent = currentParent.jjtGetParent();,if (currentParent != null ) currentParent = currentParent.jjtGetParent();
PrematureDeclarationRule.java,int count = block.jjtGetNumChildren();,if (block != null ) int count = block.jjtGetNumChildren();
PrematureDeclarationRule.java,int count = block.jjtGetNumChildren();,if (block != null ) int count = block.jjtGetNumChildren();
Comment.java,JavadocTag tag = JavadocTag.tagFor(entry.getKey());,if (JavadocTag != null ) JavadocTag tag = JavadocTag.tagFor(entry.getKey());
CommentUtil.java,String line = rawLine.trim();,if (rawLine != null ) String line = rawLine.trim();
JavaRuleViolation.java,final Scope scope = node.getScope();,if (node != null ) final Scope scope = node.getScope();
JavaRuleViolation.java,variableName = node.getImage();,if (node != null ) variableName = node.getImage();
AbstractCommentRule.java,String trimmed = comment.getImage().trim();,if (comment != null ) String trimmed = comment.getImage().trim();
AbstractCommentRule.java,String line = rawLine.trim();,if (rawLine != null ) String line = rawLine.trim();
AbstractCommentRule.java,line = line.trim();,if (line != null ) line = line.trim();
AbstractCommentRule.java,Node value = entry.getValue();,if (entry != null ) Node value = entry.getValue();
CommentContentRule.java,currentBadWords[i] = originalBadWords[i].toUpperCase();,if (originalBadWords[i] != null ) currentBadWords[i] = originalBadWords[i].toUpperCase();
CommentSizeRule.java,int offset = comment.getBeginLine();,if (comment != null ) int offset = comment.getBeginLine();
AssignmentInOperandRule.java,Node parent = node.jjtGetParent();,if (node != null ) Node parent = node.jjtGetParent();
LoosePackageCouplingRule.java,this.thisPackage = node.getPackageNameImage();,if (node != null ) this.thisPackage = node.getPackageNameImage();
LoosePackageCouplingRule.java,String importPackage = node.getPackageName();,if (node != null ) String importPackage = node.getPackageName();
LoosePackageCouplingRule.java,String importedName = node.getImportedName();,if (node != null ) String importedName = node.getImportedName();
RuleSetToDocs.java,Document document = (Document)dom.getNode();,if ((Document)dom != null ) Document document = (Document)dom.getNode();
RuntimeRulePropertiesAnalyzer.java,String classAtt = classAttribute.getTextContent();,if (classAttribute != null ) String classAtt = classAttribute.getTextContent();
RuntimeRulePropertiesAnalyzer.java,Object ruleInstance = clazz.newInstance();,if (clazz != null ) Object ruleInstance = clazz.newInstance();
RuntimeRulePropertiesAnalyzer.java,NodeList ruleChilds = rule.getChildNodes();,if (rule != null ) NodeList ruleChilds = rule.getChildNodes();
FileUtil.java,File parentDir = filename.getParentFile();,if (filename != null ) File parentDir = filename.getParentFile();
FileUtil.java,File[] files = file.listFiles();,if (file != null ) File[] files = file.listFiles();
FileUtil.java,line = br.readLine();,if (br != null ) line = br.readLine();
XmlUtil.java,TransformerFactory factory = TransformerFactory.newInstance();,if (TransformerFactory != null ) TransformerFactory factory = TransformerFactory.newInstance();
XmlUtil.java,DocumentBuilder parser = factory.newDocumentBuilder();,if (factory != null ) DocumentBuilder parser = factory.newDocumentBuilder();
XmlUtil.java,doc = parser.newDocument();,if (parser != null ) doc = parser.newDocument();
XmlUtil.java,TransformerFactory tFactory = TransformerFactory.newInstance();,if (TransformerFactory != null ) TransformerFactory tFactory = TransformerFactory.newInstance();
XmlUtil.java,Transformer transformer = tFactory.newTransformer();,if (tFactory != null ) Transformer transformer = tFactory.newTransformer();
PmdPreSite.java,Set<Artifact> runtimeArtifacts = project.getArtifacts();,if (project != null ) Set<Artifact> runtimeArtifacts = project.getArtifacts();
RuleSetToDocsTest.java,ClassLoader cl = RuleSetToDocsTest.class.getClassLoader();,if (RuleSetToDocsTest != null ) ClassLoader cl = RuleSetToDocsTest.class.getClassLoader();
RuleSetToDocsTest.java,Object ruleInstance = clazz.newInstance();,if (clazz != null ) Object ruleInstance = clazz.newInstance();
AbstractProperty.java,"return value == null ? """" : value.toString();","if (value != null ) return value == null ? """" : value.toString();"
AbstractProperty.java,float otherOrder = otherProperty.uiOrder();,if (otherProperty != null ) float otherOrder = otherProperty.uiOrder();
PropertyDescriptorFactory.java,typeName = type.getSimpleName();,if (type != null ) typeName = type.getSimpleName();
BasicPropertyDescriptorFactory.java,characterStr = valuesById.get(DELIMITER).trim();,if (valuesById != null ) characterStr = valuesById.get(DELIMITER).trim();
AbstractPropertyDescriptorTester.java,double x = range * Math.random();,if (Math != null ) double x = range * Math.random();
MethodPropertyTest.java,Method[] methods = String.class.getDeclaredMethods();,if (String != null ) Method[] methods = String.class.getDeclaredMethods();
MethodPropertyTest.java,Method[] allMethods = HashMap.class.getDeclaredMethods();,if (HashMap != null ) Method[] allMethods = HashMap.class.getDeclaredMethods();
MethodPropertyTest.java,Method[] methods = String.class.getDeclaredMethods();,if (String != null ) Method[] methods = String.class.getDeclaredMethods();
MethodPropertyTest.java,Method[] allMethods = String.class.getDeclaredMethods();,if (String != null ) Method[] allMethods = String.class.getDeclaredMethods();
TypeSignatureVisitor.java,type = array.getClass();,if (array != null ) type = array.getClass();
BasicPropertyDescriptorFactory.java,String characterStr = valuesById.get(DELIMITER).trim();,if (valuesById != null ) String characterStr = valuesById.get(DELIMITER).trim();
NodeIterator.java,Node parentNode = contextNode.jjtGetParent();,if (contextNode != null ) Node parentNode = contextNode.jjtGetParent();
AbstractScope.java,T cast = (T)e.getKey();,if ((T)e != null ) T cast = (T)e.getKey();
CSVRenderer.java,TokenEntry mark = marks.next();,if (marks != null ) TokenEntry mark = marks.next();
MatchAlgorithm.java,Iterator<TokenEntry> occurrences = match.iterator();,if (match != null ) Iterator<TokenEntry> occurrences = match.iterator();
MatchAlgorithm.java,TokenEntry mark = occurrences.next();,if (occurrences != null ) TokenEntry mark = occurrences.next();
MatchAlgorithm.java,int start = mark.getBeginLine();,if (mark != null ) int start = mark.getBeginLine();
MatchAlgorithm.java,SourceCode sourceCode = source.get(mark.getTokenSrcID());,if (source != null ) SourceCode sourceCode = source.get(mark.getTokenSrcID());
SimpleRenderer.java,TokenEntry mark = occurrences.next();,if (occurrences != null ) TokenEntry mark = occurrences.next();
MatchTest.java,Iterator i = match.iterator();,if (match != null ) Iterator i = match.iterator();
MatchAlgorithmTest.java,Iterator<TokenEntry> marks = match.iterator();,if (match != null ) Iterator<TokenEntry> marks = match.iterator();
MatchAlgorithmTest.java,Iterator<TokenEntry> marks = match.iterator();,if (match != null ) Iterator<TokenEntry> marks = match.iterator();
LineNumberAwareSaxHandler.java,this.documentBuilder = new DocumentBuilderFactoryImpl().newDocumentBuilder();,if (DocumentBuilderFactoryImpl() != null ) this.documentBuilder = new DocumentBuilderFactoryImpl().newDocumentBuilder();
LineNumberAwareSaxHandler.java,this.document = this.documentBuilder.newDocument();,if (this != null ) this.document = this.documentBuilder.newDocument();
LineNumberAwareSaxHandler.java,this.coalescing = options.isCoalescing();,if (options != null ) this.coalescing = options.isCoalescing();
LineNumberAwareSaxHandler.java,this.expandEntityReferences = options.isExpandEntityReferences();,if (options != null ) this.expandEntityReferences = options.isExpandEntityReferences();
LineNumberAwareSaxHandler.java,this.ignoringComments = options.isIgnoringComments();,if (options != null ) this.ignoringComments = options.isIgnoringComments();
LineNumberAwareSaxHandler.java,this.ignoringElementContentWhitespace = options.isIgnoringElementContentWhitespace();,if (options != null ) this.ignoringElementContentWhitespace = options.isIgnoringElementContentWhitespace();
LineNumberAwareSaxHandler.java,this.namespaceAware = options.isNamespaceAware();,if (options != null ) this.namespaceAware = options.isNamespaceAware();
LineNumberAwareSaxHandler.java,beginLineText = locator.getLineNumber();,if (locator != null ) beginLineText = locator.getLineNumber();
LineNumberAwareSaxHandler.java,beginColumnText = locator.getColumnNumber();,if (locator != null ) beginColumnText = locator.getColumnNumber();
LineNumberAwareSaxHandler.java,Node element = nodeStack.pop();,if (nodeStack != null ) Node element = nodeStack.pop();
LineNumberAwareSaxHandler.java,CDATASection cdataSection = document.createCDATASection(text.toString());,if (document != null ) CDATASection cdataSection = document.createCDATASection(text.toString());
LineNumberAwareSaxHandler.java,DocumentType doctype = document.getDoctype();,if (document != null ) DocumentType doctype = document.getDoctype();
LineNumberAwareSaxHandler.java,NamedNodeMap entities = document.getDoctype().getEntities();,if (document != null ) NamedNodeMap entities = document.getDoctype().getEntities();
XmlParser.java,SAXParserFactory saxParserFactory = SAXParserFactory.newInstance();,if (SAXParserFactory != null ) SAXParserFactory saxParserFactory = SAXParserFactory.newInstance();
XmlParser.java,SAXParser saxParser = saxParserFactory.newSAXParser();,if (saxParserFactory != null ) SAXParser saxParser = saxParserFactory.newSAXParser();
XmlParser.java,XMLReader xmlReader = saxParser.getXMLReader();,if (saxParser != null ) XMLReader xmlReader = saxParser.getXMLReader();
RedundantFieldInitializerRule.java,value = Long.decode(s).doubleValue();,if (Long != null ) value = Long.decode(s).doubleValue();
RedundantFieldInitializerRule.java,value = Float.parseFloat(literal.getImage());,if (Float != null ) value = Float.parseFloat(literal.getImage());
RedundantFieldInitializerRule.java,value = Double.parseDouble(literal.getImage());,if (Double != null ) value = Double.parseDouble(literal.getImage());
ScalaTokenizer.java,String filename = source.getFileName();,if (source != null ) String filename = source.getFileName();
GUI.java,String dirPath = rootDirectoryField.getText();,if (rootDirectoryField != null ) String dirPath = rootDirectoryField.getText();
MethodNamingConventionsRule.java,String methodName = node.getImage();,if (node != null ) String methodName = node.getImage();
XmlParser.java,SAXParserFactory saxParserFactory = SAXParserFactory.newInstance();,if (SAXParserFactory != null ) SAXParserFactory saxParserFactory = SAXParserFactory.newInstance();
XmlParser.java,SAXParser saxParser = saxParserFactory.newSAXParser();,if (saxParserFactory != null ) SAXParser saxParser = saxParserFactory.newSAXParser();
XmlParser.java,XMLReader xmlReader = saxParser.getXMLReader();,if (saxParser != null ) XMLReader xmlReader = saxParser.getXMLReader();
XmlParser.java,this.documentBuilder = new DocumentBuilderFactoryImpl().newDocumentBuilder();,if (DocumentBuilderFactoryImpl() != null ) this.documentBuilder = new DocumentBuilderFactoryImpl().newDocumentBuilder();
XmlParser.java,this.document = this.documentBuilder.newDocument();,if (this != null ) this.document = this.documentBuilder.newDocument();
XmlParser.java,this.coalescing = options.isCoalescing();,if (options != null ) this.coalescing = options.isCoalescing();
XmlParser.java,this.expandEntityReferences = options.isExpandEntityReferences();,if (options != null ) this.expandEntityReferences = options.isExpandEntityReferences();
XmlParser.java,this.ignoringComments = options.isIgnoringComments();,if (options != null ) this.ignoringComments = options.isIgnoringComments();
XmlParser.java,this.ignoringElementContentWhitespace = options.isIgnoringElementContentWhitespace();,if (options != null ) this.ignoringElementContentWhitespace = options.isIgnoringElementContentWhitespace();
XmlParser.java,this.namespaceAware = options.isNamespaceAware();,if (options != null ) this.namespaceAware = options.isNamespaceAware();
XmlParser.java,beginLineText = locator.getLineNumber();,if (locator != null ) beginLineText = locator.getLineNumber();
XmlParser.java,beginColumnText = locator.getColumnNumber();,if (locator != null ) beginColumnText = locator.getColumnNumber();
XmlParser.java,Node element = nodeStack.pop();,if (nodeStack != null ) Node element = nodeStack.pop();
XmlParser.java,CDATASection cdataSection = document.createCDATASection(text.toString());,if (document != null ) CDATASection cdataSection = document.createCDATASection(text.toString());
XmlParser.java,DocumentType doctype = document.getDoctype();,if (document != null ) DocumentType doctype = document.getDoctype();
XmlParser.java,NamedNodeMap entities = document.getDoctype().getEntities();,if (document != null ) NamedNodeMap entities = document.getDoctype().getEntities();
XmlParser.java,Node parent = node.getParentNode();,if (node != null ) Node parent = node.getParentNode();
XmlParser.java,final NamedNodeMap attributes = node.getAttributes();,if (node != null ) final NamedNodeMap attributes = node.getAttributes();
XmlParser.java,String s = node.getNodeName();,if (node != null ) String s = node.getNodeName();
CPPTokenizer.java,reader = new StringReader(buffer.toString());,if (StringReader(buffer != null ) reader = new StringReader(buffer.toString());
CPDConfiguration.java,Properties properties = System.getProperties();,if (System != null ) Properties properties = System.getProperties();
PHPTokenizer.java,List<String> code = tokens.getCode();,if (tokens != null ) List<String> code = tokens.getCode();
RuleTst.java,String strValue = (String)entry.getValue();,if ((String)entry != null ) String strValue = (String)entry.getValue();
TokenEntry.java,this.index = tokenCount.get().getAndIncrement();,if (tokenCount != null ) this.index = tokenCount.get().getAndIncrement();
TokenEntry.java,this.tokenCount = TokenEntry.tokenCount.get().intValue();,if (TokenEntry != null ) this.tokenCount = TokenEntry.tokenCount.get().intValue();
DBMSMetadata.java,this.returnType =  dbURI.getSourceCodeType();,if (dbURI != null ) this.returnType =  dbURI.getSourceCodeType();
DBMSMetadata.java,String driverClass = dbURI.getDriverClass();,if (dbURI != null ) String driverClass = dbURI.getDriverClass();
DBMSMetadata.java,String urlString = dbURI.getURL().toString();,if (dbURI != null ) String urlString = dbURI.getURL().toString();
DBMSMetadata.java,this.returnType =  dbURI.getSourceCodeType();,if (dbURI != null ) this.returnType =  dbURI.getSourceCodeType();
DBMSMetadata.java,String driverClass = dbURI.getDriverClass();,if (dbURI != null ) String driverClass = dbURI.getDriverClass();
DBMSMetadata.java,String urlString = dbURI.getURL().toString();,if (dbURI != null ) String urlString = dbURI.getURL().toString();
DBMSMetadata.java,this.returnType =  dbURI.getSourceCodeType();,if (dbURI != null ) this.returnType =  dbURI.getSourceCodeType();
DBMSMetadata.java,DBType dbType = dbURI.getDbType();,if (dbURI != null ) DBType dbType = dbURI.getDbType();
DBMSMetadata.java,String driverClass = dbURI.getDriverClass();,if (dbURI != null ) String driverClass = dbURI.getDriverClass();
DBMSMetadata.java,String urlString = dbURI.getURL().toString();,if (dbURI != null ) String urlString = dbURI.getURL().toString();
ClassScope.java,String typeImage = classInterface.getImage();,if (classInterface != null ) String typeImage = classInterface.getImage();
RuleSetFactoryTest.java,saxParserFactory = SAXParserFactory.newInstance();,if (SAXParserFactory != null ) saxParserFactory = SAXParserFactory.newInstance();
RuleSetFactoryTest.java,saxParser = saxParserFactory.newSAXParser();,if (saxParserFactory != null ) saxParser = saxParserFactory.newSAXParser();
RuleSetFactoryTest.java,Language language = rule.getLanguage();,if (rule != null ) Language language = rule.getLanguage();
RuleSetFactoryTest.java,inputStream = new ByteArrayInputStream(file.getBytes());,if (ByteArrayInputStream(file != null ) inputStream = new ByteArrayInputStream(file.getBytes());
PMDTask.java,String ruleSets = configuration.getRuleSets();,if (configuration != null ) String ruleSets = configuration.getRuleSets();
PMDTask.java,RuleSets rules = ruleSetFactory.createRuleSets(configuration.getRuleSets());,if (ruleSetFactory != null ) RuleSets rules = ruleSetFactory.createRuleSets(configuration.getRuleSets());
PMDTask.java,String[] srcFiles = ds.getIncludedFiles();,if (ds != null ) String[] srcFiles = ds.getIncludedFiles();
PMDTask.java,final String inputPaths = ds.getBasedir().getPath();,if (ds != null ) final String inputPaths = ds.getBasedir().getPath();
PMDTask.java,int problemCount = reportSize.get();,if (reportSize != null ) int problemCount = reportSize.get();
PMDTask.java,Throwable cause = pmde.getCause();,if (pmde != null ) Throwable cause = pmde.getCause();
PMDTask.java,RuleSet[] ruleSets = rules.getAllRuleSets();,if (rules != null ) RuleSet[] ruleSets = rules.getAllRuleSets();
PMDTask.java,RuleSetWrapper rs = it.next();,if (it != null ) RuleSetWrapper rs = it.next();
CPDTask.java,format = formatAttribute.getValue();,if (formatAttribute != null ) format = formatAttribute.getValue();
CPDTask.java,language = languageAttribute.getValue();,if (languageAttribute != null ) language = languageAttribute.getValue();
CsTokenizer.java,ic = reader.read();,if (reader != null ) ic = reader.read();
CsTokenizer.java,ic = reader.read();,if (reader != null ) ic = reader.read();
CsTokenizer.java,ic = reader.read();,if (reader != null ) ic = reader.read();
CsTokenizer.java,ic = reader.read();,if (reader != null ) ic = reader.read();
CsTokenizer.java,ic = reader.read();,if (reader != null ) ic = reader.read();
CsTokenizer.java,ic = reader.read();,if (reader != null ) ic = reader.read();
CsTokenizer.java,ic = reader.read();,if (reader != null ) ic = reader.read();
CsTokenizer.java,ic = reader.read();,if (reader != null ) ic = reader.read();
CsTokenizer.java,ic = reader.read();,if (reader != null ) ic = reader.read();
CsTokenizer.java,ic = reader.read();,if (reader != null ) ic = reader.read();
CsTokenizer.java,ic = reader.read();,if (reader != null ) ic = reader.read();
CsTokenizer.java,int next = reader.read();,if (reader != null ) int next = reader.read();
CsTokenizer.java,ic = reader.read();,if (reader != null ) ic = reader.read();
CsTokenizer.java,ic = reader.read();,if (reader != null ) ic = reader.read();
CsTokenizer.java,ic = reader.read();,if (reader != null ) ic = reader.read();
CsTokenizer.java,ic = reader.read();,if (reader != null ) ic = reader.read();
CPPTokenizer.java,StringBuilder buffer = sourceCode.getCodeBuffer();,if (sourceCode != null ) StringBuilder buffer = sourceCode.getCodeBuffer();
CPPTokenizer.java,reader = new StringReader(buffer.toString());,if (StringReader(buffer != null ) reader = new StringReader(buffer.toString());
CPPTokenizer.java,Token currentToken = (Token) tokenManager.getNextToken();,if (tokenManager != null ) Token currentToken = (Token) tokenManager.getNextToken();
CPPTokenizer.java,currentToken = (Token) tokenManager.getNextToken();,if (tokenManager != null ) currentToken = (Token) tokenManager.getNextToken();
LanguageFactory.java,implementation = this.dynamicLanguageImplementationLoad(language.toUpperCase());,if (this != null ) implementation = this.dynamicLanguageImplementationLoad(language.toUpperCase());
RuleSet.java,final LanguageVersion max = rule.getMinimumLanguageVersion();,if (rule != null ) final LanguageVersion max = rule.getMinimumLanguageVersion();
CLITest.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
PMDParameters.java,private String language = LanguageRegistry.getDefaultLanguage().getTerseName();,if (LanguageRegistry != null ) private String language = LanguageRegistry.getDefaultLanguage().getTerseName();
MatchAlgorithmTest.java,Iterator matches = matchAlgorithm.matches();,if (matchAlgorithm != null ) Iterator matches = matchAlgorithm.matches();
MatchAlgorithmTest.java,Match match = (Match) matches.next();,if (matches != null ) Match match = (Match) matches.next();
MatchAlgorithmTest.java,Iterator marks = match.iterator();,if (match != null ) Iterator marks = match.iterator();
MatchAlgorithmTest.java,Iterator matches = matchAlgorithm.matches();,if (matchAlgorithm != null ) Iterator matches = matchAlgorithm.matches();
MatchAlgorithmTest.java,Match match = (Match) matches.next();,if (matches != null ) Match match = (Match) matches.next();
MatchAlgorithmTest.java,Iterator marks = match.iterator();,if (match != null ) Iterator marks = match.iterator();
StatisticalRuleTest.java,Iterator metrics = report.metrics();,if (report != null ) Iterator metrics = report.metrics();
StatisticalRuleTest.java,Object o = metrics.next();,if (metrics != null ) Object o = metrics.next();
ConfigurationTest.java,LanguageVersionDiscoverer languageVersionDiscoverer = configuration.getLanguageVersionDiscoverer();,if (configuration != null ) LanguageVersionDiscoverer languageVersionDiscoverer = configuration.getLanguageVersionDiscoverer();
LanguageVersionTest.java,Language language = LanguageRegistry.getLanguage(sourceLanguage.getName());,if (LanguageRegistry != null ) Language language = LanguageRegistry.getLanguage(sourceLanguage.getName());
LanguageVersionTest.java,languageVersion = language.getVersion(sourceLanguage.getVersion());,if (language != null ) languageVersion = language.getVersion(sourceLanguage.getVersion());
LanguageRegistry.java,URL curLanguageModulePropertiesUrl = languageModulesProperties.nextElement();,if (languageModulesProperties != null ) URL curLanguageModulePropertiesUrl = languageModulesProperties.nextElement();
LanguageRegistry.java,Language languageModule = (Language) languageModuleImplClass.newInstance();,if (languageModuleImplClass != null ) Language languageModule = (Language) languageModuleImplClass.newInstance();
PMD.java,LanguageModule language = rule.getLanguage();,if (rule != null ) LanguageModule language = rule.getLanguage();
RuleSet.java,final LanguageVersionModule min = rule.getMinimumLanguageVersion();,if (rule != null ) final LanguageVersionModule min = rule.getMinimumLanguageVersion();
RuleSet.java,final LanguageVersionModule max = rule.getMinimumLanguageVersion();,if (rule != null ) final LanguageVersionModule max = rule.getMinimumLanguageVersion();
RuleSetFactory.java,LanguageModule language = rule.getLanguage();,if (rule != null ) LanguageModule language = rule.getLanguage();
RuleSetWriter.java,LanguageModule language = ruleReference.getOverriddenLanguage();,if (ruleReference != null ) LanguageModule language = ruleReference.getOverriddenLanguage();
RuleSetWriter.java,LanguageVersionModule minimumLanguageVersion = ruleReference.getOverriddenMinimumLanguageVersion();,if (ruleReference != null ) LanguageVersionModule minimumLanguageVersion = ruleReference.getOverriddenMinimumLanguageVersion();
RuleSetWriter.java,LanguageVersionModule maximumLanguageVersion = ruleReference.getOverriddenMaximumLanguageVersion();,if (ruleReference != null ) LanguageVersionModule maximumLanguageVersion = ruleReference.getOverriddenMaximumLanguageVersion();
SourceCodeProcessor.java,LanguageVersionModule languageVersion = ctx.getLanguageVersion();,if (ctx != null ) LanguageVersionModule languageVersion = ctx.getLanguageVersion();
SourceCodeProcessor.java,LanguageModule language = languageVersion.getLanguage();,if (languageVersion != null ) LanguageModule language = languageVersion.getLanguage();
SourceCodeProcessor.java,LanguageVersionModule languageVersion = configuration.getLanguageVersionOfFile(ctx.getSourceCodeFilename());,if (configuration != null ) LanguageVersionModule languageVersion = configuration.getLanguageVersionOfFile(ctx.getSourceCodeFilename());
LanguageRegistry.java,LanguageModule languageModule = (LanguageModule) languageModuleImplClass.newInstance();,if (languageModuleImplClass != null ) LanguageModule languageModule = (LanguageModule) languageModuleImplClass.newInstance();
LanguageVersionTest.java,LanguageModule language = LanguageRegistry.getLanguage(sourceLanguage.getName());,if (LanguageRegistry != null ) LanguageModule language = LanguageRegistry.getLanguage(sourceLanguage.getName());
RuleSetFactoryTest.java,LanguageModule language = rule.getLanguage();,if (rule != null ) LanguageModule language = rule.getLanguage();
PMD.java,Language language = rule.getLanguage();,if (rule != null ) Language language = rule.getLanguage();
RuleSet.java,final LanguageVersion min = rule.getMinimumLanguageVersion();,if (rule != null ) final LanguageVersion min = rule.getMinimumLanguageVersion();
RuleSet.java,final LanguageVersion max = rule.getMinimumLanguageVersion();,if (rule != null ) final LanguageVersion max = rule.getMinimumLanguageVersion();
RuleSetFactory.java,Language language = rule.getLanguage();,if (rule != null ) Language language = rule.getLanguage();
RuleSetWriter.java,Language language = ruleReference.getOverriddenLanguage();,if (ruleReference != null ) Language language = ruleReference.getOverriddenLanguage();
RuleSetWriter.java,LanguageVersion minimumLanguageVersion = ruleReference.getOverriddenMinimumLanguageVersion();,if (ruleReference != null ) LanguageVersion minimumLanguageVersion = ruleReference.getOverriddenMinimumLanguageVersion();
RuleSetWriter.java,LanguageVersion maximumLanguageVersion = ruleReference.getOverriddenMaximumLanguageVersion();,if (ruleReference != null ) LanguageVersion maximumLanguageVersion = ruleReference.getOverriddenMaximumLanguageVersion();
SourceCodeProcessor.java,LanguageVersion languageVersion = ctx.getLanguageVersion();,if (ctx != null ) LanguageVersion languageVersion = ctx.getLanguageVersion();
SourceCodeProcessor.java,Language language = languageVersion.getLanguage();,if (languageVersion != null ) Language language = languageVersion.getLanguage();
SourceCodeProcessor.java,LanguageVersion languageVersion = configuration.getLanguageVersionOfFile(ctx.getSourceCodeFilename());,if (configuration != null ) LanguageVersion languageVersion = configuration.getLanguageVersionOfFile(ctx.getSourceCodeFilename());
PMDParameters.java,private String language = Language.getDefaultLanguage().getTerseName();,if (Language != null ) private String language = Language.getDefaultLanguage().getTerseName();
PMDParameters.java,languageVersion = language.getLanguage().getDefaultVersion();,if (language != null ) languageVersion = language.getLanguage().getDefaultVersion();
CPPTokenizer.java,LanguageVersionHandler languageVersionHandler = LanguageVersion.CPP.getLanguageVersionHandler();,if (LanguageVersion != null ) LanguageVersionHandler languageVersionHandler = LanguageVersion.CPP.getLanguageVersionHandler();
JSPTokenizer.java,LanguageVersionHandler languageVersionHandler = Language.JSP.getDefaultVersion().getLanguageVersionHandler();,if (Language != null ) LanguageVersionHandler languageVersionHandler = Language.JSP.getDefaultVersion().getLanguageVersionHandler();
Language.java,Object obj = ruleChainVisitorClass.newInstance();,if (ruleChainVisitorClass != null ) Object obj = ruleChainVisitorClass.newInstance();
RuleSetFactoryTest.java,Language language = rule.getLanguage();,if (rule != null ) Language language = rule.getLanguage();
RuleSetTest.java,LanguageVersionHandler languageVersionHandler = Language.JAVA.getDefaultVersion().getLanguageVersionHandler();,if (Language != null ) LanguageVersionHandler languageVersionHandler = Language.JAVA.getDefaultVersion().getLanguageVersionHandler();
JavaRuleViolationTest.java,final LanguageVersionHandler languageVersionHandler = Language.JAVA.getDefaultVersion().getLanguageVersionHandler();,if (Language != null ) final LanguageVersionHandler languageVersionHandler = Language.JAVA.getDefaultVersion().getLanguageVersionHandler();
XPathRuleTest.java,LanguageVersion language = Language.JAVA.getDefaultVersion();,if (Language != null ) LanguageVersion language = Language.JAVA.getDefaultVersion();
XPathRuleTest.java,LanguageVersion language = Language.JAVA.getDefaultVersion();,if (Language != null ) LanguageVersion language = Language.JAVA.getDefaultVersion();
JspParserTest.java,LanguageVersionHandler jspLang = LanguageVersion.JSP.getLanguageVersionHandler();,if (LanguageVersion != null ) LanguageVersionHandler jspLang = LanguageVersion.JSP.getLanguageVersionHandler();
AbstractPLSQLParserTst.java,LanguageVersionHandler languageVersionHandler = Language.PLSQL.getDefaultVersion().getLanguageVersionHandler();,if (Language != null ) LanguageVersionHandler languageVersionHandler = Language.PLSQL.getDefaultVersion().getLanguageVersionHandler();
AbstractPLSQLParserTst.java,LanguageVersionHandler languageVersionHandler = Language.PLSQL.getDefaultVersion().getLanguageVersionHandler();,if (Language != null ) LanguageVersionHandler languageVersionHandler = Language.PLSQL.getDefaultVersion().getLanguageVersionHandler();
VmParserTest.java,final LanguageVersionHandler vmLang = LanguageVersion.VM.getLanguageVersionHandler();,if (LanguageVersion != null ) final LanguageVersionHandler vmLang = LanguageVersion.VM.getLanguageVersionHandler();
XmlParserTest.java,LanguageVersionHandler xmlVersionHandler = Language.XML.getDefaultVersion().getLanguageVersionHandler();,if (Language != null ) LanguageVersionHandler xmlVersionHandler = Language.XML.getDefaultVersion().getLanguageVersionHandler();
XmlParserTest.java,LanguageVersionHandler xmlVersionHandler = Language.XML.getDefaultVersion().getLanguageVersionHandler();,if (Language != null ) LanguageVersionHandler xmlVersionHandler = Language.XML.getDefaultVersion().getLanguageVersionHandler();
XmlParserTest.java,LanguageVersionHandler xmlVersionHandler = Language.XML.getDefaultVersion().getLanguageVersionHandler();,if (Language != null ) LanguageVersionHandler xmlVersionHandler = Language.XML.getDefaultVersion().getLanguageVersionHandler();
XmlParserTest.java,LanguageVersionHandler xmlVersionHandler = Language.XML.getDefaultVersion().getLanguageVersionHandler();,if (Language != null ) LanguageVersionHandler xmlVersionHandler = Language.XML.getDefaultVersion().getLanguageVersionHandler();
XmlParserTest.java,LanguageVersionHandler xmlVersionHandler = Language.XML.getDefaultVersion().getLanguageVersionHandler();,if (Language != null ) LanguageVersionHandler xmlVersionHandler = Language.XML.getDefaultVersion().getLanguageVersionHandler();
XmlParserTest.java,LanguageVersionHandler xmlVersionHandler = Language.XML.getDefaultVersion().getLanguageVersionHandler();,if (Language != null ) LanguageVersionHandler xmlVersionHandler = Language.XML.getDefaultVersion().getLanguageVersionHandler();
XmlParserTest.java,LanguageVersionHandler xmlVersionHandler = Language.XML.getDefaultVersion().getLanguageVersionHandler();,if (Language != null ) LanguageVersionHandler xmlVersionHandler = Language.XML.getDefaultVersion().getLanguageVersionHandler();
XmlParserTest.java,LanguageVersionHandler xmlVersionHandler = Language.XML.getDefaultVersion().getLanguageVersionHandler();,if (Language != null ) LanguageVersionHandler xmlVersionHandler = Language.XML.getDefaultVersion().getLanguageVersionHandler();
XmlParserTest.java,LanguageVersionHandler xmlVersionHandler = Language.XML.getDefaultVersion().getLanguageVersionHandler();,if (Language != null ) LanguageVersionHandler xmlVersionHandler = Language.XML.getDefaultVersion().getLanguageVersionHandler();
STBBaseTst.java,LanguageVersionHandler languageVersionHandler = Language.JAVA.getDefaultVersion().getLanguageVersionHandler();,if (Language != null ) LanguageVersionHandler languageVersionHandler = Language.JAVA.getDefaultVersion().getLanguageVersionHandler();
ParserTst.java,LanguageVersionHandler languageVersionHandler = Language.JAVA.getDefaultVersion().getLanguageVersionHandler();,if (Language != null ) LanguageVersionHandler languageVersionHandler = Language.JAVA.getDefaultVersion().getLanguageVersionHandler();
ParserTst.java,LanguageVersionHandler languageVersionHandler = Language.JAVA.getDefaultVersion().getLanguageVersionHandler();,if (Language != null ) LanguageVersionHandler languageVersionHandler = Language.JAVA.getDefaultVersion().getLanguageVersionHandler();
RuleTst.java,Iterator<RuleViolation> it = report.getViolationTree().iterator();,if (report != null ) Iterator<RuleViolation> it = report.getViolationTree().iterator();
CyclomaticComplexityTest.java,Iterator<RuleViolation> i = report.iterator();,if (report != null ) Iterator<RuleViolation> i = report.iterator();
CyclomaticComplexityTest.java,Iterator<RuleViolation> i = report.iterator();,if (report != null ) Iterator<RuleViolation> i = report.iterator();
CyclomaticComplexityTest.java,Iterator<RuleViolation> i = report.iterator();,if (report != null ) Iterator<RuleViolation> i = report.iterator();
ModifiedCyclomaticComplexityTest.java,Iterator<RuleViolation> i = report.iterator();,if (report != null ) Iterator<RuleViolation> i = report.iterator();
ModifiedCyclomaticComplexityTest.java,Iterator<RuleViolation> i = report.iterator();,if (report != null ) Iterator<RuleViolation> i = report.iterator();
ModifiedCyclomaticComplexityTest.java,Iterator<RuleViolation> i = report.iterator();,if (report != null ) Iterator<RuleViolation> i = report.iterator();
NPathComplexityTest.java,Iterator<RuleViolation> i = report.iterator();,if (report != null ) Iterator<RuleViolation> i = report.iterator();
NPathComplexityTest.java,RuleViolation rv = (RuleViolation) i.next();,if (i != null ) RuleViolation rv = (RuleViolation) i.next();
NPathComplexityTest.java,Iterator<RuleViolation> i = report.iterator();,if (report != null ) Iterator<RuleViolation> i = report.iterator();
StdCyclomaticComplexityTest.java,Iterator<RuleViolation> i = report.iterator();,if (report != null ) Iterator<RuleViolation> i = report.iterator();
StdCyclomaticComplexityTest.java,Iterator<RuleViolation> i = report.iterator();,if (report != null ) Iterator<RuleViolation> i = report.iterator();
StdCyclomaticComplexityTest.java,Iterator<RuleViolation> i = report.iterator();,if (report != null ) Iterator<RuleViolation> i = report.iterator();
SimpleAggregatorTst.java,boolean regressionTestMode = TestDescriptor.inRegressionTestMode();,if (TestDescriptor != null ) boolean regressionTestMode = TestDescriptor.inRegressionTestMode();
PMD.java,long startLoadRules = System.nanoTime();,if (System != null ) long startLoadRules = System.nanoTime();
RulesetsFactoryUtils.java,long endLoadRules = System.nanoTime();,if (System != null ) long endLoadRules = System.nanoTime();
ClassScope.java,Node nextSibling = getNextSibling(occurrence.getLocation().jjtGetParent());,if (getNextSibling(occurrence != null ) Node nextSibling = getNextSibling(occurrence.getLocation().jjtGetParent());
ClassTypeResolver.java,String image = node.getImage();,if (node != null ) String image = node.getImage();
ClassTypeResolver.java,String image = node.getImage();,if (node != null ) String image = node.getImage();
TypeSetTest.java,TypeSet.Resolver r = new TypeSet.ImplicitImportResolver();,if (TypeSet != null ) TypeSet.Resolver r = new TypeSet.ImplicitImportResolver();
TypeSetTest.java,TypeSet.Resolver r = new TypeSet.ImplicitImportResolver();,if (TypeSet != null ) TypeSet.Resolver r = new TypeSet.ImplicitImportResolver();
ScopeAndDeclarationFinder.java,ASTPackageDeclaration n = node.getPackageDeclaration();,if (node != null ) ASTPackageDeclaration n = node.getPackageDeclaration();
RuleSet.java,RuleSetReference ruleSetReference = new RuleSetReference(ruleSet.getFileName());,if (RuleSetReference(ruleSet != null ) RuleSetReference ruleSetReference = new RuleSetReference(ruleSet.getFileName());
RuleSet.java,long start = System.nanoTime();,if (System != null ) long start = System.nanoTime();
RuleSet.java,final LanguageVersion min = rule.getMinimumLanguageVersion();,if (rule != null ) final LanguageVersion min = rule.getMinimumLanguageVersion();
RuleSet.java,final LanguageVersion max = rule.getMinimumLanguageVersion();,if (rule != null ) final LanguageVersion max = rule.getMinimumLanguageVersion();
RuleSet.java,Iterator<Rule> iter = rules.iterator();,if (rules != null ) Iterator<Rule> iter = rules.iterator();
RuleSet.java,Rule rule = iter.next();,if (iter != null ) Rule rule = iter.next();
DataPoint.java,Double rhsScore = Double.valueOf(rhs.getScore());,if (Double != null ) Double rhsScore = Double.valueOf(rhs.getScore());
ClassScope.java,int args = occurrence.getArgumentCount();,if (occurrence != null ) int args = occurrence.getArgumentCount();
CyclomaticComplexityRule.java,Entry entry = entryStack.peek();,if (entryStack != null ) Entry entry = entryStack.peek();
CyclomaticComplexityRule.java,int childCount = node.jjtGetNumChildren();,if (node != null ) int childCount = node.jjtGetNumChildren();
CyclomaticComplexityRule.java,Entry classEntry = entryStack.pop();,if (entryStack != null ) Entry classEntry = entryStack.pop();
CyclomaticComplexityRule.java,Entry methodEntry = entryStack.pop();,if (entryStack != null ) Entry methodEntry = entryStack.pop();
CyclomaticComplexityRule.java,Entry classEntry = entryStack.peek();,if (entryStack != null ) Entry classEntry = entryStack.peek();
CyclomaticComplexityRule.java,Entry classEntry = entryStack.pop();,if (entryStack != null ) Entry classEntry = entryStack.pop();
CyclomaticComplexityRule.java,Entry constructorEntry = entryStack.pop();,if (entryStack != null ) Entry constructorEntry = entryStack.pop();
CyclomaticComplexityRule.java,Entry classEntry = entryStack.peek();,if (entryStack != null ) Entry classEntry = entryStack.peek();
JavaRuleViolation.java,Node parent = node.jjtGetParent();,if (node != null ) Node parent = node.jjtGetParent();
JavaRuleViolation.java,parent = parent.jjtGetParent();,if (parent != null ) parent = parent.jjtGetParent();
ConsecutiveAppendsShouldReuseRule.java,String image = name.getImage();,if (name != null ) String image = name.getImage();
ASTPanel.java,Node node = (Node) e.getParameter(); node != null;,if (null; != null ) Node node = (Node) e.getParameter(); node != null;
ASTPanel.java,TreePath path = new TreePath(list.toArray());,if (TreePath(list != null ) TreePath path = new TreePath(list.toArray());
SourceCodePanel.java,final SimpleNode node = (SimpleNode) e.getParameter();,if (e != null ) final SimpleNode node = (SimpleNode) e.getParameter();
AttributesSubMenu.java,Attribute attribute = (Attribute) i.next();,if (i != null ) Attribute attribute = (Attribute) i.next();
SimpleNodeTreeNodeAdapter.java,children = new ArrayList(node.jjtGetNumChildren());,if (ArrayList(node != null ) children = new ArrayList(node.jjtGetNumChildren());
MenuBuilder.java,int textLen = curClass.getEditor().getTextLength();,if (curClass != null ) int textLen = curClass.getEditor().getTextLength();
MenuBuilder.java,RuleViolation rv = (RuleViolation)i.next();,if ((RuleViolation)i != null ) RuleViolation rv = (RuleViolation)i.next();
TileExpanderTest.java,TokenSets tokenSets = TileExpanderTest.createTokenSets();,if (TileExpanderTest != null ) TokenSets tokenSets = TileExpanderTest.createTokenSets();
TileExpanderTest.java,Tile tile = (Tile)i.next();,if ((Tile)i != null ) Tile tile = (Tile)i.next();
TileExpanderTest.java,List writtenEntries = space.getWrittenEntries();,if (space != null ) List writtenEntries = space.getWrittenEntries();
TileHarvesterTest.java,TokenSets tokenSets = TileExpanderTest.createTokenSets();,if (TileExpanderTest != null ) TokenSets tokenSets = TileExpanderTest.createTokenSets();
TileHarvesterTest.java,Tile tile = (Tile)i.next();,if ((Tile)i != null ) Tile tile = (Tile)i.next();
TileHarvesterTest.java,Occurrences newOcc = tileGatherer.harvest(occ.size());,if (tileGatherer != null ) Occurrences newOcc = tileGatherer.harvest(occ.size());
TilePlanterTest.java,TokenSets tokenSets = TileExpanderTest.createTokenSets();,if (TileExpanderTest != null ) TokenSets tokenSets = TileExpanderTest.createTokenSets();
BatchBuilder.java,Tile tile = (Tile)i.next();,if ((Tile)i != null ) Tile tile = (Tile)i.next();
DCPDManager.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
DCPDManager.java,TokenEntry firstToken = (TokenEntry)i.next();,if ((TokenEntry)i != null ) TokenEntry firstToken = (TokenEntry)i.next();
DCPDManager.java,Tile tile = (Tile)i.next();,if ((Tile)i != null ) Tile tile = (Tile)i.next();
DCPDManager.java,TokenEntry tok = (TokenEntry)j.next();,if ((TokenEntry)j != null ) TokenEntry tok = (TokenEntry)j.next();
DCPDManager.java,TokenList ts = new TokenList(file.getAbsolutePath());,if (TokenList(file != null ) TokenList ts = new TokenList(file.getAbsolutePath());
DGST.java,List batches = builder.buildBatches();,if (builder != null ) List batches = builder.buildBatches();
DGST.java,List batches = builder.buildBatches();,if (builder != null ) List batches = builder.buildBatches();
DGST.java,batchCount = batches.size();,if (batches != null ) batchCount = batches.size();
DGST.java,Tile tile = (Tile)i.next();,if ((Tile)i != null ) Tile tile = (Tile)i.next();
TileExpander.java,Tile tile = (Tile)iter.next();,if ((Tile)iter != null ) Tile tile = (Tile)iter.next();
TileExpander.java,TokenEntry tok = (TokenEntry)i.next();,if ((TokenEntry)i != null ) TokenEntry tok = (TokenEntry)i.next();
TileExpander.java,Tile newTile = tileWrapper.tile.copy();,if (tileWrapper != null ) Tile newTile = tileWrapper.tile.copy();
TilePlanter.java,Batch batch = (Batch)i.next();,if ((Batch)i != null ) Batch batch = (Batch)i.next();
BasicPMDTest.java,final RuleViolation violation = iter.next();,if (iter != null ) final RuleViolation violation = iter.next();
BasicPMDTest.java,final RuleViolation violation = iter.next();,if (iter != null ) final RuleViolation violation = iter.next();
BasicPMDTest.java,final RuleViolation violation = iter.next();,if (iter != null ) final RuleViolation violation = iter.next();
EclipseUtils.java,final IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();,if (ResourcesPlugin != null ) final IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();
EclipseUtils.java,final IProjectDescription description = project.getDescription();,if (project != null ) final IProjectDescription description = project.getDescription();
EclipseUtils.java,final IProjectDescription description = project.getDescription();,if (project != null ) final IProjectDescription description = project.getDescription();
PMDCorePluginTest.java,final RuleSet ruleSet = iterator.next();,if (iterator != null ) final RuleSet ruleSet = iterator.next();
PMDCorePluginTest.java,final RuleSet ruleSet = iterator.next();,if (iterator != null ) final RuleSet ruleSet = iterator.next();
ProjectPropertiesModelTest.java,final IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();,if (PMDPlugin != null ) final IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();
ProjectPropertiesModelTest.java,RuleSet projectRuleSet = model.getProjectRuleSet();,if (model != null ) RuleSet projectRuleSet = model.getProjectRuleSet();
ProjectPropertiesModelTest.java,projectRuleSet = model.getProjectRuleSet();,if (model != null ) projectRuleSet = model.getProjectRuleSet();
ProjectPropertiesModelTest.java,final IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();,if (PMDPlugin != null ) final IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();
ProjectPropertiesModelTest.java,final IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();,if (PMDPlugin != null ) final IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();
ProjectPropertiesModelTest.java,final IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();,if (PMDPlugin != null ) final IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();
ProjectPropertiesModelTest.java,final IPreferencesManager pmgr = PMDPlugin.getDefault().getPreferencesManager();,if (PMDPlugin != null ) final IPreferencesManager pmgr = PMDPlugin.getDefault().getPreferencesManager();
ProjectPropertiesModelTest.java,final IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();,if (PMDPlugin != null ) final IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();
ProjectPropertiesModelTest.java,final RuleSet projectRuleSet = model.getProjectRuleSet();,if (model != null ) final RuleSet projectRuleSet = model.getProjectRuleSet();
ProjectPropertiesModelTest.java,IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();,if (PMDPlugin != null ) IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();
ProjectPropertiesModelTest.java,RuleSet projectRuleSet = model.getProjectRuleSet();,if (model != null ) RuleSet projectRuleSet = model.getProjectRuleSet();
ProjectPropertiesModelTest.java,IPreferencesManager pmgr = PMDPlugin.getDefault().getPreferencesManager();,if (PMDPlugin != null ) IPreferencesManager pmgr = PMDPlugin.getDefault().getPreferencesManager();
ProjectPropertiesModelTest.java,projectRuleSet = model.getProjectRuleSet();,if (model != null ) projectRuleSet = model.getProjectRuleSet();
ProjectPropertiesModelTest.java,final IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();,if (PMDPlugin != null ) final IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();
ProjectPropertiesModelTest.java,RuleSet projectRuleSet = model.getProjectRuleSet();,if (model != null ) RuleSet projectRuleSet = model.getProjectRuleSet();
ProjectPropertiesModelTest.java,projectRuleSet = model.getProjectRuleSet();,if (model != null ) projectRuleSet = model.getProjectRuleSet();
ProjectPropertiesModelTest.java,final IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();,if (PMDPlugin != null ) final IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();
ProjectPropertiesModelTest.java,final IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();,if (PMDPlugin != null ) final IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();
ProjectPropertiesModelTest.java,final IWorkingSet w = model.getProjectWorkingSet();,if (model != null ) final IWorkingSet w = model.getProjectWorkingSet();
ProjectPropertiesModelTest.java,final IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();,if (PMDPlugin != null ) final IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();
ProjectPropertiesModelTest.java,final IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();,if (PMDPlugin != null ) final IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();
ProjectPropertiesModelTest.java,final IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();,if (PMDPlugin != null ) final IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();
ProjectPropertiesModelTest.java,final IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();,if (PMDPlugin != null ) final IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();
ProjectPropertiesModelTest.java,final boolean b = model.isRuleSetStoredInProject();,if (model != null ) final boolean b = model.isRuleSetStoredInProject();
ProjectPropertiesModelTest.java,final IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();,if (PMDPlugin != null ) final IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();
ProjectPropertiesModelTest.java,final boolean b = model.isRuleSetStoredInProject();,if (model != null ) final boolean b = model.isRuleSetStoredInProject();
UpdateProjectPropertiesCmdTest.java,final IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();,if (PMDPlugin != null ) final IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();
UpdateProjectPropertiesCmdTest.java,RuleSet projectRuleSet = model.getProjectRuleSet();,if (model != null ) RuleSet projectRuleSet = model.getProjectRuleSet();
UpdateProjectPropertiesCmdTest.java,projectRuleSet = model.getProjectRuleSet();,if (model != null ) projectRuleSet = model.getProjectRuleSet();
AbstractProcessableCommand.java,strategy = (CommandProcessorStrategy) strategyClass.newInstance();,if (strategyClass != null ) strategy = (CommandProcessorStrategy) strategyClass.newInstance();
DefaultCommandProcessorStrategy.java,aProcessor = aCommand.getPreferredCommandProcessor();,if (aCommand != null ) aProcessor = aCommand.getPreferredCommandProcessor();
DefaultCommandProcessorStrategy.java,final String processorClassName = registeredCommandProcessors.get(aCommand.getName());,if (registeredCommandProcessors != null ) final String processorClassName = registeredCommandProcessors.get(aCommand.getName());
DefaultCommandProcessorStrategy.java,aProcessor = (CommandProcessor) clazz.newInstance();,if (clazz != null ) aProcessor = (CommandProcessor) clazz.newInstance();
DefaultCommandProcessorStrategy.java,Enumeration<String> e = bundle.getKeys();,if (bundle != null ) Enumeration<String> e = bundle.getKeys();
Timer.java,topStart = System.currentTimeMillis();,if (System != null ) topStart = System.currentTimeMillis();
Timer.java,topStop = System.currentTimeMillis();,if (System != null ) topStop = System.currentTimeMillis();
RuleSetsExtensionProcessor.java,final IExtensionRegistry registry = Platform.getExtensionRegistry();,if (Platform != null ) final IExtensionRegistry registry = Platform.getExtensionRegistry();
Rule.java,int hashCode = ref.hashCode();,if (ref != null ) int hashCode = ref.hashCode();
FileChangeReviewer.java,IResource rsc = delta.getResource();,if (delta != null ) IResource rsc = delta.getResource();
FileChangeReviewer.java,int flags = delta.getFlags();,if (delta != null ) int flags = delta.getFlags();
PMDPlugin.java,IPreferences preferences = getDefault().loadPreferences();,if (getDefault() != null ) IPreferences preferences = getDefault().loadPreferences();
PMDPlugin.java,pluginFolder = new File(url.getPath());,if (File(url != null ) pluginFolder = new File(url.getPath());
PMDPlugin.java,IWorkspace workspace = ResourcesPlugin.getWorkspace();,if (ResourcesPlugin != null ) IWorkspace workspace = ResourcesPlugin.getWorkspace();
PMDPlugin.java,"RollingFileAppender appender = new RollingFileAppender(layout, preferences.getLogFileName());","if (preferences != null ) RollingFileAppender appender = new RollingFileAppender(layout, preferences.getLogFileName());"
PMDPlugin.java,Iterator<RuleSet> iterator = factory.getRegisteredRuleSets();,if (factory != null ) Iterator<RuleSet> iterator = factory.getRegisteredRuleSets();
PMDPlugin.java,ruleSet = iterator.next();,if (iterator != null ) ruleSet = iterator.next();
PMDPlugin.java,IDecoratorManager mgr = getWorkbench().getDecoratorManager();,if (getWorkbench() != null ) IDecoratorManager mgr = getWorkbench().getDecoratorManager();
PMDPlugin.java,IResource parent = file.getParent();,if (file != null ) IResource parent = file.getParent();
PMDPlugin.java,parent = parent.getParent();,if (parent != null ) parent = parent.getParent();
PMDPlugin.java,kids = folder.members();,if (folder != null ) kids = folder.members();
PMDPlugin.java,kids = project.members();,if (project != null ) kids = project.members();
UISettings.java,IPreferences preferences = preferencesManager.loadPreferences();,if (preferencesManager != null ) IPreferences preferences = preferencesManager.loadPreferences();
UISettings.java,RulePriority[] priorities = RulePriority.values();,if (RulePriority != null ) RulePriority[] priorities = RulePriority.values();
UISettings.java,String fileDir = PMDPlugin.getPluginFolder().getAbsolutePath();,if (PMDPlugin != null ) String fileDir = PMDPlugin.getPluginFolder().getAbsolutePath();
UISettings.java,final StringTable stringTable = PMDPlugin.getDefault().getStringTable();,if (PMDPlugin != null ) final StringTable stringTable = PMDPlugin.getDefault().getStringTable();
MarkerUtil.java,IProject project = projectFor(marker.getResource());,if (projectFor(marker != null ) IProject project = projectFor(marker.getResource());
PMDBuilder.java,IProject currentProject = this.getProject();,if (this != null ) IProject currentProject = this.getProject();
PMDNature.java,IProjectDescription description = project.getDescription();,if (project != null ) IProjectDescription description = project.getDescription();
PMDNature.java,ICommand[] commands = description.getBuildSpec();,if (description != null ) ICommand[] commands = description.getBuildSpec();
PMDNature.java,ICommand pmdBuilderCommand = description.newCommand();,if (description != null ) ICommand pmdBuilderCommand = description.newCommand();
PMDNature.java,IProjectDescription description = project.getDescription();,if (project != null ) IProjectDescription description = project.getDescription();
PMDNature.java,ICommand[] commands = description.getBuildSpec();,if (description != null ) ICommand[] commands = description.getBuildSpec();
PMDNature.java,final IProjectDescription description = project.getDescription();,if (project != null ) final IProjectDescription description = project.getDescription();
PMDNature.java,final IProjectDescription description = project.getDescription();,if (project != null ) final IProjectDescription description = project.getDescription();
BaseVisitor.java,LanguageVersion languageVersion = languageDiscoverer.getDefaultLanguageVersionForFile(file.getName());,if (languageDiscoverer != null ) LanguageVersion languageVersion = languageDiscoverer.getDefaultLanguageVersionForFile(file.getName());
BaseVisitor.java,languageVersion = PMDPlugin.javaVersionFor(file.getProject());,if (PMDPlugin != null ) languageVersion = PMDPlugin.javaVersionFor(file.getProject());
BaseVisitor.java,final File sourceCodeFile = file.getRawLocation().toFile();,if (file != null ) final File sourceCodeFile = file.getRawLocation().toFile();
BaseVisitor.java,pmdDuration += timer.getDuration();,if (timer != null ) pmdDuration += timer.getDuration();
BaseVisitor.java,IWorkingSet workingSet = projectProperties.getProjectWorkingSet();,if (projectProperties != null ) IWorkingSet workingSet = projectProperties.getProjectWorkingSet();
BaseVisitor.java,Iterator<RuleViolation> iter = context.getReport().iterator();,if (context != null ) Iterator<RuleViolation> iter = context.getReport().iterator();
BaseVisitor.java,RuleViolation violation = iter.next();,if (iter != null ) RuleViolation violation = iter.next();
BaseVisitor.java,rule = violation.getRule();,if (violation != null ) rule = violation.getRule();
BaseVisitor.java,review.ruleName = rule.getName();,if (rule != null ) review.ruleName = rule.getName();
BaseVisitor.java,review.lineNumber = violation.getBeginLine();,if (violation != null ) review.lineNumber = violation.getBeginLine();
BaseVisitor.java,String line = reader.readLine();,if (reader != null ) String line = reader.readLine();
BaseVisitor.java,line = line.trim();,if (line != null ) line = line.trim();
BaseVisitor.java,review.ruleName = pendingReviews.pop();,if (pendingReviews != null ) review.ruleName = pendingReviews.pop();
BaseVisitor.java,Rule rule = violation.getRule();,if (violation != null ) Rule rule = violation.getRule();
CPDVisitor.java,File ioFile = file.getLocation().toFile();,if (file != null ) File ioFile = file.getLocation().toFile();
DetectCutAndPasteCmd.java,final File file = fileIterator.next();,if (fileIterator != null ) final File file = fileIterator.next();
DetectCutAndPasteCmd.java,contentsStream = new ByteArrayInputStream(reportString.getBytes());,if (ByteArrayInputStream(reportString != null ) contentsStream = new ByteArrayInputStream(reportString.getBytes());
JavaProjectClassLoader.java,IPath outputLocation = classpathEntry.getOutputLocation();,if (classpathEntry != null ) IPath outputLocation = classpathEntry.getOutputLocation();
RenderReportsCmd.java,reportString = writer.toString();,if (writer != null ) reportString = writer.toString();
RenderReportsCmd.java,InputStream contentsStream = new ByteArrayInputStream(reportString.getBytes());,if (ByteArrayInputStream(reportString != null ) InputStream contentsStream = new ByteArrayInputStream(reportString.getBytes());
RenderReportsCmd.java,String reportName = entry.getKey();,if (entry != null ) String reportName = entry.getKey();
RenderReportsCmd.java,Renderer renderer = entry.getValue();,if (entry != null ) Renderer renderer = entry.getValue();
RenderReportsCmd.java,IPackageDeclaration[] packages = unit.getPackageDeclarations();,if (unit != null ) IPackageDeclaration[] packages = unit.getPackageDeclarations();
RenderReportsCmd.java,IType[] types = unit.getAllTypes();,if (unit != null ) IType[] types = unit.getAllTypes();
ReviewCodeCmd.java,String fault = rule.dysfunctionReason();,if (rule != null ) String fault = rule.dysfunctionReason();
ReviewCodeCmd.java,final IWorkspace workspace = ResourcesPlugin.getWorkspace();,if (ResourcesPlugin != null ) final IWorkspace workspace = ResourcesPlugin.getWorkspace();
ReviewCodeCmd.java,final IWorkspace workspace = ResourcesPlugin.getWorkspace();,if (ResourcesPlugin != null ) final IWorkspace workspace = ResourcesPlugin.getWorkspace();
ReviewCodeCmd.java,final IResourceRuleFactory ruleFactory = workspace.getRuleFactory();,if (workspace != null ) final IResourceRuleFactory ruleFactory = workspace.getRuleFactory();
ReviewCodeCmd.java,final IResource resource = (IResource) i.next();,if (i != null ) final IResource resource = (IResource) i.next();
ReviewCodeCmd.java,IProject project = resource.getProject();,if (resource != null ) IProject project = resource.getProject();
ReviewCodeCmd.java,final IProject project = resource.getProject();,if (resource != null ) final IProject project = resource.getProject();
ReviewCodeCmd.java,final RuleSet ruleSet = rulesetFrom(resource);	//properties.getProjectRuleSet();,if (//properties != null ) final RuleSet ruleSet = rulesetFrom(resource);	//properties.getProjectRuleSet();
ReviewCodeCmd.java,ruleCount = ruleSet.getRules().size();,if (ruleSet != null ) ruleCount = ruleSet.getRules().size();
ReviewCodeCmd.java,fileCount += visitor.getProcessedFilesCount();,if (visitor != null ) fileCount += visitor.getProcessedFilesCount();
ReviewCodeCmd.java,pmdDuration += visitor.getActualPmdDuration();,if (visitor != null ) pmdDuration += visitor.getActualPmdDuration();
ReviewCodeCmd.java,final IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();,if (ResourcesPlugin != null ) final IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();
ReviewCodeCmd.java,sourceContainer = root.getFolder(entrie.getPath());,if (root != null ) sourceContainer = root.getFolder(entrie.getPath());
ReviewCodeCmd.java,final RuleSet ruleSet = properties.getProjectRuleSet();,if (properties != null ) final RuleSet ruleSet = properties.getProjectRuleSet();
ReviewCodeCmd.java,Set<String> inactiveRuleNames = preferences.getInactiveRuleNames();,if (preferences != null ) Set<String> inactiveRuleNames = preferences.getInactiveRuleNames();
ReviewCodeCmd.java,IResource resource = resourceDelta.getResource();,if (resourceDelta != null ) IResource resource = resourceDelta.getResource();
ReviewCodeCmd.java,final IProject project = resource.getProject();,if (resource != null ) final IProject project = resource.getProject();
ReviewCodeCmd.java,IResource resource = resourceDelta.getResource();,if (resourceDelta != null ) IResource resource = resourceDelta.getResource();
ReviewCodeCmd.java,final IProject project = resource.getProject();,if (resource != null ) final IProject project = resource.getProject();
ReviewCodeCmd.java,RuleSet ruleSet = rulesetFromResourceDelta();	//properties.getProjectRuleSet();,if (//properties != null ) RuleSet ruleSet = rulesetFromResourceDelta();	//properties.getProjectRuleSet();
ReviewCodeCmd.java,ruleCount = ruleSet.getRules().size();,if (ruleSet != null ) ruleCount = ruleSet.getRules().size();
ReviewCodeCmd.java,fileCount += visitor.getProcessedFilesCount();,if (visitor != null ) fileCount += visitor.getProcessedFilesCount();
ReviewCodeCmd.java,pmdDuration += visitor.getActualPmdDuration();,if (visitor != null ) pmdDuration += visitor.getActualPmdDuration();
ReviewCodeCmd.java,currentFile = file.getName();,if (file != null ) currentFile = file.getName();
ReviewCodeCmd.java,int count = markersByFile.size();,if (markersByFile != null ) int count = markersByFile.size();
ReviewCodeCmd.java,final IWorkbench workbench = PlatformUI.getWorkbench();,if (PlatformUI != null ) final IWorkbench workbench = PlatformUI.getWorkbench();
ReviewCodeCmd.java,final IPerspectiveRegistry reg = workbench.getPerspectiveRegistry();,if (workbench != null ) final IPerspectiveRegistry reg = workbench.getPerspectiveRegistry();
ReviewCodeCmd.java,final IWorkbenchWindow window = workbench.getActiveWorkbenchWindow();,if (workbench != null ) final IWorkbenchWindow window = workbench.getActiveWorkbenchWindow();
ReviewResourceForRuleCommand.java,File sourceCodeFile = file.getFullPath().toFile();,if (file != null ) File sourceCodeFile = file.getFullPath().toFile();
PreferenceUIStore.java,IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();,if (ResourcesPlugin != null ) IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();
PreferenceUIStore.java,IPath path = root.getLocation();,if (root != null ) IPath path = root.getLocation();
PreferencesImpl.java,IRuleSetManager ruleSetManager = PMDPlugin.getDefault().getRuleSetManager();,if (PMDPlugin != null ) IRuleSetManager ruleSetManager = PMDPlugin.getDefault().getRuleSetManager();
PreferencesManagerImpl.java,private IPreferenceStore    storePreferencesStore = PMDPlugin.getDefault().getPreferenceStore();,if (PMDPlugin != null ) private IPreferenceStore    storePreferencesStore = PMDPlugin.getDefault().getPreferenceStore();
PreferencesManagerImpl.java,IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();,if (ResourcesPlugin != null ) IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();
PreferencesManagerImpl.java,IPath path = root.getLocation();,if (root != null ) IPath path = root.getLocation();
PreferencesManagerImpl.java,String key = (String)entry.getKey();,if ((String)entry != null ) String key = (String)entry.getKey();
PreferencesManagerImpl.java,PriorityDescriptor desc = defaultDescriptorFor(entry.getKey());,if (defaultDescriptorFor(entry != null ) PriorityDescriptor desc = defaultDescriptorFor(entry.getKey());
PreferencesManagerImpl.java,String storeKey = StoreKeysByPriority.get(entry.getKey());,if (StoreKeysByPriority != null ) String storeKey = StoreKeysByPriority.get(entry.getKey());
PreferencesManagerImpl.java,String name = values[i].trim();,if (values[i] != null ) String name = values[i].trim();
PreferencesManagerImpl.java,PriorityDescriptor desc = preferences.getPriorityDescriptor(entry.getKey());,if (preferences != null ) PriorityDescriptor desc = preferences.getPriorityDescriptor(entry.getKey());
PreferencesManagerImpl.java,File ruleSetFile = new File(ruleSetLocation.toOSString());,if (File(ruleSetLocation != null ) File ruleSetFile = new File(ruleSetLocation.toOSString());
PreferencesManagerImpl.java,preferedRuleSet = factory.createRuleSet(ruleSetLocation.toOSString());,if (factory != null ) preferedRuleSet = factory.createRuleSet(ruleSetLocation.toOSString());
PreferencesManagerImpl.java,IRuleSetManager ruleSetManager = PMDPlugin.getDefault().getRuleSetManager();,if (PMDPlugin != null ) IRuleSetManager ruleSetManager = PMDPlugin.getDefault().getRuleSetManager();
PreferencesManagerImpl.java,RuleSet projectRuleSet = properties.getProjectRuleSet();,if (properties != null ) RuleSet projectRuleSet = properties.getProjectRuleSet();
PreferencesManagerImpl.java,PMDPlugin plugin = PMDPlugin.getDefault();,if (PMDPlugin != null ) PMDPlugin plugin = PMDPlugin.getDefault();
PreferencesManagerImpl.java,out = new FileOutputStream(ruleSetLocation.toOSString());,if (FileOutputStream(ruleSetLocation != null ) out = new FileOutputStream(ruleSetLocation.toOSString());
PreferencesManagerImpl.java,IRuleSetWriter writer = plugin.getRuleSetWriter();,if (plugin != null ) IRuleSetWriter writer = plugin.getRuleSetWriter();
ProjectPropertiesImpl.java,String pathString = path.toOSString();,if (path != null ) String pathString = path.toOSString();
ProjectPropertiesImpl.java,String pathString = path.toOSString();,if (path != null ) String pathString = path.toOSString();
ProjectPropertiesImpl.java,IWorkspaceRoot workspaceRoot = project.getWorkspace().getRoot();,if (project != null ) IWorkspaceRoot workspaceRoot = project.getWorkspace().getRoot();
ProjectPropertiesImpl.java,boolean exists = file.exists() && file.isAccessible();,if (file != null ) boolean exists = file.exists() && file.isAccessible();
ProjectPropertiesImpl.java,IRuleSetWriter writer = PMDPlugin.getDefault().getRuleSetWriter();,if (PMDPlugin != null ) IRuleSetWriter writer = PMDPlugin.getDefault().getRuleSetWriter();
ProjectPropertiesImpl.java,bais = new ByteArrayInputStream(baos.toByteArray());,if (ByteArrayInputStream(baos != null ) bais = new ByteArrayInputStream(baos.toByteArray());
ProjectPropertiesManagerImpl.java,final File ruleSetFile = projectProperties.getResolvedRuleSetFile();,if (projectProperties != null ) final File ruleSetFile = projectProperties.getResolvedRuleSetFile();
ProjectPropertiesManagerImpl.java,reader = new InputStreamReader(propertiesFile.getContents());,if (InputStreamReader(propertiesFile != null ) reader = new InputStreamReader(propertiesFile.getContents());
ProjectPropertiesManagerImpl.java,final IWorkingSetManager workingSetManager = PlatformUI.getWorkbench().getWorkingSetManager();,if (PlatformUI != null ) final IWorkingSetManager workingSetManager = PlatformUI.getWorkbench().getWorkingSetManager();
ProjectPropertiesManagerImpl.java,final Mapping mapping = new Mapping(getClass().getClassLoader());,if (Mapping(getClass() != null ) final Mapping mapping = new Mapping(getClass().getClassLoader());
ProjectPropertiesManagerImpl.java,final RuleSet ruleSet = projectProperties.getProjectRuleSet();,if (projectProperties != null ) final RuleSet ruleSet = projectProperties.getProjectRuleSet();
ProjectPropertiesManagerImpl.java,final RuleSet projectRuleSet = projectProperties.getProjectRuleSet();,if (projectProperties != null ) final RuleSet projectRuleSet = projectProperties.getProjectRuleSet();
ProjectPropertiesManagerImpl.java,final Rule pluginRule = pluginRuleSet.getRuleByName(projectRule.getName());,if (pluginRuleSet != null ) final Rule pluginRule = pluginRuleSet.getRuleByName(projectRule.getName());
ProjectPropertiesManagerImpl.java,final Rule pluginRule = pluginRuleSet.getRuleByName(projectRule.getName());,if (pluginRuleSet != null ) final Rule pluginRule = pluginRuleSet.getRuleByName(projectRule.getName());
AstWriterImpl.java,Document doc = compilationUnit.getAsDocument();,if (compilationUnit != null ) Document doc = compilationUnit.getAsDocument();
RuleSearchPage.java,Language deflt = Language.getDefaultLanguage();,if (Language != null ) Language deflt = Language.getDefaultLanguage();
IndexedString.java,int deltaLength = other.string.length() - string.length();,if (string != null ) int deltaLength = other.string.length() - string.length();
PageBuilder.java,Display display = Display.getCurrent();,if (Display != null ) Display display = Display.getCurrent();
PageBuilder.java,SyntaxData syntax = SyntaxManager.getSyntaxData(language.getTerseName());,if (SyntaxManager != null ) SyntaxData syntax = SyntaxManager.getSyntaxData(language.getTerseName());
PageBuilder.java,int length = buffer.length();,if (buffer != null ) int length = buffer.length();
PageBuilder.java,int length = buffer.length();,if (buffer != null ) int length = buffer.length();
PageBuilder.java,int length = buffer.length();,if (buffer != null ) int length = buffer.length();
PageBuilder.java,span = entry.getKey();,if (entry != null ) span = entry.getKey();
PageBuilder.java,String text = buffer.toString();,if (buffer != null ) String text = buffer.toString();
RuleLabelDecorator.java,"LabelProviderChangedEvent lpce = new LabelProviderChangedEvent(this, resources.toArray());","if (resources != null ) LabelProviderChangedEvent lpce = new LabelProviderChangedEvent(this, resources.toArray());"
RuleLabelDecorator.java,overlaysByPriority = UISettings.markerImgDescriptorsByPriority();,if (UISettings != null ) overlaysByPriority = UISettings.markerImgDescriptorsByPriority();
RuleLabelDecorator.java,Integer first = range.iterator().next();,if (range != null ) Integer first = range.iterator().next();
ShapePainter.java,ImageData data = image.getImageData();,if (image != null ) ImageData data = image.getImageData();
ShapePicker.java,boolean state = super.forceFocus();,if (super != null ) boolean state = super.forceFocus();
CPDCheckProjectAction.java,final ISelection sel = site.getSelectionProvider().getSelection();,if (site != null ) final ISelection sel = site.getSelectionProvider().getSelection();
CPDCheckProjectAction.java,final Shell shell = site.getShell();,if (site != null ) final Shell shell = site.getShell();
CPDCheckProjectAction.java,final String selectedLanguage = dialog.getSelectedLanguage();,if (dialog != null ) final String selectedLanguage = dialog.getSelectedLanguage();
CPDCheckProjectAction.java,final int tilesize = dialog.getTileSize();,if (dialog != null ) final int tilesize = dialog.getTileSize();
CPDCheckProjectAction.java,final boolean createReport = dialog.isCreateReportSelected();,if (dialog != null ) final boolean createReport = dialog.isCreateReportSelected();
CPDCheckProjectAction.java,final Renderer selectedRenderer = this.createRenderer(dialog.getSelectedFormat());,if (this != null ) final Renderer selectedRenderer = this.createRenderer(dialog.getSelectedFormat());
CPDCheckProjectAction.java,final String fileName = this.createFileName(dialog.getSelectedFormat());,if (this != null ) final String fileName = this.createFileName(dialog.getSelectedFormat());
CPDCheckProjectAction.java,final IWorkbenchPage workbenchPage = targetPartSite().getPage();,if (targetPartSite() != null ) final IWorkbenchPage workbenchPage = targetPartSite().getPage();
ClearReviewsAction.java,String origLine = reader.readLine();,if (reader != null ) String origLine = reader.readLine();
ClearReviewsAction.java,String line = origLine.trim();,if (origLine != null ) String line = origLine.trim();
GenerateReportAction.java,List<Renderer> renderers = ReportManager.instance.activeRenderers();,if (ReportManager != null ) List<Renderer> renderers = ReportManager.instance.activeRenderers();
GenerateReportAction.java,String issue = renderer.dysfunctionReason();,if (renderer != null ) String issue = renderer.dysfunctionReason();
GenerateReportAction.java,Object object = selection.getFirstElement();,if (selection != null ) Object object = selection.getFirstElement();
PMDGenerateASTAction.java,ASTCompilationUnit compilationUnit = parser.CompilationUnit();,if (parser != null ) ASTCompilationUnit compilationUnit = parser.CompilationUnit();
PMDGenerateASTAction.java,IAstWriter astWriter = PMDPlugin.getDefault().getAstWriter();,if (PMDPlugin != null ) IAstWriter astWriter = PMDPlugin.getDefault().getAstWriter();
PMDGenerateASTAction.java,astInputStream = new ByteArrayInputStream(byteArrayOutputStream.toByteArray());,if (ByteArrayInputStream(byteArrayOutputStream != null ) astInputStream = new ByteArrayInputStream(byteArrayOutputStream.toByteArray());
PMDGenerateASTAction.java,IContainer parent = file.getParent();,if (file != null ) IContainer parent = file.getParent();
PMDGenerateASTAction.java,String name = file.getName();,if (file != null ) String name = file.getName();
PMDRemoveMarkersAction.java,final IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();,if (ResourcesPlugin != null ) final IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();
PMDRemoveMarkersAction.java,final IResource resource = record.getResource();,if (record != null ) final IResource resource = record.getResource();
ReviewCodeHandler.java,fWindow= PlatformUI.getWorkbench().getActiveWorkbenchWindow();,if (PlatformUI != null ) fWindow= PlatformUI.getWorkbench().getActiveWorkbenchWindow();
ReviewCodeHandler.java,List resources = new ArrayList(structuredSelection.size());,if (ArrayList(structuredSelection != null ) List resources = new ArrayList(structuredSelection.size());
ReviewCodeHandler.java,IWorkbenchPart workbenchPart= window.getPartService().getActivePart();,if (window != null ) IWorkbenchPart workbenchPart= window.getPartService().getActivePart();
ReviewCodeHandler.java,IEditorInput input= editorPart.getEditorInput();,if (editorPart != null ) IEditorInput input= editorPart.getEditorInput();
RuleSetUtil.java,Collection<Rule> rules = ruleSet.getRules();,if (ruleSet != null ) Collection<Rule> rules = ruleSet.getRules();
RuleSetUtil.java,Collection<Rule> ruleCopy = new ArrayList<Rule>(rules.size());,if (ArrayList<Rule>(rules != null ) Collection<Rule> ruleCopy = new ArrayList<Rule>(rules.size());
RuleSetUtil.java,Collection<Rule> rules = ruleSet.getRules();,if (ruleSet != null ) Collection<Rule> rules = ruleSet.getRules();
RuleSetUtil.java,Collection<Rule> ruleCopy = new ArrayList<Rule>(rules.size());,if (ArrayList<Rule>(rules != null ) Collection<Rule> ruleCopy = new ArrayList<Rule>(rules.size());
ShowDataflowAction.java,this.workbenchPage = targetPart.getSite().getPage();,if (targetPart != null ) this.workbenchPage = targetPart.getSite().getPage();
CPDCheckDialog.java,this.selectedLanguage = languageCombo.getText();,if (languageCombo != null ) this.selectedLanguage = languageCombo.getText();
CPDCheckDialog.java,createReport = createReportCheckbox.getSelection();,if (createReportCheckbox != null ) createReport = createReportCheckbox.getSelection();
CPDCheckDialog.java,createReport = createReportCheckbox.getSelection();,if (createReportCheckbox != null ) createReport = createReportCheckbox.getSelection();
CPDCheckDialog.java,selectedFormat = formatCombo.getSelectionIndex();,if (formatCombo != null ) selectedFormat = formatCombo.getSelectionIndex();
CPDCheckDialog.java,selectedFormat = formatCombo.getSelectionIndex();,if (formatCombo != null ) selectedFormat = formatCombo.getSelectionIndex();
NewPropertyDialog.java,int selectionIdx = combo.getSelectionIndex();,if (combo != null ) int selectionIdx = combo.getSelectionIndex();
NewPropertyDialog.java,String name = nameField.getText().trim();,if (nameField != null ) String name = nameField.getText().trim();
NewPropertyDialog.java,String label = labelField.getText().trim();,if (labelField != null ) String label = labelField.getText().trim();
StyleExtractor.java,int length = lineText.length();,if (lineText != null ) int length = lineText.length();
StyleExtractor.java,int separatorLength = lineSeparator.length();,if (lineSeparator != null ) int separatorLength = lineSeparator.length();
StyleExtractor.java,int lineLength = line.length();,if (line != null ) int lineLength = line.length();
StyleExtractor.java,"int mlIndex = getBeginsInsideComment(lineOffset, lineText.length());","if (lineText != null ) int mlIndex = getBeginsInsideComment(lineOffset, lineText.length());"
StyleExtractor.java,endComment += syntaxData.getMultiLineCommentEnd().length();,if (syntaxData != null ) endComment += syntaxData.getMultiLineCommentEnd().length();
StyleExtractor.java,endString += syntaxData.stringEnd.length();,if (syntaxData != null ) endString += syntaxData.stringEnd.length();
FilterHolder.java,int valueCount = values.size();,if (values != null ) int valueCount = values.size();
FilterPreferencesPage.java,RuleSet ruleSet = plugin.getPreferencesManager().getRuleSet();,if (plugin != null ) RuleSet ruleSet = plugin.getPreferencesManager().getRuleSet();
FilterPreferencesPage.java,FilterHolder fh = (FilterHolder)ti.getData();,if ((FilterHolder)ti != null ) FilterHolder fh = (FilterHolder)ti.getData();
FilterPreferencesPage.java,Table table = tableViewer.getTable();,if (tableViewer != null ) Table table = tableViewer.getTable();
FilterPreferencesPage.java,TableColumn[] columns = table.getColumns();,if (table != null ) TableColumn[] columns = table.getColumns();
FilterPreferencesPage.java,IStructuredSelection selection = (IStructuredSelection)tableViewer.getSelection();,if ((IStructuredSelection)tableViewer != null ) IStructuredSelection selection = (IStructuredSelection)tableViewer.getSelection();
FilterPreferencesPage.java,Set<String> activeOnes = preferences.activeExclusionPatterns();,if (preferences != null ) Set<String> activeOnes = preferences.activeExclusionPatterns();
FilterPreferencesPage.java,FilterHolder holder = (FilterHolder)item.getData();,if ((FilterHolder)item != null ) FilterHolder holder = (FilterHolder)item.getData();
FilterPreferencesPage.java,TableItem[] items = tableViewer.getTable().getItems();,if (tableViewer != null ) TableItem[] items = tableViewer.getTable().getItems();
FilterPreferencesPage.java,IStructuredSelection sel = (IStructuredSelection)tableViewer.getSelection();,if ((IStructuredSelection)tableViewer != null ) IStructuredSelection sel = (IStructuredSelection)tableViewer.getSelection();
FilterPreferencesPage.java,Object[] selections = sel.toArray();,if (sel != null ) Object[] selections = sel.toArray();
FilterPreferencesPage.java,IPreferencesManager ipMgr = plugin.getPreferencesManager();,if (plugin != null ) IPreferencesManager ipMgr = plugin.getPreferencesManager();
FilterPreferencesPage.java,RuleSet ruleSet = ipMgr.getRuleSet();,if (ipMgr != null ) RuleSet ruleSet = ipMgr.getRuleSet();
FilterPreferencesPage.java,boolean hasSelections = !selectedFilters().isEmpty();,if (!selectedFilters() != null ) boolean hasSelections = !selectedFilters().isEmpty();
FileRecord.java,final IMarker marker = markerIterator.next();,if (markerIterator != null ) final IMarker marker = markerIterator.next();
FileRecord.java,String trimmed = lines.nextToken().trim();,if (lines != null ) String trimmed = lines.nextToken().trim();
FileRecord.java,trimmed = lines.nextToken().trim();,if (lines != null ) trimmed = lines.nextToken().trim();
FileRecord.java,trimmed = lines.nextToken().trim();,if (lines != null ) trimmed = lines.nextToken().trim();
FileRecord.java,numberOfMethods = methods.size();,if (methods != null ) numberOfMethods = methods.size();
MarkerRecord.java,final MarkerRecord marker = (MarkerRecord) markerIterator.next();,if (markerIterator != null ) final MarkerRecord marker = (MarkerRecord) markerIterator.next();
PackageRecord.java,resource = packageFragment.getCorrespondingResource();,if (packageFragment != null ) resource = packageFragment.getCorrespondingResource();
PackageRecord.java,ICompilationUnit[] javaUnits = packageFragment.getCompilationUnits();,if (packageFragment != null ) ICompilationUnit[] javaUnits = packageFragment.getCompilationUnits();
PackageRecord.java,IResource javaResource = javaUnit.getCorrespondingResource();,if (javaUnit != null ) IResource javaResource = javaUnit.getCorrespondingResource();
PackageRecord.java,String name = packageFragment.getElementName();,if (packageFragment != null ) String name = packageFragment.getElementName();
PackageRecord.java,number += element.getLOC();,if (element != null ) number += element.getLOC();
PackageRecord.java,number += element.getNumberOfMethods();,if (element != null ) number += element.getNumberOfMethods();
ProjectRecord.java,fragments = root.getChildren();,if (root != null ) fragments = root.getChildren();
ProjectRecord.java,IJavaElement javaMember = JavaCore.create(resource.getParent());,if (JavaCore != null ) IJavaElement javaMember = JavaCore.create(resource.getParent());
ProjectRecord.java,final IJavaElement element = JavaCore.create(resource.getParent());,if (JavaCore != null ) final IJavaElement element = JavaCore.create(resource.getParent());
ProjectRecord.java,number += element.getLOC();,if (element != null ) number += element.getLOC();
ProjectRecord.java,number += element.getNumberOfMethods();,if (element != null ) number += element.getNumberOfMethods();
RepositoryUtil.java,IProject project = resource.getProject();,if (resource != null ) IProject project = resource.getProject();
RepositoryUtil.java,IFileHistoryProvider fhProvider = provider.getFileHistoryProvider();,if (provider != null ) IFileHistoryProvider fhProvider = provider.getFileHistoryProvider();
RepositoryUtil.java,authorName = revision.getAuthor();,if (revision != null ) authorName = revision.getAuthor();
RootRecord.java,final IProject proj = (IProject) projectRec.getResource();,if (projectRec != null ) final IProject proj = (IProject) projectRec.getResource();
RootRecord.java,number += element.getLOC();,if (element != null ) number += element.getLOC();
RootRecord.java,number += element.getNumberOfMethods();,if (element != null ) number += element.getNumberOfMethods();
StringTable.java,is = messageTableUrl.openStream();,if (messageTableUrl != null ) is = messageTableUrl.openStream();
GeneralPreferencesPage.java,preferences = PMDPlugin.getDefault().loadPreferences();,if (PMDPlugin != null ) preferences = PMDPlugin.getDefault().loadPreferences();
GeneralPreferencesPage.java,Table table = tableViewer.getTable();,if (tableViewer != null ) Table table = tableViewer.getTable();
GeneralPreferencesPage.java,IStructuredSelection selection = (IStructuredSelection)event.getSelection();,if ((IStructuredSelection)event != null ) IStructuredSelection selection = (IStructuredSelection)event.getSelection();
GeneralPreferencesPage.java,IStructuredSelection selection = (IStructuredSelection)event.getSelection();,if ((IStructuredSelection)event != null ) IStructuredSelection selection = (IStructuredSelection)event.getSelection();
GeneralPreferencesPage.java,String pattern = additionalCommentText.getText();,if (additionalCommentText != null ) String pattern = additionalCommentText.getText();
GeneralPreferencesPage.java,String fileName = dialog.open();,if (dialog != null ) String fileName = dialog.open();
GeneralPreferencesPage.java,RuleLabelDecorator decorator = PMDPlugin.getDefault().ruleLabelDecorator();,if (PMDPlugin != null ) RuleLabelDecorator decorator = PMDPlugin.getDefault().ruleLabelDecorator();
GeneralPreferencesPage.java,boolean doCheck = checkCodeOnSave.getSelection();,if (checkCodeOnSave != null ) boolean doCheck = checkCodeOnSave.getSelection();
PMDPreferencePage.java,Table ruleTable = ruleTableViewer.getTable();,if (ruleTableViewer != null ) Table ruleTable = ruleTableViewer.getTable();
PMDPreferencePage.java,IStructuredSelection selection = (IStructuredSelection)event.getSelection();,if ((IStructuredSelection)event != null ) IStructuredSelection selection = (IStructuredSelection)event.getSelection();
PMDPreferencePage.java,Rule selectedRule = (Rule)selection.getFirstElement();,if ((Rule)selection != null ) Rule selectedRule = (Rule)selection.getFirstElement();
PMDPreferencePage.java,Table rulePropertiesTable = rulePropertiesTableViewer.getTable();,if (rulePropertiesTableViewer != null ) Table rulePropertiesTable = rulePropertiesTableViewer.getTable();
PMDPreferencePage.java,IStructuredSelection selection = (IStructuredSelection)ruleTableViewer.getSelection();,if ((IStructuredSelection)ruleTableViewer != null ) IStructuredSelection selection = (IStructuredSelection)ruleTableViewer.getSelection();
PMDPreferencePage.java,Rule selectedRule = (Rule)selection.getFirstElement();,if ((Rule)selection != null ) Rule selectedRule = (Rule)selection.getFirstElement();
PMDPreferencePage.java,IStructuredSelection selection = (IStructuredSelection)ruleTableViewer.getSelection();,if ((IStructuredSelection)ruleTableViewer != null ) IStructuredSelection selection = (IStructuredSelection)ruleTableViewer.getSelection();
PMDPreferencePage.java,Rule rule = (Rule)selection.getFirstElement();,if ((Rule)selection != null ) Rule rule = (Rule)selection.getFirstElement();
PMDPreferencePage.java,int result = dialog.open();,if (dialog != null ) int result = dialog.open();
PMDPreferencePage.java,int result = dialog.open();,if (dialog != null ) int result = dialog.open();
PMDPreferencePage.java,Rule addedRule = dialog.getRule();,if (dialog != null ) Rule addedRule = dialog.getRule();
PMDPreferencePage.java,RuleSet selectedRules = dialog.checkedRules();,if (dialog != null ) RuleSet selectedRules = dialog.checkedRules();
PMDPreferencePage.java,String fileName = dialog.open();,if (dialog != null ) String fileName = dialog.open();
PMDPreferencePage.java,IRuleSetWriter writer = PMDPlugin.getDefault().getRuleSetWriter();,if (PMDPlugin != null ) IRuleSetWriter writer = PMDPlugin.getDefault().getRuleSetWriter();
PMDPreferencePage.java,Table excludePatternTable = excludePatternTableViewer.getTable();,if (excludePatternTableViewer != null ) Table excludePatternTable = excludePatternTableViewer.getTable();
PMDPreferencePage.java,Table includePatternTable = includePatternTableViewer.getTable();,if (includePatternTableViewer != null ) Table includePatternTable = includePatternTableViewer.getTable();
PMDPreferencePage.java,"return original == null ? """" : original.trim();","if (original != null ) return original == null ? """" : original.trim();"
PMDPreferencePage.java,Table table = ruleTableViewer.getTable();,if (ruleTableViewer != null ) Table table = ruleTableViewer.getTable();
PMDPreferencePage.java,TableItem[] items = table.getItems();,if (table != null ) TableItem[] items = table.getItems();
PMDPreferencePage.java,Rule itemRule = (Rule)item.getData();,if ((Rule)item != null ) Rule itemRule = (Rule)item.getData();
RuleCellModifier.java,result = rule.getLanguage().getShortName();,if (rule != null ) result = rule.getLanguage().getShortName();
RuleCellModifier.java,result = rule.getRuleSetName();,if (rule != null ) result = rule.getRuleSetName();
RuleCellModifier.java,result = rule.getName();,if (rule != null ) result = rule.getName();
RuleCellModifier.java,result = rule.getDescription();,if (rule != null ) result = rule.getDescription();
RuleCellModifier.java,Rule rule = (Rule) item.getData();,if (item != null ) Rule rule = (Rule) item.getData();
RuleDialog.java,String[] labels = UISettings.getPriorityLabels();,if (UISettings != null ) String[] labels = UISettings.getPriorityLabels();
RuleDialog.java,description = editedRule.getDescription();,if (editedRule != null ) description = editedRule.getDescription();
RuleDialog.java,externalInfoUrl = editedRule.getExternalInfoUrl();,if (editedRule != null ) externalInfoUrl = editedRule.getExternalInfoUrl();
RuleDialog.java,String url = externalInfoUrlText.getText().trim();,if (externalInfoUrlText != null ) String url = externalInfoUrlText.getText().trim();
RuleDialog.java,Iterator<String> i = this.editedRule.getExamples().iterator();,if (this != null ) Iterator<String> i = this.editedRule.getExamples().iterator();
RuleDialog.java,String name = nameText.getText();,if (nameText != null ) String name = nameText.getText();
RuleDialog.java,String message = messageText.getText();,if (messageText != null ) String message = messageText.getText();
RuleDialog.java,Object instance = ruleClass.newInstance();,if (ruleClass != null ) Object instance = ruleClass.newInstance();
RuleDialog.java,rule = (Rule) ruleClass.newInstance();,if (ruleClass != null ) rule = (Rule) ruleClass.newInstance();
RuleDialog.java,String xpath = xpathText.getText().trim();,if (xpathText != null ) String xpath = xpathText.getText().trim();
RuleDialog.java,String xpath = xpathText.getText().trim();,if (xpathText != null ) String xpath = xpathText.getText().trim();
RuleLabelProvider.java,result = rule.getLanguage().getShortName();,if (rule != null ) result = rule.getLanguage().getShortName();
RuleLabelProvider.java,String fileName = ruleReference.getRuleSetReference().getRuleSetFileName();,if (ruleReference != null ) String fileName = ruleReference.getRuleSetReference().getRuleSetFileName();
RuleLabelProvider.java,result = rule.getName();,if (rule != null ) result = rule.getName();
RuleLabelProvider.java,result = UISettings.labelFor(rule.getPriority());,if (UISettings != null ) result = UISettings.labelFor(rule.getPriority());
RuleLabelProvider.java,result = rule.getDescription();,if (rule != null ) result = rule.getDescription();
RulePropertyCellModifier.java,result = ruleProperty.getProperty();,if (ruleProperty != null ) result = ruleProperty.getProperty();
RulePropertyCellModifier.java,result = ruleProperty.getValue();,if (ruleProperty != null ) result = ruleProperty.getValue();
RulePropertyCellModifier.java,RuleProperty ruleProperty = (RuleProperty) item.getData();,if (item != null ) RuleProperty ruleProperty = (RuleProperty) item.getData();
RulePropertyLabelProvider.java,result = ruleProperty.getProperty();,if (ruleProperty != null ) result = ruleProperty.getProperty();
RulePropertyLabelProvider.java,result = ruleProperty.getValue();,if (ruleProperty != null ) result = ruleProperty.getValue();
RuleSetExcludeIncludePatternCellModifier.java,result = pattern.getPattern();,if (pattern != null ) result = pattern.getPattern();
RuleSetExcludeIncludePatternCellModifier.java,RuleSetExcludeIncludePattern pattern = (RuleSetExcludeIncludePattern)item.getData();,if ((RuleSetExcludeIncludePattern)item != null ) RuleSetExcludeIncludePattern pattern = (RuleSetExcludeIncludePattern)item.getData();
RuleSetSelectionDialog.java,Collection<Rule> rules = rs.getRules();,if (rs != null ) Collection<Rule> rules = rs.getRules();
RuleSetSelectionDialog.java,Iterator<RuleSet> i = sortedRuleSets.iterator();,if (sortedRuleSets != null ) Iterator<RuleSet> i = sortedRuleSets.iterator();
RuleSetSelectionDialog.java,ruleSetNames[index] = ruleSets[index].getName();,if (ruleSets[index] != null ) ruleSetNames[index] = ruleSets[index].getName();
RuleSetSelectionDialog.java,Table tbl = ruleTable.getTable();,if (ruleTable != null ) Table tbl = ruleTable.getTable();
RuleSetSelectionDialog.java,Rule rule = (Rule) item.getData();,if (item != null ) Rule rule = (Rule) item.getData();
RuleSetSelectionDialog.java,String fileName = dialog.open();,if (dialog != null ) String fileName = dialog.open();
RuleSetSelectionDialog.java,TableColumn[] columns = ruleTable.getTable().getColumns();,if (ruleTable != null ) TableColumn[] columns = ruleTable.getTable().getColumns();
RuleSetSelectionDialog.java,int selectionIndex = inputCombo.getSelectionIndex();,if (inputCombo != null ) int selectionIndex = inputCombo.getSelectionIndex();
RuleSetSelectionDialog.java,importedRuleSetName = inputCombo.getText();,if (inputCombo != null ) importedRuleSetName = inputCombo.getText();
AbstractPMDPreferencePage.java,preferences = PMDPlugin.getDefault().loadPreferences();,if (PMDPlugin != null ) preferences = PMDPlugin.getDefault().loadPreferences();
AbstractTableManager.java,final Display display = control.getDisplay();,if (control != null ) final Display display = control.getDisplay();
AbstractTableManager.java,Shell shell = control.getShell();,if (control != null ) Shell shell = control.getShell();
AbstractTableManager.java,Set<String> columnIds = new HashSet<String>(hiddenColumns.size());,if (HashSet<String>(hiddenColumns != null ) Set<String> columnIds = new HashSet<String>(hiddenColumns.size());
AbstractTreeTableManager.java,Tree tree = treeViewer.getTree();,if (treeViewer != null ) Tree tree = treeViewer.getTree();
AbstractTreeTableManager.java,int eventCode = entry.getKey().intValue();,if (entry != null ) int eventCode = entry.getKey().intValue();
AbstractTreeTableManager.java,List<Listener> listeners = entry.getValue();,if (entry != null ) List<Listener> listeners = entry.getValue();
AbstractTreeTableManager.java,Object[] checkedItems = treeViewer.getCheckedElements();,if (treeViewer != null ) Object[] checkedItems = treeViewer.getCheckedElements();
AbstractTreeTableManager.java,Object itemData = item.getData();,if (item != null ) Object itemData = item.getData();
AbstractTreeTableManager.java,TreeColumn[] cols = item.getParent().getColumns();,if (item != null ) TreeColumn[] cols = item.getParent().getColumns();
AbstractTreeTableManager.java,final Tree tree = treeViewer.getTree();,if (treeViewer != null ) final Tree tree = treeViewer.getTree();
AbstractTreeTableManager.java,IStructuredSelection selection = (IStructuredSelection)event.getSelection();,if ((IStructuredSelection)event != null ) IStructuredSelection selection = (IStructuredSelection)event.getSelection();
AbstractTreeTableManager.java,boolean checked = item.getChecked();,if (item != null ) boolean checked = item.getChecked();
AbstractTreeTableManager.java,TreeItem[] items = item.getItems();,if (item != null ) TreeItem[] items = item.getItems();
AbstractTreeTableManager.java,TreeItem[] items = item.getItems();,if (item != null ) TreeItem[] items = item.getItems();
BasicRuleFieldAccessor.java,"return value == null ? """" : value.toString();","if (value != null ) return value == null ? """" : value.toString();"
BasicRuleSetFieldAccessor.java,"return value == null ? """" : value.toString();","if (value != null ) return value == null ? """" : value.toString();"
BasicTableManager.java,TableColumn[] cols = item.getParent().getColumns();,if (item != null ) TableColumn[] cols = item.getParent().getColumns();
BasicTableManager.java,Comparator comp = acc.comparator();,if (acc != null ) Comparator comp = acc.comparator();
BasicTableManager.java,Table table = tableViewer.getTable();,if (tableViewer != null ) Table table = tableViewer.getTable();
BasicTableManager.java,final Table table = tableViewer.getTable();,if (tableViewer != null ) final Table table = tableViewer.getTable();
BasicTableManager.java,IStructuredSelection selection = (IStructuredSelection)event.getSelection();,if ((IStructuredSelection)event != null ) IStructuredSelection selection = (IStructuredSelection)event.getSelection();
BasicTableManager.java,Table table = tableViewer.getTable();,if (tableViewer != null ) Table table = tableViewer.getTable();
BasicTableManager.java,TableColumn[] columns = table.getColumns();,if (table != null ) TableColumn[] columns = table.getColumns();
FilterManager.java,filter = filter.trim();,if (filter != null ) filter = filter.trim();
FilterManager.java,int hashCode = filter.hashCode();,if (filter != null ) int hashCode = filter.hashCode();
FilterManager.java,int code = filterSource.trim().hashCode();,if (filterSource != null ) int code = filterSource.trim().hashCode();
FilterManager.java,String theSource = newSource.trim();,if (newSource != null ) String theSource = newSource.trim();
FilterManager.java,int hash = theSource.hashCode();,if (theSource != null ) int hash = theSource.hashCode();
FilterManager.java,hashKey = entry.getKey();,if (entry != null ) hashKey = entry.getKey();
MarkerColumnsUI.java,final Display display = Display.getCurrent();,if (Display != null ) final Display display = Display.getCurrent();
PMDPreferencePage2.java,boolean sel = checkButton.getSelection();,if (checkButton != null ) boolean sel = checkButton.getSelection();
PMDPreferencePage2.java,RuleSet defaultRuleSet = plugin.getPreferencesManager().getRuleSet();,if (plugin != null ) RuleSet defaultRuleSet = plugin.getPreferencesManager().getRuleSet();
PMDPreferencePage2.java,int i =  tabFolder.getSelectionIndex();,if (tabFolder != null ) int i =  tabFolder.getSelectionIndex();
PMDPreferencePage2.java,List<Rule> chosenRules = tableManager.activeRules();,if (tableManager != null ) List<Rule> chosenRules = tableManager.activeRules();
RuleFieldAccessor.java,int count = rule.getExamples().size();,if (rule != null ) int count = rule.getExamples().size();
RuleGroup.java,"return id == null ? """" : id.toString();","if (id != null ) return id == null ? """" : id.toString();"
RuleGroup.java,Object[] sortedRules = rules.toArray();,if (rules != null ) Object[] sortedRules = rules.toArray();
RuleLabelProvider.java,String problem = rule.dysfunctionReason();,if (rule != null ) String problem = rule.dysfunctionReason();
RuleLabelProvider.java,String label = rg.label();,if (rg != null ) String label = rg.label();
RuleSelection.java,Iterator<Rule> currentRuleIter = ruleSet.getRules().iterator();,if (ruleSet != null ) Iterator<Rule> currentRuleIter = ruleSet.getRules().iterator();
RuleSelection.java,Rule curRule = currentRuleIter.next();	// could be rule or a ruleReference,if (ruleReference != null ) Rule curRule = currentRuleIter.next();	// could be rule or a ruleReference
RuleSetTreeItemProvider.java,Object[] rules = ruleColl.toArray();,if (ruleColl != null ) Object[] rules = ruleColl.toArray();
RuleSetTreeItemProvider.java,Iterator<Rule> iter = rules.iterator();,if (rules != null ) Iterator<Rule> iter = rules.iterator();
RuleSetTreeItemProvider.java,Rule rule = iter.next();,if (iter != null ) Rule rule = iter.next();
RuleTableManager.java,Object[] checkedItems = treeViewer.getCheckedElements();,if (treeViewer != null ) Object[] checkedItems = treeViewer.getCheckedElements();
RuleTableManager.java,boolean hasDefaults = ruleSelection.haveDefaultValues();,if (ruleSelection != null ) boolean hasDefaults = ruleSelection.haveDefaultValues();
RuleTableManager.java,int result = dialog.open();,if (dialog != null ) int result = dialog.open();
RuleTableManager.java,Rule addedRule = wiz.rule();,if (wiz != null ) Rule addedRule = wiz.rule();
RuleTableManager.java,Shell shell = treeViewer.getTree().getShell();,if (treeViewer != null ) Shell shell = treeViewer.getTree().getShell();
RuleTableManager.java,String fileName = dialog.open();,if (dialog != null ) String fileName = dialog.open();
RuleTableManager.java,IRuleSetWriter writer = plugin.getRuleSetWriter();,if (plugin != null ) IRuleSetWriter writer = plugin.getRuleSetWriter();
RuleTableManager.java,Iterator<Rule> iter = incomingRuleSet.getRules().iterator();,if (incomingRuleSet != null ) Iterator<Rule> iter = incomingRuleSet.getRules().iterator();
RuleTableManager.java,Rule rule = iter.next();,if (iter != null ) Rule rule = iter.next();
RuleTableManager.java,int selectionIdx = combo.getSelectionIndex();,if (combo != null ) int selectionIdx = combo.getSelectionIndex();
RuleTableManager.java,Object data = item.getData();,if (item != null ) Object data = item.getData();
RuleTableManager.java,final Display display = tree.getDisplay();,if (tree != null ) final Display display = tree.getDisplay();
RuleTableManager.java,final Tree ruleTree = treeViewer.getTree();,if (treeViewer != null ) final Tree ruleTree = treeViewer.getTree();
RuleTableManager.java,Set<String> names = PreferenceUIStore.instance.selectedRuleNames();,if (PreferenceUIStore != null ) Set<String> names = PreferenceUIStore.instance.selectedRuleNames();
RuleTableManager.java,IStructuredSelection selection = (IStructuredSelection)treeViewer.getSelection();,if ((IStructuredSelection)treeViewer != null ) IStructuredSelection selection = (IStructuredSelection)treeViewer.getSelection();
RuleTableManager.java,TreeColumn[] columns = ruleTree.getColumns();,if (ruleTree != null ) TreeColumn[] columns = ruleTree.getColumns();
RuleTableManager.java,RuleLabelProvider provider = (RuleLabelProvider)treeViewer.getLabelProvider();,if ((RuleLabelProvider)treeViewer != null ) RuleLabelProvider provider = (RuleLabelProvider)treeViewer.getLabelProvider();
RuleUIUtil.java,Object value = entry.getValue();,if (entry != null ) Object value = entry.getValue();
RuleUIUtil.java,entry = iter.next();,if (iter != null ) entry = iter.next();
RuleUIUtil.java,int start = sb.length();,if (sb != null ) int start = sb.length();
RuleUIUtil.java,entry = iter.next();,if (iter != null ) entry = iter.next();
RuleUIUtil.java,start = sb.length();,if (sb != null ) start = sb.length();
RuleUtil.java,Object value = entry.getValue();,if (entry != null ) Object value = entry.getValue();
RuleUtil.java,Rule rule = reference.getRule();,if (reference != null ) Rule rule = reference.getRule();
RuleUtil.java,RulePriority priority = rule.getPriority();,if (rule != null ) RulePriority priority = rule.getPriority();
SimpleColumnDescriptor.java,ValueFormatter formatter = FormatManager.formatterFor(value.getClass());,if (FormatManager != null ) ValueFormatter formatter = FormatManager.formatterFor(value.getClass());
TextColumnDescriptor.java,int descent = gc.getFontMetrics().getDescent();,if (gc != null ) int descent = gc.getFontMetrics().getDescent();
TreeUtil.java,ITableLabelProvider provider = (ITableLabelProvider)viewer.getLabelProvider();,if ((ITableLabelProvider)viewer != null ) ITableLabelProvider provider = (ITableLabelProvider)viewer.getLabelProvider();
TreeUtil.java,int columnCount = viewer.getTree().getColumnCount();,if (viewer != null ) int columnCount = viewer.getTree().getColumnCount();
ValueFormatter.java,"return value == null ? """" : value.toString();","if (value != null ) return value == null ? """" : value.toString();"
AbstractEditorFactory.java,"return value == null ? """" : value.toString();","if (value != null ) return value == null ? """" : value.toString();"
AbstractMultiValueEditorFactory.java,String values = textWidget.getText().trim();,if (textWidget != null ) String values = textWidget.getText().trim();
AbstractMultiValueEditorFactory.java,String str = value.trim();,if (value != null ) String str = value.trim();
AbstractNumericEditorFactory.java,int min = minWidget.getSelection();,if (minWidget != null ) int min = minWidget.getSelection();
AbstractNumericEditorFactory.java,int value = valueWidget.getSelection();,if (valueWidget != null ) int value = valueWidget.getSelection();
AbstractNumericEditorFactory.java,int max = maxWidget.getSelection();,if (maxWidget != null ) int max = maxWidget.getSelection();
BooleanEditorFactory.java,boolean selected = butt.getSelection();,if (butt != null ) boolean selected = butt.getSelection();
CharacterEditorFactory.java,"textWidget.setText(val == null ? """" : val.toString());","if (val != null ) textWidget.setText(val == null ? """" : val.toString());"
CharacterEditorFactory.java,String newValue = textControl.getText().trim();,if (textControl != null ) String newValue = textControl.getText().trim();
EnumerationEditorFactory.java,"int selectionIdx = indexOf(value, ep.choices());","if (ep != null ) int selectionIdx = indexOf(value, ep.choices());"
EnumerationEditorFactory.java,int selectionIdx = combo.getSelectionIndex();,if (combo != null ) int selectionIdx = combo.getSelectionIndex();
FileEditorFactory.java,File newValue = picker.getFile();,if (picker != null ) File newValue = picker.getFile();
FilePicker.java,String selected = fd.open();,if (fd != null ) String selected = fd.open();
FilePicker.java,"fileField.setText(file == null ? """" : file.getAbsolutePath());","if (file != null ) fileField.setText(file == null ? """" : file.getAbsolutePath());"
FilePicker.java,String name = fileField.getText();,if (fileField != null ) String name = fileField.getText();
IntegerEditorFactory.java,Integer newValue = Integer.valueOf(spinner.getSelection());,if (Integer != null ) Integer newValue = Integer.valueOf(spinner.getSelection());
MethodEditorFactory.java,Method newValue = picker.getMethod();,if (picker != null ) Method newValue = picker.getMethod();
MethodPicker.java,methods = cls.getMethods();,if (cls != null ) methods = cls.getMethods();
MultiEnumerationEditorFactory.java,Object[] choices = desc.choices();,if (desc != null ) Object[] choices = desc.choices();
MultiEnumerationEditorFactory.java,"int selectionIdx = EnumerationEditorFactory.indexOf(value, ep.choices());","if (ep != null ) int selectionIdx = EnumerationEditorFactory.indexOf(value, ep.choices());"
MultiMethodEditorFactory.java,entry = iter.next();,if (iter != null ) entry = iter.next();
StringEditorFactory.java,String newValue = text.getText().trim();,if (text != null ) String newValue = text.getText().trim();
TypeText.java,String textValue = text.getText();,if (text != null ) String textValue = text.getText();
TypeText.java,String typeStr = text.getText().trim();,if (text != null ) String typeStr = text.getText().trim();
AbstractRulePanelManager.java,tabText = theTab.getText();,if (theTab != null ) tabText = theTab.getText();
AbstractRulePanelManager.java,boolean hasIssues = !issues.isEmpty();,if (!issues != null ) boolean hasIssues = !issues.isEmpty();
AbstractRulePanelManager.java,ColourManager clrMgr = ColourManager.managerFor(parent.getDisplay());,if (ColourManager != null ) ColourManager clrMgr = ColourManager.managerFor(parent.getDisplay());
AbstractRulePanelManager.java,String cleanValue = newValue.trim();,if (newValue != null ) String cleanValue = newValue.trim();
AbstractRulePanelManager.java,String[] choices = control.getItems();,if (control != null ) String[] choices = control.getItems();
AbstractRulePanelManager.java,String[] choices = control.getItems();,if (control != null ) String[] choices = control.getItems();
DescriptionPanelManager.java,String cleanValue = asCleanString(descriptionBox.getText());,if (asCleanString(descriptionBox != null ) String cleanValue = asCleanString(descriptionBox.getText());
DescriptionPanelManager.java,String existingValue = soleRule.getDescription();,if (soleRule != null ) String existingValue = soleRule.getDescription();
DescriptionPanelManager.java,String newURL = asCleanString(externalURLField.getText());,if (asCleanString(externalURLField != null ) String newURL = asCleanString(externalURLField.getText());
DescriptionPanelManager.java,String newMessage = asCleanString(messageField.getText());,if (asCleanString(messageField != null ) String newMessage = asCleanString(messageField.getText());
DescriptionPanelManager.java,String url = externalURLField.getText();,if (externalURLField != null ) String url = externalURLField.getText();
DescriptionPanelManager.java,String urlUC = url.toUpperCase();,if (url != null ) String urlUC = url.toUpperCase();
DescriptionPanelManager.java,String url = externalURLField.getText().trim();,if (externalURLField != null ) String url = externalURLField.getText().trim();
DescriptionPanelManager.java,String message = messageField.getText().trim();,if (messageField != null ) String message = messageField.getText().trim();
DescriptionPanelManager.java,String description = descriptionBox.getText().trim();,if (descriptionBox != null ) String description = descriptionBox.getText().trim();
ExamplePanelManager.java,String cleanValue = exampleField.getText().trim();,if (exampleField != null ) String cleanValue = exampleField.getText().trim();
ExamplePanelManager.java,String existingValue = soleRule.getDescription();,if (soleRule != null ) String existingValue = soleRule.getDescription();
ExamplePanelManager.java,List<String> examples = rule.getExamples();,if (rule != null ) List<String> examples = rule.getExamples();
ExclusionPanelManager.java,String newText = control.getText();,if (control != null ) String newText = control.getText();
ExclusionPanelManager.java,String newText = control.getText();,if (control != null ) String newText = control.getText();
ExclusionPanelManager.java,colourManager = ColourManager.managerFor(parent.getDisplay());,if (ColourManager != null ) colourManager = ColourManager.managerFor(parent.getDisplay());
FormArranger.java,Control[] kids = parent.getChildren();,if (parent != null ) Control[] kids = parent.getChildren();
FormArranger.java,List<String> unreferencedOnes = new ArrayList<String>(refPositions.size());,if (ArrayList<String>(refPositions != null ) List<String> unreferencedOnes = new ArrayList<String>(refPositions.size());
FormArranger.java,String buttonName = (String)butt.getData();,if ((String)butt != null ) String buttonName = (String)butt.getData();
ListManager.java,int[] indices = list.getSelectionIndices();,if (list != null ) int[] indices = list.getSelectionIndices();
PerRulePropertyPanelManager.java,unreferencedVariables = formArranger.updateDeleteButtons();	// any unref'd vars are not real errors,if (errors != null ) unreferencedVariables = formArranger.updateDeleteButtons();	// any unref'd vars are not real errors
PerRulePropertyPanelManager.java,String dysfunctionReason = soleRule.dysfunctionReason();,if (soleRule != null ) String dysfunctionReason = soleRule.dysfunctionReason();
QuickFixPanelManager.java,List<Rule> theRules = rules.allRules();,if (rules != null ) List<Rule> theRules = rules.allRules();
RulePanelManager.java,"field.add(version == null ? """" : version.getName());","if (version != null ) field.add(version == null ? """" : version.getName());"
RulePanelManager.java,"show(languageCombo, language == null ? """" : language.getName());","if (language != null ) show(languageCombo, language == null ? """" : language.getName());"
RulePanelManager.java,int idx = combo.getSelectionIndex();,if (combo != null ) int idx = combo.getSelectionIndex();
RulePanelManager.java,Language deflt = Language.getDefaultLanguage();,if (Language != null ) Language deflt = Language.getDefaultLanguage();
RulePanelManager.java,Language language = languages.get(combo.getSelectionIndex());,if (languages != null ) Language language = languages.get(combo.getSelectionIndex());
RulePanelManager.java,List<LanguageVersion> versions = language.getVersions();,if (language != null ) List<LanguageVersion> versions = language.getVersions();
RulePanelManager.java,int index = languageCombo.getSelectionIndex();,if (languageCombo != null ) int index = languageCombo.getSelectionIndex();
RulePanelManager.java,int index = versionCombo.getSelectionIndex();,if (versionCombo != null ) int index = versionCombo.getSelectionIndex();
RulePanelManager.java,final int selIdx = combo.getSelectionIndex();,if (combo != null ) final int selIdx = combo.getSelectionIndex();
RulePanelManager.java,"valueChanged(null, version == null ? """" : version.getName());","if (version != null ) valueChanged(null, version == null ? """" : version.getName());"
RulePanelManager.java,String name = ruleSetNameField.getText();,if (ruleSetNameField != null ) String name = ruleSetNameField.getText();
RulePanelManager.java,Rule newRule = ruleType.newInstance();,if (ruleType != null ) Rule newRule = ruleType.newInstance();
SummaryPanelManager.java,int delta = length - text.length();,if (text != null ) int delta = length - text.length();
SummaryPanelManager.java,String url = rule.getExternalInfoUrl();,if (rule != null ) String url = rule.getExternalInfoUrl();
SummaryPanelManager.java,List<String> examples = rule.getExamples();,if (rule != null ) List<String> examples = rule.getExamples();
XPathPanelManager.java,String newValue = xpathField.getText().trim();,if (xpathField != null ) String newValue = xpathField.getText().trim();
XPathPanelManager.java,int selectionIdx = xpathVersionField.getSelectionIndex();,if (xpathVersionField != null ) int selectionIdx = xpathVersionField.getSelectionIndex();
PriorityDescriptor.java,copy.shape = shape.clone();,if (shape != null ) copy.shape = shape.clone();
PriorityDescriptorCache.java,IPreferences preferences = preferencesManager().loadPreferences();,if (preferencesManager() != null ) IPreferences preferences = preferencesManager().loadPreferences();
PriorityDescriptorCache.java,IPreferences prefs = mgr.loadPreferences();,if (mgr != null ) IPreferences prefs = mgr.loadPreferences();
PriorityDescriptorCache.java,IPreferences preferences = preferencesManager().reloadPreferences();,if (preferencesManager() != null ) IPreferences preferences = preferencesManager().reloadPreferences();
PMDProjectPropertyPage.java,model = controller.getPropertyPageBean();,if (controller != null ) model = controller.getPropertyPageBean();
PMDProjectPropertyPage.java,GridData data = (GridData) ruleDescriptionPanel.getLayoutData();,if (ruleDescriptionPanel != null ) GridData data = (GridData) ruleDescriptionPanel.getLayoutData();
PMDProjectPropertyPage.java,boolean isEnabled = enablePMDButton.getSelection();,if (enablePMDButton != null ) boolean isEnabled = enablePMDButton.getSelection();
PMDProjectPropertyPage.java,String ruleSetFile = model.getRuleSetFile();,if (model != null ) String ruleSetFile = model.getRuleSetFile();
PMDProjectPropertyPage.java,String path = fileDialog.open();,if (fileDialog != null ) String path = fileDialog.open();
PMDProjectPropertyPage.java,selectedWorkingSet = model.getProjectWorkingSet();,if (model != null ) selectedWorkingSet = model.getProjectWorkingSet();
PMDProjectPropertyPage.java,final Table ruleTable = availableRulesTableViewer.getTable();,if (availableRulesTableViewer != null ) final Table ruleTable = availableRulesTableViewer.getTable();
PMDProjectPropertyPage.java,IStructuredSelection sel = (IStructuredSelection)availableRulesTableViewer.getSelection();,if ((IStructuredSelection)availableRulesTableViewer != null ) IStructuredSelection sel = (IStructuredSelection)availableRulesTableViewer.getSelection();
PMDProjectPropertyPage.java,Rule rule = (Rule)sel.getFirstElement();,if ((Rule)sel != null ) Rule rule = (Rule)sel.getFirstElement();
PMDProjectPropertyPage.java,final RuleSet activeRuleSet = model.getProjectRuleSet();,if (model != null ) final RuleSet activeRuleSet = model.getProjectRuleSet();
PMDProjectPropertyPage.java,final RuleSet activeRuleSet = model.getProjectRuleSet();,if (model != null ) final RuleSet activeRuleSet = model.getProjectRuleSet();
PMDProjectPropertyPage.java,Collection<Rule> rules = getProjectRuleSet().getRules();,if (getProjectRuleSet() != null ) Collection<Rule> rules = getProjectRuleSet().getRules();
PMDProjectPropertyPage.java,TableItem[] items = availableRulesTableViewer.getTable().getItems();,if (availableRulesTableViewer != null ) TableItem[] items = availableRulesTableViewer.getTable().getItems();
PMDProjectPropertyPage.java,Table ruleTable = availableRulesTableViewer.getTable();,if (availableRulesTableViewer != null ) Table ruleTable = availableRulesTableViewer.getTable();
PMDPropertyPage.java,model = controller.getPropertyPageBean();,if (controller != null ) model = controller.getPropertyPageBean();
PMDPropertyPage.java,boolean isEnabled = enablePMDButton.getSelection();,if (enablePMDButton != null ) boolean isEnabled = enablePMDButton.getSelection();
PMDPropertyPage.java,String ruleSetFile = model.getRuleSetFile();,if (model != null ) String ruleSetFile = model.getRuleSetFile();
PMDPropertyPage.java,String path = fileDialog.open();,if (fileDialog != null ) String path = fileDialog.open();
PMDPropertyPage.java,selectedWorkingSet = model.getProjectWorkingSet();,if (model != null ) selectedWorkingSet = model.getProjectWorkingSet();
PMDPropertyPage.java,final Table ruleTable = availableRulesTableViewer.getTable();,if (availableRulesTableViewer != null ) final Table ruleTable = availableRulesTableViewer.getTable();
PMDPropertyPage.java,final RuleSet activeRuleSet = model.getProjectRuleSet();,if (model != null ) final RuleSet activeRuleSet = model.getProjectRuleSet();
PMDPropertyPage.java,final RuleSet activeRuleSet = model.getProjectRuleSet();,if (model != null ) final RuleSet activeRuleSet = model.getProjectRuleSet();
PMDPropertyPage.java,Collection<Rule> rules = getProjectRuleSet().getRules();,if (getProjectRuleSet() != null ) Collection<Rule> rules = getProjectRuleSet().getRules();
PMDPropertyPage.java,TableItem[] items = availableRulesTableViewer.getTable().getItems();,if (availableRulesTableViewer != null ) TableItem[] items = availableRulesTableViewer.getTable().getItems();
PMDPropertyPage.java,final Table ruleTable = availableRulesTableViewer.getTable();,if (availableRulesTableViewer != null ) final Table ruleTable = availableRulesTableViewer.getTable();
PMDPropertyPageController.java,pmdAlreadyActivated = properties.isPmdEnabled();,if (properties != null ) pmdAlreadyActivated = properties.isPmdEnabled();
PMDPropertyPageController.java,final IWorkbench workbench = PlatformUI.getWorkbench();,if (PlatformUI != null ) final IWorkbench workbench = PlatformUI.getWorkbench();
PMDPropertyPageController.java,final IWorkingSetManager workingSetManager = workbench.getWorkingSetManager();,if (workbench != null ) final IWorkingSetManager workingSetManager = workbench.getWorkingSetManager();
UpdateProjectPropertiesCmd.java,needRebuild = properties.isNeedRebuild();,if (properties != null ) needRebuild = properties.isNeedRebuild();
UpdateProjectPropertiesCmd.java,ruleSetFileExists = !properties.isRuleSetFileExist();,if (!properties != null ) ruleSetFileExists = !properties.isRuleSetFileExist();
PMDResolution.java,IResource resource = marker.getResource();,if (marker != null ) IResource resource = marker.getResource();
PMDResolution.java,InputStream in = this.file.getContents();,if (this != null ) InputStream in = this.file.getContents();
PMDResolution.java,String line = br.readLine();,if (br != null ) String line = br.readLine();
PMDResolutionGenerator.java,String ruleName = rule.getName();,if (rule != null ) String ruleName = rule.getName();
PMDResolutionGenerator.java,String ruleName = rule.getName();,if (rule != null ) String ruleName = rule.getName();
ReportManager.java,IPreferences prefs =  PMDPlugin.getDefault().loadPreferences();,if (PMDPlugin != null ) IPreferences prefs =  PMDPlugin.getDefault().loadPreferences();
ReportManager.java,PropertyDescriptor desc = entry.getKey();,if (entry != null ) PropertyDescriptor desc = entry.getKey();
ReportPreferencesPage.java,Table table = tableViewer.getTable();,if (tableViewer != null ) Table table = tableViewer.getTable();
ReportPreferencesPage.java,TableColumn[] columns = table.getColumns();,if (table != null ) TableColumn[] columns = table.getColumns();
ReportPreferencesPage.java,IStructuredSelection selection = (IStructuredSelection)event.getSelection();,if ((IStructuredSelection)event != null ) IStructuredSelection selection = (IStructuredSelection)event.getSelection();
ReportPreferencesPage.java,List items = selection.toList();,if (selection != null ) List items = selection.toList();
ReportPreferencesPage.java,Set<String> activeNames = preferences.activeReportRenderers();,if (preferences != null ) Set<String> activeNames = preferences.activeReportRenderers();
ReportPreferencesPage.java,Renderer ren = (Renderer)item.getData();,if ((Renderer)item != null ) Renderer ren = (Renderer)item.getData();
AbstractPMDPagebookView.java,IWorkbenchPage page = getSite().getPage();,if (getSite() != null ) IWorkbenchPage page = getSite().getPage();
AbstractResourceView.java,IWorkbenchPart activePart = getSitePage().getActivePart();,if (getSitePage() != null ) IWorkbenchPart activePart = getSitePage().getActivePart();
AbstractResourceView.java,FileRecord record = page.getFileRecord();,if (page != null ) FileRecord record = page.getFileRecord();
AbstractResourceView.java,IResource resource = record.getResource();,if (record != null ) IResource resource = record.getResource();
AbstractStructureInspectorPage.java,int index = methodSelector.getSelectionIndex();,if (methodSelector != null ) int index = methodSelector.getSelectionIndex();
AbstractStructureInspectorPage.java,IThemeManager themeManager = PlatformUI.getWorkbench().getThemeManager();,if (PlatformUI != null ) IThemeManager themeManager = PlatformUI.getWorkbench().getThemeManager();
AbstractStructureInspectorPage.java,ITheme currentTheme = themeManager.getCurrentTheme();,if (themeManager != null ) ITheme currentTheme = themeManager.getCurrentTheme();
AbstractStructureInspectorPage.java,final int beginLine = violation.getBeginLine();,if (violation != null ) final int beginLine = violation.getBeginLine();
AbstractStructureInspectorPage.java,String varName = violation.getVariableName();,if (violation != null ) String varName = violation.getVariableName();
AbstractStructureInspectorPage.java,int beginLine = violation.getBeginLine();,if (violation != null ) int beginLine = violation.getBeginLine();
AbstractStructureInspectorPage.java,int endLine = violation.getEndLine();,if (violation != null ) int endLine = violation.getEndLine();
AbstractStructureInspectorPage.java,int index = methodSelector.getSelectionIndex();,if (methodSelector != null ) int index = methodSelector.getSelectionIndex();
ChangeEvaluator.java,IResource resource = markerDelta.getResource();,if (markerDelta != null ) IResource resource = markerDelta.getResource();
ChangeEvaluator.java,IProject project = resource.getProject();,if (resource != null ) IProject project = resource.getProject();
ChangeEvaluator.java,List<AbstractPMDRecord> packages = projectRec.getChildrenAsList();,if (projectRec != null ) List<AbstractPMDRecord> packages = projectRec.getChildrenAsList();
ChangeEvaluator.java,IProject project = (IProject) projectRec.getResource();,if (projectRec != null ) IProject project = (IProject) projectRec.getResource();
ChangeEvaluator.java,PackageRecord packageRec = (PackageRecord) fileRec.getParent();,if (fileRec != null ) PackageRecord packageRec = (PackageRecord) fileRec.getParent();
PMDPerspective.java,String editorAreaId = layout.getEditorArea();,if (layout != null ) String editorAreaId = layout.getEditorArea();
PriorityFilter.java,priorityList = UISettings.getPriorityIntValues();,if (UISettings != null ) priorityList = UISettings.getPriorityIntValues();
ViewMemento.java,this.path = PMDPlugin.getDefault().getStateLocation();,if (PMDPlugin != null ) this.path = PMDPlugin.getDefault().getStateLocation();
ViewMemento.java,String line = contentReader.readLine();,if (contentReader != null ) String line = contentReader.readLine();
ViewMemento.java,List<String> valuelist = Collections.emptyList();,if (Collections != null ) List<String> valuelist = Collections.emptyList();
ViolationOutline.java,List<Integer> filterList = priorityFilter.getPriorityFilterList();,if (priorityFilter != null ) List<Integer> filterList = priorityFilter.getPriorityFilterList();
ViolationOutline.java,Table table = viewer.getTable();,if (viewer != null ) Table table = viewer.getTable();
ViolationOutline.java,IEditorPart editorPart = getSitePage().getActiveEditor();,if (getSitePage() != null ) IEditorPart editorPart = getSitePage().getActiveEditor();
ViolationOutline.java,IWorkbenchPart activePart = page.getActivePart();,if (page != null ) IWorkbenchPart activePart = page.getActivePart();
ViolationOutline.java,IPage page = super.getCurrentPage();,if (super != null ) IPage page = super.getCurrentPage();
ViolationOutlineContentProvider.java,tableViewer = page.tableViewer();,if (page != null ) tableViewer = page.tableViewer();
ViolationOutlineContentProvider.java,IMarker marker = delta.getMarker();,if (delta != null ) IMarker marker = delta.getMarker();
ViolationOutlinePage.java,ViewerFilter[] filters = outline.getFilters();,if (outline != null ) ViewerFilter[] filters = outline.getFilters();
ViolationOutlinePage.java,TableColumn[] columns = table.getColumns();,if (table != null ) TableColumn[] columns = table.getColumns();
ViolationOutlinePage.java,TableColumn[] columns = tableViewer.getTable().getColumns();,if (tableViewer != null ) TableColumn[] columns = tableViewer.getTable().getColumns();
ViolationOutlinePage.java,IStructuredSelection selection = (IStructuredSelection) event.getSelection();,if (event != null ) IStructuredSelection selection = (IStructuredSelection) event.getSelection();
ViolationOutlinePage.java,IMarker marker = (IMarker) selection.getFirstElement();,if (selection != null ) IMarker marker = (IMarker) selection.getFirstElement();
ViolationOutlinePage.java,IEditorInput input = editor.getEditorInput();,if (editor != null ) IEditorInput input = editor.getEditorInput();
ViolationOutlinePageBR.java,ViewerFilter[] filters = outline.getFilters();,if (outline != null ) ViewerFilter[] filters = outline.getFilters();
ViolationOutlinePageBR.java,IStructuredSelection selection = (IStructuredSelection) event.getSelection();,if (event != null ) IStructuredSelection selection = (IStructuredSelection) event.getSelection();
ViolationOutlinePageBR.java,IMarker marker = (IMarker) selection.getFirstElement();,if (selection != null ) IMarker marker = (IMarker) selection.getFirstElement();
ViolationOutlinePageBR.java,IEditorInput input = editor.getEditorInput();,if (editor != null ) IEditorInput input = editor.getEditorInput();
ViolationOverview.java,List<AbstractPMDRecord> projects = projectFilter.getProjectFilterList();,if (projectFilter != null ) List<AbstractPMDRecord> projects = projectFilter.getProjectFilterList();
ViolationOverview.java,TreeColumn[] columns = tree.getColumns();,if (tree != null ) TreeColumn[] columns = tree.getColumns();
ViolationOverview.java,List<Integer> filterList = priorityFilter.getPriorityFilterList();,if (priorityFilter != null ) List<Integer> filterList = priorityFilter.getPriorityFilterList();
ViolationOverview.java,TreeColumn[] columns = treeViewer.getTree().getColumns();,if (treeViewer != null ) TreeColumn[] columns = treeViewer.getTree().getColumns();
ViolationOverview.java,projects = root.getChildren();,if (root != null ) projects = root.getChildren();
ViolationOverview.java,Object object = event.getElement();,if (event != null ) Object object = event.getElement();
ViolationOverview.java,AbstractPMDRecord[] children = record.getChildren();,if (record != null ) AbstractPMDRecord[] children = record.getChildren();
ViolationOverview.java,markers = record.findMarkers();,if (record != null ) markers = record.findMarkers();
ViolationOverview.java,AbstractPMDRecord packRec = record.getParent().getParent();,if (record != null ) AbstractPMDRecord packRec = record.getParent().getParent();
ViolationOverview.java,IMarker[] markers = record.findMarkers();,if (record != null ) IMarker[] markers = record.findMarkers();
ViolationOverview.java,loc = element.getLOC();,if (element != null ) loc = element.getLOC();
ViolationOverview.java,numberOfMethods = element.getNumberOfMethods();,if (element != null ) numberOfMethods = element.getNumberOfMethods();
ViolationOverviewContentProvider.java,treeViewer = view.getViewer();,if (view != null ) treeViewer = view.getViewer();
ViolationOverviewContentProvider.java,IWorkspaceRoot workspaceRoot = (IWorkspaceRoot) root.getResource();,if (root != null ) IWorkspaceRoot workspaceRoot = (IWorkspaceRoot) root.getResource();
ViolationOverviewContentProvider.java,List<AbstractPMDRecord> files = record.getChildrenAsList();,if (record != null ) List<AbstractPMDRecord> files = record.getChildrenAsList();
ViolationOverviewContentProvider.java,List<AbstractPMDRecord> newMarkers = fileRec.getChildrenAsList();,if (fileRec != null ) List<AbstractPMDRecord> newMarkers = fileRec.getChildrenAsList();
ViolationOverviewContentProvider.java,List<AbstractPMDRecord> projects = root.getChildrenAsList();,if (root != null ) List<AbstractPMDRecord> projects = root.getChildrenAsList();
ViolationOverviewContentProvider.java,parent = record.getParent();,if (record != null ) parent = record.getParent();
ViolationOverviewContentProvider.java,parent = record.getParent();,if (record != null ) parent = record.getParent();
ViolationOverviewContentProvider.java,parent = record.getParent().getParent();,if (record != null ) parent = record.getParent().getParent();
ViolationOverviewContentProvider.java,parent = record.getParent();,if (record != null ) parent = record.getParent();
ViolationOverviewContentProvider.java,workspaceRoot = (IWorkspaceRoot) root.getResource();,if (root != null ) workspaceRoot = (IWorkspaceRoot) root.getResource();
ViolationOverviewContentProvider.java,workspaceRoot = (IWorkspaceRoot) root.getResource();,if (root != null ) workspaceRoot = (IWorkspaceRoot) root.getResource();
ViolationOverviewDoubleClickListener.java,final IStructuredSelection selection = (IStructuredSelection) event.getSelection();,if (event != null ) final IStructuredSelection selection = (IStructuredSelection) event.getSelection();
ViolationOverviewDoubleClickListener.java,final Object object = selection.getFirstElement();,if (selection != null ) final Object object = selection.getFirstElement();
ViolationOverviewDoubleClickListener.java,final TreeViewer viewer = this.overview.getViewer();,if (this != null ) final TreeViewer viewer = this.overview.getViewer();
ViolationOverviewDoubleClickListener.java,final TreeViewer viewer = this.overview.getViewer();,if (this != null ) final TreeViewer viewer = this.overview.getViewer();
ViolationOverviewDoubleClickListener.java,final TreeViewer viewer = overview.getViewer();,if (overview != null ) final TreeViewer viewer = overview.getViewer();
ViolationOverviewDoubleClickListener.java,final IWorkbenchPage workbenchPage = this.overview.getSite().getPage();,if (this != null ) final IWorkbenchPage workbenchPage = this.overview.getSite().getPage();
ViolationOverviewDoubleClickListener.java,final ViolationOutlinePageBR vioPage = (ViolationOutlinePageBR)view.getCurrentPage();,if ((ViolationOutlinePageBR)view != null ) final ViolationOutlinePageBR vioPage = (ViolationOutlinePageBR)view.getCurrentPage();
ViolationOverviewLabelProvider.java,int priority = markerRecord.getPriority();,if (markerRecord != null ) int priority = markerRecord.getPriority();
ViolationOverviewLabelProvider.java,projectName = projectRec.getName();,if (projectRec != null ) projectName = projectRec.getName();
ViolationOverviewMenuManager.java,Action collapseAllAction = new CollapseAllAction(overview.getViewer());,if (CollapseAllAction(overview != null ) Action collapseAllAction = new CollapseAllAction(overview.getViewer());
ViolationOverviewMenuManager.java,Tree tree = overview.getViewer().getTree();,if (overview != null ) Tree tree = overview.getViewer().getTree();
AbstractPMDAction.java,PMDPlugin plugin = PMDPlugin.getDefault();,if (PMDPlugin != null ) PMDPlugin plugin = PMDPlugin.getDefault();
AbstractPMDAction.java,stringTable = plugin.getStringTable();,if (plugin != null ) stringTable = plugin.getStringTable();
AbstractViolationSelectionAction.java,ISelection selection = tableViewer.getSelection();,if (tableViewer != null ) ISelection selection = tableViewer.getSelection();
AbstractViolationSelectionAction.java,Iterator<IMarker> i = structuredSelection.iterator();,if (structuredSelection != null ) Iterator<IMarker> i = structuredSelection.iterator();
CalculateStatisticsAction.java,final PackageRecord record = (PackageRecord) item.getData();,if (item != null ) final PackageRecord record = (PackageRecord) item.getData();
CalculateStatisticsAction.java,Object data = item.getData();,if (item != null ) Object data = item.getData();
DisableRuleAction.java,IWorkspace workspace = ResourcesPlugin.getWorkspace();,if (ResourcesPlugin != null ) IWorkspace workspace = ResourcesPlugin.getWorkspace();
MarkerContributionFactory.java,ITextEditor editor = (ITextEditor)page.getActivePart();,if ((ITextEditor)page != null ) ITextEditor editor = (ITextEditor)page.getActivePart();
ProjectFilterAction.java,ViewerFilter[] filters = view.getViewer().getFilters();,if (view != null ) ViewerFilter[] filters = view.getViewer().getFilters();
QuickFixAction.java,IMarkerHelpRegistry registry = IDE.getMarkerHelpRegistry();,if (IDE != null ) IMarkerHelpRegistry registry = IDE.getMarkerHelpRegistry();
QuickFixAction.java,IWorkbench workbench = PlatformUI.getWorkbench();,if (PlatformUI != null ) IWorkbench workbench = PlatformUI.getWorkbench();
QuickFixAction.java,Object[] result = dialog.getResult();,if (dialog != null ) Object[] result = dialog.getResult();
RemoveViolationAction.java,IWorkspace workspace = ResourcesPlugin.getWorkspace();,if (ResourcesPlugin != null ) IWorkspace workspace = ResourcesPlugin.getWorkspace();
ReviewAction.java,final boolean reviewPmdStyle = loadPreferences().isReviewPmdStyleEnabled();,if (loadPreferences() != null ) final boolean reviewPmdStyle = loadPreferences().isReviewPmdStyleEnabled();
ReviewAction.java,Shell shell = Display.getCurrent().getActiveShell();,if (Display != null ) Shell shell = Display.getCurrent().getActiveShell();
ReviewAction.java,IResource resource = marker.getResource();,if (marker != null ) IResource resource = marker.getResource();
ReviewAction.java,IJavaModelStatus status = jme.getJavaModelStatus();,if (jme != null ) IJavaModelStatus status = jme.getJavaModelStatus();
ReviewAction.java,IJavaElement[] elements = status.getElements();,if (status != null ) IJavaElement[] elements = status.getElements();
ReviewAction.java,String additionalCommentPattern = loadPreferences().getReviewAdditionalComment();,if (loadPreferences() != null ) String additionalCommentPattern = loadPreferences().getReviewAdditionalComment();
ReviewAction.java,index = sourceCode.substring(offset).length();,if (sourceCode != null ) index = sourceCode.substring(offset).length();
ReviewAction.java,result = sb.toString();,if (sb != null ) result = sb.toString();
ASTContentProvider.java,int kidCount = node.jjtGetNumChildren();,if (node != null ) int kidCount = node.jjtGetNumChildren();
ASTPainterHelper.java,List<String> lines = CommentUtil.multiLinesIn(comment.getImage());,if (CommentUtil != null ) List<String> lines = CommentUtil.multiLinesIn(comment.getImage());
ASTPainterHelper.java,int labelLength = label.length();,if (label != null ) int labelLength = label.length();
ASTPainterHelper.java,String txt = node.getImage();,if (node != null ) String txt = node.getImage();
ASTPainterHelper.java,Object data = item.getData();,if (item != null ) Object data = item.getData();
ASTPainterHelper.java,String label = node.toString();,if (node != null ) String label = node.toString();
ASTPainterHelper.java,int labelLength = label.length();,if (label != null ) int labelLength = label.length();
ASTUtil.java,"return name == null ? ""??"" : name.getImage();","if (name != null ) return name == null ? ""??"" : name.getImage();"
ASTUtil.java,int length = sb.length();,if (sb != null ) int length = sb.length();
ASTUtil.java,ASTType type = node.getTypeNode();,if (node != null ) ASTType type = node.getTypeNode();
ASTView.java,IPage page = super.getCurrentPage();,if (super != null ) IPage page = super.getCurrentPage();
ASTView.java,IActionBars aBars = getViewSite().getActionBars();,if (getViewSite() != null ) IActionBars aBars = getViewSite().getActionBars();
ASTView.java,IToolBarManager manager = aBars.getToolBarManager();,if (aBars != null ) IToolBarManager manager = aBars.getToolBarManager();
ASTView.java,IMenuManager mmgr = aBars.getMenuManager();,if (aBars != null ) IMenuManager mmgr = aBars.getMenuManager();
ASTViewPage.java,Table table = resultsViewer.getTable();,if (resultsViewer != null ) Table table = resultsViewer.getTable();
ASTViewPage.java,helper = new ASTPainterHelper(tree.getDisplay());,if (ASTPainterHelper(tree != null ) helper = new ASTPainterHelper(tree.getDisplay());
ASTViewPage.java,String source = getDocument().get();,if (getDocument() != null ) String source = getDocument().get();
CommentUtil.java,String line = rawLine.trim();,if (rawLine != null ) String line = rawLine.trim();
NodeImageDeriver.java,NodeImageDeriver deriver = DeriversByType.get(node.getClass());,if (DeriversByType != null ) NodeImageDeriver deriver = DeriversByType.get(node.getClass());
XPathEvaluator.java,Parser parser = languageVersionHandler.getParser(languageVersionHandler.getDefaultParserOptions());,if (languageVersionHandler != null ) Parser parser = languageVersionHandler.getParser(languageVersionHandler.getDefaultParserOptions());
CPDView.java,Tree tree = treeViewer.getTree();,if (treeViewer != null ) Tree tree = treeViewer.getTree();
CPDView.java,Match match = matches.next();,if (matches != null ) Match match = matches.next();
CPDView.java,Iterator<TokenEntry> entryIterator = match.getMarkSet().iterator();,if (match != null ) Iterator<TokenEntry> entryIterator = match.getMarkSet().iterator();
CPDView.java,final TokenEntry entry = entryIterator.next();,if (entryIterator != null ) final TokenEntry entry = entryIterator.next();
CPDView.java,boolean hasResults = iter.hasNext();,if (iter != null ) boolean hasResults = iter.hasNext();
CPDViewDoubleClickEventListener.java,final IStructuredSelection selection = (IStructuredSelection) event.getSelection();,if (event != null ) final IStructuredSelection selection = (IStructuredSelection) event.getSelection();
CPDViewDoubleClickEventListener.java,final Object object = selection.getFirstElement();,if (selection != null ) final Object object = selection.getFirstElement();
CPDViewDoubleClickEventListener.java,final Object value = node.getValue();,if (node != null ) final Object value = node.getValue();
CPDViewDoubleClickEventListener.java,final TreeViewer treeViewer = view.getTreeViewer();,if (view != null ) final TreeViewer treeViewer = view.getTreeViewer();
CPDViewDoubleClickEventListener.java,final IPath path = Path.fromOSString(entry.getTokenSrcID());,if (Path != null ) final IPath path = Path.fromOSString(entry.getTokenSrcID());
CPDViewDoubleClickEventListener.java,final IWorkbenchPage page = this.view.getSite().getPage();,if (this != null ) final IWorkbenchPage page = this.view.getSite().getPage();
CPDViewLabelProvider.java,final Object value = node.getValue();,if (node != null ) final Object value = node.getValue();
CPDViewLabelProvider.java,final Object value = node.getValue();,if (node != null ) final Object value = node.getValue();
CPDViewLabelProvider.java,result = buffer.toString();,if (buffer != null ) result = buffer.toString();
CPDViewLabelProvider.java,final int startLine = entry.getBeginLine();,if (entry != null ) final int startLine = entry.getBeginLine();
CPDViewLabelProvider.java,final IPath path = Path.fromOSString(entry.getTokenSrcID());,if (Path != null ) final IPath path = Path.fromOSString(entry.getTokenSrcID());
CPDViewLabelProvider.java,result = buffer.toString();,if (buffer != null ) result = buffer.toString();
CPDViewLabelProvider.java,final IPath path = Path.fromOSString(entry.getTokenSrcID());,if (Path != null ) final IPath path = Path.fromOSString(entry.getTokenSrcID());
CPDViewTooltipListener.java,final Tree tree = view.getTreeViewer().getTree();,if (view != null ) final Tree tree = view.getTreeViewer().getTree();
CPDViewTooltipListener.java,final Tree tree = view.getTreeViewer().getTree();,if (view != null ) final Tree tree = view.getTreeViewer().getTree();
CPDViewTooltipListener.java,final TreeNode node = (TreeNode) item.getData();,if (item != null ) final TreeNode node = (TreeNode) item.getData();
CPDViewTooltipListener.java,final Match match = (Match) node.getValue();,if (node != null ) final Match match = (Match) node.getValue();
CPDViewTooltipListener.java,final Tree tree = view.getTreeViewer().getTree();,if (view != null ) final Tree tree = view.getTreeViewer().getTree();
CPDViewTooltipListener.java,final Display display = tree.getDisplay();,if (tree != null ) final Display display = tree.getDisplay();
CPDViewTooltipListener.java,final Rectangle treeSize = tree.getClientArea();,if (tree != null ) final Rectangle treeSize = tree.getClientArea();
CPDView2.java,String line = lines.nextToken();,if (lines != null ) String line = lines.nextToken();
CPDView2.java,TreeColumn[] columns = treeViewer.getTree().getColumns();,if (treeViewer != null ) TreeColumn[] columns = treeViewer.getTree().getColumns();
CPDView2.java,columnWidths[i] = columns[i].getWidth();,if (columns[i] != null ) columnWidths[i] = columns[i].getWidth();
CPDView2.java,Tree tree = treeViewer.getTree();,if (treeViewer != null ) Tree tree = treeViewer.getTree();
CPDView2.java,Display disp = tree.getDisplay();,if (tree != null ) Display disp = tree.getDisplay();
CPDView2.java,IStructuredSelection selection = (IStructuredSelection)treeViewer.getSelection();,if ((IStructuredSelection)treeViewer != null ) IStructuredSelection selection = (IStructuredSelection)treeViewer.getSelection();
CPDView2.java,Object[] items = selection.toArray();,if (selection != null ) Object[] items = selection.toArray();
CPDView2.java,int descent = event.gc.getFontMetrics().getDescent();,if (event != null ) int descent = event.gc.getFontMetrics().getDescent();
CPDView2.java,boolean hasResults = iter.hasNext();,if (iter != null ) boolean hasResults = iter.hasNext();
CPDViewLabelProvider2.java,final Object value = node.getValue();,if (node != null ) final Object value = node.getValue();
CPDViewLabelProvider2.java,Object source = node.getValue();,if (node != null ) Object source = node.getValue();
CPDViewLabelProvider2.java,final IPath path = Path.fromOSString(entry.getTokenSrcID());,if (Path != null ) final IPath path = Path.fromOSString(entry.getTokenSrcID());
CPDViewLabelProvider2.java,Set<TokenEntry> entrySet = match.getMarkSet();,if (match != null ) Set<TokenEntry> entrySet = match.getMarkSet();
CPDViewLabelProvider2.java,final Object value = node.getValue();,if (node != null ) final Object value = node.getValue();
CPDViewTooltipListener2.java,Display disp = Display.getCurrent();,if (Display != null ) Display disp = Display.getCurrent();
CPDViewTooltipListener2.java,IPath path = Path.fromOSString(entry.getTokenSrcID());,if (Path != null ) IPath path = Path.fromOSString(entry.getTokenSrcID());
CPDViewTooltipListener2.java,IWorkbenchPage page = view.getSite().getPage();,if (view != null ) IWorkbenchPage page = view.getSite().getPage();
CPDViewTooltipListener2.java,Tree tree = view.getTreeViewer().getTree();,if (view != null ) Tree tree = view.getTreeViewer().getTree();
CPDViewTooltipListener2.java,Shell shell = tree.getShell();,if (tree != null ) Shell shell = tree.getShell();
DataflowAnomalyTableContentProvider.java,final DaaRuleViolation violation = violationsIterator.next();,if (violationsIterator != null ) final DaaRuleViolation violation = violationsIterator.next();
DataflowAnomalyTableContentProvider.java,final DaaRuleViolation violation = violationIterator.next();,if (violationIterator != null ) final DaaRuleViolation violation = violationIterator.next();
DataflowGraph.java,Display display = parent.getDisplay();,if (parent != null ) Display display = parent.getDisplay();
DataflowGraph.java,List<VariableAccess> vars = node.getVariableAccess();,if (node != null ) List<VariableAccess> vars = node.getVariableAccess();
DataflowGraph.java,String indexString = String.valueOf(node.getIndex());,if (String != null ) String indexString = String.valueOf(node.getIndex());
DataflowGraph.java,Display disp = parent.getDisplay();,if (parent != null ) Display disp = parent.getDisplay();
DataflowGraph.java,Display display = parent.getDisplay();,if (parent != null ) Display display = parent.getDisplay();
DataflowGraph.java,Iterator<NodeCanvas> nodeIterator = nodes.iterator();,if (nodes != null ) Iterator<NodeCanvas> nodeIterator = nodes.iterator();
DataflowGraph.java,NodeCanvas node = nodeIterator.next();,if (nodeIterator != null ) NodeCanvas node = nodeIterator.next();
DataflowGraph.java,List<DataFlowNode> flow = node.getDataFlowNode().getFlow();,if (node != null ) List<DataFlowNode> flow = node.getDataFlowNode().getFlow();
DataflowGraph.java,List<DataFlowNode> children = inode.getChildren();,if (inode != null ) List<DataFlowNode> children = inode.getChildren();
DataflowGraph.java,endNode = node.getINode();,if (node != null ) endNode = node.getINode();
DataflowGraph.java,"PathCanvas path = getPath(start.getIndex(), end.getIndex());","if (end != null ) PathCanvas path = getPath(start.getIndex(), end.getIndex());"
DataflowGraphTable.java,GridLayout headerLayout = (GridLayout) header.getLayout();,if (header != null ) GridLayout headerLayout = (GridLayout) header.getLayout();
DataflowGraphTable.java,newWidth += colWidths[k].intValue();,if (colWidths[k] != null ) newWidth += colWidths[k].intValue();
DataflowGraphTable.java,Point bodySize = bodyFrame.getSize();,if (bodyFrame != null ) Point bodySize = bodyFrame.getSize();
DataflowGraphTable.java,Point parentSize = getParent().getSize();,if (getParent() != null ) Point parentSize = getParent().getSize();
DataflowGraphTable.java,ScrollBar horizontal = parent.getHorizontalBar();,if (parent != null ) ScrollBar horizontal = parent.getHorizontalBar();
DataflowGraphTable.java,ScrollBar vertical = parent.getVerticalBar();,if (parent != null ) ScrollBar vertical = parent.getVerticalBar();
DataflowGraphTable.java,ScrollBar horizontalBar = bodyFrame.getHorizontalBar();,if (bodyFrame != null ) ScrollBar horizontalBar = bodyFrame.getHorizontalBar();
DataflowGraphTable.java,ScrollBar verticalBar = bodyFrame.getVerticalBar();,if (bodyFrame != null ) ScrollBar verticalBar = bodyFrame.getVerticalBar();
DataflowGraphTable.java,tablePosition.x = -bodyFrame.getHorizontalBar().getSelection();,if (-bodyFrame != null ) tablePosition.x = -bodyFrame.getHorizontalBar().getSelection();
DataflowGraphTable.java,tablePosition.y = -bodyFrame.getVerticalBar().getSelection();,if (-bodyFrame != null ) tablePosition.y = -bodyFrame.getVerticalBar().getSelection();
DataflowGraphTable.java,Control[] buttons = header.getChildren();,if (header != null ) Control[] buttons = header.getChildren();
DataflowGraphTable.java,int x = bar.getSelection();,if (bar != null ) int x = bar.getSelection();
DataflowGraphTable.java,int y = bar.getSelection();,if (bar != null ) int y = bar.getSelection();
DataflowGraphTable.java,Composite source = (Composite) e.getSource();,if (e != null ) Composite source = (Composite) e.getSource();
DataflowGraphTable.java,xPos += colWidths[i].intValue();,if (colWidths[i] != null ) xPos += colWidths[i].intValue();
DataflowGraphTable.java,int width = colWidths[graphColumn].intValue();,if (colWidths[graphColumn] != null ) int width = colWidths[graphColumn].intValue();
DataflowGraphTable.java,int height = numRows*rowHeight.intValue();,if (numRows*rowHeight != null ) int height = numRows*rowHeight.intValue();
DataflowGraphTable.java,width += colWidths[j].intValue();,if (colWidths[j] != null ) width += colWidths[j].intValue();
DataflowGraphTable.java,yPos += rowHeight.intValue();,if (rowHeight != null ) yPos += rowHeight.intValue();
DataflowGraphTable.java,width += colWidths[j].intValue();,if (colWidths[j] != null ) width += colWidths[j].intValue();
DataflowGraphTable.java,text = data.getData().toString();,if (data != null ) text = data.getData().toString();
DataflowGraphTable.java,style = data.getStyle();,if (data != null ) style = data.getStyle();
DataflowGraphTable.java,xPos += colWidths[j].intValue();,if (colWidths[j] != null ) xPos += colWidths[j].intValue();
DataflowGraphTable.java,xPos += colWidths[j].intValue();,if (colWidths[j] != null ) xPos += colWidths[j].intValue();
DataflowGraphViewer.java,Display display = parent.getDisplay();,if (parent != null ) Display display = parent.getDisplay();
DataflowGraphViewer.java,List<DataFlowNode> dfNodes = dfNode.getChildren();,if (dfNode != null ) List<DataFlowNode> dfNodes = dfNode.getChildren();
DataflowGraphViewer.java,List<VariableAccess> access = dfNode.getVariableAccess();,if (dfNode != null ) List<VariableAccess> access = dfNode.getVariableAccess();
DataflowGraphViewer.java,List<DataFlowNode> flow = node.getDataFlowNode().getFlow();,if (node != null ) List<DataFlowNode> flow = node.getDataFlowNode().getFlow();
DataflowGraphViewer.java,retString = reader.readLine();,if (reader != null ) retString = reader.readLine();
DataflowView.java,IPage page = super.getCurrentPage();,if (super != null ) IPage page = super.getCurrentPage();
DataflowViewPage.java,final DataflowGraph graph = graphViewer.getGraph();,if (graphViewer != null ) final DataflowGraph graph = graphViewer.getGraph();
DataflowViewPage.java,String resourceString = getDocument().get();,if (getDocument() != null ) String resourceString = getDocument().get();
DataflowViewPage.java,String varName = violation.getVariableName();,if (violation != null ) String varName = violation.getVariableName();
DataflowViewPage.java,int beginLine = violation.getBeginLine();,if (violation != null ) int beginLine = violation.getBeginLine();
DataflowViewPage.java,int endLine = violation.getEndLine();,if (violation != null ) int endLine = violation.getEndLine();
DataflowViewPage.java,DataflowGraph graph = graphViewer.getGraph();,if (graphViewer != null ) DataflowGraph graph = graphViewer.getGraph();
RuleEditorView.java,private IPreferences preferences = PMDPlugin.getDefault().loadPreferences();,if (PMDPlugin != null ) private IPreferences preferences = PMDPlugin.getDefault().loadPreferences();
RuleEditorView.java,RuleSet defaultRuleSet = plugin.getPreferencesManager().getRuleSet();,if (plugin != null ) RuleSet defaultRuleSet = plugin.getPreferencesManager().getRuleSet();
RuleEditorView.java,int i =  tabFolder.getSelectionIndex();,if (tabFolder != null ) int i =  tabFolder.getSelectionIndex();
RuleEditorView.java,List<Rule> chosenRules = tableManager.activeRules();,if (tableManager != null ) List<Rule> chosenRules = tableManager.activeRules();
AbstractCellPainterBuilder.java,colourManager = ColourManager.managerFor(Display.getCurrent());,if (ColourManager != null ) colourManager = ColourManager.managerFor(Display.getCurrent());
AbstractCellPainterBuilder.java,standardFont = control.getFont();,if (control != null ) standardFont = control.getFont();
AbstractCellPainterBuilder.java,"hasIssueFont = deriveHasIssueFontFrom(standardFont, control.getDisplay());","if (control != null ) hasIssueFont = deriveHasIssueFontFrom(standardFont, control.getDisplay());"
AbstractCellPainterBuilder.java,Object item = tItem.getData();,if (tItem != null ) Object item = tItem.getData();
AbstractCellPainterBuilder.java,Object item = tItem.getData();,if (tItem != null ) Object item = tItem.getData();
AbstractCellPainterBuilder.java,Object item = tItem.getData();,if (tItem != null ) Object item = tItem.getData();
ColourManager.java,text = text.trim();,if (text != null ) text = text.trim();
ColourManager.java,int length = text.length();,if (text != null ) int length = text.length();
ColourManager.java,Iterator<Color> iter = coloursByRGB.values().iterator();,if (coloursByRGB != null ) Iterator<Color> iter = coloursByRGB.values().iterator();
ResourceManager.java,Image image= desc.createImage();,if (desc != null ) Image image= desc.createImage();
StyledTextBuilder.java,private Display display = Display.getCurrent(); // NOPMD by br on 2/22/11 11:22 PM,if (PM != null ) private Display display = Display.getCurrent(); // NOPMD by br on 2/22/11 11:22 PM
StyledTextBuilder.java,int descent = event.gc.getFontMetrics().getDescent();,if (event != null ) int descent = event.gc.getFontMetrics().getDescent();
StyledTextBuilder.java,final Rectangle textLayoutBounds = layout.getBounds();,if (layout != null ) final Rectangle textLayoutBounds = layout.getBounds();
TextAsColourShapeBuilder.java,Color original = event.gc.getBackground();,if (event != null ) Color original = event.gc.getBackground();
UniqueItemsAsShapeBuilder.java,List<ShapeDescriptor> shapes = new ArrayList<ShapeDescriptor>(values.size());,if (ArrayList<ShapeDescriptor>(values != null ) List<ShapeDescriptor> shapes = new ArrayList<ShapeDescriptor>(values.size());
UniqueItemsAsShapeBuilder.java,ShapeDescriptor desc = shapesByItem.get(iter.next());,if (shapesByItem != null ) ShapeDescriptor desc = shapesByItem.get(iter.next());
UniqueItemsAsShapeBuilder.java,Color original = gc.getBackground();,if (gc != null ) Color original = gc.getBackground();
Util.java,int max = source.length();,if (source != null ) int max = source.length();
Util.java,List<String> fragments = new ArrayList<String>(positions.size());,if (ArrayList<String>(positions != null ) List<String> fragments = new ArrayList<String>(positions.size());
Util.java,"return original == null ? """" : original.trim();","if (original != null ) return original == null ? """" : original.trim();"
Util.java,Color original = event.gc.getBackground();,if (event != null ) Color original = event.gc.getBackground();
Util.java,final Display display = tree.getDisplay();,if (tree != null ) final Display display = tree.getDisplay();
Util.java,Rectangle area = tree.getClientArea();,if (tree != null ) Rectangle area = tree.getClientArea();
Util.java,int columnCount = tree.getColumnCount();,if (tree != null ) int columnCount = tree.getColumnCount();
Util.java,Rectangle rect = event.getBounds();,if (event != null ) Rectangle rect = event.getBounds();
Util.java,Color foreground = gc.getForeground();,if (gc != null ) Color foreground = gc.getForeground();
Util.java,Color background = gc.getBackground();,if (gc != null ) Color background = gc.getBackground();
Util.java,final Display display = tree.getDisplay();,if (tree != null ) final Display display = tree.getDisplay();
Util.java,Rectangle area = tree.getClientArea();,if (tree != null ) Rectangle area = tree.getClientArea();
Util.java,String text = getter.valueFor(rule).toString();,if (getter != null ) String text = getter.valueFor(rule).toString();
Util.java,int columnCount = tree.getColumnCount();,if (tree != null ) int columnCount = tree.getColumnCount();
Util.java,Rectangle rect = event.getBounds();,if (event != null ) Rectangle rect = event.getBounds();
PMDPlugin.java,rsFileName = st.nextToken();,if (st != null ) rsFileName = st.nextToken();
PMDPlugin.java,String srcDir = (String) it.next();,if (it != null ) String srcDir = (String) it.next();
PMDPlugin.java,String name = gel.getEditor().getFileName();,if (gel != null ) String name = gel.getEditor().getFileName();
PMDPlugin.java,rule = (Rule) it.next();,if (it != null ) rule = (Rule) it.next();
PMDPlugin.java,String code = gel.getEditor().getContents();,if (gel != null ) String code = gel.getEditor().getContents();
PMDPlugin.java,String name = gel.getEditor().getFileName();,if (gel != null ) String name = gel.getEditor().getFileName();
PMDPlugin.java,it = listOfFiles.iterator();,if (listOfFiles != null ) it = listOfFiles.iterator();
PMDPlugin.java,File file = (File) it.next();,if (it != null ) File file = (File) it.next();
RuleSetDialog.java,int selectedRow = tableRuleSets.getSelectedRow();,if (tableRuleSets != null ) int selectedRow = tableRuleSets.getSelectedRow();
RuleSetDialog.java,int selectedRow = tableRules.getSelectedRow();,if (tableRules != null ) int selectedRow = tableRules.getSelectedRow();
RuleSetTableModel.java,value = rule[rowIndex].getName();,if (rule[rowIndex] != null ) value = rule[rowIndex].getName();
RuleSetTableModel.java,Iterator it = ruleSet.getRules().iterator();,if (ruleSet != null ) Iterator it = ruleSet.getRules().iterator();
RuleSetsTableModel.java,value = ruleSet[rowIndex].getName();,if (ruleSet[rowIndex] != null ) value = ruleSet[rowIndex].getName();
RuleSetsTableModel.java,value = ruleSet[rowIndex].getFileName();,if (ruleSet[rowIndex] != null ) value = ruleSet[rowIndex].getFileName();
RuleSetsTableModel.java,rule = (Rule) it.next();,if (it != null ) rule = (Rule) it.next();
ActiveRuleSetPropertyGroup.java,RuleSet rs = (RuleSet) e.next();,if (e != null ) RuleSet rs = (RuleSet) e.next();
ActiveRuleSetPropertyGroup.java,Iterator iter = rsf.getRegisteredRuleSets();,if (rsf != null ) Iterator iter = rsf.getRegisteredRuleSets();
ActiveRuleSetPropertyGroup.java,RuleSet rs = (RuleSet) iter.next();,if (iter != null ) RuleSet rs = (RuleSet) iter.next();
ActiveRuleSetPropertyPage.java,RuleSetProperty rsp = (RuleSetProperty) iter.next();,if (iter != null ) RuleSetProperty rsp = (RuleSetProperty) iter.next();
ActiveRuleSetPropertyPage.java,ListEntry le = (ListEntry) e.nextElement();,if (e != null ) ListEntry le = (ListEntry) e.nextElement();
ActiveRuleSetPropertyPage.java,ListEntry le = (ListEntry) e.nextElement();,if (e != null ) ListEntry le = (ListEntry) e.nextElement();
ActiveRuleSetPropertyPage.java,int selectedIndex = jlistAvailableRuleSets.getSelectedIndex();,if (jlistAvailableRuleSets != null ) int selectedIndex = jlistAvailableRuleSets.getSelectedIndex();
ActiveRuleSetPropertyPage.java,selectedIndex = jlistAvailableRuleSets.getSelectedIndex();,if (jlistAvailableRuleSets != null ) selectedIndex = jlistAvailableRuleSets.getSelectedIndex();
ActiveRuleSetPropertyPage.java,int selectedIndex = jlistSelectedRuleSets.getSelectedIndex();,if (jlistSelectedRuleSets != null ) int selectedIndex = jlistSelectedRuleSets.getSelectedIndex();
ActiveRuleSetPropertyPage.java,selectedIndex = jlistSelectedRuleSets.getSelectedIndex();,if (jlistSelectedRuleSets != null ) selectedIndex = jlistSelectedRuleSets.getSelectedIndex();
CPDMessage.java,EditorPane editor = viewer.getEditor();,if (viewer != null ) EditorPane editor = viewer.getEditor();
CodeFragmentMessage.java,String line = reader.readLine();,if (reader != null ) String line = reader.readLine();
CodeFragmentMessage.java,line = reader.readLine();,if (reader != null ) line = reader.readLine();
ConfigureRuleSetPropertyPage.java,RuleSetProperty rsp = (RuleSetProperty) iter.next();,if (iter != null ) RuleSetProperty rsp = (RuleSetProperty) iter.next();
ConfigureRuleSetPropertyPage.java,RuleSetProperty rsp = (RuleSetProperty) iter.next();,if (iter != null ) RuleSetProperty rsp = (RuleSetProperty) iter.next();
ConfigureRuleSetPropertyPage.java,RuleSetProperty rsp = (RuleSetProperty) iter.next();,if (iter != null ) RuleSetProperty rsp = (RuleSetProperty) iter.next();
ConfigureRuleSetPropertyPage.java,RuleSetProperty rsp = (RuleSetProperty) iter.next();,if (iter != null ) RuleSetProperty rsp = (RuleSetProperty) iter.next();
ConfigureRuleSetPropertyPage.java,Rule rule = (Rule) iter.next();,if (iter != null ) Rule rule = (Rule) iter.next();
ConfigureRuleSetPropertyPage.java,String ruleName = rule.getName();,if (rule != null ) String ruleName = rule.getName();
ConfigureRuleSetPropertyPage.java,int index = list.getSelectedIndex();,if (list != null ) int index = list.getSelectedIndex();
ConfigureRuleSetPropertyPage.java,int index = list.getSelectedIndex();,if (list != null ) int index = list.getSelectedIndex();
ConfigureRuleSetPropertyPage.java,String ruleSetName = listRuleSets.getSelectedValue().toString();,if (listRuleSets != null ) String ruleSetName = listRuleSets.getSelectedValue().toString();
ImportedRuleSetPropertyGroup.java,String ruleSetFileName = st.nextToken();,if (st != null ) String ruleSetFileName = st.nextToken();
ImportedRuleSetPropertyPage.java,RuleSet rs = (RuleSet) iter.next();,if (iter != null ) RuleSet rs = (RuleSet) iter.next();
ImportedRuleSetPropertyPage.java,String fileName = tfRuleSetFileName.getText();,if (tfRuleSetFileName != null ) String fileName = tfRuleSetFileName.getText();
ImportedRuleSetPropertyPage.java,int index = listImportedRuleSets.getSelectedIndex();,if (listImportedRuleSets != null ) int index = listImportedRuleSets.getSelectedIndex();
PMDMessage.java,EditorPane editor = viewer.getEditor();,if (viewer != null ) EditorPane editor = viewer.getEditor();
PMDOpenTool.java,Node node = browser.getProjectView().getSelectedNode();,if (browser != null ) Node node = browser.getProjectView().getSelectedNode();
PMDOpenTool.java,Node node = Browser.getActiveBrowser().getActiveNode();,if (Browser != null ) Node node = Browser.getActiveBrowser().getActiveNode();
PMDOpenTool.java,Document doc = viewer.getEditor().getDocument();,if (viewer != null ) Document doc = viewer.getEditor().getDocument();
PMDOpenTool.java,Node[] fileNodes = packageNode.getDisplayChildren();,if (packageNode != null ) Node[] fileNodes = packageNode.getDisplayChildren();
PMDOpenTool.java,InputStream is = javaNode.getInputStream();,if (javaNode != null ) InputStream is = javaNode.getInputStream();
PMDOpenTool.java,Node[] fileNodes = packageNode.getDisplayChildren();,if (packageNode != null ) Node[] fileNodes = packageNode.getDisplayChildren();
PMDOpenTool.java,Match m = (Match) i.next();,if (i != null ) Match m = (Match) i.next();
RuleSetProperty.java,Rule rule = (Rule) iter.next();,if (iter != null ) Rule rule = (Rule) iter.next();
RuleSetProperty.java,"String propName = buildPropName(originalRuleSet.getName(), rule.getName());","if (rule != null ) String propName = buildPropName(originalRuleSet.getName(), rule.getName());"
RuleSetProperty.java,Rule rule = (Rule) iter.next();,if (iter != null ) Rule rule = (Rule) iter.next();
RuleSetProperty.java,"String propName = buildPropName(originalRuleSet.getName(), rule.getName());","if (rule != null ) String propName = buildPropName(originalRuleSet.getName(), rule.getName());"
RuleSetProperty.java,Rule rule = (Rule) iter.next();,if (iter != null ) Rule rule = (Rule) iter.next();
RuleSetProperty.java,"String propName = buildPropName(originalRuleSet.getName(), rule.getName());","if (rule != null ) String propName = buildPropName(originalRuleSet.getName(), rule.getName());"
RuleSetProperty.java,Boolean selectionState = Boolean.valueOf(gp.getValue());,if (Boolean != null ) Boolean selectionState = Boolean.valueOf(gp.getValue());
FileStorage.java,final String key = (String)i.next();,if ((String)i != null ) final String key = (String)i.next();
IDEStorage.java,final String key = (String)i.next();,if ((String)i != null ) final String key = (String)i.next();
Plugin.java,final TokenEntry mark = (TokenEntry)i.next();,if ((TokenEntry)i != null ) final TokenEntry mark = (TokenEntry)i.next();
Plugin.java,final Project project = (Project)context.getElement();,if ((Project)context != null ) final Project project = (Project)context.getElement();
Plugin.java,final Project project = (Project)context.getElement();,if ((Project)context != null ) final Project project = (Project)context.getElement();
Plugin.java,final LogPage page = LogManager.getLogManager().getMsgPage();,if (LogManager != null ) final LogPage page = LogManager.getLogManager().getMsgPage();
Plugin.java,final Element doc = contextMenu.getContext().getElement();,if (contextMenu != null ) final Element doc = contextMenu.getContext().getElement();
Plugin.java,final LogPage page = LogManager.getLogManager().getMsgPage();,if (LogManager != null ) final LogPage page = LogManager.getLogManager().getMsgPage();
Plugin.java,final RuleViolation viol = (RuleViolation)i.next();,if ((RuleViolation)i != null ) final RuleViolation viol = (RuleViolation)i.next();
Plugin.java,final Object obj = iter.next();,if (iter != null ) final Object obj = iter.next();
Plugin.java,final Object obj = iter.next();,if (iter != null ) final Object obj = iter.next();
SelectedRules.java,final RuleSet rset = (RuleSet)i.next();,if ((RuleSet)i != null ) final RuleSet rset = (RuleSet)i.next();
SelectedRules.java,final Rule rule = (Rule)j.next();,if ((Rule)j != null ) final Rule rule = (Rule)j.next();
SelectedRules.java,final Rule rule = (Rule)i.next();,if ((Rule)i != null ) final Rule rule = (Rule)i.next();
SelectedRules.java,final Rule rule = (Rule)i.next();,if ((Rule)i != null ) final Rule rule = (Rule)i.next();
SelectedRules.java,final Rule rule = (Rule)i.next();,if ((Rule)i != null ) final Rule rule = (Rule)i.next();
SettingsPanel.java,final String selected = fdlg.getDirectory() + fdlg.getFile();,if (fdlg != null ) final String selected = fdlg.getDirectory() + fdlg.getFile();
SettingsPanel.java,final int index = locationToIndex(evt.getPoint());,if (locationToIndex(evt != null ) final int index = locationToIndex(evt.getPoint());
SettingsPanel.java,final int index = locationToIndex(evt.getPoint());,if (locationToIndex(evt != null ) final int index = locationToIndex(evt.getPoint());
SettingsPanel.java,final List examples = rules.getRule(box).getExamples();,if (rules != null ) final List examples = rules.getRule(box).getExamples();
SettingsPanel.java,String example = examplesBuffer.toString();,if (examplesBuffer != null ) String example = examplesBuffer.toString();
SettingsPanel.java,final JList rulesList = new CheckboxList(rules.getAllBoxes());,if (CheckboxList(rules != null ) final JList rulesList = new CheckboxList(rules.getAllBoxes());
Version.java,final JProject project = (JProject) context.getProject();,if (context != null ) final JProject project = (JProject) context.getProject();
CPDViolationPage.java,final TokenEntry mark = (TokenEntry)i.next();,if ((TokenEntry)i != null ) final TokenEntry mark = (TokenEntry)i.next();
FileStorage.java,final String key = (String)i.next();,if ((String)i != null ) final String key = (String)i.next();
Plugin.java,final Project project = (Project)context.getElement();,if ((Project)context != null ) final Project project = (Project)context.getElement();
Plugin.java,final LogPage page = LogManager.getLogManager().getMsgPage();,if (LogManager != null ) final LogPage page = LogManager.getLogManager().getMsgPage();
Plugin.java,final Project project = (Project)context.getElement();,if ((Project)context != null ) final Project project = (Project)context.getElement();
Plugin.java,final Element doc = contextMenu.getContext().getElement();,if (contextMenu != null ) final Element doc = contextMenu.getContext().getElement();
Plugin.java,final View view = contextMenu.getContext().getView();,if (contextMenu != null ) final View view = contextMenu.getContext().getView();
Plugin.java,final LogPage page = LogManager.getLogManager().getMsgPage();,if (LogManager != null ) final LogPage page = LogManager.getLogManager().getMsgPage();
Plugin.java,final RuleViolation viol = (RuleViolation)i.next();,if ((RuleViolation)i != null ) final RuleViolation viol = (RuleViolation)i.next();
Plugin.java,final Object obj = iter.next();,if (iter != null ) final Object obj = iter.next();
Plugin.java,final Object obj = iter.next();,if (iter != null ) final Object obj = iter.next();
SelectedRules.java,final RuleSet rset = iter.next();,if (iter != null ) final RuleSet rset = iter.next();
SettingsPanel.java,final String selected = fdlg.getDirectory() + fdlg.getFile();,if (fdlg != null ) final String selected = fdlg.getDirectory() + fdlg.getFile();
SettingsPanel.java,final String selected = fdlg.getDirectory() + fdlg.getFile();,if (fdlg != null ) final String selected = fdlg.getDirectory() + fdlg.getFile();
SettingsPanel.java,String selected = fdlg.getDirectory() + fdlg.getFile();,if (fdlg != null ) String selected = fdlg.getDirectory() + fdlg.getFile();
SettingsPanel.java,final int index = locationToIndex(evt.getPoint());,if (locationToIndex(evt != null ) final int index = locationToIndex(evt.getPoint());
SettingsPanel.java,final int index = locationToIndex(evt.getPoint());,if (locationToIndex(evt != null ) final int index = locationToIndex(evt.getPoint());
SettingsPanel.java,final List examples = rules.getRule(box).getExamples();,if (rules != null ) final List examples = rules.getRule(box).getExamples();
SettingsPanel.java,String example = examplesBuffer.toString();,if (examplesBuffer != null ) String example = examplesBuffer.toString();
SettingsPanel.java,rulesList = new CheckboxList(rules.getAllBoxes());,if (CheckboxList(rules != null ) rulesList = new CheckboxList(rules.getAllBoxes());
SettingsPanel.java,final ListModel model = rulesList.getModel();,if (rulesList != null ) final ListModel model = rulesList.getModel();
SettingsPanel.java,final ListModel model = rulesList.getModel();,if (rulesList != null ) final ListModel model = rulesList.getModel();
SettingsPanel.java,final RuleSet selectedRules = rules.getSelectedRules();,if (rules != null ) final RuleSet selectedRules = rules.getSelectedRules();
Version.java,final String source = config.getSource();,if (config != null ) final String source = config.getSource();
CpdCommand.java,final RelativeDirectoryContextFolder folder = (RelativeDirectoryContextFolder)context.getElement();,if ((RelativeDirectoryContextFolder)context != null ) final RelativeDirectoryContextFolder folder = (RelativeDirectoryContextFolder)context.getElement();
CpdCommand.java,final Project project = (Project)context.getElement();,if ((Project)context != null ) final Project project = (Project)context.getElement();
CpdCommand.java,final LogPage page = LogManager.getLogManager().getMsgPage();,if (LogManager != null ) final LogPage page = LogManager.getLogManager().getMsgPage();
CpdCommand.java,final Object obj = iter.next();,if (iter != null ) final Object obj = iter.next();
CpdViolationPage.java,final TokenEntry mark = (TokenEntry)i.next();,if ((TokenEntry)i != null ) final TokenEntry mark = (TokenEntry)i.next();
FileStorage.java,final String key = (String)i.next();,if ((String)i != null ) final String key = (String)i.next();
PmdCommand.java,final PmdSelectedRules rules = new PmdSelectedRules(PmdSettingsPanel.createSettingsStorage());,if (PmdSelectedRules(PmdSettingsPanel != null ) final PmdSelectedRules rules = new PmdSelectedRules(PmdSettingsPanel.createSettingsStorage());
PmdCommand.java,final RelativeDirectoryContextFolder folder = (RelativeDirectoryContextFolder)context.getElement();,if ((RelativeDirectoryContextFolder)context != null ) final RelativeDirectoryContextFolder folder = (RelativeDirectoryContextFolder)context.getElement();
PmdCommand.java,final Workspace workspace = (Workspace)context.getElement();,if ((Workspace)context != null ) final Workspace workspace = (Workspace)context.getElement();
PmdCommand.java,final Project project = (Project)context.getElement();,if ((Project)context != null ) final Project project = (Project)context.getElement();
PmdCommand.java,final Node candidate = context.getNode();,if (context != null ) final Node candidate = context.getNode();
PmdCommand.java,final Object obj = iter.next();,if (iter != null ) final Object obj = iter.next();
PmdCommand.java,Iterator children = dataContainer.getChildren();,if (dataContainer != null ) Iterator children = dataContainer.getChildren();
PmdCommand.java,final LogPage page = LogManager.getLogManager().getMsgPage();,if (LogManager != null ) final LogPage page = LogManager.getLogManager().getMsgPage();
PmdCommand.java,final RuleViolation viol = (RuleViolation)i.next();,if ((RuleViolation)i != null ) final RuleViolation viol = (RuleViolation)i.next();
PmdSelectedRules.java,final RuleSet rset = iter.next();,if (iter != null ) final RuleSet rset = iter.next();
PmdSettingsPanel.java,final String selected = fdlg.getDirectory() + fdlg.getFile();,if (fdlg != null ) final String selected = fdlg.getDirectory() + fdlg.getFile();
PmdSettingsPanel.java,final String selected = fdlg.getDirectory() + fdlg.getFile();,if (fdlg != null ) final String selected = fdlg.getDirectory() + fdlg.getFile();
PmdSettingsPanel.java,final String selected = fdlg.getDirectory() + fdlg.getFile();,if (fdlg != null ) final String selected = fdlg.getDirectory() + fdlg.getFile();
PmdSettingsPanel.java,final int index = locationToIndex(evt.getPoint());,if (locationToIndex(evt != null ) final int index = locationToIndex(evt.getPoint());
PmdSettingsPanel.java,final int index = locationToIndex(evt.getPoint());,if (locationToIndex(evt != null ) final int index = locationToIndex(evt.getPoint());
PmdSettingsPanel.java,final List examples = rules.getRule(box).getExamples();,if (rules != null ) final List examples = rules.getRule(box).getExamples();
PmdSettingsPanel.java,String example = examplesBuffer.toString();,if (examplesBuffer != null ) String example = examplesBuffer.toString();
PmdSettingsPanel.java,rulesList = new CheckboxList(rules.getAllBoxes());,if (CheckboxList(rules != null ) rulesList = new CheckboxList(rules.getAllBoxes());
PmdSettingsPanel.java,final ListModel model = rulesList.getModel();,if (rulesList != null ) final ListModel model = rulesList.getModel();
PmdSettingsPanel.java,final ListModel model = rulesList.getModel();,if (rulesList != null ) final ListModel model = rulesList.getModel();
PmdSettingsPanel.java,final RuleSet selectedRules = rules.getSelectedRules();,if (rules != null ) final RuleSet selectedRules = rules.getSelectedRules();
Version.java,final String source = config.getSource();,if (config != null ) final String source = config.getSource();
CpdCommand.java,final RelativeDirectoryContextFolder folder = (RelativeDirectoryContextFolder)context.getElement();,if ((RelativeDirectoryContextFolder)context != null ) final RelativeDirectoryContextFolder folder = (RelativeDirectoryContextFolder)context.getElement();
CpdCommand.java,final Project project = (Project)context.getElement();,if ((Project)context != null ) final Project project = (Project)context.getElement();
CpdCommand.java,final LogPage page = LogManager.getLogManager().getMsgPage();,if (LogManager != null ) final LogPage page = LogManager.getLogManager().getMsgPage();
CpdCommand.java,final Object obj = iter.next();,if (iter != null ) final Object obj = iter.next();
CpdViolationPage.java,final TokenEntry mark = (TokenEntry)i.next();,if ((TokenEntry)i != null ) final TokenEntry mark = (TokenEntry)i.next();
FileStorage.java,final String key = (String)i.next();,if ((String)i != null ) final String key = (String)i.next();
PmdCommand.java,final PmdSelectedRules rules = new PmdSelectedRules(PmdSettingsPanel.createSettingsStorage());,if (PmdSelectedRules(PmdSettingsPanel != null ) final PmdSelectedRules rules = new PmdSelectedRules(PmdSettingsPanel.createSettingsStorage());
PmdCommand.java,final RelativeDirectoryContextFolder folder = (RelativeDirectoryContextFolder)context.getElement();,if ((RelativeDirectoryContextFolder)context != null ) final RelativeDirectoryContextFolder folder = (RelativeDirectoryContextFolder)context.getElement();
PmdCommand.java,final Workspace workspace = (Workspace)context.getElement();,if ((Workspace)context != null ) final Workspace workspace = (Workspace)context.getElement();
PmdCommand.java,final Project project = (Project)context.getElement();,if ((Project)context != null ) final Project project = (Project)context.getElement();
PmdCommand.java,final Node candidate = context.getNode();,if (context != null ) final Node candidate = context.getNode();
PmdCommand.java,final Object obj = iter.next();,if (iter != null ) final Object obj = iter.next();
PmdCommand.java,Iterator children = dataContainer.getChildren();,if (dataContainer != null ) Iterator children = dataContainer.getChildren();
PmdCommand.java,final LogPage page = LogManager.getLogManager().getMsgPage();,if (LogManager != null ) final LogPage page = LogManager.getLogManager().getMsgPage();
PmdCommand.java,final RuleViolation viol = (RuleViolation)i.next();,if ((RuleViolation)i != null ) final RuleViolation viol = (RuleViolation)i.next();
PmdSelectedRules.java,final RuleSet rset = iter.next();,if (iter != null ) final RuleSet rset = iter.next();
PmdSettingsPanel.java,final String selected = fdlg.getDirectory() + fdlg.getFile();,if (fdlg != null ) final String selected = fdlg.getDirectory() + fdlg.getFile();
PmdSettingsPanel.java,final String selected = fdlg.getDirectory() + fdlg.getFile();,if (fdlg != null ) final String selected = fdlg.getDirectory() + fdlg.getFile();
PmdSettingsPanel.java,final String selected = fdlg.getDirectory() + fdlg.getFile();,if (fdlg != null ) final String selected = fdlg.getDirectory() + fdlg.getFile();
PmdSettingsPanel.java,final int index = locationToIndex(evt.getPoint());,if (locationToIndex(evt != null ) final int index = locationToIndex(evt.getPoint());
PmdSettingsPanel.java,final int index = locationToIndex(evt.getPoint());,if (locationToIndex(evt != null ) final int index = locationToIndex(evt.getPoint());
PmdSettingsPanel.java,final List examples = rules.getRule(box).getExamples();,if (rules != null ) final List examples = rules.getRule(box).getExamples();
PmdSettingsPanel.java,String example = examplesBuffer.toString();,if (examplesBuffer != null ) String example = examplesBuffer.toString();
PmdSettingsPanel.java,rulesList = new CheckboxList(rules.getAllBoxes());,if (CheckboxList(rules != null ) rulesList = new CheckboxList(rules.getAllBoxes());
PmdSettingsPanel.java,final ListModel model = rulesList.getModel();,if (rulesList != null ) final ListModel model = rulesList.getModel();
PmdSettingsPanel.java,final ListModel model = rulesList.getModel();,if (rulesList != null ) final ListModel model = rulesList.getModel();
PmdSettingsPanel.java,final RuleSet selectedRules = rules.getSelectedRules();,if (rules != null ) final RuleSet selectedRules = rules.getSelectedRules();
Version.java,final String source = config.getSource();,if (config != null ) final String source = config.getSource();
CpdCommand.java,final RelativeDirectoryContextFolder folder = (RelativeDirectoryContextFolder)context.getElement();,if ((RelativeDirectoryContextFolder)context != null ) final RelativeDirectoryContextFolder folder = (RelativeDirectoryContextFolder)context.getElement();
CpdCommand.java,final Project project = (Project)context.getElement();,if ((Project)context != null ) final Project project = (Project)context.getElement();
CpdCommand.java,final LogPage page = LogManager.getLogManager().getMsgPage();,if (LogManager != null ) final LogPage page = LogManager.getLogManager().getMsgPage();
CpdCommand.java,final Object obj = iter.next();,if (iter != null ) final Object obj = iter.next();
CpdViolationPage.java,final TokenEntry mark = (TokenEntry)i.next();,if ((TokenEntry)i != null ) final TokenEntry mark = (TokenEntry)i.next();
FileStorage.java,final String key = (String)i.next();,if ((String)i != null ) final String key = (String)i.next();
PmdCommand.java,final PmdSelectedRules rules = new PmdSelectedRules(PmdSettingsPanel.createSettingsStorage());,if (PmdSelectedRules(PmdSettingsPanel != null ) final PmdSelectedRules rules = new PmdSelectedRules(PmdSettingsPanel.createSettingsStorage());
PmdCommand.java,final RelativeDirectoryContextFolder folder = (RelativeDirectoryContextFolder)context.getElement();,if ((RelativeDirectoryContextFolder)context != null ) final RelativeDirectoryContextFolder folder = (RelativeDirectoryContextFolder)context.getElement();
PmdCommand.java,final Workspace workspace = (Workspace)context.getElement();,if ((Workspace)context != null ) final Workspace workspace = (Workspace)context.getElement();
PmdCommand.java,final Project project = (Project)context.getElement();,if ((Project)context != null ) final Project project = (Project)context.getElement();
PmdCommand.java,final Node candidate = context.getNode();,if (context != null ) final Node candidate = context.getNode();
PmdCommand.java,final Object obj = iter.next();,if (iter != null ) final Object obj = iter.next();
PmdCommand.java,Iterator children = dataContainer.getChildren();,if (dataContainer != null ) Iterator children = dataContainer.getChildren();
PmdCommand.java,final LogPage page = LogManager.getLogManager().getMsgPage();,if (LogManager != null ) final LogPage page = LogManager.getLogManager().getMsgPage();
PmdCommand.java,final RuleViolation viol = (RuleViolation)i.next();,if ((RuleViolation)i != null ) final RuleViolation viol = (RuleViolation)i.next();
PmdSelectedRules.java,final RuleSet rset = iter.next();,if (iter != null ) final RuleSet rset = iter.next();
PmdSettingsPanel.java,final String selected = fdlg.getDirectory() + fdlg.getFile();,if (fdlg != null ) final String selected = fdlg.getDirectory() + fdlg.getFile();
PmdSettingsPanel.java,final String selected = fdlg.getDirectory() + fdlg.getFile();,if (fdlg != null ) final String selected = fdlg.getDirectory() + fdlg.getFile();
PmdSettingsPanel.java,final String selected = fdlg.getDirectory() + fdlg.getFile();,if (fdlg != null ) final String selected = fdlg.getDirectory() + fdlg.getFile();
PmdSettingsPanel.java,final int index = locationToIndex(evt.getPoint());,if (locationToIndex(evt != null ) final int index = locationToIndex(evt.getPoint());
PmdSettingsPanel.java,final int index = locationToIndex(evt.getPoint());,if (locationToIndex(evt != null ) final int index = locationToIndex(evt.getPoint());
PmdSettingsPanel.java,final List examples = rules.getRule(box).getExamples();,if (rules != null ) final List examples = rules.getRule(box).getExamples();
PmdSettingsPanel.java,String example = examplesBuffer.toString();,if (examplesBuffer != null ) String example = examplesBuffer.toString();
PmdSettingsPanel.java,rulesList = new CheckboxList(rules.getAllBoxes());,if (CheckboxList(rules != null ) rulesList = new CheckboxList(rules.getAllBoxes());
PmdSettingsPanel.java,final ListModel model = rulesList.getModel();,if (rulesList != null ) final ListModel model = rulesList.getModel();
PmdSettingsPanel.java,final ListModel model = rulesList.getModel();,if (rulesList != null ) final ListModel model = rulesList.getModel();
PmdSettingsPanel.java,final RuleSet selectedRules = rules.getSelectedRules();,if (rules != null ) final RuleSet selectedRules = rules.getSelectedRules();
Version.java,final String source = config.getSource();,if (config != null ) final String source = config.getSource();
JJTXPath2ParserState.java,nodes = new java.util.Stack();,if (java != null ) nodes = new java.util.Stack();
JJTXPath2ParserState.java,marks = new java.util.Stack();,if (java != null ) marks = new java.util.Stack();
ParseException.java,retval += expected.toString();,if (expected != null ) retval += expected.toString();
XPath2Parser.java,int[] oldentry = (int[])(e.nextElement());,if ((int[])(e != null ) int[] oldentry = (int[])(e.nextElement());
CoreXPath2ParserVisitor.java,ASTXPath xpath = parser.XPath();,if (parser != null ) ASTXPath xpath = parser.XPath();
PrintXPath2ParserVisitor.java,ASTXPath xpath = parser.XPath();,if (parser != null ) ASTXPath xpath = parser.XPath();
NodeAccessorAxisNavigator.java,iterator = list.iterator();,if (list != null ) iterator = list.iterator();
XPath2ParserTest.java,ASTXPath xpath = parse(query.getXPath());,if (parse(query != null ) ASTXPath xpath = parse(query.getXPath());
XPath2ParserTest.java,ASTXPath xpath = parse(query.getXPath());,if (parse(query != null ) ASTXPath xpath = parse(query.getXPath());
AbstractPrintVisitorTest.java,String result = visitor.getOutput();,if (visitor != null ) String result = visitor.getOutput();
JDBCReportListener.java,keys = ins.getGeneratedKeys();,if (ins != null ) keys = ins.getGeneratedKeys();
MissingPrivateInnerClassConstructorRule.java,ASTConstructorDeclaration c = (ASTConstructorDeclaration)i.next();,if ((ASTConstructorDeclaration)i != null ) ASTConstructorDeclaration c = (ASTConstructorDeclaration)i.next();
Fault.java,Throwable reason = exception.getCause();,if (exception != null ) Throwable reason = exception.getCause();
Fault.java,this.message = exception.getMessage();,if (exception != null ) this.message = exception.getMessage();
Fault.java,"this.message = exception.getMessage() + ""; "" + reason.toString();","if (reason != null ) this.message = exception.getMessage() + ""; "" + reason.toString();"
Fault.java,"this.message = exception.getMessage() + ""; "" + reason.getMessage();","if (reason != null ) this.message = exception.getMessage() + ""; "" + reason.getMessage();"
NbRuleSetFactory.java,String ruleSetName = st.nextToken().trim();,if (st != null ) String ruleSetName = st.nextToken().trim();
NbRuleSetFactory.java,DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();,if (DocumentBuilderFactory != null ) DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();
NbRuleSetFactory.java,Element root = doc.getDocumentElement();,if (doc != null ) Element root = doc.getDocumentElement();
NbRuleSetFactory.java,rule = externalRuleSet.getRuleByName(externalRuleID.getRuleName());,if (externalRuleSet != null ) rule = externalRuleSet.getRuleByName(externalRuleID.getRuleName());
NbRuleSetFactory.java,Node node = ruleNode.getFirstChild();,if (ruleNode != null ) Node node = ruleNode.getFirstChild();
NbRuleSetFactory.java,Node propNode = node.getFirstChild().getNextSibling();,if (node != null ) Node propNode = node.getFirstChild().getNextSibling();
NbRuleSetFactory.java,propNode = propNode.getNextSibling().getNextSibling();,if (propNode != null ) propNode = propNode.getNextSibling().getNextSibling();
NbRuleSetFactory.java,node = node.getNextSibling();,if (node != null ) node = node.getNextSibling();
OutputWindow.java,int row = tblResults.rowAtPoint(e.getPoint());,if (tblResults != null ) int row = tblResults.rowAtPoint(e.getPoint());
OutputWindow.java,int row = tblResults.getSelectedRow();,if (tblResults != null ) int row = tblResults.getSelectedRow();
OutputWindow.java,int selectedRow = tblResults.getSelectedRow();,if (tblResults != null ) int selectedRow = tblResults.getSelectedRow();
OutputWindow.java,int selectedRow = tblResults.getSelectedRow();,if (tblResults != null ) int selectedRow = tblResults.getSelectedRow();
OutputWindow.java,Set lineset = cookie.getLineSet();,if (cookie != null ) Set lineset = cookie.getLineSet();
OutputWindow.java,PMDAnnotation annotation = PMDAnnotation.getNewInstance();,if (PMDAnnotation != null ) PMDAnnotation annotation = PMDAnnotation.getNewInstance();
OutputWindow.java,value = violation.getFault();,if (violation != null ) value = violation.getFault();
OutputWindow.java,String faultStr = fault.getFault();,if (fault != null ) String faultStr = fault.getFault();
OutputWindow.java,String msg = fault.getMessage();,if (fault != null ) String msg = fault.getMessage();
OutputWindow.java,String msg = fault.getMessage();,if (fault != null ) String msg = fault.getMessage();
PMDAnnotation.java,Line line = ( Line )propertyChangeEvent.getSource();,if ()propertyChangeEvent != null ) Line line = ( Line )propertyChangeEvent.getSource();
RunPMDAction.java,FileObject fobj = dataobject.getPrimaryFile();,if (dataobject != null ) FileObject fobj = dataobject.getPrimaryFile();
RunPMDAction.java,RuleViolation violation = ( RuleViolation )iterator.next();,if ()iterator != null ) RuleViolation violation = ( RuleViolation )iterator.next();
RunPMDAction.java,OutputWindow wnd = OutputWindow.findInstance();,if (OutputWindow != null ) OutputWindow wnd = OutputWindow.findInstance();
RunPMDAction.java,List list = PMDOptionsSettings.getDefault().getRuleList();,if (PMDOptionsSettings != null ) List list = PMDOptionsSettings.getDefault().getRuleList();
RunPMDAction.java,Iterator iterator = list.iterator();,if (list != null ) Iterator iterator = list.iterator();
RunPMDAction.java,StyledDocument doc = editor.getDocument();,if (editor != null ) StyledDocument doc = editor.getDocument();
RunPMDAction.java,Charset cs = FileEncodingQuery.getEncoding (dataobject.getPrimaryFile());,if ((dataobject != null ) Charset cs = FileEncodingQuery.getEncoding (dataobject.getPrimaryFile());
RunPMDAction.java,Iterator iterator = dataobject.files().iterator();,if (dataobject != null ) Iterator iterator = dataobject.files().iterator();
RunPMDAction.java,FileObject file = ( FileObject )iterator.next();,if ()iterator != null ) FileObject file = ( FileObject )iterator.next();
RunPMDAction.java,DataObject dataobject = enumeration.nextElement();,if (enumeration != null ) DataObject dataobject = enumeration.nextElement();
TableSorter.java,TableCellRenderer defaultRenderer = this.tableHeader.getDefaultRenderer();,if (this != null ) TableCellRenderer defaultRenderer = this.tableHeader.getDefaultRenderer();
TableSorter.java,int tableModelRowCount = tableModel.getRowCount();,if (tableModel != null ) int tableModelRowCount = tableModel.getRowCount();
TableSorter.java,JTableHeader h = (JTableHeader) e.getSource();,if (e != null ) JTableHeader h = (JTableHeader) e.getSource();
TableSorter.java,int viewColumn = columnModel.getColumnIndexAtX(e.getX());,if (columnModel != null ) int viewColumn = columnModel.getColumnIndexAtX(e.getX());
TableSorter.java,int column = columnModel.getColumn(viewColumn).getModelIndex();,if (columnModel != null ) int column = columnModel.getColumn(viewColumn).getModelIndex();
ConfigUtils.java,Iterator iterator = ruleList.iterator();,if (ruleList != null ) Iterator iterator = ruleList.iterator();
ConfigUtils.java,Rule rule = ( Rule )iterator.next();,if ()iterator != null ) Rule rule = ( Rule )iterator.next();
ConfigUtils.java,CustomRuleSetSettings settings = PMDOptionsSettings.getDefault().getRulesets();,if (PMDOptionsSettings != null ) CustomRuleSetSettings settings = PMDOptionsSettings.getDefault().getRulesets();
ConfigUtils.java,Iterator<RuleSet> iterator = ruleSetFactory.getRegisteredRuleSets();,if (ruleSetFactory != null ) Iterator<RuleSet> iterator = ruleSetFactory.getRegisteredRuleSets();
ConfigUtils.java,RuleSet ruleset = iterator.next();,if (iterator != null ) RuleSet ruleset = iterator.next();
ConfigUtils.java,Iterator<RuleSet> iter = ruleSetFact.getRegisteredRuleSets();,if (ruleSetFact != null ) Iterator<RuleSet> iter = ruleSetFact.getRegisteredRuleSets();
ConfigUtils.java,Iterator<String> rulesets = settings.getRuleSets().iterator();,if (settings != null ) Iterator<String> rulesets = settings.getRuleSets().iterator();
ConfigUtils.java,String ruleSetXml = rulesets.next();,if (rulesets != null ) String ruleSetXml = rulesets.next();
PMDOptionsSettings.java,String ruleName = ruleProp.getKey();,if (ruleProp != null ) String ruleName = ruleProp.getKey();
PMDOptionsSettings.java,List<String> r = rulesets.getRuleSets();,if (rulesets != null ) List<String> r = rulesets.getRuleSets();
PMDOptionsSettings.java,List<String> cp = rulesets.getClassPath();,if (rulesets != null ) List<String> cp = rulesets.getClassPath();
PMDOptionsSettings.java,K key = entry.getKey();,if (entry != null ) K key = entry.getKey();
PMDOptionsSettings.java,V value = entry.getValue();,if (entry != null ) V value = entry.getValue();
PMDOptionsSettings.java,copy = new ArrayList<M>(coll.size());,if (ArrayList<M>(coll != null ) copy = new ArrayList<M>(coll.size());
PmdOptionsComponent.java,jPanelRules = new javax.swing.JPanel();,if (javax != null ) jPanelRules = new javax.swing.JPanel();
PmdOptionsComponent.java,jLblRules = new javax.swing.JLabel();,if (javax != null ) jLblRules = new javax.swing.JLabel();
PmdOptionsComponent.java,jBtnRules = new javax.swing.JButton();,if (javax != null ) jBtnRules = new javax.swing.JButton();
PmdOptionsComponent.java,jPanelRulesets = new javax.swing.JPanel();,if (javax != null ) jPanelRulesets = new javax.swing.JPanel();
PmdOptionsComponent.java,jLblRulesets = new javax.swing.JLabel();,if (javax != null ) jLblRulesets = new javax.swing.JLabel();
PmdOptionsComponent.java,jBtnRulesets = new javax.swing.JButton();,if (javax != null ) jBtnRulesets = new javax.swing.JButton();
PmdOptionsController.java,PMDOptionsSettings setting = PMDOptionsSettings.getDefault();,if (PMDOptionsSettings != null ) PMDOptionsSettings setting = PMDOptionsSettings.getDefault();
PmdOptionsController.java,PMDOptionsSettings setting = PMDOptionsSettings.getDefault();,if (PMDOptionsSettings != null ) PMDOptionsSettings setting = PMDOptionsSettings.getDefault();
PmdOptionsController.java,RulesConfig data = comp.getRules();,if (comp != null ) RulesConfig data = comp.getRules();
PropertiesModel.java,Properties properties = rule.getProperties();,if (rule != null ) Properties properties = rule.getProperties();
PropertiesModel.java,Enumeration keys = properties.keys();,if (properties != null ) Enumeration keys = properties.keys();
PropertiesModel.java,String key = ( String )keys.nextElement();,if ()keys != null ) String key = ( String )keys.nextElement();
RuleEnabler.java,RulesConfig data = (RulesConfig)editor.getValue();,if ((RulesConfig)editor != null ) RulesConfig data = (RulesConfig)editor.getValue();
RuleEnabler.java,List<Rule> available = ConfigUtils.getAllAvailableRules();,if (ConfigUtils != null ) List<Rule> available = ConfigUtils.getAllAvailableRules();
RuleEnabler.java,topSeparator = new javax.swing.JSeparator();,if (javax != null ) topSeparator = new javax.swing.JSeparator();
RuleEnabler.java,availableList = new javax.swing.JList();,if (javax != null ) availableList = new javax.swing.JList();
RuleEnabler.java,chosenList = new javax.swing.JList();,if (javax != null ) chosenList = new javax.swing.JList();
RuleEnabler.java,chooseOne = new javax.swing.JButton();,if (javax != null ) chooseOne = new javax.swing.JButton();
RuleEnabler.java,choseAll = new javax.swing.JButton();,if (javax != null ) choseAll = new javax.swing.JButton();
RuleEnabler.java,removeOne = new javax.swing.JButton();,if (javax != null ) removeOne = new javax.swing.JButton();
RuleEnabler.java,removeAll = new javax.swing.JButton();,if (javax != null ) removeAll = new javax.swing.JButton();
RuleEnabler.java,middleSeparator = new javax.swing.JSeparator();,if (javax != null ) middleSeparator = new javax.swing.JSeparator();
RuleEnabler.java,information = new javax.swing.JTextArea();,if (javax != null ) information = new javax.swing.JTextArea();
RuleEnabler.java,example = new javax.swing.JEditorPane();,if (javax != null ) example = new javax.swing.JEditorPane();
RuleEnabler.java,bottomSeparator = new javax.swing.JSeparator();,if (javax != null ) bottomSeparator = new javax.swing.JSeparator();
RuleEnabler.java,properties = new javax.swing.JTable();,if (javax != null ) properties = new javax.swing.JTable();
RuleEnabler.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RuleEnabler.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RuleEnabler.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RuleEnabler.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RuleEnabler.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RuleEnabler.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RuleEnabler.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RuleEnabler.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RuleEnabler.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RuleEnabler.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RuleEnabler.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RuleEnabler.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RuleEnabler.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RuleEnabler.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RuleEnabler.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RuleEnabler.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RuleEnabler.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RuleEnabler.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RuleEnabler.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RuleEnabler.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RuleEnabler.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RuleEnabler.java,String from = rule.getDescription();,if (rule != null ) String from = rule.getDescription();
RuleEnabler.java,StringBuilder sb = new StringBuilder(from.length());,if (StringBuilder(from != null ) StringBuilder sb = new StringBuilder(from.length());
RuleEnabler.java,int index = chosenList.getSelectedIndex();,if (chosenList != null ) int index = chosenList.getSelectedIndex();
RuleEnabler.java,RulesConfig data = (RulesConfig)editor.getValue();,if ((RulesConfig)editor != null ) RulesConfig data = (RulesConfig)editor.getValue();
RuleEnabler.java,RulesConfig data = (RulesConfig)editor.getValue();,if ((RulesConfig)editor != null ) RulesConfig data = (RulesConfig)editor.getValue();
RuleEnabler.java,int index = availableList.getSelectedIndex();,if (availableList != null ) int index = availableList.getSelectedIndex();
RuleEnabler.java,RulesConfig data = (RulesConfig)editor.getValue();,if ((RulesConfig)editor != null ) RulesConfig data = (RulesConfig)editor.getValue();
RuleEnabler.java,int row = evt.getFirstRow();,if (evt != null ) int row = evt.getFirstRow();
RuleEnabler.java,PropertiesModel model = (PropertiesModel)properties.getModel();,if ((PropertiesModel)properties != null ) PropertiesModel model = (PropertiesModel)properties.getModel();
RuleEnabler.java,RulesConfig data = (RulesConfig)editor.getValue();,if ((RulesConfig)editor != null ) RulesConfig data = (RulesConfig)editor.getValue();
RuleEnabler.java,PropertiesModel oldModel = (PropertiesModel)properties.getModel();,if ((PropertiesModel)properties != null ) PropertiesModel oldModel = (PropertiesModel)properties.getModel();
RuleEnabler.java,this.currentRuleName = rule.getName();,if (rule != null ) this.currentRuleName = rule.getName();
RuleListModel.java,int num = list.size();,if (list != null ) int num = list.size();
RuleListModel.java,int ind = list.size();,if (list != null ) int ind = list.size();
RuleSetChooser.java,upperPanel = new javax.swing.JPanel();,if (javax != null ) upperPanel = new javax.swing.JPanel();
RuleSetChooser.java,rulelListPane = new javax.swing.JScrollPane();,if (javax != null ) rulelListPane = new javax.swing.JScrollPane();
RuleSetChooser.java,rulesetList = new javax.swing.JList();,if (javax != null ) rulesetList = new javax.swing.JList();
RuleSetChooser.java,uperRightPanel = new javax.swing.JPanel();,if (javax != null ) uperRightPanel = new javax.swing.JPanel();
RuleSetChooser.java,buttonPanel = new javax.swing.JPanel();,if (javax != null ) buttonPanel = new javax.swing.JPanel();
RuleSetChooser.java,removeRuleSet = new javax.swing.JButton();,if (javax != null ) removeRuleSet = new javax.swing.JButton();
RuleSetChooser.java,addRuleSet = new javax.swing.JButton();,if (javax != null ) addRuleSet = new javax.swing.JButton();
RuleSetChooser.java,lblRuleSets = new javax.swing.JLabel();,if (javax != null ) lblRuleSets = new javax.swing.JLabel();
RuleSetChooser.java,stdRules = new javax.swing.JCheckBox();,if (javax != null ) stdRules = new javax.swing.JCheckBox();
RuleSetChooser.java,lowerPanel = new javax.swing.JPanel();,if (javax != null ) lowerPanel = new javax.swing.JPanel();
RuleSetChooser.java,jarListPane = new javax.swing.JScrollPane();,if (javax != null ) jarListPane = new javax.swing.JScrollPane();
RuleSetChooser.java,jarList = new javax.swing.JList();,if (javax != null ) jarList = new javax.swing.JList();
RuleSetChooser.java,lowerRightPanel = new javax.swing.JPanel();,if (javax != null ) lowerRightPanel = new javax.swing.JPanel();
RuleSetChooser.java,removejar = new javax.swing.JButton();,if (javax != null ) removejar = new javax.swing.JButton();
RuleSetChooser.java,addjar = new javax.swing.JButton();,if (javax != null ) addjar = new javax.swing.JButton();
RuleSetChooser.java,lblRules = new javax.swing.JLabel();,if (javax != null ) lblRules = new javax.swing.JLabel();
RuleSetChooser.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RuleSetChooser.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RuleSetChooser.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RuleSetChooser.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RuleSetChooser.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RuleSetChooser.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RuleSetChooser.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RuleSetChooser.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RuleSetChooser.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RuleSetChooser.java,int index = jarList.getSelectedIndex();,if (jarList != null ) int index = jarList.getSelectedIndex();
RuleSetChooser.java,int index = rulesetList.getSelectedIndex();,if (rulesetList != null ) int index = rulesetList.getSelectedIndex();
RuleSetChooserEditor.java,RuleSetListModel model = (RuleSetListModel)chooser.getRuleSetListModel();,if ((RuleSetListModel)chooser != null ) RuleSetListModel model = (RuleSetListModel)chooser.getRuleSetListModel();
RuleSetChooserEditor.java,RuleSetListModel model = (RuleSetListModel)chooser.getRuleSetListModel();,if ((RuleSetListModel)chooser != null ) RuleSetListModel model = (RuleSetListModel)chooser.getRuleSetListModel();
RuleClassLoader.java,CustomRuleSetSettings settings = PMDOptionsSettings.getDefault().getRulesets();,if (PMDOptionsSettings != null ) CustomRuleSetSettings settings = PMDOptionsSettings.getDefault().getRulesets();
RuleClassLoader.java,Iterator iterator = settings.getClassPath().iterator();,if (settings != null ) Iterator iterator = settings.getClassPath().iterator();
PMDScanAnnotation.java,Annotatable anno = ( Annotatable )propertyChangeEvent.getSource();,if ()propertyChangeEvent != null ) Annotatable anno = ( Annotatable )propertyChangeEvent.getSource();
Scanner.java,scanEnabled = PMDOptionsSettings.getDefault().isScanEnabled();,if (PMDOptionsSettings != null ) scanEnabled = PMDOptionsSettings.getDefault().isScanEnabled();
Scanner.java,PMDOptionsSettings option = PMDOptionsSettings.getDefault();,if (PMDOptionsSettings != null ) PMDOptionsSettings option = PMDOptionsSettings.getDefault();
Scanner.java,scanEnabled = option.isScanEnabled();,if (option != null ) scanEnabled = option.isScanEnabled();
Scanner.java,Document doc = info.getDocument();,if (info != null ) Document doc = info.getDocument();
Scanner.java,tabSize = foo.intValue();,if (foo != null ) tabSize = foo.intValue();
Scanner.java,Line.Set lineset = cookie.getLineSet();,if (cookie != null ) Line.Set lineset = cookie.getLineSet();
Scanner.java,int lineNum = fault.getLine();,if (fault != null ) int lineNum = fault.getLine();
Scanner.java,String text = line.getText();,if (line != null ) String text = line.getText();
Scanner.java,PMDScanAnnotation annotation = PMDScanAnnotation.getNewInstance();,if (PMDScanAnnotation != null ) PMDScanAnnotation annotation = PMDScanAnnotation.getNewInstance();
Scanner.java,String msg = fault.getMessage();,if (fault != null ) String msg = fault.getMessage();
PMDOptionsSettingsTest.java,PMDOptionsSettings settings = PMDOptionsSettings.getDefault();,if (PMDOptionsSettings != null ) PMDOptionsSettings settings = PMDOptionsSettings.getDefault();
DroolsVisitorTest.java,Iterator facts = results.iterator();,if (results != null ) Iterator facts = results.iterator();
DroolsVisitorTest.java,Object fact = facts.next();,if (facts != null ) Object fact = facts.next();
DroolsVisitorTest.java,Iterator imports = results.iterator();,if (results != null ) Iterator imports = results.iterator();
DroolsVisitorTest.java,Object fact = imports.next();,if (imports != null ) Object fact = imports.next();
DroolsVisitorTest.java,Iterator imports = results.iterator();,if (results != null ) Iterator imports = results.iterator();
DroolsVisitorTest.java,Object fact = imports.next();,if (imports != null ) Object fact = imports.next();
DroolsVisitorTest.java,acu = impFact.getACU();,if (impFact != null ) acu = impFact.getACU();
DroolsVisitorTest.java,Iterator dups = results.iterator();,if (results != null ) Iterator dups = results.iterator();
DroolsVisitorTest.java,Object fact = dups.next();,if (dups != null ) Object fact = dups.next();
DroolsVisitorTest.java,acu = impFact.getACU();,if (impFact != null ) acu = impFact.getACU();
DroolsVisitorTest.java,Iterator singles = results.iterator();,if (results != null ) Iterator singles = results.iterator();
DroolsVisitorTest.java,Object fact = singles.next();,if (singles != null ) Object fact = singles.next();
DroolsVisitorTest.java,Iterator facts = results.iterator();,if (results != null ) Iterator facts = results.iterator();
DroolsVisitorTest.java,Object fact = facts.next();,if (facts != null ) Object fact = facts.next();
DroolsVisitorTest.java,Iterator singles = results.iterator();,if (results != null ) Iterator singles = results.iterator();
DroolsVisitorTest.java,Object fact = singles.next();,if (singles != null ) Object fact = singles.next();
DroolsVisitorTest.java,Iterator singles = results.iterator();,if (results != null ) Iterator singles = results.iterator();
DroolsVisitorTest.java,Object fact = singles.next();,if (singles != null ) Object fact = singles.next();
DroolsVisitorTest.java,Iterator facts = results.iterator();,if (results != null ) Iterator facts = results.iterator();
DroolsVisitorTest.java,Object fact = facts.next();,if (facts != null ) Object fact = facts.next();
DroolsVisitorTest.java,Iterator facts = results.iterator();,if (results != null ) Iterator facts = results.iterator();
DroolsVisitorTest.java,Object fact = facts.next();,if (facts != null ) Object fact = facts.next();
DroolsVisitorTest.java,WorkingMemory memory = rules.createWorkingMemory();,if (rules != null ) WorkingMemory memory = rules.createWorkingMemory();
DroolsRuleTst.java,WorkingMemory memory = rules.createWorkingMemory();,if (rules != null ) WorkingMemory memory = rules.createWorkingMemory();
DuplicateImportTest.java,Iterator rvs = results.iterator();,if (results != null ) Iterator rvs = results.iterator();
DuplicateImportTest.java,RuleViolationFact rvFact = (RuleViolationFact) rvs.next();,if (rvs != null ) RuleViolationFact rvFact = (RuleViolationFact) rvs.next();
DuplicateImportTest.java,ImportFact impFact = (ImportFact) rvFact.getFact();,if (rvFact != null ) ImportFact impFact = (ImportFact) rvFact.getFact();
DroolsVisitor.java,String packageName = packageNameNode.getImage();,if (packageNameNode != null ) String packageName = packageNameNode.getImage();
DroolsVisitor.java,String importName = importNameNode.getImage();,if (importNameNode != null ) String importName = importNameNode.getImage();
DroolsVisitor.java,String className = ucDecl.getClassName();,if (ucDecl != null ) String className = ucDecl.getClassName();
DuplicateImport.java,String impPack = impFact.getImportPackage();,if (impFact != null ) String impPack = impFact.getImportPackage();
FileLocator.java,final File selectedFile = fileChooser.getSelectedFile();,if (fileChooser != null ) final File selectedFile = fileChooser.getSelectedFile();
FileLocator.java,final Vector returnedList = (Vector) locations.clone();,if (locations != null ) final Vector returnedList = (Vector) locations.clone();
PMDLocator.java,final File selectedFile = fileChooser.getSelectedFile();,if (fileChooser != null ) final File selectedFile = fileChooser.getSelectedFile();
PMDLocator.java,final String filePath = selectedFile.getCanonicalPath();,if (selectedFile != null ) final String filePath = selectedFile.getCanonicalPath();
AboutPMD.java,Dimension screenSize = getToolkit().getScreenSize();,if (getToolkit() != null ) Dimension screenSize = getToolkit().getScreenSize();
AboutPMD.java,JPanel buttonPanel = ComponentFactory.createButtonPanel();,if (ComponentFactory != null ) JPanel buttonPanel = ComponentFactory.createButtonPanel();
AboutPMD.java,layout = (GridBagLayout) infoPanel.getLayout();,if (infoPanel != null ) layout = (GridBagLayout) infoPanel.getLayout();
AboutPMD.java,layout = (GridBagLayout) infoPanel.getLayout();,if (infoPanel != null ) layout = (GridBagLayout) infoPanel.getLayout();
AboutPMD.java,font = textArea.getFont();,if (textArea != null ) font = textArea.getFont();
AboutPMD.java,layout = (GridBagLayout) infoPanel.getLayout();,if (infoPanel != null ) layout = (GridBagLayout) infoPanel.getLayout();
AboutPMD.java,layout = (GridBagLayout) creditsPanel.getLayout();,if (creditsPanel != null ) layout = (GridBagLayout) creditsPanel.getLayout();
AboutPMD.java,layout = (GridBagLayout) creditsPanel.getLayout();,if (creditsPanel != null ) layout = (GridBagLayout) creditsPanel.getLayout();
AnalysisResultsViewer.java,int priority = Preferences.getPreferences().getLowestPriorityForAnalysis();,if (Preferences != null ) int priority = Preferences.getPreferences().getLowestPriorityForAnalysis();
AnalysisViewer.java,font = titledBorder.getTitleFont();,if (titledBorder != null ) font = titledBorder.getTitleFont();
AnalysisViewer.java,Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();,if (Toolkit != null ) Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
AnalysisViewer.java,Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();,if (Toolkit != null ) Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
AnalysisViewer.java,String message = pmdException.getMessage();,if (pmdException != null ) String message = pmdException.getMessage();
AnalysisViewer.java,Exception exception = pmdException.getReason();,if (pmdException != null ) Exception exception = pmdException.getReason();
AnalysisViewer.java,String directory = Preferences.getPreferences().getAnalysisResultsPath();,if (Preferences != null ) String directory = Preferences.getPreferences().getAnalysisResultsPath();
AnalysisViewer.java,String message = pmdException.getMessage();,if (pmdException != null ) String message = pmdException.getMessage();
AnalysisViewer.java,Exception exception = pmdException.getReason();,if (pmdException != null ) Exception exception = pmdException.getReason();
AnalysisViewer.java,String path = Preferences.getPreferences().getAnalysisResultsPath();,if (Preferences != null ) String path = Preferences.getPreferences().getAnalysisResultsPath();
AnalysisViewer.java,String message = pmdException.getMessage();,if (pmdException != null ) String message = pmdException.getMessage();
AnalysisViewer.java,Exception exception = pmdException.getReason();,if (pmdException != null ) Exception exception = pmdException.getReason();
AnalysisViewer.java,String fileName = file.getName();,if (file != null ) String fileName = file.getName();
ComponentFactory.java,Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();,if (Toolkit != null ) Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
DirectoryTable.java,int row = selectionModel.getAnchorSelectionIndex();,if (selectionModel != null ) int row = selectionModel.getAnchorSelectionIndex();
DirectoryTable.java,mouseLocation = event.getPoint();,if (event != null ) mouseLocation = event.getPoint();
DirectoryTable.java,tableData = tableModel.getDataVector();,if (tableModel != null ) tableData = tableModel.getDataVector();
DirectoryTable.java,rowCount = tableData.size();,if (tableData != null ) rowCount = tableData.size();
DirectoryTableModel.java,pattern = buffer.toString();,if (buffer != null ) pattern = buffer.toString();
DirectoryTableModel.java,TreePath treePath = event.getPath();,if (event != null ) TreePath treePath = event.getPath();
DirectoryTableModel.java,DirectoryTreeNode treeNode = (DirectoryTreeNode) treePath.getLastPathComponent();,if (treePath != null ) DirectoryTreeNode treeNode = (DirectoryTreeNode) treePath.getLastPathComponent();
DirectoryTableModel.java,Object userObject = treeNode.getUserObject();,if (treeNode != null ) Object userObject = treeNode.getUserObject();
DirectoryTableModel.java,String fileName = file.getName().toLowerCase();,if (file != null ) String fileName = file.getName().toLowerCase();
DirectoryTree.java,DirectoryTreeNode treeNode = (DirectoryTreeNode) treeModel.getRoot();,if (treeModel != null ) DirectoryTreeNode treeNode = (DirectoryTreeNode) treeModel.getRoot();
DirectoryTree.java,TreePath treePath = new TreePath(treeNode.getPath());,if (TreePath(treeNode != null ) TreePath treePath = new TreePath(treeNode.getPath());
DirectoryTree.java,TreePath path = getSelectionModel().getSelectionPath();,if (getSelectionModel() != null ) TreePath path = getSelectionModel().getSelectionPath();
DirectoryTree.java,File[] directories = event.getFileList();,if (event != null ) File[] directories = event.getFileList();
DirectoryTree.java,Object userObject = treeNode.getUserObject();,if (treeNode != null ) Object userObject = treeNode.getUserObject();
DirectoryTreeModel.java,treePath = event.getPath();,if (event != null ) treePath = event.getPath();
DirectoryTreeModel.java,treeNode = (DirectoryTreeNode) treePath.getLastPathComponent();,if (treePath != null ) treeNode = (DirectoryTreeNode) treePath.getLastPathComponent();
DirectoryTreeModel.java,children = treeNode.children();,if (treeNode != null ) children = treeNode.children();
DirectoryTreeModel.java,DirectoryTreeNode childTreeNode = (DirectoryTreeNode) children.nextElement();,if (children != null ) DirectoryTreeNode childTreeNode = (DirectoryTreeNode) children.nextElement();
DirectoryTreeModel.java,File directory = (File) childTreeNode.getUserObject();,if (childTreeNode != null ) File directory = (File) childTreeNode.getUserObject();
DirectoryTreeModel.java,treePath = event.getPath();,if (event != null ) treePath = event.getPath();
DirectoryTreeModel.java,treeNode = (DirectoryTreeNode) treePath.getLastPathComponent();,if (treePath != null ) treeNode = (DirectoryTreeNode) treePath.getLastPathComponent();
DirectoryTreeModel.java,children = treeNode.children();,if (treeNode != null ) children = treeNode.children();
DirectoryTreeModel.java,DirectoryTreeNode childTreeNode = (DirectoryTreeNode) children.nextElement();,if (children != null ) DirectoryTreeNode childTreeNode = (DirectoryTreeNode) children.nextElement();
DirectoryTreeNode.java,String name = file.getName();,if (file != null ) String name = file.getName();
HTMLResultRenderer.java,Iterator violations = report.iterator();,if (report != null ) Iterator violations = report.iterator();
HTMLResultRenderer.java,String hexValue = Integer.toHexString(Color.WHITE.getRGB());,if (Integer != null ) String hexValue = Integer.toHexString(Color.WHITE.getRGB());
HTMLResultRenderer.java,RuleViolation ruleViolation = (RuleViolation) violations.next();,if (violations != null ) RuleViolation ruleViolation = (RuleViolation) violations.next();
HTMLResultRenderer.java,Rule rule = ruleViolation.getRule();,if (ruleViolation != null ) Rule rule = ruleViolation.getRule();
HTMLResultRenderer.java,String ruleMessage = ruleViolation.getDescription();,if (ruleViolation != null ) String ruleMessage = ruleViolation.getDescription();
HTMLResultRenderer.java,String description = rule.getDescription();,if (rule != null ) String description = rule.getDescription();
HTMLResultRenderer.java,String example = rule.getExample();,if (rule != null ) String example = rule.getExample();
HTMLResultRenderer.java,example = buffer.toString();,if (buffer != null ) example = buffer.toString();
HTMLResultRenderer.java,char[] chars = text.trim().toCharArray();,if (text != null ) char[] chars = text.trim().toCharArray();
HelpMenu.java,PMDViewer viewer = PMDViewer.getViewer();,if (PMDViewer != null ) PMDViewer viewer = PMDViewer.getViewer();
MessageDialog.java,Rectangle parentWindowBounds = parentWindow.getBounds();,if (parentWindow != null ) Rectangle parentWindowBounds = parentWindow.getBounds();
MessageDialog.java,message = stream.toString();,if (stream != null ) message = stream.toString();
MessageDialog.java,String message = event.getMessage();,if (event != null ) String message = event.getMessage();
MessageDialog.java,Exception exception = event.getException();,if (event != null ) Exception exception = event.getException();
MotifPMDLookAndFeel.java,Color darkBlue = Color.blue.darker();,if (Color != null ) Color darkBlue = Color.blue.darker();
PMDDirectory.java,Iterator ruleSetFiles = getRuleSetFiles().iterator();,if (getRuleSetFiles() != null ) Iterator ruleSetFiles = getRuleSetFiles().iterator();
PMDDirectory.java,File ruleSetFile = (File) ruleSetFiles.next();,if (ruleSetFiles != null ) File ruleSetFile = (File) ruleSetFiles.next();
PMDDirectory.java,Iterator allRules = ruleSet.getRules().iterator();,if (ruleSet != null ) Iterator allRules = ruleSet.getRules().iterator();
PMDDirectory.java,Rule rule = (Rule) allRules.next();,if (allRules != null ) Rule rule = (Rule) allRules.next();
PMDDirectory.java,Iterator ruleSets = (new RuleSetFactory()).getRegisteredRuleSets();,if (RuleSetFactory()) != null ) Iterator ruleSets = (new RuleSetFactory()).getRegisteredRuleSets();
PMDDirectory.java,ruleSet = (RuleSet) ruleSets.next();,if (ruleSets != null ) ruleSet = (RuleSet) ruleSets.next();
PMDDirectory.java,rules = ruleSet.getRules().iterator();,if (ruleSet != null ) rules = ruleSet.getRules().iterator();
PMDDirectory.java,ruleSetFiles = ruleSetFilesList.iterator();,if (ruleSetFilesList != null ) ruleSetFiles = ruleSetFilesList.iterator();
PMDDirectory.java,File ruleSetFile = (File) ruleSetFiles.next();,if (ruleSetFiles != null ) File ruleSetFile = (File) ruleSetFiles.next();
PMDDirectory.java,Iterator ruleSets = ruleSetList.iterator();,if (ruleSetList != null ) Iterator ruleSets = ruleSetList.iterator();
PMDDirectory.java,RuleSet ruleSet = (RuleSet) ruleSets.next();,if (ruleSets != null ) RuleSet ruleSet = (RuleSet) ruleSets.next();
PMDDirectory.java,String ruleSetFileName = ruleSet.getFileName();,if (ruleSet != null ) String ruleSetFileName = ruleSet.getFileName();
PMDDirectory.java,File directory = file.getParentFile();,if (file != null ) File directory = file.getParentFile();
PMDDirectory.java,List ruleSetList = event.getRuleSetList();,if (event != null ) List ruleSetList = event.getRuleSetList();
PMDDirectory.java,int priority = event.getLowestPriorityForAnalysis();,if (event != null ) int priority = event.getLowestPriorityForAnalysis();
PMDLookAndFeel.java,Color darkBlue = Color.blue.darker();,if (Color != null ) Color darkBlue = Color.blue.darker();
PMDViewer.java,screenSize = Toolkit.getDefaultToolkit().getScreenSize();,if (Toolkit != null ) screenSize = Toolkit.getDefaultToolkit().getScreenSize();
PMDViewer.java,String message = pmdException.getMessage();,if (pmdException != null ) String message = pmdException.getMessage();
PMDViewer.java,Exception exception = pmdException.getReason();,if (pmdException != null ) Exception exception = pmdException.getReason();
PMDViewer.java,int menuCount = menuBar.getMenuCount();,if (menuBar != null ) int menuCount = menuBar.getMenuCount();
PMDViewer.java,int menuCount = menuBar.getMenuCount();,if (menuBar != null ) int menuCount = menuBar.getMenuCount();
PMDViewer.java,String message = pmdException.getMessage();,if (pmdException != null ) String message = pmdException.getMessage();
PMDViewer.java,Exception exception = pmdException.getReason();,if (pmdException != null ) Exception exception = pmdException.getReason();
Preferences.java,File directory = file.getParentFile();,if (file != null ) File directory = file.getParentFile();
Preferences.java,key = name.toLowerCase();,if (name != null ) key = name.toLowerCase();
Preferences.java,directory = buffer.toString();,if (buffer != null ) directory = buffer.toString();
Preferences.java,value = buffer.toString();,if (buffer != null ) value = buffer.toString();
Preferences.java,String key = trim(pathName).toLowerCase();,if (trim(pathName) != null ) String key = trim(pathName).toLowerCase();
Preferences.java,text = text.trim();,if (text != null ) text = text.trim();
PreferencesEditor.java,preferences = Preferences.getPreferences();,if (Preferences != null ) preferences = Preferences.getPreferences();
PreferencesEditor.java,String currentPath = preferences.getCurrentPathToPMD();,if (preferences != null ) String currentPath = preferences.getCurrentPathToPMD();
PreferencesEditor.java,String userPath = preferences.getUserPathToPMD();,if (preferences != null ) String userPath = preferences.getUserPathToPMD();
PreferencesEditor.java,String sharedPath = preferences.getSharedPathToPMD();,if (preferences != null ) String sharedPath = preferences.getSharedPathToPMD();
PreferencesEditor.java,String analysisResultsPath = preferences.getAnalysisResultsPath();,if (preferences != null ) String analysisResultsPath = preferences.getAnalysisResultsPath();
PreferencesEditor.java,int priority = preferences.getLowestPriorityForAnalysis();,if (preferences != null ) int priority = preferences.getLowestPriorityForAnalysis();
PreferencesEditor.java,layout = (GridBagLayout) dataPanel.getLayout();,if (dataPanel != null ) layout = (GridBagLayout) dataPanel.getLayout();
PreferencesEditor.java,font = textArea.getFont();,if (textArea != null ) font = textArea.getFont();
PreferencesEditor.java,layout = (GridBagLayout) dataPanel.getLayout();,if (dataPanel != null ) layout = (GridBagLayout) dataPanel.getLayout();
PreferencesEditor.java,fontMetrics = button.getFontMetrics(button.getFont());,if (button != null ) fontMetrics = button.getFontMetrics(button.getFont());
PreferencesEditor.java,"size = new Dimension(width, button.getHeight());","if (button != null ) size = new Dimension(width, button.getHeight());"
PreferencesEditor.java,layout = (GridBagLayout) dataPanel.getLayout();,if (dataPanel != null ) layout = (GridBagLayout) dataPanel.getLayout();
PreferencesEditor.java,layout = (GridBagLayout) dataPanel.getLayout();,if (dataPanel != null ) layout = (GridBagLayout) dataPanel.getLayout();
PreferencesEditor.java,Preferences preferences = Preferences.getPreferences();,if (Preferences != null ) Preferences preferences = Preferences.getPreferences();
PreferencesEditor.java,String message = pmdException.getMessage();,if (pmdException != null ) String message = pmdException.getMessage();
PreferencesEditor.java,Exception exception = pmdException.getReason();,if (pmdException != null ) Exception exception = pmdException.getReason();
PreferencesEditor.java,file = file.getParentFile();,if (file != null ) file = file.getParentFile();
PreferencesEditor.java,file = fileChooser.getSelectedFile();,if (fileChooser != null ) file = fileChooser.getSelectedFile();
PrintAnalysisResults.java,toolkit = Toolkit.getDefaultToolkit();,if (Toolkit != null ) toolkit = Toolkit.getDefaultToolkit();
PrintAnalysisResults.java,viewer = PMDViewer.getViewer();,if (PMDViewer != null ) viewer = PMDViewer.getViewer();
PrintAnalysisResults.java,dateFormat = DateFormat.getDateTimeInstance();,if (DateFormat != null ) dateFormat = DateFormat.getDateTimeInstance();
PrintAnalysisResults.java,String textLine = parser.nextToken();,if (parser != null ) String textLine = parser.nextToken();
PrintAnalysisResults.java,String textLine = buffer.toString();,if (buffer != null ) String textLine = buffer.toString();
PrintAnalysisResults.java,PrintLineInfo printLineInfo = (PrintLineInfo) lineTableIterator.next();,if (lineTableIterator != null ) PrintLineInfo printLineInfo = (PrintLineInfo) lineTableIterator.next();
ProjectFile.java,Enumeration keys = PROPERTIES.propertyNames();,if (PROPERTIES != null ) Enumeration keys = PROPERTIES.propertyNames();
ProjectFile.java,valueCount = parser.countTokens();,if (parser != null ) valueCount = parser.countTokens();
ProjectFile.java,values[index] = parser.nextToken();,if (parser != null ) values[index] = parser.nextToken();
ProjectFile.java,SAXParserFactory factory = SAXParserFactory.newInstance();,if (SAXParserFactory != null ) SAXParserFactory factory = SAXParserFactory.newInstance();
ProjectFile.java,SAXParser parser = factory.newSAXParser();,if (factory != null ) SAXParser parser = factory.newSAXParser();
ResultsViewer.java,component = component.getParent();,if (component != null ) component = component.getParent();
ResultsViewer.java,Report report = ruleContext.getReport();,if (ruleContext != null ) Report report = ruleContext.getReport();
ResultsViewer.java,fullText = renderer.endRendering();,if (renderer != null ) fullText = renderer.endRendering();
ResultsViewer.java,String message = pmdException.getMessage();,if (pmdException != null ) String message = pmdException.getMessage();
ResultsViewer.java,Exception exception = pmdException.getReason();,if (pmdException != null ) Exception exception = pmdException.getReason();
ResultsViewer.java,report = ruleContext.getReport();,if (ruleContext != null ) report = ruleContext.getReport();
ResultsViewer.java,String message = pmdException.getMessage();,if (pmdException != null ) String message = pmdException.getMessage();
ResultsViewer.java,Exception exception = pmdException.getReason();,if (pmdException != null ) Exception exception = pmdException.getReason();
RuleEditingPanel.java,component = component.getParent();,if (component != null ) component = component.getParent();
RuleEditingTabbedPane.java,TreePath treePath = event.getPath();,if (event != null ) TreePath treePath = event.getPath();
RuleEditingTabbedPane.java,Object component = treePath.getLastPathComponent();,if (treePath != null ) Object component = treePath.getLastPathComponent();
RuleProperties.java,int index = property.indexOf(SEPARATOR) + SEPARATOR.length();,if (SEPARATOR != null ) int index = property.indexOf(SEPARATOR) + SEPARATOR.length();
RulePropertyEditingPanel.java,String name = dataNode.getName();,if (dataNode != null ) String name = dataNode.getName();
RulePropertyEditingPanel.java,String valueType = dataNode.getPropertyValueType();,if (dataNode != null ) String valueType = dataNode.getPropertyValueType();
RulePropertyEditingPanel.java,component = component.getParent();,if (component != null ) component = component.getParent();
RuleSetEditingPanel.java,component = component.getParent();,if (component != null ) component = component.getParent();
RuleSetList.java,directoryPath = directoryPath.trim();,if (directoryPath != null ) directoryPath = directoryPath.trim();
RuleSetList.java,ruleSetNameList = inputStream.readLine();,if (inputStream != null ) ruleSetNameList = inputStream.readLine();
RuleSetList.java,ruleSetNames[index] = parser.nextToken().trim();,if (parser != null ) ruleSetNames[index] = parser.nextToken().trim();
RuleSetList.java,directoryPath = directoryPath.trim();,if (directoryPath != null ) directoryPath = directoryPath.trim();
RuleSetReader.java,SAXParserFactory factory = SAXParserFactory.newInstance();,if (SAXParserFactory != null ) SAXParserFactory factory = SAXParserFactory.newInstance();
RuleSetReader.java,parser = factory.newSAXParser();,if (factory != null ) parser = factory.newSAXParser();
RuleSetReader.java,Throwable originalException = exception.getException();,if (exception != null ) Throwable originalException = exception.getException();
RuleSetWriter.java,Iterator rules = ruleSet.getRules().iterator();,if (ruleSet != null ) Iterator rules = ruleSet.getRules().iterator();
RuleSetWriter.java,Properties props = rule.getProperties();,if (rule != null ) Properties props = rule.getProperties();
RuleSetWriter.java,Enumeration keys = properties.keys();,if (properties != null ) Enumeration keys = properties.keys();
RuleSetWriter.java,String name = (String) keys.nextElement();,if (keys != null ) String name = (String) keys.nextElement();
RulesClassSelectDialog.java,PMDDirectory pmdDirectory = PMDDirectory.getDirectory();,if (PMDDirectory != null ) PMDDirectory pmdDirectory = PMDDirectory.getDirectory();
RulesClassSelectDialog.java,String rulesDirectoryPath = pmdDirectory.getRuleSetsDirectoryPath();,if (pmdDirectory != null ) String rulesDirectoryPath = pmdDirectory.getRuleSetsDirectoryPath();
RulesClassSelectDialog.java,JPanel buttonPanel = ComponentFactory.createButtonPanel();,if (ComponentFactory != null ) JPanel buttonPanel = ComponentFactory.createButtonPanel();
RulesEditor.java,Enumeration children = treeNode.children();,if (treeNode != null ) Enumeration children = treeNode.children();
RulesEditor.java,Enumeration ruleSetNodes = rootNode.children();,if (rootNode != null ) Enumeration ruleSetNodes = rootNode.children();
RulesEditor.java,RulesTreeNode ruleSetNode = (RulesTreeNode) ruleSetNodes.nextElement();,if (ruleSetNodes != null ) RulesTreeNode ruleSetNode = (RulesTreeNode) ruleSetNodes.nextElement();
RulesEditor.java,RuleSet ruleSet = ruleSetNode.getRuleSet();,if (ruleSetNode != null ) RuleSet ruleSet = ruleSetNode.getRuleSet();
RulesEditor.java,Enumeration ruleNodes = ruleSetNode.children();,if (ruleSetNode != null ) Enumeration ruleNodes = ruleSetNode.children();
RulesEditor.java,RulesTreeNode ruleNode = (RulesTreeNode) ruleNodes.nextElement();,if (ruleNodes != null ) RulesTreeNode ruleNode = (RulesTreeNode) ruleNodes.nextElement();
RulesEditor.java,int lowestPriority = Preferences.getPreferences().getLowestPriorityForAnalysis();,if (Preferences != null ) int lowestPriority = Preferences.getPreferences().getLowestPriorityForAnalysis();
RulesEditor.java,String message = pmdException.getMessage();,if (pmdException != null ) String message = pmdException.getMessage();
RulesEditor.java,Exception exception = pmdException.getReason();,if (pmdException != null ) Exception exception = pmdException.getReason();
RulesEditor.java,Enumeration ruleSetNodes = rootNode.children();,if (rootNode != null ) Enumeration ruleSetNodes = rootNode.children();
RulesEditor.java,RulesTreeNode ruleSetNode = (RulesTreeNode) ruleSetNodes.nextElement();,if (ruleSetNodes != null ) RulesTreeNode ruleSetNode = (RulesTreeNode) ruleSetNodes.nextElement();
RulesEditor.java,Enumeration ruleNodes = ruleSetNode.children();,if (ruleSetNode != null ) Enumeration ruleNodes = ruleSetNode.children();
RulesEditor.java,RulesTreeNode ruleNode = (RulesTreeNode) ruleNodes.nextElement();,if (ruleNodes != null ) RulesTreeNode ruleNode = (RulesTreeNode) ruleNodes.nextElement();
RulesTree.java,TreePath treePath = new TreePath(getRootNode().getPath());,if (TreePath(getRootNode() != null ) TreePath treePath = new TreePath(getRootNode().getPath());
RulesTree.java,TreePath treePath = new TreePath(node.getPath());,if (TreePath(node != null ) TreePath treePath = new TreePath(node.getPath());
RulesTree.java,TreePath treePath = new TreePath(node.getPath());,if (TreePath(node != null ) TreePath treePath = new TreePath(node.getPath());
RulesTree.java,location = event.getPoint();,if (event != null ) location = event.getPoint();
RulesTree.java,treeNode = (RulesTreeNode) treePath.getLastPathComponent();,if (treePath != null ) treeNode = (RulesTreeNode) treePath.getLastPathComponent();
RulesTree.java,JCheckBoxMenuItem includeMenuItem = (JCheckBoxMenuItem) event.getSource();,if (event != null ) JCheckBoxMenuItem includeMenuItem = (JCheckBoxMenuItem) event.getSource();
RulesTree.java,RulesTreeNode rootNode = rulesTree.getSelectedNode();,if (rulesTree != null ) RulesTreeNode rootNode = rulesTree.getSelectedNode();
RulesTree.java,RulesTreeNode ruleSetNode = RulesTree.this.getSelectedNode();,if (RulesTree != null ) RulesTreeNode ruleSetNode = RulesTree.this.getSelectedNode();
RulesTree.java,String ruleSetName = ruleSetNode.getName();,if (ruleSetNode != null ) String ruleSetName = ruleSetNode.getName();
RulesTree.java,String message = pmdException.getMessage();,if (pmdException != null ) String message = pmdException.getMessage();
RulesTree.java,Exception exception = pmdException.getReason();,if (pmdException != null ) Exception exception = pmdException.getReason();
RulesTree.java,String className = rule.getClass().getName();,if (rule != null ) String className = rule.getClass().getName();
RulesTree.java,RulesTreeNode ruleSetNode = rulesTree.getSelectedNode();,if (rulesTree != null ) RulesTreeNode ruleSetNode = rulesTree.getSelectedNode();
RulesTree.java,DefaultTreeModel treeModel = (DefaultTreeModel) rulesTree.getModel();,if (rulesTree != null ) DefaultTreeModel treeModel = (DefaultTreeModel) rulesTree.getModel();
RulesTree.java,TreePath treePath = new TreePath(ruleNode.getPath());,if (TreePath(ruleNode != null ) TreePath treePath = new TreePath(ruleNode.getPath());
RulesTree.java,File selectedFile = dialog.getSelectedClassFile();,if (dialog != null ) File selectedFile = dialog.getSelectedClassFile();
RulesTree.java,Object object = clazz.newInstance();,if (clazz != null ) Object object = clazz.newInstance();
RulesTree.java,String abstractRuleClassName = AbstractRule.class.getName();,if (AbstractRule != null ) String abstractRuleClassName = AbstractRule.class.getName();
RulesTree.java,buffer = byteArrayOutputStream.toByteArray();,if (byteArrayOutputStream != null ) buffer = byteArrayOutputStream.toByteArray();
RulesTree.java,RulesTreeNode ruleNode = RulesTree.this.getSelectedNode();,if (RulesTree != null ) RulesTreeNode ruleNode = RulesTree.this.getSelectedNode();
RulesTree.java,String ruleName = ruleNode.getName();,if (ruleNode != null ) String ruleName = ruleNode.getName();
RulesTree.java,RulesTreeNode ruleNode = rulesTree.getSelectedNode();,if (rulesTree != null ) RulesTreeNode ruleNode = rulesTree.getSelectedNode();
RulesTree.java,DefaultTreeModel treeModel = (DefaultTreeModel) rulesTree.getModel();,if (rulesTree != null ) DefaultTreeModel treeModel = (DefaultTreeModel) rulesTree.getModel();
RulesTree.java,RulesTreeNode propertyNode = RulesTree.this.getSelectedNode();,if (RulesTree != null ) RulesTreeNode propertyNode = RulesTree.this.getSelectedNode();
RulesTree.java,String propertyName = propertyNode.getName();,if (propertyNode != null ) String propertyName = propertyNode.getName();
RulesTree.java,font = RulesTree.this.getFont();,if (RulesTree != null ) font = RulesTree.this.getFont();
RulesTreeModel.java,Enumeration ruleSetNodes = rootNode.children();,if (rootNode != null ) Enumeration ruleSetNodes = rootNode.children();
RulesTreeModel.java,RulesTreeNode ruleSetNode = (RulesTreeNode) ruleSetNodes.nextElement();,if (ruleSetNodes != null ) RulesTreeNode ruleSetNode = (RulesTreeNode) ruleSetNodes.nextElement();
RulesTreeModel.java,Enumeration ruleSetNodes = rootNode.children();,if (rootNode != null ) Enumeration ruleSetNodes = rootNode.children();
RulesTreeModel.java,RulesTreeNode ruleSetNode = (RulesTreeNode) ruleSetNodes.nextElement();,if (ruleSetNodes != null ) RulesTreeNode ruleSetNode = (RulesTreeNode) ruleSetNodes.nextElement();
RulesTreeModel.java,Enumeration ruleNodes = ruleSetNode.children();,if (ruleSetNode != null ) Enumeration ruleNodes = ruleSetNode.children();
RulesTreeModel.java,RulesTreeNode ruleNode = (RulesTreeNode) ruleNodes.nextElement();,if (ruleNodes != null ) RulesTreeNode ruleNode = (RulesTreeNode) ruleNodes.nextElement();
RulesTreeModel.java,ruleSet = ruleSetNode.getRuleSet();,if (ruleSetNode != null ) ruleSet = ruleSetNode.getRuleSet();
RulesTreeModel.java,setOfRules = ruleSet.getRules();,if (ruleSet != null ) setOfRules = ruleSet.getRules();
RulesTreeModel.java,Rule rule = ruleNode.getRule();,if (ruleNode != null ) Rule rule = ruleNode.getRule();
RulesTreeModel.java,Properties props = rule.getProperties();,if (rule != null ) Properties props = rule.getProperties();
RulesTreeModel.java,Enumeration keys = properties.keys();,if (properties != null ) Enumeration keys = properties.keys();
RulesTreeModel.java,propertyNames[index] = (String) keys.nextElement();,if (keys != null ) propertyNames[index] = (String) keys.nextElement();
RulesTreeModel.java,RulesTreeNode parentNode = event.getParentNode();,if (event != null ) RulesTreeNode parentNode = event.getParentNode();
RulesTreeNode.java,properties = new RuleProperties(rule.getProperties());,if (RuleProperties(rule != null ) properties = new RuleProperties(rule.getProperties());
RulesTreeNode.java,RulesTreeNode childNode = (RulesTreeNode) children.nextElement();,if (children != null ) RulesTreeNode childNode = (RulesTreeNode) children.nextElement();
RulesTreeNode.java,include = ruleSetNode.include();,if (ruleSetNode != null ) include = ruleSetNode.include();
RulesTreeNode.java,ruleSetNode = (RulesTreeNode) ruleNode.getParent();,if (ruleNode != null ) ruleSetNode = (RulesTreeNode) ruleNode.getParent();
RulesTreeNode.java,include = ruleSetNode.include();,if (ruleSetNode != null ) include = ruleSetNode.include();
RulesTreeNode.java,text = text.trim();,if (text != null ) text = text.trim();
RulesTreeNode.java,String currentNodeName = treeNodes[n].getName();,if (treeNodes[n] != null ) String currentNodeName = treeNodes[n].getName();
SearchResultsViewer.java,String fileName = file.getName().toLowerCase();,if (file != null ) String fileName = file.getName().toLowerCase();
SearchViewer.java,font = titledBorder.getTitleFont();,if (titledBorder != null ) font = titledBorder.getTitleFont();
SearchViewer.java,Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();,if (Toolkit != null ) Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
SearchViewer.java,Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();,if (Toolkit != null ) Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
SearchViewer.java,String message = pmdException.getMessage();,if (pmdException != null ) String message = pmdException.getMessage();
SearchViewer.java,Exception exception = pmdException.getReason();,if (pmdException != null ) Exception exception = pmdException.getReason();
SearchViewer.java,String directory = Preferences.getPreferences().getAnalysisResultsPath();,if (Preferences != null ) String directory = Preferences.getPreferences().getAnalysisResultsPath();
SearchViewer.java,String message = pmdException.getMessage();,if (pmdException != null ) String message = pmdException.getMessage();
SearchViewer.java,Exception exception = pmdException.getReason();,if (pmdException != null ) Exception exception = pmdException.getReason();
SearchViewer.java,String path = Preferences.getPreferences().getAnalysisResultsPath();,if (Preferences != null ) String path = Preferences.getPreferences().getAnalysisResultsPath();
SearchViewer.java,String message = pmdException.getMessage();,if (pmdException != null ) String message = pmdException.getMessage();
SearchViewer.java,Exception exception = pmdException.getReason();,if (pmdException != null ) Exception exception = pmdException.getReason();
SearchViewer.java,String fileName = file.getName();,if (file != null ) String fileName = file.getName();
SearchViewer.java,Enumeration ruleSets = rulesNode.children();,if (rulesNode != null ) Enumeration ruleSets = rulesNode.children();
SearchViewer.java,RulesTreeNode childNode = (RulesTreeNode) ruleSets.nextElement();,if (ruleSets != null ) RulesTreeNode childNode = (RulesTreeNode) ruleSets.nextElement();
SearchViewer.java,ruleSet = rulesNode.getRuleSet();,if (rulesNode != null ) ruleSet = rulesNode.getRuleSet();
SearchViewer.java,rulesNode = (RulesTreeNode) rulesNode.getParent();,if (rulesNode != null ) rulesNode = (RulesTreeNode) rulesNode.getParent();
SearchViewer.java,File directory = (File) directoryNode.getUserObject();,if (directoryNode != null ) File directory = (File) directoryNode.getUserObject();
StatusBar.java,Rectangle oldClip = graphics.getClipBounds();,if (graphics != null ) Rectangle oldClip = graphics.getClipBounds();
StatusBar.java,Color oldColor = graphics.getColor();,if (graphics != null ) Color oldColor = graphics.getColor();
TextRenderer.java,Iterator violations = report.iterator();,if (report != null ) Iterator violations = report.iterator();
TextRenderer.java,RuleViolation ruleViolation = (RuleViolation) violations.next();,if (violations != null ) RuleViolation ruleViolation = (RuleViolation) violations.next();
TextRenderer.java,Rule rule = ruleViolation.getRule();,if (ruleViolation != null ) Rule rule = ruleViolation.getRule();
TextRenderer.java,String ruleMessage = ruleViolation.getDescription();,if (ruleViolation != null ) String ruleMessage = ruleViolation.getDescription();
TextRenderer.java,String description = rule.getDescription();,if (rule != null ) String description = rule.getDescription();
TextRenderer.java,String example = rule.getExample();,if (rule != null ) String example = rule.getExample();
AnalyzeFileEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
AnalyzeFileEvent.java,listener = (AnalyzeFileEventListener) listeners.next();,if (listeners != null ) listener = (AnalyzeFileEventListener) listeners.next();
AnalyzeFileEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
AnalyzeFileEvent.java,listener = (AnalyzeFileEventListener) listeners.next();,if (listeners != null ) listener = (AnalyzeFileEventListener) listeners.next();
DirectoryTableEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
DirectoryTableEvent.java,listener = (DirectoryTableEventListener) listeners.next();,if (listeners != null ) listener = (DirectoryTableEventListener) listeners.next();
DirectoryTableEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
DirectoryTableEvent.java,listener = (DirectoryTableEventListener) listeners.next();,if (listeners != null ) listener = (DirectoryTableEventListener) listeners.next();
DirectoryTableEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
DirectoryTableEvent.java,listener = (DirectoryTableEventListener) listeners.next();,if (listeners != null ) listener = (DirectoryTableEventListener) listeners.next();
HTMLAnalysisResultsEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
HTMLAnalysisResultsEvent.java,listener = (HTMLAnalysisResultsEventListener) listeners.next();,if (listeners != null ) listener = (HTMLAnalysisResultsEventListener) listeners.next();
HTMLAnalysisResultsEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
HTMLAnalysisResultsEvent.java,listener = (HTMLAnalysisResultsEventListener) listeners.next();,if (listeners != null ) listener = (HTMLAnalysisResultsEventListener) listeners.next();
ListenerList.java,Object listener = listeners.next();,if (listeners != null ) Object listener = listeners.next();
MessageEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
MessageEvent.java,listener = (MessageEventListener) listeners.next();,if (listeners != null ) listener = (MessageEventListener) listeners.next();
PMDDirectoryRequestEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
PMDDirectoryRequestEvent.java,listener = (PMDDirectoryRequestEventListener) listeners.next();,if (listeners != null ) listener = (PMDDirectoryRequestEventListener) listeners.next();
PMDDirectoryRequestEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
PMDDirectoryRequestEvent.java,listener = (PMDDirectoryRequestEventListener) listeners.next();,if (listeners != null ) listener = (PMDDirectoryRequestEventListener) listeners.next();
PMDDirectoryRequestEvent.java,String message = pmdException.getMessage();,if (pmdException != null ) String message = pmdException.getMessage();
PMDDirectoryRequestEvent.java,Exception exception = pmdException.getReason();,if (pmdException != null ) Exception exception = pmdException.getReason();
PMDDirectoryRequestEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
PMDDirectoryRequestEvent.java,listener = (PMDDirectoryRequestEventListener) listeners.next();,if (listeners != null ) listener = (PMDDirectoryRequestEventListener) listeners.next();
PMDDirectoryRequestEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
PMDDirectoryRequestEvent.java,listener = (PMDDirectoryRequestEventListener) listeners.next();,if (listeners != null ) listener = (PMDDirectoryRequestEventListener) listeners.next();
PMDDirectoryRequestEvent.java,String message = pmdException.getMessage();,if (pmdException != null ) String message = pmdException.getMessage();
PMDDirectoryRequestEvent.java,Exception exception = pmdException.getReason();,if (pmdException != null ) Exception exception = pmdException.getReason();
PMDDirectoryReturnedEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
PMDDirectoryReturnedEvent.java,listener = (PMDDirectoryReturnedEventListener) listeners.next();,if (listeners != null ) listener = (PMDDirectoryReturnedEventListener) listeners.next();
PMDDirectoryReturnedEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
PMDDirectoryReturnedEvent.java,listener = (PMDDirectoryReturnedEventListener) listeners.next();,if (listeners != null ) listener = (PMDDirectoryReturnedEventListener) listeners.next();
PMDDirectoryReturnedEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
PMDDirectoryReturnedEvent.java,listener = (PMDDirectoryReturnedEventListener) listeners.next();,if (listeners != null ) listener = (PMDDirectoryReturnedEventListener) listeners.next();
PMDDirectoryReturnedEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
PMDDirectoryReturnedEvent.java,listener = (PMDDirectoryReturnedEventListener) listeners.next();,if (listeners != null ) listener = (PMDDirectoryReturnedEventListener) listeners.next();
RuleSetChangedEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
RuleSetChangedEvent.java,listener = (RuleSetChangedEventListener) listeners.next();,if (listeners != null ) listener = (RuleSetChangedEventListener) listeners.next();
RuleSetChangedEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
RuleSetChangedEvent.java,listener = (RuleSetChangedEventListener) listeners.next();,if (listeners != null ) listener = (RuleSetChangedEventListener) listeners.next();
RuleSetEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
RuleSetEvent.java,listener = (RuleSetEventListener) listeners.next();,if (listeners != null ) listener = (RuleSetEventListener) listeners.next();
RulesEditingEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
RulesEditingEvent.java,listener = (RulesEditingEventListener) listeners.next();,if (listeners != null ) listener = (RulesEditingEventListener) listeners.next();
RulesEditingEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
RulesEditingEvent.java,listener = (RulesEditingEventListener) listeners.next();,if (listeners != null ) listener = (RulesEditingEventListener) listeners.next();
RulesInMemoryEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
RulesInMemoryEvent.java,listener = (RulesInMemoryEventListener) listeners.next();,if (listeners != null ) listener = (RulesInMemoryEventListener) listeners.next();
RulesInMemoryEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
RulesInMemoryEvent.java,listener = (RulesInMemoryEventListener) listeners.next();,if (listeners != null ) listener = (RulesInMemoryEventListener) listeners.next();
RulesInMemoryEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
RulesInMemoryEvent.java,listener = (RulesInMemoryEventListener) listeners.next();,if (listeners != null ) listener = (RulesInMemoryEventListener) listeners.next();
RulesTreeModelEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
RulesTreeModelEvent.java,listener = (RulesTreeModelEventListener) listeners.next();,if (listeners != null ) listener = (RulesTreeModelEventListener) listeners.next();
RulesTreeModelEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
RulesTreeModelEvent.java,listener = (RulesTreeModelEventListener) listeners.next();,if (listeners != null ) listener = (RulesTreeModelEventListener) listeners.next();
RulesTreeModelEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
RulesTreeModelEvent.java,listener = (RulesTreeModelEventListener) listeners.next();,if (listeners != null ) listener = (RulesTreeModelEventListener) listeners.next();
SearchDirectoryEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
SearchDirectoryEvent.java,listener = (SearchDirectoryEventListener) listeners.next();,if (listeners != null ) listener = (SearchDirectoryEventListener) listeners.next();
SearchRuleEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
SearchRuleEvent.java,listener = (SearchRuleEventListener) listeners.next();,if (listeners != null ) listener = (SearchRuleEventListener) listeners.next();
SetupFilesEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
SetupFilesEvent.java,listener = (SetupFilesEventListener) listeners.next();,if (listeners != null ) listener = (SetupFilesEventListener) listeners.next();
SetupFilesEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
SetupFilesEvent.java,listener = (SetupFilesEventListener) listeners.next();,if (listeners != null ) listener = (SetupFilesEventListener) listeners.next();
SetupFilesEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
SetupFilesEvent.java,listener = (SetupFilesEventListener) listeners.next();,if (listeners != null ) listener = (SetupFilesEventListener) listeners.next();
StatusBarEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
StatusBarEvent.java,listener = (StatusBarEventListener) listeners.next();,if (listeners != null ) listener = (StatusBarEventListener) listeners.next();
StatusBarEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
StatusBarEvent.java,listener = (StatusBarEventListener) listeners.next();,if (listeners != null ) listener = (StatusBarEventListener) listeners.next();
StatusBarEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
StatusBarEvent.java,listener = (StatusBarEventListener) listeners.next();,if (listeners != null ) listener = (StatusBarEventListener) listeners.next();
TextAnalysisResultsEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
TextAnalysisResultsEvent.java,listener = (TextAnalysisResultsEventListener) listeners.next();,if (listeners != null ) listener = (TextAnalysisResultsEventListener) listeners.next();
TextAnalysisResultsEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
TextAnalysisResultsEvent.java,listener = (TextAnalysisResultsEventListener) listeners.next();,if (listeners != null ) listener = (TextAnalysisResultsEventListener) listeners.next();
PMDViewerTester.java,final LogManager manager = LogManager.getLogManager();,if (LogManager != null ) final LogManager manager = LogManager.getLogManager();
PMDViewerTester.java,final Enumeration loggers = manager.getLoggerNames();,if (manager != null ) final Enumeration loggers = manager.getLoggerNames();
PMDViewerTester.java,final String logName = (String) loggers.nextElement();,if (loggers != null ) final String logName = (String) loggers.nextElement();
Designer.java,Parser parser = languageVersionHandler.getParser(languageVersionHandler.getDefaultParserOptions());,if (languageVersionHandler != null ) Parser parser = languageVersionHandler.getParser(languageVersionHandler.getDefaultParserOptions());
PMDParameters.java,private String language = Language.getDefaultLanguage().getTerseName();,if (Language != null ) private String language = Language.getDefaultLanguage().getTerseName();
PMDParameters.java,languageVersion = language.getLanguage().getDefaultVersion();,if (language != null ) languageVersion = language.getLanguage().getDefaultVersion();
CLITest.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
XmlParser.java,DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();,if (DocumentBuilderFactory != null ) DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();
XmlParser.java,DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();,if (documentBuilderFactory != null ) DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();
GeneralFiddlingTest.java,DataFlowNode dfan = (DataFlowNode) i.next();,if (i != null ) DataFlowNode dfan = (DataFlowNode) i.next();
GeneralFiddlingTest.java,List va = dfan.getVariableAccess();,if (dfan != null ) List va = dfan.getVariableAccess();
GeneralFiddlingTest.java,VariableAccess o = (VariableAccess) j.next();,if (j != null ) VariableAccess o = (VariableAccess) j.next();
StatementAndBraceFinderTest.java,DataFlowNode dfn = (DataFlowNode) ex.getDataFlowNode();,if (ex != null ) DataFlowNode dfn = (DataFlowNode) ex.getDataFlowNode();
StatementAndBraceFinderTest.java,PLSQLNode PLSQLNode = (PLSQLNode) parentDfn.getNode();,if (parentDfn != null ) PLSQLNode PLSQLNode = (PLSQLNode) parentDfn.getNode();
ClassScopeTest.java,MethodNameDeclaration mnd = (MethodNameDeclaration) entry.getKey();,if (entry != null ) MethodNameDeclaration mnd = (MethodNameDeclaration) entry.getKey();
ClassScopeTest.java,List<NameOccurrence> usages = entry.getValue();,if (entry != null ) List<NameOccurrence> usages = entry.getValue();
AbstractInefficientZeroCheck.java,Node nameNode = node.getTypeNameNode();,if (node != null ) Node nameNode = node.getTypeNameNode();
VariableNameDeclaration.java,ASTType typeNode = astVariableDeclaratorId.getTypeNode();,if (astVariableDeclaratorId != null ) ASTType typeNode = astVariableDeclaratorId.getTypeNode();
ClassScopeTest.java,Iterator i = m.entrySet().iterator();,if (m != null ) Iterator i = m.entrySet().iterator();
ClassScopeTest.java,Map.Entry entry = (Map.Entry) i.next();,if (i != null ) Map.Entry entry = (Map.Entry) i.next();
ClassScopeTest.java,List usages = (List) entry.getValue();,if (entry != null ) List usages = (List) entry.getValue();
ClassScopeTest.java,mnd = (MethodNameDeclaration) i.next();,if (i != null ) mnd = (MethodNameDeclaration) i.next();
SaxonXPathRuleQuery.java,String name = xpathVariable.getVariableQName().getLocalName();,if (xpathVariable != null ) String name = xpathVariable.getVariableQName().getLocalName();
SaxonXPathRuleQuery.java,Object value = entry.getValue();,if (entry != null ) Object value = entry.getValue();
SaxonXPathRuleQuery.java,root = root.jjtGetParent();,if (root != null ) root = root.jjtGetParent();
SaxonXPathRuleQuery.java,XPathStaticContext xpathStaticContext = xpathEvaluator.getStaticContext();,if (xpathEvaluator != null ) XPathStaticContext xpathStaticContext = xpathEvaluator.getStaticContext();
SaxonXPathRuleQuery.java,String name = propertyDescriptor.name();,if (propertyDescriptor != null ) String name = propertyDescriptor.name();
PMDConfiguration.java,private int threads = Runtime.getRuntime().availableProcessors();,if (Runtime != null ) private int threads = Runtime.getRuntime().availableProcessors();
PMDConfiguration.java,private ClassLoader classLoader = getClass().getClassLoader();,if (getClass() != null ) private ClassLoader classLoader = getClass().getClassLoader();
PMDConfiguration.java,classLoader = getClass().getClassLoader();,if (getClass() != null ) classLoader = getClass().getClassLoader();
PMDConfiguration.java,classLoader = PMDConfiguration.class.getClassLoader();,if (PMDConfiguration != null ) classLoader = PMDConfiguration.class.getClassLoader();
OverrideBothEqualsAndHashcodeRule.java,paramName = param.getImage();,if (param != null ) paramName = param.getImage();
AbstractNcssCountRule.java,numNodes += treeSize.intValue();,if (treeSize != null ) numNodes += treeSize.intValue();
AbstractNcssCountRule.java,lineCount += nodeCount.intValue();,if (nodeCount != null ) lineCount += nodeCount.intValue();
NPathComplexityRule.java,children += element.jjtGetNumChildren();,if (element != null ) children += element.jjtGetNumChildren();
NPathComplexityRule.java,children += element.jjtGetNumChildren();,if (element != null ) children += element.jjtGetNumChildren();
RegexHelper.java,patterns = new ArrayList<Pattern>(list.size());,if (ArrayList<Pattern>(list != null ) patterns = new ArrayList<Pattern>(list.size());
AbstractPropertySource.java,value = propertyDescriptor.defaultValue();,if (propertyDescriptor != null ) value = propertyDescriptor.defaultValue();
PMD.java,LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();,if (languageVersion != null ) LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();
PMD.java,long startLoadRules = System.nanoTime();,if (System != null ) long startLoadRules = System.nanoTime();
PMD.java,long reportStart = System.nanoTime();,if (System != null ) long reportStart = System.nanoTime();
PMD.java,Renderer renderer = configuration.createRenderer();,if (configuration != null ) Renderer renderer = configuration.createRenderer();
PMD.java,reportStart = System.nanoTime();,if (System != null ) reportStart = System.nanoTime();
PMD.java,final boolean useShortNames = configuration.isReportShortNames();,if (configuration != null ) final boolean useShortNames = configuration.isReportShortNames();
PMD.java,final String inputPaths = configuration.getInputPaths();,if (configuration != null ) final String inputPaths = configuration.getInputPaths();
PMD.java,LanguageVersionDiscoverer discoverer = configuration.getLanguageVersionDiscoverer();,if (configuration != null ) LanguageVersionDiscoverer discoverer = configuration.getLanguageVersionDiscoverer();
PMD.java,Language language = rule.getLanguage();,if (rule != null ) Language language = rule.getLanguage();
PMD.java,long start = System.nanoTime();,if (System != null ) long start = System.nanoTime();
PMD.java,final Level oldLogLevel = LOG.getLevel();,if (LOG != null ) final Level oldLogLevel = LOG.getLevel();
PMD.java,long end = System.nanoTime();,if (System != null ) long end = System.nanoTime();
CloneMethodMustImplementCloneable.java,Class clazz = type.getType();,if (type != null ) Class clazz = type.getType();
TypeOfFunction.java,List<Class> implementors = Arrays.asList(type.getInterfaces());,if (Arrays != null ) List<Class> implementors = Arrays.asList(type.getInterfaces());
PMD.java,long startFiles = System.nanoTime();,if (System != null ) long startFiles = System.nanoTime();
PMD.java,String uriString = configuration.getInputUri();,if (configuration != null ) String uriString = configuration.getInputUri();
PMD.java,long endFiles = System.nanoTime();,if (System != null ) long endFiles = System.nanoTime();
VariableAccessVisitor.java,VariableNameDeclaration vnd = entry.getKey();,if (entry != null ) VariableNameDeclaration vnd = entry.getKey();
OccurrenceFinder.java,List<NameOccurrence> names = nameFinder.getNames();,if (nameFinder != null ) List<NameOccurrence> names = nameFinder.getNames();
DFAPLSQLPanel.java,List<DataFlowNode> kids = node.getChildren();,if (node != null ) List<DataFlowNode> kids = node.getChildren();
DFAPLSQLPanel.java,List<VariableAccess> access = flow.get(i).getVariableAccess();,if (flow != null ) List<VariableAccess> access = flow.get(i).getVariableAccess();
DFAPLSQLPanel.java,labels[i] = exp.toString();,if (exp != null ) labels[i] = exp.toString();
DFAPLSQLPanel.java,DataFlowNode dataFlowNode = node.getDataFlowNode();,if (node != null ) DataFlowNode dataFlowNode = node.getDataFlowNode();
DFAPLSQLPanel.java,List<DataFlowNode> flow = node.getDataFlowNode().getFlow();,if (node != null ) List<DataFlowNode> flow = node.getDataFlowNode().getFlow();
DFAPLSQLPanel.java,y = computeDrawPos(inode.getIndex());,if (computeDrawPos(inode != null ) y = computeDrawPos(inode.getIndex());
DFAPLSQLPanel.java,String idx = String.valueOf(inode.getIndex());,if (String != null ) String idx = String.valueOf(inode.getIndex());
DFAPLSQLPanel.java,wrapper = (ElementWrapper) nodeList.getSelectedValue();,if (nodeList != null ) wrapper = (ElementWrapper) nodeList.getSelectedValue();
PLSQLDesigner.java,Parser parser = languageVersionHandler.getParser(languageVersionHandler.getDefaultParserOptions());,if (languageVersionHandler != null ) Parser parser = languageVersionHandler.getParser(languageVersionHandler.getDefaultParserOptions());
PLSQLDesigner.java,String source = codeEditorPane.getText();,if (codeEditorPane != null ) String source = codeEditorPane.getText();
PLSQLDesigner.java,LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();,if (languageVersion != null ) LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();
PLSQLDesigner.java,Parser parser = languageVersionHandler.getParser(languageVersionHandler.getDefaultParserOptions());,if (languageVersionHandler != null ) Parser parser = languageVersionHandler.getParser(languageVersionHandler.getDefaultParserOptions());
PLSQLDesigner.java,Node parent = node.jjtGetParent();,if (node != null ) Node parent = node.jjtGetParent();
PLSQLDesigner.java,Attribute attribute = attributeAxisIterator.next();,if (attributeAxisIterator != null ) Attribute attribute = attributeAxisIterator.next();
PLSQLDesigner.java,"TreePath curPath = getPathForLocation(e.getX(), e.getY());","if (e != null ) TreePath curPath = getPathForLocation(e.getX(), e.getY());"
PLSQLDesigner.java,TreeNode node = (TreeNode) parent.getLastPathComponent();,if (parent != null ) TreeNode node = (TreeNode) parent.getLastPathComponent();
PLSQLDesigner.java,StringReader reader = new StringReader(codeEditorPane.getText());,if (StringReader(codeEditorPane != null ) StringReader reader = new StringReader(codeEditorPane.getText());
PLSQLDesigner.java,List<ExecutableCode> executables = dfaGraphRule.getExecutables();,if (dfaGraphRule != null ) List<ExecutableCode> executables = dfaGraphRule.getExecutables();
PLSQLDesigner.java,Scope scope = astTreeNode.getScope();,if (astTreeNode != null ) Scope scope = astTreeNode.getScope();
PLSQLDesigner.java,scope = scope.getParent();,if (scope != null ) scope = scope.getParent();
PLSQLDesigner.java,List<String> attributes = astTreeNode.getAttributes();,if (astTreeNode != null ) List<String> attributes = astTreeNode.getAttributes();
PLSQLDesigner.java,name = value.toString();,if (value != null ) name = value.toString();
PLSQLDesigner.java,text = sb.toString();,if (sb != null ) text = sb.toString();
PLSQLDesigner.java,text = value.toString();,if (value != null ) text = value.toString();
PLSQLDesigner.java,ListSelectionModel lsm = (ListSelectionModel) e.getSource();,if (e != null ) ListSelectionModel lsm = (ListSelectionModel) e.getSource();
PLSQLDesigner.java,Object o = xpathResults.get(lsm.getMinSelectionIndex());,if (xpathResults != null ) Object o = xpathResults.get(lsm.getMinSelectionIndex());
PLSQLDesigner.java,Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();,if (Toolkit != null ) Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
PLSQLDesigner.java,JRadioButtonMenuItem button = new JRadioButtonMenuItem(languageVersion.getShortName());,if (JRadioButtonMenuItem(languageVersion != null ) JRadioButtonMenuItem button = new JRadioButtonMenuItem(languageVersion.getShortName());
PLSQLDesigner.java,JFrame tmp = (JFrame) e.getSource();,if (e != null ) JFrame tmp = (JFrame) e.getSource();
PLSQLDesigner.java,TreeSelectionModel model = astTreeWidget.getSelectionModel();,if (astTreeWidget != null ) TreeSelectionModel model = astTreeWidget.getSelectionModel();
PLSQLDesigner.java,ActionMap actionMap = textConponent.getActionMap();,if (textConponent != null ) ActionMap actionMap = textConponent.getActionMap();
PLSQLDesigner.java,InputMap inputMap = textConponent.getInputMap();,if (textConponent != null ) InputMap inputMap = textConponent.getInputMap();
PLSQLDesigner.java,Source source = new DOMSource(node.getAsDocument());,if (DOMSource(node != null ) Source source = new DOMSource(node.getAsDocument());
PLSQLDesigner.java,TransformerFactory transformerFactory = TransformerFactory.newInstance();,if (TransformerFactory != null ) TransformerFactory transformerFactory = TransformerFactory.newInstance();
PLSQLDesigner.java,Transformer xformer = transformerFactory.newTransformer();,if (transformerFactory != null ) Transformer xformer = transformerFactory.newTransformer();
PLSQLDesigner.java,DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();,if (DocumentBuilderFactory != null ) DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();
PLSQLDesigner.java,Element settingsElement = document.getDocumentElement();,if (document != null ) Element settingsElement = document.getDocumentElement();
PLSQLDesigner.java,DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();,if (DocumentBuilderFactory != null ) DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();
PLSQLDesigner.java,DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();,if (documentBuilderFactory != null ) DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();
PLSQLDesigner.java,Document document = documentBuilder.newDocument();,if (documentBuilder != null ) Document document = documentBuilder.newDocument();
PLSQLDesigner.java,TransformerFactory transformerFactory = TransformerFactory.newInstance();,if (TransformerFactory != null ) TransformerFactory transformerFactory = TransformerFactory.newInstance();
PLSQLDesigner.java,Transformer transformer = transformerFactory.newTransformer();,if (transformerFactory != null ) Transformer transformer = transformerFactory.newTransformer();
JavaRuleViolation.java,final SourceFileScope sourceFileScope = scope.getEnclosingSourceFileScope();,if (scope != null ) final SourceFileScope sourceFileScope = scope.getEnclosingSourceFileScope();
JavaRuleViolation.java,methodName = scope.getEnclosingMethodScope().getName();,if (scope != null ) methodName = scope.getEnclosingMethodScope().getName();
CheckSkipResultRule.java,NameOccurrence qualifier = occ.getNameForWhichThisIsAQualifier();,if (occ != null ) NameOccurrence qualifier = occ.getNameForWhichThisIsAQualifier();
CheckSkipResultRule.java,JavaNode loc = occ.getLocation();,if (occ != null ) JavaNode loc = occ.getLocation();
LawOfDemeterRule.java,baseTypeName = var.getTypeImage();,if (var != null ) baseTypeName = var.getTypeImage();
LawOfDemeterRule.java,baseType = var.getType();,if (var != null ) baseType = var.getType();
ImmutableFieldRule.java,Node node = occ.getLocation();,if (occ != null ) Node node = occ.getLocation();
AvoidCallingFinalizeRule.java,MethodScope meth = name.getScope().getEnclosingMethodScope();,if (name != null ) MethodScope meth = name.getScope().getEnclosingMethodScope();
AvoidCallingFinalizeRule.java,MethodScope meth = pp.getScope().getEnclosingMethodScope();,if (pp != null ) MethodScope meth = pp.getScope().getEnclosingMethodScope();
MethodArgumentCouldBeFinalRule.java,AccessNode node = var.getAccessNodeParent();,if (var != null ) AccessNode node = var.getAccessNodeParent();
ConsecutiveLiteralAppendsRule.java,List<NameOccurrence> decl = entry.getValue();,if (entry != null ) List<NameOccurrence> decl = entry.getValue();
ConsecutiveLiteralAppendsRule.java,Node n = no.getLocation();,if (no != null ) Node n = no.getLocation();
InefficientStringBufferingRule.java,VariableNameDeclaration vnd = (VariableNameDeclaration) name.getNameDeclaration();,if (name != null ) VariableNameDeclaration vnd = (VariableNameDeclaration) name.getNameDeclaration();
InsufficientStringBufferDeclarationRule.java,Node n = no.getLocation();,if (no != null ) Node n = no.getLocation();
StringToStringRule.java,NameOccurrence qualifier = occ.getNameForWhichThisIsAQualifier();,if (occ != null ) NameOccurrence qualifier = occ.getNameForWhichThisIsAQualifier();
UselessStringValueOfRule.java,VariableNameDeclaration nd = (VariableNameDeclaration) name.getNameDeclaration();,if (name != null ) VariableNameDeclaration nd = (VariableNameDeclaration) name.getNameDeclaration();
VariableAccessVisitor.java,VariableNameDeclaration vnd = entry.getKey();,if (entry != null ) VariableNameDeclaration vnd = entry.getKey();
ClassScope.java,Node n = occurrence.getLocation();,if (occurrence != null ) Node n = occurrence.getLocation();
ClassScope.java,Node n = occurrence.getLocation();,if (occurrence != null ) Node n = occurrence.getLocation();
ClassScope.java,int usages = methodNames.get(mnd).size();,if (methodNames != null ) int usages = methodNames.get(mnd).size();
LocalScope.java,Node n = occurrence.getLocation();,if (occurrence != null ) Node n = occurrence.getLocation();
MethodScope.java,Node n = occurrence.getLocation();,if (occurrence != null ) Node n = occurrence.getLocation();
OccurrenceFinder.java,List<NameOccurrence> names = nameFinder.getNames();,if (nameFinder != null ) List<NameOccurrence> names = nameFinder.getNames();
TypeHelper.java,List<Class> implementors = Arrays.asList(type.getInterfaces());,if (Arrays != null ) List<Class> implementors = Arrays.asList(type.getInterfaces());
AcceptanceTest.java,VariableNameDeclaration vnd = entry.getKey();,if (entry != null ) VariableNameDeclaration vnd = entry.getKey();
AcceptanceTest.java,JavaNode location = no.getLocation();,if (no != null ) JavaNode location = no.getLocation();
GlobalScopeTest.java,Map m = scope.getClassDeclarations();,if (scope != null ) Map m = scope.getClassDeclarations();
LocalScopeTest.java,Map vars = node.getScope().getVariableDeclarations();,if (node != null ) Map vars = node.getScope().getVariableDeclarations();
LocalScopeTest.java,Map vars = node.getScope().getVariableDeclarations();,if (node != null ) Map vars = node.getScope().getVariableDeclarations();
LocalScopeTest.java,Map vars = node.getScope().getVariableDeclarations();,if (node != null ) Map vars = node.getScope().getVariableDeclarations();
LocalScopeTest.java,MethodScope ms = scope.getEnclosingMethodScope();,if (scope != null ) MethodScope ms = scope.getEnclosingMethodScope();
NameOccurrencesTest.java,List<NameOccurrence> names = occs.getNames();,if (occs != null ) List<NameOccurrence> names = occs.getNames();
SourceFileScopeTest.java,Map m = acu.getScope().getClassDeclarations();,if (acu != null ) Map m = acu.getScope().getClassDeclarations();
SourceFileScopeTest.java,Map m = acu.getScope().getClassDeclarations();,if (acu != null ) Map m = acu.getScope().getClassDeclarations();
Designer.java,List<ASTMethodDeclaration> methods = dfaGraphRule.getMethods();,if (dfaGraphRule != null ) List<ASTMethodDeclaration> methods = dfaGraphRule.getMethods();
ReviewCodeCmd.java,Set<String> activeRuleNames = preferences.getActiveRuleNames();,if (preferences != null ) Set<String> activeRuleNames = preferences.getActiveRuleNames();
VmParserTest.java,LanguageVersionHandler vmLang = LanguageVersion.VM.getLanguageVersionHandler();,if (LanguageVersion != null ) LanguageVersionHandler vmLang = LanguageVersion.VM.getLanguageVersionHandler();
VmParserTest.java,Parser parser = vmLang.getParser(vmLang.getDefaultParserOptions());,if (vmLang != null ) Parser parser = vmLang.getParser(vmLang.getDefaultParserOptions());
NoInlineStyleInformationRule.java,final ASTElement parent = (ASTElement) attributeNode.jjtGetParent();,if (attributeNode != null ) final ASTElement parent = (ASTElement) attributeNode.jjtGetParent();
NodeUtils.java,final Object value = vars.get(nameBuf.toString());,if (vars != null ) final Object value = vars.get(nameBuf.toString());
Block.java,log = rs.getLog();,if (rs != null ) log = rs.getLog();
Break.java,int kids = node.jjtGetNumChildren();,if (node != null ) int kids = node.jjtGetNumChildren();
Evaluate.java,int argCount = node.jjtGetNumChildren();,if (node != null ) int argCount = node.jjtGetNumChildren();
Evaluate.java,sourceText = value.toString();,if (value != null ) sourceText = value.toString();
Evaluate.java,String templateName = context.getCurrentTemplateName();,if (context != null ) String templateName = context.getCurrentTemplateName();
Include.java,int argCount = node.jjtGetNumChildren();,if (node != null ) int argCount = node.jjtGetNumChildren();
Include.java,String sourcearg = value.toString();,if (value != null ) String sourcearg = value.toString();
InputBase.java,Resource current = context.getCurrentResource();,if (context != null ) Resource current = context.getCurrentResource();
Macro.java,int numArgs = node.jjtGetNumChildren();,if (node != null ) int numArgs = node.jjtGetNumChildren();
Macro.java,int numArgs = node.jjtGetNumChildren();,if (node != null ) int numArgs = node.jjtGetNumChildren();
Macro.java,int numArgs = node.jjtGetNumChildren();,if (node != null ) int numArgs = node.jjtGetNumChildren();
Macro.java,argArray[i] = argArray[i].intern();,if (argArray[i] != null ) argArray[i] = argArray[i].intern();
MacroParseException.java,StringBuffer sb = new StringBuffer(super.getMessage());,if (StringBuffer(super != null ) StringBuffer sb = new StringBuffer(super.getMessage());
Parse.java,Object[] templateStack = context.getTemplateNameStack();,if (context != null ) Object[] templateStack = context.getTemplateNameStack();
Parse.java,List macroLibraries = context.getMacroLibraries();,if (context != null ) List macroLibraries = context.getMacroLibraries();
RuntimeMacro.java,Token t = node.getLastToken();,if (node != null ) Token t = node.getLastToken();
RuntimeMacro.java,Token t = node.getFirstToken();,if (node != null ) Token t = node.getFirstToken();
RuntimeMacro.java,literal = buffer.toString();,if (buffer != null ) literal = buffer.toString();
RuntimeMacro.java,String renderingTemplate = context.getCurrentTemplateName();,if (context != null ) String renderingTemplate = context.getCurrentTemplateName();
RuntimeMacro.java,List macroLibraries = context.getMacroLibraries();,if (context != null ) List macroLibraries = context.getMacroLibraries();
Stop.java,int kids = node.jjtGetNumChildren();,if (node != null ) int kids = node.jjtGetNumChildren();
VelocimacroProxy.java,int callArguments = node.jjtGetNumChildren();,if (node != null ) int callArguments = node.jjtGetNumChildren();
VelocimacroProxy.java,Object[] stack = vmc.getMacroNameStack();,if (vmc != null ) Object[] stack = vmc.getMacroNameStack();
VelocimacroProxy.java,int i = node.jjtGetNumChildren();,if (node != null ) int i = node.jjtGetNumChildren();
UseStringBufferLengthRule.java,Node parent = decl.jjtGetParent().jjtGetParent();,if (decl != null ) Node parent = decl.jjtGetParent().jjtGetParent();
PmdContextMenuListener.java,final Element doc = contextMenu.getContext().getElement();,if (contextMenu != null ) final Element doc = contextMenu.getContext().getElement();
PmdContextMenuListener.java,final View view = contextMenu.getContext().getView();,if (contextMenu != null ) final View view = contextMenu.getContext().getView();
PmdController.java,final Element doc = context.getElement();,if (context != null ) final Element doc = context.getElement();
PmdController.java,final View view = context.getView();,if (context != null ) final View view = context.getView();
BaseVisitor.java,LanguageVersion version = PMDPlugin.javaVersionFor(file.getProject());,if (PMDPlugin != null ) LanguageVersion version = PMDPlugin.javaVersionFor(file.getProject());
AbstractCommentRule.java,Object value = entry.getValue();,if (entry != null ) Object value = entry.getValue();
ReviewCodeCmd.java,ruleCount = ruleSet.getRules().size();,if (ruleSet != null ) ruleCount = ruleSet.getRules().size();
ReviewCodeCmd.java,fileCount += visitor.getProcessedFilesCount();,if (visitor != null ) fileCount += visitor.getProcessedFilesCount();
ReviewCodeCmd.java,pmdDuration += visitor.getActualPmdDuration();,if (visitor != null ) pmdDuration += visitor.getActualPmdDuration();
PLSQLParser.java,String suppressMarker = getParserOptions().getSuppressMarker();,if (getParserOptions() != null ) String suppressMarker = getParserOptions().getSuppressMarker();
CyclomaticComplexityRule.java,Entry entry = entryStack.peek();,if (entryStack != null ) Entry entry = entryStack.peek();
ArrayIsStoredDirectlyRule.java,assignedVar = suffix.getImage();,if (suffix != null ) assignedVar = suffix.getImage();
ArrayIsStoredDirectlyRule.java,val = foo.getImage();,if (foo != null ) val = foo.getImage();
AttributeAxisIterator.java,this.name = truncateMethodName(m.getName());,if (truncateMethodName(m != null ) this.name = truncateMethodName(m.getName());
AttributeAxisIterator.java,Method[] preFilter = contextNode.getClass().getMethods();,if (contextNode != null ) Method[] preFilter = contextNode.getClass().getMethods();
AttributeAxisIterator.java,this.methodWrappers = methodCache.get(contextNode.getClass());,if (methodCache != null ) this.methodWrappers = methodCache.get(contextNode.getClass());
AttributeAxisIterator.java,String methodName = method.getName();,if (method != null ) String methodName = method.getName();
Report.java,RuleViolation rv = iter.next();,if (iter != null ) RuleViolation rv = iter.next();
CyclomaticComplexityTest.java,Iterator i = report.iterator();,if (report != null ) Iterator i = report.iterator();
CyclomaticComplexityTest.java,RuleViolation rv = (RuleViolation) i.next();,if (i != null ) RuleViolation rv = (RuleViolation) i.next();
CyclomaticComplexityTest.java,Iterator i = report.iterator();,if (report != null ) Iterator i = report.iterator();
CyclomaticComplexityTest.java,RuleViolation rv = (RuleViolation) i.next();,if (i != null ) RuleViolation rv = (RuleViolation) i.next();
CyclomaticComplexityTest.java,Iterator i = report.iterator();,if (report != null ) Iterator i = report.iterator();
CyclomaticComplexityTest.java,RuleViolation rv = (RuleViolation) i.next();,if (i != null ) RuleViolation rv = (RuleViolation) i.next();
ClassScope.java,res += mnd.toString();,if (mnd != null ) res += mnd.toString();
RuleSetFactory.java,NodeList excludeNodes = ruleElement.getChildNodes();,if (ruleElement != null ) NodeList excludeNodes = ruleElement.getChildNodes();
GuardLogStatementRule.java,Node node = name.jjtGetParent();,if (name != null ) Node node = name.jjtGetParent();
GuardLogStatementRule.java,String lastPrefix = lastPrefix(name.getImage());,if (lastPrefix(name != null ) String lastPrefix = lastPrefix(name.getImage());
GuardLogStatementRule.java,Node node = name.jjtGetParent();,if (name != null ) Node node = name.jjtGetParent();
GuardLogStatementRule.java,String lastPrefix = lastPrefix(name.getImage());,if (lastPrefix(name != null ) String lastPrefix = lastPrefix(name.getImage());
GuardLogStatementRule.java,String image = name.getImage();,if (name != null ) String image = name.getImage();
RuleSetFactory.java,Rule rule = (Rule) c.newInstance();,if (c != null ) Rule rule = (Rule) c.newInstance();
PMDTask.java,LanguageVersion languageVersion = LanguageVersion.findByTerseName(version.getTerseName());,if (LanguageVersion != null ) LanguageVersion languageVersion = LanguageVersion.findByTerseName(version.getTerseName());
CPDDuplicateCodeViewer.java,DefaultMutableTreeNode node = (DefaultMutableTreeNode) tree.getLastSelectedPathComponent();,if (tree != null ) DefaultMutableTreeNode node = (DefaultMutableTreeNode) tree.getLastSelectedPathComponent();
CPDDuplicateCodeViewer.java,DefaultMutableTreeNode root = (DefaultMutableTreeNode) treeModel.getRoot();,if (treeModel != null ) DefaultMutableTreeNode root = (DefaultMutableTreeNode) treeModel.getRoot();
CPDDuplicateCodeViewer.java,"final Buffer buffer = jEdit.openFile(view, duplicate.getFilename());","if (duplicate != null ) final Buffer buffer = jEdit.openFile(view, duplicate.getFilename());"
CPDFileFilter.java,Matcher m = inclusionsPattern.matcher(f.getAbsolutePath());,if (inclusionsPattern != null ) Matcher m = inclusionsPattern.matcher(f.getAbsolutePath());
CPDFileFilter.java,Matcher m = exclusionsPattern.matcher(f.getAbsolutePath());,if (exclusionsPattern != null ) Matcher m = exclusionsPattern.matcher(f.getAbsolutePath());
ErrorListRenderer.java,RuleViolation violation = violations.next();,if (violations != null ) RuleViolation violation = violations.next();
PMDJEditPlugin.java,String modename = buffer.getMode().getName();,if (buffer != null ) String modename = buffer.getMode().getName();
PMDJEditPlugin.java,PMDConfiguration configuration = pmd.getConfiguration();,if (pmd != null ) PMDConfiguration configuration = pmd.getConfiguration();
PMDJEditPlugin.java,RuleSets toCheck = selectedRuleSets.getSelectedRules();,if (selectedRuleSets != null ) RuleSets toCheck = selectedRuleSets.getSelectedRules();
PMDJEditPlugin.java,String path = buffer.getPath();,if (buffer != null ) String path = buffer.getPath();
PMDJEditPlugin.java,PMDConfiguration configuration = pmd.getConfiguration();,if (pmd != null ) PMDConfiguration configuration = pmd.getConfiguration();
PMDJEditPlugin.java,RuleSets toCheck = selectedRuleSets.getSelectedRules();,if (selectedRuleSets != null ) RuleSets toCheck = selectedRuleSets.getSelectedRules();
PMDJEditPlugin.java,selectedFile = chooser.getSelectedFile();,if (chooser != null ) selectedFile = chooser.getSelectedFile();
PMDJEditPlugin.java,inclusions = inclusionsRegex.getText();,if (inclusionsRegex != null ) inclusions = inclusionsRegex.getText();
PMDJEditPlugin.java,exclusions = exclusionsRegex.getText();,if (exclusionsRegex != null ) exclusions = exclusionsRegex.getText();
PMDJEditPlugin.java,mode = ( CPDFileFilter ) fileTypeSelector.getSelectedItem();,if (fileTypeSelector != null ) mode = ( CPDFileFilter ) fileTypeSelector.getSelectedItem();
PMDJEditPlugin.java,lastSelectedFilter = fileTypeSelector.getSelectedIndex();,if (fileTypeSelector != null ) lastSelectedFilter = fileTypeSelector.getSelectedIndex();
PMDJEditPlugin.java,Mode[] modes = jEdit.getModes();,if (jEdit != null ) Mode[] modes = jEdit.getModes();
PMDJEditPlugin.java,String modeName = mode.getName();,if (mode != null ) String modeName = mode.getName();
PMDJEditPlugin.java,Iterator<Match> matches = cpd.getMatches();,if (cpd != null ) Iterator<Match> matches = cpd.getMatches();
PMDJEditPlugin.java,Match match = matches.next();,if (matches != null ) Match match = matches.next();
PMDJEditPlugin.java,TokenEntry mark = occurrences.next();,if (occurrences != null ) TokenEntry mark = occurrences.next();
PMDJEditPlugin.java,int lastLine = mark.getBeginLine() + match.getLineCount();,if (match != null ) int lastLine = mark.getBeginLine() + match.getLineCount();
PMDJEditPlugin.java,String modeName = mode.getName();,if (mode != null ) String modeName = mode.getName();
PMDRulesOptionPane.java,RuleSets rulesets = rules.getSelectedRules();,if (rules != null ) RuleSets rulesets = rules.getSelectedRules();
PMDRulesOptionPane.java,DefaultMutableTreeNode node = ( DefaultMutableTreeNode ) path.getLastPathComponent();,if (path != null ) DefaultMutableTreeNode node = ( DefaultMutableTreeNode ) path.getLastPathComponent();
PMDRulesOptionPane.java,Object userObject = node.getUserObject();,if (node != null ) Object userObject = node.getUserObject();
PMDRulesOptionPane.java,desc = desc.trim();,if (desc != null ) desc = desc.trim();
PMDRulesOptionPane.java,PathBuilder pathBuilder = dialog.getPathBuilder();,if (dialog != null ) PathBuilder pathBuilder = dialog.getPathBuilder();
PMDRulesOptionPane.java,paths = pathBuilder.getPath();,if (pathBuilder != null ) paths = pathBuilder.getPath();
RuleNode.java,name = sb.toString();,if (sb != null ) name = sb.toString();
SelectedRules.java,Iterator<RuleSet> registered = rsf.getRegisteredRuleSets();,if (rsf != null ) Iterator<RuleSet> registered = rsf.getRegisteredRuleSets();
SelectedRules.java,RuleSet rs = registered.next();,if (registered != null ) RuleSet rs = registered.next();
SelectedRules.java,TreePath path = new TreePath(ruleNode.getPath());,if (TreePath(ruleNode != null ) TreePath path = new TreePath(ruleNode.getPath());
SelectedRules.java,RuleNode rn = (RuleNode) ruleNode.getUserObject();,if (ruleNode != null ) RuleNode rn = (RuleNode) ruleNode.getUserObject();
SelectedRules.java,TreePath path = new TreePath(ruleNode.getPath());,if (TreePath(ruleNode != null ) TreePath path = new TreePath(ruleNode.getPath());
SelectedRules.java,RuleNode rn = (RuleNode) ruleNode.getUserObject();,if (ruleNode != null ) RuleNode rn = (RuleNode) ruleNode.getUserObject();
SelectedRules.java,TreePath path = new TreePath(ruleNode.getPath());,if (TreePath(ruleNode != null ) TreePath path = new TreePath(ruleNode.getPath());
SelectedRules.java,RuleNode rn = (RuleNode) ruleNode.getUserObject();,if (ruleNode != null ) RuleNode rn = (RuleNode) ruleNode.getUserObject();
CheckboxTree.java,Object node = path.getLastPathComponent();,if (path != null ) Object node = path.getLastPathComponent();
CheckboxTree.java,String retVal = super.toString();,if (super != null ) String retVal = super.toString();
DefaultTreeCheckingModel.java,Object node = path.getLastPathComponent();,if (path != null ) Object node = path.getLastPathComponent();
DefaultTreeCheckingModel.java,Object node = path.getLastPathComponent();,if (path != null ) Object node = path.getLastPathComponent();
DefaultTreeCheckingModel.java,Object node = path.getLastPathComponent();,if (path != null ) Object node = path.getLastPathComponent();
DefaultTreeCheckingModel.java,Object[] listeners = this.listenerList.getListenerList();,if (this != null ) Object[] listeners = this.listenerList.getListenerList();
DefaultTreeCheckingModel.java,Object ancestorNode = ancestor.getLastPathComponent();,if (ancestor != null ) Object ancestorNode = ancestor.getLastPathComponent();
DefaultTreeCheckingModel.java,Object node = path.getLastPathComponent();,if (path != null ) Object node = path.getLastPathComponent();
DefaultTreeCheckingModel.java,Object node = path.getLastPathComponent();,if (path != null ) Object node = path.getLastPathComponent();
DefaultTreeCheckingModel.java,Object node = path.getLastPathComponent();,if (path != null ) Object node = path.getLastPathComponent();
DefaultTreeCheckingModel.java,Object node = path.getLastPathComponent();,if (path != null ) Object node = path.getLastPathComponent();
StatementAndBraceFinderTest.java,SimpleNode simpleNode = (SimpleNode) parentDfn.getNode();,if (parentDfn != null ) SimpleNode simpleNode = (SimpleNode) parentDfn.getNode();
PMDJEditPlugin.java,PMDConfiguration configuration = pmd.getConfiguration();,if (pmd != null ) PMDConfiguration configuration = pmd.getConfiguration();
PMDJEditPlugin.java,RuleSets toCheck = selectedRuleSets.getSelectedRules();,if (selectedRuleSets != null ) RuleSets toCheck = selectedRuleSets.getSelectedRules();
PMDGeneralOptionPane.java,LanguageVersion[] languageVersions = LanguageVersion.values();,if (LanguageVersion != null ) LanguageVersion[] languageVersions = LanguageVersion.values();
PMDJEditPlugin.java,String modename = buffer.getMode().getName();,if (buffer != null ) String modename = buffer.getMode().getName();
PMDJEditPlugin.java,String modename = buffer.getMode().getName();,if (buffer != null ) String modename = buffer.getMode().getName();
PMDJEditPlugin.java,String path = buffer.getPath();,if (buffer != null ) String path = buffer.getPath();
PMDJEditPlugin.java,VFS vfs = buffer.getVFS();,if (buffer != null ) VFS vfs = buffer.getVFS();
PMDJEditPlugin.java,Reader reader = new StringReader(buffer.getText());,if (StringReader(buffer != null ) Reader reader = new StringReader(buffer.getText());
PMDJEditPlugin.java,Throwable cause = pmde.getCause();,if (pmde != null ) Throwable cause = pmde.getCause();
PMDJEditPlugin.java,lexicalError = cause.getMessage();,if (cause != null ) lexicalError = cause.getMessage();
PMDJEditPlugin.java,rules = selectedRuleSets.getSelectedRules();,if (selectedRuleSets != null ) rules = selectedRuleSets.getSelectedRules();
PMDJEditPlugin.java,rules = selectedRuleSets.getJspSelectedRules();,if (selectedRuleSets != null ) rules = selectedRuleSets.getJspSelectedRules();
PMDJEditPlugin.java,Throwable cause = pmde.getCause();,if (pmde != null ) Throwable cause = pmde.getCause();
PMDJEditPlugin.java,lexicalError = cause.getMessage();,if (cause != null ) lexicalError = cause.getMessage();
PMDJEditPlugin.java,mode = (CPDFileFilter) fileTypeSelector.getSelectedItem();,if (fileTypeSelector != null ) mode = (CPDFileFilter) fileTypeSelector.getSelectedItem();
PMDJEditPlugin.java,tilesize = Integer.parseInt(txttilesize.getText());,if (Integer != null ) tilesize = Integer.parseInt(txttilesize.getText());
PMDRulesOptionPane.java,DefaultMutableTreeNode node = ( DefaultMutableTreeNode ) path.getLastPathComponent();,if (path != null ) DefaultMutableTreeNode node = ( DefaultMutableTreeNode ) path.getLastPathComponent();
PMDRulesOptionPane.java,Object userObject = node.getUserObject();,if (node != null ) Object userObject = node.getUserObject();
SelectedRules.java,TreePath path = new TreePath(ruleNode.getPath());,if (TreePath(ruleNode != null ) TreePath path = new TreePath(ruleNode.getPath());
SelectedRules.java,RuleNode rn = (RuleNode) ruleNode.getUserObject();,if (ruleNode != null ) RuleNode rn = (RuleNode) ruleNode.getUserObject();
SelectedRules.java,TreePath path = new TreePath(ruleNode.getPath());,if (TreePath(ruleNode != null ) TreePath path = new TreePath(ruleNode.getPath());
SelectedRules.java,RuleNode rn = (RuleNode) ruleNode.getUserObject();,if (ruleNode != null ) RuleNode rn = (RuleNode) ruleNode.getUserObject();
CPD.java,Properties properties = System.getProperties();,if (System != null ) Properties properties = System.getProperties();
PMDJEditPlugin.java,selectedFile = chooser.getSelectedFile();,if (chooser != null ) selectedFile = chooser.getSelectedFile();
LanguageFactory.java,ClassLoader classLoader =  this.getClass().getClassLoader();,if (this != null ) ClassLoader classLoader =  this.getClass().getClassLoader();
ASTVariableOrConstantDeclaratorId.java,Node n = jjtGetParent().jjtGetParent();,if (jjtGetParent() != null ) Node n = jjtGetParent().jjtGetParent();
PLSQLParser.java,SimpleNode simpleNode = parser.Input();,if (parser != null ) SimpleNode simpleNode = parser.Input();
PLSQLParser.java,name = name.toUpperCase();,if (name != null ) name = name.toUpperCase();
PLSQLParser.java,s = new StringBuilder(name.trim());,if (StringBuilder(name != null ) s = new StringBuilder(name.trim());
PLSQLParser.java,s = new StringBuilder(name.trim());,if (StringBuilder(name != null ) s = new StringBuilder(name.trim());
PLSQLParser.java,int[] oldentry = (int[])(it.next());,if ((int[])(it != null ) int[] oldentry = (int[])(it.next());
ParseException.java,retval += expected.toString();,if (expected != null ) retval += expected.toString();
StatementAndBraceFinderTest.java,SimpleNode simpleNode = (SimpleNode) parentDfn.getNode();,if (parentDfn != null ) SimpleNode simpleNode = (SimpleNode) parentDfn.getNode();
StatementAndBraceFinder.java,ASTIfStatement st = (ASTIfStatement) node.jjtGetParent();,if (node != null ) ASTIfStatement st = (ASTIfStatement) node.jjtGetParent();
StatementAndBraceFinder.java,ASTElsifClause thisElsif = (ASTElsifClause) node.jjtGetParent();,if (node != null ) ASTElsifClause thisElsif = (ASTElsifClause) node.jjtGetParent();
StatementAndBraceFinder.java,ASTIfStatement ifst = (ASTIfStatement) thisElsif.jjtGetParent();,if (thisElsif != null ) ASTIfStatement ifst = (ASTIfStatement) thisElsif.jjtGetParent();
PLSQLDataFlowNode.java,res = super.toString();,if (super != null ) res = super.toString();
SequenceChecker.java,aktStatus = this.aktStatus.step(so.getType());,if (this != null ) aktStatus = this.aktStatus.step(so.getType());
StatementAndBraceFinder.java,ASTElsifClause elsif = (ASTElsifClause) node.jjtGetParent();,if (node != null ) ASTElsifClause elsif = (ASTElsifClause) node.jjtGetParent();
StatementAndBraceFinder.java,ASTIfStatement ifst = (ASTIfStatement) elsif.jjtGetParent();,if (elsif != null ) ASTIfStatement ifst = (ASTIfStatement) elsif.jjtGetParent();
PMDASMClassLoaderTest.java,cl = new PMDASMClassLoader(getClass().getClassLoader());,if (PMDASMClassLoader(getClass() != null ) cl = new PMDASMClassLoader(getClass().getClassLoader());
RuleSet.java,long end = System.nanoTime();,if (System != null ) long end = System.nanoTime();
CyclomaticComplexityRule.java,Entry classEntry = entryStack.peek();,if (entryStack != null ) Entry classEntry = entryStack.peek();
CyclomaticComplexityRule.java,Entry classEntry = entryStack.peek();,if (entryStack != null ) Entry classEntry = entryStack.peek();
PLSQLDesigner.java,List<ASTProgramUnit> programUnits = dfaGraphRule.getProgramUnits();,if (dfaGraphRule != null ) List<ASTProgramUnit> programUnits = dfaGraphRule.getProgramUnits();
JavaParser.java,int[] oldentry = (int[])(it.next());,if ((int[])(it != null ) int[] oldentry = (int[])(it.next());
ParseException.java,retval += expected.toString();,if (expected != null ) retval += expected.toString();
JJTJspParserState.java,nodes = new java.util.ArrayList();,if (java != null ) nodes = new java.util.ArrayList();
JJTJspParserState.java,marks = new java.util.ArrayList();,if (java != null ) marks = new java.util.ArrayList();
PLSQLDesigner.java,List<ASTMethodDeclaration> methods = dfaGraphRule.getMethods();,if (dfaGraphRule != null ) List<ASTMethodDeclaration> methods = dfaGraphRule.getMethods();
BasicPMDTest.java,Iterator<RuleViolation> iter = context.getReport().iterator();,if (context != null ) Iterator<RuleViolation> iter = context.getReport().iterator();
BasicPMDTest.java,RuleViolation violation = iter.next();,if (iter != null ) RuleViolation violation = iter.next();
BasicPMDTest.java,Iterator<RuleViolation> iter = context.getReport().iterator();,if (context != null ) Iterator<RuleViolation> iter = context.getReport().iterator();
BasicPMDTest.java,RuleViolation violation = iter.next();,if (iter != null ) RuleViolation violation = iter.next();
BasicPMDTest.java,Iterator<RuleViolation> iter = context.getReport().iterator();,if (context != null ) Iterator<RuleViolation> iter = context.getReport().iterator();
BasicPMDTest.java,RuleViolation violation = iter.next();,if (iter != null ) RuleViolation violation = iter.next();
BasicPMDTest.java,Iterator<RuleSet> iterator = factory.getRegisteredRuleSets();,if (factory != null ) Iterator<RuleSet> iterator = factory.getRegisteredRuleSets();
EclipseUtils.java,IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();,if (ResourcesPlugin != null ) IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();
EclipseUtils.java,final IProjectDescription description = project.getDescription();,if (project != null ) final IProjectDescription description = project.getDescription();
EclipseUtils.java,IProjectDescription description = project.getDescription();,if (project != null ) IProjectDescription description = project.getDescription();
EclipseUtils.java,String[] prevNatures = description.getNatureIds();,if (description != null ) String[] prevNatures = description.getNatureIds();
PMDCorePluginTest.java,Iterator<RuleSet> iterator = factory.getRegisteredRuleSets();,if (factory != null ) Iterator<RuleSet> iterator = factory.getRegisteredRuleSets();
PMDCorePluginTest.java,RuleSet ruleSet = iterator.next();,if (iterator != null ) RuleSet ruleSet = iterator.next();
PMDCorePluginTest.java,Iterator<RuleSet> iterator = factory.getRegisteredRuleSets();,if (factory != null ) Iterator<RuleSet> iterator = factory.getRegisteredRuleSets();
PMDCorePluginTest.java,RuleSet ruleSet = iterator.next();,if (iterator != null ) RuleSet ruleSet = iterator.next();
PMDCorePluginTest.java,Iterator<RuleSet> i = set.iterator();,if (set != null ) Iterator<RuleSet> i = set.iterator();
RuleSetsExtensionProcessorTest.java,Iterator<RuleSet> i = set.iterator();,if (set != null ) Iterator<RuleSet> i = set.iterator();
RuleSetsManagerImplTest.java,Collection<Rule> pmdRules = ruleSet.getPmdRuleSet().getRules();,if (ruleSet != null ) Collection<Rule> pmdRules = ruleSet.getPmdRuleSet().getRules();
ProjectPropertiesModelTest.java,IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();,if (PMDPlugin != null ) IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();
ProjectPropertiesModelTest.java,IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();,if (PMDPlugin != null ) IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();
ProjectPropertiesModelTest.java,IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();,if (PMDPlugin != null ) IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();
ProjectPropertiesModelTest.java,IPreferencesManager pmgr = PMDPlugin.getDefault().getPreferencesManager();,if (PMDPlugin != null ) IPreferencesManager pmgr = PMDPlugin.getDefault().getPreferencesManager();
ProjectPropertiesModelTest.java,IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();,if (PMDPlugin != null ) IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();
ProjectPropertiesModelTest.java,RuleSet projectRuleSet = model.getProjectRuleSet();,if (model != null ) RuleSet projectRuleSet = model.getProjectRuleSet();
ProjectPropertiesModelTest.java,IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();,if (PMDPlugin != null ) IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();
ProjectPropertiesModelTest.java,RuleSet projectRuleSet = model.getProjectRuleSet();,if (model != null ) RuleSet projectRuleSet = model.getProjectRuleSet();
ProjectPropertiesModelTest.java,IPreferencesManager pmgr = PMDPlugin.getDefault().getPreferencesManager();,if (PMDPlugin != null ) IPreferencesManager pmgr = PMDPlugin.getDefault().getPreferencesManager();
ProjectPropertiesModelTest.java,projectRuleSet = model.getProjectRuleSet();,if (model != null ) projectRuleSet = model.getProjectRuleSet();
ProjectPropertiesModelTest.java,IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();,if (PMDPlugin != null ) IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();
ProjectPropertiesModelTest.java,RuleSet projectRuleSet = model.getProjectRuleSet();,if (model != null ) RuleSet projectRuleSet = model.getProjectRuleSet();
ProjectPropertiesModelTest.java,projectRuleSet = model.getProjectRuleSet();,if (model != null ) projectRuleSet = model.getProjectRuleSet();
ProjectPropertiesModelTest.java,IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();,if (PMDPlugin != null ) IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();
ProjectPropertiesModelTest.java,RuleSet projectRuleSet = model.getProjectRuleSet();,if (model != null ) RuleSet projectRuleSet = model.getProjectRuleSet();
ProjectPropertiesModelTest.java,Iterator<Rule> i = newRuleSet.getRules().iterator();,if (newRuleSet != null ) Iterator<Rule> i = newRuleSet.getRules().iterator();
ProjectPropertiesModelTest.java,projectRuleSet = model.getProjectRuleSet();,if (model != null ) projectRuleSet = model.getProjectRuleSet();
ProjectPropertiesModelTest.java,IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();,if (PMDPlugin != null ) IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();
ProjectPropertiesModelTest.java,IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();,if (PMDPlugin != null ) IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();
ProjectPropertiesModelTest.java,boolean b = model.isRuleSetStoredInProject();,if (model != null ) boolean b = model.isRuleSetStoredInProject();
ProjectPropertiesModelTest.java,IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();,if (PMDPlugin != null ) IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();
ProjectPropertiesModelTest.java,boolean b = model.isRuleSetStoredInProject();,if (model != null ) boolean b = model.isRuleSetStoredInProject();
ProjectPropertiesModelTest.java,IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();,if (PMDPlugin != null ) IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();
ProjectPropertiesModelTest.java,IWorkingSet w = model.getProjectWorkingSet();,if (model != null ) IWorkingSet w = model.getProjectWorkingSet();
ProjectPropertiesModelTest.java,IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();,if (PMDPlugin != null ) IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();
ProjectPropertiesModelTest.java,IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();,if (PMDPlugin != null ) IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();
ProjectPropertiesModelTest.java,IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();,if (PMDPlugin != null ) IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();
UpdateProjectPropertiesCmdTest.java,IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();,if (PMDPlugin != null ) IProjectPropertiesManager mgr = PMDPlugin.getDefault().getPropertiesManager();
UpdateProjectPropertiesCmdTest.java,RuleSet projectRuleSet = model.getProjectRuleSet();,if (model != null ) RuleSet projectRuleSet = model.getProjectRuleSet();
UpdateProjectPropertiesCmdTest.java,Iterator<Rule> i = newRuleSet.getRules().iterator();,if (newRuleSet != null ) Iterator<Rule> i = newRuleSet.getRules().iterator();
UpdateProjectPropertiesCmdTest.java,projectRuleSet = model.getProjectRuleSet();,if (model != null ) projectRuleSet = model.getProjectRuleSet();
AcceptanceTest.java,Map vars = s.getParent().getVariableDeclarations();,if (s != null ) Map vars = s.getParent().getVariableDeclarations();
AcceptanceTest.java,VariableNameDeclaration vnd = (VariableNameDeclaration)i.next();,if ((VariableNameDeclaration)i != null ) VariableNameDeclaration vnd = (VariableNameDeclaration)i.next();
AcceptanceTest.java,Node node = vnd.getNode();,if (vnd != null ) Node node = vnd.getNode();
AcceptanceTest.java,declaration = (ASTVariableDeclaratorId) iter.next();,if (iter != null ) declaration = (ASTVariableDeclaratorId) iter.next();
AcceptanceTest.java,SimpleNode location = no.getLocation();,if (no != null ) SimpleNode location = no.getLocation();
AcceptanceTest.java,VariableNameDeclaration d = (VariableNameDeclaration) i.next();,if (i != null ) VariableNameDeclaration d = (VariableNameDeclaration) i.next();
AcceptanceTest.java,int beginLine = o.getLocation().getBeginLine();,if (o != null ) int beginLine = o.getLocation().getBeginLine();
JavaParser.java,int[] oldentry = (int[])(it.next());,if ((int[])(it != null ) int[] oldentry = (int[])(it.next());
ParseException.java,retval += expected.toString();,if (expected != null ) retval += expected.toString();
JJTJspParserState.java,nodes = new java.util.ArrayList();,if (java != null ) nodes = new java.util.ArrayList();
JJTJspParserState.java,marks = new java.util.ArrayList();,if (java != null ) marks = new java.util.ArrayList();
JspParser.java,int[] oldentry = (int[])(it.next());,if ((int[])(it != null ) int[] oldentry = (int[])(it.next());
ParseException.java,retval += expected.toString();,if (expected != null ) retval += expected.toString();
JavaTokenizer.java,StringBuilder buffer = sourceCode.getCodeBuffer();,if (sourceCode != null ) StringBuilder buffer = sourceCode.getCodeBuffer();
JavaTokenizer.java,String fileName = sourceCode.getFileName();,if (sourceCode != null ) String fileName = sourceCode.getFileName();
JavaTokenizer.java,Token currentToken = (Token) tokenMgr.getNextToken();,if (tokenMgr != null ) Token currentToken = (Token) tokenMgr.getNextToken();
JavaTokenizer.java,currentToken = (Token) tokenMgr.getNextToken();,if (tokenMgr != null ) currentToken = (Token) tokenMgr.getNextToken();
JavaTokenizer.java,currentToken = (Token) tokenMgr.getNextToken();,if (tokenMgr != null ) currentToken = (Token) tokenMgr.getNextToken();
JavaTokenizer.java,currentToken = (Token) tokenMgr.getNextToken();,if (tokenMgr != null ) currentToken = (Token) tokenMgr.getNextToken();
PLSQLParser.java,SimpleNode simpleNode = parser.input();,if (parser != null ) SimpleNode simpleNode = parser.input();
PMDCommandLineInterface.java,fullText += usage.toString();,if (usage != null ) fullText += usage.toString();
PMDParameters.java,List<LanguageVersion> languageVersions = LanguageVersion.findVersionsForLanguageTerseName(language.getTerseName());,if (LanguageVersion != null ) List<LanguageVersion> languageVersions = LanguageVersion.findVersionsForLanguageTerseName(language.getTerseName());
CommandLineParserTest.java,Renderer renderer = parser.getConfiguration().createRenderer();,if (parser != null ) Renderer renderer = parser.getConfiguration().createRenderer();
CommandLineParserTest.java,renderer = parser.getConfiguration().createRenderer();,if (parser != null ) renderer = parser.getConfiguration().createRenderer();
CommandLineParserTest.java,renderer = parser.getConfiguration().createRenderer();,if (parser != null ) renderer = parser.getConfiguration().createRenderer();
CommandLineParserTest.java,renderer = parser.getConfiguration().createRenderer();,if (parser != null ) renderer = parser.getConfiguration().createRenderer();
CommandLineParserTest.java,renderer = parser.getConfiguration().createRenderer();,if (parser != null ) renderer = parser.getConfiguration().createRenderer();
CommandLineParserTest.java,renderer = parser.getConfiguration().createRenderer();,if (parser != null ) renderer = parser.getConfiguration().createRenderer();
CommandLineParserTest.java,renderer = parser.getConfiguration().createRenderer();,if (parser != null ) renderer = parser.getConfiguration().createRenderer();
CommandLineParserTest.java,renderer = parser.getConfiguration().createRenderer();,if (parser != null ) renderer = parser.getConfiguration().createRenderer();
CommandLineParserTest.java,renderer = parser.getConfiguration().createRenderer();,if (parser != null ) renderer = parser.getConfiguration().createRenderer();
CommandLineParserTest.java,renderer = parser.getConfiguration().createRenderer();,if (parser != null ) renderer = parser.getConfiguration().createRenderer();
CommandLineParserTest.java,renderer = parser.getConfiguration().createRenderer();,if (parser != null ) renderer = parser.getConfiguration().createRenderer();
CommandLineParserTest.java,renderer = parser.getConfiguration().createRenderer();,if (parser != null ) renderer = parser.getConfiguration().createRenderer();
CommandLineParserTest.java,renderer = parser.getConfiguration().createRenderer();,if (parser != null ) renderer = parser.getConfiguration().createRenderer();
CommandLineParserTest.java,ClassLoader classLoader = parser.getConfiguration().getClassLoader();,if (parser != null ) ClassLoader classLoader = parser.getConfiguration().getClassLoader();
PMD.java,final PMDConfiguration configuration = opts.getConfiguration();,if (opts != null ) final PMDConfiguration configuration = opts.getConfiguration();
JspParserTokenManager.java,matchedToken.image = image.toString();,if (image != null ) matchedToken.image = image.toString();
XmlParserOptions.java,int result = super.hashCode();,if (super != null ) int result = super.hashCode();
XmlParser.java,DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();,if (DocumentBuilderFactory != null ) DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();
XmlParser.java,DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();,if (documentBuilderFactory != null ) DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();
XmlParser.java,Node parent = node.getParentNode();,if (node != null ) Node parent = node.getParentNode();
XmlParser.java,final NamedNodeMap attributes = node.getAttributes();,if (node != null ) final NamedNodeMap attributes = node.getAttributes();
XmlParser.java,String s = node.getNodeName();,if (node != null ) String s = node.getNodeName();
NPathComplexityRule.java,int boolCompReturn = andNodes.size() + orNodes.size();,if (orNodes != null ) int boolCompReturn = andNodes.size() + orNodes.size();
NPathComplexityTest.java,Iterator i = report.iterator();,if (report != null ) Iterator i = report.iterator();
RuleSetFactoryTest.java,SAXParserFactory saxParserFactory = SAXParserFactory.newInstance();,if (SAXParserFactory != null ) SAXParserFactory saxParserFactory = SAXParserFactory.newInstance();
RuleSetFactoryTest.java,SAXParser saxParser = saxParserFactory.newSAXParser();,if (saxParserFactory != null ) SAXParser saxParser = saxParserFactory.newSAXParser();
RuleSetFactoryTest.java,SAXParserFactory saxParserFactory = SAXParserFactory.newInstance();,if (SAXParserFactory != null ) SAXParserFactory saxParserFactory = SAXParserFactory.newInstance();
RuleSetFactoryTest.java,SAXParser saxParser = saxParserFactory.newSAXParser();,if (saxParserFactory != null ) SAXParser saxParser = saxParserFactory.newSAXParser();
DisableRuleAction.java,private IPreferences preferences = PMDPlugin.getDefault().loadPreferences();,if (PMDPlugin != null ) private IPreferences preferences = PMDPlugin.getDefault().loadPreferences();
Configuration.java,private int threads = Runtime.getRuntime().availableProcessors();,if (Runtime != null ) private int threads = Runtime.getRuntime().availableProcessors();
Configuration.java,private ClassLoader classLoader = getClass().getClassLoader();,if (getClass() != null ) private ClassLoader classLoader = getClass().getClassLoader();
Configuration.java,classLoader = getClass().getClassLoader();,if (getClass() != null ) classLoader = getClass().getClassLoader();
Configuration.java,classLoader = Configuration.class.getClassLoader();,if (Configuration != null ) classLoader = Configuration.class.getClassLoader();
PMD.java,final Configuration configuration = opts.getConfiguration();,if (opts != null ) final Configuration configuration = opts.getConfiguration();
CPDViolationPage.java,final TokenEntry mark = (TokenEntry)i.next();,if ((TokenEntry)i != null ) final TokenEntry mark = (TokenEntry)i.next();
Plugin.java,final Project project = (Project)context.getElement();,if ((Project)context != null ) final Project project = (Project)context.getElement();
Plugin.java,final LogPage page = LogManager.getLogManager().getMsgPage();,if (LogManager != null ) final LogPage page = LogManager.getLogManager().getMsgPage();
Plugin.java,final Project project = (Project)context.getElement();,if ((Project)context != null ) final Project project = (Project)context.getElement();
Plugin.java,final Element doc = contextMenu.getContext().getElement();,if (contextMenu != null ) final Element doc = contextMenu.getContext().getElement();
Plugin.java,final View view = contextMenu.getContext().getView();,if (contextMenu != null ) final View view = contextMenu.getContext().getView();
Plugin.java,final LogPage page = LogManager.getLogManager().getMsgPage();,if (LogManager != null ) final LogPage page = LogManager.getLogManager().getMsgPage();
Plugin.java,final RuleViolation viol = (RuleViolation)i.next();,if ((RuleViolation)i != null ) final RuleViolation viol = (RuleViolation)i.next();
Plugin.java,final Object obj = iter.next();,if (iter != null ) final Object obj = iter.next();
Plugin.java,final Object obj = iter.next();,if (iter != null ) final Object obj = iter.next();
PmdSettingsPanel.java,String selected = fdlg.getDirectory() + fdlg.getFile();,if (fdlg != null ) String selected = fdlg.getDirectory() + fdlg.getFile();
AnyTokenizer.java,StringBuffer sb = sourceCode.getCodeBuffer();,if (sourceCode != null ) StringBuffer sb = sourceCode.getCodeBuffer();
CPPTokenizer.java,StringBuffer buffer = sourceCode.getCodeBuffer();,if (sourceCode != null ) StringBuffer buffer = sourceCode.getCodeBuffer();
JSPTokenizer.java,StringBuffer buffer = sourceCode.getCodeBuffer();,if (sourceCode != null ) StringBuffer buffer = sourceCode.getCodeBuffer();
JavaTokenizer.java,StringBuffer buffer = sourceCode.getCodeBuffer();,if (sourceCode != null ) StringBuffer buffer = sourceCode.getCodeBuffer();
InsufficientStringBufferDeclarationRule.java,anticipatedLength += str.length();,if (str != null ) anticipatedLength += str.length();
ParametricRuleViolation.java,this.filename = ctx.getSourceCodeFilename();,if (ctx != null ) this.filename = ctx.getSourceCodeFilename();
ParametizedRuleViolation.java,this.beginLine = node.getBeginLine();,if (node != null ) this.beginLine = node.getBeginLine();
ParametizedRuleViolation.java,this.beginColumn = node.getBeginColumn();,if (node != null ) this.beginColumn = node.getBeginColumn();
ParametizedRuleViolation.java,this.endLine = node.getEndLine();,if (node != null ) this.endLine = node.getEndLine();
ParametizedRuleViolation.java,this.endColumn = node.getEndColumn();,if (node != null ) this.endColumn = node.getEndColumn();
CommandLineOptionsTest.java,Renderer renderer = opt.getConfiguration().createRenderer();,if (opt != null ) Renderer renderer = opt.getConfiguration().createRenderer();
CommandLineOptionsTest.java,renderer = opt.getConfiguration().createRenderer();,if (opt != null ) renderer = opt.getConfiguration().createRenderer();
CommandLineOptionsTest.java,renderer = opt.getConfiguration().createRenderer();,if (opt != null ) renderer = opt.getConfiguration().createRenderer();
CommandLineOptionsTest.java,renderer = opt.getConfiguration().createRenderer();,if (opt != null ) renderer = opt.getConfiguration().createRenderer();
CommandLineOptionsTest.java,renderer = opt.getConfiguration().createRenderer();,if (opt != null ) renderer = opt.getConfiguration().createRenderer();
CommandLineOptionsTest.java,renderer = opt.getConfiguration().createRenderer();,if (opt != null ) renderer = opt.getConfiguration().createRenderer();
CommandLineOptionsTest.java,renderer = opt.getConfiguration().createRenderer();,if (opt != null ) renderer = opt.getConfiguration().createRenderer();
CommandLineOptionsTest.java,renderer = opt.getConfiguration().createRenderer();,if (opt != null ) renderer = opt.getConfiguration().createRenderer();
CommandLineOptionsTest.java,renderer = opt.getConfiguration().createRenderer();,if (opt != null ) renderer = opt.getConfiguration().createRenderer();
CommandLineOptionsTest.java,renderer = opt.getConfiguration().createRenderer();,if (opt != null ) renderer = opt.getConfiguration().createRenderer();
CommandLineOptionsTest.java,renderer = opt.getConfiguration().createRenderer();,if (opt != null ) renderer = opt.getConfiguration().createRenderer();
CommandLineOptionsTest.java,renderer = opt.getConfiguration().createRenderer();,if (opt != null ) renderer = opt.getConfiguration().createRenderer();
CommandLineOptionsTest.java,renderer = opt.getConfiguration().createRenderer();,if (opt != null ) renderer = opt.getConfiguration().createRenderer();
CommandLineOptionsTest.java,ClassLoader classLoader = opt.getConfiguration().getClassLoader();,if (opt != null ) ClassLoader classLoader = opt.getConfiguration().getClassLoader();
CommandLineParserTest.java,Renderer renderer = opt.getConfiguration().createRenderer();,if (opt != null ) Renderer renderer = opt.getConfiguration().createRenderer();
CommandLineParserTest.java,renderer = opt.getConfiguration().createRenderer();,if (opt != null ) renderer = opt.getConfiguration().createRenderer();
CommandLineParserTest.java,renderer = opt.getConfiguration().createRenderer();,if (opt != null ) renderer = opt.getConfiguration().createRenderer();
CommandLineParserTest.java,renderer = opt.getConfiguration().createRenderer();,if (opt != null ) renderer = opt.getConfiguration().createRenderer();
CommandLineParserTest.java,renderer = opt.getConfiguration().createRenderer();,if (opt != null ) renderer = opt.getConfiguration().createRenderer();
CommandLineParserTest.java,renderer = opt.getConfiguration().createRenderer();,if (opt != null ) renderer = opt.getConfiguration().createRenderer();
CommandLineParserTest.java,renderer = opt.getConfiguration().createRenderer();,if (opt != null ) renderer = opt.getConfiguration().createRenderer();
CommandLineParserTest.java,renderer = opt.getConfiguration().createRenderer();,if (opt != null ) renderer = opt.getConfiguration().createRenderer();
CommandLineParserTest.java,renderer = opt.getConfiguration().createRenderer();,if (opt != null ) renderer = opt.getConfiguration().createRenderer();
CommandLineParserTest.java,renderer = opt.getConfiguration().createRenderer();,if (opt != null ) renderer = opt.getConfiguration().createRenderer();
CommandLineParserTest.java,renderer = opt.getConfiguration().createRenderer();,if (opt != null ) renderer = opt.getConfiguration().createRenderer();
CommandLineParserTest.java,renderer = opt.getConfiguration().createRenderer();,if (opt != null ) renderer = opt.getConfiguration().createRenderer();
CommandLineParserTest.java,renderer = opt.getConfiguration().createRenderer();,if (opt != null ) renderer = opt.getConfiguration().createRenderer();
CommandLineParserTest.java,ClassLoader classLoader = opt.getConfiguration().getClassLoader();,if (opt != null ) ClassLoader classLoader = opt.getConfiguration().getClassLoader();
XMLRenderer.java,doc = parser.newDocument();,if (parser != null ) doc = parser.newDocument();
XMLRenderer.java,mark = iterator.next();,if (iterator != null ) mark = iterator.next();
XMLRenderer.java,String codeSnipet = match.getSourceCodeSlice();,if (match != null ) String codeSnipet = match.getSourceCodeSlice();
XMLRenderer.java,TransformerFactory tf = TransformerFactory.newInstance();,if (TransformerFactory != null ) TransformerFactory tf = TransformerFactory.newInstance();
XMLRenderer.java,Transformer transformer = tf.newTransformer();,if (tf != null ) Transformer transformer = tf.newTransformer();
Language.java,Object obj = ruleChainVisitorClass.newInstance();,if (ruleChainVisitorClass != null ) Object obj = ruleChainVisitorClass.newInstance();
Benchmarker.java,Collection<Rule> rules = ruleSet.getRules();,if (ruleSet != null ) Collection<Rule> rules = ruleSet.getRules();
AbstractRule.java,Object propertyValues = this.getPropertiesByPropertyDescriptor();,if (this != null ) Object propertyValues = this.getPropertiesByPropertyDescriptor();
ClassDeclTest.java,Iterator i = classes.iterator();,if (classes != null ) Iterator i = classes.iterator();
FieldDeclTest.java,Iterator i = fields.iterator();,if (fields != null ) Iterator i = fields.iterator();
MethodDeclTest.java,Iterator i = methods.iterator();,if (methods != null ) Iterator i = methods.iterator();
XMLRendererTest.java,file = file.getNextSibling();,if (file != null ) file = file.getNextSibling();
XMLRendererTest.java,file = file.getNextSibling();,if (file != null ) file = file.getNextSibling();
ViewMemento.java,final String line = contentReader.readLine();,if (contentReader != null ) final String line = contentReader.readLine();
TextColorRenderer.java,code = br.readLine().trim();,if (br != null ) code = br.readLine().trim();
RuleLabelProvider.java,result = rule.getSince();,if (rule != null ) result = rule.getSince();
PMDGenerateASTAction.java,String name = file.getName();,if (file != null ) String name = file.getName();
PMDGenerateASTAction.java,IContainer parent = file.getParent();,if (file != null ) IContainer parent = file.getParent();
CPDVisitor.java,final File ioFile = file.getLocation().toFile();,if (file != null ) final File ioFile = file.getLocation().toFile();
BaseVisitor.java,final File sourceCodeFile = file.getRawLocation().toFile();,if (file != null ) final File sourceCodeFile = file.getRawLocation().toFile();
BaseVisitor.java,LanguageVersion version = PMDPlugin.javaVersionFor(file.getProject());,if (PMDPlugin != null ) LanguageVersion version = PMDPlugin.javaVersionFor(file.getProject());
BaseVisitor.java,pmdDuration += timer.getDuration();,if (timer != null ) pmdDuration += timer.getDuration();
ReviewCodeCmd.java,IMarker marker = file.createMarker(markerInfo.getType());,if (file != null ) IMarker marker = file.createMarker(markerInfo.getType());
PreferencesManagerImpl.java,IRuleSetWriter writer = PMDPlugin.getDefault().getRuleSetWriter();,if (PMDPlugin != null ) IRuleSetWriter writer = PMDPlugin.getDefault().getRuleSetWriter();
FilterPreferencesPage.java,IStructuredSelection selection = (IStructuredSelection)event.getSelection();,if ((IStructuredSelection)event != null ) IStructuredSelection selection = (IStructuredSelection)event.getSelection();
RuleTableManager.java,String fileName = dialog.open();,if (dialog != null ) String fileName = dialog.open();
ReviewAction.java,Shell shell = Display.getCurrent().getActiveShell();,if (Display != null ) Shell shell = Display.getCurrent().getActiveShell();
ReviewAction.java,IJavaElement[] elements = status.getElements();,if (status != null ) IJavaElement[] elements = status.getElements();
FilterPreferencesPage.java,RuleSet ruleSet = plugin.getPreferencesManager().getRuleSet();,if (plugin != null ) RuleSet ruleSet = plugin.getPreferencesManager().getRuleSet();
FilterPreferencesPage.java,Table table = tableViewer.getTable();,if (tableViewer != null ) Table table = tableViewer.getTable();
FilterPreferencesPage.java,TableColumn[] columns = table.getColumns();,if (table != null ) TableColumn[] columns = table.getColumns();
FilterPreferencesPage.java,Set<String> activeOnes = preferences.activeExclusionPatterns();,if (preferences != null ) Set<String> activeOnes = preferences.activeExclusionPatterns();
FilterPreferencesPage.java,FilterHolder holder = (FilterHolder)item.getData();,if ((FilterHolder)item != null ) FilterHolder holder = (FilterHolder)item.getData();
PMDPreferencePage.java,RuleSet selectedRuleSet = dialog.getSelectedRuleSet();,if (dialog != null ) RuleSet selectedRuleSet = dialog.getSelectedRuleSet();
RuleSetSelectionDialog.java,int selectionIndex = inputCombo.getSelectionIndex();,if (inputCombo != null ) int selectionIndex = inputCombo.getSelectionIndex();
RuleSetSelectionDialog.java,importedRuleSetName = inputCombo.getText();,if (inputCombo != null ) importedRuleSetName = inputCombo.getText();
RuleSelection.java,Collection<Rule> currentRules = ruleSet.getRules();,if (ruleSet != null ) Collection<Rule> currentRules = ruleSet.getRules();
RuleTableManager.java,RuleSetSelectionDialog dialog = new RuleSetSelectionDialog(parent.getShell());,if (RuleSetSelectionDialog(parent != null ) RuleSetSelectionDialog dialog = new RuleSetSelectionDialog(parent.getShell());
RuleTableManager.java,Iterator<Rule> iter = selectedRuleSet.getRules().iterator();,if (selectedRuleSet != null ) Iterator<Rule> iter = selectedRuleSet.getRules().iterator();
RuleTableManager.java,Rule rule = iter.next();,if (iter != null ) Rule rule = iter.next();
ReportHTMLPrintVisitor.java,RuleViolation vio = vnode.getRuleViolation();,if (vnode != null ) RuleViolation vio = vnode.getRuleViolation();
ReportHTMLPrintVisitor.java,String str = cnode.getClassName();,if (cnode != null ) String str = cnode.getClassName();
ReportHTMLPrintVisitor.java,str = pnode.getPackageName();,if (pnode != null ) str = pnode.getPackageName();
ReportTree.java,node = this.iterNode.getParent();,if (this != null ) node = this.iterNode.getParent();
ReportTree.java,this.iterNode = this.iterNode.getFirstChild();,if (this != null ) this.iterNode = this.iterNode.getFirstChild();
ReportTree.java,String packageName = violation.getPackageName();,if (violation != null ) String packageName = violation.getPackageName();
ReportTree.java,String cl = violation.getClassName();,if (violation != null ) String cl = violation.getClassName();
XMLRenderer.java,String codeFragment = match.getSourceCodeSlice();,if (match != null ) String codeFragment = match.getSourceCodeSlice();
XmlUtil.java,DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();,if (DocumentBuilderFactory != null ) DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
XmlUtil.java,Transformer transformer = tFactory.newTransformer();,if (tFactory != null ) Transformer transformer = tFactory.newTransformer();
RuleSetToDocs.java,DocumentBuilder parser = DocumentBuilderFactory.newInstance().newDocumentBuilder();,if (DocumentBuilderFactory != null ) DocumentBuilder parser = DocumentBuilderFactory.newInstance().newDocumentBuilder();
RuleSetToDocs.java,DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();,if (DocumentBuilderFactory != null ) DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
RuleSetToDocs.java,DocumentBuilder parser = factory.newDocumentBuilder();,if (factory != null ) DocumentBuilder parser = factory.newDocumentBuilder();
RuleSetToDocs.java,doc = parser.newDocument();,if (parser != null ) doc = parser.newDocument();
RuleSetToDocs.java,TransformerFactory factory = TransformerFactory.newInstance();,if (TransformerFactory != null ) TransformerFactory factory = TransformerFactory.newInstance();
RuleSetToDocs.java,File[] files = file.listFiles();,if (file != null ) File[] files = file.listFiles();
RuleSetToDocs.java,line = br.readLine();,if (br != null ) line = br.readLine();
RenderReportsCmd.java,final InputStream contentsStream = new ByteArrayInputStream(reportString.getBytes());,if (ByteArrayInputStream(reportString != null ) final InputStream contentsStream = new ByteArrayInputStream(reportString.getBytes());
RenderReportsCmd.java,IType[] types = unit.getAllTypes();,if (unit != null ) IType[] types = unit.getAllTypes();
GenerateReportAction.java,final Object object = selection.getFirstElement();,if (selection != null ) final Object object = selection.getFirstElement();
GenerateReportAction.java,project = resource.getProject();,if (resource != null ) project = resource.getProject();
ReportPreferencesPage.java,String pattern = additionalCommentText.getText();,if (additionalCommentText != null ) String pattern = additionalCommentText.getText();
MonoThreadProcessor.java,rs = ruleSetFactory.createRuleSets(configuration.getRuleSets());,if (ruleSetFactory != null ) rs = ruleSetFactory.createRuleSets(configuration.getRuleSets());
MultiThreadProcessor.java,rs = ruleSetFactory.createRuleSets(configuration.getRuleSets());,if (ruleSetFactory != null ) rs = ruleSetFactory.createRuleSets(configuration.getRuleSets());
CSVRenderer.java,rv = violations.next();,if (violations != null ) rv = violations.next();
AbstractDefaultCommand.java,IPreferences preferences = PMDPlugin.getDefault().loadPreferences();,if (PMDPlugin != null ) IPreferences preferences = PMDPlugin.getDefault().loadPreferences();
ReviewResourceForRuleCommand.java,IProject project = resource.getProject();,if (resource != null ) IProject project = resource.getProject();
AbstractStructureInspectorPage.java,StringReader reader = new StringReader(getDocument().get());,if (StringReader(getDocument() != null ) StringReader reader = new StringReader(getDocument().get());
RulePanelManager.java,List<LanguageVersion> versions = language.getVersions();,if (language != null ) List<LanguageVersion> versions = language.getVersions();
Designer.java,Parser parser = languageVersionHandler.getParser(languageVersionHandler.getDefaultParserOptions());,if (languageVersionHandler != null ) Parser parser = languageVersionHandler.getParser(languageVersionHandler.getDefaultParserOptions());
Designer.java,LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();,if (languageVersion != null ) LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();
Designer.java,Node parent = node.jjtGetParent();,if (node != null ) Node parent = node.jjtGetParent();
Designer.java,"TreePath curPath = getPathForLocation(e.getX(), e.getY());","if (e != null ) TreePath curPath = getPathForLocation(e.getX(), e.getY());"
Designer.java,TreeNode node = (TreeNode) parent.getLastPathComponent();,if (parent != null ) TreeNode node = (TreeNode) parent.getLastPathComponent();
Designer.java,StringReader reader = new StringReader(codeEditorPane.getText());,if (StringReader(codeEditorPane != null ) StringReader reader = new StringReader(codeEditorPane.getText());
Designer.java,List<ASTMethodDeclaration> methods = dfaGraphRule.getMethods();,if (dfaGraphRule != null ) List<ASTMethodDeclaration> methods = dfaGraphRule.getMethods();
Designer.java,Scope scope = astTreeNode.getScope();,if (astTreeNode != null ) Scope scope = astTreeNode.getScope();
Designer.java,scope = scope.getParent();,if (scope != null ) scope = scope.getParent();
Designer.java,name = value.toString();,if (value != null ) name = value.toString();
Designer.java,text = sb.toString();,if (sb != null ) text = sb.toString();
Designer.java,text = value.toString();,if (value != null ) text = value.toString();
Designer.java,ListSelectionModel lsm = (ListSelectionModel) e.getSource();,if (e != null ) ListSelectionModel lsm = (ListSelectionModel) e.getSource();
Designer.java,Object o = xpathResults.get(lsm.getMinSelectionIndex());,if (xpathResults != null ) Object o = xpathResults.get(lsm.getMinSelectionIndex());
Designer.java,Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();,if (Toolkit != null ) Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
Designer.java,JRadioButtonMenuItem button = new JRadioButtonMenuItem(languageVersion.getShortName());,if (JRadioButtonMenuItem(languageVersion != null ) JRadioButtonMenuItem button = new JRadioButtonMenuItem(languageVersion.getShortName());
Designer.java,JFrame tmp = (JFrame) e.getSource();,if (e != null ) JFrame tmp = (JFrame) e.getSource();
Designer.java,TreeSelectionModel model = astTreeWidget.getSelectionModel();,if (astTreeWidget != null ) TreeSelectionModel model = astTreeWidget.getSelectionModel();
Designer.java,ActionMap actionMap = textConponent.getActionMap();,if (textConponent != null ) ActionMap actionMap = textConponent.getActionMap();
Designer.java,InputMap inputMap = textConponent.getInputMap();,if (textConponent != null ) InputMap inputMap = textConponent.getInputMap();
Designer.java,Source source = new DOMSource(node.getAsDocument());,if (DOMSource(node != null ) Source source = new DOMSource(node.getAsDocument());
Designer.java,TransformerFactory transformerFactory = TransformerFactory.newInstance();,if (TransformerFactory != null ) TransformerFactory transformerFactory = TransformerFactory.newInstance();
Designer.java,Transformer xformer = transformerFactory.newTransformer();,if (transformerFactory != null ) Transformer xformer = transformerFactory.newTransformer();
Designer.java,DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();,if (DocumentBuilderFactory != null ) DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();
Designer.java,Element settingsElement = document.getDocumentElement();,if (document != null ) Element settingsElement = document.getDocumentElement();
Designer.java,DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();,if (DocumentBuilderFactory != null ) DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();
Designer.java,DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();,if (documentBuilderFactory != null ) DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();
Designer.java,Document document = documentBuilder.newDocument();,if (documentBuilder != null ) Document document = documentBuilder.newDocument();
Designer.java,TransformerFactory transformerFactory = TransformerFactory.newInstance();,if (TransformerFactory != null ) TransformerFactory transformerFactory = TransformerFactory.newInstance();
Designer.java,Transformer transformer = transformerFactory.newTransformer();,if (transformerFactory != null ) Transformer transformer = transformerFactory.newTransformer();
Report.java,key = rv.getPackageName() + '.' + rv.getClassName();,if (rv != null ) key = rv.getPackageName() + '.' + rv.getClassName();
SourceCodeProcessor.java,final long start = System.nanoTime();,if (System != null ) final long start = System.nanoTime();
SourceCodeProcessor.java,final long end = System.nanoTime();,if (System != null ) final long end = System.nanoTime();
SourceCodeProcessor.java,ParserOptions parserOptions = languageVersionHandler.getDefaultParserOptions();,if (languageVersionHandler != null ) ParserOptions parserOptions = languageVersionHandler.getDefaultParserOptions();
SourceCodeProcessor.java,final long start = System.nanoTime();,if (System != null ) final long start = System.nanoTime();
SourceCodeProcessor.java,final long end = System.nanoTime();,if (System != null ) final long end = System.nanoTime();
SourceCodeProcessor.java,final long start = System.nanoTime();,if (System != null ) final long start = System.nanoTime();
SourceCodeProcessor.java,final long end = System.nanoTime();,if (System != null ) final long end = System.nanoTime();
SourceCodeProcessor.java,LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();,if (languageVersion != null ) LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();
Benchmarker.java,LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();,if (languageVersion != null ) LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();
Benchmarker.java,ParserOptions options = languageVersionHandler.getDefaultParserOptions();,if (languageVersionHandler != null ) ParserOptions options = languageVersionHandler.getDefaultParserOptions();
AbstractPMDProcessor.java,long start = System.nanoTime();,if (System != null ) long start = System.nanoTime();
Benchmarker.java,LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();,if (languageVersion != null ) LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();
Benchmarker.java,long end = System.currentTimeMillis();,if (System != null ) long end = System.currentTimeMillis();
Benchmarker.java,Collection<Rule> rules = ruleSet.getRules();,if (ruleSet != null ) Collection<Rule> rules = ruleSet.getRules();
Benchmarker.java,StringBuilder out = new StringBuilder(result.rule.getName());,if (StringBuilder(result != null ) StringBuilder out = new StringBuilder(result.rule.getName());
Benchmark.java,languageVersion = language.getDefaultVersion();,if (language != null ) languageVersion = language.getDefaultVersion();
Benchmark.java,Iterator<RuleSet> i = factory.getRegisteredRuleSets();,if (factory != null ) Iterator<RuleSet> i = factory.getRegisteredRuleSets();
Benchmark.java,StringBuffer out = new StringBuffer(result.rule.getName());,if (StringBuffer(result != null ) StringBuffer out = new StringBuffer(result.rule.getName());
Benchmark.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
Benchmark.java,LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();,if (languageVersion != null ) LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();
Benchmark.java,long end = System.currentTimeMillis();,if (System != null ) long end = System.currentTimeMillis();
Benchmark.java,Collection<Rule> rules = ruleSet.getRules();,if (ruleSet != null ) Collection<Rule> rules = ruleSet.getRules();
Benchmark.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
Benchmark.java,reader = new InputStreamReader(dataSource.getInputStream());,if (InputStreamReader(dataSource != null ) reader = new InputStreamReader(dataSource.getInputStream());
Benchmark.java,long end = System.currentTimeMillis();,if (System != null ) long end = System.currentTimeMillis();
DumpFacade.java,String image = node.getImage();,if (node != null ) String image = node.getImage();
DumpFacade.java,String image = node.getImage();,if (node != null ) String image = node.getImage();
DumpFacade.java,String image = node.getImage();,if (node != null ) String image = node.getImage();
DumpFacade.java,Iterator<Attribute> iterator = node.getAttributeIterator();,if (node != null ) Iterator<Attribute> iterator = node.getAttributeIterator();
DumpFacade.java,Attribute attribute = iterator.next();,if (iterator != null ) Attribute attribute = iterator.next();
TypeMap.java,Iterator iter = typesByName.entrySet().iterator();,if (typesByName != null ) Iterator iter = typesByName.entrySet().iterator();
TypeMap.java,Map.Entry entry = (Map.Entry) iter.next();,if (iter != null ) Map.Entry entry = (Map.Entry) iter.next();
PMDTask.java,String[] srcFiles = ds.getIncludedFiles();,if (ds != null ) String[] srcFiles = ds.getIncludedFiles();
PMDTask.java,Throwable cause = pmde.getCause();,if (pmde != null ) Throwable cause = pmde.getCause();
PMDTask.java,String ruleSets = configuration.getRuleSets();,if (configuration != null ) String ruleSets = configuration.getRuleSets();
PMDTask.java,RuleSets rules = ruleSetFactory.createRuleSets(configuration.getRuleSets());,if (ruleSetFactory != null ) RuleSets rules = ruleSetFactory.createRuleSets(configuration.getRuleSets());
PMDTask_new.java,LanguageVersion languageVersion = LanguageVersion.findByTerseName(version.getTerseName());,if (LanguageVersion != null ) LanguageVersion languageVersion = LanguageVersion.findByTerseName(version.getTerseName());
PMDTask_new.java,int problemCount = reportSize.get();,if (reportSize != null ) int problemCount = reportSize.get();
PMDTask_new.java,String[] srcFiles = ds.getIncludedFiles();,if (ds != null ) String[] srcFiles = ds.getIncludedFiles();
PMDTask_new.java,Throwable cause = pmde.getCause();,if (pmde != null ) Throwable cause = pmde.getCause();
PMDTask_new.java,String ruleSets = configuration.getRuleSets();,if (configuration != null ) String ruleSets = configuration.getRuleSets();
PMDTask_new.java,RuleSets rules = ruleSetFactory.createRuleSets(configuration.getRuleSets());,if (ruleSetFactory != null ) RuleSets rules = ruleSetFactory.createRuleSets(configuration.getRuleSets());
PMDTask_new.java,RuleSet[] ruleSets = rules.getAllRuleSets();,if (rules != null ) RuleSet[] ruleSets = rules.getAllRuleSets();
PMDTask_new.java,RuleSetWrapper rs = it.next();,if (it != null ) RuleSetWrapper rs = it.next();
PMDTask.java,String ruleSets = configuration.getRuleSets();,if (configuration != null ) String ruleSets = configuration.getRuleSets();
PMDTask.java,RuleSets rules = ruleSetFactory.createRuleSets(configuration.getRuleSets());,if (ruleSetFactory != null ) RuleSets rules = ruleSetFactory.createRuleSets(configuration.getRuleSets());
PMDTask.java,String[] srcFiles = ds.getIncludedFiles();,if (ds != null ) String[] srcFiles = ds.getIncludedFiles();
PMDTask.java,final String inputPaths = ds.getBasedir().getPath();,if (ds != null ) final String inputPaths = ds.getBasedir().getPath();
PMD.java,LanguageVersion languageVersion = configuration.getLanguageVersionOfFile(ctx.getSourceCodeFilename());,if (configuration != null ) LanguageVersion languageVersion = configuration.getLanguageVersionOfFile(ctx.getSourceCodeFilename());
PMD.java,LanguageVersion languageVersion = ctx.getLanguageVersion();,if (ctx != null ) LanguageVersion languageVersion = ctx.getLanguageVersion();
PMD.java,LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();,if (languageVersion != null ) LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();
PMD.java,ParserOptions parserOptions = languageVersionHandler.getDefaultParserOptions();,if (languageVersionHandler != null ) ParserOptions parserOptions = languageVersionHandler.getDefaultParserOptions();
PMD.java,long start = System.nanoTime();,if (System != null ) long start = System.nanoTime();
PMD.java,long end = System.nanoTime();,if (System != null ) long end = System.nanoTime();
PMD.java,start = System.nanoTime();,if (System != null ) start = System.nanoTime();
PMD.java,end = System.nanoTime();,if (System != null ) end = System.nanoTime();
PMD.java,Language language = languageVersion.getLanguage();,if (languageVersion != null ) Language language = languageVersion.getLanguage();
PMD.java,start = System.nanoTime();,if (System != null ) start = System.nanoTime();
PMD.java,end = System.nanoTime();,if (System != null ) end = System.nanoTime();
PMD.java,start = System.nanoTime();,if (System != null ) start = System.nanoTime();
PMD.java,end = System.nanoTime();,if (System != null ) end = System.nanoTime();
PMD.java,ruleSets = factory.createRuleSets(configuration.getRuleSets());,if (factory != null ) ruleSets = factory.createRuleSets(configuration.getRuleSets());
PMD.java,long endLoadRules = System.nanoTime();,if (System != null ) long endLoadRules = System.nanoTime();
PMD.java,renderer = configuration.createRenderer();,if (configuration != null ) renderer = configuration.createRenderer();
PMD.java,String reportFile = configuration.getReportFile();,if (configuration != null ) String reportFile = configuration.getReportFile();
PMD.java,reportEnd = System.nanoTime();,if (System != null ) reportEnd = System.nanoTime();
PMD.java,reportStart = System.nanoTime();,if (System != null ) reportStart = System.nanoTime();
PMD.java,reportEnd = System.nanoTime();,if (System != null ) reportEnd = System.nanoTime();
PMD.java,Language language = rule.getLanguage();,if (rule != null ) Language language = rule.getLanguage();
PMD.java,PmdThread thread = (PmdThread) Thread.currentThread();,if (Thread != null ) PmdThread thread = (PmdThread) Thread.currentThread();
PMD.java,RuleContext ctx = thread.getRuleContext();,if (thread != null ) RuleContext ctx = thread.getRuleContext();
PMD.java,RuleSets rs = thread.getRuleSets(configuration.getRuleSets());,if (thread != null ) RuleSets rs = thread.getRuleSets(configuration.getRuleSets());
PMD.java,InputStream stream = new BufferedInputStream(dataSource.getInputStream());,if (BufferedInputStream(dataSource != null ) InputStream stream = new BufferedInputStream(dataSource.getInputStream());
PMD.java,rs = factory.createRuleSets(configuration.getRuleSets());,if (factory != null ) rs = factory.createRuleSets(configuration.getRuleSets());
PMD.java,final boolean reportShortNames = configuration.isReportShortNames();,if (configuration != null ) final boolean reportShortNames = configuration.isReportShortNames();
PMD.java,final String inputPaths = configuration.getInputPaths();,if (configuration != null ) final String inputPaths = configuration.getInputPaths();
PMD.java,report = future.get();,if (future != null ) report = future.get();
PMD.java,Throwable t = ee.getCause();,if (ee != null ) Throwable t = ee.getCause();
PMD.java,long start = System.nanoTime();,if (System != null ) long start = System.nanoTime();
PMD.java,long end = System.nanoTime();,if (System != null ) long end = System.nanoTime();
PMD.java,InputStream stream = new BufferedInputStream(dataSource.getInputStream());,if (BufferedInputStream(dataSource != null ) InputStream stream = new BufferedInputStream(dataSource.getInputStream());
PMD.java,long start = System.nanoTime();,if (System != null ) long start = System.nanoTime();
PMD.java,long end = System.nanoTime();,if (System != null ) long end = System.nanoTime();
PMD.java,rs = ruleSetFactory.createRuleSets(configuration.getRuleSets());,if (ruleSetFactory != null ) rs = ruleSetFactory.createRuleSets(configuration.getRuleSets());
PMD.java,report = future.get();,if (future != null ) report = future.get();
PMD.java,Throwable t = ee.getCause();,if (ee != null ) Throwable t = ee.getCause();
PMD.java,long start = System.nanoTime();,if (System != null ) long start = System.nanoTime();
PMD.java,long end = System.nanoTime();,if (System != null ) long end = System.nanoTime();
PMD.java,long start = System.nanoTime();,if (System != null ) long start = System.nanoTime();
PMD.java,long end = System.nanoTime();,if (System != null ) long end = System.nanoTime();
PMD.java,rs = ruleSetFactory.createRuleSets(configuration.getRuleSets());,if (ruleSetFactory != null ) rs = ruleSetFactory.createRuleSets(configuration.getRuleSets());
PMD.java,InputStream stream = new BufferedInputStream(dataSource.getInputStream());,if (BufferedInputStream(dataSource != null ) InputStream stream = new BufferedInputStream(dataSource.getInputStream());
PMD.java,long start = System.nanoTime();,if (System != null ) long start = System.nanoTime();
PMD.java,long end = System.nanoTime();,if (System != null ) long end = System.nanoTime();
SimpleAggregatorTst.java,boolean regressionTest = TestDescriptor.inRegressionTestMode();,if (TestDescriptor != null ) boolean regressionTest = TestDescriptor.inRegressionTestMode();
Plugin.java,final Project project = (Project)context.getElement();,if ((Project)context != null ) final Project project = (Project)context.getElement();
Plugin.java,final LogPage page = LogManager.getLogManager().getMsgPage();,if (LogManager != null ) final LogPage page = LogManager.getLogManager().getMsgPage();
Plugin.java,final Project project = (Project)context.getElement();,if ((Project)context != null ) final Project project = (Project)context.getElement();
Plugin.java,final Element doc = contextMenu.getContext().getElement();,if (contextMenu != null ) final Element doc = contextMenu.getContext().getElement();
Plugin.java,final View view = contextMenu.getContext().getView();,if (contextMenu != null ) final View view = contextMenu.getContext().getView();
Plugin.java,final LogPage page = LogManager.getLogManager().getMsgPage();,if (LogManager != null ) final LogPage page = LogManager.getLogManager().getMsgPage();
Plugin.java,final RuleViolation viol = (RuleViolation)i.next();,if ((RuleViolation)i != null ) final RuleViolation viol = (RuleViolation)i.next();
Plugin.java,final Object obj = iter.next();,if (iter != null ) final Object obj = iter.next();
Plugin.java,final Object obj = iter.next();,if (iter != null ) final Object obj = iter.next();
PmdSettingsPanel.java,String selected = fdlg.getDirectory() + fdlg.getFile();,if (fdlg != null ) String selected = fdlg.getDirectory() + fdlg.getFile();
PMDTask.java,rules = ruleSetFactory.createRuleSets(configuration.getRuleSets());,if (ruleSetFactory != null ) rules = ruleSetFactory.createRuleSets(configuration.getRuleSets());
PMD.java,LanguageVersion languageVersion = configuration.getLanguageVersionOfFile(ctx.getSourceCodeFilename());,if (configuration != null ) LanguageVersion languageVersion = configuration.getLanguageVersionOfFile(ctx.getSourceCodeFilename());
PMD.java,LanguageVersion languageVersion = ctx.getLanguageVersion();,if (ctx != null ) LanguageVersion languageVersion = ctx.getLanguageVersion();
PMD.java,LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();,if (languageVersion != null ) LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();
PMD.java,ParserOptions parserOptions = languageVersionHandler.getDefaultParserOptions();,if (languageVersionHandler != null ) ParserOptions parserOptions = languageVersionHandler.getDefaultParserOptions();
PMD.java,long start = System.nanoTime();,if (System != null ) long start = System.nanoTime();
PMD.java,long end = System.nanoTime();,if (System != null ) long end = System.nanoTime();
PMD.java,start = System.nanoTime();,if (System != null ) start = System.nanoTime();
PMD.java,end = System.nanoTime();,if (System != null ) end = System.nanoTime();
PMD.java,Language language = languageVersion.getLanguage();,if (languageVersion != null ) Language language = languageVersion.getLanguage();
PMD.java,start = System.nanoTime();,if (System != null ) start = System.nanoTime();
PMD.java,end = System.nanoTime();,if (System != null ) end = System.nanoTime();
PMD.java,start = System.nanoTime();,if (System != null ) start = System.nanoTime();
PMD.java,end = System.nanoTime();,if (System != null ) end = System.nanoTime();
PMD.java,long startLoadRules = System.nanoTime();,if (System != null ) long startLoadRules = System.nanoTime();
PMD.java,ruleSets = ruleSetFactory.createRuleSets(configuration.getRuleSets());,if (ruleSetFactory != null ) ruleSets = ruleSetFactory.createRuleSets(configuration.getRuleSets());
PMD.java,long endLoadRules = System.nanoTime();,if (System != null ) long endLoadRules = System.nanoTime();
PMD.java,Language language = rule.getLanguage();,if (rule != null ) Language language = rule.getLanguage();
PMD.java,long startFiles = System.nanoTime();,if (System != null ) long startFiles = System.nanoTime();
PMD.java,long endFiles = System.nanoTime();,if (System != null ) long endFiles = System.nanoTime();
PMD.java,reportStart = System.nanoTime();,if (System != null ) reportStart = System.nanoTime();
PMD.java,renderer = configuration.createRenderer();,if (configuration != null ) renderer = configuration.createRenderer();
PMD.java,reportEnd = System.nanoTime();,if (System != null ) reportEnd = System.nanoTime();
PMD.java,reportStart = System.nanoTime();,if (System != null ) reportStart = System.nanoTime();
PMD.java,reportEnd = System.nanoTime();,if (System != null ) reportEnd = System.nanoTime();
PMD.java,long start = System.nanoTime();,if (System != null ) long start = System.nanoTime();
PMD.java,final Configuration configuration = opts.getConfiguration();,if (opts != null ) final Configuration configuration = opts.getConfiguration();
PMD.java,final Level oldLogLevel = LOG.getLevel();,if (LOG != null ) final Level oldLogLevel = LOG.getLevel();
PMD.java,long end = System.nanoTime();,if (System != null ) long end = System.nanoTime();
PMD.java,PmdThread thread = (PmdThread) Thread.currentThread();,if (Thread != null ) PmdThread thread = (PmdThread) Thread.currentThread();
PMD.java,RuleContext ctx = thread.getRuleContext();,if (thread != null ) RuleContext ctx = thread.getRuleContext();
PMD.java,RuleSets rs = thread.getRuleSets(configuration.getRuleSets());,if (thread != null ) RuleSets rs = thread.getRuleSets(configuration.getRuleSets());
PMD.java,InputStream stream = new BufferedInputStream(dataSource.getInputStream());,if (BufferedInputStream(dataSource != null ) InputStream stream = new BufferedInputStream(dataSource.getInputStream());
CommentUtil.java,offset = tag.length();,if (tag != null ) offset = tag.length();
TypeOfFunction.java,nodeTypeName = attr.getStringValue();,if (attr != null ) nodeTypeName = attr.getStringValue();
CurrentPath.java,DataFlowNode inode = this.getLast();,if (this != null ) DataFlowNode inode = this.getLast();
ASTPainterHelper.java,extra = node.getImage();,if (node != null ) extra = node.getImage();
TextColorRenderer.java,code = br.readLine().trim();,if (br != null ) code = br.readLine().trim();
SummaryHTMLRenderer.java,String ruleName = entry.getKey();,if (entry != null ) String ruleName = entry.getKey();
Benchmark.java,Reader reader = new InputStreamReader(dataSource.getInputStream());,if (InputStreamReader(dataSource != null ) Reader reader = new InputStreamReader(dataSource.getInputStream());
ReportHTMLPrintVisitor.java,this.length = this.packageBuf.length();,if (this != null ) this.length = this.packageBuf.length();
CPPTokenizer.java,StringBuffer buffer = sourceCode.getCodeBuffer();,if (sourceCode != null ) StringBuffer buffer = sourceCode.getCodeBuffer();
CPPTokenizer.java,LanguageVersionHandler languageVersionHandler = LanguageVersion.CPP.getLanguageVersionHandler();,if (LanguageVersion != null ) LanguageVersionHandler languageVersionHandler = LanguageVersion.CPP.getLanguageVersionHandler();
CPPTokenizer.java,Token currentToken = (Token) tokenManager.getNextToken();,if (tokenManager != null ) Token currentToken = (Token) tokenManager.getNextToken();
CPPTokenizer.java,currentToken = (Token) tokenManager.getNextToken();,if (tokenManager != null ) currentToken = (Token) tokenManager.getNextToken();
AbstractTokenizer.java,this.code = tokens.getCode();,if (tokens != null ) this.code = tokens.getCode();
Initializer.java,LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();,if (languageVersion != null ) LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();
Initializer.java,LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();,if (languageVersion != null ) LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();
CSVRenderer.java,rv = violations.next();,if (violations != null ) rv = violations.next();
EmacsRenderer.java,RuleViolation rv = violations.next();,if (violations != null ) RuleViolation rv = violations.next();
TextRenderer.java,RuleViolation rv = violations.next();,if (violations != null ) RuleViolation rv = violations.next();
VBHTMLRenderer.java,RuleViolation rv = violations.next();,if (violations != null ) RuleViolation rv = violations.next();
VBHTMLRenderer.java,filename = rv.getFilename();,if (rv != null ) filename = rv.getFilename();
XMLRenderer.java,RuleViolation rv = violations.next();,if (violations != null ) RuleViolation rv = violations.next();
XMLRenderer.java,filename = rv.getFilename();,if (rv != null ) filename = rv.getFilename();
AbstractRule.java,value = propertyDescriptor.defaultValue();,if (propertyDescriptor != null ) value = propertyDescriptor.defaultValue();
IDEAJRenderer.java,RuleViolation rv = violations.next();,if (violations != null ) RuleViolation rv = violations.next();
IDEAJRenderer.java,RuleViolation rv = violations.next();,if (violations != null ) RuleViolation rv = violations.next();
HTMLRenderer.java,RuleViolation rv = violations.next();,if (violations != null ) RuleViolation rv = violations.next();
HTMLRenderer.java,String d = StringUtil.htmlEncode(rv.getDescription());,if (StringUtil != null ) String d = StringUtil.htmlEncode(rv.getDescription());
RenderReportsCmd.java,final String reportName = entry.getKey();,if (entry != null ) final String reportName = entry.getKey();
RenderReportsCmd.java,final Renderer renderer = entry.getValue();,if (entry != null ) final Renderer renderer = entry.getValue();
RenderReportsCmd.java,String reportString = writer.toString();,if (writer != null ) String reportString = writer.toString();
RenderReportsCmd.java,final InputStream contentsStream = new ByteArrayInputStream(reportString.getBytes());,if (ByteArrayInputStream(reportString != null ) final InputStream contentsStream = new ByteArrayInputStream(reportString.getBytes());
JavaProjectClassLoader.java,IPath outputLocation = classpathEntry.getOutputLocation();,if (classpathEntry != null ) IPath outputLocation = classpathEntry.getOutputLocation();
ASTView.java,Action collapseAllAction = new CollapseAllAction(page.astViewer());,if (CollapseAllAction(page != null ) Action collapseAllAction = new CollapseAllAction(page.astViewer());
StringUtil.java,last = index + oldString.length();,if (oldString != null ) last = index + oldString.length();
RuleSetWriter.java,this.document = documentBuilder.newDocument();,if (documentBuilder != null ) this.document = documentBuilder.newDocument();
CPDDuplicateCodeViewer.java,DefaultMutableTreeNode node = ( DefaultMutableTreeNode ) tree.getLastSelectedPathComponent();,if (tree != null ) DefaultMutableTreeNode node = ( DefaultMutableTreeNode ) tree.getLastSelectedPathComponent();
PMDJEditPlugin.java,TokenEntry mark = occurrences.next();,if (occurrences != null ) TokenEntry mark = occurrences.next();
PMDJEditPlugin.java,int lastLine = mark.getBeginLine() + match.getLineCount();,if (match != null ) int lastLine = mark.getBeginLine() + match.getLineCount();
PMDJEditPlugin.java,lang = new AnyLanguage(fileType.getExtensions());,if (AnyLanguage(fileType != null ) lang = new AnyLanguage(fileType.getExtensions());
BooleanEditorFactory.java,boolean selected = butt.getSelection();,if (butt != null ) boolean selected = butt.getSelection();
ReviewCodeCmd.java,final RuleSet ruleSet = filteredRuleSet(properties);	//properties.getProjectRuleSet();,if (//properties != null ) final RuleSet ruleSet = filteredRuleSet(properties);	//properties.getProjectRuleSet();
ReviewCodeCmd.java,RuleSet ruleSet = filteredRuleSet(properties);	//properties.getProjectRuleSet();,if (//properties != null ) RuleSet ruleSet = filteredRuleSet(properties);	//properties.getProjectRuleSet();
GeneralPreferencesPage.java,TableColumn[] columns = table.getColumns();,if (table != null ) TableColumn[] columns = table.getColumns();
AbstractTreeTableManager.java,Set<String> columnIds = new HashSet<String>(hiddenColumns.size());,if (HashSet<String>(hiddenColumns != null ) Set<String> columnIds = new HashSet<String>(hiddenColumns.size());
AbstractTreeTableManager.java,final Display display = tree.getDisplay();,if (tree != null ) final Display display = tree.getDisplay();
AbstractTreeTableManager.java,Shell shell = tree.getShell();,if (tree != null ) Shell shell = tree.getShell();
AbstractTreeTableManager.java,Rectangle clientArea = tree.getClientArea();,if (tree != null ) Rectangle clientArea = tree.getClientArea();
RuleTableManager.java,Tree ruleTree = treeViewer.getTree();,if (treeViewer != null ) Tree ruleTree = treeViewer.getTree();
TextColumnDescriptor.java,ValueFormatter formatter = FormatManager.formatterFor(value.getClass());,if (FormatManager != null ) ValueFormatter formatter = FormatManager.formatterFor(value.getClass());
PriorityDescriptorCache.java,IPreferences preferences = preferencesManager().loadPreferences();,if (preferencesManager() != null ) IPreferences preferences = preferencesManager().loadPreferences();
ViolationOutline.java,Integer[] widthArray = page.getColumnWidths();,if (page != null ) Integer[] widthArray = page.getColumnWidths();
ViolationOutline.java,Integer[] sorterProps = page.getSorterProperties();,if (page != null ) Integer[] sorterProps = page.getSorterProperties();
ViolationOutlineContentProvider.java,tableViewer = page.getTableViewer();,if (page != null ) tableViewer = page.getTableViewer();
ViolationOverviewDoubleClickListener.java,final TreeViewer viewer = this.overview.getViewer();,if (this != null ) final TreeViewer viewer = this.overview.getViewer();
ViolationOverviewDoubleClickListener.java,final ViolationOutlinePage vioPage = (ViolationOutlinePage)view.getCurrentPage();,if ((ViolationOutlinePage)view != null ) final ViolationOutlinePage vioPage = (ViolationOutlinePage)view.getCurrentPage();
Util.java,colorManager = ColourManager.managerFor(Display.getCurrent());,if (ColourManager != null ) colorManager = ColourManager.managerFor(Display.getCurrent());
Util.java,Object item = tItem.getData();,if (tItem != null ) Object item = tItem.getData();
Util.java,Color original = event.gc.getBackground();,if (event != null ) Color original = event.gc.getBackground();
Util.java,colorManager = ColourManager.managerFor(Display.getCurrent());,if (ColourManager != null ) colorManager = ColourManager.managerFor(Display.getCurrent());
Util.java,Object item = tItem.getData();,if (tItem != null ) Object item = tItem.getData();
Util.java,colorManager = ColourManager.managerFor(Display.getCurrent());,if (ColourManager != null ) colorManager = ColourManager.managerFor(Display.getCurrent());
Util.java,List<ShapeDescriptor> shapes = new ArrayList<ShapeDescriptor>(values.size());,if (ArrayList<ShapeDescriptor>(values != null ) List<ShapeDescriptor> shapes = new ArrayList<ShapeDescriptor>(values.size());
Util.java,ShapeDescriptor desc = shapesByItem.get(iter.next());,if (shapesByItem != null ) ShapeDescriptor desc = shapesByItem.get(iter.next());
Util.java,Color original = gc.getBackground();,if (gc != null ) Color original = gc.getBackground();
Util.java,final Display display = Display.getCurrent();,if (Display != null ) final Display display = Display.getCurrent();
Util.java,Object item = tItem.getData();,if (tItem != null ) Object item = tItem.getData();
Util.java,final Rectangle textLayoutBounds = layout.getBounds();,if (layout != null ) final Rectangle textLayoutBounds = layout.getBounds();
DataflowAnomalyAnalysisRule.java,final Usage lastUsage = hash.get(va.getVariableName());,if (hash != null ) final Usage lastUsage = hash.get(va.getVariableName());
DataflowAnomalyAnalysisRule.java,final int startLine = u.node.getLine();,if (u != null ) final int startLine = u.node.getLine();
DataflowAnomalyAnalysisRule.java,final int endLine = inode.getLine();,if (inode != null ) final int endLine = inode.getLine();
DataflowAnomalyAnalysisRule.java,final Node lastNode = inode.getNode();,if (inode != null ) final Node lastNode = inode.getNode();
DataflowAnomalyAnalysisRule.java,final Node firstNode = u.node.getNode();,if (u != null ) final Node firstNode = u.node.getNode();
PMDPropertyPageController.java,this.pmdAlreadyActivated = properties.isPmdEnabled();,if (properties != null ) this.pmdAlreadyActivated = properties.isPmdEnabled();
UpdateProjectPropertiesCmd.java,this.needRebuild = properties.isNeedRebuild();,if (properties != null ) this.needRebuild = properties.isNeedRebuild();
UpdateProjectPropertiesCmd.java,this.ruleSetFileExists = !properties.isRuleSetFileExist();,if (!properties != null ) this.ruleSetFileExists = !properties.isRuleSetFileExist();
ASTContentProvider.java,int kidCount = parent.jjtGetNumChildren();,if (parent != null ) int kidCount = parent.jjtGetNumChildren();
ASTViewPage.java,AbstractNode node = (AbstractNode)item.getData();,if ((AbstractNode)item != null ) AbstractNode node = (AbstractNode)item.getData();
ASTViewPage.java,String label = node.toString();,if (node != null ) String label = node.toString();
ASTViewPage.java,extra = node.getImage();,if (node != null ) extra = node.getImage();
ASTViewPage.java,int labelLength = label.length();,if (label != null ) int labelLength = label.length();
ASTViewPage.java,int index = methodSelector.getSelectionIndex();,if (methodSelector != null ) int index = methodSelector.getSelectionIndex();
DataflowViewPage.java,int index = methodSelector.getSelectionIndex();,if (methodSelector != null ) int index = methodSelector.getSelectionIndex();
JavaRuleViolation.java,final Scope scope = node.getScope();,if (node != null ) final Scope scope = node.getScope();
JavaRuleViolation.java,final SourceFileScope sourceFileScope = scope.getEnclosingSourceFileScope();,if (scope != null ) final SourceFileScope sourceFileScope = scope.getEnclosingSourceFileScope();
JavaRuleViolation.java,methodName = scope.getEnclosingMethodScope().getName();,if (scope != null ) methodName = scope.getEnclosingMethodScope().getName();
JavaRuleViolation.java,Node parent = node.jjtGetParent();,if (node != null ) Node parent = node.jjtGetParent();
JavaRuleViolation.java,parent = parent.jjtGetParent();,if (parent != null ) parent = parent.jjtGetParent();
JavaRuleViolation.java,variableName = node.getImage();,if (node != null ) variableName = node.getImage();
ReviewCodeCmd.java,ruleCount = ruleSet.getRules().size();,if (ruleSet != null ) ruleCount = ruleSet.getRules().size();
ReviewCodeCmd.java,fileCount += visitor.getProcessedFilesCount();,if (visitor != null ) fileCount += visitor.getProcessedFilesCount();
ReviewCodeCmd.java,pmdDuration += visitor.getActualPmdDuration();,if (visitor != null ) pmdDuration += visitor.getActualPmdDuration();
ReviewCodeCmd.java,final IProject project = resourceDelta.getResource().getProject();,if (resourceDelta != null ) final IProject project = resourceDelta.getResource().getProject();
ReviewCodeCmd.java,ruleCount = ruleSet.getRules().size();,if (ruleSet != null ) ruleCount = ruleSet.getRules().size();
ReviewCodeCmd.java,fileCount += visitor.getProcessedFilesCount();,if (visitor != null ) fileCount += visitor.getProcessedFilesCount();
ReviewCodeCmd.java,pmdDuration += visitor.getActualPmdDuration();,if (visitor != null ) pmdDuration += visitor.getActualPmdDuration();
AbstractRule.java,private String name = getClass().getName();,if (getClass() != null ) private String name = getClass().getName();
AbstractRule.java,private String ruleClass = getClass().getName();,if (getClass() != null ) private String ruleClass = getClass().getName();
AbstractRule.java,value = propertyDescriptor.defaultValue();,if (propertyDescriptor != null ) value = propertyDescriptor.defaultValue();
AbstractRule.java,Object propertyValues = this.getPropertiesByPropertyDescriptor();,if (this != null ) Object propertyValues = this.getPropertiesByPropertyDescriptor();
BasicPropertyDescriptorFactory.java,String characterStr = valuesById.get(delimiterKey).trim();,if (valuesById != null ) String characterStr = valuesById.get(delimiterKey).trim();
RuleSetFactory.java,private ClassLoader classLoader = RuleSetFactory.class.getClassLoader();,if (RuleSetFactory != null ) private ClassLoader classLoader = RuleSetFactory.class.getClassLoader();
RuleSetFactory.java,DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();,if (DocumentBuilderFactory != null ) DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();
RuleSetFactory.java,Element ruleSetElement = document.getDocumentElement();,if (document != null ) Element ruleSetElement = document.getDocumentElement();
RuleSetFactory.java,NodeList nodeList = ruleSetElement.getChildNodes();,if (ruleSetElement != null ) NodeList nodeList = ruleSetElement.getChildNodes();
RuleSetFactory.java,NodeList excludeNodes = ruleElement.getChildNodes();,if (ruleElement != null ) NodeList excludeNodes = ruleElement.getChildNodes();
RuleSetFactory.java,String nodeName = node.getNodeName();,if (node != null ) String nodeName = node.getNodeName();
RuleSetFactory.java,final NodeList nodeList = parentNode.getChildNodes();,if (parentNode != null ) final NodeList nodeList = parentNode.getChildNodes();
RuleSetFactory.java,String valueStr = propertyElement.getAttribute(entry.getKey());,if (propertyElement != null ) String valueStr = propertyElement.getAttribute(entry.getKey());
LanguageFilenameFilter.java,List<String> extensions = language.getExtensions();,if (language != null ) List<String> extensions = language.getExtensions();
DumpFacade.java,String image = node.getImage();,if (node != null ) String image = node.getImage();
NodeImageDeriver.java,"return nameNode == null ? ""??"" : nameNode.getImage();","if (nameNode != null ) return nameNode == null ? ""??"" : nameNode.getImage();"
ASTViewPage.java,String imgData = node.getImage();,if (node != null ) String imgData = node.getImage();
ASTUtil.java,StringBuilder sb = new StringBuilder(pmdMethod.getMethodName());,if (StringBuilder(pmdMethod != null ) StringBuilder sb = new StringBuilder(pmdMethod.getMethodName());
RuleLabelProvider.java,result = rule.getRuleSetName();,if (rule != null ) result = rule.getRuleSetName();
PMDPropertyPage.java,this.selectedWorkingSet = model.getProjectWorkingSet();,if (model != null ) this.selectedWorkingSet = model.getProjectWorkingSet();
BasicLineStyleListener.java,int length = lineText.length();,if (lineText != null ) int length = lineText.length();
BasicLineStyleListener.java,"int mlIndex = getBeginsInsideComment(lineOffset, lineText.length());","if (lineText != null ) int mlIndex = getBeginsInsideComment(lineOffset, lineText.length());"
BasicLineStyleListener.java,endComment += syntaxData.getMultiLineCommentEnd().length();,if (syntaxData != null ) endComment += syntaxData.getMultiLineCommentEnd().length();
BasicLineStyleListener.java,endString += syntaxData.stringEnd.length();,if (syntaxData != null ) endString += syntaxData.stringEnd.length();
BasicLineStyleListener.java,int length = lineText.length();,if (lineText != null ) int length = lineText.length();
SummaryPanelManager.java,PropertyDescriptor desc = entry.getKey();,if (entry != null ) PropertyDescriptor desc = entry.getKey();
PreferencesManagerImpl.java,private IPreferenceStore    storePreferencesStore = PMDPlugin.getDefault().getPreferenceStore();,if (PMDPlugin != null ) private IPreferenceStore    storePreferencesStore = PMDPlugin.getDefault().getPreferenceStore();
DefaultCommandProcessorStrategy.java,final String processorClassName = this.registeredCommandProcessors.get(aCommand.getName());,if (this != null ) final String processorClassName = this.registeredCommandProcessors.get(aCommand.getName());
Timer.java,this.topStart = System.currentTimeMillis();,if (System != null ) this.topStart = System.currentTimeMillis();
Timer.java,this.topStop = System.currentTimeMillis();,if (System != null ) this.topStop = System.currentTimeMillis();
ProjectPropertiesImpl.java,final ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray());,if (ByteArrayInputStream(baos != null ) final ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray());
StringTable.java,final InputStream is = messageTableUrl.openStream();,if (messageTableUrl != null ) final InputStream is = messageTableUrl.openStream();
RuleSetSelectionDialog.java,int selectionIndex = this.inputCombo.getSelectionIndex();,if (this != null ) int selectionIndex = this.inputCombo.getSelectionIndex();
PMDPropertyPage.java,this.controller = new PMDPropertyPageController(this.getShell());,if (PMDPropertyPageController(this != null ) this.controller = new PMDPropertyPageController(this.getShell());
PMDPropertyPage.java,this.model = controller.getPropertyPageBean();,if (controller != null ) this.model = controller.getPropertyPageBean();
Rule.java,int hashCode = this.ref.hashCode();,if (this != null ) int hashCode = this.ref.hashCode();
BaseVisitor.java,final IWorkingSet workingSet = this.projectProperties.getProjectWorkingSet();,if (this != null ) final IWorkingSet workingSet = this.projectProperties.getProjectWorkingSet();
DetectCutAndPasteCmd.java,final InputStream contentsStream = new ByteArrayInputStream(reportString.getBytes());,if (ByteArrayInputStream(reportString != null ) final InputStream contentsStream = new ByteArrayInputStream(reportString.getBytes());
ReviewResourceForRuleCommand.java,final IProject project = resource.getProject();,if (resource != null ) final IProject project = resource.getProject();
ReviewResourceForRuleCommand.java,final File sourceCodeFile = file.getFullPath().toFile();,if (file != null ) final File sourceCodeFile = file.getFullPath().toFile();
PreferencesManagerImpl.java,OutputStream out = new FileOutputStream(ruleSetLocation.toOSString());,if (FileOutputStream(ruleSetLocation != null ) OutputStream out = new FileOutputStream(ruleSetLocation.toOSString());
ProjectPropertiesImpl.java,final IRuleSetWriter writer = PMDPlugin.getDefault().getRuleSetWriter();,if (PMDPlugin != null ) final IRuleSetWriter writer = PMDPlugin.getDefault().getRuleSetWriter();
ProjectPropertiesManagerImpl.java,final Reader reader = new InputStreamReader(propertiesFile.getContents());,if (InputStreamReader(propertiesFile != null ) final Reader reader = new InputStreamReader(propertiesFile.getContents());
PMDGenerateASTAction.java,ByteArrayInputStream astInputStream = new ByteArrayInputStream(byteArrayOutputStream.toByteArray());,if (ByteArrayInputStream(byteArrayOutputStream != null ) ByteArrayInputStream astInputStream = new ByteArrayInputStream(byteArrayOutputStream.toByteArray());
RuleTableManager.java,IRuleSetWriter writer = plugin.getRuleSetWriter();,if (plugin != null ) IRuleSetWriter writer = plugin.getRuleSetWriter();
ShapePicker.java,"setToolTipText(newItem == null ? """" : newItem.toString());","if (newItem != null ) setToolTipText(newItem == null ? """" : newItem.toString());"
RuleTableManager.java,Rule addedRule = wiz.rule();,if (wiz != null ) Rule addedRule = wiz.rule();
AbstractEditorFactory.java,colourManager = ColourManager.managerFor(Display.getCurrent());,if (ColourManager != null ) colourManager = ColourManager.managerFor(Display.getCurrent());
AbstractEditorFactory.java,Display display = control.getDisplay();,if (control != null ) Display display = control.getDisplay();
AbstractEditorFactory.java,Display display = control.getDisplay();,if (control != null ) Display display = control.getDisplay();
RulePanelManager.java,String name = nameField.getText();,if (nameField != null ) String name = nameField.getText();
RuleSet.java,long start = System.nanoTime();,if (System != null ) long start = System.nanoTime();
RuleSet.java,long end = System.nanoTime();,if (System != null ) long end = System.nanoTime();
RuleSet.java,final LanguageVersion min = rule.getMinimumLanguageVersion();,if (rule != null ) final LanguageVersion min = rule.getMinimumLanguageVersion();
RuleSet.java,final LanguageVersion max = rule.getMinimumLanguageVersion();,if (rule != null ) final LanguageVersion max = rule.getMinimumLanguageVersion();
PMDTask.java,LanguageVersion languageVersion = LanguageVersion.findByTerseName(version.getTerseName());,if (LanguageVersion != null ) LanguageVersion languageVersion = LanguageVersion.findByTerseName(version.getTerseName());
PMDTask.java,String ruleSets = configuration.getRuleSets();,if (configuration != null ) String ruleSets = configuration.getRuleSets();
PMDTask.java,rules = ruleSetFactory.createRuleSets(configuration.getRuleSets());,if (ruleSetFactory != null ) rules = ruleSetFactory.createRuleSets(configuration.getRuleSets());
PMDTask.java,String[] srcFiles = ds.getIncludedFiles();,if (ds != null ) String[] srcFiles = ds.getIncludedFiles();
PMDTask.java,final String inputPaths = ds.getBasedir().getPath();,if (ds != null ) final String inputPaths = ds.getBasedir().getPath();
PMDTask.java,int problemCount = reportSize.get();,if (reportSize != null ) int problemCount = reportSize.get();
PMDTask.java,RuleSet[] ruleSets = rules.getAllRuleSets();,if (rules != null ) RuleSet[] ruleSets = rules.getAllRuleSets();
PMDTask.java,RuleSetWrapper rs = it.next();,if (it != null ) RuleSetWrapper rs = it.next();
ConsecutiveLiteralAppendsRule.java,List<NameOccurrence> decl = entry.getValue();,if (entry != null ) List<NameOccurrence> decl = entry.getValue();
ConsecutiveLiteralAppendsRule.java,Node n = no.getLocation();,if (no != null ) Node n = no.getLocation();
ConsecutiveLiteralAppendsRule.java,Node parent = node.jjtGetParent();,if (node != null ) Node parent = node.jjtGetParent();
ConsecutiveLiteralAppendsRule.java,Node parentNode = node.jjtGetParent();,if (node != null ) Node parentNode = node.jjtGetParent();
ConsecutiveLiteralAppendsRule.java,parentNode = parentNode.jjtGetParent();,if (parentNode != null ) parentNode = parentNode.jjtGetParent();
ConsecutiveLiteralAppendsRule.java,int allChildren = parentNode.jjtGetNumChildren();,if (parentNode != null ) int allChildren = parentNode.jjtGetNumChildren();
ConsecutiveLiteralAppendsRule.java,Node nn = node.getTypeNameNode();,if (node != null ) Node nn = node.getTypeNameNode();
TypeHelper.java,List<Class> implementors = Arrays.asList(type.getInterfaces());,if (Arrays != null ) List<Class> implementors = Arrays.asList(type.getInterfaces());
TypeHelper.java,superC = superC.getSuperclass();,if (superC != null ) superC = superC.getSuperclass();
ASTViewPage.java,NodeImageDeriver deriver = DeriversByType.get(node.getClass());,if (DeriversByType != null ) NodeImageDeriver deriver = DeriversByType.get(node.getClass());
AbstractDefaultCommand.java,final IPreferences preferences = PMDPlugin.getDefault().loadPreferences();,if (PMDPlugin != null ) final IPreferences preferences = PMDPlugin.getDefault().loadPreferences();
PriorityDescriptorCache.java,IPreferencesManager mgr = PMDPlugin.getDefault().getPreferencesManager();,if (PMDPlugin != null ) IPreferencesManager mgr = PMDPlugin.getDefault().getPreferencesManager();
RuleEditorView.java,entry = iter.next();,if (iter != null ) entry = iter.next();
RuleEditorView.java,Object value = entry.getValue();,if (entry != null ) Object value = entry.getValue();
RuleEditorView.java,int start = sb.length();,if (sb != null ) int start = sb.length();
RuleEditorView.java,entry = iter.next();,if (iter != null ) entry = iter.next();
RuleEditorView.java,start = sb.length();,if (sb != null ) start = sb.length();
NewPropertyDialog.java,String newName = textField.getText().trim();,if (textField != null ) String newName = textField.getText().trim();
NewPropertyDialog.java,String newLabel = textField.getText().trim();,if (textField != null ) String newLabel = textField.getText().trim();
ASTView.java,IWorkbenchPart activePart = getSitePage().getActivePart();,if (getSitePage() != null ) IWorkbenchPart activePart = getSitePage().getActivePart();
ASTView.java,FileRecord record = page.getFileRecord();,if (page != null ) FileRecord record = page.getFileRecord();
ASTView.java,IResource resource = record.getResource();,if (record != null ) IResource resource = record.getResource();
DataflowView.java,IWorkbenchPart activePart = getSitePage().getActivePart();,if (getSitePage() != null ) IWorkbenchPart activePart = getSitePage().getActivePart();
DataflowView.java,FileRecord record = page.getFileRecord();,if (page != null ) FileRecord record = page.getFileRecord();
DataflowView.java,IResource resource = record.getResource();,if (record != null ) IResource resource = record.getResource();
AbstractTreeTableManager.java,hiddenColumnNames = PreferenceUIStore.instance.hiddenColumnNames();,if (PreferenceUIStore != null ) hiddenColumnNames = PreferenceUIStore.instance.hiddenColumnNames();
PMDPreferencePage2.java,entry = iter.next();,if (iter != null ) entry = iter.next();
PMDPreferencePage2.java,Object value = entry.getValue();,if (entry != null ) Object value = entry.getValue();
PMDPreferencePage2.java,int start = sb.length();,if (sb != null ) int start = sb.length();
PMDPreferencePage2.java,entry = iter.next();,if (iter != null ) entry = iter.next();
PMDPreferencePage2.java,start = sb.length();,if (sb != null ) start = sb.length();
RuleTableManager.java,names[i] = availableColumns[i].label();,if (availableColumns[i] != null ) names[i] = availableColumns[i].label();
AbstractStructureInspectorPage.java,int length = sb.length();,if (sb != null ) int length = sb.length();
CollapseAllAction.java,this.treeViewer = view.getViewer();,if (view != null ) this.treeViewer = view.getViewer();
ASTViewPage.java,String extra = node.getImage();,if (node != null ) String extra = node.getImage();
ASTViewPage.java,final int index = methodSelector.getSelectionIndex();,if (methodSelector != null ) final int index = methodSelector.getSelectionIndex();
CPDView.java,Tree tree = this.treeViewer.getTree();,if (this != null ) Tree tree = this.treeViewer.getTree();
CPDView.java,final Match match = matches.next();,if (matches != null ) final Match match = matches.next();
CPDView.java,final boolean hasResults = iter.hasNext();,if (iter != null ) final boolean hasResults = iter.hasNext();
FileRecord.java,this.numberOfMethods = methods.size();,if (methods != null ) this.numberOfMethods = methods.size();
PackageRecord.java,resource = this.packageFragment.getCorrespondingResource();,if (this != null ) resource = this.packageFragment.getCorrespondingResource();
PackageRecord.java,final IResource javaResource = javaUnit.getCorrespondingResource();,if (javaUnit != null ) final IResource javaResource = javaUnit.getCorrespondingResource();
PackageRecord.java,String name = this.packageFragment.getElementName();,if (this != null ) String name = this.packageFragment.getElementName();
RuleTableManager.java,MenuItem item = entry.getValue();,if (entry != null ) MenuItem item = entry.getValue();
RuleTableManager.java,MenuItem item = entry.getValue();,if (entry != null ) MenuItem item = entry.getValue();
UISettings.java,List<Integer> values = new ArrayList<Integer>(uiDescriptorsByPriority.size());,if (ArrayList<Integer>(uiDescriptorsByPriority != null ) List<Integer> values = new ArrayList<Integer>(uiDescriptorsByPriority.size());
BaseVisitor.java,final RuleViolation violation = iter.next();,if (iter != null ) final RuleViolation violation = iter.next();
ReviewCodeCmd.java,final IProject project = this.resourceDelta.getResource().getProject();,if (this != null ) final IProject project = this.resourceDelta.getResource().getProject();
ReviewCodeCmd.java,final RuleSet ruleSet = filteredRuleSet(properties);	//properties.getProjectRuleSet();,if (//properties != null ) final RuleSet ruleSet = filteredRuleSet(properties);	//properties.getProjectRuleSet();
ReviewCodeCmd.java,this.ruleCount = ruleSet.getRules().size();,if (ruleSet != null ) this.ruleCount = ruleSet.getRules().size();
ReviewCodeCmd.java,final IMarker marker = file.createMarker(markerInfo.getType());,if (file != null ) final IMarker marker = file.createMarker(markerInfo.getType());
GeneralPreferencesPage.java,this.preferences = PMDPlugin.getDefault().loadPreferences();,if (PMDPlugin != null ) this.preferences = PMDPlugin.getDefault().loadPreferences();
PMDPreferencePage.java,hiddenColumnNames = PreferenceUIStore.instance.hiddenColumnNames();,if (PreferenceUIStore != null ) hiddenColumnNames = PreferenceUIStore.instance.hiddenColumnNames();
PMDPreferencePage.java,Object[] chosenRules = ruleTreeViewer.getCheckedElements();,if (ruleTreeViewer != null ) Object[] chosenRules = ruleTreeViewer.getCheckedElements();
PMDPreferencePage.java,Set<String> names = PreferenceUIStore.instance.selectedRuleNames();,if (PreferenceUIStore != null ) Set<String> names = PreferenceUIStore.instance.selectedRuleNames();
PMDPreferencePage.java,IStructuredSelection selection = (IStructuredSelection)ruleTreeViewer.getSelection();,if ((IStructuredSelection)ruleTreeViewer != null ) IStructuredSelection selection = (IStructuredSelection)ruleTreeViewer.getSelection();
PMDPreferencePage.java,int selectionIdx = combo.getSelectionIndex();,if (combo != null ) int selectionIdx = combo.getSelectionIndex();
PMDPreferencePage.java,final Tree ruleTree = ruleTreeViewer.getTree();,if (ruleTreeViewer != null ) final Tree ruleTree = ruleTreeViewer.getTree();
PMDPreferencePage.java,IStructuredSelection selection = (IStructuredSelection)event.getSelection();,if ((IStructuredSelection)event != null ) IStructuredSelection selection = (IStructuredSelection)event.getSelection();
PMDPreferencePage.java,boolean checked = item.getChecked();,if (item != null ) boolean checked = item.getChecked();
PMDPreferencePage.java,TreeColumn[] cols = ruleTreeViewer.getTree().getColumns();,if (ruleTreeViewer != null ) TreeColumn[] cols = ruleTreeViewer.getTree().getColumns();
PMDPreferencePage.java,RuleLabelProvider provider = (RuleLabelProvider)ruleTreeViewer.getLabelProvider();,if ((RuleLabelProvider)ruleTreeViewer != null ) RuleLabelProvider provider = (RuleLabelProvider)ruleTreeViewer.getLabelProvider();
PMDPreferencePage.java,names[i] = availableColumns[i].label();,if (availableColumns[i] != null ) names[i] = availableColumns[i].label();
PMDPreferencePage.java,MenuItem item = entry.getValue();,if (entry != null ) MenuItem item = entry.getValue();
PMDPreferencePage.java,MenuItem item = entry.getValue();,if (entry != null ) MenuItem item = entry.getValue();
PMDPreferencePage.java,Tree ruleTree = ruleTreeViewer.getTree();,if (ruleTreeViewer != null ) Tree ruleTree = ruleTreeViewer.getTree();
PMDPreferencePage.java,int eventCode = entry.getKey().intValue();,if (entry != null ) int eventCode = entry.getKey().intValue();
PMDPreferencePage.java,List<Listener> listeners = entry.getValue();,if (entry != null ) List<Listener> listeners = entry.getValue();
PMDPreferencePage.java,TreeColumn[] columns = ruleTree.getColumns();,if (ruleTree != null ) TreeColumn[] columns = ruleTree.getColumns();
PMDPreferencePage.java,TreeItem[] items = item.getItems();,if (item != null ) TreeItem[] items = item.getItems();
PMDPreferencePage.java,TreeItem[] items = item.getItems();,if (item != null ) TreeItem[] items = item.getItems();
PMDPreferencePage.java,int result = dialog.open();,if (dialog != null ) int result = dialog.open();
PMDPreferencePage.java,Rule addedRule = dialog.getRule();,if (dialog != null ) Rule addedRule = dialog.getRule();
PMDPreferencePage.java,RuleSet selectedRuleSet = dialog.getSelectedRuleSet();,if (dialog != null ) RuleSet selectedRuleSet = dialog.getSelectedRuleSet();
PMDPreferencePage.java,Iterator<Rule> iter = selectedRuleSet.getRules().iterator();,if (selectedRuleSet != null ) Iterator<Rule> iter = selectedRuleSet.getRules().iterator();
PMDPreferencePage.java,Rule rule = iter.next();,if (iter != null ) Rule rule = iter.next();
PMDPreferencePage.java,String fileName = dialog.open();,if (dialog != null ) String fileName = dialog.open();
PMDPreferencePage.java,IRuleSetWriter writer = plugin.getRuleSetWriter();,if (plugin != null ) IRuleSetWriter writer = plugin.getRuleSetWriter();
PMDPreferencePage.java,RuleSet defaultRuleSet = plugin.getPreferencesManager().getRuleSet();,if (plugin != null ) RuleSet defaultRuleSet = plugin.getPreferencesManager().getRuleSet();
PMDPreferencePage.java,Tree tree = ruleTreeViewer.getTree();,if (ruleTreeViewer != null ) Tree tree = ruleTreeViewer.getTree();
PMDPreferencePage.java,TreeItem[] items = tree.getItems();,if (tree != null ) TreeItem[] items = tree.getItems();
PMDPreferencePage.java,Rule itemRule = (Rule)item.getData();,if ((Rule)item != null ) Rule itemRule = (Rule)item.getData();
FormArranger.java,List<String> unreferenced = new ArrayList<String>(refPositions.size());,if (ArrayList<String>(refPositions != null ) List<String> unreferenced = new ArrayList<String>(refPositions.size());
ViolationOutlineContentProvider.java,IMarker marker = markerDeltas[i].getMarker();,if (markerDeltas[i] != null ) IMarker marker = markerDeltas[i].getMarker();
ViolationOverview.java,projects = this.root.getChildren();,if (this != null ) projects = this.root.getChildren();
ViolationOverview.java,final Object object = event.getElement();,if (event != null ) final Object object = event.getElement();
ViolationOverview.java,final AbstractPMDRecord packRec = record.getParent().getParent();,if (record != null ) final AbstractPMDRecord packRec = record.getParent().getParent();
ViolationOverviewContentProvider.java,this.treeViewer = view.getViewer();,if (view != null ) this.treeViewer = view.getViewer();
ViolationOverviewContentProvider.java,final IResource resource = markerDelta.getResource();,if (markerDelta != null ) final IResource resource = markerDelta.getResource();
ViolationOverviewContentProvider.java,final IProject project = resource.getProject();,if (resource != null ) final IProject project = resource.getProject();
ViolationOverviewContentProvider.java,final IProject project = (IProject) projectRec.getResource();,if (projectRec != null ) final IProject project = (IProject) projectRec.getResource();
ViolationOverviewContentProvider.java,final PackageRecord packageRec = (PackageRecord) fileRec.getParent();,if (fileRec != null ) final PackageRecord packageRec = (PackageRecord) fileRec.getParent();
ViolationOverviewLabelProvider.java,final int priority = markerRecord.getPriority();,if (markerRecord != null ) final int priority = markerRecord.getPriority();
ViolationOverviewMenuManager.java,final Tree tree = this.overview.getViewer().getTree();,if (this != null ) final Tree tree = this.overview.getViewer().getTree();
DataflowViewPage.java,final String resourceString = getDocument().get();,if (getDocument() != null ) final String resourceString = getDocument().get();
DataflowViewPage.java,final int beginLine = violation.getBeginLine();,if (violation != null ) final int beginLine = violation.getBeginLine();
DataflowViewPage.java,final StringReader reader = new StringReader(getDocument().get());,if (StringReader(getDocument() != null ) final StringReader reader = new StringReader(getDocument().get());
DataflowViewPage.java,final String varName = violation.getVariableName();,if (violation != null ) final String varName = violation.getVariableName();
DataflowViewPage.java,final int beginLine = violation.getBeginLine();,if (violation != null ) final int beginLine = violation.getBeginLine();
DataflowViewPage.java,final int endLine = violation.getEndLine();,if (violation != null ) final int endLine = violation.getEndLine();
DataflowViewPage.java,final DataflowGraph graph = graphViewer.getGraph();,if (graphViewer != null ) final DataflowGraph graph = graphViewer.getGraph();
DataflowViewPage.java,final DataflowGraph graph = graphViewer.getGraph();,if (graphViewer != null ) final DataflowGraph graph = graphViewer.getGraph();
DataflowViewPage.java,final int index = methodSelector.getSelectionIndex();,if (methodSelector != null ) final int index = methodSelector.getSelectionIndex();
DataflowViewPage.java,final int index = methodSelector.getSelectionIndex();,if (methodSelector != null ) final int index = methodSelector.getSelectionIndex();
Util.java,ImageData data = image.getImageData();,if (image != null ) ImageData data = image.getImageData();
RuleDialog.java,String[] labels = PMDPlugin.getDefault().getPriorityLabels();,if (PMDPlugin != null ) String[] labels = PMDPlugin.getDefault().getPriorityLabels();
ShapeSetCanvas.java,RGB rgb = entry.getValue();,if (entry != null ) RGB rgb = entry.getValue();
ViolationOutline.java,Integer[] priorities = PMDPlugin.getDefault().getPriorityValues();,if (PMDPlugin != null ) Integer[] priorities = PMDPlugin.getDefault().getPriorityValues();
Util.java,List<Color> colours = new ArrayList<Color>(values.size());,if (ArrayList<Color>(values != null ) List<Color> colours = new ArrayList<Color>(values.size());
Util.java,RGB rgb = coloursByItem.get(iter.next());,if (coloursByItem != null ) RGB rgb = coloursByItem.get(iter.next());
EnumerationEditorFactory.java,"int selectionIdx = indexOf(value, ep.choices());","if (ep != null ) int selectionIdx = indexOf(value, ep.choices());"
Util.java,Object item = tItem.getData();,if (tItem != null ) Object item = tItem.getData();
Util.java,Color original = event.gc.getBackground();,if (event != null ) Color original = event.gc.getBackground();
NewPropertyDialog.java,String newName = textField.getText().trim();,if (textField != null ) String newName = textField.getText().trim();
NewPropertyDialog.java,String newLabel = textField.getText().trim();,if (textField != null ) String newLabel = textField.getText().trim();
PMDPreferencePage.java,desc = iter.next();,if (iter != null ) desc = iter.next();
PMDPreferencePage.java,String rulesetName = ruleSetNameFrom(ruleSelection.commonRuleset());,if (ruleSetNameFrom(ruleSelection != null ) String rulesetName = ruleSetNameFrom(ruleSelection.commonRuleset());
PMDPreferencePage.java,RulePriority priority = ruleSelection.commonPriority();,if (ruleSelection != null ) RulePriority priority = ruleSelection.commonPriority();
RuleFieldAccessor.java,Language language = rule.getLanguage();,if (rule != null ) Language language = rule.getLanguage();
RuleFieldAccessor.java,"return language == null ? """" : language.getTerseName();","if (language != null ) return language == null ? """" : language.getTerseName();"
RuleFieldAccessor.java,LanguageVersion version = rule.getMinimumLanguageVersion();,if (rule != null ) LanguageVersion version = rule.getMinimumLanguageVersion();
RuleFieldAccessor.java,"return version == null ? """" : version.getTerseName();","if (version != null ) return version == null ? """" : version.getTerseName();"
RuleLabelProvider.java,String label = rg.label();,if (rg != null ) String label = rg.label();
RuleTableManager.java,Object[] checkedItems = ruleTreeViewer.getCheckedElements();,if (ruleTreeViewer != null ) Object[] checkedItems = ruleTreeViewer.getCheckedElements();
RuleTableManager.java,Object[] checkedItems = ruleTreeViewer.getCheckedElements();,if (ruleTreeViewer != null ) Object[] checkedItems = ruleTreeViewer.getCheckedElements();
RuleTableManager.java,desc = iter.next();,if (iter != null ) desc = iter.next();
RuleTableManager.java,hiddenColumnNames = PreferenceUIStore.instance.hiddenColumnNames();,if (PreferenceUIStore != null ) hiddenColumnNames = PreferenceUIStore.instance.hiddenColumnNames();
RuleTableManager.java,RuleDialog dialog = new RuleDialog(parent.getShell());,if (RuleDialog(parent != null ) RuleDialog dialog = new RuleDialog(parent.getShell());
RuleTableManager.java,int result = dialog.open();,if (dialog != null ) int result = dialog.open();
RuleTableManager.java,Rule addedRule = dialog.getRule();,if (dialog != null ) Rule addedRule = dialog.getRule();
RuleTableManager.java,IRuleSetWriter writer = plugin.getRuleSetWriter();,if (plugin != null ) IRuleSetWriter writer = plugin.getRuleSetWriter();
RuleTableManager.java,RuleSet selectedRuleSet = dialog.getSelectedRuleSet();,if (dialog != null ) RuleSet selectedRuleSet = dialog.getSelectedRuleSet();
RuleTableManager.java,Iterator<Rule> iter = selectedRuleSet.getRules().iterator();,if (selectedRuleSet != null ) Iterator<Rule> iter = selectedRuleSet.getRules().iterator();
RuleTableManager.java,Rule rule = iter.next();,if (iter != null ) Rule rule = iter.next();
RuleTableManager.java,final Tree ruleTree = ruleTreeViewer.getTree();,if (ruleTreeViewer != null ) final Tree ruleTree = ruleTreeViewer.getTree();
RuleTableManager.java,IStructuredSelection selection = (IStructuredSelection)event.getSelection();,if ((IStructuredSelection)event != null ) IStructuredSelection selection = (IStructuredSelection)event.getSelection();
RuleTableManager.java,boolean checked = item.getChecked();,if (item != null ) boolean checked = item.getChecked();
RuleTableManager.java,TreeItem[] items = item.getItems();,if (item != null ) TreeItem[] items = item.getItems();
RuleTableManager.java,TreeItem[] items = item.getItems();,if (item != null ) TreeItem[] items = item.getItems();
RuleTableManager.java,Object itemData = item.getData();,if (item != null ) Object itemData = item.getData();
RuleTableManager.java,Tree ruleTree = ruleTreeViewer.getTree();,if (ruleTreeViewer != null ) Tree ruleTree = ruleTreeViewer.getTree();
RuleTableManager.java,int eventCode = entry.getKey().intValue();,if (entry != null ) int eventCode = entry.getKey().intValue();
RuleTableManager.java,List<Listener> listeners = entry.getValue();,if (entry != null ) List<Listener> listeners = entry.getValue();
RuleTableManager.java,TreeColumn[] cols = ruleTreeViewer.getTree().getColumns();,if (ruleTreeViewer != null ) TreeColumn[] cols = ruleTreeViewer.getTree().getColumns();
RuleTableManager.java,IStructuredSelection selection = (IStructuredSelection)ruleTreeViewer.getSelection();,if ((IStructuredSelection)ruleTreeViewer != null ) IStructuredSelection selection = (IStructuredSelection)ruleTreeViewer.getSelection();
RuleTableManager.java,RuleLabelProvider provider = (RuleLabelProvider)ruleTreeViewer.getLabelProvider();,if ((RuleLabelProvider)ruleTreeViewer != null ) RuleLabelProvider provider = (RuleLabelProvider)ruleTreeViewer.getLabelProvider();
TextColumnDescriptor.java,"return value == null ? """" : value.toString();","if (value != null ) return value == null ? """" : value.toString();"
StringEditorFactory.java,String newValue = text.getText().trim();,if (text != null ) String newValue = text.getText().trim();
DescriptionPanelManager.java,String cleanValue = descriptionBox.getText().trim();,if (descriptionBox != null ) String cleanValue = descriptionBox.getText().trim();
DescriptionPanelManager.java,String newURL = externalURLField.getText().trim();,if (externalURLField != null ) String newURL = externalURLField.getText().trim();
DescriptionPanelManager.java,String newMessage = messageField.getText().trim();,if (messageField != null ) String newMessage = messageField.getText().trim();
DescriptionPanelManager.java,String urlUC = url.toUpperCase();,if (url != null ) String urlUC = url.toUpperCase();
FormArranger.java,List<String> unreferenced = new ArrayList<String>(refPositions.size());,if (ArrayList<String>(refPositions != null ) List<String> unreferenced = new ArrayList<String>(refPositions.size());
PerRulePropertyPanelManager.java,unreferencedVariables = formArranger.updateDeleteButtons();,if (formArranger != null ) unreferencedVariables = formArranger.updateDeleteButtons();
ViolationOutline.java,Integer[] widthArray = page.getColumnWidths();,if (page != null ) Integer[] widthArray = page.getColumnWidths();
ViolationOutline.java,Integer[] sorterProps = page.getSorterProperties();,if (page != null ) Integer[] sorterProps = page.getSorterProperties();
ViolationOutline.java,Integer[] widthArray = oldPage.getColumnWidths();,if (oldPage != null ) Integer[] widthArray = oldPage.getColumnWidths();
ViolationOutline.java,Integer[] sorterProps = oldPage.getSorterProperties();,if (oldPage != null ) Integer[] sorterProps = oldPage.getSorterProperties();
ResourceManager.java,Image image= PMDPlugin.getImageDescriptor(codePath).createImage();,if (PMDPlugin != null ) Image image= PMDPlugin.getImageDescriptor(codePath).createImage();
MatchAlgorithm.java,int start = mark.getBeginLine();,if (mark != null ) int start = mark.getBeginLine();
MatchAlgorithm.java,SourceCode sourceCode = source.get(mark.getTokenSrcID());,if (source != null ) SourceCode sourceCode = source.get(mark.getTokenSrcID());
MatchCollector.java,List<Match> matchList = new ArrayList<Match>(startMap.values());,if (ArrayList<Match>(startMap != null ) List<Match> matchList = new ArrayList<Match>(startMap.values());
MatchCollector.java,Match.MatchCode matchCode = new Match.MatchCode();,if (Match != null ) Match.MatchCode matchCode = new Match.MatchCode();
Scanner.java,tabSize = foo.intValue();,if (foo != null ) tabSize = foo.intValue();
PMDJEditPlugin.java,mode = ( CPDFileFilter ) fileTypeSelector.getSelectedItem();,if (fileTypeSelector != null ) mode = ( CPDFileFilter ) fileTypeSelector.getSelectedItem();
PMDJEditPlugin.java,Mode[] modes = jEdit.getModes();,if (jEdit != null ) Mode[] modes = jEdit.getModes();
SelectedRules.java,RuleNode rn = ( RuleNode ) ruleNode.getUserObject();,if (ruleNode != null ) RuleNode rn = ( RuleNode ) ruleNode.getUserObject();
SelectedRules.java,RuleNode rn = ( RuleNode ) ruleNode.getUserObject();,if (ruleNode != null ) RuleNode rn = ( RuleNode ) ruleNode.getUserObject();
SelectedRules.java,RuleNode rn = ( RuleNode ) ruleNode.getUserObject();,if (ruleNode != null ) RuleNode rn = ( RuleNode ) ruleNode.getUserObject();
ReviewCodeCmd.java,final RuleSet ruleSet = properties.getProjectRuleSet();,if (properties != null ) final RuleSet ruleSet = properties.getProjectRuleSet();
ReviewCodeCmd.java,this.ruleCount = ruleSet.getRules().size();,if (ruleSet != null ) this.ruleCount = ruleSet.getRules().size();
ReviewCodeCmd.java,final RuleSet ruleSet = properties.getProjectRuleSet();,if (properties != null ) final RuleSet ruleSet = properties.getProjectRuleSet();
CPDPreferencePage.java,this.preferences = PMDPlugin.getDefault().loadPreferences();,if (PMDPlugin != null ) this.preferences = PMDPlugin.getDefault().loadPreferences();
PMDPreferencePage.java,hiddenColumnNames = PreferenceUIStore.instance.hiddenColumnNames();,if (PreferenceUIStore != null ) hiddenColumnNames = PreferenceUIStore.instance.hiddenColumnNames();
PMDPreferencePage.java,Rule rule = ruleSelection.soleRule();,if (ruleSelection != null ) Rule rule = ruleSelection.soleRule();
PMDPreferencePage.java,IStructuredSelection selection = (IStructuredSelection)ruleTreeViewer.getSelection();,if ((IStructuredSelection)ruleTreeViewer != null ) IStructuredSelection selection = (IStructuredSelection)ruleTreeViewer.getSelection();
PMDPreferencePage.java,Rule rule = (Rule)selection.getFirstElement();,if ((Rule)selection != null ) Rule rule = (Rule)selection.getFirstElement();
PMDPreferencePage.java,int result = dialog.open();,if (dialog != null ) int result = dialog.open();
PMDRulesOptionPane.java,description = description.trim();,if (description != null ) description = description.trim();
PMDRulesOptionPane.java,description = description.trim();,if (description != null ) description = description.trim();
BaseVisitor.java,final IPreferences preferences = PMDPlugin.getDefault().loadPreferences();,if (PMDPlugin != null ) final IPreferences preferences = PMDPlugin.getDefault().loadPreferences();
BaseVisitor.java,review.ruleName = violation.getRule().getName();,if (violation != null ) review.ruleName = violation.getRule().getName();
BaseVisitor.java,Integer counter = violationsCounter.get(violation.getRule());,if (violationsCounter != null ) Integer counter = violationsCounter.get(violation.getRule());
DetectCutAndPasteCmd.java,final IPropertyListener listener = listenerIterator.next();,if (listenerIterator != null ) final IPropertyListener listener = listenerIterator.next();
ReviewCodeCmd.java,this.rulesCount = ruleSet.getRules().size();,if (ruleSet != null ) this.rulesCount = ruleSet.getRules().size();
ReviewCodeCmd.java,this.rulesCount = ruleSet.getRules().size();,if (ruleSet != null ) this.rulesCount = ruleSet.getRules().size();
CPDCheckProjectAction.java,final IWorkbenchPartSite site = targetPart.getSite();,if (targetPart != null ) final IWorkbenchPartSite site = targetPart.getSite();
CPDCheckProjectAction.java,final Iterator i = ss.iterator();,if (ss != null ) final Iterator i = ss.iterator();
CPDCheckProjectAction.java,final IWorkbenchPage workbenchPage = targetPart.getSite().getPage();,if (targetPart != null ) final IWorkbenchPage workbenchPage = targetPart.getSite().getPage();
ClearReviewsAction.java,Iterator<Object> i = structuredSelection.iterator();,if (structuredSelection != null ) Iterator<Object> i = structuredSelection.iterator();
ClearReviewsAction.java,String name = file.getName().toLowerCase();,if (file != null ) String name = file.getName().toLowerCase();
FileRecord.java,String trimmed = lines.nextToken().trim();,if (lines != null ) String trimmed = lines.nextToken().trim();
FileRecord.java,trimmed = lines.nextToken().trim();,if (lines != null ) trimmed = lines.nextToken().trim();
FileRecord.java,trimmed = lines.nextToken().trim();,if (lines != null ) trimmed = lines.nextToken().trim();
DataflowAnomalyTableLabelProvider.java,columnText = violation.getVariableName();,if (violation != null ) columnText = violation.getVariableName();
DataflowAnomalyTableLabelProvider.java,columnText = violation.getMethodName();,if (violation != null ) columnText = violation.getMethodName();
ViolationOutline.java,IWorkbenchPage page = getSite().getPage();,if (getSite() != null ) IWorkbenchPage page = getSite().getPage();
CalculateStatisticsAction.java,final PackageRecord record = (PackageRecord) item.getData();,if (item != null ) final PackageRecord record = (PackageRecord) item.getData();
PriorityFilterAction.java,ViewerFilter[] filters = view.getFilters();,if (view != null ) ViewerFilter[] filters = view.getFilters();
PriorityFilterAction.java,ViewerFilter[] filters = view.getViewer().getFilters();,if (view != null ) ViewerFilter[] filters = view.getViewer().getFilters();
RemoveViolationAction.java,IWorkspace workspace = ResourcesPlugin.getWorkspace();,if (ResourcesPlugin != null ) IWorkspace workspace = ResourcesPlugin.getWorkspace();
ReviewAction.java,Shell shell = Display.getCurrent().getActiveShell();,if (Display != null ) Shell shell = Display.getCurrent().getActiveShell();
CPDViewDoubleClickEventListener.java,final IPath path = Path.fromOSString(entry.getTokenSrcID());,if (Path != null ) final IPath path = Path.fromOSString(entry.getTokenSrcID());
CPDViewDoubleClickEventListener.java,final IWorkbenchPage page = this.view.getSite().getPage();,if (this != null ) final IWorkbenchPage page = this.view.getSite().getPage();
DataflowGraph.java,List<DataFlowNode> children = start.getChildren();,if (start != null ) List<DataFlowNode> children = start.getChildren();
DataflowGraphViewer.java,nextNodes += String.valueOf(n.getIndex());,if (String != null ) nextNodes += String.valueOf(n.getIndex());
DataflowGraphViewer.java,List<VariableAccess> access = inode.getVariableAccess();,if (inode != null ) List<VariableAccess> access = inode.getVariableAccess();
DataflowGraphViewer.java,"String codeLine = getCodeLine(resourceString, inode.getLine());","if (inode != null ) String codeLine = getCodeLine(resourceString, inode.getLine());"
DataflowView.java,IWorkbenchPage page = getSite().getPage();,if (getSite() != null ) IWorkbenchPage page = getSite().getPage();
DataflowViewPage.java,final String varName = violation.getVariableName();,if (violation != null ) final String varName = violation.getVariableName();
DataflowViewPage.java,final int beginLine = violation.getBeginLine();,if (violation != null ) final int beginLine = violation.getBeginLine();
DataflowViewPage.java,final int endLine = violation.getEndLine();,if (violation != null ) final int endLine = violation.getEndLine();
DataflowViewPage.java,final DataflowGraph graph = graphViewer.getGraph();,if (graphViewer != null ) final DataflowGraph graph = graphViewer.getGraph();
DataflowViewPage.java,final int index = methodSelection.getSelectionIndex();,if (methodSelection != null ) final int index = methodSelection.getSelectionIndex();
DataflowViewPage.java,final int index = methodSelection.getSelectionIndex();,if (methodSelection != null ) final int index = methodSelection.getSelectionIndex();
CPDCheckDialog.java,tileSize = minimumTileSizeText.getText();,if (minimumTileSizeText != null ) tileSize = minimumTileSizeText.getText();
RuleSetFactory.java,Rule rule = (Rule) c.newInstance();,if (c != null ) Rule rule = (Rule) c.newInstance();
RuleSetFactory.java,Language language = rule.getLanguage();,if (rule != null ) Language language = rule.getLanguage();
RuleSetFactory.java,final int nodeCount = node.getChildNodes().getLength();,if (node != null ) final int nodeCount = node.getChildNodes().getLength();
RuleSetWriter.java,DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();,if (DocumentBuilderFactory != null ) DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();
RuleSetWriter.java,DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();,if (documentBuilderFactory != null ) DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();
RuleSetWriter.java,this.document = documentBuilder.newDocument();,if (documentBuilder != null ) this.document = documentBuilder.newDocument();
RuleSetWriter.java,TransformerFactory transformerFactory = TransformerFactory.newInstance();,if (TransformerFactory != null ) TransformerFactory transformerFactory = TransformerFactory.newInstance();
RuleSetWriter.java,Transformer transformer = transformerFactory.newTransformer();,if (transformerFactory != null ) Transformer transformer = transformerFactory.newTransformer();
RuleSetWriter.java,Element descriptionElement = createDescriptionElement(ruleSet.getDescription());,if (createDescriptionElement(ruleSet != null ) Element descriptionElement = createDescriptionElement(ruleSet.getDescription());
RuleSetWriter.java,RuleSetReference ruleSetReference = ruleReference.getRuleSetReference();,if (ruleReference != null ) RuleSetReference ruleSetReference = ruleReference.getRuleSetReference();
RuleSetWriter.java,Language language = ruleReference.getOverriddenLanguage();,if (ruleReference != null ) Language language = ruleReference.getOverriddenLanguage();
RuleSetWriter.java,LanguageVersion minimumLanguageVersion = ruleReference.getOverriddenMinimumLanguageVersion();,if (ruleReference != null ) LanguageVersion minimumLanguageVersion = ruleReference.getOverriddenMinimumLanguageVersion();
RuleSetWriter.java,LanguageVersion maximumLanguageVersion = ruleReference.getOverriddenMaximumLanguageVersion();,if (ruleReference != null ) LanguageVersion maximumLanguageVersion = ruleReference.getOverriddenMaximumLanguageVersion();
RuleSetWriter.java,Boolean deprecated = ruleReference.isOverriddenDeprecated();,if (ruleReference != null ) Boolean deprecated = ruleReference.isOverriddenDeprecated();
RuleSetWriter.java,String name = ruleReference.getOverriddenName();,if (ruleReference != null ) String name = ruleReference.getOverriddenName();
RuleSetWriter.java,String message = ruleReference.getOverriddenMessage();,if (ruleReference != null ) String message = ruleReference.getOverriddenMessage();
RuleSetWriter.java,String externalInfoUrl = ruleReference.getOverriddenExternalInfoUrl();,if (ruleReference != null ) String externalInfoUrl = ruleReference.getOverriddenExternalInfoUrl();
RuleSetWriter.java,String description = ruleReference.getOverriddenDescription();,if (ruleReference != null ) String description = ruleReference.getOverriddenDescription();
RuleSetWriter.java,RulePriority priority = ruleReference.getOverriddenPriority();,if (ruleReference != null ) RulePriority priority = ruleReference.getOverriddenPriority();
RuleSetWriter.java,List<String> examples = ruleReference.getOverriddenExamples();,if (ruleReference != null ) List<String> examples = ruleReference.getOverriddenExamples();
RuleSetWriter.java,Object defaultValue = propertyDescriptor.defaultValue();,if (propertyDescriptor != null ) Object defaultValue = propertyDescriptor.defaultValue();
RuleSetWriter.java,"Element propertyElement = createPropertyValueElement(propertyDescriptor, propertyDescriptor.defaultValue());","if (propertyDescriptor != null ) Element propertyElement = createPropertyValueElement(propertyDescriptor, propertyDescriptor.defaultValue());"
PropertyDescriptorFactory.java,typeName = type.getSimpleName();,if (type != null ) typeName = type.getSimpleName();
RuleSetFactoryTest.java,SAXParserFactory saxParserFactory = SAXParserFactory.newInstance();,if (SAXParserFactory != null ) SAXParserFactory saxParserFactory = SAXParserFactory.newInstance();
RuleSetFactoryTest.java,SAXParser saxParser = saxParserFactory.newSAXParser();,if (saxParserFactory != null ) SAXParser saxParser = saxParserFactory.newSAXParser();
RuleSetFactoryTest.java,SAXParserFactory saxParserFactory = SAXParserFactory.newInstance();,if (SAXParserFactory != null ) SAXParserFactory saxParserFactory = SAXParserFactory.newInstance();
RuleSetFactoryTest.java,inputStream = new ByteArrayInputStream(file.getBytes());,if (ByteArrayInputStream(file != null ) inputStream = new ByteArrayInputStream(file.getBytes());
RuleSetFactoryTest.java,SAXParser saxParser = saxParserFactory.newSAXParser();,if (saxParserFactory != null ) SAXParser saxParser = saxParserFactory.newSAXParser();
PMDPlugin.java,final RuleSet ruleSet = iterator.next();,if (iterator != null ) final RuleSet ruleSet = iterator.next();
FormArranger.java,boolean isReferenced = varNames.contains(butt.getData());,if (varNames != null ) boolean isReferenced = varNames.contains(butt.getData());
RuleDialog.java,since = editedRule.getSince();,if (editedRule != null ) since = editedRule.getSince();
PMDPreferencePage.java,Tree ruleTree = ruleTreeViewer.getTree();,if (ruleTreeViewer != null ) Tree ruleTree = ruleTreeViewer.getTree();
PMDCustomRulesOptionPane.java,String paths = pathBuilder.getPath();,if (pathBuilder != null ) String paths = pathBuilder.getPath();
KappaLayout.java,Object key = keys.nextElement();,if (keys != null ) Object key = keys.nextElement();
KappaLayout.java,Object key = keys.nextElement();,if (keys != null ) Object key = keys.nextElement();
KappaLayout.java,Insets insets = parent.getInsets();,if (parent != null ) Insets insets = parent.getInsets();
KappaLayout.java,Insets insets = parent.getInsets();,if (parent != null ) Insets insets = parent.getInsets();
KappaLayout.java,Dimension d = strut.getSize();,if (strut != null ) Dimension d = strut.getSize();
KappaLayout.java,String c = constraint.toString();,if (constraint != null ) String c = constraint.toString();
KappaLayout.java,token = token.trim();,if (token != null ) token = token.trim();
KappaLayout.java,Enumeration en = tokens.elements();,if (tokens != null ) Enumeration en = tokens.elements();
KappaLayout.java,token = en.nextElement().toString();,if (en != null ) token = en.nextElement().toString();
KappaLayout.java,token = en.nextElement().toString();,if (en != null ) token = en.nextElement().toString();
KappaLayout.java,token = en.nextElement().toString();,if (en != null ) token = en.nextElement().toString();
KappaLayout.java,token = en.nextElement().toString();,if (en != null ) token = en.nextElement().toString();
KappaLayout.java,token = en.nextElement().toString();,if (en != null ) token = en.nextElement().toString();
KappaLayout.java,Dimension d = strut.getSize();,if (strut != null ) Dimension d = strut.getSize();
KappaLayout.java,Component c = ( Component ) en.nextElement();,if (en != null ) Component c = ( Component ) en.nextElement();
KappaLayout.java,int[] same = ( int[] ) en.nextElement();,if (en != null ) int[] same = ( int[] ) en.nextElement();
KappaLayout.java,int[] same = ( int[] ) en.nextElement();,if (en != null ) int[] same = ( int[] ) en.nextElement();
KappaLayout.java,Constraints q = ( Constraints ) en.nextElement();,if (en != null ) Constraints q = ( Constraints ) en.nextElement();
KappaLayout.java,en = rows.elements();,if (rows != null ) en = rows.elements();
KappaLayout.java,BitSet row = ( BitSet ) en.nextElement();,if (en != null ) BitSet row = ( BitSet ) en.nextElement();
KappaLayout.java,Constraints q = ( Constraints ) en.nextElement();,if (en != null ) Constraints q = ( Constraints ) en.nextElement();
KappaLayout.java,en = cols.elements();,if (cols != null ) en = cols.elements();
KappaLayout.java,BitSet col = ( BitSet ) en.nextElement();,if (en != null ) BitSet col = ( BitSet ) en.nextElement();
PMD.java,Parser parser = languageVersionHandler.getParser();,if (languageVersionHandler != null ) Parser parser = languageVersionHandler.getParser();
Designer.java,Parser parser = languageVersionHandler.getParser();,if (languageVersionHandler != null ) Parser parser = languageVersionHandler.getParser();
Designer.java,Parser parser = languageVersion.getLanguageVersionHandler().getParser();,if (languageVersion != null ) Parser parser = languageVersion.getLanguageVersionHandler().getParser();
CPDDuplicateCodeViewer.java,DefaultMutableTreeNode node = (DefaultMutableTreeNode)tree.getLastSelectedPathComponent();,if ((DefaultMutableTreeNode)tree != null ) DefaultMutableTreeNode node = (DefaultMutableTreeNode)tree.getLastSelectedPathComponent();
CPDDuplicateCodeViewer.java,"final Buffer buffer = jEdit.openFile(view,duplicate.getFilename());","if (jEdit != null ) final Buffer buffer = jEdit.openFile(view,duplicate.getFilename());"
CPDDuplicateCodeViewer.java,int end = buffer.getLineEndOffset(duplicate.getEndLine());,if (buffer != null ) int end = buffer.getLineEndOffset(duplicate.getEndLine());
PMDJEditPlugin.java,Iterator<File> iter = files.iterator();,if (files != null ) Iterator<File> iter = files.iterator();
PMDJEditPlugin.java,File file = iter.next();,if (iter != null ) File file = iter.next();
PMDJEditPlugin.java,tilesize = Integer.parseInt(txttilesize.getText());,if (Integer != null ) tilesize = Integer.parseInt(txttilesize.getText());
PMDJEditPlugin.java,int lastLine = mark.getBeginLine()+match.getLineCount();,if (mark != null ) int lastLine = mark.getBeginLine()+match.getLineCount();
IDEStorage.java,final String key = (String)i.next();,if ((String)i != null ) final String key = (String)i.next();
SettingsPanel.java,final ListModel model = rulesList.getModel();,if (rulesList != null ) final ListModel model = rulesList.getModel();
IDEStorage.java,final String key = (String)i.next();,if ((String)i != null ) final String key = (String)i.next();
SettingsPanel.java,final ListModel model = rulesList.getModel();,if (rulesList != null ) final ListModel model = rulesList.getModel();
Version.java,final BuildSystemConfiguration config = BuildSystemConfiguration.getInstance(context.getProject());,if (BuildSystemConfiguration != null ) final BuildSystemConfiguration config = BuildSystemConfiguration.getInstance(context.getProject());
AstWriterImpl.java,DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();,if (DocumentBuilderFactory != null ) DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
AstWriterImpl.java,DocumentBuilder documentBuilder = factory.newDocumentBuilder();,if (factory != null ) DocumentBuilder documentBuilder = factory.newDocumentBuilder();
AstWriterImpl.java,Document doc = documentBuilder.newDocument();,if (documentBuilder != null ) Document doc = documentBuilder.newDocument();
AstWriterImpl.java,Element simpleNodeElement = doc.createElement(simpleNode.toString());,if (doc != null ) Element simpleNodeElement = doc.createElement(simpleNode.toString());
AstWriterImpl.java,BeanInfo beanInfo = Introspector.getBeanInfo(simpleNode.getClass());,if (Introspector != null ) BeanInfo beanInfo = Introspector.getBeanInfo(simpleNode.getClass());
AstWriterImpl.java,PropertyDescriptor[] descriptors = beanInfo.getPropertyDescriptors();,if (beanInfo != null ) PropertyDescriptor[] descriptors = beanInfo.getPropertyDescriptors();
AstWriterImpl.java,String attributeName = descriptor.getName();,if (descriptor != null ) String attributeName = descriptor.getName();
AstWriterImpl.java,Method getter = descriptor.getReadMethod();,if (descriptor != null ) Method getter = descriptor.getReadMethod();
CPDDuplicateCodeViewer.java,DefaultMutableTreeNode node = (DefaultMutableTreeNode)tree.getLastSelectedPathComponent();,if ((DefaultMutableTreeNode)tree != null ) DefaultMutableTreeNode node = (DefaultMutableTreeNode)tree.getLastSelectedPathComponent();
CPDDuplicateCodeViewer.java,"final Buffer buffer = jEdit.openFile(view,duplicate.getFilename());","if (jEdit != null ) final Buffer buffer = jEdit.openFile(view,duplicate.getFilename());"
CPDDuplicateCodeViewer.java,int end = buffer.getLineEndOffset(duplicate.getEndLine());,if (buffer != null ) int end = buffer.getLineEndOffset(duplicate.getEndLine());
KappaLayout.java,Object key = keys.nextElement();,if (keys != null ) Object key = keys.nextElement();
KappaLayout.java,Object key = keys.nextElement();,if (keys != null ) Object key = keys.nextElement();
KappaLayout.java,Insets insets = parent.getInsets();,if (parent != null ) Insets insets = parent.getInsets();
KappaLayout.java,Insets insets = parent.getInsets();,if (parent != null ) Insets insets = parent.getInsets();
KappaLayout.java,Dimension d = strut.getSize();,if (strut != null ) Dimension d = strut.getSize();
KappaLayout.java,String c = constraint.toString();,if (constraint != null ) String c = constraint.toString();
KappaLayout.java,token = token.trim();,if (token != null ) token = token.trim();
KappaLayout.java,Enumeration en = tokens.elements();,if (tokens != null ) Enumeration en = tokens.elements();
KappaLayout.java,token = en.nextElement().toString();,if (en != null ) token = en.nextElement().toString();
KappaLayout.java,token = en.nextElement().toString();,if (en != null ) token = en.nextElement().toString();
KappaLayout.java,token = en.nextElement().toString();,if (en != null ) token = en.nextElement().toString();
KappaLayout.java,token = en.nextElement().toString();,if (en != null ) token = en.nextElement().toString();
KappaLayout.java,token = en.nextElement().toString();,if (en != null ) token = en.nextElement().toString();
KappaLayout.java,Dimension d = strut.getSize();,if (strut != null ) Dimension d = strut.getSize();
KappaLayout.java,Component c = ( Component ) en.nextElement();,if (en != null ) Component c = ( Component ) en.nextElement();
KappaLayout.java,int[] same = ( int[] ) en.nextElement();,if (en != null ) int[] same = ( int[] ) en.nextElement();
KappaLayout.java,int[] same = ( int[] ) en.nextElement();,if (en != null ) int[] same = ( int[] ) en.nextElement();
KappaLayout.java,Constraints q = ( Constraints ) en.nextElement();,if (en != null ) Constraints q = ( Constraints ) en.nextElement();
KappaLayout.java,en = rows.elements();,if (rows != null ) en = rows.elements();
KappaLayout.java,BitSet row = ( BitSet ) en.nextElement();,if (en != null ) BitSet row = ( BitSet ) en.nextElement();
KappaLayout.java,Constraints q = ( Constraints ) en.nextElement();,if (en != null ) Constraints q = ( Constraints ) en.nextElement();
KappaLayout.java,en = cols.elements();,if (cols != null ) en = cols.elements();
KappaLayout.java,BitSet col = ( BitSet ) en.nextElement();,if (en != null ) BitSet col = ( BitSet ) en.nextElement();
PMDJEditPlugin.java,selectedFile = chooser.getSelectedFile();,if (chooser != null ) selectedFile = chooser.getSelectedFile();
PMDJEditPlugin.java,String path = buffer.getPath();,if (buffer != null ) String path = buffer.getPath();
PMDJEditPlugin.java,VFS vfs = buffer.getVFS();,if (buffer != null ) VFS vfs = buffer.getVFS();
PMDJEditPlugin.java,Iterator<File> iter = files.iterator();,if (files != null ) Iterator<File> iter = files.iterator();
PMDJEditPlugin.java,File file = iter.next();,if (iter != null ) File file = iter.next();
PMDJEditPlugin.java,selectedFile = chooser.getSelectedFile();,if (chooser != null ) selectedFile = chooser.getSelectedFile();
PMDJEditPlugin.java,tilesize = Integer.parseInt(txttilesize.getText());,if (Integer != null ) tilesize = Integer.parseInt(txttilesize.getText());
PMDJEditPlugin.java,TokenEntry mark = occurrences.next();,if (occurrences != null ) TokenEntry mark = occurrences.next();
PMDJEditPlugin.java,int lastLine = mark.getBeginLine()+match.getLineCount();,if (mark != null ) int lastLine = mark.getBeginLine()+match.getLineCount();
PMDRulesOptionPane.java,DefaultMutableTreeNode node = ( DefaultMutableTreeNode ) path.getLastPathComponent();,if (path != null ) DefaultMutableTreeNode node = ( DefaultMutableTreeNode ) path.getLastPathComponent();
PMDRulesOptionPane.java,Object userObject = node.getUserObject();,if (node != null ) Object userObject = node.getUserObject();
PMDRulesOptionPane.java,description = description.trim();,if (description != null ) description = description.trim();
SelectedRules.java,RuleNode rn = ( RuleNode ) ruleNode.getUserObject();,if (ruleNode != null ) RuleNode rn = ( RuleNode ) ruleNode.getUserObject();
SelectedRules.java,RuleNode rn = ( RuleNode ) ruleNode.getUserObject();,if (ruleNode != null ) RuleNode rn = ( RuleNode ) ruleNode.getUserObject();
SelectedRules.java,RuleNode rn = ( RuleNode ) ruleNode.getUserObject();,if (ruleNode != null ) RuleNode rn = ( RuleNode ) ruleNode.getUserObject();
CheckboxTree.java,Object node = path.getLastPathComponent();,if (path != null ) Object node = path.getLastPathComponent();
CheckboxTree.java,String retVal = super.toString();,if (super != null ) String retVal = super.toString();
DefaultTreeCheckingModel.java,Object node = path.getLastPathComponent();,if (path != null ) Object node = path.getLastPathComponent();
DefaultTreeCheckingModel.java,Object node = path.getLastPathComponent();,if (path != null ) Object node = path.getLastPathComponent();
DefaultTreeCheckingModel.java,Object node = path.getLastPathComponent();,if (path != null ) Object node = path.getLastPathComponent();
DefaultTreeCheckingModel.java,Object[] listeners = this.listenerList.getListenerList();,if (this != null ) Object[] listeners = this.listenerList.getListenerList();
DefaultTreeCheckingModel.java,Object ancestorNode = ancestor.getLastPathComponent();,if (ancestor != null ) Object ancestorNode = ancestor.getLastPathComponent();
DefaultTreeCheckingModel.java,Object node = path.getLastPathComponent();,if (path != null ) Object node = path.getLastPathComponent();
DefaultTreeCheckingModel.java,Object node = path.getLastPathComponent();,if (path != null ) Object node = path.getLastPathComponent();
DefaultTreeCheckingModel.java,Object node = path.getLastPathComponent();,if (path != null ) Object node = path.getLastPathComponent();
DefaultTreeCheckingModel.java,Object node = path.getLastPathComponent();,if (path != null ) Object node = path.getLastPathComponent();
CPDDuplicateCodeViewer.java,DefaultMutableTreeNode node = (DefaultMutableTreeNode)tree.getLastSelectedPathComponent();,if ((DefaultMutableTreeNode)tree != null ) DefaultMutableTreeNode node = (DefaultMutableTreeNode)tree.getLastSelectedPathComponent();
CPDDuplicateCodeViewer.java,"final Buffer buffer = jEdit.openFile(view,duplicate.getFilename());","if (jEdit != null ) final Buffer buffer = jEdit.openFile(view,duplicate.getFilename());"
CPDDuplicateCodeViewer.java,int end = buffer.getLineEndOffset(duplicate.getEndLine());,if (buffer != null ) int end = buffer.getLineEndOffset(duplicate.getEndLine());
KappaLayout.java,Object key = keys.nextElement();,if (keys != null ) Object key = keys.nextElement();
KappaLayout.java,Object key = keys.nextElement();,if (keys != null ) Object key = keys.nextElement();
KappaLayout.java,Insets insets = parent.getInsets();,if (parent != null ) Insets insets = parent.getInsets();
KappaLayout.java,Insets insets = parent.getInsets();,if (parent != null ) Insets insets = parent.getInsets();
KappaLayout.java,Dimension d = strut.getSize();,if (strut != null ) Dimension d = strut.getSize();
KappaLayout.java,String c = constraint.toString();,if (constraint != null ) String c = constraint.toString();
KappaLayout.java,token = token.trim();,if (token != null ) token = token.trim();
KappaLayout.java,Enumeration en = tokens.elements();,if (tokens != null ) Enumeration en = tokens.elements();
KappaLayout.java,token = en.nextElement().toString();,if (en != null ) token = en.nextElement().toString();
KappaLayout.java,token = en.nextElement().toString();,if (en != null ) token = en.nextElement().toString();
KappaLayout.java,token = en.nextElement().toString();,if (en != null ) token = en.nextElement().toString();
KappaLayout.java,token = en.nextElement().toString();,if (en != null ) token = en.nextElement().toString();
KappaLayout.java,token = en.nextElement().toString();,if (en != null ) token = en.nextElement().toString();
KappaLayout.java,Dimension d = strut.getSize();,if (strut != null ) Dimension d = strut.getSize();
KappaLayout.java,Component c = ( Component ) en.nextElement();,if (en != null ) Component c = ( Component ) en.nextElement();
KappaLayout.java,int[] same = ( int[] ) en.nextElement();,if (en != null ) int[] same = ( int[] ) en.nextElement();
KappaLayout.java,int[] same = ( int[] ) en.nextElement();,if (en != null ) int[] same = ( int[] ) en.nextElement();
KappaLayout.java,Constraints q = ( Constraints ) en.nextElement();,if (en != null ) Constraints q = ( Constraints ) en.nextElement();
KappaLayout.java,en = rows.elements();,if (rows != null ) en = rows.elements();
KappaLayout.java,BitSet row = ( BitSet ) en.nextElement();,if (en != null ) BitSet row = ( BitSet ) en.nextElement();
KappaLayout.java,Constraints q = ( Constraints ) en.nextElement();,if (en != null ) Constraints q = ( Constraints ) en.nextElement();
KappaLayout.java,en = cols.elements();,if (cols != null ) en = cols.elements();
KappaLayout.java,BitSet col = ( BitSet ) en.nextElement();,if (en != null ) BitSet col = ( BitSet ) en.nextElement();
PMDJEditPlugin.java,selectedFile = chooser.getSelectedFile();,if (chooser != null ) selectedFile = chooser.getSelectedFile();
PMDJEditPlugin.java,String path = buffer.getPath();,if (buffer != null ) String path = buffer.getPath();
PMDJEditPlugin.java,VFS vfs = buffer.getVFS();,if (buffer != null ) VFS vfs = buffer.getVFS();
PMDJEditPlugin.java,Iterator<File> iter = files.iterator();,if (files != null ) Iterator<File> iter = files.iterator();
PMDJEditPlugin.java,File file = iter.next();,if (iter != null ) File file = iter.next();
PMDJEditPlugin.java,selectedFile = chooser.getSelectedFile();,if (chooser != null ) selectedFile = chooser.getSelectedFile();
PMDJEditPlugin.java,tilesize = Integer.parseInt(txttilesize.getText());,if (Integer != null ) tilesize = Integer.parseInt(txttilesize.getText());
PMDJEditPlugin.java,TokenEntry mark = occurrences.next();,if (occurrences != null ) TokenEntry mark = occurrences.next();
PMDJEditPlugin.java,int lastLine = mark.getBeginLine()+match.getLineCount();,if (mark != null ) int lastLine = mark.getBeginLine()+match.getLineCount();
PMDRulesOptionPane.java,DefaultMutableTreeNode node = ( DefaultMutableTreeNode ) path.getLastPathComponent();,if (path != null ) DefaultMutableTreeNode node = ( DefaultMutableTreeNode ) path.getLastPathComponent();
PMDRulesOptionPane.java,Object userObject = node.getUserObject();,if (node != null ) Object userObject = node.getUserObject();
PMDRulesOptionPane.java,description = description.trim();,if (description != null ) description = description.trim();
SelectedRules.java,RuleNode rn = ( RuleNode ) ruleNode.getUserObject();,if (ruleNode != null ) RuleNode rn = ( RuleNode ) ruleNode.getUserObject();
SelectedRules.java,RuleNode rn = ( RuleNode ) ruleNode.getUserObject();,if (ruleNode != null ) RuleNode rn = ( RuleNode ) ruleNode.getUserObject();
SelectedRules.java,RuleNode rn = ( RuleNode ) ruleNode.getUserObject();,if (ruleNode != null ) RuleNode rn = ( RuleNode ) ruleNode.getUserObject();
CheckboxTree.java,Object node = path.getLastPathComponent();,if (path != null ) Object node = path.getLastPathComponent();
CheckboxTree.java,String retVal = super.toString();,if (super != null ) String retVal = super.toString();
DefaultTreeCheckingModel.java,Object node = path.getLastPathComponent();,if (path != null ) Object node = path.getLastPathComponent();
DefaultTreeCheckingModel.java,Object node = path.getLastPathComponent();,if (path != null ) Object node = path.getLastPathComponent();
DefaultTreeCheckingModel.java,Object node = path.getLastPathComponent();,if (path != null ) Object node = path.getLastPathComponent();
DefaultTreeCheckingModel.java,Object[] listeners = this.listenerList.getListenerList();,if (this != null ) Object[] listeners = this.listenerList.getListenerList();
DefaultTreeCheckingModel.java,Object ancestorNode = ancestor.getLastPathComponent();,if (ancestor != null ) Object ancestorNode = ancestor.getLastPathComponent();
DefaultTreeCheckingModel.java,Object node = path.getLastPathComponent();,if (path != null ) Object node = path.getLastPathComponent();
DefaultTreeCheckingModel.java,Object node = path.getLastPathComponent();,if (path != null ) Object node = path.getLastPathComponent();
DefaultTreeCheckingModel.java,Object node = path.getLastPathComponent();,if (path != null ) Object node = path.getLastPathComponent();
DefaultTreeCheckingModel.java,Object node = path.getLastPathComponent();,if (path != null ) Object node = path.getLastPathComponent();
JavaRuleViolation.java,Scope scope = node.getScope();,if (node != null ) Scope scope = node.getScope();
ReportTree.java,node = this.iterNode.getParent();,if (this != null ) node = this.iterNode.getParent();
ReportTree.java,this.iterNode = this.iterNode.getFirstChild();,if (this != null ) this.iterNode = this.iterNode.getFirstChild();
ReportTree.java,String pack = violation.getPackageName();,if (violation != null ) String pack = violation.getPackageName();
ReportTree.java,String cl = violation.getClassName();,if (violation != null ) String cl = violation.getClassName();
StringUtil.java,last = index + oldString.length();,if (oldString != null ) last = index + oldString.length();
AvoidUsingHardCodedIPRule.java,String image = node.getImage();,if (node != null ) String image = node.getImage();
PMDOptionPane.java,DefaultMutableTreeNode node = ( DefaultMutableTreeNode ) path.getLastPathComponent();,if (path != null ) DefaultMutableTreeNode node = ( DefaultMutableTreeNode ) path.getLastPathComponent();
PMDOptionPane.java,Object userObject = node.getUserObject();,if (node != null ) Object userObject = node.getUserObject();
BooleanEditorFactory.java,boolean selected = butt.getSelection();,if (butt != null ) boolean selected = butt.getSelection();
IntegerEditorFactory.java,int newValue = spinner.getSelection();,if (spinner != null ) int newValue = spinner.getSelection();
MethodEditorFactory.java,Method newValue = picker.getMethod();,if (picker != null ) Method newValue = picker.getMethod();
StringEditorFactory.java,String newValue = text.getText().trim();,if (text != null ) String newValue = text.getText().trim();
FormArranger.java,int colsReqd = factory.columnsRequired();,if (factory != null ) int colsReqd = factory.columnsRequired();
FormArranger.java,int columns = factory.columnsRequired();,if (factory != null ) int columns = factory.columnsRequired();
PMDPreferencePage.java,RuleSet defaultRuleSet = plugin.getPreferencesManager().getRuleSet();,if (plugin != null ) RuleSet defaultRuleSet = plugin.getPreferencesManager().getRuleSet();
DescriptionPanelManager.java,String url = externalURLField.getText().trim();,if (externalURLField != null ) String url = externalURLField.getText().trim();
ExamplePanelManager.java,String cleanValue = exampleBox.getText().trim();,if (exampleBox != null ) String cleanValue = exampleBox.getText().trim();
ExclusionPanelManager.java,colourManager = new ColourManager(parent.getDisplay());,if (ColourManager(parent != null ) colourManager = new ColourManager(parent.getDisplay());
DescriptionPanelManager.java,String cleanValue = descriptionBox.getText().trim();,if (descriptionBox != null ) String cleanValue = descriptionBox.getText().trim();
DescriptionPanelManager.java,String existingValue = soleRule.getDescription();,if (soleRule != null ) String existingValue = soleRule.getDescription();
PMDPreferencePage.java,final Combo combo = viewer.getCombo();,if (viewer != null ) final Combo combo = viewer.getCombo();
PMDPreferencePage.java,int pos = combo.getSelectionIndex();,if (combo != null ) int pos = combo.getSelectionIndex();
AbstractMultiValueEditorFactory.java,String str = valueSet[i].trim();,if (valueSet[i] != null ) String str = valueSet[i].trim();
DoubleEditorFactory.java,String str = widget.getText();,if (widget != null ) String str = widget.getText();
DoubleEditorFactory.java,"text.setText(val == null ? """" : val.toString());","if (val != null ) text.setText(val == null ? """" : val.toString());"
TypeEditorFactory.java,String typeName = textWidget.getText().trim();,if (textWidget != null ) String typeName = textWidget.getText().trim();
TypeText.java,"text.setText(cls == null ? """" : cls.getName());","if (cls != null ) text.setText(cls == null ? """" : cls.getName());"
FloatEditorFactory.java,"text.setText(val == null ? """" : val.toString());","if (val != null ) text.setText(val == null ? """" : val.toString());"
FloatEditorFactory.java,String newValue = text.getText();,if (text != null ) String newValue = text.getText();
RuleLabelProvider.java,"return value == null ? """" : value.toString();","if (value != null ) return value == null ? """" : value.toString();"
DescriptionPanelManager.java,String existingValue = currentRule.getDescription();,if (currentRule != null ) String existingValue = currentRule.getDescription();
PMDPreferencePage.java,String name = rule.getRuleSetName();,if (rule != null ) String name = rule.getRuleSetName();
UselessOperationOnImmutableRule.java,String variableName = var.getImage();,if (var != null ) String variableName = var.getImage();
UselessOperationOnImmutableRule.java,Node sn = no.getLocation();,if (no != null ) Node sn = no.getLocation();
UselessOperationOnImmutableRule.java,Node primaryExpression = sn.jjtGetParent().jjtGetParent();,if (sn != null ) Node primaryExpression = sn.jjtGetParent().jjtGetParent();
UselessOperationOnImmutableRule.java,ASTType nodeType = node.getTypeNode();,if (node != null ) ASTType nodeType = node.getTypeNode();
UselessOperationOnImmutableRule.java,ASTType type = node.getTypeNode();,if (node != null ) ASTType type = node.getTypeNode();
UselessOverridingMethodRule.java,ASTResultType type = node.getResultType();,if (node != null ) ASTResultType type = node.getResultType();
UselessOverridingMethodRule.java,ASTBlock block = node.getBlock();,if (node != null ) ASTBlock block = node.getBlock();
PreferencesManagerImpl.java,FileInputStream in = new FileInputStream(ruleSetLocation.toOSString());,if (FileInputStream(ruleSetLocation != null ) FileInputStream in = new FileInputStream(ruleSetLocation.toOSString());
RuleTst.java,String rules = new SimpleRuleSetNameMapper(ruleSet).getRuleSets();,if (SimpleRuleSetNameMapper(ruleSet) != null ) String rules = new SimpleRuleSetNameMapper(ruleSet).getRuleSets();
RuleSetFactory.java,RuleSet ruleSet = createRuleSet(st.nextToken().trim());,if (createRuleSet(st != null ) RuleSet ruleSet = createRuleSet(st.nextToken().trim());
RuleSetFactory.java,RuleSet externalRuleSet = ruleSetFactory.createRuleSet(externalRuleID.getFilename());,if (ruleSetFactory != null ) RuleSet externalRuleSet = ruleSetFactory.createRuleSet(externalRuleID.getFilename());
RuleSetFactory.java,Rule externalRule = externalRuleSet.getRuleByName(externalRuleID.getRuleName());,if (externalRuleSet != null ) Rule externalRule = externalRuleSet.getRuleByName(externalRuleID.getRuleName());
PMDPreferencePage.java,Object item = selection.getFirstElement();,if (selection != null ) Object item = selection.getFirstElement();
PMDPreferencePage.java,Tree ruleTree = ruleTreeViewer.getTree();,if (ruleTreeViewer != null ) Tree ruleTree = ruleTreeViewer.getTree();
PMDPreferencePage.java,IStructuredSelection selection = (IStructuredSelection)ruleTreeViewer.getSelection();,if ((IStructuredSelection)ruleTreeViewer != null ) IStructuredSelection selection = (IStructuredSelection)ruleTreeViewer.getSelection();
PMDPreferencePage.java,Rule selectedRule = (Rule)selection.getFirstElement();,if ((Rule)selection != null ) Rule selectedRule = (Rule)selection.getFirstElement();
UseSingletonRule.java,ASTResultType res = decl.getResultType();,if (decl != null ) ASTResultType res = decl.getResultType();
PackageRecord.java,final ICompilationUnit unit = this.packageFragment.getCompilationUnit(resource.getName());,if (this != null ) final ICompilationUnit unit = this.packageFragment.getCompilationUnit(resource.getName());
RuleLabelProvider.java,result = rule.getName();,if (rule != null ) result = rule.getName();
PMDPreferencePage.java,Object item = selection.getFirstElement();,if (selection != null ) Object item = selection.getFirstElement();
PMDPreferencePage.java,Rule rule = (Rule)iter.next();,if ((Rule)iter != null ) Rule rule = (Rule)iter.next();
RulePropertiesContentProvider.java,Enumeration<String> keys = rule.getProperties().keys();,if (rule != null ) Enumeration<String> keys = rule.getProperties().keys();
StringEditorFactory.java,String newValue = text.getText().trim();,if (text != null ) String newValue = text.getText().trim();
Util.java,"return original == null ? """" : original.trim();","if (original != null ) return original == null ? """" : original.trim();"
Util.java,final Display display = tree.getDisplay();,if (tree != null ) final Display display = tree.getDisplay();
Util.java,Rectangle area = tree.getClientArea();,if (tree != null ) Rectangle area = tree.getClientArea();
Util.java,int columnCount = tree.getColumnCount();,if (tree != null ) int columnCount = tree.getColumnCount();
Util.java,Rectangle rect = event.getBounds();,if (event != null ) Rectangle rect = event.getBounds();
Util.java,Color foreground = gc.getForeground();,if (gc != null ) Color foreground = gc.getForeground();
Util.java,Color background = gc.getBackground();,if (gc != null ) Color background = gc.getBackground();
Util.java,final Display display = tree.getDisplay();,if (tree != null ) final Display display = tree.getDisplay();
Util.java,Rectangle area = tree.getClientArea();,if (tree != null ) Rectangle area = tree.getClientArea();
Util.java,String text = getter.valueFor(rule).toString();,if (getter != null ) String text = getter.valueFor(rule).toString();
Util.java,int columnCount = tree.getColumnCount();,if (tree != null ) int columnCount = tree.getColumnCount();
Util.java,Rectangle rect = event.getBounds();,if (event != null ) Rectangle rect = event.getBounds();
ViolationOverview.java,markers = record.findMarkers();,if (record != null ) markers = record.findMarkers();
ViolationOverviewContentProvider.java,children = record.getChildren();,if (record != null ) children = record.getChildren();
ViolationOverviewContentProvider.java,children = packages.toArray();,if (packages != null ) children = packages.toArray();
ViolationOverviewContentProvider.java,children = files.toArray();,if (files != null ) children = files.toArray();
PMDPreferencePage.java,int result = input.open();,if (input != null ) int result = input.open();
PMDPreferencePage.java,IStructuredSelection selection = (IStructuredSelection)ruleTableViewer.getSelection();,if ((IStructuredSelection)ruleTableViewer != null ) IStructuredSelection selection = (IStructuredSelection)ruleTableViewer.getSelection();
PMDPreferencePage.java,Rule selectedRule = (Rule)selection.getFirstElement();,if ((Rule)selection != null ) Rule selectedRule = (Rule)selection.getFirstElement();
RulePropertiesContentProvider.java,result = propertyList.toArray();,if (propertyList != null ) result = propertyList.toArray();
RuleSetContentProvider.java,elements = ruleSet.getRules().toArray();,if (ruleSet != null ) elements = ruleSet.getRules().toArray();
FileStorage.java,String key = (String)i.next();,if ((String)i != null ) String key = (String)i.next();
IDEStorage.java,String key = (String)i.next();,if ((String)i != null ) String key = (String)i.next();
Plugin.java,TokenEntry mark = (TokenEntry)i.next();,if ((TokenEntry)i != null ) TokenEntry mark = (TokenEntry)i.next();
Plugin.java,Project project = (Project)context.getElement();,if ((Project)context != null ) Project project = (Project)context.getElement();
Plugin.java,Project project = (Project)context.getElement();,if ((Project)context != null ) Project project = (Project)context.getElement();
Plugin.java,LogPage page = LogManager.getLogManager().getMsgPage();,if (LogManager != null ) LogPage page = LogManager.getLogManager().getMsgPage();
Plugin.java,Element doc = contextMenu.getContext().getElement();,if (contextMenu != null ) Element doc = contextMenu.getContext().getElement();
Plugin.java,LogPage page = LogManager.getLogManager().getMsgPage();,if (LogManager != null ) LogPage page = LogManager.getLogManager().getMsgPage();
Plugin.java,RuleViolation rv = (RuleViolation)i.next();,if ((RuleViolation)i != null ) RuleViolation rv = (RuleViolation)i.next();
SelectedRules.java,RuleSet rs = (RuleSet)i.next();,if ((RuleSet)i != null ) RuleSet rs = (RuleSet)i.next();
SelectedRules.java,Rule rule = (Rule)j.next();,if ((Rule)j != null ) Rule rule = (Rule)j.next();
SelectedRules.java,Rule rule = (Rule)i.next();,if ((Rule)i != null ) Rule rule = (Rule)i.next();
SelectedRules.java,Rule rule = (Rule)i.next();,if ((Rule)i != null ) Rule rule = (Rule)i.next();
SelectedRules.java,Rule rule = (Rule)i.next();,if ((Rule)i != null ) Rule rule = (Rule)i.next();
SettingsPanel.java,String selected = fdlg.getDirectory() + fdlg.getFile();,if (fdlg != null ) String selected = fdlg.getDirectory() + fdlg.getFile();
SettingsPanel.java,int index = locationToIndex(e.getPoint());,if (locationToIndex(e != null ) int index = locationToIndex(e.getPoint());
SettingsPanel.java,int index = locationToIndex(e.getPoint());,if (locationToIndex(e != null ) int index = locationToIndex(e.getPoint());
SettingsPanel.java,List examples = rules.getRule(box).getExamples();,if (rules != null ) List examples = rules.getRule(box).getExamples();
SettingsPanel.java,JList rulesList = new CheckboxList(rules.getAllBoxes());,if (CheckboxList(rules != null ) JList rulesList = new CheckboxList(rules.getAllBoxes());
Version.java,BuildSystemConfiguration config = BuildSystemConfiguration.getInstance(context.getProject());,if (BuildSystemConfiguration != null ) BuildSystemConfiguration config = BuildSystemConfiguration.getInstance(context.getProject());
Version.java,String source = config.getSource();,if (config != null ) String source = config.getSource();
Plugin.java,final TokenEntry mark = (TokenEntry)i.next();,if ((TokenEntry)i != null ) final TokenEntry mark = (TokenEntry)i.next();
Plugin.java,final Project project = (Project)context.getElement();,if ((Project)context != null ) final Project project = (Project)context.getElement();
Plugin.java,final Project project = (Project)context.getElement();,if ((Project)context != null ) final Project project = (Project)context.getElement();
Plugin.java,final LogPage page = LogManager.getLogManager().getMsgPage();,if (LogManager != null ) final LogPage page = LogManager.getLogManager().getMsgPage();
Plugin.java,View view = contextMenu.getContext().getView();,if (contextMenu != null ) View view = contextMenu.getContext().getView();
RuleSetWriter.java,DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();,if (DocumentBuilderFactory != null ) DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();
RuleSetWriter.java,DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();,if (documentBuilderFactory != null ) DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();
RuleSetWriter.java,this.document = documentBuilder.newDocument();,if (documentBuilder != null ) this.document = documentBuilder.newDocument();
RuleSetWriter.java,TransformerFactory transformerFactory = TransformerFactory.newInstance();,if (TransformerFactory != null ) TransformerFactory transformerFactory = TransformerFactory.newInstance();
RuleSetWriter.java,Transformer transformer = transformerFactory.newTransformer();,if (transformerFactory != null ) Transformer transformer = transformerFactory.newTransformer();
RuleSetWriter.java,Element descriptionElement = createDescriptionElement(ruleSet.getDescription());,if (createDescriptionElement(ruleSet != null ) Element descriptionElement = createDescriptionElement(ruleSet.getDescription());
RuleSetWriter.java,RuleSetReference ruleSetReference = ruleReference.getRuleSetReference();,if (ruleReference != null ) RuleSetReference ruleSetReference = ruleReference.getRuleSetReference();
RuleSetWriter.java,String name = ruleReference.getOverriddenName();,if (ruleReference != null ) String name = ruleReference.getOverriddenName();
RuleSetWriter.java,String message = ruleReference.getOverriddenMessage();,if (ruleReference != null ) String message = ruleReference.getOverriddenMessage();
RuleSetWriter.java,String externalInfoUrl = ruleReference.getOverriddenExternalInfoUrl();,if (ruleReference != null ) String externalInfoUrl = ruleReference.getOverriddenExternalInfoUrl();
RuleSetWriter.java,String description = ruleReference.getOverriddenDescription();,if (ruleReference != null ) String description = ruleReference.getOverriddenDescription();
RuleSetWriter.java,Integer priority = ruleReference.getOverriddenPriority();,if (ruleReference != null ) Integer priority = ruleReference.getOverriddenPriority();
RuleSetWriter.java,Properties properties = ruleReference.getOverriddenProperties();,if (ruleReference != null ) Properties properties = ruleReference.getOverriddenProperties();
RuleSetWriter.java,List<String> examples = ruleReference.getOverriddenExamples();,if (ruleReference != null ) List<String> examples = ruleReference.getOverriddenExamples();
PreferencesManagerImpl.java,private IPreferenceStore storePreferencesStore = PMDPlugin.getDefault().getPreferenceStore();,if (PMDPlugin != null ) private IPreferenceStore storePreferencesStore = PMDPlugin.getDefault().getPreferenceStore();
PMD.java,InputStream stream = new BufferedInputStream(dataSource.getInputStream());,if (BufferedInputStream(dataSource != null ) InputStream stream = new BufferedInputStream(dataSource.getInputStream());
DynamicRuleTest.java,String strRule = st.nextToken();,if (st != null ) String strRule = st.nextToken();
DynamicRuleTest.java,RuleSet ruleSet = iter.next();,if (iter != null ) RuleSet ruleSet = iter.next();
SimpleRuleSetNameMapper.java,String tok = st.nextToken();,if (st != null ) String tok = st.nextToken();
EclipseUtils.java,Properties p = rule.getProperties();,if (rule != null ) Properties p = rule.getProperties();
BaseVisitor.java,final int maxViolationsPerFilePerRule = preferences.getMaxViolationsPerFilePerRule();,if (preferences != null ) final int maxViolationsPerFilePerRule = preferences.getMaxViolationsPerFilePerRule();
CommandLineOptionsTest.java,Renderer renderer = opt.createRenderer();,if (opt != null ) Renderer renderer = opt.createRenderer();
CommandLineOptionsTest.java,renderer = opt.createRenderer();,if (opt != null ) renderer = opt.createRenderer();
CommandLineOptionsTest.java,renderer = opt.createRenderer();,if (opt != null ) renderer = opt.createRenderer();
CommandLineOptionsTest.java,renderer = opt.createRenderer();,if (opt != null ) renderer = opt.createRenderer();
CommandLineOptionsTest.java,renderer = opt.createRenderer();,if (opt != null ) renderer = opt.createRenderer();
CommandLineOptionsTest.java,renderer = opt.createRenderer();,if (opt != null ) renderer = opt.createRenderer();
CommandLineOptionsTest.java,renderer = opt.createRenderer();,if (opt != null ) renderer = opt.createRenderer();
CommandLineOptionsTest.java,renderer = opt.createRenderer();,if (opt != null ) renderer = opt.createRenderer();
CommandLineOptionsTest.java,renderer = opt.createRenderer();,if (opt != null ) renderer = opt.createRenderer();
CommandLineOptionsTest.java,renderer = opt.createRenderer();,if (opt != null ) renderer = opt.createRenderer();
CommandLineOptionsTest.java,renderer = opt.createRenderer();,if (opt != null ) renderer = opt.createRenderer();
CommandLineOptionsTest.java,renderer = opt.createRenderer();,if (opt != null ) renderer = opt.createRenderer();
CommandLineOptionsTest.java,renderer = opt.createRenderer();,if (opt != null ) renderer = opt.createRenderer();
CommandLineOptions.java,private int cpus = Runtime.getRuntime().availableProcessors(); //DONE,if (//DONE != null ) private int cpus = Runtime.getRuntime().availableProcessors(); //DONE
CommandLineOptions.java,language = Language.getDefaultLanguage();,if (Language != null ) language = Language.getDefaultLanguage();
CommandLineOptions.java,version = LanguageVersion.getDefaultVersion();,if (LanguageVersion != null ) version = LanguageVersion.getDefaultVersion();
CommandLineOptions.java,List<LanguageVersion> versions = LanguageVersion.findVersionsForLanguageTerseName(language.getTerseName());,if (LanguageVersion != null ) List<LanguageVersion> versions = LanguageVersion.findVersionsForLanguageTerseName(language.getTerseName());
Configuration.java,ClassLoader classLoader = Configuration.class.getClassLoader();,if (Configuration != null ) ClassLoader classLoader = Configuration.class.getClassLoader();
PMD.java,ClassLoader classLoader = PMD.class.getClassLoader();,if (PMD != null ) ClassLoader classLoader = PMD.class.getClassLoader();
PMD.java,long startFiles = System.nanoTime();,if (System != null ) long startFiles = System.nanoTime();
PMD.java,Language language = opts.getLanguage();,if (opts != null ) Language language = opts.getLanguage();
PMD.java,LanguageVersion languageVersion = opts.getVersion();,if (opts != null ) LanguageVersion languageVersion = opts.getVersion();
PMD.java,language = Language.getDefaultLanguage();,if (Language != null ) language = Language.getDefaultLanguage();
PMD.java,languageVersion = language.getDefaultVersion();,if (language != null ) languageVersion = language.getDefaultVersion();
PMD.java,LanguageFilenameFilter fileSelector = new LanguageFilenameFilter(opts.getLanguage());,if (LanguageFilenameFilter(opts != null ) LanguageFilenameFilter fileSelector = new LanguageFilenameFilter(opts.getLanguage());
PMD.java,classLoader = createClasspathClassLoader(opts.getAuxClasspath());,if (createClasspathClassLoader(opts != null ) classLoader = createClasspathClassLoader(opts.getAuxClasspath());
PMD.java,renderer = opts.createRenderer();,if (opts != null ) renderer = opts.createRenderer();
PMD.java,long startLoadRules = System.nanoTime();,if (System != null ) long startLoadRules = System.nanoTime();
PMD.java,RuleSets rulesets = ruleSetFactory.createRuleSets(opts.getRulesets());,if (ruleSetFactory != null ) RuleSets rulesets = ruleSetFactory.createRuleSets(opts.getRulesets());
PMD.java,long endLoadRules = System.nanoTime();,if (System != null ) long endLoadRules = System.nanoTime();
PMDTask.java,private int cpus = Runtime.getRuntime().availableProcessors();,if (Runtime != null ) private int cpus = Runtime.getRuntime().availableProcessors();
PMDTask.java,ruleSetFiles = new AntTaskNameMapper(ruleSetFiles).getRuleSets();,if (AntTaskNameMapper(ruleSetFiles) != null ) ruleSetFiles = new AntTaskNameMapper(ruleSetFiles).getRuleSets();
PMDTask.java,classLoader = getClass().getClassLoader();,if (getClass() != null ) classLoader = getClass().getClassLoader();
PMDTask.java,languageVersion = language.getDefaultVersion();,if (language != null ) languageVersion = language.getDefaultVersion();
PMDTask.java,final String inputPath = ds.getBasedir().getPath();,if (ds != null ) final String inputPath = ds.getBasedir().getPath();
PMDTask.java,ruleSetFiles = new AntTaskNameMapper(ruleSetFiles).getRuleSets();,if (AntTaskNameMapper(ruleSetFiles) != null ) ruleSetFiles = new AntTaskNameMapper(ruleSetFiles).getRuleSets();
PMDTask.java,classLoader = getClass().getClassLoader();,if (getClass() != null ) classLoader = getClass().getClassLoader();
PMDTask.java,languageVersion = language.getDefaultVersion();,if (language != null ) languageVersion = language.getDefaultVersion();
PMDTask.java,String[] srcFiles = ds.getIncludedFiles();,if (ds != null ) String[] srcFiles = ds.getIncludedFiles();
PMDTask.java,final String inputPath = ds.getBasedir().getPath();,if (ds != null ) final String inputPath = ds.getBasedir().getPath();
PMDTask.java,int problemCount = reportSize.get();,if (reportSize != null ) int problemCount = reportSize.get();
PMDTask.java,RuleSet[] ruleSets = rules.getAllRuleSets();,if (rules != null ) RuleSet[] ruleSets = rules.getAllRuleSets();
PMDTask.java,RuleSetWrapper rs = it.next();,if (it != null ) RuleSetWrapper rs = it.next();
BasicPMDTest.java,Iterator iter = context.getReport().iterator();,if (context != null ) Iterator iter = context.getReport().iterator();
BasicPMDTest.java,RuleViolation violation = (RuleViolation) iter.next();,if (iter != null ) RuleViolation violation = (RuleViolation) iter.next();
BasicPMDTest.java,Iterator iter = context.getReport().iterator();,if (context != null ) Iterator iter = context.getReport().iterator();
BasicPMDTest.java,RuleViolation violation = (RuleViolation) iter.next();,if (iter != null ) RuleViolation violation = (RuleViolation) iter.next();
BasicPMDTest.java,Iterator iter = context.getReport().iterator();,if (context != null ) Iterator iter = context.getReport().iterator();
BasicPMDTest.java,RuleViolation violation = (RuleViolation) iter.next();,if (iter != null ) RuleViolation violation = (RuleViolation) iter.next();
UpdateProjectPropertiesCmdTest.java,Iterator i = newRuleSet.getRules().iterator();,if (newRuleSet != null ) Iterator i = newRuleSet.getRules().iterator();
UpdateProjectPropertiesCmdTest.java,Rule removedRule = (Rule) i.next();,if (i != null ) Rule removedRule = (Rule) i.next();
EclipseUtils.java,Rule rule = (Rule) i.next();,if (i != null ) Rule rule = (Rule) i.next();
EclipseUtils.java,Rule rule = (Rule) i.next();,if (i != null ) Rule rule = (Rule) i.next();
EclipseUtils.java,Rule r = (Rule) i.next();,if (i != null ) Rule r = (Rule) i.next();
EclipseUtils.java,String key = (String) i.next();,if (i != null ) String key = (String) i.next();
PMDCorePluginTest.java,Iterator i = set.iterator();,if (set != null ) Iterator i = set.iterator();
PMDCorePluginTest.java,RuleSet registeredRuleSet = (RuleSet) i.next();,if (i != null ) RuleSet registeredRuleSet = (RuleSet) i.next();
RuleSetsExtensionProcessorTest.java,Iterator i = set.iterator();,if (set != null ) Iterator i = set.iterator();
RuleSetsExtensionProcessorTest.java,RuleSet registeredRuleSet = (RuleSet) i.next();,if (i != null ) RuleSet registeredRuleSet = (RuleSet) i.next();
RuleSetsManagerImplTest.java,Collection pmdRules = ruleSet.getPmdRuleSet().getRules();,if (ruleSet != null ) Collection pmdRules = ruleSet.getPmdRuleSet().getRules();
RuleSetsManagerImplTest.java,Rule rule = (Rule) i.next();,if (i != null ) Rule rule = (Rule) i.next();
TestManager.java,rules[j] = (Rule) i.next();,if (i != null ) rules[j] = (Rule) i.next();
ReviewCmdTest.java,Map markers = cmd.getMarkers();,if (cmd != null ) Map markers = cmd.getMarkers();
ProjectPropertiesModelTest.java,Iterator i = newRuleSet.getRules().iterator();,if (newRuleSet != null ) Iterator i = newRuleSet.getRules().iterator();
ProjectPropertiesModelTest.java,Rule removedRule = (Rule) i.next();,if (i != null ) Rule removedRule = (Rule) i.next();
ProjectPropertiesModelTest.java,Iterator i = ruleSet.getRules().iterator();,if (ruleSet != null ) Iterator i = ruleSet.getRules().iterator();
ProjectPropertiesModelTest.java,Rule rule = (Rule) i.next();,if (i != null ) Rule rule = (Rule) i.next();
Properties.java,final Property p = (Property) i.next();,if (i != null ) final Property p = (Property) i.next();
DefaultCommandProcessorStrategy.java,final Enumeration e = bundle.getKeys();,if (bundle != null ) final Enumeration e = bundle.getKeys();
DefaultCommandProcessorStrategy.java,final String key = (String) e.nextElement();,if (e != null ) final String key = (String) e.nextElement();
RuleSets.java,final RuleSet ruleSet = (RuleSet) i.next();,if (i != null ) final RuleSet ruleSet = (RuleSet) i.next();
BaseVisitor.java,final Iterator iter = context.getReport().iterator();,if (context != null ) final Iterator iter = context.getReport().iterator();
BaseVisitor.java,final RuleViolation violation = (RuleViolation) iter.next();,if (iter != null ) final RuleViolation violation = (RuleViolation) iter.next();
BaseVisitor.java,review.ruleName = (String) pendingReviews.pop();,if (pendingReviews != null ) review.ruleName = (String) pendingReviews.pop();
DetectCutAndPasteCmd.java,final Iterator listenerIterator = listenerList.iterator();,if (listenerList != null ) final Iterator listenerIterator = listenerList.iterator();
DetectCutAndPasteCmd.java,final IPropertyListener listener = (IPropertyListener) listenerIterator.next();,if (listenerIterator != null ) final IPropertyListener listener = (IPropertyListener) listenerIterator.next();
DetectCutAndPasteCmd.java,final Iterator fileIterator = files.iterator();,if (files != null ) final Iterator fileIterator = files.iterator();
DetectCutAndPasteCmd.java,final File file = (File) fileIterator.next();,if (fileIterator != null ) final File file = (File) fileIterator.next();
JobCommandProcessor.java,final Iterator i = this.jobs.keySet().iterator();,if (this != null ) final Iterator i = this.jobs.keySet().iterator();
JobCommandProcessor.java,final AbstractProcessableCommand aCommand = (AbstractProcessableCommand) i.next();,if (i != null ) final AbstractProcessableCommand aCommand = (AbstractProcessableCommand) i.next();
RenderReportCmd.java,Iterator i = renderers.entrySet().iterator();,if (renderers != null ) Iterator i = renderers.entrySet().iterator();
RenderReportCmd.java,Map.Entry entry = (Map.Entry) i.next();,if (i != null ) Map.Entry entry = (Map.Entry) i.next();
RenderReportCmd.java,final String reportName = (String) entry.getKey();,if (entry != null ) final String reportName = (String) entry.getKey();
RenderReportCmd.java,final Renderer renderer = (Renderer) entry.getValue();,if (entry != null ) final Renderer renderer = (Renderer) entry.getValue();
ReviewCodeCmd.java,final Iterator i = this.resources.iterator();,if (this != null ) final Iterator i = this.resources.iterator();
ReviewCodeCmd.java,final Set filesSet = this.markers.keySet();,if (this != null ) final Set filesSet = this.markers.keySet();
ReviewCodeCmd.java,final Iterator i = filesSet.iterator();,if (filesSet != null ) final Iterator i = filesSet.iterator();
ReviewCodeCmd.java,final IFile file = (IFile) i.next();,if (i != null ) final IFile file = (IFile) i.next();
ReviewCodeCmd.java,final Iterator j = markerInfoSet.iterator();,if (markerInfoSet != null ) final Iterator j = markerInfoSet.iterator();
ReviewCodeCmd.java,final MarkerInfo markerInfo = (MarkerInfo) j.next();,if (j != null ) final MarkerInfo markerInfo = (MarkerInfo) j.next();
ReviewResourceForRuleCommand.java,final Iterator listenerIterator = listenerList.iterator();,if (listenerList != null ) final Iterator listenerIterator = listenerList.iterator();
ReviewResourceForRuleCommand.java,final IPropertyListener listener = (IPropertyListener) listenerIterator.next();,if (listenerIterator != null ) final IPropertyListener listener = (IPropertyListener) listenerIterator.next();
PreferencesManagerImpl.java,Iterator i = props.entrySet().iterator();,if (props != null ) Iterator i = props.entrySet().iterator();
PreferencesManagerImpl.java,Map.Entry entry = (Map.Entry)i.next();,if ((Map != null ) Map.Entry entry = (Map.Entry)i.next();
PreferencesManagerImpl.java,Iterator i = ruleSetManager.getDefaultRuleSets().iterator();,if (ruleSetManager != null ) Iterator i = ruleSetManager.getDefaultRuleSets().iterator();
PreferencesManagerImpl.java,RuleSet ruleSet = (RuleSet) i.next();,if (i != null ) RuleSet ruleSet = (RuleSet) i.next();
PreferencesManagerImpl.java,Collection newRules = newRuleSet.getRules();,if (newRuleSet != null ) Collection newRules = newRuleSet.getRules();
PreferencesManagerImpl.java,Iterator i = newRules.iterator();,if (newRules != null ) Iterator i = newRules.iterator();
PreferencesManagerImpl.java,Rule rule = (Rule) i.next();,if (i != null ) Rule rule = (Rule) i.next();
PreferencesManagerImpl.java,Iterator ruleIterator = newRules.iterator();,if (newRules != null ) Iterator ruleIterator = newRules.iterator();
PreferencesManagerImpl.java,Rule rule = (Rule) ruleIterator.next();,if (ruleIterator != null ) Rule rule = (Rule) ruleIterator.next();
ProjectPropertiesImpl.java,final ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray());,if (ByteArrayInputStream(baos != null ) final ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray());
ProjectPropertiesImpl.java,final Rule rule = (Rule) i.next();,if (i != null ) final Rule rule = (Rule) i.next();
ProjectPropertiesManagerImpl.java,final Iterator i = ruleSet.getRules().iterator();,if (ruleSet != null ) final Iterator i = ruleSet.getRules().iterator();
ProjectPropertiesManagerImpl.java,final Rule rule = (Rule) i.next();,if (i != null ) final Rule rule = (Rule) i.next();
ProjectPropertiesManagerImpl.java,final Iterator i = projectRuleSet.getRules().iterator();,if (projectRuleSet != null ) final Iterator i = projectRuleSet.getRules().iterator();
ProjectPropertiesManagerImpl.java,final Rule projectRule = (Rule) i.next();,if (i != null ) final Rule projectRule = (Rule) i.next();
ProjectPropertiesManagerImpl.java,final Iterator k = projectRuleSet.getRules().iterator();,if (projectRuleSet != null ) final Iterator k = projectRuleSet.getRules().iterator();
ProjectPropertiesManagerImpl.java,final Rule projectRule = (Rule) k.next();,if (k != null ) final Rule projectRule = (Rule) k.next();
AstWriterImpl.java,String attributeName = descriptors[i].getName();,if (descriptors[i] != null ) String attributeName = descriptors[i].getName();
AstWriterImpl.java,Method getter = descriptors[i].getReadMethod();,if (descriptors[i] != null ) Method getter = descriptors[i].getReadMethod();
ClearReviewsAction.java,Iterator i = structuredSelection.iterator();,if (structuredSelection != null ) Iterator i = structuredSelection.iterator();
ClearReviewsAction.java,Object object = (Object) i.next();,if (i != null ) Object object = (Object) i.next();
FileRecord.java,final List markers = Arrays.asList(this.findMarkers());,if (Arrays != null ) final List markers = Arrays.asList(this.findMarkers());
FileRecord.java,final Iterator markerIterator = markers.iterator();,if (markers != null ) final Iterator markerIterator = markers.iterator();
FileRecord.java,final IMarker marker = (IMarker) markerIterator.next();,if (markerIterator != null ) final IMarker marker = (IMarker) markerIterator.next();
MarkerRecord.java,final Iterator markerIterator = markers.iterator();,if (markers != null ) final Iterator markerIterator = markers.iterator();
PackageRecord.java,final IResource javaResource = javaUnits[k].getCorrespondingResource();,if (javaUnits[k] != null ) final IResource javaResource = javaUnits[k].getCorrespondingResource();
PackageRecord.java,number += children[i].getLOC();,if (children[i] != null ) number += children[i].getLOC();
PackageRecord.java,number += children[i].getNumberOfMethods();,if (children[i] != null ) number += children[i].getNumberOfMethods();
ProjectRecord.java,number += children[i].getLOC();,if (children[i] != null ) number += children[i].getLOC();
ProjectRecord.java,number += children[i].getNumberOfMethods();,if (children[i] != null ) number += children[i].getNumberOfMethods();
RootRecord.java,number += children[i].getLOC();,if (children[i] != null ) number += children[i].getLOC();
RootRecord.java,number += children[i].getNumberOfMethods();,if (children[i] != null ) number += children[i].getNumberOfMethods();
PMDPreferencePage.java,Iterator iter = selectedRuleSet.getRules().iterator();,if (selectedRuleSet != null ) Iterator iter = selectedRuleSet.getRules().iterator();
PMDPreferencePage.java,Rule rule = (Rule)iter.next();,if ((Rule)iter != null ) Rule rule = (Rule)iter.next();
RuleDialog.java,Iterator i = this.editedRule.getExamples().iterator();,if (this != null ) Iterator i = this.editedRule.getExamples().iterator();
RuleDialog.java,Class ruleClass = Class.forName(implementationClassText.getText());,if (Class != null ) Class ruleClass = Class.forName(implementationClassText.getText());
RulePropertiesContentProvider.java,Enumeration keys = rule.getProperties().keys();,if (rule != null ) Enumeration keys = rule.getProperties().keys();
RuleSetExcludeIncludePatternContentProvider.java,result = patternList.toArray();,if (patternList != null ) result = patternList.toArray();
RuleSetSelectionDialog.java,Iterator i = sortedRuleSets.iterator();,if (sortedRuleSets != null ) Iterator i = sortedRuleSets.iterator();
RuleSetSelectionDialog.java,ruleSets[index] = (RuleSet) i.next();,if (i != null ) ruleSets[index] = (RuleSet) i.next();
PMDPropertyPage.java,final Collection activeRules = activeRuleSet.getRules();,if (activeRuleSet != null ) final Collection activeRules = activeRuleSet.getRules();
PMDPropertyPage.java,final Object rule = itemList[i].getData();,if (itemList[i] != null ) final Object rule = itemList[i].getData();
PMDPropertyPage.java,Collection rules = getProjectRuleSet().getRules();,if (getProjectRuleSet() != null ) Collection rules = getProjectRuleSet().getRules();
CPDView.java,final Match match = (Match) matches.next();,if (matches != null ) final Match match = (Match) matches.next();
CPDView.java,final Iterator entryIterator = match.getMarkSet().iterator();,if (match != null ) final Iterator entryIterator = match.getMarkSet().iterator();
CPDView.java,final TokenEntry entry = (TokenEntry) entryIterator.next();,if (entryIterator != null ) final TokenEntry entry = (TokenEntry) entryIterator.next();
CPDView.java,final boolean hasResults = iter.hasNext();,if (iter != null ) final boolean hasResults = iter.hasNext();
DataflowAnomalyTableContentProvider.java,final DaaRuleViolation violation = (DaaRuleViolation) violationsIterator.next();,if (violationsIterator != null ) final DaaRuleViolation violation = (DaaRuleViolation) violationsIterator.next();
DataflowAnomalyTableContentProvider.java,final Iterator violationIterator = list.iterator();,if (list != null ) final Iterator violationIterator = list.iterator();
DataflowAnomalyTableContentProvider.java,final DaaRuleViolation violation = (DaaRuleViolation) violationIterator.next();,if (violationIterator != null ) final DaaRuleViolation violation = (DaaRuleViolation) violationIterator.next();
DataflowGraph.java,List vars = node.getVariableAccess();,if (node != null ) List vars = node.getVariableAccess();
DataflowGraph.java,Iterator nodeIterator = nodes.iterator();,if (nodes != null ) Iterator nodeIterator = nodes.iterator();
DataflowGraph.java,NodeCanvas node = (NodeCanvas)nodeIterator.next();,if ((NodeCanvas)nodeIterator != null ) NodeCanvas node = (NodeCanvas)nodeIterator.next();
DataflowGraph.java,List flow = node.getDataFlowNode().getFlow();,if (node != null ) List flow = node.getDataFlowNode().getFlow();
DataflowGraph.java,List children = inode.getChildren();,if (inode != null ) List children = inode.getChildren();
DataflowGraph.java,List children = start.getChildren();,if (start != null ) List children = start.getChildren();
DataflowGraphViewer.java,List flow = node.getDataFlowNode().getFlow();,if (node != null ) List flow = node.getDataFlowNode().getFlow();
DataflowGraphViewer.java,List access = inode.getVariableAccess();,if (inode != null ) List access = inode.getVariableAccess();
ViolationOutline.java,List filterList = priorityFilter.getPriorityFilterList();,if (priorityFilter != null ) List filterList = priorityFilter.getPriorityFilterList();
ViolationOverview.java,final List projects = this.projectFilter.getProjectFilterList();,if (this != null ) final List projects = this.projectFilter.getProjectFilterList();
ViolationOverview.java,final List filterList = this.priorityFilter.getPriorityFilterList();,if (this != null ) final List filterList = this.priorityFilter.getPriorityFilterList();
ViolationOverviewContentProvider.java,final List files = record.getChildrenAsList();,if (record != null ) final List files = record.getChildrenAsList();
ViolationOverviewContentProvider.java,final List newMarkers = fileRec.getChildrenAsList();,if (fileRec != null ) final List newMarkers = fileRec.getChildrenAsList();
ViolationOverviewContentProvider.java,children = record.getChildren();,if (record != null ) children = record.getChildren();
ViolationOverviewContentProvider.java,final List projects = root.getChildrenAsList();,if (root != null ) final List projects = root.getChildrenAsList();
ViolationOverviewContentProvider.java,final IResource resource = markerDeltas[i].getResource();,if (markerDeltas[i] != null ) final IResource resource = markerDeltas[i].getResource();
ViolationOverviewContentProvider.java,final List packages = projectRec.getChildrenAsList();,if (projectRec != null ) final List packages = projectRec.getChildrenAsList();
ViolationOverviewMenuManager.java,final List projectFilterList = this.overview.getProjectFilterList();,if (this != null ) final List projectFilterList = this.overview.getProjectFilterList();
ViolationSelectionAction.java,Iterator i = structuredSelection.iterator();,if (structuredSelection != null ) Iterator i = structuredSelection.iterator();
PMDTask.java,cl = getClass().getClassLoader();,if (getClass() != null ) cl = getClass().getClassLoader();
PMD.java,SourceFileSelector fileSelector = new SourceFileSelector(opts.getLanguage());,if (SourceFileSelector(opts != null ) SourceFileSelector fileSelector = new SourceFileSelector(opts.getLanguage());
SourceFileSelector.java,language = Language.getDefaultLanguage();,if (Language != null ) language = Language.getDefaultLanguage();
CommandLineOptions.java,private int cpus = Runtime.getRuntime().availableProcessors();,if (Runtime != null ) private int cpus = Runtime.getRuntime().availableProcessors();
CodeEditorTextPane.java,String tok = st.nextToken();,if (st != null ) String tok = st.nextToken();
TextRenderer.java,empty = !violations.hasNext();,if (!violations != null ) empty = !violations.hasNext();
RuleSetToDocs.java,DocumentBuilder parser = DocumentBuilderFactory.newInstance().newDocumentBuilder();,if (DocumentBuilderFactory != null ) DocumentBuilder parser = DocumentBuilderFactory.newInstance().newDocumentBuilder();
CSVRenderer.java,rv = violations.next();,if (violations != null ) rv = violations.next();
EmacsRenderer.java,RuleViolation rv = violations.next();,if (violations != null ) RuleViolation rv = violations.next();
HTMLRenderer.java,RuleViolation rv = violations.next();,if (violations != null ) RuleViolation rv = violations.next();
HTMLRenderer.java,String d = StringUtil.htmlEncode(rv.getDescription());,if (StringUtil != null ) String d = StringUtil.htmlEncode(rv.getDescription());
IDEAJRenderer.java,RuleViolation rv = violations.next();,if (violations != null ) RuleViolation rv = violations.next();
IDEAJRenderer.java,RuleViolation rv = violations.next();,if (violations != null ) RuleViolation rv = violations.next();
OnTheFlyRenderer.java,Iterator<RuleViolation> violations = report.iterator();,if (report != null ) Iterator<RuleViolation> violations = report.iterator();
PapariTextRenderer.java,lastFile = rv.getFilename();,if (rv != null ) lastFile = rv.getFilename();
PapariTextRenderer.java,String key = entry.getKey();,if (entry != null ) String key = entry.getKey();
PapariTextRenderer.java,lastFile = error.getFile();,if (error != null ) lastFile = error.getFile();
PapariTextRenderer.java,code = br.readLine().trim();,if (br != null ) code = br.readLine().trim();
PapariTextRenderer.java,"this.pwd = new File(""."").getCanonicalPath();","if (File("" != null ) this.pwd = new File(""."").getCanonicalPath();"
SummaryHTMLRenderer.java,String ruleName = entry.getKey();,if (entry != null ) String ruleName = entry.getKey();
TextPadRenderer.java,RuleViolation rv = violations.next();,if (violations != null ) RuleViolation rv = violations.next();
TextRenderer.java,empty = !violations.hasNext();,if (!violations != null ) empty = !violations.hasNext();
TextRenderer.java,RuleViolation rv = violations.next();,if (violations != null ) RuleViolation rv = violations.next();
VBHTMLRenderer.java,RuleViolation rv = violations.next();,if (violations != null ) RuleViolation rv = violations.next();
VBHTMLRenderer.java,filename = rv.getFilename();,if (rv != null ) filename = rv.getFilename();
XMLRenderer.java,RuleViolation rv = violations.next();,if (violations != null ) RuleViolation rv = violations.next();
XMLRenderer.java,filename = rv.getFilename();,if (rv != null ) filename = rv.getFilename();
XSLTRenderer.java,TransformerFactory factory = TransformerFactory.newInstance();,if (TransformerFactory != null ) TransformerFactory factory = TransformerFactory.newInstance();
XSLTRenderer.java,Writer writer = super.getWriter();,if (super != null ) Writer writer = super.getWriter();
XSLTRenderer.java,DocumentBuilder parser = DocumentBuilderFactory.newInstance().newDocumentBuilder();,if (DocumentBuilderFactory != null ) DocumentBuilder parser = DocumentBuilderFactory.newInstance().newDocumentBuilder();
YAHTMLRenderer.java,ReportTree tree = report.getViolationTree();,if (report != null ) ReportTree tree = report.getViolationTree();
RuleSetFactory.java,RuleSet[] allRuleSets = ruleSets.getAllRuleSets();,if (ruleSets != null ) RuleSet[] allRuleSets = ruleSets.getAllRuleSets();
RuleSetFactoryTest.java,Language language = ruleSet.getLanguage();,if (ruleSet != null ) Language language = ruleSet.getLanguage();
RuleChain.java,Language language = ruleSet.getLanguage();,if (ruleSet != null ) Language language = ruleSet.getLanguage();
PreferencesManagerImpl.java,private IPreferenceStore preferencesStore = PMDPlugin.getDefault().getPreferenceStore();,if (PMDPlugin != null ) private IPreferenceStore preferencesStore = PMDPlugin.getDefault().getPreferenceStore();
Designer.java,Node prnt = node.jjtGetParent();,if (node != null ) Node prnt = node.jjtGetParent();
Designer.java,String code = codeElement.getTextContent();,if (codeElement != null ) String code = codeElement.getTextContent();
Designer.java,String xpath = xpathElement.getTextContent();,if (xpathElement != null ) String xpath = xpathElement.getTextContent();
Designer.java,Object obj = iter.next();,if (iter != null ) Object obj = iter.next();
ProjectPropertiesModelTest.java,IProjectPropertiesManager mgr = PMDRuntimePlugin.getDefault().getPropertiesManager();,if (PMDRuntimePlugin != null ) IProjectPropertiesManager mgr = PMDRuntimePlugin.getDefault().getPropertiesManager();
ProjectPropertiesModelTest.java,IProjectPropertiesManager mgr = PMDRuntimePlugin.getDefault().getPropertiesManager();,if (PMDRuntimePlugin != null ) IProjectPropertiesManager mgr = PMDRuntimePlugin.getDefault().getPropertiesManager();
ProjectPropertiesModelTest.java,IProjectPropertiesManager mgr = PMDRuntimePlugin.getDefault().getPropertiesManager();,if (PMDRuntimePlugin != null ) IProjectPropertiesManager mgr = PMDRuntimePlugin.getDefault().getPropertiesManager();
ProjectPropertiesModelTest.java,IPreferencesManager pmgr = PMDRuntimePlugin.getDefault().getPreferencesManager();,if (PMDRuntimePlugin != null ) IPreferencesManager pmgr = PMDRuntimePlugin.getDefault().getPreferencesManager();
ProjectPropertiesModelTest.java,IProjectPropertiesManager mgr = PMDRuntimePlugin.getDefault().getPropertiesManager();,if (PMDRuntimePlugin != null ) IProjectPropertiesManager mgr = PMDRuntimePlugin.getDefault().getPropertiesManager();
ProjectPropertiesModelTest.java,IProjectPropertiesManager mgr = PMDRuntimePlugin.getDefault().getPropertiesManager();,if (PMDRuntimePlugin != null ) IProjectPropertiesManager mgr = PMDRuntimePlugin.getDefault().getPropertiesManager();
ProjectPropertiesModelTest.java,IPreferencesManager pmgr = PMDRuntimePlugin.getDefault().getPreferencesManager();,if (PMDRuntimePlugin != null ) IPreferencesManager pmgr = PMDRuntimePlugin.getDefault().getPreferencesManager();
ProjectPropertiesModelTest.java,IProjectPropertiesManager mgr = PMDRuntimePlugin.getDefault().getPropertiesManager();,if (PMDRuntimePlugin != null ) IProjectPropertiesManager mgr = PMDRuntimePlugin.getDefault().getPropertiesManager();
ProjectPropertiesModelTest.java,IProjectPropertiesManager mgr = PMDRuntimePlugin.getDefault().getPropertiesManager();,if (PMDRuntimePlugin != null ) IProjectPropertiesManager mgr = PMDRuntimePlugin.getDefault().getPropertiesManager();
ProjectPropertiesModelTest.java,IProjectPropertiesManager mgr = PMDRuntimePlugin.getDefault().getPropertiesManager();,if (PMDRuntimePlugin != null ) IProjectPropertiesManager mgr = PMDRuntimePlugin.getDefault().getPropertiesManager();
ProjectPropertiesModelTest.java,IProjectPropertiesManager mgr = PMDRuntimePlugin.getDefault().getPropertiesManager();,if (PMDRuntimePlugin != null ) IProjectPropertiesManager mgr = PMDRuntimePlugin.getDefault().getPropertiesManager();
ProjectPropertiesModelTest.java,IProjectPropertiesManager mgr = PMDRuntimePlugin.getDefault().getPropertiesManager();,if (PMDRuntimePlugin != null ) IProjectPropertiesManager mgr = PMDRuntimePlugin.getDefault().getPropertiesManager();
ProjectPropertiesModelTest.java,IProjectPropertiesManager mgr = PMDRuntimePlugin.getDefault().getPropertiesManager();,if (PMDRuntimePlugin != null ) IProjectPropertiesManager mgr = PMDRuntimePlugin.getDefault().getPropertiesManager();
ProjectPropertiesModelTest.java,IProjectPropertiesManager mgr = PMDRuntimePlugin.getDefault().getPropertiesManager();,if (PMDRuntimePlugin != null ) IProjectPropertiesManager mgr = PMDRuntimePlugin.getDefault().getPropertiesManager();
ProjectPropertiesModelTest.java,IProjectPropertiesManager mgr = PMDRuntimePlugin.getDefault().getPropertiesManager();,if (PMDRuntimePlugin != null ) IProjectPropertiesManager mgr = PMDRuntimePlugin.getDefault().getPropertiesManager();
ProjectPropertiesModelTest.java,IProjectPropertiesManager mgr = PMDRuntimePlugin.getDefault().getPropertiesManager();,if (PMDRuntimePlugin != null ) IProjectPropertiesManager mgr = PMDRuntimePlugin.getDefault().getPropertiesManager();
UpdateProjectPropertiesCmdTest.java,IProjectPropertiesManager mgr = PMDRuntimePlugin.getDefault().getPropertiesManager();,if (PMDRuntimePlugin != null ) IProjectPropertiesManager mgr = PMDRuntimePlugin.getDefault().getPropertiesManager();
AbstractDefaultCommand.java,final IPreferences preferences = PMDRuntimePlugin.getDefault().loadPreferences();,if (PMDRuntimePlugin != null ) final IPreferences preferences = PMDRuntimePlugin.getDefault().loadPreferences();
BaseVisitor.java,final IPreferences preferences = PMDRuntimePlugin.getDefault().loadPreferences();,if (PMDRuntimePlugin != null ) final IPreferences preferences = PMDRuntimePlugin.getDefault().loadPreferences();
PreferencesManagerImpl.java,private IPreferenceStore preferencesStore = PMDRuntimePlugin.getDefault().getPreferenceStore();,if (PMDRuntimePlugin != null ) private IPreferenceStore preferencesStore = PMDRuntimePlugin.getDefault().getPreferenceStore();
PreferencesManagerImpl.java,IRuleSetManager ruleSetManager = PMDCorePlugin.getDefault().getRuleSetManager();,if (PMDCorePlugin != null ) IRuleSetManager ruleSetManager = PMDCorePlugin.getDefault().getRuleSetManager();
PreferencesManagerImpl.java,IRuleSetWriter writer = PMDRuntimePlugin.getDefault().getRuleSetWriter();,if (PMDRuntimePlugin != null ) IRuleSetWriter writer = PMDRuntimePlugin.getDefault().getRuleSetWriter();
ProjectPropertiesImpl.java,final IRuleSetWriter writer = PMDRuntimePlugin.getDefault().getRuleSetWriter();,if (PMDRuntimePlugin != null ) final IRuleSetWriter writer = PMDRuntimePlugin.getDefault().getRuleSetWriter();
PMDGenerateASTAction.java,IAstWriter astWriter = PMDRuntimePlugin.getDefault().getAstWriter();,if (PMDRuntimePlugin != null ) IAstWriter astWriter = PMDRuntimePlugin.getDefault().getAstWriter();
CPDPreferencePage.java,this.preferences = PMDRuntimePlugin.getDefault().loadPreferences();,if (PMDRuntimePlugin != null ) this.preferences = PMDRuntimePlugin.getDefault().loadPreferences();
GeneralPreferencesPage.java,this.preferences = PMDRuntimePlugin.getDefault().loadPreferences();,if (PMDRuntimePlugin != null ) this.preferences = PMDRuntimePlugin.getDefault().loadPreferences();
PMDPreferencePage.java,IRuleSetWriter writer = PMDRuntimePlugin.getDefault().getRuleSetWriter();,if (PMDRuntimePlugin != null ) IRuleSetWriter writer = PMDRuntimePlugin.getDefault().getRuleSetWriter();
RuleDialog.java,String[] labels = PMDUiPlugin.getDefault().getPriorityLabels();,if (PMDUiPlugin != null ) String[] labels = PMDUiPlugin.getDefault().getPriorityLabels();
ViewMemento.java,this.path = PMDUiPlugin.getDefault().getStateLocation();,if (PMDUiPlugin != null ) this.path = PMDUiPlugin.getDefault().getStateLocation();
ViolationOutline.java,Integer[] priorities = PMDUiPlugin.getDefault().getPriorityValues();,if (PMDUiPlugin != null ) Integer[] priorities = PMDUiPlugin.getDefault().getPriorityValues();
RenderReportCmd.java,final InputStream contentsStream = new ByteArrayInputStream(reportString.getBytes());,if (ByteArrayInputStream(reportString != null ) final InputStream contentsStream = new ByteArrayInputStream(reportString.getBytes());
RenderReportCmd.java,final InputStream contentsStream = new ByteArrayInputStream(reportString.getBytes());,if (ByteArrayInputStream(reportString != null ) final InputStream contentsStream = new ByteArrayInputStream(reportString.getBytes());
DataflowGraph.java,NodeCanvas node = (NodeCanvas)nodeIterator.next();,if ((NodeCanvas)nodeIterator != null ) NodeCanvas node = (NodeCanvas)nodeIterator.next();
PMDRuntimePlugin.java,"RollingFileAppender appender = new RollingFileAppender(layout, preferences.getLogFileName());","if (preferences != null ) RollingFileAppender appender = new RollingFileAppender(layout, preferences.getLogFileName());"
AttributeNode.java,value = new StringValue(attribute.getValue());,if (StringValue(attribute != null ) value = new StringValue(attribute.getValue());
TypeOfFunction.java,nodeTypeName = attr.getValue();,if (attr != null ) nodeTypeName = attr.getValue();
MatchesFunction.java,Matcher matcher = check.matcher(attr.getValue());,if (check != null ) Matcher matcher = check.matcher(attr.getValue());
SaxonXPathRuleQuery.java,Expression expression = xpathExpression.getInternalExpression();,if (xpathExpression != null ) Expression expression = xpathExpression.getInternalExpression();
TypeOfFunction.java,List<Class> implementors = Arrays.asList(type.getInterfaces());,if (Arrays != null ) List<Class> implementors = Arrays.asList(type.getInterfaces());
TypeOfFunction.java,superC = superC.getSuperclass();,if (superC != null ) superC = superC.getSuperclass();
Initializer.java,LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();,if (languageVersion != null ) LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();
XPathRule.java,List<XPath> xpaths = nodeNameToXPaths.get(node.toString());,if (nodeNameToXPaths != null ) List<XPath> xpaths = nodeNameToXPaths.get(node.toString());
XPathRule.java,Expr node = pending.pop();,if (pending != null ) Expr node = pending.pop();
XPathRule.java,List<Step> steps = locationPath.getSteps();,if (locationPath != null ) List<Step> steps = locationPath.getSteps();
XPathRule.java,LocationPath relativeLocationPath = xpathFactory.createRelativeLocationPath();,if (xpathFactory != null ) LocationPath relativeLocationPath = xpathFactory.createRelativeLocationPath();
Designer.java,Source source = new DOMSource(node.getAsXml());,if (DOMSource(node != null ) Source source = new DOMSource(node.getAsXml());
AvoidDuplicateLiteralsRule.java,List<ASTLiteral> occurrences = literals.get(node.getImage());,if (literals != null ) List<ASTLiteral> occurrences = literals.get(node.getImage());
AvoidUsingHardCodedIPRule.java,String image = node.getImage();,if (node != null ) String image = node.getImage();
Language.java,Language[] supportedLanguages = Language.values();,if (Language != null ) Language[] supportedLanguages = Language.values();
PMD.java,LanguageVersion languageVersion = language.getVersion(opts.getTargetJDK());,if (language != null ) LanguageVersion languageVersion = language.getVersion(opts.getTargetJDK());
PMD.java,languageVersion = language.getDefaultVersion();,if (language != null ) languageVersion = language.getDefaultVersion();
ClasspathClassLoader.java,String token = toker.nextToken();,if (toker != null ) String token = toker.nextToken();
ClasspathClassLoader.java,line = line.trim();,if (line != null ) line = line.trim();
PMDTask.java,ruleSetFiles = new SimpleRuleSetNameMapper(ruleSetFiles).getRuleSets();,if (SimpleRuleSetNameMapper(ruleSetFiles) != null ) ruleSetFiles = new SimpleRuleSetNameMapper(ruleSetFiles).getRuleSets();
PMDTask.java,ruleSetFiles = sb.toString();,if (sb != null ) ruleSetFiles = sb.toString();
RuleTst.java,Properties ruleProperties = rule.getProperties();,if (rule != null ) Properties ruleProperties = rule.getProperties();
RuleTst.java,Properties oldProperties = (Properties)ruleProperties.clone();,if ((Properties)ruleProperties != null ) Properties oldProperties = (Properties)ruleProperties.clone();
RuleTst.java,oldProperties = (Properties)ruleProperties.clone();,if ((Properties)ruleProperties != null ) oldProperties = (Properties)ruleProperties.clone();
RuleSetFactory.java,final int nodeCount = node.getChildNodes().getLength();,if (node != null ) final int nodeCount = node.getChildNodes().getLength();
RuleSetWriter.java,Properties properties = ruleReference.getOverriddenProperties();,if (ruleReference != null ) Properties properties = ruleReference.getOverriddenProperties();
AbstractRule.java,bools[i] = values[i].booleanValue();,if (values[i] != null ) bools[i] = values[i].booleanValue();
AbstractRule.java,ints[i] = values[i].intValue();,if (values[i] != null ) ints[i] = values[i].intValue();
AbstractRule.java,doubles[i] = values[i].doubleValue();,if (values[i] != null ) doubles[i] = values[i].doubleValue();
AbstractRule.java,Iterator<PropertyDescriptor> iter = propsByName.values().iterator();,if (propsByName != null ) Iterator<PropertyDescriptor> iter = propsByName.values().iterator();
AbstractRule.java,PropertyDescriptor desc = iter.next();,if (iter != null ) PropertyDescriptor desc = iter.next();
AbstractPoorMethodCall.java,String methodCall = occurrence.getImage();,if (occurrence != null ) String methodCall = occurrence.getImage();
AppendCharacterWithCharRule.java,String str = node.getImage();,if (node != null ) String str = node.getImage();
InefficientStringBufferingRule.java,curr = curr.jjtGetParent();,if (curr != null ) curr = curr.jjtGetParent();
SuspiciousOctalEscapeRule.java,String image = node.getImage();,if (node != null ) String image = node.getImage();
UselessStringValueOfRule.java,VariableNameDeclaration nd = (VariableNameDeclaration) name.getNameDeclaration();,if (name != null ) VariableNameDeclaration nd = (VariableNameDeclaration) name.getNameDeclaration();
XPathRuleTest.java,RuleViolation rv = report.iterator().next();,if (report != null ) RuleViolation rv = report.iterator().next();
XPathRuleTest.java,RuleViolation rv = report.iterator().next();,if (report != null ) RuleViolation rv = report.iterator().next();
XPathJspRuleTest.java,RuleViolation rv = report.iterator().next();,if (report != null ) RuleViolation rv = report.iterator().next();
NPathComplexityTest.java,Iterator i = report.iterator();,if (report != null ) Iterator i = report.iterator();
NPathComplexityTest.java,RuleViolation rv = (RuleViolation) i.next();,if (i != null ) RuleViolation rv = (RuleViolation) i.next();
UselessOverridingMethodRule.java,ASTResultType type = node.getResultType();,if (node != null ) ASTResultType type = node.getResultType();
UselessOverridingMethodRule.java,ASTBlock block = node.getBlock();,if (node != null ) ASTBlock block = node.getBlock();
AbstractRule.java,bools[i] = values[i].booleanValue();,if (values[i] != null ) bools[i] = values[i].booleanValue();
AbstractRule.java,ints[i] = values[i].intValue();,if (values[i] != null ) ints[i] = values[i].intValue();
AbstractRule.java,doubles[i] = values[i].doubleValue();,if (values[i] != null ) doubles[i] = values[i].doubleValue();
AbstractRule.java,Iterator<PropertyDescriptor> iter = propsByName.values().iterator();,if (propsByName != null ) Iterator<PropertyDescriptor> iter = propsByName.values().iterator();
AbstractRule.java,PropertyDescriptor desc = iter.next();,if (iter != null ) PropertyDescriptor desc = iter.next();
UnusedImportsRule.java,List<Token> formals = node.getFormalComments();,if (node != null ) List<Token> formals = node.getFormalComments();
ClassUtil.java,current = current.getSuperclass();,if (current != null ) current = current.getSuperclass();
TypeMap.java,final String shortName = ClassUtil.withoutPackageName(type.getName());,if (ClassUtil != null ) final String shortName = ClassUtil.withoutPackageName(type.getName());
TypeMap.java,Iterator iter = typesByName.entrySet().iterator();,if (typesByName != null ) Iterator iter = typesByName.entrySet().iterator();
TypeMap.java,Map.Entry entry = (Map.Entry) iter.next();,if (iter != null ) Map.Entry entry = (Map.Entry) iter.next();
MethodProperty.java,Class arrayType = type.getComponentType();,if (type != null ) Class arrayType = type.getComponentType();
MethodProperty.java,Class clazz = method.getDeclaringClass();,if (method != null ) Class clazz = method.getDeclaringClass();
MethodProperty.java,Class[] argTypes = method.getParameterTypes();,if (method != null ) Class[] argTypes = method.getParameterTypes();
DataPoint.java,Double rhsScore = new Double(rhs.getScore());,if (Double(rhs != null ) Double rhsScore = new Double(rhs.getScore());
NPathComplexityTest.java,Iterator i = report.iterator();,if (report != null ) Iterator i = report.iterator();
NPathComplexityTest.java,RuleViolation rv = (RuleViolation) i.next();,if (i != null ) RuleViolation rv = (RuleViolation) i.next();
AbstractRule.java,bools[i] = values[i].booleanValue();,if (values[i] != null ) bools[i] = values[i].booleanValue();
AbstractRule.java,ints[i] = values[i].intValue();,if (values[i] != null ) ints[i] = values[i].intValue();
AbstractRule.java,doubles[i] = values[i].doubleValue();,if (values[i] != null ) doubles[i] = values[i].doubleValue();
AccessorClassGenerationRule.java,"name = stripString(aPackageName + ""."", an.getImage());","if (an != null ) name = stripString(aPackageName + ""."", an.getImage());"
GUI.java,final long start = System.currentTimeMillis();,if (System != null ) final long start = System.currentTimeMillis();
GUI.java,long now = System.currentTimeMillis();,if (System != null ) long now = System.currentTimeMillis();
AbstractDataFlowNode.java,DataFlowNode parent = this.dataFlow.getLast();,if (this != null ) DataFlowNode parent = this.dataFlow.getLast();
CurrentPath.java,DataFlowNode inode = list.getLast();,if (list != null ) DataFlowNode inode = list.getLast();
NameFinder.java,NameOccurrence occurrence = names.getLast();,if (names != null ) NameOccurrence occurrence = names.getLast();
Benchmark.java,List<BenchmarkResult> results = new ArrayList<BenchmarkResult>(nameToBenchmarkResult.values());,if (ArrayList<BenchmarkResult>(nameToBenchmarkResult != null ) List<BenchmarkResult> results = new ArrayList<BenchmarkResult>(nameToBenchmarkResult.values());
VariableNamingConventionsRule.java,String varName = childNodeId.getImage();,if (childNodeId != null ) String varName = childNodeId.getImage();
AssignmentInOperandRule.java,Node parent = node.jjtGetParent();,if (node != null ) Node parent = node.jjtGetParent();
Initializer.java,LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();,if (languageVersion != null ) LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();
ASTFormalParameterTest.java,ASTFormalParameter b = (ASTFormalParameter) iter.next();,if (iter != null ) ASTFormalParameter b = (ASTFormalParameter) iter.next();
SymbolTableTestRule.java,Node location = no.getLocation();,if (no != null ) Node location = no.getLocation();
Configuration.java,private ClassLoader classLoader = getClass().getClassLoader();,if (getClass() != null ) private ClassLoader classLoader = getClass().getClassLoader();
RuleSetWriter.java,RulePriorityEnum priority = ruleReference.getOverriddenPriority();,if (ruleReference != null ) RulePriorityEnum priority = ruleReference.getOverriddenPriority();
SingularFieldRule.java,List<NameOccurrence> usages = declaration.getUsages();,if (declaration != null ) List<NameOccurrence> usages = declaration.getUsages();
SingularFieldRule.java,Node location = no.getLocation();,if (no != null ) Node location = no.getLocation();
SingularFieldRule.java,Node potentialStatement = primaryExpressionParent.jjtGetParent();,if (primaryExpressionParent != null ) Node potentialStatement = primaryExpressionParent.jjtGetParent();
SimpleNodeTest.java,Iterator i = blocks.iterator();,if (blocks != null ) Iterator i = blocks.iterator();
SimpleNodeTest.java,ASTBlock b = (ASTBlock) i.next();,if (i != null ) ASTBlock b = (ASTBlock) i.next();
SimpleNodeTest.java,i = blocks.iterator();,if (blocks != null ) i = blocks.iterator();
SimpleNodeTest.java,ASTVariableInitializer b = (ASTVariableInitializer) i.next();,if (i != null ) ASTVariableInitializer b = (ASTVariableInitializer) i.next();
SimpleNodeTest.java,i = blocks.iterator();,if (blocks != null ) i = blocks.iterator();
SimpleNodeTest.java,ASTExpression b = (ASTExpression) i.next();,if (i != null ) ASTExpression b = (ASTExpression) i.next();
AbstractNode.java,result = this.jjtGetParent();,if (this != null ) result = this.jjtGetParent();
AbstractNode.java,result = result.jjtGetParent();,if (result != null ) result = result.jjtGetParent();
AvoidFieldNameMatchingMethodNameRule.java,String varName = node.getVariableName();,if (node != null ) String varName = node.getVariableName();
AvoidFieldNameMatchingMethodNameRule.java,varName = varName.toLowerCase();,if (varName != null ) varName = varName.toLowerCase();
UselessOperationOnImmutableRule.java,ASTPrimarySuffix suffix = iterator.next();,if (iterator != null ) ASTPrimarySuffix suffix = iterator.next();
MatchesFunction.java,Matcher matcher = check.matcher(attr.getValue());,if (check != null ) Matcher matcher = check.matcher(attr.getValue());
PMD.java,private ClassLoader classLoader = getClass().getClassLoader();,if (getClass() != null ) private ClassLoader classLoader = getClass().getClassLoader();
PMD.java,LanguageVersion languageVersion = getLanguageVersionOfFile(ctx.getSourceCodeFilename());,if (getLanguageVersionOfFile(ctx != null ) LanguageVersion languageVersion = getLanguageVersionOfFile(ctx.getSourceCodeFilename());
PMD.java,classLoader = getClass().getClassLoader();,if (getClass() != null ) classLoader = getClass().getClassLoader();
UselessOperationOnImmutableRule.java,String variableName = var.getImage();,if (var != null ) String variableName = var.getImage();
UselessOperationOnImmutableRule.java,Node sn = no.getLocation();,if (no != null ) Node sn = no.getLocation();
UselessOperationOnImmutableRule.java,Node primaryExpression = sn.jjtGetParent().jjtGetParent();,if (sn != null ) Node primaryExpression = sn.jjtGetParent().jjtGetParent();
UselessOperationOnImmutableRule.java,ASTPrimarySuffix suffix = iterator.next();,if (iterator != null ) ASTPrimarySuffix suffix = iterator.next();
UselessOperationOnImmutableRule.java,ASTType type = node.getTypeNode();,if (node != null ) ASTType type = node.getTypeNode();
RuleSetFactoryTest.java,Language language = ruleSet.getLanguage();,if (ruleSet != null ) Language language = ruleSet.getLanguage();
RuleSetFactoryTest.java,SAXParserFactory saxParserFactory = SAXParserFactory.newInstance();,if (SAXParserFactory != null ) SAXParserFactory saxParserFactory = SAXParserFactory.newInstance();
RuleSetFactoryTest.java,SAXParser saxParser = saxParserFactory.newSAXParser();,if (saxParserFactory != null ) SAXParser saxParser = saxParserFactory.newSAXParser();
RuleSetFactoryTest.java,SAXParserFactory saxParserFactory = SAXParserFactory.newInstance();,if (SAXParserFactory != null ) SAXParserFactory saxParserFactory = SAXParserFactory.newInstance();
RuleSetFactoryTest.java,inputStream = new ByteArrayInputStream(file.getBytes());,if (ByteArrayInputStream(file != null ) inputStream = new ByteArrayInputStream(file.getBytes());
RuleSetFactoryTest.java,SAXParser saxParser = saxParserFactory.newSAXParser();,if (saxParserFactory != null ) SAXParser saxParser = saxParserFactory.newSAXParser();
RuleSetFactory.java,RuleSet[] allRuleSets = ruleSets.getAllRuleSets();,if (ruleSets != null ) RuleSet[] allRuleSets = ruleSets.getAllRuleSets();
RuleSetFactory.java,DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();,if (DocumentBuilderFactory != null ) DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();
RuleSetFactory.java,Element ruleSetElement = document.getDocumentElement();,if (document != null ) Element ruleSetElement = document.getDocumentElement();
RuleSetFactory.java,NodeList nodeList = ruleSetElement.getChildNodes();,if (ruleSetElement != null ) NodeList nodeList = ruleSetElement.getChildNodes();
RuleSetFactory.java,NodeList excludeNodes = ruleElement.getChildNodes();,if (ruleElement != null ) NodeList excludeNodes = ruleElement.getChildNodes();
RuleSetFactory.java,Rule rule = (Rule) c.newInstance();,if (c != null ) Rule rule = (Rule) c.newInstance();
RuleSetFactory.java,Rule externalRule = externalRuleSet.getRuleByName(externalRuleID.getRuleName());,if (externalRuleSet != null ) Rule externalRule = externalRuleSet.getRuleByName(externalRuleID.getRuleName());
RuleSetWriter.java,DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();,if (DocumentBuilderFactory != null ) DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();
RuleSetWriter.java,DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();,if (documentBuilderFactory != null ) DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();
RuleSetWriter.java,this.document = documentBuilder.newDocument();,if (documentBuilder != null ) this.document = documentBuilder.newDocument();
RuleSetWriter.java,TransformerFactory transformerFactory = TransformerFactory.newInstance();,if (TransformerFactory != null ) TransformerFactory transformerFactory = TransformerFactory.newInstance();
RuleSetWriter.java,Transformer transformer = transformerFactory.newTransformer();,if (transformerFactory != null ) Transformer transformer = transformerFactory.newTransformer();
RuleSetWriter.java,Element descriptionElement = createDescriptionElement(ruleSet.getDescription());,if (createDescriptionElement(ruleSet != null ) Element descriptionElement = createDescriptionElement(ruleSet.getDescription());
RuleSetWriter.java,RuleSetReference ruleSetReference = ruleReference.getRuleSetReference();,if (ruleReference != null ) RuleSetReference ruleSetReference = ruleReference.getRuleSetReference();
RuleSetWriter.java,String name = ruleReference.getOverriddenName();,if (ruleReference != null ) String name = ruleReference.getOverriddenName();
RuleSetWriter.java,String message = ruleReference.getOverriddenMessage();,if (ruleReference != null ) String message = ruleReference.getOverriddenMessage();
RuleSetWriter.java,String externalInfoUrl = ruleReference.getOverriddenExternalInfoUrl();,if (ruleReference != null ) String externalInfoUrl = ruleReference.getOverriddenExternalInfoUrl();
RuleSetWriter.java,String description = ruleReference.getOverriddenDescription();,if (ruleReference != null ) String description = ruleReference.getOverriddenDescription();
RuleSetWriter.java,RulePriorityEnum priority = ruleReference.getOverriddenPriority();,if (ruleReference != null ) RulePriorityEnum priority = ruleReference.getOverriddenPriority();
RuleSetWriter.java,Properties properties = ruleReference.getOverriddenProperties();,if (ruleReference != null ) Properties properties = ruleReference.getOverriddenProperties();
RuleSetWriter.java,List<String> examples = ruleReference.getOverriddenExamples();,if (ruleReference != null ) List<String> examples = ruleReference.getOverriddenExamples();
RuleSetWriter.java,Integer priority = ruleReference.getOverriddenPriority();,if (ruleReference != null ) Integer priority = ruleReference.getOverriddenPriority();
XmlParser.java,Node parent = node.getParentNode();,if (node != null ) Node parent = node.getParentNode();
AbstractRuleChainVisitor.java,start = System.nanoTime();,if (System != null ) start = System.nanoTime();
AbstractRuleChainVisitor.java,visits += ns.size();,if (ns != null ) visits += ns.size();
AbstractRuleChainVisitor.java,end = System.nanoTime();,if (System != null ) end = System.nanoTime();
CouplingBetweenObjectsRule.java,ClassScope clzScope = nameNode.getScope().getEnclosingClassScope();,if (nameNode != null ) ClassScope clzScope = nameNode.getScope().getEnclosingClassScope();
ScopeAndDeclarationFinder.java,Scope s = node.jjtGetParent().getScope();,if (node != null ) Scope s = node.jjtGetParent().getScope();
Language.java,Object obj = ruleChainVisitorClass.newInstance();,if (ruleChainVisitorClass != null ) Object obj = ruleChainVisitorClass.newInstance();
RuleSetTest.java,Collection rules = IUT.getRules();,if (IUT != null ) Collection rules = IUT.getRules();
RuleSetTest.java,Iterator i = rules.iterator();,if (rules != null ) Iterator i = rules.iterator();
RuleSetTest.java,Iterator violations = context.getReport().iterator();,if (context != null ) Iterator violations = context.getReport().iterator();
RuleSetTest.java,RuleViolation violation = (RuleViolation) violations.next();,if (violations != null ) RuleViolation violation = (RuleViolation) violations.next();
RuleSetTest.java,Iterator expected = values.iterator();,if (values != null ) Iterator expected = values.iterator();
RuleSetTest.java,RuleViolation violation = (RuleViolation) expected.next();,if (expected != null ) RuleViolation violation = (RuleViolation) expected.next();
PMD.java,Enumeration e = zipFile.entries();,if (zipFile != null ) Enumeration e = zipFile.entries();
PMD.java,ZipEntry zipEntry = (ZipEntry) e.nextElement();,if (e != null ) ZipEntry zipEntry = (ZipEntry) e.nextElement();
RuleSet.java,long start = System.nanoTime();,if (System != null ) long start = System.nanoTime();
RuleSet.java,long end = System.nanoTime();,if (System != null ) long end = System.nanoTime();
PHPTokenizer.java,List code = tokens.getCode();,if (tokens != null ) List code = tokens.getCode();
SourceCode.java,c = code.get();,if (code != null ) c = code.get();
SourceCode.java,List<String> lines = cl.getCode();,if (cl != null ) List<String> lines = cl.getCode();
SourceCode.java,List lines = cl.getCode();,if (cl != null ) List lines = cl.getCode();
TypeSignatureVisitor.java,type = array.getClass();,if (array != null ) type = array.getClass();
AbstractDataFlowNode.java,DataFlowNode parent = this.dataFlow.getLast();,if (this != null ) DataFlowNode parent = this.dataFlow.getLast();
AbstractDataFlowNode.java,this.line = node.getBeginLine();,if (node != null ) this.line = node.getBeginLine();
AbstractDataFlowNode.java,String tmp = type.toString();,if (type != null ) String tmp = type.toString();
AbstractDataFlowNode.java,int newTmpInt = Integer.parseInt(st.nextToken());,if (Integer != null ) int newTmpInt = Integer.parseInt(st.nextToken());
Linker.java,int x = sc.getLastIndex() - sc.getFirstIndex();,if (sc != null ) int x = sc.getLastIndex() - sc.getFirstIndex();
Linker.java,DataFlowNode node = stackObject.getDataFlowNode();,if (stackObject != null ) DataFlowNode node = stackObject.getDataFlowNode();
Linker.java,List bList = node.getFlow();,if (node != null ) List bList = node.getFlow();
Linker.java,String label = node.getNode().getImage();,if (node != null ) String label = node.getNode().getImage();
Linker.java,DataFlowNode node = so.getDataFlowNode();,if (so != null ) DataFlowNode node = so.getDataFlowNode();
Linker.java,DataFlowNode node = so.getDataFlowNode();,if (so != null ) DataFlowNode node = so.getDataFlowNode();
SequenceChecker.java,aktStatus = this.aktStatus.step(so.getType());,if (this != null ) aktStatus = this.aktStatus.step(so.getType());
VariableAccessVisitor.java,VariableNameDeclaration vnd = entry.getKey();,if (entry != null ) VariableNameDeclaration vnd = entry.getKey();
AttributeAxisIterator.java,this.name = truncateMethodName(m.getName());,if (truncateMethodName(m != null ) this.name = truncateMethodName(m.getName());
AttributeAxisIterator.java,Method[] preFilter = contextNode.getClass().getMethods();,if (contextNode != null ) Method[] preFilter = contextNode.getClass().getMethods();
AttributeAxisIterator.java,this.methodWrappers = methodCache.get(contextNode.getClass());,if (methodCache != null ) this.methodWrappers = methodCache.get(contextNode.getClass());
AttributeAxisIterator.java,String methodName = method.getName();,if (method != null ) String methodName = method.getName();
AbstractJavaRule.java,ASTCompilationUnit node = (ASTCompilationUnit)i.next();,if ((ASTCompilationUnit)i != null ) ASTCompilationUnit node = (ASTCompilationUnit)i.next();
AbstractPoorMethodCall.java,String methodCall = occurrence.getImage();,if (occurrence != null ) String methodCall = occurrence.getImage();
OverrideBothEqualsAndHashcodeRule.java,Class clazz = cit.getType();,if (cit != null ) Class clazz = cit.getType();
OverrideBothEqualsAndHashcodeRule.java,paramName = param.getImage();,if (param != null ) paramName = param.getImage();
UselessOverridingMethodRule.java,ASTResultType type = node.getResultType();,if (node != null ) ASTResultType type = node.getResultType();
UselessOverridingMethodRule.java,ASTBlock block = node.getBlock();,if (node != null ) ASTBlock block = node.getBlock();
AbstractNcssCountRule.java,numNodes += treeSize.intValue();,if (treeSize != null ) numNodes += treeSize.intValue();
AbstractNcssCountRule.java,lineCount += nodeCount.intValue();,if (nodeCount != null ) lineCount += nodeCount.intValue();
NPathComplexityRule.java,int boolCompReturn = andNodes.size() + orNodes.size();,if (orNodes != null ) int boolCompReturn = andNodes.size() + orNodes.size();
NPathComplexityRule.java,children += element.jjtGetNumChildren();,if (element != null ) children += element.jjtGetNumChildren();
NPathComplexityRule.java,children += element.jjtGetNumChildren();,if (element != null ) children += element.jjtGetNumChildren();
NonThreadSafeSingletonRule.java,ASTStatementExpression expr = (ASTStatementExpression) oper.jjtGetParent();,if (oper != null ) ASTStatementExpression expr = (ASTStatementExpression) oper.jjtGetParent();
NonThreadSafeSingletonRule.java,name = priSuf.getImage();,if (priSuf != null ) name = priSuf.getImage();
NonThreadSafeSingletonRule.java,name = astName.getImage();,if (astName != null ) name = astName.getImage();
BeanMembersShouldSerializeRule.java,imageArray[i] = nodes.get(i).getImage();,if (nodes != null ) imageArray[i] = nodes.get(i).getImage();
BeanMembersShouldSerializeRule.java,List<ASTMethodDeclarator> getSetMethList = new ArrayList<ASTMethodDeclarator>(methods.size());,if (ArrayList<ASTMethodDeclarator>(methods != null ) List<ASTMethodDeclarator> getSetMethList = new ArrayList<ASTMethodDeclarator>(methods.size());
BeanMembersShouldSerializeRule.java,String varName = trimIfPrefix(decl.getImage());,if (trimIfPrefix(decl != null ) String varName = trimIfPrefix(decl.getImage());
BeanMembersShouldSerializeRule.java,String methodName = meth.getImage();,if (meth != null ) String methodName = meth.getImage();
AbstractJUnitRule.java,String className = cid.getImage();,if (cid != null ) String className = cid.getImage();
ConsecutiveLiteralAppendsRule.java,List<NameOccurrence> decl = entry.getValue();,if (entry != null ) List<NameOccurrence> decl = entry.getValue();
ConsecutiveLiteralAppendsRule.java,Node n = no.getLocation();,if (no != null ) Node n = no.getLocation();
ConsecutiveLiteralAppendsRule.java,Node parent = node.jjtGetParent();,if (node != null ) Node parent = node.jjtGetParent();
ConsecutiveLiteralAppendsRule.java,Node parentNode = node.jjtGetParent();,if (node != null ) Node parentNode = node.jjtGetParent();
ConsecutiveLiteralAppendsRule.java,parentNode = parentNode.jjtGetParent();,if (parentNode != null ) parentNode = parentNode.jjtGetParent();
ConsecutiveLiteralAppendsRule.java,int allChildren = parentNode.jjtGetNumChildren();,if (parentNode != null ) int allChildren = parentNode.jjtGetNumChildren();
ConsecutiveLiteralAppendsRule.java,Node nn = node.getTypeNameNode();,if (node != null ) Node nn = node.getTypeNameNode();
StringInstantiationRule.java,NameDeclaration nd = name.getNameDeclaration();,if (name != null ) NameDeclaration nd = name.getNameDeclaration();
TypeOfFunction.java,Class superC = type.getSuperclass();,if (type != null ) Class superC = type.getSuperclass();
AbstractJspRule.java,JspNode node = (JspNode)i.next();,if ((JspNode)i != null ) JspNode node = (JspNode)i.next();
DuplicateJspImportsRule.java,String values = node.getValue();,if (node != null ) String values = node.getValue();
DuplicateJspImportsRule.java,int count = st.countTokens();,if (st != null ) int count = st.countTokens();
DuplicateJspImportsRule.java,String token = st.nextToken();,if (st != null ) String token = st.nextToken();
XPathRule.java,List<XPath> xpaths = nodeNameToXPaths.get(node.toString());,if (nodeNameToXPaths != null ) List<XPath> xpaths = nodeNameToXPaths.get(node.toString());
XPathRule.java,Node n = (Node) j.next();,if (j != null ) Node n = (Node) j.next();
XPathRule.java,Expr node = pending.pop();,if (pending != null ) Expr node = pending.pop();
XPathRule.java,List steps = locationPath.getSteps();,if (locationPath != null ) List steps = locationPath.getSteps();
XPathRule.java,LocationPath relativeLocationPath = xpathFactory.createRelativeLocationPath();,if (xpathFactory != null ) LocationPath relativeLocationPath = xpathFactory.createRelativeLocationPath();
ScopeAndDeclarationFinder.java,Scope s = node.jjtGetParent().getScope();,if (node != null ) Scope s = node.jjtGetParent().getScope();
ScopeAndDeclarationFinder.java,Scope methodScope = node.getScope();,if (node != null ) Scope methodScope = node.getScope();
ScopeAndDeclarationFinder.java,int n = node.jjtGetNumChildren();,if (node != null ) int n = node.jjtGetNumChildren();
ScopeAndDeclarationFinder.java,localScope = node.getScope();,if (node != null ) localScope = node.getScope();
VariableNameDeclaration.java,ASTType typeNode = astVariableDeclaratorId.getTypeNode();,if (astVariableDeclaratorId != null ) ASTType typeNode = astVariableDeclaratorId.getTypeNode();
TypeHelper.java,Class type = vnd.getType();,if (vnd != null ) Class type = vnd.getType();
TypeHelper.java,List<Class> implementors = Arrays.asList(type.getInterfaces());,if (Arrays != null ) List<Class> implementors = Arrays.asList(type.getInterfaces());
TypeHelper.java,Class superC = type.getSuperclass();,if (type != null ) Class superC = type.getSuperclass();
TypeHelper.java,superC = superC.getSuperclass();,if (superC != null ) superC = superC.getSuperclass();
CloneMethodMustImplementCloneable.java,Class clazz = type.getType();,if (type != null ) Class clazz = type.getType();
CloneMethodMustImplementCloneable.java,clazz = clazz.getSuperclass();,if (clazz != null ) clazz = clazz.getSuperclass();
LooseCoupling.java,Class clazzType = node.getType();,if (node != null ) Class clazzType = node.getType();
DFAPanel.java,List kids = node.getChildren();,if (node != null ) List kids = node.getChildren();
DFAPanel.java,labels[i] = exp.toString();,if (exp != null ) labels[i] = exp.toString();
DFAPanel.java,List flow = node.getDataFlowNode().getFlow();,if (node != null ) List flow = node.getDataFlowNode().getFlow();
DFAPanel.java,y = computeDrawPos(inode.getIndex());,if (computeDrawPos(inode != null ) y = computeDrawPos(inode.getIndex());
DFAPanel.java,String idx = String.valueOf(inode.getIndex());,if (String != null ) String idx = String.valueOf(inode.getIndex());
DFAPanel.java,wrapper = (ElementWrapper) nodeList.getSelectedValue();,if (nodeList != null ) wrapper = (ElementWrapper) nodeList.getSelectedValue();
Designer.java,TreeNode n = (TreeNode) e.nextElement();,if (e != null ) TreeNode n = (TreeNode) e.nextElement();
AvoidDuplicateLiteralsRule.java,List<ASTLiteral> occurrences = literals.get(node.getImage());,if (literals != null ) List<ASTLiteral> occurrences = literals.get(node.getImage());
AbstractRule.java,private String name = getClass().getName();,if (getClass() != null ) private String name = getClass().getName();
AbstractRule.java,private String ruleClass = getClass().getName();,if (getClass() != null ) private String ruleClass = getClass().getName();
AbstractRule.java,bools[i] = values[i].booleanValue();,if (values[i] != null ) bools[i] = values[i].booleanValue();
AbstractRule.java,ints[i] = values[i].intValue();,if (values[i] != null ) ints[i] = values[i].intValue();
AbstractRule.java,doubles[i] = values[i].doubleValue();,if (values[i] != null ) doubles[i] = values[i].doubleValue();
Functions.java,LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();,if (languageVersion != null ) LanguageVersionHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();
XPathRule.java,List<XPath> xpaths = nodeNameToXPaths.get(compilationUnit.toString());,if (nodeNameToXPaths != null ) List<XPath> xpaths = nodeNameToXPaths.get(compilationUnit.toString());
XPathRule.java,BaseXPath xpath = createXPath(relativeLocationPath.getText());,if (createXPath(relativeLocationPath != null ) BaseXPath xpath = createXPath(relativeLocationPath.getText());
RuleSetToDocs.java,DocumentBuilder parser = DocumentBuilderFactory.newInstance().newDocumentBuilder();,if (DocumentBuilderFactory != null ) DocumentBuilder parser = DocumentBuilderFactory.newInstance().newDocumentBuilder();
RuleSetToDocs.java,DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();,if (DocumentBuilderFactory != null ) DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
RuleSetToDocs.java,DocumentBuilder parser = factory.newDocumentBuilder();,if (factory != null ) DocumentBuilder parser = factory.newDocumentBuilder();
RuleSetToDocs.java,doc = parser.newDocument();,if (parser != null ) doc = parser.newDocument();
RuleSetToDocs.java,TransformerFactory factory = TransformerFactory.newInstance();,if (TransformerFactory != null ) TransformerFactory factory = TransformerFactory.newInstance();
RuleSetToDocs.java,File[] files = file.listFiles();,if (file != null ) File[] files = file.listFiles();
RuleSetToDocs.java,line = br.readLine();,if (br != null ) line = br.readLine();
RuleSetToDocs.java,DocumentBuilder parser = DocumentBuilderFactory.newInstance().newDocumentBuilder();,if (DocumentBuilderFactory != null ) DocumentBuilder parser = DocumentBuilderFactory.newInstance().newDocumentBuilder();
MoreThanOneLoggerRule.java,count = stack.pop();,if (stack != null ) count = stack.pop();
PMDJEditPlugin.java,"String msg=""Error while processing "" + buffer.getPath();","if (buffer != null ) String msg=""Error while processing "" + buffer.getPath();"
Fault.java,Exception reason = exception.getReason();,if (exception != null ) Exception reason = exception.getReason();
Fault.java,this.message = exception.getMessage();,if (exception != null ) this.message = exception.getMessage();
Fault.java,"this.message = exception.getMessage() + ""; "" + reason.toString();","if (reason != null ) this.message = exception.getMessage() + ""; "" + reason.toString();"
Fault.java,"this.message = exception.getMessage() + ""; "" + reason.getMessage();","if (reason != null ) this.message = exception.getMessage() + ""; "" + reason.getMessage();"
JSPTokenizer.java,StringBuffer buffer = tokens.getCodeBuffer();,if (tokens != null ) StringBuffer buffer = tokens.getCodeBuffer();
JavaTokenizer.java,StringBuffer buffer = tokens.getCodeBuffer();,if (tokens != null ) StringBuffer buffer = tokens.getCodeBuffer();
FileStorage.java,String key = (String)i.next();,if ((String)i != null ) String key = (String)i.next();
IDEStorage.java,String key = (String)i.next();,if ((String)i != null ) String key = (String)i.next();
Plugin.java,TokenEntry mark = (TokenEntry)i.next();,if ((TokenEntry)i != null ) TokenEntry mark = (TokenEntry)i.next();
Plugin.java,Project project = (Project)context.getElement();,if ((Project)context != null ) Project project = (Project)context.getElement();
Plugin.java,Project project = (Project)context.getElement();,if ((Project)context != null ) Project project = (Project)context.getElement();
Plugin.java,LogPage page = LogManager.getLogManager().getMsgPage();,if (LogManager != null ) LogPage page = LogManager.getLogManager().getMsgPage();
Plugin.java,Element doc = contextMenu.getContext().getElement();,if (contextMenu != null ) Element doc = contextMenu.getContext().getElement();
Plugin.java,LogPage page = LogManager.getLogManager().getMsgPage();,if (LogManager != null ) LogPage page = LogManager.getLogManager().getMsgPage();
Plugin.java,RuleViolation rv = (RuleViolation)i.next();,if ((RuleViolation)i != null ) RuleViolation rv = (RuleViolation)i.next();
RuleSetWriterImpl.java,final Document doc = documentBuilder.newDocument();,if (documentBuilder != null ) final Document doc = documentBuilder.newDocument();
RuleSetWriterImpl.java,final String className = rule.getClass().getName();,if (rule != null ) final String className = rule.getClass().getName();
RuleSetWriterImpl.java,final Enumeration keys = properties.keys();,if (properties != null ) final Enumeration keys = properties.keys();
RuleSetWriterImpl.java,final Object key = keys.nextElement();,if (keys != null ) final Object key = keys.nextElement();
SelectedRules.java,RuleSet rs = itt.next();,if (itt != null ) RuleSet rs = itt.next();
SettingsPanel.java,String selected = fdlg.getDirectory() + fdlg.getFile();,if (fdlg != null ) String selected = fdlg.getDirectory() + fdlg.getFile();
SettingsPanel.java,String selected = fdlg.getDirectory() + fdlg.getFile();,if (fdlg != null ) String selected = fdlg.getDirectory() + fdlg.getFile();
SettingsPanel.java,int index = locationToIndex(e.getPoint());,if (locationToIndex(e != null ) int index = locationToIndex(e.getPoint());
SettingsPanel.java,int index = locationToIndex(e.getPoint());,if (locationToIndex(e != null ) int index = locationToIndex(e.getPoint());
SettingsPanel.java,List examples = rules.getRule(box).getExamples();,if (rules != null ) List examples = rules.getRule(box).getExamples();
SettingsPanel.java,ListModel model = rulesList.getModel();,if (rulesList != null ) ListModel model = rulesList.getModel();
SettingsPanel.java,ListModel model = rulesList.getModel();,if (rulesList != null ) ListModel model = rulesList.getModel();
SettingsPanel.java,Set<Rule> allRules = ruleSets.getAllRules();,if (ruleSets != null ) Set<Rule> allRules = ruleSets.getAllRules();
SettingsPanel.java,RuleSet selectedRules = rules.getSelectedRules();,if (rules != null ) RuleSet selectedRules = rules.getSelectedRules();
Version.java,String source = config.getSource();,if (config != null ) String source = config.getSource();
FileStorage.java,String key = (String)i.next();,if ((String)i != null ) String key = (String)i.next();
IDEStorage.java,String key = (String)i.next();,if ((String)i != null ) String key = (String)i.next();
Plugin.java,TokenEntry mark = (TokenEntry)i.next();,if ((TokenEntry)i != null ) TokenEntry mark = (TokenEntry)i.next();
Plugin.java,Project project = (Project)context.getElement();,if ((Project)context != null ) Project project = (Project)context.getElement();
Plugin.java,Project project = (Project)context.getElement();,if ((Project)context != null ) Project project = (Project)context.getElement();
Plugin.java,LogPage page = LogManager.getLogManager().getMsgPage();,if (LogManager != null ) LogPage page = LogManager.getLogManager().getMsgPage();
Plugin.java,Element doc = contextMenu.getContext().getElement();,if (contextMenu != null ) Element doc = contextMenu.getContext().getElement();
Plugin.java,LogPage page = LogManager.getLogManager().getMsgPage();,if (LogManager != null ) LogPage page = LogManager.getLogManager().getMsgPage();
Plugin.java,RuleViolation rv = (RuleViolation)i.next();,if ((RuleViolation)i != null ) RuleViolation rv = (RuleViolation)i.next();
SelectedRules.java,RuleSet rs = (RuleSet)i.next();,if ((RuleSet)i != null ) RuleSet rs = (RuleSet)i.next();
SelectedRules.java,Rule rule = (Rule)j.next();,if ((Rule)j != null ) Rule rule = (Rule)j.next();
SelectedRules.java,Rule rule = (Rule)i.next();,if ((Rule)i != null ) Rule rule = (Rule)i.next();
SelectedRules.java,Rule rule = (Rule)i.next();,if ((Rule)i != null ) Rule rule = (Rule)i.next();
SelectedRules.java,Rule rule = (Rule)i.next();,if ((Rule)i != null ) Rule rule = (Rule)i.next();
SettingsPanel.java,String selected = fdlg.getDirectory() + fdlg.getFile();,if (fdlg != null ) String selected = fdlg.getDirectory() + fdlg.getFile();
SettingsPanel.java,int index = locationToIndex(e.getPoint());,if (locationToIndex(e != null ) int index = locationToIndex(e.getPoint());
SettingsPanel.java,int index = locationToIndex(e.getPoint());,if (locationToIndex(e != null ) int index = locationToIndex(e.getPoint());
SettingsPanel.java,List examples = rules.getRule(box).getExamples();,if (rules != null ) List examples = rules.getRule(box).getExamples();
SettingsPanel.java,JList rulesList = new CheckboxList(rules.getAllBoxes());,if (CheckboxList(rules != null ) JList rulesList = new CheckboxList(rules.getAllBoxes());
Version.java,JProject project = (JProject) context.getProject();,if (context != null ) JProject project = (JProject) context.getProject();
SelectedRules.java,RuleSet rs = (RuleSet)i.next();,if ((RuleSet)i != null ) RuleSet rs = (RuleSet)i.next();
SelectedRules.java,Rule rule = (Rule)j.next();,if ((Rule)j != null ) Rule rule = (Rule)j.next();
SelectedRules.java,Rule rule = (Rule)i.next();,if ((Rule)i != null ) Rule rule = (Rule)i.next();
SelectedRules.java,Rule rule = (Rule)i.next();,if ((Rule)i != null ) Rule rule = (Rule)i.next();
SelectedRules.java,Rule rule = (Rule)i.next();,if ((Rule)i != null ) Rule rule = (Rule)i.next();
SettingsPanel.java,JList rulesList = new CheckboxList(rules.getAllBoxes());,if (CheckboxList(rules != null ) JList rulesList = new CheckboxList(rules.getAllBoxes());
CPPTokenizer.java,StringBuffer sb = sourceCode.getCodeBuffer();,if (sourceCode != null ) StringBuffer sb = sourceCode.getCodeBuffer();
CPPTokenizer.java,Token currToken = CPPParserTokenManager.getNextToken();,if (CPPParserTokenManager != null ) Token currToken = CPPParserTokenManager.getNextToken();
CPPTokenizer.java,currToken = CPPParserTokenManager.getNextToken();,if (CPPParserTokenManager != null ) currToken = CPPParserTokenManager.getNextToken();
ParseException.java,retval += expected.toString();,if (expected != null ) retval += expected.toString();
StatisticalRuleHelper.java,total += point.getScore();,if (point != null ) total += point.getScore();
StatisticalRuleHelper.java,low = dataPoints.first().getScore();,if (dataPoints != null ) low = dataPoints.first().getScore();
StatisticalRuleHelper.java,high = dataPoints.last().getScore();,if (dataPoints != null ) high = dataPoints.last().getScore();
ParseException.java,retval += expected.toString();,if (expected != null ) retval += expected.toString();
JJTJspParserState.java,nodes = new java.util.Stack();,if (java != null ) nodes = new java.util.Stack();
JJTJspParserState.java,marks = new java.util.Stack();,if (java != null ) marks = new java.util.Stack();
JspParser.java,int[] oldentry = (int[])(e.nextElement());,if ((int[])(e != null ) int[] oldentry = (int[])(e.nextElement());
NpathComplexityRule.java,int boolCompReturn = andNodes.size() + orNodes.size();,if (orNodes != null ) int boolCompReturn = andNodes.size() + orNodes.size();
NpathComplexityRule.java,children += element.jjtGetNumChildren();,if (element != null ) children += element.jjtGetNumChildren();
NpathComplexityRule.java,children += element.jjtGetNumChildren();,if (element != null ) children += element.jjtGetNumChildren();
NpathComplexityRule.java,int boolCompReturn = andNodes.size() + orNodes.size();,if (orNodes != null ) int boolCompReturn = andNodes.size() + orNodes.size();
NpathComplexityRule.java,children += element.jjtGetNumChildren();,if (element != null ) children += element.jjtGetNumChildren();
NpathComplexityRule.java,children += element.jjtGetNumChildren();,if (element != null ) children += element.jjtGetNumChildren();
TooManyFieldsRule.java,String key = clazz.getImage();,if (clazz != null ) String key = clazz.getImage();
DataflowAnomalyAnalysisRule.java,DataFlowNode inode = pathIterator.next();,if (pathIterator != null ) DataFlowNode inode = pathIterator.next();
DataflowAnomalyAnalysisRule.java,final Usage lastUsage = hash.get(va.getVariableName());,if (hash != null ) final Usage lastUsage = hash.get(va.getVariableName());
DataflowAnomalyAnalysisRule.java,final int startLine = u.node.getLine();,if (u != null ) final int startLine = u.node.getLine();
DataflowAnomalyAnalysisRule.java,final int endLine = inode.getLine();,if (inode != null ) final int endLine = inode.getLine();
DataflowAnomalyAnalysisRule.java,final Node lastNode = inode.getNode();,if (inode != null ) final Node lastNode = inode.getNode();
DataflowAnomalyAnalysisRule.java,final Node firstNode = u.node.getNode();,if (u != null ) final Node firstNode = u.node.getNode();
LooseCouplingRule.java,String typeName = node.getImage();,if (node != null ) String typeName = node.getImage();
SignatureDeclareThrowsExceptionRule.java,Node parent = exception.jjtGetParent().jjtGetParent();,if (exception != null ) Node parent = exception.jjtGetParent().jjtGetParent();
OverrideBothEqualsAndHashcode.java,Class clazz = cit.getType();,if (cit != null ) Class clazz = cit.getType();
OverrideBothEqualsAndHashcode.java,paramName = param.getImage();,if (param != null ) paramName = param.getImage();
UselessOperationOnImmutable.java,String variableName = var.getImage();,if (var != null ) String variableName = var.getImage();
UselessOperationOnImmutable.java,Node sn = no.getLocation();,if (no != null ) Node sn = no.getLocation();
UselessOperationOnImmutable.java,Node primaryExpression = sn.jjtGetParent().jjtGetParent();,if (sn != null ) Node primaryExpression = sn.jjtGetParent().jjtGetParent();
UselessOperationOnImmutable.java,ASTPrimarySuffix suffix = iterator.next();,if (iterator != null ) ASTPrimarySuffix suffix = iterator.next();
UselessOperationOnImmutable.java,ASTType type = node.getTypeNode();,if (node != null ) ASTType type = node.getTypeNode();
UselessOverridingMethod.java,ASTResultType type = node.getResultType();,if (node != null ) ASTResultType type = node.getResultType();
UselessOverridingMethod.java,ASTBlock block = node.getBlock();,if (node != null ) ASTBlock block = node.getBlock();
CyclomaticComplexity.java,Entry entry = entryStack.peek();,if (entryStack != null ) Entry entry = entryStack.peek();
CyclomaticComplexity.java,int childCount = node.jjtGetNumChildren();,if (node != null ) int childCount = node.jjtGetNumChildren();
CyclomaticComplexity.java,Entry classEntry = entryStack.pop();,if (entryStack != null ) Entry classEntry = entryStack.pop();
CyclomaticComplexity.java,Entry methodEntry = entryStack.pop();,if (entryStack != null ) Entry methodEntry = entryStack.pop();
CyclomaticComplexity.java,Entry classEntry = entryStack.peek();,if (entryStack != null ) Entry classEntry = entryStack.peek();
CyclomaticComplexity.java,Entry classEntry = entryStack.pop();,if (entryStack != null ) Entry classEntry = entryStack.pop();
CyclomaticComplexity.java,Entry constructorEntry = entryStack.pop();,if (entryStack != null ) Entry constructorEntry = entryStack.pop();
CyclomaticComplexity.java,Entry classEntry = entryStack.peek();,if (entryStack != null ) Entry classEntry = entryStack.peek();
AssignmentInOperand.java,Node parent = node.jjtGetParent();,if (node != null ) Node parent = node.jjtGetParent();
SuspiciousOctalEscape.java,String image = node.getImage();,if (node != null ) String image = node.getImage();
AccessorClassGeneration.java,String aName = li.previous();,if (li != null ) String aName = li.previous();
AccessorClassGeneration.java,String interfaceName = node.getImage();,if (node != null ) String interfaceName = node.getImage();
AccessorClassGeneration.java,String interfaceName = node.getImage();,if (node != null ) String interfaceName = node.getImage();
AccessorClassGeneration.java,String className = node.getImage();,if (node != null ) String className = node.getImage();
AccessorClassGeneration.java,String className = node.getImage();,if (node != null ) String className = node.getImage();
AccessorClassGeneration.java,ASTConstructorDeclaration cd = constructors.next();,if (constructors != null ) ASTConstructorDeclaration cd = constructors.next();
AccessorClassGeneration.java,AllocData ad = allocations.next();,if (allocations != null ) AllocData ad = allocations.next();
AvoidReassigningParameters.java,VariableNameDeclaration decl = entry.getKey();,if (entry != null ) VariableNameDeclaration decl = entry.getKey();
AvoidReassigningParameters.java,List<NameOccurrence> usages = entry.getValue();,if (entry != null ) List<NameOccurrence> usages = entry.getValue();
CloseResource.java,ASTType type = var.getTypeNode();,if (var != null ) ASTType type = var.getTypeNode();
CloseResource.java,String name = oName.getImage();,if (oName != null ) String name = oName.getImage();
ConstructorCallsOverridableMethod.java,int i = node.jjtGetNumChildren();,if (node != null ) int i = node.jjtGetNumChildren();
ConstructorCallsOverridableMethod.java,int numOfArguments = args.getArgumentCount();,if (args != null ) int numOfArguments = args.getArgumentCount();
ConstructorCallsOverridableMethod.java,String name = child.getImage();//special case,if (case != null ) String name = child.getImage();//special case
ConstructorCallsOverridableMethod.java,String name = child.getImage();,if (child != null ) String name = child.getImage();
ConstructorCallsOverridableMethod.java,String value = st.nextToken();,if (st != null ) String value = st.nextToken();
ConstructorCallsOverridableMethod.java,String name = child.getImage();,if (child != null ) String name = child.getImage();
ConstructorCallsOverridableMethod.java,count = aa.getArgumentCount();,if (aa != null ) count = aa.getArgumentCount();
ConstructorCallsOverridableMethod.java,name = eci.getImage();,if (eci != null ) name = eci.getImage();
ConstructorCallsOverridableMethod.java,calledMethods = Collections.emptyList();,if (Collections != null ) calledMethods = Collections.emptyList();
ConstructorCallsOverridableMethod.java,allMethodsOfClass = Collections.emptyMap();,if (Collections != null ) allMethodsOfClass = Collections.emptyMap();
ConstructorCallsOverridableMethod.java,calledConstructors = Collections.emptyList();,if (Collections != null ) calledConstructors = Collections.emptyList();
ConstructorCallsOverridableMethod.java,allPrivateConstructorsOfClass = Collections.emptyMap();,if (Collections != null ) allPrivateConstructorsOfClass = Collections.emptyMap();
ConstructorCallsOverridableMethod.java,String className = node.getImage();,if (node != null ) String className = node.getImage();
ConstructorCallsOverridableMethod.java,String methName = h.getASTMethodDeclarator().getImage();,if (h != null ) String methName = h.getASTMethodDeclarator().getImage();
ConstructorCallsOverridableMethod.java,int count = h.getASTMethodDeclarator().getParameterCount();,if (h != null ) int count = h.getASTMethodDeclarator().getParameterCount();
ConstructorCallsOverridableMethod.java,int paramCount = ch.getASTConstructorDeclaration().getParameterCount();,if (ch != null ) int paramCount = ch.getASTConstructorDeclaration().getParameterCount();
ConstructorCallsOverridableMethod.java,MethodHolder h = entry.getKey();,if (entry != null ) MethodHolder h = entry.getKey();
ConstructorCallsOverridableMethod.java,List<MethodInvocation> calledMeths = entry.getValue();,if (entry != null ) List<MethodInvocation> calledMeths = entry.getValue();
ConstructorCallsOverridableMethod.java,MethodInvocation meth = calledMethsIter.next();,if (calledMethsIter != null ) MethodInvocation meth = calledMethsIter.next();
ConstructorCallsOverridableMethod.java,ConstructorHolder ch = entry.getKey();,if (entry != null ) ConstructorHolder ch = entry.getKey();
ConstructorCallsOverridableMethod.java,List<MethodInvocation> calledMeths = entry.getValue();,if (entry != null ) List<MethodInvocation> calledMeths = entry.getValue();
ConstructorCallsOverridableMethod.java,MethodInvocation meth = calledMethsIter.next();//CCE,if (calledMethsIter != null ) MethodInvocation meth = calledMethsIter.next();//CCE
ConstructorCallsOverridableMethod.java,String methName = meth.getName();,if (meth != null ) String methName = meth.getName();
ConstructorCallsOverridableMethod.java,int methArgCount = meth.getArgumentCount();,if (meth != null ) int methArgCount = meth.getArgumentCount();
ConstructorCallsOverridableMethod.java,String matchName = h.getASTMethodDeclarator().getImage();,if (h != null ) String matchName = h.getASTMethodDeclarator().getImage();
ConstructorCallsOverridableMethod.java,int matchParamCount = h.getASTMethodDeclarator().getParameterCount();,if (h != null ) int matchParamCount = h.getASTMethodDeclarator().getParameterCount();
ConstructorCallsOverridableMethod.java,ConstructorInvocation calledC = ch.getCalledConstructor();,if (ch != null ) ConstructorInvocation calledC = ch.getCalledConstructor();
ConstructorCallsOverridableMethod.java,int cCount = calledC.getArgumentCount();,if (calledC != null ) int cCount = calledC.getArgumentCount();
ConstructorCallsOverridableMethod.java,ASTExplicitConstructorInvocation eci = ch.getASTExplicitConstructorInvocation();,if (ch != null ) ASTExplicitConstructorInvocation eci = ch.getASTExplicitConstructorInvocation();
ConstructorCallsOverridableMethod.java,AccessNode parent = (AccessNode) node.jjtGetParent();,if (node != null ) AccessNode parent = (AccessNode) node.jjtGetParent();
ConstructorCallsOverridableMethod.java,List<String> packClass = meth.getQualifierNames();,if (meth != null ) List<String> packClass = meth.getQualifierNames();
CouplingBetweenObjects.java,ClassScope clzScope = nameNode.getScope().getEnclosingClassScope();,if (nameNode != null ) ClassScope clzScope = nameNode.getScope().getEnclosingClassScope();
SimplifyBooleanReturns.java,ASTResultType r = node.getResultType();,if (node != null ) ASTResultType r = node.getResultType();
AvoidCallingFinalize.java,MethodScope meth = name.getScope().getEnclosingMethodScope();,if (name != null ) MethodScope meth = name.getScope().getEnclosingMethodScope();
AvoidCallingFinalize.java,MethodScope meth = pp.getScope().getEnclosingMethodScope();,if (pp != null ) MethodScope meth = pp.getScope().getEnclosingMethodScope();
BeanMembersShouldSerializeRule.java,imageArray[i] = nodes.get(i).getImage();,if (nodes != null ) imageArray[i] = nodes.get(i).getImage();
BeanMembersShouldSerializeRule.java,List<ASTMethodDeclarator> getSetMethList = new ArrayList<ASTMethodDeclarator>(methods.size());,if (ArrayList<ASTMethodDeclarator>(methods != null ) List<ASTMethodDeclarator> getSetMethList = new ArrayList<ASTMethodDeclarator>(methods.size());
BeanMembersShouldSerializeRule.java,String varName = trimIfPrefix(decl.getImage());,if (trimIfPrefix(decl != null ) String varName = trimIfPrefix(decl.getImage());
BeanMembersShouldSerializeRule.java,String methodName = meth.getImage();,if (meth != null ) String methodName = meth.getImage();
MoreThanOneLogger.java,count = stack.pop();,if (stack != null ) count = stack.pop();
AvoidFieldNameMatchingMethodName.java,String varName = node.getVariableName();,if (node != null ) String varName = node.getVariableName();
AvoidFieldNameMatchingMethodName.java,varName = varName.toLowerCase();,if (varName != null ) varName = varName.toLowerCase();
MethodNamingConventions.java,String methodName = node.getImage();,if (node != null ) String methodName = node.getImage();
VariableNamingConventions.java,String varName = childNodeId.getImage();,if (childNodeId != null ) String varName = childNodeId.getImage();
UnusedFormalParameterRule.java,VariableNameDeclaration nameDecl = entry.getKey();,if (entry != null ) VariableNameDeclaration nameDecl = entry.getKey();
UnusedPrivateFieldRule.java,VariableNameDeclaration decl = entry.getKey();,if (entry != null ) VariableNameDeclaration decl = entry.getKey();
UnusedPrivateMethodRule.java,Node occNode = occ.getLocation();,if (occ != null ) Node occNode = occ.getLocation();
UnusedPrivateMethodRule.java,ASTMethodDeclarator node = (ASTMethodDeclarator) mnd.getNode();,if (mnd != null ) ASTMethodDeclarator node = (ASTMethodDeclarator) mnd.getNode();
AbstractRuleChainVisitor.java,visits += nodes.size();,if (nodes != null ) visits += nodes.size();
PMD.java,SourceTypeHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();,if (languageVersion != null ) SourceTypeHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();
RuleChain.java,Language language = ruleSet.getLanguage();,if (ruleSet != null ) Language language = ruleSet.getLanguage();
AbstractJspRule.java,JspNode node = (JspNode)i.next();,if ((JspNode)i != null ) JspNode node = (JspNode)i.next();
Benchmark.java,SourceTypeHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();,if (languageVersion != null ) SourceTypeHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();
SimpleNodeTest.java,Iterator iter = methods.iterator();,if (methods != null ) Iterator iter = methods.iterator();
SimpleNodeTest.java,Iterator i = name.iterator();,if (name != null ) Iterator i = name.iterator();
SimpleNodeTest.java,SimpleNode node = (SimpleNode) i.next();,if (i != null ) SimpleNode node = (SimpleNode) i.next();
SimpleNodeTest.java,Iterator i = name.iterator();,if (name != null ) Iterator i = name.iterator();
SimpleNodeTest.java,SimpleNode node = (SimpleNode) i.next();,if (i != null ) SimpleNode node = (SimpleNode) i.next();
AcceptanceTest.java,SimpleNode node = vnd.getNode();,if (vnd != null ) SimpleNode node = vnd.getNode();
AbstractRuleChainVisitor.java,List<SimpleNode> nodes = nodeNameToNodes.get(node.toString());,if (nodeNameToNodes != null ) List<SimpleNode> nodes = nodeNameToNodes.get(node.toString());
SimpleNode.java,result = this.jjtGetParent();,if (this != null ) result = this.jjtGetParent();
SimpleNode.java,result = result.jjtGetParent();,if (result != null ) result = result.jjtGetParent();
SimpleNode.java,parentNode = parentNode.jjtGetParent();,if (parentNode != null ) parentNode = parentNode.jjtGetParent();
SimpleNode.java,parentNode = parentNode.jjtGetParent();,if (parentNode != null ) parentNode = parentNode.jjtGetParent();
SimpleNode.java,DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();,if (DocumentBuilderFactory != null ) DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
SimpleNode.java,DocumentBuilder db = dbf.newDocumentBuilder();,if (dbf != null ) DocumentBuilder db = dbf.newDocumentBuilder();
SimpleNode.java,Document document = db.newDocument();,if (db != null ) Document document = db.newDocument();
SimpleNode.java,Document ownerDocument = parentNode.getOwnerDocument();,if (parentNode != null ) Document ownerDocument = parentNode.getOwnerDocument();
SimpleNode.java,Attribute attr = iter.next();,if (iter != null ) Attribute attr = iter.next();
SimpleNode.java,SimpleNode child = (SimpleNode) iter.next();,if (iter != null ) SimpleNode child = (SimpleNode) iter.next();
DaaRule.java,final SimpleNode lastNode = inode.getSimpleNode();,if (inode != null ) final SimpleNode lastNode = inode.getSimpleNode();
DaaRule.java,final SimpleNode firstNode = u.node.getSimpleNode();,if (u != null ) final SimpleNode firstNode = u.node.getSimpleNode();
Linker.java,String label = node.getSimpleNode().getImage();,if (node != null ) String label = node.getSimpleNode().getImage();
AbstractJspRule.java,SimpleNode node = (SimpleNode)i.next();,if ((SimpleNode)i != null ) SimpleNode node = (SimpleNode)i.next();
AbstractInefficientZeroCheck.java,SimpleNode nameNode = node.getTypeNameNode();,if (node != null ) SimpleNode nameNode = node.getTypeNameNode();
BeanMembersShouldSerializeRule.java,imageArray[i] = simpleNodes.get(i).getImage();,if (simpleNodes != null ) imageArray[i] = simpleNodes.get(i).getImage();
SymbolTableTestRule.java,SimpleNode location = no.getLocation();,if (no != null ) SimpleNode location = no.getLocation();
UnusedPrivateMethodRule.java,SimpleNode occNode = occ.getLocation();,if (occ != null ) SimpleNode occNode = occ.getLocation();
UselessOperationOnImmutable.java,SimpleNode sn = no.getLocation();,if (no != null ) SimpleNode sn = no.getLocation();
XPathRule.java,SimpleNode n = (SimpleNode) j.next();,if (j != null ) SimpleNode n = (SimpleNode) j.next();
AssignmentToNonFinalStatic.java,SimpleNode node = occ.getLocation();,if (occ != null ) SimpleNode node = occ.getLocation();
ImmutableField.java,SimpleNode node = occ.getLocation();,if (occ != null ) SimpleNode node = occ.getLocation();
SingularField.java,SimpleNode location = no.getLocation();,if (no != null ) SimpleNode location = no.getLocation();
UnsynchronizedStaticDateFormatter.java,SimpleNode n = occ.getLocation();,if (occ != null ) SimpleNode n = occ.getLocation();
UseStringBufferForStringAppends.java,SimpleNode name = no.getLocation();,if (no != null ) SimpleNode name = no.getLocation();
ConsecutiveLiteralAppends.java,SimpleNode n = no.getLocation();,if (no != null ) SimpleNode n = no.getLocation();
ConsecutiveLiteralAppends.java,SimpleNode nn = node.getTypeNameNode();,if (node != null ) SimpleNode nn = node.getTypeNameNode();
InsufficientStringBufferDeclaration.java,SimpleNode n = no.getLocation();,if (no != null ) SimpleNode n = no.getLocation();
UselessStringValueOf.java,SimpleJavaNode gp = (SimpleJavaNode) parent.jjtGetParent();,if (parent != null ) SimpleJavaNode gp = (SimpleJavaNode) parent.jjtGetParent();
ClassScope.java,SimpleNode n = occurrence.getLocation();,if (occurrence != null ) SimpleNode n = occurrence.getLocation();
ClassScope.java,SimpleNode n = occurrence.getLocation();,if (occurrence != null ) SimpleNode n = occurrence.getLocation();
LocalScope.java,SimpleNode n = occurrence.getLocation();,if (occurrence != null ) SimpleNode n = occurrence.getLocation();
MethodScope.java,SimpleNode n = occurrence.getLocation();,if (occurrence != null ) SimpleNode n = occurrence.getLocation();
Designer.java,Source source = new DOMSource(node.asXml());,if (DOMSource(node != null ) Source source = new DOMSource(node.asXml());
SourceCodePanel.java,final SimpleNode node = (SimpleNode) e.getParameter();,if (e != null ) final SimpleNode node = (SimpleNode) e.getParameter();
AcceptanceTest.java,IDataFlowNode inode = decl.getDataFlowNode();,if (decl != null ) IDataFlowNode inode = decl.getDataFlowNode();
GeneralFiddlingTest.java,IDataFlowNode n = meth.getDataFlowNode();,if (meth != null ) IDataFlowNode n = meth.getDataFlowNode();
DaaRule.java,IDataFlowNode inode = pathIterator.next();,if (pathIterator != null ) IDataFlowNode inode = pathIterator.next();
DataFlowNode.java,this.line = node.getBeginLine();,if (node != null ) this.line = node.getBeginLine();
DataFlowNode.java,DataFlowNode parent = this.dataFlow.getLast();,if (this != null ) DataFlowNode parent = this.dataFlow.getLast();
DataFlowNode.java,String tmp = type.toString();,if (type != null ) String tmp = type.toString();
DataFlowNode.java,int newTmpInt = Integer.parseInt(st.nextToken());,if (Integer != null ) int newTmpInt = Integer.parseInt(st.nextToken());
Linker.java,IDataFlowNode node = stackObject.getDataFlowNode();,if (stackObject != null ) IDataFlowNode node = stackObject.getDataFlowNode();
Linker.java,IDataFlowNode node = so.getDataFlowNode();,if (so != null ) IDataFlowNode node = so.getDataFlowNode();
Linker.java,IDataFlowNode node = so.getDataFlowNode();,if (so != null ) IDataFlowNode node = so.getDataFlowNode();
StartOrEndDataFlowNode.java,DataFlowNode parent = this.dataFlow.getLast();,if (this != null ) DataFlowNode parent = this.dataFlow.getLast();
CurrentPath.java,IDataFlowNode inode = list.getLast();,if (list != null ) IDataFlowNode inode = list.getLast();
DAAPathFinder.java,IDataFlowNode inode = currentPath.getLast();,if (currentPath != null ) IDataFlowNode inode = currentPath.getLast();
DAAPathFinder.java,IDataFlowNode inode = currentPath.getLast();,if (currentPath != null ) IDataFlowNode inode = currentPath.getLast();
DAAPathFinder.java,IDataFlowNode doBranch = currentPath.getDoBranchNodeFromFirstDoStatement();,if (currentPath != null ) IDataFlowNode doBranch = currentPath.getDoBranchNodeFromFirstDoStatement();
DAAPathFinder.java,IDataFlowNode inode = currentPath.getLast();,if (currentPath != null ) IDataFlowNode inode = currentPath.getLast();
DAAPathFinder.java,IDataFlowNode inode = currentPath.getLast();,if (currentPath != null ) IDataFlowNode inode = currentPath.getLast();
DAAPathFinder.java,IDataFlowNode inode = currentPath.getLast();,if (currentPath != null ) IDataFlowNode inode = currentPath.getLast();
VariableAccessVisitor.java,IDataFlowNode inode = node.getDataFlowNode();,if (node != null ) IDataFlowNode inode = node.getDataFlowNode();
RuleViolationTest.java,RuleViolation.RuleViolationComparator comp = new RuleViolation.RuleViolationComparator();,if (RuleViolation != null ) RuleViolation.RuleViolationComparator comp = new RuleViolation.RuleViolationComparator();
RuleViolationTest.java,RuleViolation.RuleViolationComparator comp = new RuleViolation.RuleViolationComparator();,if (RuleViolation != null ) RuleViolation.RuleViolationComparator comp = new RuleViolation.RuleViolationComparator();
RuleViolationTest.java,RuleViolation.RuleViolationComparator comp = new RuleViolation.RuleViolationComparator();,if (RuleViolation != null ) RuleViolation.RuleViolationComparator comp = new RuleViolation.RuleViolationComparator();
Report.java,IRuleViolation rv = iter.next();,if (iter != null ) IRuleViolation rv = iter.next();
RuleViolation.java,this.filename = ctx.getSourceCodeFilename();,if (ctx != null ) this.filename = ctx.getSourceCodeFilename();
RuleViolation.java,beginLine = node.getBeginLine();,if (node != null ) beginLine = node.getBeginLine();
RuleViolation.java,endLine = node.getEndLine();,if (node != null ) endLine = node.getEndLine();
RuleViolation.java,beginColumn = node.getBeginColumn();,if (node != null ) beginColumn = node.getBeginColumn();
RuleViolation.java,endColumn = node.getEndColumn();,if (node != null ) endColumn = node.getEndColumn();
ReportHTMLPrintVisitor.java,IRuleViolation vio = vnode.getRuleViolation();,if (vnode != null ) IRuleViolation vio = vnode.getRuleViolation();
EmacsRenderer.java,IRuleViolation rv = violations.next();,if (violations != null ) IRuleViolation rv = violations.next();
HTMLRenderer.java,IRuleViolation rv = violations.next();,if (violations != null ) IRuleViolation rv = violations.next();
IDEAJRenderer.java,IRuleViolation rv = violations.next();,if (violations != null ) IRuleViolation rv = violations.next();
IDEAJRenderer.java,IRuleViolation rv = violations.next();,if (violations != null ) IRuleViolation rv = violations.next();
OnTheFlyRenderer.java,Iterator<IRuleViolation> violations = report.iterator();,if (report != null ) Iterator<IRuleViolation> violations = report.iterator();
TextPadRenderer.java,IRuleViolation rv = violations.next();,if (violations != null ) IRuleViolation rv = violations.next();
TextRenderer.java,IRuleViolation rv = violations.next();,if (violations != null ) IRuleViolation rv = violations.next();
VBHTMLRenderer.java,IRuleViolation rv = violations.next();,if (violations != null ) IRuleViolation rv = violations.next();
XMLRenderer.java,IRuleViolation rv = violations.next();,if (violations != null ) IRuleViolation rv = violations.next();
Designer.java,SourceTypeHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();,if (languageVersion != null ) SourceTypeHandler languageVersionHandler = languageVersion.getLanguageVersionHandler();
PMDJEditPlugin.java,selectedFile = chooser.getSelectedFile();,if (chooser != null ) selectedFile = chooser.getSelectedFile();
PMDJEditPlugin.java,String path = buffer.getPath();,if (buffer != null ) String path = buffer.getPath();
PMDJEditPlugin.java,VFS vfs = buffer.getVFS();,if (buffer != null ) VFS vfs = buffer.getVFS();
PMDJEditPlugin.java,"String msg=""Error while processing "" + buffer.getPath();","if (buffer != null ) String msg=""Error while processing "" + buffer.getPath();"
PMDJEditPlugin.java,Iterator<File> iter = files.iterator();,if (files != null ) Iterator<File> iter = files.iterator();
PMDJEditPlugin.java,File file = iter.next();,if (iter != null ) File file = iter.next();
PMDJEditPlugin.java,selectedFile = chooser.getSelectedFile();,if (chooser != null ) selectedFile = chooser.getSelectedFile();
PMDJEditPlugin.java,tilesize = Integer.parseInt(txttilesize.getText());,if (Integer != null ) tilesize = Integer.parseInt(txttilesize.getText());
PMDJEditPlugin.java,TokenEntry mark = occurrences.next();,if (occurrences != null ) TokenEntry mark = occurrences.next();
PMDJEditPlugin.java,int lastLine = mark.getBeginLine()+match.getLineCount();,if (mark != null ) int lastLine = mark.getBeginLine()+match.getLineCount();
PMDOptionPane.java,int index = locationToIndex(e.getPoint());,if (locationToIndex(e != null ) int index = locationToIndex(e.getPoint());
PMDOptionPane.java,int index = locationToIndex(e.getPoint());,if (locationToIndex(e != null ) int index = locationToIndex(e.getPoint());
PMDOptionPane.java,List<String> examples = box.getRule().getExamples();,if (box != null ) List<String> examples = box.getRule().getExamples();
PMDOptionPane.java,JList list = new CheckboxList(rules.getAllBoxes());,if (CheckboxList(rules != null ) JList list = new CheckboxList(rules.getAllBoxes());
SelectedRules.java,Rule rule = box.getRule();,if (box != null ) Rule rule = box.getRule();
SelectedRules.java,RuleSet rs = box.getRuleset();,if (box != null ) RuleSet rs = box.getRuleset();
ASTFieldDeclarationTest.java,ASTCompilationUnit cu = parser.CompilationUnit();,if (parser != null ) ASTCompilationUnit cu = parser.CompilationUnit();
ASTFieldDeclarationTest.java,ASTCompilationUnit cu = parser.CompilationUnit();,if (parser != null ) ASTCompilationUnit cu = parser.CompilationUnit();
ASTFieldDeclarationTest.java,ASTCompilationUnit cu = parser.CompilationUnit();,if (parser != null ) ASTCompilationUnit cu = parser.CompilationUnit();
ASTFieldDeclarationTest.java,ASTCompilationUnit cu = parser.CompilationUnit();,if (parser != null ) ASTCompilationUnit cu = parser.CompilationUnit();
ASTLocalVariableDeclarationTest.java,ASTCompilationUnit cu = parser.CompilationUnit();,if (parser != null ) ASTCompilationUnit cu = parser.CompilationUnit();
ASTLocalVariableDeclarationTest.java,ASTCompilationUnit cu = parser.CompilationUnit();,if (parser != null ) ASTCompilationUnit cu = parser.CompilationUnit();
ASTLocalVariableDeclarationTest.java,ASTCompilationUnit cu = parser.CompilationUnit();,if (parser != null ) ASTCompilationUnit cu = parser.CompilationUnit();
STBBaseTst.java,acu = parser.CompilationUnit();,if (parser != null ) acu = parser.CompilationUnit();
ParserTst.java,ASTCompilationUnit cu = parser.CompilationUnit();,if (parser != null ) ASTCompilationUnit cu = parser.CompilationUnit();
ParserTst.java,ASTCompilationUnit cu = parser.CompilationUnit();,if (parser != null ) ASTCompilationUnit cu = parser.CompilationUnit();
ParserTst.java,ASTCompilationUnit cu = parser.CompilationUnit();,if (parser != null ) ASTCompilationUnit cu = parser.CompilationUnit();
PMD.java,SourceType sourceType = getSourceTypeOfFile(ctx.getSourceCodeFilename());,if (getSourceTypeOfFile(ctx != null ) SourceType sourceType = getSourceTypeOfFile(ctx.getSourceCodeFilename());
PMD.java,Parser parser = sourceTypeHandler.getParser();,if (sourceTypeHandler != null ) Parser parser = sourceTypeHandler.getParser();
PMD.java,long start = System.nanoTime();,if (System != null ) long start = System.nanoTime();
PMD.java,long end = System.nanoTime();,if (System != null ) long end = System.nanoTime();
PMD.java,start = System.nanoTime();,if (System != null ) start = System.nanoTime();
PMD.java,end = System.nanoTime();,if (System != null ) end = System.nanoTime();
PMD.java,start = System.nanoTime();,if (System != null ) start = System.nanoTime();
PMD.java,end = System.nanoTime();,if (System != null ) end = System.nanoTime();
PMD.java,start = System.nanoTime();,if (System != null ) start = System.nanoTime();
PMD.java,end = System.nanoTime();,if (System != null ) end = System.nanoTime();
PMD.java,sourceType = sourceTypeDiscoverer.getSourceTypeOfJavaFiles();,if (sourceTypeDiscoverer != null ) sourceType = sourceTypeDiscoverer.getSourceTypeOfJavaFiles();
PMD.java,classLoader = getClass().getClassLoader();,if (getClass() != null ) classLoader = getClass().getClassLoader();
PMD.java,ClassLoader classLoader = PMD.class.getClassLoader();,if (PMD != null ) ClassLoader classLoader = PMD.class.getClassLoader();
PMD.java,long startFiles = System.nanoTime();,if (System != null ) long startFiles = System.nanoTime();
PMD.java,long endFiles = System.nanoTime();,if (System != null ) long endFiles = System.nanoTime();
PMD.java,classLoader = createClasspathClassLoader(opts.getAuxClasspath());,if (createClasspathClassLoader(opts != null ) classLoader = createClasspathClassLoader(opts.getAuxClasspath());
PMD.java,reportStart = System.nanoTime();,if (System != null ) reportStart = System.nanoTime();
PMD.java,renderer = opts.createRenderer();,if (opts != null ) renderer = opts.createRenderer();
PMD.java,reportEnd = System.nanoTime();,if (System != null ) reportEnd = System.nanoTime();
PMD.java,long startLoadRules = System.nanoTime();,if (System != null ) long startLoadRules = System.nanoTime();
PMD.java,RuleSets rulesets = ruleSetFactory.createRuleSets(opts.getRulesets());,if (ruleSetFactory != null ) RuleSets rulesets = ruleSetFactory.createRuleSets(opts.getRulesets());
PMD.java,long endLoadRules = System.nanoTime();,if (System != null ) long endLoadRules = System.nanoTime();
PMD.java,reportStart = System.nanoTime();,if (System != null ) reportStart = System.nanoTime();
PMD.java,reportEnd = System.nanoTime();,if (System != null ) reportEnd = System.nanoTime();
PMD.java,long start = System.nanoTime();,if (System != null ) long start = System.nanoTime();
PMD.java,final Level oldLogLevel = LOG.getLevel();,if (LOG != null ) final Level oldLogLevel = LOG.getLevel();
PMD.java,long end = System.nanoTime();,if (System != null ) long end = System.nanoTime();
PMD.java,PmdThread thread = (PmdThread) Thread.currentThread();,if (Thread != null ) PmdThread thread = (PmdThread) Thread.currentThread();
PMD.java,RuleContext ctx = thread.getRuleContext();,if (thread != null ) RuleContext ctx = thread.getRuleContext();
PMD.java,InputStream stream = new BufferedInputStream(dataSource.getInputStream());,if (BufferedInputStream(dataSource != null ) InputStream stream = new BufferedInputStream(dataSource.getInputStream());
PMD.java,report = future.get();,if (future != null ) report = future.get();
PMD.java,Throwable t = ee.getCause();,if (ee != null ) Throwable t = ee.getCause();
PMD.java,long start = System.nanoTime();,if (System != null ) long start = System.nanoTime();
PMD.java,long end = System.nanoTime();,if (System != null ) long end = System.nanoTime();
PMD.java,long start = System.nanoTime();,if (System != null ) long start = System.nanoTime();
PMD.java,long end = System.nanoTime();,if (System != null ) long end = System.nanoTime();
PMD.java,InputStream stream = new BufferedInputStream(dataSource.getInputStream());,if (BufferedInputStream(dataSource != null ) InputStream stream = new BufferedInputStream(dataSource.getInputStream());
PMD.java,long start = System.nanoTime();,if (System != null ) long start = System.nanoTime();
PMD.java,long end = System.nanoTime();,if (System != null ) long end = System.nanoTime();
PMD.java,Enumeration e = zipFile.entries();,if (zipFile != null ) Enumeration e = zipFile.entries();
PMD.java,ZipEntry zipEntry = (ZipEntry) e.nextElement();,if (e != null ) ZipEntry zipEntry = (ZipEntry) e.nextElement();
RuleSetFactory.java,Rule rule = (Rule)c.newInstance();,if ((Rule)c != null ) Rule rule = (Rule)c.newInstance();
SourceTypeDiscoverer.java,String fileName = sourceFile.getName();,if (sourceFile != null ) String fileName = sourceFile.getName();
SourceTypeDiscoverer.java,String extensionUppercase = fileName.substring(extensionIndex).toUpperCase();,if (fileName != null ) String extensionUppercase = fileName.substring(extensionIndex).toUpperCase();
JSPTokenizer.java,StringBuffer buffer = tokens.getCodeBuffer();,if (tokens != null ) StringBuffer buffer = tokens.getCodeBuffer();
JSPTokenizer.java,Token currentToken = tokenMgr.getNextToken();,if (tokenMgr != null ) Token currentToken = tokenMgr.getNextToken();
JSPTokenizer.java,currentToken = tokenMgr.getNextToken();,if (tokenMgr != null ) currentToken = tokenMgr.getNextToken();
JavaTokenizer.java,StringBuffer buffer = tokens.getCodeBuffer();,if (tokens != null ) StringBuffer buffer = tokens.getCodeBuffer();
JavaTokenizer.java,Token currentToken = tokenMgr.getNextToken();,if (tokenMgr != null ) Token currentToken = tokenMgr.getNextToken();
JavaTokenizer.java,currentToken = tokenMgr.getNextToken();,if (tokenMgr != null ) currentToken = tokenMgr.getNextToken();
JavaTokenizer.java,currentToken = tokenMgr.getNextToken();,if (tokenMgr != null ) currentToken = tokenMgr.getNextToken();
JavaTokenizer.java,currentToken = tokenMgr.getNextToken();,if (tokenMgr != null ) currentToken = tokenMgr.getNextToken();
Designer.java,Parser parser = handler.getParser();,if (handler != null ) Parser parser = handler.getParser();
Designer.java,Parser parser = handler.getParser();,if (handler != null ) Parser parser = handler.getParser();
Designer.java,Node prnt = node.jjtGetParent();,if (node != null ) Node prnt = node.jjtGetParent();
Designer.java,"TreePath curPath = getPathForLocation(e.getX(), e.getY());","if (e != null ) TreePath curPath = getPathForLocation(e.getX(), e.getY());"
Designer.java,TreeNode root = (TreeNode)getModel().getRoot();,if ((TreeNode)getModel() != null ) TreeNode root = (TreeNode)getModel().getRoot();
Designer.java,TreeNode node = (TreeNode)parent.getLastPathComponent();,if ((TreeNode)parent != null ) TreeNode node = (TreeNode)parent.getLastPathComponent();
Designer.java,TreeNode n = (TreeNode)e.nextElement();,if ((TreeNode)e != null ) TreeNode n = (TreeNode)e.nextElement();
Designer.java,StringReader reader = new StringReader(codeEditorPane.getText());,if (StringReader(codeEditorPane != null ) StringReader reader = new StringReader(codeEditorPane.getText());
Designer.java,List<ASTMethodDeclaration> methods = dfaGraphRule.getMethods();,if (dfaGraphRule != null ) List<ASTMethodDeclaration> methods = dfaGraphRule.getMethods();
Designer.java,Object obj = iter.next();,if (iter != null ) Object obj = iter.next();
Designer.java,Scope scope = astTreeNode.getScope();,if (astTreeNode != null ) Scope scope = astTreeNode.getScope();
Designer.java,scope = scope.getParent();,if (scope != null ) scope = scope.getParent();
Designer.java,text = sb.toString();,if (sb != null ) text = sb.toString();
Designer.java,text = value.toString();,if (value != null ) text = value.toString();
Designer.java,ListSelectionModel lsm = (ListSelectionModel)e.getSource();,if ((ListSelectionModel)e != null ) ListSelectionModel lsm = (ListSelectionModel)e.getSource();
Designer.java,Object o = xpathResults.get(lsm.getMinSelectionIndex());,if (xpathResults != null ) Object o = xpathResults.get(lsm.getMinSelectionIndex());
Designer.java,Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();,if (Toolkit != null ) Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
Designer.java,JFrame tmp = (JFrame)e.getSource();,if ((JFrame)e != null ) JFrame tmp = (JFrame)e.getSource();
Designer.java,TreeSelectionModel model = astTreeWidget.getSelectionModel();,if (astTreeWidget != null ) TreeSelectionModel model = astTreeWidget.getSelectionModel();
Designer.java,ActionMap actionMap = textConponent.getActionMap();,if (textConponent != null ) ActionMap actionMap = textConponent.getActionMap();
Designer.java,InputMap inputMap = textConponent.getInputMap();,if (textConponent != null ) InputMap inputMap = textConponent.getInputMap();
Designer.java,Source source = new DOMSource(node.asXml());,if (DOMSource(node != null ) Source source = new DOMSource(node.asXml());
Designer.java,TransformerFactory transformerFactory = TransformerFactory.newInstance();,if (TransformerFactory != null ) TransformerFactory transformerFactory = TransformerFactory.newInstance();
Designer.java,Transformer xformer = transformerFactory.newTransformer();,if (transformerFactory != null ) Transformer xformer = transformerFactory.newTransformer();
Designer.java,VisitorStarter symbolFacade = sourceTypeHandler.getSymbolFacade();,if (sourceTypeHandler != null ) VisitorStarter symbolFacade = sourceTypeHandler.getSymbolFacade();
MethodNameDeclarationTest.java,Iterator<MethodNameDeclaration> i = m.keySet().iterator();,if (m != null ) Iterator<MethodNameDeclaration> i = m.keySet().iterator();
UnusedPrivateMethodRule.java,String sig = mnd.getImage() + mnd.getParameterCount();,if (mnd != null ) String sig = mnd.getImage() + mnd.getParameterCount();
JJTJavaParserState.java,mk = marks.pop();,if (marks != null ) mk = marks.pop();
JJTJavaParserState.java,mk = marks.pop();,if (marks != null ) mk = marks.pop();
JJTJavaParserState.java,mk = marks.pop();,if (marks != null ) mk = marks.pop();
JJTJavaParserState.java,mk = marks.pop();,if (marks != null ) mk = marks.pop();
JJTJavaParserState.java,mk = marks.pop();,if (marks != null ) mk = marks.pop();
JavaParser.java,int[] oldentry = (int[])(e.nextElement());,if ((int[])(e != null ) int[] oldentry = (int[])(e.nextElement());
ScopeAndDeclarationFinder.java,Scope localScope = node.getScope();,if (node != null ) Scope localScope = node.getScope();
SignatureDeclareThrowsException.java,Class clazz = type.getType();,if (type != null ) Class clazz = type.getType();
SignatureDeclareThrowsException.java,clazz = clazz.getSuperclass();,if (clazz != null ) clazz = clazz.getSuperclass();
MethodArgumentCouldBeFinal.java,Scope s = meth.getScope();,if (meth != null ) Scope s = meth.getScope();
BaseVisitor.java,final boolean isDfaEnabled = preferences.isDfaEnabled();,if (preferences != null ) final boolean isDfaEnabled = preferences.isDfaEnabled();
ClassTypeResolver.java,String name = node.getImage();,if (node != null ) String name = node.getImage();
ClassTypeResolver.java,String name = node.getNameDeclaration().getTypeImage();,if (node != null ) String name = node.getNameDeclaration().getTypeImage();
ClassTypeResolver.java,ASTPackageDeclaration pkgDecl = node.getPackageDeclaration();,if (node != null ) ASTPackageDeclaration pkgDecl = node.getPackageDeclaration();
ClassTypeResolver.java,String strPackage = anImportDeclaration.getPackageName();,if (anImportDeclaration != null ) String strPackage = anImportDeclaration.getPackageName();
ClassTypeResolver.java,String strName = anImportDeclaration.getImportedName();,if (anImportDeclaration != null ) String strName = anImportDeclaration.getImportedName();
PreferencesManagerImpl.java,Iterator ruleIterator = addedRules.iterator();,if (addedRules != null ) Iterator ruleIterator = addedRules.iterator();
GeneralPreferencesPage.java,Integer value = Integer.valueOf(text.getText());,if (Integer != null ) Integer value = Integer.valueOf(text.getText());
PMDPreferencePage.java,Table ruleTable = ruleTableViewer.getTable();,if (ruleTableViewer != null ) Table ruleTable = ruleTableViewer.getTable();
PMDPreferencePage.java,IStructuredSelection selection = (IStructuredSelection) event.getSelection();,if (event != null ) IStructuredSelection selection = (IStructuredSelection) event.getSelection();
PMDPreferencePage.java,Rule selectedRule = (Rule) selection.getFirstElement();,if (selection != null ) Rule selectedRule = (Rule) selection.getFirstElement();
PMDPreferencePage.java,Table rulePropertiesTable = rulePropertiesTableViewer.getTable();,if (rulePropertiesTableViewer != null ) Table rulePropertiesTable = rulePropertiesTableViewer.getTable();
PMDPreferencePage.java,IStructuredSelection selection = (IStructuredSelection) ruleTableViewer.getSelection();,if (ruleTableViewer != null ) IStructuredSelection selection = (IStructuredSelection) ruleTableViewer.getSelection();
PMDPreferencePage.java,Rule selectedRule = (Rule) selection.getFirstElement();,if (selection != null ) Rule selectedRule = (Rule) selection.getFirstElement();
PMDPreferencePage.java,IStructuredSelection selection = (IStructuredSelection) ruleTableViewer.getSelection();,if (ruleTableViewer != null ) IStructuredSelection selection = (IStructuredSelection) ruleTableViewer.getSelection();
PMDPreferencePage.java,Rule rule = (Rule) selection.getFirstElement();,if (selection != null ) Rule rule = (Rule) selection.getFirstElement();
PMDPreferencePage.java,int result = dialog.open();,if (dialog != null ) int result = dialog.open();
PMDPreferencePage.java,RuleSet selectedRuleSet = dialog.getSelectedRuleSet();,if (dialog != null ) RuleSet selectedRuleSet = dialog.getSelectedRuleSet();
PMDPreferencePage.java,String fileName = dialog.open();,if (dialog != null ) String fileName = dialog.open();
PMDPreferencePage.java,IRuleSetWriter writer = PMDRuntimePlugin.getDefault().getRuleSetWriter();,if (PMDRuntimePlugin != null ) IRuleSetWriter writer = PMDRuntimePlugin.getDefault().getRuleSetWriter();
PMDPreferencePage.java,int result = input.open();,if (input != null ) int result = input.open();
PMDPreferencePage.java,IStructuredSelection selection = (IStructuredSelection) ruleTableViewer.getSelection();,if (ruleTableViewer != null ) IStructuredSelection selection = (IStructuredSelection) ruleTableViewer.getSelection();
PMDPreferencePage.java,Rule selectedRule = (Rule) selection.getFirstElement();,if (selection != null ) Rule selectedRule = (Rule) selection.getFirstElement();
PMDPreferencePage.java,"return original == null ? """" : original.trim();","if (original != null ) return original == null ? """" : original.trim();"
PMDPreferencePage.java,Table table = ruleTableViewer.getTable();,if (ruleTableViewer != null ) Table table = ruleTableViewer.getTable();
PMDPreferencePage.java,TableItem[] items = table.getItems();,if (table != null ) TableItem[] items = table.getItems();
RuleDialog.java,String description = this.editedRule.getDescription();,if (this != null ) String description = this.editedRule.getDescription();
RuleLabelProvider.java,result = rule.getName();,if (rule != null ) result = rule.getName();
PMDPropertyPage.java,final Table ruleTable = availableRulesTableViewer.getTable();,if (availableRulesTableViewer != null ) final Table ruleTable = availableRulesTableViewer.getTable();
RuleSetWriterImpl.java,final DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();,if (DocumentBuilderFactory != null ) final DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
RuleSetWriterImpl.java,final DocumentBuilder documentBuilder = factory.newDocumentBuilder();,if (factory != null ) final DocumentBuilder documentBuilder = factory.newDocumentBuilder();
RuleSetWriterImpl.java,final Document doc = documentBuilder.newDocument();,if (documentBuilder != null ) final Document doc = documentBuilder.newDocument();
RuleSetWriterImpl.java,"final Element descriptionElement = getDescriptionElement(doc, ruleSet.getDescription());","if (ruleSet != null ) final Element descriptionElement = getDescriptionElement(doc, ruleSet.getDescription());"
RuleSetWriterImpl.java,final Iterator rules = ruleSet.getRules().iterator();,if (ruleSet != null ) final Iterator rules = ruleSet.getRules().iterator();
RuleSetWriterImpl.java,final Rule rule = (Rule) rules.next();,if (rules != null ) final Rule rule = (Rule) rules.next();
RuleSetWriterImpl.java,final String className = rule.getClass().getName();,if (rule != null ) final String className = rule.getClass().getName();
RuleSetWriterImpl.java,"final Element descriptionElement = getDescriptionElement(doc, rule.getDescription());","if (rule != null ) final Element descriptionElement = getDescriptionElement(doc, rule.getDescription());"
RuleSetWriterImpl.java,"final Element priorityElement = getPriorityElement(doc, rule.getPriority());","if (rule != null ) final Element priorityElement = getPriorityElement(doc, rule.getPriority());"
RuleSetWriterImpl.java,"final Element propertiesElement = getPropertiesElement(doc, rule.getProperties());","if (rule != null ) final Element propertiesElement = getPropertiesElement(doc, rule.getProperties());"
RuleSetWriterImpl.java,final Enumeration keys = properties.keys();,if (properties != null ) final Enumeration keys = properties.keys();
RuleSetWriterImpl.java,final Object key = keys.nextElement();,if (keys != null ) final Object key = keys.nextElement();
ScopedLogHandlersManager.java,oldHandlers = logger.getHandlers();,if (logger != null ) oldHandlers = logger.getHandlers();
InsufficientStringBufferDeclaration.java,anticipatedLength += str.length();,if (str != null ) anticipatedLength += str.length();
PMD.java,long start = System.nanoTime();,if (System != null ) long start = System.nanoTime();
PMD.java,long end = System.nanoTime();,if (System != null ) long end = System.nanoTime();
TestClassWithoutTestCases.java,String className = node.getImage();,if (node != null ) String className = node.getImage();
TestClassWithoutTestCases.java,ASTMethodDeclarator md = it.next();,if (it != null ) ASTMethodDeclarator md = it.next();
RegexHelper.java,List<Pattern> patterns = new ArrayList<Pattern>(list.size());,if (ArrayList<Pattern>(list != null ) List<Pattern> patterns = new ArrayList<Pattern>(list.size());
RuleViolation.java,CanSuppressWarnings t = (CanSuppressWarnings) i.next();,if (i != null ) CanSuppressWarnings t = (CanSuppressWarnings) i.next();
CyclomaticComplexity.java,Entry classEntry = entryStack.pop();,if (entryStack != null ) Entry classEntry = entryStack.pop();
CyclomaticComplexity.java,Entry methodEntry = entryStack.pop();,if (entryStack != null ) Entry methodEntry = entryStack.pop();
CyclomaticComplexity.java,Entry classEntry = entryStack.peek();,if (entryStack != null ) Entry classEntry = entryStack.peek();
Designer.java,"String line = "" at line "" + node.getBeginLine();","if (node != null ) String line = "" at line "" + node.getBeginLine();"
RuleSetFactoryTest.java,SAXParser saxParser = saxParserFactory.newSAXParser();,if (saxParserFactory != null ) SAXParser saxParser = saxParserFactory.newSAXParser();
RuleSetFactoryTest.java,allValid = allValid && validateDefaultHandler.isValid();,if (validateDefaultHandler != null ) allValid = allValid && validateDefaultHandler.isValid();
RuleSetFactoryTest.java,String file = buf.toString();,if (buf != null ) String file = buf.toString();
RuleSetFactoryTest.java,inputStream = new ByteArrayInputStream(file.getBytes());,if (ByteArrayInputStream(file != null ) inputStream = new ByteArrayInputStream(file.getBytes());
RuleSetFactoryTest.java,SAXParser saxParser = saxParserFactory.newSAXParser();,if (saxParserFactory != null ) SAXParser saxParser = saxParserFactory.newSAXParser();
RuleSetFactoryTest.java,allValid = allValid && validateDefaultHandler.isValid();,if (validateDefaultHandler != null ) allValid = allValid && validateDefaultHandler.isValid();
RuleSetFactory.java,RuleSet[] allRuleSets = ruleSets.getAllRuleSets();,if (ruleSets != null ) RuleSet[] allRuleSets = ruleSets.getAllRuleSets();
RuleSetFactory.java,DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();,if (DocumentBuilderFactory != null ) DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();
RuleSetFactory.java,Element root = doc.getDocumentElement();,if (doc != null ) Element root = doc.getDocumentElement();
RuleSetFactory.java,NodeList nodeList = root.getChildNodes();,if (root != null ) NodeList nodeList = root.getChildNodes();
RuleSetFactory.java,Rule rule = (Rule) c.newInstance();,if (c != null ) Rule rule = (Rule) c.newInstance();
RuleSetFactory.java,String key = (String) j.next();,if (j != null ) String key = (String) j.next();
RuleSetFactory.java,Rule externalRule = externalRuleSet.getRuleByName(externalRuleID.getRuleName());,if (externalRuleSet != null ) Rule externalRule = externalRuleSet.getRuleByName(externalRuleID.getRuleName());
RuleSetFactory.java,NodeList excludeNodes = ruleElement.getChildNodes();,if (ruleElement != null ) NodeList excludeNodes = ruleElement.getChildNodes();
RuleSet.java,includePatternMatchers = new ArrayList<Matcher>(includePatterns.size());,if (ArrayList<Matcher>(includePatterns != null ) includePatternMatchers = new ArrayList<Matcher>(includePatterns.size());
RuleSet.java,excludePatternMatchers = new ArrayList<Matcher>(excludePatterns.size());,if (ArrayList<Matcher>(excludePatterns != null ) excludePatternMatchers = new ArrayList<Matcher>(excludePatterns.size());
RuleSet.java,String path = file.getPath();,if (file != null ) String path = file.getPath();
RuleSet.java,included = matcher.matches();,if (matcher != null ) included = matcher.matches();
RuleSet.java,excluded = matcher.matches();,if (matcher != null ) excluded = matcher.matches();
Designer.java,String text = node.label();,if (node != null ) String text = node.label();
RuleViolation.java,beginLine = node.getBeginLine();,if (node != null ) beginLine = node.getBeginLine();
RuleViolation.java,endLine = node.getEndLine();,if (node != null ) endLine = node.getEndLine();
RuleViolation.java,beginColumn = node.getBeginColumn();,if (node != null ) beginColumn = node.getBeginColumn();
RuleViolation.java,endColumn = node.getEndColumn();,if (node != null ) endColumn = node.getEndColumn();
RuleViolation.java,CanSuppressWarnings t = (CanSuppressWarnings) i.next();,if (i != null ) CanSuppressWarnings t = (CanSuppressWarnings) i.next();
ClassTypeResolver.java,String name = node.getImage();,if (node != null ) String name = node.getImage();
AbstractRule.java,private String name = getClass().getName();,if (getClass() != null ) private String name = getClass().getName();
AbstractRule.java,String rawValue = properties.getProperty(descriptor.name());,if (properties != null ) String rawValue = properties.getProperty(descriptor.name());
AbstractRule.java,String rawValue = properties.getProperty(descriptor.name());,if (properties != null ) String rawValue = properties.getProperty(descriptor.name());
AbstractRule.java,ASTCompilationUnit node = (ASTCompilationUnit) i.next();,if (i != null ) ASTCompilationUnit node = (ASTCompilationUnit) i.next();
CommonAbstractRule.java,private String name = getClass().getName();,if (getClass() != null ) private String name = getClass().getName();
AbstractJspRule.java,private String name = getClass().getName();,if (getClass() != null ) private String name = getClass().getName();
AbstractJspRule.java,SimpleNode node = (SimpleNode) i.next();,if (i != null ) SimpleNode node = (SimpleNode) i.next();
PMD.java,Parser parser = sourceTypeHandler.getParser();,if (sourceTypeHandler != null ) Parser parser = sourceTypeHandler.getParser();
PMD.java,long start = System.nanoTime();,if (System != null ) long start = System.nanoTime();
PMD.java,long end = System.nanoTime();,if (System != null ) long end = System.nanoTime();
PMD.java,start = System.nanoTime();,if (System != null ) start = System.nanoTime();
PMD.java,end = System.nanoTime();,if (System != null ) end = System.nanoTime();
PMD.java,start = System.nanoTime();,if (System != null ) start = System.nanoTime();
PMD.java,end = System.nanoTime();,if (System != null ) end = System.nanoTime();
PMD.java,start = System.nanoTime();,if (System != null ) start = System.nanoTime();
PMD.java,end = System.nanoTime();,if (System != null ) end = System.nanoTime();
Plugin.java,config = BuildSystemConfiguration.getInstance(context.getProject());,if (BuildSystemConfiguration != null ) config = BuildSystemConfiguration.getInstance(context.getProject());
Plugin.java,String source = config.getSource();,if (config != null ) String source = config.getSource();
SettingsPanel.java,int index = locationToIndex(e.getPoint());,if (locationToIndex(e != null ) int index = locationToIndex(e.getPoint());
Plugin.java,String source = config.getSource();,if (config != null ) String source = config.getSource();
Plugin.java,SelectedRules rs = new SelectedRules(SettingsPanel.createSettingsStorage());,if (SelectedRules(SettingsPanel != null ) SelectedRules rs = new SelectedRules(SettingsPanel.createSettingsStorage());
Plugin.java,Element doc = contextMenu.getContext().getDocument();,if (contextMenu != null ) Element doc = contextMenu.getContext().getDocument();
SettingsPanel.java,int index = locationToIndex(e.getPoint());,if (locationToIndex(e != null ) int index = locationToIndex(e.getPoint());
ClassTypeResolver.java,ASTPackageDeclaration pkgDecl = node.getPackageDeclaration();,if (node != null ) ASTPackageDeclaration pkgDecl = node.getPackageDeclaration();
ClassTypeResolver.java,String strPackage = anImportDeclaration.getPackageName();,if (anImportDeclaration != null ) String strPackage = anImportDeclaration.getPackageName();
ClassTypeResolver.java,String strName = anImportDeclaration.getImportedName();,if (anImportDeclaration != null ) String strName = anImportDeclaration.getImportedName();
ClassTypeResolver.java,ASTPackageDeclaration pkgDecl = node.getPackageDeclaration();,if (node != null ) ASTPackageDeclaration pkgDecl = node.getPackageDeclaration();
ClassTypeResolver.java,className = decl.getImage();,if (decl != null ) className = decl.getImage();
PMDOptionPane.java,List<String> examples = rules.getRule(box).getExamples();,if (rules != null ) List<String> examples = rules.getRule(box).getExamples();
SelectedRules.java,for(Iterator i = rsf.getRegisteredRuleSets(); i.hasNext(); ),if () != null ) for(Iterator i = rsf.getRegisteredRuleSets(); i.hasNext(); )
SelectedRules.java,RuleSet rs = (RuleSet)i.next();,if ((RuleSet)i != null ) RuleSet rs = (RuleSet)i.next();
SelectedRules.java,for(Iterator i = rules.keySet().iterator(); i.hasNext(); ),if () != null ) for(Iterator i = rules.keySet().iterator(); i.hasNext(); )
SelectedRules.java,Rule rule = (Rule)i.next();,if ((Rule)i != null ) Rule rule = (Rule)i.next();
SelectedRules.java,for(Iterator i = rules.values().iterator(); i.hasNext(); ),if () != null ) for(Iterator i = rules.values().iterator(); i.hasNext(); )
SelectedRules.java,for(Iterator i = rules.keySet().iterator(); i.hasNext(); ),if () != null ) for(Iterator i = rules.keySet().iterator(); i.hasNext(); )
SelectedRules.java,Rule rule = (Rule)i.next();,if ((Rule)i != null ) Rule rule = (Rule)i.next();
SelectedRules.java,for(Iterator i = rules.keySet().iterator(); i.hasNext(); ),if () != null ) for(Iterator i = rules.keySet().iterator(); i.hasNext(); )
SelectedRules.java,Rule rule = (Rule)i.next();,if ((Rule)i != null ) Rule rule = (Rule)i.next();
SelectedRules.java,for(Iterator j = rs.getRules().iterator(); j.hasNext(); ),if () != null ) for(Iterator j = rs.getRules().iterator(); j.hasNext(); )
SelectedRules.java,Rule rule = (Rule)j.next();,if ((Rule)j != null ) Rule rule = (Rule)j.next();
PMDJEditPlugin.java,RuleViolation rv = (RuleViolation)i.next();,if ((RuleViolation)i != null ) RuleViolation rv = (RuleViolation)i.next();
PMDJEditPlugin.java,RuleViolation rv = (RuleViolation)j.next();,if ((RuleViolation)j != null ) RuleViolation rv = (RuleViolation)j.next();
PMDJEditPlugin.java,Match match = (Match)i.next();,if ((Match)i != null ) Match match = (Match)i.next();
PMDJEditPlugin.java,TokenEntry mark = (TokenEntry)occurrences.next();,if ((TokenEntry)occurrences != null ) TokenEntry mark = (TokenEntry)occurrences.next();
PMDJEditPlugin.java,String path = buffer.getPath();,if (buffer != null ) String path = buffer.getPath();
PMDJEditPlugin.java,Iterator iter = files.iterator();,if (files != null ) Iterator iter = files.iterator();
PMDJEditPlugin.java,File file = (File)iter.next();,if ((File)iter != null ) File file = (File)iter.next();
PMDOptionPane.java,int index = locationToIndex(e.getPoint());,if (locationToIndex(e != null ) int index = locationToIndex(e.getPoint());
PMDOptionPane.java,int index = locationToIndex(e.getPoint());,if (locationToIndex(e != null ) int index = locationToIndex(e.getPoint());
PMDOptionPane.java,String example = rules.getRule(box).getExample();,if (rules != null ) String example = rules.getRule(box).getExample();
PMDOptionPane.java,JList list = new CheckboxList(rules.getAllBoxes());,if (CheckboxList(rules != null ) JList list = new CheckboxList(rules.getAllBoxes());
RuleSetWriterImpl.java,String className = rule.getClass().getName();,if (rule != null ) String className = rule.getClass().getName();
RuleSetWriterImpl.java,className = XPathRule.class.getName();,if (XPathRule != null ) className = XPathRule.class.getName();
RuleSetWriterImpl.java,"final Element exampleElement = getExampleElement(doc, rule.getExample());","if (rule != null ) final Element exampleElement = getExampleElement(doc, rule.getExample());"
ShowDataflowAction.java,workbenchPage = targetPart.getSite().getPage();,if (targetPart != null ) workbenchPage = targetPart.getSite().getPage();
ShowDataflowAction.java,Object element = sel.getFirstElement();,if (sel != null ) Object element = sel.getFirstElement();
ShowDataflowAction.java,resource = method.getResource();,if (method != null ) resource = method.getResource();
PMDPreferencePage.java,int result = dialog.open();,if (dialog != null ) int result = dialog.open();
RuleTst.java,oldProperties = (Properties)ruleProperties.clone();,if ((Properties)ruleProperties != null ) oldProperties = (Properties)ruleProperties.clone();
SingularField.java,List<NameOccurrence> usages = declaration.getUsages();,if (declaration != null ) List<NameOccurrence> usages = declaration.getUsages();
SingularField.java,SimpleNode location = no.getLocation();,if (no != null ) SimpleNode location = no.getLocation();
SingularField.java,List usages = declaration.getUsages();,if (declaration != null ) List usages = declaration.getUsages();
CloseResource.java,ASTLocalVariableDeclaration var = (ASTLocalVariableDeclaration)it.next();,if ((ASTLocalVariableDeclaration)it != null ) ASTLocalVariableDeclaration var = (ASTLocalVariableDeclaration)it.next();
CloseResource.java,ASTTryStatement t = (ASTTryStatement)it.next();,if ((ASTTryStatement)it != null ) ASTTryStatement t = (ASTTryStatement)it.next();
CloseResource.java,ASTImportDeclaration n = (ASTImportDeclaration)i.next();,if ((ASTImportDeclaration)i != null ) ASTImportDeclaration n = (ASTImportDeclaration)i.next();
GenericLiteralCheckerRule.java,String image = node.getImage();,if (node != null ) String image = node.getImage();
AvoidHardCodedIP.java,String image = node.getImage();,if (node != null ) String image = node.getImage();
CloseResource.java,ASTType type = var.getTypeNode();,if (var != null ) ASTType type = var.getTypeNode();
CloseResource.java,String name = oName.getImage();,if (oName != null ) String name = oName.getImage();
SourceCode.java,List lines = cl.getCode();,if (cl != null ) List lines = cl.getCode();
ClassTypeResolver.java,className = decl.getImage();,if (decl != null ) className = decl.getImage();
JJTJavaParserState.java,nodes = new java.util.Stack();,if (java != null ) nodes = new java.util.Stack();
JJTJavaParserState.java,marks = new java.util.Stack();,if (java != null ) marks = new java.util.Stack();
AbstractTokenizer.java,List code = tokens.getCode();,if (tokens != null ) List code = tokens.getCode();
BigIntegerInstantiation.java,img = literal.getImage();,if (literal != null ) img = literal.getImage();
Plugin.java,DefaultMutableTreeNode node = (DefaultMutableTreeNode)tree.getLastSelectedPathComponent();,if ((DefaultMutableTreeNode)tree != null ) DefaultMutableTreeNode node = (DefaultMutableTreeNode)tree.getLastSelectedPathComponent();
Plugin.java,CPDViolationWrapper nodeInfo = (CPDViolationWrapper)node.getUserObject();,if ((CPDViolationWrapper)node != null ) CPDViolationWrapper nodeInfo = (CPDViolationWrapper)node.getUserObject();
Plugin.java,TokenEntry mark = (TokenEntry) i.next();,if (i != null ) TokenEntry mark = (TokenEntry) i.next();
Plugin.java,SelectedRules rules = new SelectedRules(SettingsPanel.createSettingsStorage());,if (SelectedRules(SettingsPanel != null ) SelectedRules rules = new SelectedRules(SettingsPanel.createSettingsStorage());
Plugin.java,RelativeDirectoryContextFolder folder = (RelativeDirectoryContextFolder) context.getElement();,if (context != null ) RelativeDirectoryContextFolder folder = (RelativeDirectoryContextFolder) context.getElement();
Plugin.java,Project project = (Project) context.getElement();,if (context != null ) Project project = (Project) context.getElement();
Plugin.java,RelativeDirectoryContextFolder folder = (RelativeDirectoryContextFolder) context.getElement();,if (context != null ) RelativeDirectoryContextFolder folder = (RelativeDirectoryContextFolder) context.getElement();
Plugin.java,Project project = (Project) context.getElement();,if (context != null ) Project project = (Project) context.getElement();
Plugin.java,RuleViolation rv = (RuleViolation) i.next();,if (i != null ) RuleViolation rv = (RuleViolation) i.next();
SettingsPanel.java,String example = rules.getRule(box).getExample();,if (rules != null ) String example = rules.getRule(box).getExample();
SettingsPanel.java,String example = rules.getRule(box).getExample();,if (rules != null ) String example = rules.getRule(box).getExample();
BooleanInstantiation.java,ASTPrimaryExpression parent = (ASTPrimaryExpression) node.jjtGetParent();,if (node != null ) ASTPrimaryExpression parent = (ASTPrimaryExpression) node.jjtGetParent();
XPath2ParserTest.java,ASTXPath xpath = parse(query.getXpath());,if (parse(query != null ) ASTXPath xpath = parse(query.getXpath());
AbstractPrintVisitor.java,String nodeName = node.getClass().getName();,if (node != null ) String nodeName = node.getClass().getName();
ClassScopeTest.java,Map.Entry entry = (Map.Entry) i.next();,if (i != null ) Map.Entry entry = (Map.Entry) i.next();
ClassScopeTest.java,MethodNameDeclaration mnd = (MethodNameDeclaration) entry.getKey();,if (entry != null ) MethodNameDeclaration mnd = (MethodNameDeclaration) entry.getKey();
ClassScopeTest.java,mnd = (MethodNameDeclaration) i.next();,if (i != null ) mnd = (MethodNameDeclaration) i.next();
ClassScopeTest.java,Map.Entry entry = (Map.Entry) i.next();,if (i != null ) Map.Entry entry = (Map.Entry) i.next();
ClassScopeTest.java,MethodNameDeclaration mnd = (MethodNameDeclaration) entry.getKey();,if (entry != null ) MethodNameDeclaration mnd = (MethodNameDeclaration) entry.getKey();
ClassScopeTest.java,mnd = (MethodNameDeclaration) i.next();,if (i != null ) mnd = (MethodNameDeclaration) i.next();
XMLRenderer.java,Report.ProcessingError pe = (Report.ProcessingError) i.next();,if (i != null ) Report.ProcessingError pe = (Report.ProcessingError) i.next();
XMLRenderer.java,Report.SuppressedViolation suppressed = (Report.SuppressedViolation) i.next();,if (i != null ) Report.SuppressedViolation suppressed = (Report.SuppressedViolation) i.next();
ExcessiveMethodLengthTest.java,RuleViolation rv = (RuleViolation)i.next();,if ((RuleViolation)i != null ) RuleViolation rv = (RuleViolation)i.next();
RubyTokenizer.java,List code = tokens.getCode();,if (tokens != null ) List code = tokens.getCode();
EditorChangeListener.java,PMDOptionsSettings settings = PMDOptionsSettings.getDefault();,if (PMDOptionsSettings != null ) PMDOptionsSettings settings = PMDOptionsSettings.getDefault();
EditorChangeListener.java,PMDOptionsSettings settings = PMDOptionsSettings.getDefault();,if (PMDOptionsSettings != null ) PMDOptionsSettings settings = PMDOptionsSettings.getDefault();
EditorChangeListener.java,BaseDocument doc = Registry.getMostActiveDocument();,if (Registry != null ) BaseDocument doc = Registry.getMostActiveDocument();
Scanner.java,tabSize = foo.intValue();,if (foo != null ) tabSize = foo.intValue();
Scanner.java,Line.Set lineset = cookie.getLineSet();,if (cookie != null ) Line.Set lineset = cookie.getLineSet();
Scanner.java,int lineNum = fault.getLine();,if (fault != null ) int lineNum = fault.getLine();
Scanner.java,String text = line.getText();,if (line != null ) String text = line.getText();
Scanner.java,PMDScanAnnotation annotation = PMDScanAnnotation.getNewInstance();,if (PMDScanAnnotation != null ) PMDScanAnnotation annotation = PMDScanAnnotation.getNewInstance();
Scanner.java,String msg = fault.getMessage();,if (fault != null ) String msg = fault.getMessage();
RunPMDAction.java,List list = ConfigUtils.getRuleList();,if (ConfigUtils != null ) List list = ConfigUtils.getRuleList();
ConfigUtils.java,Iterator<Rule> iterator = getAllAvailableRules().iterator();,if (getAllAvailableRules() != null ) Iterator<Rule> iterator = getAllAvailableRules().iterator();
ConfigUtils.java,Rule rule = iterator.next();,if (iterator != null ) Rule rule = iterator.next();
PMD.java,report = future.get();,if (future != null ) report = future.get();
PMD.java,Throwable t = ee.getCause();,if (ee != null ) Throwable t = ee.getCause();
PMD.java,long start = System.nanoTime();,if (System != null ) long start = System.nanoTime();
PMD.java,long end = System.nanoTime();,if (System != null ) long end = System.nanoTime();
PMDTask.java,private int cpus = Runtime.getRuntime().availableProcessors();,if (Runtime != null ) private int cpus = Runtime.getRuntime().availableProcessors();
PMDTask.java,final String inputPath = ds.getBasedir().getPath();,if (ds != null ) final String inputPath = ds.getBasedir().getPath();
PMDTask.java,int problemCount = reportSize.get();,if (reportSize != null ) int problemCount = reportSize.get();
PMD.java,long startLoadRules = System.nanoTime();,if (System != null ) long startLoadRules = System.nanoTime();
PMD.java,RuleSets rulesets = ruleSetFactory.createRuleSets(opts.getRulesets());,if (ruleSetFactory != null ) RuleSets rulesets = ruleSetFactory.createRuleSets(opts.getRulesets());
PMD.java,long endLoadRules = System.nanoTime();,if (System != null ) long endLoadRules = System.nanoTime();
PMD.java,long reportStart = System.nanoTime();,if (System != null ) long reportStart = System.nanoTime();
PMD.java,Renderer r = opts.createRenderer();,if (opts != null ) Renderer r = opts.createRenderer();
PMD.java,long reportEnd = System.nanoTime();,if (System != null ) long reportEnd = System.nanoTime();
PMD.java,long start = System.nanoTime();,if (System != null ) long start = System.nanoTime();
PMD.java,Report mainReport = ctx.getReport();,if (ctx != null ) Report mainReport = ctx.getReport();
PMD.java,Report r = thread.context.getReport();,if (thread != null ) Report r = thread.context.getReport();
PMD.java,long end = System.nanoTime();,if (System != null ) long end = System.nanoTime();
HTMLRenderer.java,boolean hasSuppressedViolations = !report.getSuppressedRuleViolations().isEmpty();,if (!report != null ) boolean hasSuppressedViolations = !report.getSuppressedRuleViolations().isEmpty();
TextPadRenderer.java,i = report.iterator();,if (report != null ) i = report.iterator();
VBHTMLRenderer.java,IRuleViolation rv = iter.next();,if (iter != null ) IRuleViolation rv = iter.next();
VBHTMLRenderer.java,Iterator iter = report.errors();,if (report != null ) Iterator iter = report.errors();
AbstractRule.java,protected String name = getClass().getName();,if (getClass() != null ) protected String name = getClass().getName();
CommonAbstractRule.java,protected String name = getClass().getName();,if (getClass() != null ) protected String name = getClass().getName();
AbstractJspRule.java,protected String name = getClass().getName();,if (getClass() != null ) protected String name = getClass().getName();
RuleSetWriterImpl.java,DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();,if (DocumentBuilderFactory != null ) DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
RuleSetWriterImpl.java,DocumentBuilder documentBuilder = factory.newDocumentBuilder();,if (factory != null ) DocumentBuilder documentBuilder = factory.newDocumentBuilder();
RuleSetWriterImpl.java,Document doc = documentBuilder.newDocument();,if (documentBuilder != null ) Document doc = documentBuilder.newDocument();
RuleSetWriterImpl.java,"Element descriptionElement = getDescriptionElement(doc, ruleSet.getDescription());","if (ruleSet != null ) Element descriptionElement = getDescriptionElement(doc, ruleSet.getDescription());"
RuleSetWriterImpl.java,Iterator rules = ruleSet.getRules().iterator();,if (ruleSet != null ) Iterator rules = ruleSet.getRules().iterator();
RuleSetWriterImpl.java,Rule rule = (Rule) rules.next();,if (rules != null ) Rule rule = (Rule) rules.next();
RuleSetWriterImpl.java,"Element descriptionElement = getDescriptionElement(doc, rule.getDescription());","if (rule != null ) Element descriptionElement = getDescriptionElement(doc, rule.getDescription());"
RuleSetWriterImpl.java,"Element exampleElement = getExampleElement(doc, rule.getExample());","if (rule != null ) Element exampleElement = getExampleElement(doc, rule.getExample());"
RuleSetWriterImpl.java,"Element priorityElement = getPriorityElement(doc, rule.getPriority());","if (rule != null ) Element priorityElement = getPriorityElement(doc, rule.getPriority());"
RuleSetWriterImpl.java,"Element propertiesElement = getPropertiesElement(doc, rule.getProperties());","if (rule != null ) Element propertiesElement = getPropertiesElement(doc, rule.getProperties());"
RuleSetWriterImpl.java,Enumeration keys = properties.keys();,if (properties != null ) Enumeration keys = properties.keys();
RuleSetWriterImpl.java,Object key = keys.nextElement();,if (keys != null ) Object key = keys.nextElement();
ClassTypeResolver.java,String strPackage = anImportDeclaration.getPackageName();,if (anImportDeclaration != null ) String strPackage = anImportDeclaration.getPackageName();
ClassTypeResolver.java,String strName = anImportDeclaration.getImportedName();,if (anImportDeclaration != null ) String strName = anImportDeclaration.getImportedName();
ClassTypeResolver.java,String className = node.getImage();,if (node != null ) String className = node.getImage();
Designer.java,List methods = dfaGraphRule.getMethods();,if (dfaGraphRule != null ) List methods = dfaGraphRule.getMethods();
AbstractRule.java,ASTImportDeclaration n = (ASTImportDeclaration) i.next();,if (i != null ) ASTImportDeclaration n = (ASTImportDeclaration) i.next();
AbstractRuleChainVisitor.java,Rule rule = (Rule) i.next();,if (i != null ) Rule rule = (Rule) i.next();
PMD.java,DataSource dataSource = (DataSource) i.next();,if (i != null ) DataSource dataSource = (DataSource) i.next();
PMD.java,Iterator i = factory.threadList.iterator();,if (factory != null ) Iterator i = factory.threadList.iterator();
PMD.java,PmdThread thread = (PmdThread) i.next();,if (i != null ) PmdThread thread = (PmdThread) i.next();
PMD.java,DataSource dataSource = (DataSource) i.next();,if (i != null ) DataSource dataSource = (DataSource) i.next();
PMD.java,Rule r = (Rule) i.next();,if (i != null ) Rule r = (Rule) i.next();
Report.java,IRuleViolation rv = (IRuleViolation) iter.next();,if (iter != null ) IRuleViolation rv = (IRuleViolation) iter.next();
Report.java,ReportListener listener = (ReportListener) i.next();,if (i != null ) ReportListener listener = (ReportListener) i.next();
RuleSet.java,Rule r = (Rule) i.next();,if (i != null ) Rule r = (Rule) i.next();
RuleSet.java,Iterator rs = rules.iterator();,if (rules != null ) Iterator rs = rules.iterator();
RuleSet.java,Rule rule = (Rule) rs.next();,if (rs != null ) Rule rule = (Rule) rs.next();
RuleSet.java,Rule r = (Rule) i.next();,if (i != null ) Rule r = (Rule) i.next();
CSVRenderer.java,match = (Match) matches.next();,if (matches != null ) match = (Match) matches.next();
CSVRenderer.java,mark = (TokenEntry) marks.next();,if (marks != null ) mark = (TokenEntry) marks.next();
SimpleRenderer.java,mark = (TokenEntry) occurrences.next();,if (occurrences != null ) mark = (TokenEntry) occurrences.next();
SimpleRenderer.java,match = (Match) matches.next();,if (matches != null ) match = (Match) matches.next();
XMLRenderer.java,match = (Match) matches.next();,if (matches != null ) match = (Match) matches.next();
XMLRenderer.java,mark = (TokenEntry) iterator.next();,if (iterator != null ) mark = (TokenEntry) iterator.next();
DaaRule.java,final Iterator pathIterator = path.iterator();,if (path != null ) final Iterator pathIterator = path.iterator();
DaaRule.java,IDataFlowNode inode = (IDataFlowNode) pathIterator.next();,if (pathIterator != null ) IDataFlowNode inode = (IDataFlowNode) pathIterator.next();
VariableAccessVisitor.java,Iterator childrenIterator = children.iterator();,if (children != null ) Iterator childrenIterator = children.iterator();
CSVRenderer.java,rv = (IRuleViolation) i.next();,if (i != null ) rv = (IRuleViolation) i.next();
EmacsRenderer.java,IRuleViolation rv = (IRuleViolation) i.next();,if (i != null ) IRuleViolation rv = (IRuleViolation) i.next();
HTMLRenderer.java,IRuleViolation rv = (IRuleViolation) i.next();,if (i != null ) IRuleViolation rv = (IRuleViolation) i.next();
HTMLRenderer.java,Report.ProcessingError pe = (Report.ProcessingError) i.next();,if (i != null ) Report.ProcessingError pe = (Report.ProcessingError) i.next();
HTMLRenderer.java,sv = (Report.SuppressedViolation) i.next();,if (i != null ) sv = (Report.SuppressedViolation) i.next();
IDEAJRenderer.java,IRuleViolation rv = (IRuleViolation) i.next();,if (i != null ) IRuleViolation rv = (IRuleViolation) i.next();
IDEAJRenderer.java,IRuleViolation rv = (IRuleViolation) i.next();,if (i != null ) IRuleViolation rv = (IRuleViolation) i.next();
PapariTextRenderer.java,IRuleViolation rv = (IRuleViolation) i.next();,if (i != null ) IRuleViolation rv = (IRuleViolation) i.next();
SummaryHTMLRenderer.java,Map summary = report.getSummary();,if (report != null ) Map summary = report.getSummary();
SummaryHTMLRenderer.java,Map.Entry entry = (Map.Entry) i.next();,if (i != null ) Map.Entry entry = (Map.Entry) i.next();
SummaryHTMLRenderer.java,String ruleName = (String) entry.getKey();,if (entry != null ) String ruleName = (String) entry.getKey();
TextPadRenderer.java,IRuleViolation rv = (IRuleViolation) i.next();,if (i != null ) IRuleViolation rv = (IRuleViolation) i.next();
TextRenderer.java,for (i = report.iterator(); i.hasNext();) {,if ({ != null ) for (i = report.iterator(); i.hasNext();) {
TextRenderer.java,IRuleViolation rv = (IRuleViolation) i.next();,if (i != null ) IRuleViolation rv = (IRuleViolation) i.next();
TextRenderer.java,for (i = report.errors(); i.hasNext();) {,if ({ != null ) for (i = report.errors(); i.hasNext();) {
TextRenderer.java,Report.ProcessingError error = (Report.ProcessingError) i.next();,if (i != null ) Report.ProcessingError error = (Report.ProcessingError) i.next();
TextRenderer.java,excluded = (Report.SuppressedViolation) i.next();,if (i != null ) excluded = (Report.SuppressedViolation) i.next();
VBHTMLRenderer.java,IRuleViolation rv = (IRuleViolation) iter.next();,if (iter != null ) IRuleViolation rv = (IRuleViolation) iter.next();
XMLRenderer.java,IRuleViolation rv = (IRuleViolation) i.next();,if (i != null ) IRuleViolation rv = (IRuleViolation) i.next();
ASTAnnotation.java,ASTLiteral element = (ASTLiteral) iter.next();,if (iter != null ) ASTLiteral element = (ASTLiteral) iter.next();
SimpleNode.java,Attribute attr = (Attribute) iter.next();,if (iter != null ) Attribute attr = (Attribute) iter.next();
AttributesSubMenu.java,Attribute attribute = (Attribute) i.next();,if (i != null ) Attribute attribute = (Attribute) i.next();
XPathRule.java,Entry e = (Entry) j.next();,if (j != null ) Entry e = (Entry) j.next();
NcssConstructorCount.java,DataPoint point = (DataPoint) points.next();,if (points != null ) DataPoint point = (DataPoint) points.next();
NcssMethodCount.java,DataPoint point = (DataPoint) points.next();,if (points != null ) DataPoint point = (DataPoint) points.next();
NcssTypeCount.java,DataPoint point = (DataPoint) points.next();,if (points != null ) DataPoint point = (DataPoint) points.next();
ExceptionAsFlowControl.java,ASTCatchStatement catchStmt = (ASTCatchStatement) iter.next();,if (iter != null ) ASTCatchStatement catchStmt = (ASTCatchStatement) iter.next();
NonThreadSafeSingleton.java,ASTIfStatement ifStatement = (ASTIfStatement) iter.next();,if (iter != null ) ASTIfStatement ifStatement = (ASTIfStatement) iter.next();
NpathComplexity.java,ASTConditionalOrExpression element = (ASTConditionalOrExpression) iter.next();,if (iter != null ) ASTConditionalOrExpression element = (ASTConditionalOrExpression) iter.next();
NpathComplexity.java,ASTConditionalAndExpression element = (ASTConditionalAndExpression) iter.next();,if (iter != null ) ASTConditionalAndExpression element = (ASTConditionalAndExpression) iter.next();
NpathComplexity.java,DataPoint point = (DataPoint) points.next();,if (points != null ) DataPoint point = (DataPoint) points.next();
TooManyFields.java,ASTFieldDeclaration fd = (ASTFieldDeclaration) it.next();,if (it != null ) ASTFieldDeclaration fd = (ASTFieldDeclaration) it.next();
UnsynchronizedStaticDateFormatter.java,NameOccurrence occ = (NameOccurrence) i.next();,if (i != null ) NameOccurrence occ = (NameOccurrence) i.next();
TestClassWithoutTestCases.java,ASTMethodDeclarator md = (ASTMethodDeclarator) it.next();,if (it != null ) ASTMethodDeclarator md = (ASTMethodDeclarator) it.next();
UnnecessaryCast.java,List usages = decl.getUsages();,if (decl != null ) List usages = decl.getUsages();
UnnecessaryCast.java,NameOccurrence no = (NameOccurrence) iter.next();,if (iter != null ) NameOccurrence no = (NameOccurrence) iter.next();
AbstractOptimizationRule.java,NameOccurrence occ = (NameOccurrence) j.next();,if (j != null ) NameOccurrence occ = (NameOccurrence) j.next();
UseStringBufferForStringAppends.java,NameOccurrence no = (NameOccurrence) iter.next();,if (iter != null ) NameOccurrence no = (NameOccurrence) iter.next();
ExceptionSignatureDeclaration.java,exception = (ASTName) iter.next();,if (iter != null ) exception = (ASTName) iter.next();
InefficientStringBuffering.java,ASTLiteral literal = (ASTLiteral)i.next();,if ((ASTLiteral)i != null ) ASTLiteral literal = (ASTLiteral)i.next();
InefficientStringBuffering.java,ASTName name = (ASTName)i.next();,if ((ASTName)i != null ) ASTName name = (ASTName)i.next();
StringToStringRule.java,NameOccurrence occ = (NameOccurrence) i.next();,if (i != null ) NameOccurrence occ = (NameOccurrence) i.next();
Benchmark.java,Iterator i = factory.getRegisteredRuleSets();,if (factory != null ) Iterator i = factory.getRegisteredRuleSets();
Benchmark.java,File file = (File) k.next();,if (k != null ) File file = (File) k.next();
Benchmark.java,File file = (File) k.next();,if (k != null ) File file = (File) k.next();
AssignmentToNonFinalStatic.java,Map vars = node.getScope().getVariableDeclarations();,if (node != null ) Map vars = node.getScope().getVariableDeclarations();
AssignmentToNonFinalStatic.java,Map.Entry entry = (Map.Entry) i.next();,if (i != null ) Map.Entry entry = (Map.Entry) i.next();
AssignmentToNonFinalStatic.java,VariableNameDeclaration decl = (VariableNameDeclaration) entry.getKey();,if (entry != null ) VariableNameDeclaration decl = (VariableNameDeclaration) entry.getKey();
AssignmentToNonFinalStatic.java,NameOccurrence occ = (NameOccurrence) j.next();,if (j != null ) NameOccurrence occ = (NameOccurrence) j.next();
PreserveStackTrace.java,VariableNameDeclaration decl = (VariableNameDeclaration) i.next();,if (i != null ) VariableNameDeclaration decl = (VariableNameDeclaration) i.next();
UnnecessaryLocalBeforeReturn.java,Map vars = name.getScope().getVariableDeclarations();,if (name != null ) Map vars = name.getScope().getVariableDeclarations();
UnnecessaryLocalBeforeReturn.java,Map.Entry entry = (Map.Entry) i.next();,if (i != null ) Map.Entry entry = (Map.Entry) i.next();
UnnecessaryLocalBeforeReturn.java,VariableNameDeclaration key = (VariableNameDeclaration) entry.getKey();,if (entry != null ) VariableNameDeclaration key = (VariableNameDeclaration) entry.getKey();
UnnecessaryLocalBeforeReturn.java,List usages = (List) entry.getValue();,if (entry != null ) List usages = (List) entry.getValue();
UnnecessaryLocalBeforeReturn.java,NameOccurrence occ = (NameOccurrence) j.next();,if (j != null ) NameOccurrence occ = (NameOccurrence) j.next();
UnnecessaryLocalBeforeReturn.java,ASTPrimarySuffix element = (ASTPrimarySuffix) iter.next();,if (iter != null ) ASTPrimarySuffix element = (ASTPrimarySuffix) iter.next();
LocalVariableCouldBeFinal.java,Map.Entry entry = (Map.Entry) i.next();,if (i != null ) Map.Entry entry = (Map.Entry) i.next();
LocalVariableCouldBeFinal.java,VariableNameDeclaration var = (VariableNameDeclaration) entry.getKey();,if (entry != null ) VariableNameDeclaration var = (VariableNameDeclaration) entry.getKey();
MethodArgumentCouldBeFinal.java,Map.Entry entry = (Map.Entry) i.next();,if (i != null ) Map.Entry entry = (Map.Entry) i.next();
MethodArgumentCouldBeFinal.java,VariableNameDeclaration var = (VariableNameDeclaration) entry.getKey();,if (entry != null ) VariableNameDeclaration var = (VariableNameDeclaration) entry.getKey();
ConsecutiveLiteralAppends.java,Map decls = node.getScope().getVariableDeclarations();,if (node != null ) Map decls = node.getScope().getVariableDeclarations();
ConsecutiveLiteralAppends.java,Map.Entry entry = (Map.Entry) iter.next();,if (iter != null ) Map.Entry entry = (Map.Entry) iter.next();
ConsecutiveLiteralAppends.java,List decl = (List) entry.getValue();,if (entry != null ) List decl = (List) entry.getValue();
AbstractSunSecureRule.java,final ASTFieldDeclaration fd = (ASTFieldDeclaration) it.next();,if (it != null ) final ASTFieldDeclaration fd = (ASTFieldDeclaration) it.next();
AbstractSunSecureRule.java,final ASTLocalVariableDeclaration lvd = (ASTLocalVariableDeclaration) it.next();,if (it != null ) final ASTLocalVariableDeclaration lvd = (ASTLocalVariableDeclaration) it.next();
ArrayIsStoredDirectly.java,final ASTBlockStatement b = (ASTBlockStatement) it.next();,if (it != null ) final ASTBlockStatement b = (ASTBlockStatement) it.next();
OccurrenceFinder.java,List names = nameFinder.getNames();,if (nameFinder != null ) List names = nameFinder.getNames();
OccurrenceFinder.java,NameOccurrence occ = (NameOccurrence) i.next();,if (i != null ) NameOccurrence occ = (NameOccurrence) i.next();
AbstractInefficientZeroCheck.java,List declars = node.getUsages();,if (node != null ) List declars = node.getUsages();
AbstractInefficientZeroCheck.java,NameOccurrence occ = (NameOccurrence) i.next();,if (i != null ) NameOccurrence occ = (NameOccurrence) i.next();
AbstractPoorMethodCall.java,NameOccurrence occ = (NameOccurrence) i.next();,if (i != null ) NameOccurrence occ = (NameOccurrence) i.next();
AccessorClassGeneration.java,String aName = (String) li.previous();,if (li != null ) String aName = (String) li.previous();
AccessorClassGeneration.java,ASTConstructorDeclaration cd = (ASTConstructorDeclaration) constructors.next();,if (constructors != null ) ASTConstructorDeclaration cd = (ASTConstructorDeclaration) constructors.next();
AccessorClassGeneration.java,AllocData ad = (AllocData) allocations.next();,if (allocations != null ) AllocData ad = (AllocData) allocations.next();
AvoidFieldNameMatchingMethodName.java,ASTMethodDeclaration m = (ASTMethodDeclaration) it.next();,if (it != null ) ASTMethodDeclaration m = (ASTMethodDeclaration) it.next();
AvoidReassigningParameters.java,Map params = node.getScope().getVariableDeclarations();,if (node != null ) Map params = node.getScope().getVariableDeclarations();
AvoidReassigningParameters.java,Map.Entry entry = (Map.Entry) i.next();,if (i != null ) Map.Entry entry = (Map.Entry) i.next();
AvoidReassigningParameters.java,VariableNameDeclaration decl = (VariableNameDeclaration) entry.getKey();,if (entry != null ) VariableNameDeclaration decl = (VariableNameDeclaration) entry.getKey();
AvoidReassigningParameters.java,List usages = (List) entry.getValue();,if (entry != null ) List usages = (List) entry.getValue();
AvoidReassigningParameters.java,NameOccurrence occ = (NameOccurrence) j.next();,if (j != null ) NameOccurrence occ = (NameOccurrence) j.next();
BeanMembersShouldSerializeRule.java,Map vars = node.getScope().getVariableDeclarations();,if (node != null ) Map vars = node.getScope().getVariableDeclarations();
BeanMembersShouldSerializeRule.java,VariableNameDeclaration decl = (VariableNameDeclaration) i.next();,if (i != null ) VariableNameDeclaration decl = (VariableNameDeclaration) i.next();
CloseResource.java,ASTLocalVariableDeclaration var = (ASTLocalVariableDeclaration) it.next();,if (it != null ) ASTLocalVariableDeclaration var = (ASTLocalVariableDeclaration) it.next();
MethodWithSameNameAsEnclosingClass.java,ASTMethodDeclarator m = (ASTMethodDeclarator) i.next();,if (i != null ) ASTMethodDeclarator m = (ASTMethodDeclarator) i.next();
SymbolTableTestRule.java,NameOccurrence no = (NameOccurrence)iter.next();,if ((NameOccurrence)iter != null ) NameOccurrence no = (NameOccurrence)iter.next();
UnusedFormalParameterRule.java,Map vars = node.getScope().getVariableDeclarations();,if (node != null ) Map vars = node.getScope().getVariableDeclarations();
UnusedFormalParameterRule.java,Map.Entry entry = (Map.Entry) i.next();,if (i != null ) Map.Entry entry = (Map.Entry) i.next();
UnusedFormalParameterRule.java,VariableNameDeclaration nameDecl = (VariableNameDeclaration) entry.getKey();,if (entry != null ) VariableNameDeclaration nameDecl = (VariableNameDeclaration) entry.getKey();
UnusedFormalParameterRule.java,NameOccurrence occ = (NameOccurrence) j.next();,if (j != null ) NameOccurrence occ = (NameOccurrence) j.next();
UnusedLocalVariableRule.java,NameOccurrence occ = (NameOccurrence) j.next();,if (j != null ) NameOccurrence occ = (NameOccurrence) j.next();
UnusedPrivateFieldRule.java,Map vars = node.getScope().getVariableDeclarations();,if (node != null ) Map vars = node.getScope().getVariableDeclarations();
UnusedPrivateFieldRule.java,Map.Entry entry = (Map.Entry) i.next();,if (i != null ) Map.Entry entry = (Map.Entry) i.next();
UnusedPrivateFieldRule.java,VariableNameDeclaration decl = (VariableNameDeclaration) entry.getKey();,if (entry != null ) VariableNameDeclaration decl = (VariableNameDeclaration) entry.getKey();
UnusedPrivateFieldRule.java,NameOccurrence nameOccurrence = (NameOccurrence) j.next();,if (j != null ) NameOccurrence nameOccurrence = (NameOccurrence) j.next();
UselessAssignment.java,IDataFlowNode inode = (IDataFlowNode) i.next();,if (i != null ) IDataFlowNode inode = (IDataFlowNode) i.next();
UselessOperationOnImmutable.java,NameOccurrence no = (NameOccurrence) it.next();,if (it != null ) NameOccurrence no = (NameOccurrence) it.next();
BrokenNullCheck.java,ASTPrimaryExpression primaryExpression = (ASTPrimaryExpression) iter.next();,if (iter != null ) ASTPrimaryExpression primaryExpression = (ASTPrimaryExpression) iter.next();
BrokenNullCheck.java,ASTPrimaryPrefix primaryPrefix = (ASTPrimaryPrefix) iterator.next();,if (iterator != null ) ASTPrimaryPrefix primaryPrefix = (ASTPrimaryPrefix) iterator.next();
MethodReturnsInternalArray.java,final ASTReturnStatement ret = (ASTReturnStatement) it.next();,if (it != null ) final ASTReturnStatement ret = (ASTReturnStatement) it.next();
PapariTextRenderer.java,Map summary = report.getCountSummary();,if (report != null ) Map summary = report.getCountSummary();
PapariTextRenderer.java,Map.Entry entry = (Map.Entry) i.next();,if (i != null ) Map.Entry entry = (Map.Entry) i.next();
PapariTextRenderer.java,String key = (String) entry.getKey();,if (entry != null ) String key = (String) entry.getKey();
PapariTextRenderer.java,Report.ProcessingError error = (Report.ProcessingError) i.next();,if (i != null ) Report.ProcessingError error = (Report.ProcessingError) i.next();
ClassTypeResolver.java,ASTImportDeclaration anImportDeclaration = (ASTImportDeclaration) anIterator.next();,if (anIterator != null ) ASTImportDeclaration anImportDeclaration = (ASTImportDeclaration) anIterator.next();
ArrayIsStoredDirectly.java,ASTFormalParameter fp = (ASTFormalParameter) it.next();,if (it != null ) ASTFormalParameter fp = (ASTFormalParameter) it.next();
Report.java,Integer line = new Integer(violation.getBeginLine());,if (Integer(violation != null ) Integer line = new Integer(violation.getBeginLine());
AbstractNcssCount.java,int lines = lineCount.intValue();,if (lineCount != null ) int lines = lineCount.intValue();
ExcessiveNodeCountRule.java,numNodes += treeSize.intValue();,if (treeSize != null ) numNodes += treeSize.intValue();
NpathComplexity.java,caseRange *= complexity.intValue();,if (complexity != null ) caseRange *= complexity.intValue();
GUI.java,Comparator comparator = matchColumns[columnIndex].sorter();,if (matchColumns[columnIndex] != null ) Comparator comparator = matchColumns[columnIndex].sorter();
GUI.java,SortingTableModel model = (SortingTableModel)resultsTable.getModel();,if ((SortingTableModel)resultsTable != null ) SortingTableModel model = (SortingTableModel)resultsTable.getModel();
InsufficientStringBufferDeclaration.java,Map.Entry entry = (Map.Entry) iter.next();,if (iter != null ) Map.Entry entry = (Map.Entry) iter.next();
CollectionUtil.java,Map map = new HashMap(source.size());,if (HashMap(source != null ) Map map = new HashMap(source.size());
CollectionUtil.java,Iterator iter = source.entrySet().iterator();,if (source != null ) Iterator iter = source.entrySet().iterator();
CollectionUtil.java,entry = (Entry)iter.next();,if ((Entry)iter != null ) entry = (Entry)iter.next();
GUI.java,Set sourceIDs = new HashSet(match.getMarkCount());,if (HashSet(match != null ) Set sourceIDs = new HashSet(match.getMarkCount());
GUI.java,match = (Match)i.next();,if ((Match)i != null ) match = (Match)i.next();
MatchAlgorithm.java,Match match = (Match) i.next();,if (i != null ) Match match = (Match) i.next();
MatchAlgorithm.java,TokenEntry mark = (TokenEntry) occurrences.next();,if (occurrences != null ) TokenEntry mark = (TokenEntry) occurrences.next();
MatchAlgorithm.java,Map markGroups = new HashMap(tokens.size());,if (HashMap(tokens != null ) Map markGroups = new HashMap(tokens.size());
VariableAccessVisitor.java,Map declarations = (Map) i.next();,if (i != null ) Map declarations = (Map) i.next();
VariableAccessVisitor.java,Map.Entry entry = (Map.Entry) j.next();,if (j != null ) Map.Entry entry = (Map.Entry) j.next();
VariableAccessVisitor.java,VariableNameDeclaration vnd = (VariableNameDeclaration) entry.getKey();,if (entry != null ) VariableNameDeclaration vnd = (VariableNameDeclaration) entry.getKey();
VariableAccessVisitor.java,NameOccurrence occurrence = (NameOccurrence) k.next();,if (k != null ) NameOccurrence occurrence = (NameOccurrence) k.next();
AbstractPMDProperty.java,Class arrayType = value.getClass().getComponentType();,if (value != null ) Class arrayType = value.getClass().getComponentType();
BeanMembersShouldSerializeRule.java,List getSetMethList = new ArrayList(methods.size());,if (ArrayList(methods != null ) List getSetMethList = new ArrayList(methods.size());
MoreThanOneLogger.java,count = (Integer) stack.pop();,if (stack != null ) count = (Integer) stack.pop();
UnusedPrivateMethodRule.java,MethodNameDeclaration mnd = (MethodNameDeclaration) i.next();,if (i != null ) MethodNameDeclaration mnd = (MethodNameDeclaration) i.next();
UnusedPrivateMethodRule.java,MethodNameDeclaration mnd = (MethodNameDeclaration) i.next();,if (i != null ) MethodNameDeclaration mnd = (MethodNameDeclaration) i.next();
UnusedPrivateMethodRule.java,NameOccurrence occ = (NameOccurrence) i.next();,if (i != null ) NameOccurrence occ = (NameOccurrence) i.next();
UselessAssignment.java,Object o = hash.get(va.getVariableName());,if (hash != null ) Object o = hash.get(va.getVariableName());
ImmutableField.java,Map vars = node.getScope().getVariableDeclarations();,if (node != null ) Map vars = node.getScope().getVariableDeclarations();
ImmutableField.java,Map.Entry entry = (Map.Entry) i.next();,if (i != null ) Map.Entry entry = (Map.Entry) i.next();
ImmutableField.java,VariableNameDeclaration field = (VariableNameDeclaration) entry.getKey();,if (entry != null ) VariableNameDeclaration field = (VariableNameDeclaration) entry.getKey();
ImmutableField.java,NameOccurrence occ = (NameOccurrence) j.next();,if (j != null ) NameOccurrence occ = (NameOccurrence) j.next();
NpathComplexity.java,SimpleJavaNode element = (SimpleJavaNode) iter.next();,if (iter != null ) SimpleJavaNode element = (SimpleJavaNode) iter.next();
PositionalIteratorRule.java,String name = (String) i.next();,if (i != null ) String name = (String) i.next();
InsufficientStringBufferDeclaration.java,List usage = node.getUsages();,if (node != null ) List usage = node.getUsages();
MethodNameDeclarationTest.java,Iterator i = m.keySet().iterator();,if (m != null ) Iterator i = m.keySet().iterator();
OnlyOneReturnRule.java,SimpleNode problem = (SimpleNode) i.next();,if (i != null ) SimpleNode problem = (SimpleNode) i.next();
SimpleNodeTreeNodeAdapter.java,children = new ArrayList(node.jjtGetNumChildren());,if (ArrayList(node != null ) children = new ArrayList(node.jjtGetNumChildren());
ClassScope.java,MethodNameDeclaration mnd = (MethodNameDeclaration) i.next();,if (i != null ) MethodNameDeclaration mnd = (MethodNameDeclaration) i.next();
ClassScope.java,Iterator i = methodNames.keySet().iterator();,if (methodNames != null ) Iterator i = methodNames.keySet().iterator();
ClassScope.java,MethodNameDeclaration mnd = (MethodNameDeclaration) i.next();,if (i != null ) MethodNameDeclaration mnd = (MethodNameDeclaration) i.next();
ConstructorCallsOverridableMethod.java,String name = (String) it.next();,if (it != null ) String name = (String) it.next();
ConstructorCallsOverridableMethod.java,String name = (String) it.next();,if (it != null ) String name = (String) it.next();
ConstructorCallsOverridableMethod.java,MethodInvocation meth = (MethodInvocation) it.next();,if (it != null ) MethodInvocation meth = (MethodInvocation) it.next();
ConstructorCallsOverridableMethod.java,ConstructorHolder ch = (ConstructorHolder) privConstIter.next();,if (privConstIter != null ) ConstructorHolder ch = (ConstructorHolder) privConstIter.next();
ConstructorCallsOverridableMethod.java,ConstructorInvocation ci = (ConstructorInvocation) calledConstIter.next();,if (calledConstIter != null ) ConstructorInvocation ci = (ConstructorInvocation) calledConstIter.next();
ConstructorCallsOverridableMethod.java,Map.Entry entry = (Map.Entry) methodsIter.next();,if (methodsIter != null ) Map.Entry entry = (Map.Entry) methodsIter.next();
ConstructorCallsOverridableMethod.java,MethodHolder h = (MethodHolder) entry.getKey();,if (entry != null ) MethodHolder h = (MethodHolder) entry.getKey();
ConstructorCallsOverridableMethod.java,List calledMeths = (List) entry.getValue();,if (entry != null ) List calledMeths = (List) entry.getValue();
ConstructorCallsOverridableMethod.java,MethodInvocation meth = (MethodInvocation) calledMethsIter.next();,if (calledMethsIter != null ) MethodInvocation meth = (MethodInvocation) calledMethsIter.next();
ConstructorCallsOverridableMethod.java,Map.Entry entry = (Map.Entry) constIter.next();,if (constIter != null ) Map.Entry entry = (Map.Entry) constIter.next();
ConstructorCallsOverridableMethod.java,ConstructorHolder ch = (ConstructorHolder) entry.getKey();,if (entry != null ) ConstructorHolder ch = (ConstructorHolder) entry.getKey();
ConstructorCallsOverridableMethod.java,List calledMeths = (List) entry.getValue();,if (entry != null ) List calledMeths = (List) entry.getValue();
ConstructorCallsOverridableMethod.java,MethodInvocation meth = (MethodInvocation) calledMethsIter.next();//CCE,if (calledMethsIter != null ) MethodInvocation meth = (MethodInvocation) calledMethsIter.next();//CCE
ConstructorCallsOverridableMethod.java,MethodHolder h = (MethodHolder) evaldMethsIter.next();,if (evaldMethsIter != null ) MethodHolder h = (MethodHolder) evaldMethsIter.next();
ConstructorCallsOverridableMethod.java,ConstructorHolder ch = (ConstructorHolder) constIter.next();,if (constIter != null ) ConstructorHolder ch = (ConstructorHolder) constIter.next();
ConstructorCallsOverridableMethod.java,ASTPrimaryExpression ape = (ASTPrimaryExpression) it.next();,if (it != null ) ASTPrimaryExpression ape = (ASTPrimaryExpression) it.next();
ConstructorCallsOverridableMethod.java,List packClass = meth.getQualifierNames();,if (meth != null ) List packClass = meth.getQualifierNames();
ConstructorCallsOverridableMethod.java,String name = (String) it.next();,if (it != null ) String name = (String) it.next();
Formatter.java,Iterator iter = renderersByCode.keySet().iterator();,if (renderersByCode != null ) Iterator iter = renderersByCode.keySet().iterator();
CPDTask.java,FileSet fileSet = (FileSet) iterator.next();,if (iterator != null ) FileSet fileSet = (FileSet) iterator.next();
DaaRule.java,final Iterator violationIterator = this.daaRuleViolations.iterator();,if (this != null ) final Iterator violationIterator = this.daaRuleViolations.iterator();
DaaRule.java,final DaaRuleViolation violation = (DaaRuleViolation)violationIterator.next();,if ((DaaRuleViolation)violationIterator != null ) final DaaRuleViolation violation = (DaaRuleViolation)violationIterator.next();
CurrentPath.java,IDataFlowNode inode = (IDataFlowNode) list.getLast();,if (list != null ) IDataFlowNode inode = (IDataFlowNode) list.getLast();
MatchCollector.java,List matchList = new ArrayList(startMap.values());,if (ArrayList(startMap != null ) List matchList = new ArrayList(startMap.values());
CyclomaticComplexity.java,Entry entry = (Entry) entryStack.peek();,if (entryStack != null ) Entry entry = (Entry) entryStack.peek();
CyclomaticComplexity.java,Entry classEntry = (Entry) entryStack.pop();,if (entryStack != null ) Entry classEntry = (Entry) entryStack.pop();
CyclomaticComplexity.java,Entry methodEntry = (Entry) entryStack.pop();,if (entryStack != null ) Entry methodEntry = (Entry) entryStack.pop();
CyclomaticComplexity.java,Entry classEntry = (Entry) entryStack.peek();,if (entryStack != null ) Entry classEntry = (Entry) entryStack.peek();
CyclomaticComplexity.java,Entry classEntry = (Entry) entryStack.pop();,if (entryStack != null ) Entry classEntry = (Entry) entryStack.pop();
CyclomaticComplexity.java,Entry constructorEntry = (Entry) entryStack.pop();,if (entryStack != null ) Entry constructorEntry = (Entry) entryStack.pop();
CyclomaticComplexity.java,Entry classEntry = (Entry) entryStack.peek();,if (entryStack != null ) Entry classEntry = (Entry) entryStack.peek();
UselessOperationOnImmutable.java,SimpleNode sn = (SimpleNode) no.getLocation();,if (no != null ) SimpleNode sn = (SimpleNode) no.getLocation();
UseStringBufferForStringAppends.java,SimpleNode name = (SimpleNode) no.getLocation();,if (no != null ) SimpleNode name = (SimpleNode) no.getLocation();
JUnitAssertionsShouldIncludeMessage.java,AssertionCall call = (AssertionCall) i.next();,if (i != null ) AssertionCall call = (AssertionCall) i.next();
AccessorClassGeneration.java,ClassData outerDataSet = (ClassData) outerIterator.next();,if (outerIterator != null ) ClassData outerDataSet = (ClassData) outerIterator.next();
AccessorClassGeneration.java,ClassData innerDataSet = (ClassData) innerIterator.next();,if (innerIterator != null ) ClassData innerDataSet = (ClassData) innerIterator.next();
CloseResource.java,ASTTryStatement t = (ASTTryStatement) it.next();,if (it != null ) ASTTryStatement t = (ASTTryStatement) it.next();
PreserveStackTrace.java,ASTThrowStatement throwStatement = (ASTThrowStatement) iter.next();,if (iter != null ) ASTThrowStatement throwStatement = (ASTThrowStatement) iter.next();
TooManyFields.java,String k = (String) it.next();,if (it != null ) String k = (String) it.next();
AvoidDuplicateLiteralsRule.java,String key = (String) i.next();,if (i != null ) String key = (String) i.next();
DuplicateImportsRule.java,ImportWrapper thisImportOnDemand = (ImportWrapper) i.next();,if (i != null ) ImportWrapper thisImportOnDemand = (ImportWrapper) i.next();
DuplicateImportsRule.java,ImportWrapper thisSingleTypeImport = (ImportWrapper) j.next();,if (j != null ) ImportWrapper thisSingleTypeImport = (ImportWrapper) j.next();
UnusedImportsRule.java,ImportWrapper wrapper = (ImportWrapper) i.next();,if (i != null ) ImportWrapper wrapper = (ImportWrapper) i.next();
AbstractRuleChainVisitor.java,long start = Benchmark.nanoTime();,if (Benchmark != null ) long start = Benchmark.nanoTime();
AbstractRuleChainVisitor.java,long end = Benchmark.nanoTime();,if (Benchmark != null ) long end = Benchmark.nanoTime();
AbstractRuleChainVisitor.java,start = Benchmark.nanoTime();,if (Benchmark != null ) start = Benchmark.nanoTime();
AbstractRuleChainVisitor.java,final List nodeNames = rule.getRuleChainVisits();,if (rule != null ) final List nodeNames = rule.getRuleChainVisits();
AbstractRuleChainVisitor.java,end = Benchmark.nanoTime();,if (Benchmark != null ) end = Benchmark.nanoTime();
PMD.java,long start = Benchmark.nanoTime();,if (Benchmark != null ) long start = Benchmark.nanoTime();
PMD.java,long end = Benchmark.nanoTime();,if (Benchmark != null ) long end = Benchmark.nanoTime();
PMD.java,start = Benchmark.nanoTime();,if (Benchmark != null ) start = Benchmark.nanoTime();
PMD.java,end = Benchmark.nanoTime();,if (Benchmark != null ) end = Benchmark.nanoTime();
PMD.java,start = Benchmark.nanoTime();,if (Benchmark != null ) start = Benchmark.nanoTime();
PMD.java,end = Benchmark.nanoTime();,if (Benchmark != null ) end = Benchmark.nanoTime();
PMD.java,start = Benchmark.nanoTime();,if (Benchmark != null ) start = Benchmark.nanoTime();
PMD.java,end = Benchmark.nanoTime();,if (Benchmark != null ) end = Benchmark.nanoTime();
PMD.java,long start = Benchmark.nanoTime();,if (Benchmark != null ) long start = Benchmark.nanoTime();
PMD.java,long startFiles = Benchmark.nanoTime();,if (Benchmark != null ) long startFiles = Benchmark.nanoTime();
PMD.java,long endFiles = Benchmark.nanoTime();,if (Benchmark != null ) long endFiles = Benchmark.nanoTime();
PMD.java,long startLoadRules = Benchmark.nanoTime();,if (Benchmark != null ) long startLoadRules = Benchmark.nanoTime();
PMD.java,long endLoadRules = Benchmark.nanoTime();,if (Benchmark != null ) long endLoadRules = Benchmark.nanoTime();
PMD.java,long reportStart = Benchmark.nanoTime();,if (Benchmark != null ) long reportStart = Benchmark.nanoTime();
PMD.java,long reportEnd = Benchmark.nanoTime();,if (Benchmark != null ) long reportEnd = Benchmark.nanoTime();
PMD.java,long end = Benchmark.nanoTime();,if (Benchmark != null ) long end = Benchmark.nanoTime();
PMD.java,long start = Benchmark.nanoTime();,if (Benchmark != null ) long start = Benchmark.nanoTime();
PMD.java,long end = Benchmark.nanoTime();,if (Benchmark != null ) long end = Benchmark.nanoTime();
Report.java,IRuleViolation rv = (IRuleViolation) i.next();,if (i != null ) IRuleViolation rv = (IRuleViolation) i.next();
Report.java,ReportListener listener = (ReportListener) i.next();,if (i != null ) ReportListener listener = (ReportListener) i.next();
RuleChain.java,Iterator iter = ruleSet.getRules().iterator();,if (ruleSet != null ) Iterator iter = ruleSet.getRules().iterator();
RuleSet.java,Rule r = (Rule) i.next();,if (i != null ) Rule r = (Rule) i.next();
RuleSet.java,long start = Benchmark.nanoTime();,if (Benchmark != null ) long start = Benchmark.nanoTime();
RuleSet.java,long end = Benchmark.nanoTime();,if (Benchmark != null ) long end = Benchmark.nanoTime();
RuleSetFactory.java,Rule rule = (Rule) i.next();,if (i != null ) Rule rule = (Rule) i.next();
RuleSets.java,RuleSet ruleSet = (RuleSet) i.next();,if (i != null ) RuleSet ruleSet = (RuleSet) i.next();
RuleSets.java,RuleSet ruleSet = (RuleSet) i.next();,if (i != null ) RuleSet ruleSet = (RuleSet) i.next();
RuleSets.java,RuleSet ruleSet = (RuleSet) i.next();,if (i != null ) RuleSet ruleSet = (RuleSet) i.next();
RuleSets.java,RuleSet ruleSet = (RuleSet) i.next();,if (i != null ) RuleSet ruleSet = (RuleSet) i.next();
PMDTask.java,FileSet fs = (FileSet) i.next();,if (i != null ) FileSet fs = (FileSet) i.next();
PMDTask.java,Formatter formatter = (Formatter) i.next();,if (i != null ) Formatter formatter = (Formatter) i.next();
PMDTask.java,Rule rule = (Rule) i.next();,if (i != null ) Rule rule = (Rule) i.next();
PMDTask.java,Formatter f = (Formatter) i.next();,if (i != null ) Formatter f = (Formatter) i.next();
PMDTask.java,RuleSetWrapper rs = (RuleSetWrapper) it.next();,if (it != null ) RuleSetWrapper rs = (RuleSetWrapper) it.next();
SourceCode.java,c = (List) code.get();,if (code != null ) c = (List) code.get();
IDEAJRenderer.java,String path = (String) i.next();,if (i != null ) String path = (String) i.next();
XPathRule.java,Object node = pending.pop();,if (pending != null ) Object node = pending.pop();
StatisticalRule.java,Iterator points = dataPoints.iterator();,if (dataPoints != null ) Iterator points = dataPoints.iterator();
StatisticalRule.java,Iterator points = pointSet.iterator();,if (pointSet != null ) Iterator points = pointSet.iterator();
StatisticalRule.java,DataPoint point = (DataPoint) points.next();,if (points != null ) DataPoint point = (DataPoint) points.next();
StatisticalRule.java,Object[] arr = points.toArray();,if (points != null ) Object[] arr = points.toArray();
StatisticalRule.java,DataPoint point = (DataPoint) points.next();,if (points != null ) DataPoint point = (DataPoint) points.next();
NameFinder.java,NameOccurrence occurrence = (NameOccurrence) names.getLast();,if (names != null ) NameOccurrence occurrence = (NameOccurrence) names.getLast();
NameFinder.java,NameOccurrence occ = (NameOccurrence) i.next();,if (i != null ) NameOccurrence occ = (NameOccurrence) i.next();
TypeSet.java,String importStmt = (String) i.next();,if (i != null ) String importStmt = (String) i.next();
TypeSet.java,String importStmt = (String) i.next();,if (i != null ) String importStmt = (String) i.next();
TypeSet.java,Resolver resolver = (Resolver) i.next();,if (i != null ) Resolver resolver = (Resolver) i.next();
PMDASMClassLoader.java,List inner = asmVisitor.getInnerClasses();,if (asmVisitor != null ) List inner = asmVisitor.getInnerClasses();
Benchmark.java,Result result = (Result) j.next();,if (j != null ) Result result = (Result) j.next();
Benchmark.java,Collection rules = ruleSet.getRules();,if (ruleSet != null ) Collection rules = ruleSet.getRules();
Benchmark.java,Rule rule = (Rule) j.next();,if (j != null ) Rule rule = (Rule) j.next();
Benchmark.java,List results = new ArrayList(nameToBenchmarkResult.values());,if (ArrayList(nameToBenchmarkResult != null ) List results = new ArrayList(nameToBenchmarkResult.values());
Benchmark.java,BenchmarkResult benchmarkResult = (BenchmarkResult)i.next();,if ((BenchmarkResult)i != null ) BenchmarkResult benchmarkResult = (BenchmarkResult)i.next();
Benchmark.java,BenchmarkResult benchmarkResult = (BenchmarkResult)i.next();,if ((BenchmarkResult)i != null ) BenchmarkResult benchmarkResult = (BenchmarkResult)i.next();
ViolationOverviewDoubleClickListener.java,final ViolationOutlinePage vioPage = (ViolationOutlinePage)view.getCurrentPage();,if ((ViolationOutlinePage)view != null ) final ViolationOutlinePage vioPage = (ViolationOutlinePage)view.getCurrentPage();
RuleLabelProvider.java,result = rule.getDescription().trim();,if (rule != null ) result = rule.getDescription().trim();
ProjectRecord.java,final IJavaElement javaMember = JavaCore.create(resource.getParent());,if (JavaCore != null ) final IJavaElement javaMember = JavaCore.create(resource.getParent());
ViolationOverviewContentProvider.java,final Iterator elementIterator = elements.iterator();,if (elements != null ) final Iterator elementIterator = elements.iterator();
ViolationOverviewContentProvider.java,final AbstractPMDRecord record = (AbstractPMDRecord)elementIterator.next();,if ((AbstractPMDRecord)elementIterator != null ) final AbstractPMDRecord record = (AbstractPMDRecord)elementIterator.next();
UselessOperationOnImmutable.java,ASTName sn = (ASTName) no.getLocation();,if (no != null ) ASTName sn = (ASTName) no.getLocation();
PMD.java,long startLoadRules = Benchmark.nanoTime();,if (Benchmark != null ) long startLoadRules = Benchmark.nanoTime();
PMD.java,long endLoadRules = Benchmark.nanoTime();,if (Benchmark != null ) long endLoadRules = Benchmark.nanoTime();
RuleSet.java,long start = Benchmark.nanoTime();,if (Benchmark != null ) long start = Benchmark.nanoTime();
RuleSet.java,long start = Benchmark.nanoTime();,if (Benchmark != null ) long start = Benchmark.nanoTime();
RuleSet.java,long end = Benchmark.nanoTime();,if (Benchmark != null ) long end = Benchmark.nanoTime();
DynamicXPathRule.java,SimpleNode n = (SimpleNode) i.next();,if (i != null ) SimpleNode n = (SimpleNode) i.next();
DynamicXPathRule.java,Entry e = (Entry) i.next();,if (i != null ) Entry e = (Entry) i.next();
XPathRule.java,String part = xpath.trim();,if (xpath != null ) String part = xpath.trim();
XPathRule.java,SimpleNode n = (SimpleNode) i.next();,if (i != null ) SimpleNode n = (SimpleNode) i.next();
XPathRule.java,Entry e = (Entry) i.next();,if (i != null ) Entry e = (Entry) i.next();
StringUtil.java,i+= pad.length();,if (pad != null ) i+= pad.length();
ConfigUtils.java,Iterator<String> rulesets = settings.getRuleSets().iterator();,if (settings != null ) Iterator<String> rulesets = settings.getRuleSets().iterator();
ConfigUtils.java,String ruleSetXml = rulesets.next();,if (rulesets != null ) String ruleSetXml = rulesets.next();
DetectCutAndPasteCmd.java,final Iterator listenerIterator = listenerList.iterator();,if (listenerList != null ) final Iterator listenerIterator = listenerList.iterator();
DetectCutAndPasteCmd.java,final IPropertyListener listener = (IPropertyListener) listenerIterator.next();,if (listenerIterator != null ) final IPropertyListener listener = (IPropertyListener) listenerIterator.next();
DataflowViewPage.java,final int index = methodSelection.getSelectionIndex();,if (methodSelection != null ) final int index = methodSelection.getSelectionIndex();
PMDASMClassLoader.java,List inner = asmVisitor.getInnerClasses();,if (asmVisitor != null ) List inner = asmVisitor.getInnerClasses();
PMDASMClassLoader.java,byte[] byteCode = writer.toByteArray();,if (writer != null ) byte[] byteCode = writer.toByteArray();
CloneMethodMustImplementCloneable.java,Class clazz = type.getType();,if (type != null ) Class clazz = type.getType();
CloneMethodMustImplementCloneable.java,clazz = clazz.getSuperclass();,if (clazz != null ) clazz = clazz.getSuperclass();
PMD.java,InputStream is = dataSource.getInputStream();,if (dataSource != null ) InputStream is = dataSource.getInputStream();
PMD.java,int threadCount = Runtime.getRuntime().availableProcessors();,if (Runtime != null ) int threadCount = Runtime.getRuntime().availableProcessors();
DaaRule.java,IDataFlowNode inode = (IDataFlowNode) d.next();,if (d != null ) IDataFlowNode inode = (IDataFlowNode) d.next();
DaaRule.java,Object o = hash.get(va.getVariableName());,if (hash != null ) Object o = hash.get(va.getVariableName());
DaaRule.java,int startLine = u.node.getLine();,if (u != null ) int startLine = u.node.getLine();
DaaRule.java,int endLine = inode.getLine();,if (inode != null ) int endLine = inode.getLine();
DaaRule.java,SimpleNode lastSimpleNode = u.node.getSimpleNode();,if (u != null ) SimpleNode lastSimpleNode = u.node.getSimpleNode();
DaaRule.java,Iterator violationIterator = this.daaRuleViolations.iterator();,if (this != null ) Iterator violationIterator = this.daaRuleViolations.iterator();
DaaRule.java,DaaRuleViolation violation = (DaaRuleViolation)violationIterator.next();,if ((DaaRuleViolation)violationIterator != null ) DaaRuleViolation violation = (DaaRuleViolation)violationIterator.next();
DetectCutAndPasteCmd.java,final Iterator listenerIterator = listenerList.iterator();,if (listenerList != null ) final Iterator listenerIterator = listenerList.iterator();
DetectCutAndPasteCmd.java,final IPropertyListener listener = (IPropertyListener) listenerIterator.next();,if (listenerIterator != null ) final IPropertyListener listener = (IPropertyListener) listenerIterator.next();
RuleTst.java,Properties ruleProperties = test.getRule().getProperties();,if (test != null ) Properties ruleProperties = test.getRule().getProperties();
AbstractOptimizationRule.java,ASTPostfixExpression pe = (ASTPostfixExpression) it.next();,if (it != null ) ASTPostfixExpression pe = (ASTPostfixExpression) it.next();
AbstractOptimizationRule.java,final ASTAssignmentOperator a = (ASTAssignmentOperator) it.next();,if (it != null ) final ASTAssignmentOperator a = (ASTAssignmentOperator) it.next();
MethodArgumentCouldBeFinal.java,NameOccurrence occ = (NameOccurrence) j.next();,if (j != null ) NameOccurrence occ = (NameOccurrence) j.next();
RunPMDAction.java,final OutputWindow wnd = OutputWindow.getInstance();,if (OutputWindow != null ) final OutputWindow wnd = OutputWindow.getInstance();
Linker.java,List bList = node.getFlow();,if (node != null ) List bList = node.getFlow();
DetectCutAndPasteCmd.java,final Iterator listenerIterator = listenerList.iterator();,if (listenerList != null ) final Iterator listenerIterator = listenerList.iterator();
DetectCutAndPasteCmd.java,final IPropertyListener listener = (IPropertyListener) listenerIterator.next();,if (listenerIterator != null ) final IPropertyListener listener = (IPropertyListener) listenerIterator.next();
DAAPathFinder.java,int childCount = treeNode.getParent().getChildCount();,if (treeNode != null ) int childCount = treeNode.getParent().getChildCount();
DAAPathFinder.java,PathElement e = (PathElement) tNode.getUserObject();,if (tNode != null ) PathElement e = (PathElement) tNode.getUserObject();
DataflowAnomalyTableContentProvider.java,IMarker marker = markerDeltas[i].getMarker();,if (markerDeltas[i] != null ) IMarker marker = markerDeltas[i].getMarker();
DataflowAnomalyTableViewer.java,TableColumn[] columns = table.getColumns();,if (table != null ) TableColumn[] columns = table.getColumns();
DataflowViewPage.java,reviewResourceAction = new ReviewResourceAction(resourceRecord.getResource());,if (ReviewResourceAction(resourceRecord != null ) reviewResourceAction = new ReviewResourceAction(resourceRecord.getResource());
DataflowViewPage.java,StringReader reader = new StringReader(getDocument().get());,if (StringReader(getDocument() != null ) StringReader reader = new StringReader(getDocument().get());
DataflowViewPage.java,IEditorInput input = editor.getEditorInput();,if (editor != null ) IEditorInput input = editor.getEditorInput();
DataflowViewPage.java,DataflowGraph graph = graphViewer.getGraph();,if (graphViewer != null ) DataflowGraph graph = graphViewer.getGraph();
DataflowViewPage.java,int index = methodSelection.getSelectionIndex();,if (methodSelection != null ) int index = methodSelection.getSelectionIndex();
DataflowViewPage.java,DataflowGraph graph = graphViewer.getGraph();,if (graphViewer != null ) DataflowGraph graph = graphViewer.getGraph();
DataflowViewPage.java,int index = methodSelection.getSelectionIndex();,if (methodSelection != null ) int index = methodSelection.getSelectionIndex();
DataflowViewPage.java,int index = methodSelection.getSelectionIndex();,if (methodSelection != null ) int index = methodSelection.getSelectionIndex();
PriorityFilter.java,listString += priorityList.get(i).toString();,if (priorityList != null ) listString += priorityList.get(i).toString();
ViolationOverview.java,final Tree tree = this.treeViewer.getTree();,if (this != null ) final Tree tree = this.treeViewer.getTree();
ViolationOverview.java,final List projectFilterList = this.projectFilter.getProjectFilterList();,if (this != null ) final List projectFilterList = this.projectFilter.getProjectFilterList();
ViolationOverview.java,final List filterList = this.priorityFilter.getPriorityFilterList();,if (this != null ) final List filterList = this.priorityFilter.getPriorityFilterList();
ViolationOverview.java,final IStructuredSelection selection = (IStructuredSelection) event.getSelection();,if (event != null ) final IStructuredSelection selection = (IStructuredSelection) event.getSelection();
ViolationOverview.java,final Object object = selection.getFirstElement();,if (selection != null ) final Object object = selection.getFirstElement();
ViolationOverview.java,final IStructuredSelection selection = (IStructuredSelection) event.getSelection();,if (event != null ) final IStructuredSelection selection = (IStructuredSelection) event.getSelection();
ViolationOverview.java,final Object object = selection.getFirstElement();,if (selection != null ) final Object object = selection.getFirstElement();
ViolationOverviewContentProvider.java,final List projects = root.getChildrenAsList();,if (root != null ) final List projects = root.getChildrenAsList();
ViolationOverviewContentProvider.java,children = files.toArray();,if (files != null ) children = files.toArray();
ViolationOverviewContentProvider.java,children = packages.toArray();,if (packages != null ) children = packages.toArray();
CalculateStatisticsAction.java,Object[] objects = violationView.getViewer().getVisibleExpandedElements();,if (violationView != null ) Object[] objects = violationView.getViewer().getVisibleExpandedElements();
CalculateStatisticsAction.java,AbstractPMDRecord[] children = record.getChildren();,if (record != null ) AbstractPMDRecord[] children = record.getChildren();
CPDVisitor.java,final IWorkingSet workingSet = properties.getProjectWorkingSet();,if (properties != null ) final IWorkingSet workingSet = properties.getProjectWorkingSet();
DetectCutAndPasteCmd.java,final Iterator matches = this.detectCutAndPaste();,if (this != null ) final Iterator matches = this.detectCutAndPaste();
DetectCutAndPasteCmd.java,final InputStream contentsStream = new ByteArrayInputStream(reportString.getBytes());,if (ByteArrayInputStream(reportString != null ) final InputStream contentsStream = new ByteArrayInputStream(reportString.getBytes());
VariableAccessVisitor.java,Map.Entry entry = (Map.Entry) j.next();,if (j != null ) Map.Entry entry = (Map.Entry) j.next();
CyclomaticComplexityTest.java,Iterator i = report.iterator();,if (report != null ) Iterator i = report.iterator();
CyclomaticComplexityTest.java,RuleViolation rv = (RuleViolation) i.next();,if (i != null ) RuleViolation rv = (RuleViolation) i.next();
CyclomaticComplexityTest.java,Iterator i = report.iterator();,if (report != null ) Iterator i = report.iterator();
CyclomaticComplexityTest.java,RuleViolation rv = (RuleViolation) i.next();,if (i != null ) RuleViolation rv = (RuleViolation) i.next();
CyclomaticComplexityTest.java,Iterator i = report.iterator();,if (report != null ) Iterator i = report.iterator();
CyclomaticComplexityTest.java,RuleViolation rv = (RuleViolation) i.next();,if (i != null ) RuleViolation rv = (RuleViolation) i.next();
ExcessiveMethodLengthTest.java,RuleViolation rv = (RuleViolation)i.next();,if ((RuleViolation)i != null ) RuleViolation rv = (RuleViolation)i.next();
AbstractOptimizationRule.java,ASTPreIncrementExpression ie = (ASTPreIncrementExpression) it.next();,if (it != null ) ASTPreIncrementExpression ie = (ASTPreIncrementExpression) it.next();
AbstractOptimizationRule.java,ASTPreDecrementExpression de = (ASTPreDecrementExpression) it.next();,if (it != null ) ASTPreDecrementExpression de = (ASTPreDecrementExpression) it.next();
RunPMDAction.java,final OutputWindow wnd = OutputWindow.getInstance();,if (OutputWindow != null ) final OutputWindow wnd = OutputWindow.getInstance();
InsufficientStringBufferDeclaration.java,anticipatedLength += str.length();,if (str != null ) anticipatedLength += str.length();
GUI.java,trimLeadingWhitespace = button.isSelected();,if (button != null ) trimLeadingWhitespace = button.isSelected();
MatchesFunction.java,String testString = attr.getValue();,if (attr != null ) String testString = attr.getValue();
PMDAnnotation.java,Iterator iterator = annotations.iterator();,if (annotations != null ) Iterator iterator = annotations.iterator();
RunPMDAction.java,DataObject dataobject = ( DataObject )enumeration.nextElement();,if ()enumeration != null ) DataObject dataobject = ( DataObject )enumeration.nextElement();
TableSorter.java,Directive directive = (Directive) it.next();,if (it != null ) Directive directive = (Directive) it.next();
ConfigUtils.java,Iterator iterator = getAllAvailableRules().iterator();,if (getAllAvailableRules() != null ) Iterator iterator = getAllAvailableRules().iterator();
ConfigUtils.java,Rule rule = ( Rule )iterator.next();,if ()iterator != null ) Rule rule = ( Rule )iterator.next();
ConfigUtils.java,Iterator iter = rulePropOverrides.entrySet().iterator();,if (rulePropOverrides != null ) Iterator iter = rulePropOverrides.entrySet().iterator();
ConfigUtils.java,Map.Entry entry = (Map.Entry)iter.next();,if ((Map != null ) Map.Entry entry = (Map.Entry)iter.next();
ConfigUtils.java,Iterator iterator = ruleSetFactory.getRegisteredRuleSets();,if (ruleSetFactory != null ) Iterator iterator = ruleSetFactory.getRegisteredRuleSets();
ConfigUtils.java,RuleSet ruleset = ( RuleSet )iterator.next();,if ()iterator != null ) RuleSet ruleset = ( RuleSet )iterator.next();
ConfigUtils.java,iterator = extraFactories.iterator();,if (extraFactories != null ) iterator = extraFactories.iterator();
ConfigUtils.java,ruleSetFactory = (RuleSetFactory)iterator.next();,if ((RuleSetFactory)iterator != null ) ruleSetFactory = (RuleSetFactory)iterator.next();
ConfigUtils.java,Iterator iter = ruleSetFactory.getRegisteredRuleSets();,if (ruleSetFactory != null ) Iterator iter = ruleSetFactory.getRegisteredRuleSets();
ConfigUtils.java,RuleSet ruleset = ( RuleSet )iter.next();,if ()iter != null ) RuleSet ruleset = ( RuleSet )iter.next();
ConfigUtils.java,Iterator rulesets = settings.getRuleSets().iterator();,if (settings != null ) Iterator rulesets = settings.getRuleSets().iterator();
ConfigUtils.java,String ruleSetXml = (String)rulesets.next();,if ((String)rulesets != null ) String ruleSetXml = (String)rulesets.next();
PMDOptionsSettings.java,Iterator iterator = map.entrySet().iterator();,if (map != null ) Iterator iterator = map.entrySet().iterator();
PMDOptionsSettings.java,entry = (Map.Entry)iterator.next();,if ((Map != null ) entry = (Map.Entry)iterator.next();
PMDOptionsSettings.java,key = entry.getKey();,if (entry != null ) key = entry.getKey();
PMDOptionsSettings.java,value = entry.getValue();,if (entry != null ) value = entry.getValue();
PMDOptionsSettings.java,copy = new ArrayList(coll.size());,if (ArrayList(coll != null ) copy = new ArrayList(coll.size());
PMDOptionsSettings.java,Iterator iterator = coll.iterator();,if (coll != null ) Iterator iterator = coll.iterator();
PMDOptionsSettings.java,elem = iterator.next();,if (iterator != null ) elem = iterator.next();
RuleEnabler.java,List available = ConfigUtils.getAllAvailableRules();,if (ConfigUtils != null ) List available = ConfigUtils.getAllAvailableRules();
RuleEnabler.java,Map allRulesPropOverrides = data.getProperties();,if (data != null ) Map allRulesPropOverrides = data.getProperties();
PMDScanAnnotation.java,Iterator iterator = annotations.iterator();,if (annotations != null ) Iterator iterator = annotations.iterator();
AvoidFieldNameMatchingMethodName.java,ASTMethodDeclaration m = (ASTMethodDeclaration) it.next();,if (it != null ) ASTMethodDeclaration m = (ASTMethodDeclaration) it.next();
InefficientEmptyStringCheck.java,SimpleNode nameNode = node.getTypeNameNode();,if (node != null ) SimpleNode nameNode = node.getTypeNameNode();
InefficientEmptyStringCheck.java,List declars = node.getUsages();,if (node != null ) List declars = node.getUsages();
InefficientEmptyStringCheck.java,NameOccurrence occ = (NameOccurrence) i.next();,if (i != null ) NameOccurrence occ = (NameOccurrence) i.next();
NpathComplexity.java,npath *= complexity.intValue();,if (complexity != null ) npath *= complexity.intValue();
NpathComplexity.java,npath *= complexity.intValue();,if (complexity != null ) npath *= complexity.intValue();
NpathComplexity.java,npath += complexity.intValue();,if (complexity != null ) npath += complexity.intValue();
NpathComplexity.java,npath += complexity.intValue();,if (complexity != null ) npath += complexity.intValue();
ClassScopeTest.java,Iterator i = m.keySet().iterator();,if (m != null ) Iterator i = m.keySet().iterator();
ClassScopeTest.java,MethodNameDeclaration mnd = (MethodNameDeclaration) i.next();,if (i != null ) MethodNameDeclaration mnd = (MethodNameDeclaration) i.next();
ClassScopeTest.java,Iterator i = m.keySet().iterator();,if (m != null ) Iterator i = m.keySet().iterator();
ClassScopeTest.java,MethodNameDeclaration mnd = (MethodNameDeclaration) i.next();,if (i != null ) MethodNameDeclaration mnd = (MethodNameDeclaration) i.next();
ClassScopeTest.java,Iterator i = m.keySet().iterator();,if (m != null ) Iterator i = m.keySet().iterator();
ClassScopeTest.java,MethodNameDeclaration mnd = (MethodNameDeclaration) i.next();,if (i != null ) MethodNameDeclaration mnd = (MethodNameDeclaration) i.next();
VariableAccessVisitor.java,VariableNameDeclaration vnd = (VariableNameDeclaration) j.next();,if (j != null ) VariableNameDeclaration vnd = (VariableNameDeclaration) j.next();
PapariTextRenderer.java,String key = (String) i.next();,if (i != null ) String key = (String) i.next();
SummaryHTMLRenderer.java,String ruleName = (String) i.next();,if (i != null ) String ruleName = (String) i.next();
AvoidReassigningParameters.java,VariableNameDeclaration decl = (VariableNameDeclaration) i.next();,if (i != null ) VariableNameDeclaration decl = (VariableNameDeclaration) i.next();
ConstructorCallsOverridableMethod.java,MethodHolder h = (MethodHolder) methodsIter.next();,if (methodsIter != null ) MethodHolder h = (MethodHolder) methodsIter.next();
ConstructorCallsOverridableMethod.java,ConstructorHolder ch = (ConstructorHolder) constIter.next();,if (constIter != null ) ConstructorHolder ch = (ConstructorHolder) constIter.next();
UnusedFormalParameterRule.java,VariableNameDeclaration nameDecl = (VariableNameDeclaration) i.next();,if (i != null ) VariableNameDeclaration nameDecl = (VariableNameDeclaration) i.next();
UnusedPrivateFieldRule.java,VariableNameDeclaration decl = (VariableNameDeclaration) i.next();,if (i != null ) VariableNameDeclaration decl = (VariableNameDeclaration) i.next();
AssignmentToNonFinalStatic.java,VariableNameDeclaration decl = (VariableNameDeclaration) i.next();,if (i != null ) VariableNameDeclaration decl = (VariableNameDeclaration) i.next();
ImmutableField.java,VariableNameDeclaration field = (VariableNameDeclaration) i.next();,if (i != null ) VariableNameDeclaration field = (VariableNameDeclaration) i.next();
UnnecessaryLocalBeforeReturn.java,VariableNameDeclaration key = (VariableNameDeclaration) i.next();,if (i != null ) VariableNameDeclaration key = (VariableNameDeclaration) i.next();
MethodArgumentCouldBeFinal.java,VariableNameDeclaration var = (VariableNameDeclaration) i.next();,if (i != null ) VariableNameDeclaration var = (VariableNameDeclaration) i.next();
CyclomaticComplexity.java,Entry entry = (Entry) entryStack.peek();,if (entryStack != null ) Entry entry = (Entry) entryStack.peek();
CyclomaticComplexity.java,int childCount = node.jjtGetNumChildren();,if (node != null ) int childCount = node.jjtGetNumChildren();
CyclomaticComplexity.java,Entry classEntry = (Entry) entryStack.pop();,if (entryStack != null ) Entry classEntry = (Entry) entryStack.pop();
CyclomaticComplexity.java,Entry methodEntry = (Entry) entryStack.pop();,if (entryStack != null ) Entry methodEntry = (Entry) entryStack.pop();
CyclomaticComplexity.java,Entry classEntry = (Entry) entryStack.peek();,if (entryStack != null ) Entry classEntry = (Entry) entryStack.peek();
CyclomaticComplexity.java,Entry classEntry = (Entry) entryStack.pop();,if (entryStack != null ) Entry classEntry = (Entry) entryStack.pop();
CyclomaticComplexity.java,Entry constructorEntry = (Entry) entryStack.pop();,if (entryStack != null ) Entry constructorEntry = (Entry) entryStack.pop();
CyclomaticComplexity.java,Entry classEntry = (Entry) entryStack.peek();,if (entryStack != null ) Entry classEntry = (Entry) entryStack.peek();
ConsecutiveLiteralAppends.java,SimpleNode nn = (SimpleNode) node.getTypeNameNode();,if (node != null ) SimpleNode nn = (SimpleNode) node.getTypeNameNode();
CSVRenderer.java,IRuleViolation rv = (IRuleViolation) i.next();,if (i != null ) IRuleViolation rv = (IRuleViolation) i.next();
GenerateReportAction.java,Object object = selection.getFirstElement();,if (selection != null ) Object object = selection.getFirstElement();
ViewMemento.java,path = PMDUiPlugin.getDefault().getStateLocation();,if (PMDUiPlugin != null ) path = PMDUiPlugin.getDefault().getStateLocation();
ViewMemento.java,String line = contentReader.readLine();,if (contentReader != null ) String line = contentReader.readLine();
ViewMemento.java,valueString += valueList.get(k).toString();,if (valueList != null ) valueString += valueList.get(k).toString();
ViolationOverviewContentProvider.java,IWorkspaceRoot workspaceRoot = (IWorkspaceRoot) root.getResource();,if (root != null ) IWorkspaceRoot workspaceRoot = (IWorkspaceRoot) root.getResource();
ViolationOverviewContentProvider.java,List projects = root.getChildrenAsList();,if (root != null ) List projects = root.getChildrenAsList();
ViolationOverviewContentProvider.java,workspaceRoot = (IWorkspaceRoot) root.getResource();,if (root != null ) workspaceRoot = (IWorkspaceRoot) root.getResource();
ViolationOverviewContentProvider.java,workspaceRoot = (IWorkspaceRoot) root.getResource();,if (root != null ) workspaceRoot = (IWorkspaceRoot) root.getResource();
ViolationOverviewContentProvider.java,resource = markerDeltas[i].getResource();,if (markerDeltas[i] != null ) resource = markerDeltas[i].getResource();
ViolationOverviewContentProvider.java,IProject project = resource.getProject();,if (resource != null ) IProject project = resource.getProject();
ViolationOverviewContentProvider.java,List packages = projectRec.getChildrenAsList();,if (projectRec != null ) List packages = projectRec.getChildrenAsList();
ViolationOverviewContentProvider.java,AbstractPMDRecord packageRec = fileRec.getParent();,if (fileRec != null ) AbstractPMDRecord packageRec = fileRec.getParent();
ViolationOverviewLabelProvider.java,Object[] files = packRec.getChildren();,if (packRec != null ) Object[] files = packRec.getChildren();
ViolationOverviewLabelProvider.java,Object[] files = packRec.getChildren();,if (packRec != null ) Object[] files = packRec.getChildren();
ViolationOverviewLabelProvider.java,result = projectRec.getName();,if (projectRec != null ) result = projectRec.getName();
CloseResource.java,ASTImportDeclaration n = (ASTImportDeclaration) i.next();,if (i != null ) ASTImportDeclaration n = (ASTImportDeclaration) i.next();
PreserveStackTrace.java,VariableNameDeclaration decl = (VariableNameDeclaration) i.next();,if (i != null ) VariableNameDeclaration decl = (VariableNameDeclaration) i.next();
TableColumnSorter.java,TableColumn[] columns = column.getParent().getColumns();,if (column != null ) TableColumn[] columns = column.getParent().getColumns();
ViolationOutline.java,ArrayList filterList = priorityFilter.getPriorityFilterList();,if (priorityFilter != null ) ArrayList filterList = priorityFilter.getPriorityFilterList();
ViolationOverview.java,ArrayList projects = projectFilter.getProjectFilterList();,if (projectFilter != null ) ArrayList projects = projectFilter.getProjectFilterList();
ViolationOverview.java,TableColumn[] columns = table.getColumns();,if (table != null ) TableColumn[] columns = table.getColumns();
ViolationOverview.java,Table table = treeViewer.getTableTree().getTable();,if (treeViewer != null ) Table table = treeViewer.getTableTree().getTable();
ViolationOverview.java,Integer[] priorities = PMDUiPlugin.getDefault().getPriorityValues();,if (PMDUiPlugin != null ) Integer[] priorities = PMDUiPlugin.getDefault().getPriorityValues();
ViolationOverview.java,ArrayList projectFilterList = projectFilter.getProjectFilterList();,if (projectFilter != null ) ArrayList projectFilterList = projectFilter.getProjectFilterList();
ViolationOverview.java,AbstractPMDRecord[] projects = root.getChildren();,if (root != null ) AbstractPMDRecord[] projects = root.getChildren();
ViolationOverview.java,List filterList = priorityFilter.getPriorityFilterList();,if (priorityFilter != null ) List filterList = priorityFilter.getPriorityFilterList();
ViolationOverview.java,IStructuredSelection selection = (IStructuredSelection) event.getSelection();,if (event != null ) IStructuredSelection selection = (IStructuredSelection) event.getSelection();
ViolationOverview.java,Object object = selection.getFirstElement();,if (selection != null ) Object object = selection.getFirstElement();
ViolationOverview.java,IStructuredSelection selection = (IStructuredSelection) event.getSelection();,if (event != null ) IStructuredSelection selection = (IStructuredSelection) event.getSelection();
ViolationOverview.java,Object object = selection.getFirstElement();,if (selection != null ) Object object = selection.getFirstElement();
ViolationOverviewContentProvider.java,treeViewer = violationView.getViewer();,if (violationView != null ) treeViewer = violationView.getViewer();
ViolationOverviewContentProvider.java,IWorkspaceRoot workspaceRoot = (IWorkspaceRoot) root.getResource();,if (root != null ) IWorkspaceRoot workspaceRoot = (IWorkspaceRoot) root.getResource();
ViolationOverviewContentProvider.java,List projects = root.getChildrenAsList();,if (root != null ) List projects = root.getChildrenAsList();
ViolationOverviewContentProvider.java,workspaceRoot = (IWorkspaceRoot) root.getResource();,if (root != null ) workspaceRoot = (IWorkspaceRoot) root.getResource();
ViolationOverviewContentProvider.java,workspaceRoot = (IWorkspaceRoot) root.getResource();,if (root != null ) workspaceRoot = (IWorkspaceRoot) root.getResource();
ViolationOverviewContentProvider.java,resource = markerDeltas[i].getResource();,if (markerDeltas[i] != null ) resource = markerDeltas[i].getResource();
ViolationOverviewContentProvider.java,IProject project = resource.getProject();,if (resource != null ) IProject project = resource.getProject();
ViolationOverviewContentProvider.java,List packages = projectRec.getChildrenAsList();,if (projectRec != null ) List packages = projectRec.getChildrenAsList();
ViolationOverviewContentProvider.java,AbstractPMDRecord packageRec = fileRec.getParent();,if (fileRec != null ) AbstractPMDRecord packageRec = fileRec.getParent();
CollapseAllAction.java,treeViewer = view.getViewer();,if (view != null ) treeViewer = view.getViewer();
PackageRecord.java,ICompilationUnit[] javaUnits = packageFragment.getCompilationUnits();,if (packageFragment != null ) ICompilationUnit[] javaUnits = packageFragment.getCompilationUnits();
PackageRecord.java,IResource javaResource = javaUnits[k].getCorrespondingResource();,if (javaUnits[k] != null ) IResource javaResource = javaUnits[k].getCorrespondingResource();
PackageRecord.java,ICompilationUnit unit = packageFragment.getCompilationUnit(resource.getName());,if (packageFragment != null ) ICompilationUnit unit = packageFragment.getCompilationUnit(resource.getName());
ProjectRecord.java,IResource[] members = project.members();,if (project != null ) IResource[] members = project.members();
RootRecord.java,IProject[] projects = workspaceRoot.getProjects();,if (workspaceRoot != null ) IProject[] projects = workspaceRoot.getProjects();
RootRecord.java,IProject proj = (IProject) projectRec.getResource();,if (projectRec != null ) IProject proj = (IProject) projectRec.getResource();
PMDRecord.java,IMarker[] childrenMarkers = children[i].findMarkers();,if (children[i] != null ) IMarker[] childrenMarkers = children[i].findMarkers();
StringTable.java,InputStream is = messageTableUrl.openStream();,if (messageTableUrl != null ) InputStream is = messageTableUrl.openStream();
DataflowView.java,DataflowGraph graph = graphViewer.getGraph();,if (graphViewer != null ) DataflowGraph graph = graphViewer.getGraph();
DataflowView.java,ISelectionProvider provider = activePart.getSite().getSelectionProvider();,if (activePart != null ) ISelectionProvider provider = activePart.getSite().getSelectionProvider();
DataflowView.java,String resourceString = getResourceAsString(method.getResource());,if (getResourceAsString(method != null ) String resourceString = getResourceAsString(method.getResource());
DataflowView.java,String resourceString = getResourceAsString(method.getResource());,if (getResourceAsString(method != null ) String resourceString = getResourceAsString(method.getResource());
DataflowView.java,ArrayList pmdMethodList = getPMDMethods(method.getResource());,if (getPMDMethods(method != null ) ArrayList pmdMethodList = getPMDMethods(method.getResource());
DataflowView.java,"String beginLine = getBeginLine(resourceString, pmdMethod.getBeginLine());","if (pmdMethod != null ) String beginLine = getBeginLine(resourceString, pmdMethod.getBeginLine());"
DataflowView.java,String methodName = method.getElementName();,if (method != null ) String methodName = method.getElementName();
DataflowView.java,String[] methodParamTypes = method.getParameterTypes();,if (method != null ) String[] methodParamTypes = method.getParameterTypes();
DataflowView.java,tempString = stringParamArray[k].trim();,if (stringParamArray[k] != null ) tempString = stringParamArray[k].trim();
DataflowView.java,retString = reader.readLine();,if (reader != null ) retString = reader.readLine();
DataflowView.java,retString += reader.readLine().trim();,if (reader != null ) retString += reader.readLine().trim();
DataflowView.java,DataflowGraph graph = graphViewer.getGraph();,if (graphViewer != null ) DataflowGraph graph = graphViewer.getGraph();
DataflowView.java,IEditorInput input = editor.getEditorInput();,if (editor != null ) IEditorInput input = editor.getEditorInput();
DataflowView.java,ISelectionProvider provider = part.getSite().getSelectionProvider();,if (part != null ) ISelectionProvider provider = part.getSite().getSelectionProvider();
DataflowView.java,ISelectionProvider provider = part.getSite().getSelectionProvider();,if (part != null ) ISelectionProvider provider = part.getSite().getSelectionProvider();
ViolationOverview.java,PMDRecord[] projects = root.getChildren();,if (root != null ) PMDRecord[] projects = root.getChildren();
ViolationOverviewContentProvider.java,ArrayList projects = root.getChildrenAsList();,if (root != null ) ArrayList projects = root.getChildrenAsList();
ViolationOverviewContentProvider.java,ArrayList packages = projectRec.getChildrenAsList();,if (projectRec != null ) ArrayList packages = projectRec.getChildrenAsList();
ViolationOverviewContentProvider.java,PMDRecord packageRec = fileRec.getParent();,if (fileRec != null ) PMDRecord packageRec = fileRec.getParent();
ProjectPropertiesManagerImpl.java,RuleSet projectRuleSet = projectProperties.getProjectRuleSet();,if (projectProperties != null ) RuleSet projectRuleSet = projectProperties.getProjectRuleSet();
SelectedRules.java,RuleSet rs = rsf.createRuleSet(strtok.nextToken());,if (rsf != null ) RuleSet rs = rsf.createRuleSet(strtok.nextToken());
HTMLRenderer.java,String d = rv.getDescription();,if (rv != null ) String d = rv.getDescription();
HTMLRenderer.java,Report.SuppressedViolation sv = (Report.SuppressedViolation) i.next();,if (i != null ) Report.SuppressedViolation sv = (Report.SuppressedViolation) i.next();
TextRenderer.java,Report.SuppressedViolation excluded = (Report.SuppressedViolation) i.next();,if (i != null ) Report.SuppressedViolation excluded = (Report.SuppressedViolation) i.next();
StringInstantiation.java,NameDeclaration nd = (NameDeclaration) name.getNameDeclaration();,if (name != null ) NameDeclaration nd = (NameDeclaration) name.getNameDeclaration();
Report.java,"key = rv.getPackageName() + ""."" + rv.getClassName();","if (rv != null ) key = rv.getPackageName() + ""."" + rv.getClassName();"
ExcludeLinesTest.java,BufferedReader br = new BufferedReader(e.getCopyReader());,if (BufferedReader(e != null ) BufferedReader br = new BufferedReader(e.getCopyReader());
ExcludeLines.java,String temp = tmp.substring(indexOfMarker).trim();,if (tmp != null ) String temp = tmp.substring(indexOfMarker).trim();
ExcludeLines.java,tmp = tmp.trim();,if (tmp != null ) tmp = tmp.trim();
ExcludeLines.java,copy = copyBuffer.toString();,if (copyBuffer != null ) copy = copyBuffer.toString();
PMD.java,Object rootNode = parser.parse(excluder.getCopyReader());,if (parser != null ) Object rootNode = parser.parse(excluder.getCopyReader());
PMDOutputListener.java,String l = outputEvent.getLine();,if (outputEvent != null ) String l = outputEvent.getLine();
PMDOutputListener.java,Set lineset = cookie.getLineSet();,if (cookie != null ) Set lineset = cookie.getLineSet();
PMDOutputListener.java,PMDAnnotation annotation = PMDAnnotation.getNewInstance();,if (PMDAnnotation != null ) PMDAnnotation annotation = PMDAnnotation.getNewInstance();
RunPMDAction.java,PMDOutputListener listener = PMDOutputListener.getInstance();,if (PMDOutputListener != null ) PMDOutputListener listener = PMDOutputListener.getInstance();
RunPMDAction.java,out = output.getOut();,if (output != null ) out = output.getOut();
RunPMDAction.java,List list = ConfigUtils.getRuleList();,if (ConfigUtils != null ) List list = ConfigUtils.getRuleList();
RunPMDAction.java,Iterator iterator = list.iterator();,if (list != null ) Iterator iterator = list.iterator();
RunPMDAction.java,StyledDocument doc = editor.getDocument();,if (editor != null ) StyledDocument doc = editor.getDocument();
RunPMDAction.java,Iterator iterator = dataobject.files().iterator();,if (dataobject != null ) Iterator iterator = dataobject.files().iterator();
RunPMDAction.java,FileObject file = ( FileObject )iterator.next();,if ()iterator != null ) FileObject file = ( FileObject )iterator.next();
RunPMDAction.java,DataObject dataobject = ( DataObject )enumeration.nextElement();,if ()enumeration != null ) DataObject dataobject = ( DataObject )enumeration.nextElement();
SymbolTableTestRule.java,MethodNameDeclaration mnd = (MethodNameDeclaration) i.next();,if (i != null ) MethodNameDeclaration mnd = (MethodNameDeclaration) i.next();
GUI.java,match = (Match)iter.next();,if ((Match)iter != null ) match = (Match)iter.next();
CPPTokenizer.java,Token currToken = tokenManager.getNextToken();,if (tokenManager != null ) Token currToken = tokenManager.getNextToken();
CPPTokenizer.java,currToken = tokenManager.getNextToken();,if (tokenManager != null ) currToken = tokenManager.getNextToken();
CSVRenderer.java,Match match = (Match) matches.next();,if (matches != null ) Match match = (Match) matches.next();
CSVRenderer.java,TokenEntry mark = (TokenEntry) marks.next();,if (marks != null ) TokenEntry mark = (TokenEntry) marks.next();
GUI.java,Match m = (Match) i.next();,if (i != null ) Match m = (Match) i.next();
SimpleRenderer.java,Match match = (Match) matches.next();,if (matches != null ) Match match = (Match) matches.next();
SimpleRenderer.java,TokenEntry mark = (TokenEntry) occurrences.next();,if (occurrences != null ) TokenEntry mark = (TokenEntry) occurrences.next();
XMLRenderer.java,Match match = (Match) matches.next();,if (matches != null ) Match match = (Match) matches.next();
XMLRenderer.java,TokenEntry mark = (TokenEntry) iterator.next();,if (iterator != null ) TokenEntry mark = (TokenEntry) iterator.next();
SingularField.java,String name = decl.getImage();,if (decl != null ) String name = decl.getImage();
SingularField.java,method = astClassOrInterfaceDeclaration.getImage();,if (astClassOrInterfaceDeclaration != null ) method = astClassOrInterfaceDeclaration.getImage();
StatisticalRule.java,Iterator points = dataPoints.iterator();,if (dataPoints != null ) Iterator points = dataPoints.iterator();
SimpleNode.java,SimpleNode parent = (SimpleNode) this.jjtGetParent();,if (this != null ) SimpleNode parent = (SimpleNode) this.jjtGetParent();
VariableNamingConventions.java,int len = SEPARATOR.length();,if (SEPARATOR != null ) int len = SEPARATOR.length();
StatisticalRule.java,DataPoint point = (DataPoint) points.next();,if (points != null ) DataPoint point = (DataPoint) points.next();
StringUtil.java,int l = src.length();,if (src != null ) int l = src.length();
DFAPanel.java,List access = inode.getVariableAccess();,if (inode != null ) List access = inode.getVariableAccess();
Designer.java,StringReader reader = new StringReader(codeEditorPane.getText());,if (StringReader(codeEditorPane != null ) StringReader reader = new StringReader(codeEditorPane.getText());
Designer.java,List methods = dfaGraphRule.getMethods();,if (dfaGraphRule != null ) List methods = dfaGraphRule.getMethods();
PMDOptionPane.java,String example = rules.getRule(box).getExample();,if (rules != null ) String example = rules.getRule(box).getExample();
UseIndexOfChar.java,NameOccurrence occ = (NameOccurrence) i.next();,if (i != null ) NameOccurrence occ = (NameOccurrence) i.next();
UseIndexOfChar.java,ASTLiteral literal = (ASTLiteral)j.next();,if ((ASTLiteral)j != null ) ASTLiteral literal = (ASTLiteral)j.next();
Report.java,private Set violations = new TreeSet(new RuleViolation.RuleViolationComparator());,if (RuleViolation != null ) private Set violations = new TreeSet(new RuleViolation.RuleViolationComparator());
Properties.java,Property p = (Property) i.next();,if (i != null ) Property p = (Property) i.next();
RuleSetsExtensionProcessor.java,IExtensionRegistry registry = Platform.getExtensionRegistry();,if (Platform != null ) IExtensionRegistry registry = Platform.getExtensionRegistry();
RuleSetsExtensionProcessor.java,IConfigurationElement[] elements = extensionPoint.getConfigurationElements();,if (extensionPoint != null ) IConfigurationElement[] elements = extensionPoint.getConfigurationElements();
ReviewCodeCmd.java,IWorkspace workspace = ResourcesPlugin.getWorkspace();,if (ResourcesPlugin != null ) IWorkspace workspace = ResourcesPlugin.getWorkspace();
ReviewCodeCmd.java,IWorkspace workspace = ResourcesPlugin.getWorkspace();,if (ResourcesPlugin != null ) IWorkspace workspace = ResourcesPlugin.getWorkspace();
ReviewCodeCmd.java,IResourceRuleFactory ruleFactory = workspace.getRuleFactory();,if (workspace != null ) IResourceRuleFactory ruleFactory = workspace.getRuleFactory();
ReviewCodeCmd.java,Iterator i = this.resources.iterator();,if (this != null ) Iterator i = this.resources.iterator();
ReviewCodeCmd.java,IResource resource = (IResource) i.next();,if (i != null ) IResource resource = (IResource) i.next();
ReviewCodeCmd.java,IClasspathEntry[] entries = javaProject.getRawClasspath();,if (javaProject != null ) IClasspathEntry[] entries = javaProject.getRawClasspath();
ReviewCodeCmd.java,this.rulesCount = ruleSet.getRules().size();,if (ruleSet != null ) this.rulesCount = ruleSet.getRules().size();
ReviewCodeCmd.java,IWorkbench workbench = PlatformUI.getWorkbench();,if (PlatformUI != null ) IWorkbench workbench = PlatformUI.getWorkbench();
ReviewCodeCmd.java,IPerspectiveRegistry reg = workbench.getPerspectiveRegistry();,if (workbench != null ) IPerspectiveRegistry reg = workbench.getPerspectiveRegistry();
ReviewCodeCmd.java,IWorkbenchWindow window = workbench.getActiveWorkbenchWindow();,if (workbench != null ) IWorkbenchWindow window = workbench.getActiveWorkbenchWindow();
EclipseUtils.java,final IProjectDescription description = project.getDescription();,if (project != null ) final IProjectDescription description = project.getDescription();
EclipseUtils.java,String[] prevNatures= description.getNatureIds();,if (description != null ) String[] prevNatures= description.getNatureIds();
ProjectPropertiesModelTest.java,RuleSet pmdRuleSet = PMDPlugin.getDefault().getRuleSet();,if (PMDPlugin != null ) RuleSet pmdRuleSet = PMDPlugin.getDefault().getRuleSet();
ProjectPropertiesModelTest.java,this.initialPluginRuleSet = PMDPlugin.getDefault().getRuleSet();,if (PMDPlugin != null ) this.initialPluginRuleSet = PMDPlugin.getDefault().getRuleSet();
PreferencesDAOTest.java,PreferencesDAO dao = DAOFactory.getFactory().getPreferencesDAO();,if (DAOFactory != null ) PreferencesDAO dao = DAOFactory.getFactory().getPreferencesDAO();
PreferencesDAOTest.java,PreferencesTO preferences = dao.readPreferences();,if (dao != null ) PreferencesTO preferences = dao.readPreferences();
PreferencesDAOTest.java,PreferencesDAO dao = DAOFactory.getFactory().getPreferencesDAO();,if (DAOFactory != null ) PreferencesDAO dao = DAOFactory.getFactory().getPreferencesDAO();
PreferencesDAOTest.java,IPreferenceStore store = PMDPlugin.getDefault().getPreferenceStore();,if (PMDPlugin != null ) IPreferenceStore store = PMDPlugin.getDefault().getPreferenceStore();
PreferencesDAOTest.java,IPath stateLocation = PMDPlugin.getDefault().getStateLocation();,if (PMDPlugin != null ) IPath stateLocation = PMDPlugin.getDefault().getStateLocation();
PMDGenerateASTAction.java,ASTWriter astWriter = WriterAbstractFactory.getFactory().getASTWriter();,if (WriterAbstractFactory != null ) ASTWriter astWriter = WriterAbstractFactory.getFactory().getASTWriter();
StringTable.java,this.topStart = System.currentTimeMillis();,if (System != null ) this.topStart = System.currentTimeMillis();
StringTable.java,this.topStop = System.currentTimeMillis();,if (System != null ) this.topStop = System.currentTimeMillis();
PMDPreferencePage.java,RuleSetWriter writer = WriterAbstractFactory.getFactory().getRuleSetWriter();,if (WriterAbstractFactory != null ) RuleSetWriter writer = WriterAbstractFactory.getFactory().getRuleSetWriter();
PMDPreferencePage.java,RuleSet defaultRuleSet = PMDPlugin.getDefault().getRuleSet();,if (PMDPlugin != null ) RuleSet defaultRuleSet = PMDPlugin.getDefault().getRuleSet();
PMDPropertyPageController.java,this.pmdAlreadyActivated = model.isPmdEnabled();,if (model != null ) this.pmdAlreadyActivated = model.isPmdEnabled();
UpdateProjectPropertiesCmd.java,this.needRebuild = projectPropertiesModel.isNeedRebuild();,if (projectPropertiesModel != null ) this.needRebuild = projectPropertiesModel.isNeedRebuild();
UpdateProjectPropertiesCmd.java,this.ruleSetFileExists = !projectPropertiesModel.isRuleSetFileExist();,if (!projectPropertiesModel != null ) this.ruleSetFileExists = !projectPropertiesModel.isRuleSetFileExist();
PMDResolutionGenerator.java,RuleSet ruleSet = PMDPlugin.getDefault().getRuleSet();,if (PMDPlugin != null ) RuleSet ruleSet = PMDPlugin.getDefault().getRuleSet();
ReviewAction.java,final boolean reviewPmdStyle = PMDPlugin.getDefault().isReviewPmdStyle();,if (PMDPlugin != null ) final boolean reviewPmdStyle = PMDPlugin.getDefault().isReviewPmdStyle();
ReviewAction.java,String additionalCommentPattern = PMDPlugin.getDefault().getReviewAdditionalComment();,if (PMDPlugin != null ) String additionalCommentPattern = PMDPlugin.getDefault().getReviewAdditionalComment();
ReviewAction.java,String additionalCommentPattern = PMDPlugin.getDefault().getReviewAdditionalComment();,if (PMDPlugin != null ) String additionalCommentPattern = PMDPlugin.getDefault().getReviewAdditionalComment();
AbstractProcessableCommand.java,strategy = (CommandProcessorStrategy) strategyClass.newInstance();,if (strategyClass != null ) strategy = (CommandProcessorStrategy) strategyClass.newInstance();
DefaultCommandProcessorStrategy.java,aProcessor = aCommand.getPreferredCommandProcessor();,if (aCommand != null ) aProcessor = aCommand.getPreferredCommandProcessor();
DefaultCommandProcessorStrategy.java,aProcessor = (CommandProcessor) clazz.newInstance();,if (clazz != null ) aProcessor = (CommandProcessor) clazz.newInstance();
DefaultCommandProcessorStrategy.java,final Enumeration e = bundle.getKeys();,if (bundle != null ) final Enumeration e = bundle.getKeys();
DefaultCommandProcessorStrategy.java,final String key = (String) e.nextElement();,if (e != null ) final String key = (String) e.nextElement();
ASTWriterImpl.java,DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();,if (DocumentBuilderFactory != null ) DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
ASTWriterImpl.java,DocumentBuilder documentBuilder = factory.newDocumentBuilder();,if (factory != null ) DocumentBuilder documentBuilder = factory.newDocumentBuilder();
ASTWriterImpl.java,Document doc = documentBuilder.newDocument();,if (documentBuilder != null ) Document doc = documentBuilder.newDocument();
ASTWriterImpl.java,Element simpleNodeElement = doc.createElement(simpleNode.toString());,if (doc != null ) Element simpleNodeElement = doc.createElement(simpleNode.toString());
ASTWriterImpl.java,BeanInfo beanInfo = Introspector.getBeanInfo(simpleNode.getClass());,if (Introspector != null ) BeanInfo beanInfo = Introspector.getBeanInfo(simpleNode.getClass());
ASTWriterImpl.java,PropertyDescriptor[] descriptors = beanInfo.getPropertyDescriptors();,if (beanInfo != null ) PropertyDescriptor[] descriptors = beanInfo.getPropertyDescriptors();
ASTWriterImpl.java,String attributeName = descriptors[i].getName();,if (descriptors[i] != null ) String attributeName = descriptors[i].getName();
ASTWriterImpl.java,Method getter = descriptors[i].getReadMethod();,if (descriptors[i] != null ) Method getter = descriptors[i].getReadMethod();
PMDPlugin.java,log = LogFactory.getLog(getClass().toString()); // always derive the name,if (name != null ) log = LogFactory.getLog(getClass().toString()); // always derive the name
PMDPlugin.java,Rule rule = ruleSet.getRuleByName(st.nextToken());,if (ruleSet != null ) Rule rule = ruleSet.getRuleByName(st.nextToken());
PMDPlugin.java,File ruleSetFile = new File(ruleSetLocation.toOSString());,if (File(ruleSetLocation != null ) File ruleSetFile = new File(ruleSetLocation.toOSString());
PMDPlugin.java,FileInputStream in = new FileInputStream(ruleSetLocation.toOSString());,if (FileInputStream(ruleSetLocation != null ) FileInputStream in = new FileInputStream(ruleSetLocation.toOSString());
PMDPlugin.java,IRuleSetManager ruleSetManager = PMDCorePlugin.getDefault().getRuleSetManager();,if (PMDCorePlugin != null ) IRuleSetManager ruleSetManager = PMDCorePlugin.getDefault().getRuleSetManager();
PMDPlugin.java,Iterator i = ruleSetManager.getDefaultRuleSets().iterator();,if (ruleSetManager != null ) Iterator i = ruleSetManager.getDefaultRuleSets().iterator();
PMDPlugin.java,RuleSet ruleSet = (RuleSet) i.next();,if (i != null ) RuleSet ruleSet = (RuleSet) i.next();
PMDPlugin.java,InputStream ruleSetStream = new ByteArrayInputStream(ruleSetPreference.getBytes());,if (ByteArrayInputStream(ruleSetPreference != null ) InputStream ruleSetStream = new ByteArrayInputStream(ruleSetPreference.getBytes());
PMDPlugin.java,OutputStream out = new FileOutputStream(ruleSetLocation.toOSString());,if (FileOutputStream(ruleSetLocation != null ) OutputStream out = new FileOutputStream(ruleSetLocation.toOSString());
PMDPlugin.java,RuleSetWriter writer = WriterAbstractFactory.getFactory().getRuleSetWriter();,if (WriterAbstractFactory != null ) RuleSetWriter writer = WriterAbstractFactory.getFactory().getRuleSetWriter();
PMDPlugin.java,Collection newRules = newRuleSet.getRules();,if (newRuleSet != null ) Collection newRules = newRuleSet.getRules();
PMDPlugin.java,Iterator i = newRules.iterator();,if (newRules != null ) Iterator i = newRules.iterator();
PMDPlugin.java,Rule rule = (Rule) i.next();,if (i != null ) Rule rule = (Rule) i.next();
PMDPlugin.java,Iterator ruleIterator = addedRules.iterator();,if (addedRules != null ) Iterator ruleIterator = addedRules.iterator();
PMDPlugin.java,Rule rule = (Rule) ruleIterator.next();,if (ruleIterator != null ) Rule rule = (Rule) ruleIterator.next();
PMDPlugin.java,RuleSet projectRuleSet = model.getProjectRuleSet();,if (model != null ) RuleSet projectRuleSet = model.getProjectRuleSet();
RuleSetWriterImpl.java,DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();,if (DocumentBuilderFactory != null ) DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
RuleSetWriterImpl.java,DocumentBuilder documentBuilder = factory.newDocumentBuilder();,if (factory != null ) DocumentBuilder documentBuilder = factory.newDocumentBuilder();
RuleSetWriterImpl.java,Document doc = documentBuilder.newDocument();,if (documentBuilder != null ) Document doc = documentBuilder.newDocument();
RuleSetWriterImpl.java,"Element descriptionElement = getDescriptionElement(doc, ruleSet.getDescription());","if (ruleSet != null ) Element descriptionElement = getDescriptionElement(doc, ruleSet.getDescription());"
RuleSetWriterImpl.java,Iterator rules = ruleSet.getRules().iterator();,if (ruleSet != null ) Iterator rules = ruleSet.getRules().iterator();
RuleSetWriterImpl.java,Rule rule = (Rule) rules.next();,if (rules != null ) Rule rule = (Rule) rules.next();
RuleSetWriterImpl.java,"Element descriptionElement = getDescriptionElement(doc, rule.getDescription());","if (rule != null ) Element descriptionElement = getDescriptionElement(doc, rule.getDescription());"
RuleSetWriterImpl.java,"Element exampleElement = getExampleElement(doc, rule.getExample());","if (rule != null ) Element exampleElement = getExampleElement(doc, rule.getExample());"
RuleSetWriterImpl.java,"Element priorityElement = getPriorityElement(doc, rule.getPriority());","if (rule != null ) Element priorityElement = getPriorityElement(doc, rule.getPriority());"
RuleSetWriterImpl.java,"Element propertiesElement = getPropertiesElement(doc, rule.getProperties());","if (rule != null ) Element propertiesElement = getPropertiesElement(doc, rule.getProperties());"
RuleSetWriterImpl.java,Enumeration keys = properties.keys();,if (properties != null ) Enumeration keys = properties.keys();
RuleSetWriterImpl.java,Object key = keys.nextElement();,if (keys != null ) Object key = keys.nextElement();
PMDBuilder.java,IProject currentProject = this.getProject();,if (this != null ) IProject currentProject = this.getProject();
PMDNature.java,IProjectDescription description = project.getDescription();,if (project != null ) IProjectDescription description = project.getDescription();
PMDNature.java,ICommand[] commands = description.getBuildSpec();,if (description != null ) ICommand[] commands = description.getBuildSpec();
PMDNature.java,ICommand pmdBuilderCommand = description.newCommand();,if (description != null ) ICommand pmdBuilderCommand = description.newCommand();
PMDNature.java,IProjectDescription description = project.getDescription();,if (project != null ) IProjectDescription description = project.getDescription();
PMDNature.java,ICommand[] commands = description.getBuildSpec();,if (description != null ) ICommand[] commands = description.getBuildSpec();
PMDNature.java,final IProjectDescription description = project.getDescription();,if (project != null ) final IProjectDescription description = project.getDescription();
PMDNature.java,final IProjectDescription description = project.getDescription();,if (project != null ) final IProjectDescription description = project.getDescription();
BaseVisitor.java,final ProjectPropertiesModel model = this.modelFactory.getProperiesModelForProject(file.getProject());,if (this != null ) final ProjectPropertiesModel model = this.modelFactory.getProperiesModelForProject(file.getProject());
BaseVisitor.java,final IWorkingSet workingSet = model.getProjectWorkingSet();,if (model != null ) final IWorkingSet workingSet = model.getProjectWorkingSet();
BaseVisitor.java,final Iterator iter = context.getReport().iterator();,if (context != null ) final Iterator iter = context.getReport().iterator();
BaseVisitor.java,final int maxViolationsPerFilePerRule = PMDPlugin.getDefault().getMaxViolationsPerFilePerRule();,if (PMDPlugin != null ) final int maxViolationsPerFilePerRule = PMDPlugin.getDefault().getMaxViolationsPerFilePerRule();
BaseVisitor.java,final RuleViolation violation = (RuleViolation) iter.next();,if (iter != null ) final RuleViolation violation = (RuleViolation) iter.next();
BaseVisitor.java,review.ruleName = violation.getRule().getName();,if (violation != null ) review.ruleName = violation.getRule().getName();
BaseVisitor.java,review.lineNumber = violation.getBeginLine();,if (violation != null ) review.lineNumber = violation.getBeginLine();
BaseVisitor.java,String line = reader.readLine();,if (reader != null ) String line = reader.readLine();
BaseVisitor.java,line = line.trim();,if (line != null ) line = line.trim();
BaseVisitor.java,review.ruleName = (String) pendingReviews.pop();,if (pendingReviews != null ) review.ruleName = (String) pendingReviews.pop();
JobCommandProcessor.java,final Iterator i = this.jobs.keySet().iterator();,if (this != null ) final Iterator i = this.jobs.keySet().iterator();
JobCommandProcessor.java,final AbstractProcessableCommand aCommand = (AbstractProcessableCommand) i.next();,if (i != null ) final AbstractProcessableCommand aCommand = (AbstractProcessableCommand) i.next();
RenderReportCmd.java,final InputStream contentsStream = new ByteArrayInputStream(reportString.getBytes());,if (ByteArrayInputStream(reportString != null ) final InputStream contentsStream = new ByteArrayInputStream(reportString.getBytes());
ReviewCodeCmd.java,IWorkspace workspace = ResourcesPlugin.getWorkspace();,if (ResourcesPlugin != null ) IWorkspace workspace = ResourcesPlugin.getWorkspace();
ReviewCodeCmd.java,IWorkspace workspace = ResourcesPlugin.getWorkspace();,if (ResourcesPlugin != null ) IWorkspace workspace = ResourcesPlugin.getWorkspace();
ReviewCodeCmd.java,IResourceRuleFactory ruleFactory = workspace.getRuleFactory();,if (workspace != null ) IResourceRuleFactory ruleFactory = workspace.getRuleFactory();
ReviewCodeCmd.java,Iterator i = this.resources.iterator();,if (this != null ) Iterator i = this.resources.iterator();
ReviewCodeCmd.java,IResource resource = (IResource) i.next();,if (i != null ) IResource resource = (IResource) i.next();
ReviewCodeCmd.java,final IProject project = resource.getProject();,if (resource != null ) final IProject project = resource.getProject();
ReviewCodeCmd.java,final RuleSet ruleSet = model.getProjectRuleSet();,if (model != null ) final RuleSet ruleSet = model.getProjectRuleSet();
ReviewCodeCmd.java,this.rulesCount = ruleSet.getRules().size();,if (ruleSet != null ) this.rulesCount = ruleSet.getRules().size();
ReviewCodeCmd.java,final IProject project = this.resourceDelta.getResource().getProject();,if (this != null ) final IProject project = this.resourceDelta.getResource().getProject();
ReviewCodeCmd.java,final RuleSet ruleSet = model.getProjectRuleSet();,if (model != null ) final RuleSet ruleSet = model.getProjectRuleSet();
ReviewCodeCmd.java,this.rulesCount = ruleSet.getRules().size();,if (ruleSet != null ) this.rulesCount = ruleSet.getRules().size();
ReviewCodeCmd.java,final Set filesSet = this.markers.keySet();,if (this != null ) final Set filesSet = this.markers.keySet();
ReviewCodeCmd.java,final Iterator i = filesSet.iterator();,if (filesSet != null ) final Iterator i = filesSet.iterator();
ReviewCodeCmd.java,final IFile file = (IFile) i.next();,if (i != null ) final IFile file = (IFile) i.next();
ReviewCodeCmd.java,currentFile = file.getName();,if (file != null ) currentFile = file.getName();
ReviewCodeCmd.java,final Iterator j = markerInfoSet.iterator();,if (markerInfoSet != null ) final Iterator j = markerInfoSet.iterator();
ReviewCodeCmd.java,final MarkerInfo markerInfo = (MarkerInfo) j.next();,if (j != null ) final MarkerInfo markerInfo = (MarkerInfo) j.next();
ReviewCodeCmd.java,final IMarker marker = file.createMarker(markerInfo.getType());,if (file != null ) final IMarker marker = file.createMarker(markerInfo.getType());
ReviewCodeCmd.java,IAdaptable input = ResourcesPlugin.getWorkspace();,if (ResourcesPlugin != null ) IAdaptable input = ResourcesPlugin.getWorkspace();
ReviewCodeCmd.java,IPreferenceStore store = PlatformUI.getPreferenceStore();,if (PlatformUI != null ) IPreferenceStore store = PlatformUI.getPreferenceStore();
ReviewCodeCmd.java,IWorkbench workbench = PlatformUI.getWorkbench();,if (PlatformUI != null ) IWorkbench workbench = PlatformUI.getWorkbench();
ReviewCodeCmd.java,IPerspectiveRegistry reg = workbench.getPerspectiveRegistry();,if (workbench != null ) IPerspectiveRegistry reg = workbench.getPerspectiveRegistry();
ReviewCodeCmd.java,IWorkbenchWindow window = workbench.getActiveWorkbenchWindow();,if (workbench != null ) IWorkbenchWindow window = workbench.getActiveWorkbenchWindow();
CPDVisitor.java,final IWorkingSet workingSet = model.getProjectWorkingSet();,if (model != null ) final IWorkingSet workingSet = model.getProjectWorkingSet();
DetectCutAndPasteCmd.java,final Iterator matches = this.detectCutAndPaste();,if (this != null ) final Iterator matches = this.detectCutAndPaste();
DetectCutAndPasteCmd.java,final InputStream contentsStream = new ByteArrayInputStream(reportString.getBytes());,if (ByteArrayInputStream(reportString != null ) final InputStream contentsStream = new ByteArrayInputStream(reportString.getBytes());
ProjectPropertiesDAOCastor.java,final Reader reader = new InputStreamReader(propertiesFile.getContents());,if (InputStreamReader(propertiesFile != null ) final Reader reader = new InputStreamReader(propertiesFile.getContents());
ConfigurationImpl.java,final Iterator i = this.ruleSets.iterator();,if (this != null ) final Iterator i = this.ruleSets.iterator();
ConfigurationImpl.java,final RuleSet ruleSet = (RuleSet) i.next();,if (i != null ) final RuleSet ruleSet = (RuleSet) i.next();
FileRecord.java,String trimmed = lines.nextToken().trim();,if (lines != null ) String trimmed = lines.nextToken().trim();
FileRecord.java,trimmed = lines.nextToken().trim();,if (lines != null ) trimmed = lines.nextToken().trim();
PreferencesModelImpl.java,final Collection values = this.configurations.values();,if (this != null ) final Collection values = this.configurations.values();
PreferencesModelImpl.java,PreferencesTO preferencesTo = this.preferencesDao.readPreferences();,if (this != null ) PreferencesTO preferencesTo = this.preferencesDao.readPreferences();
PreferencesModelImpl.java,this.dfaEnabled = preferencesTo.isDfaEnabled();,if (preferencesTo != null ) this.dfaEnabled = preferencesTo.isDfaEnabled();
PreferencesModelImpl.java,this.switchPmdPerspective = preferencesTo.isSwitchPmdPerspective();,if (preferencesTo != null ) this.switchPmdPerspective = preferencesTo.isSwitchPmdPerspective();
PreferencesModelImpl.java,final IRuleSetManager ruleSetManager = PMDCorePlugin.getDefault().getRuleSetManager();,if (PMDCorePlugin != null ) final IRuleSetManager ruleSetManager = PMDCorePlugin.getDefault().getRuleSetManager();
PreferencesModelImpl.java,final Set defaultRuleSets = ruleSetManager.getDefaultRuleSets();,if (ruleSetManager != null ) final Set defaultRuleSets = ruleSetManager.getDefaultRuleSets();
PreferencesModelImpl.java,RuleSet ruleSet = (RuleSet) i.next();,if (i != null ) RuleSet ruleSet = (RuleSet) i.next();
PreferencesModelImpl.java,final File ruleSetFile = new File(ruleSetLocation.toOSString());,if (File(ruleSetLocation != null ) final File ruleSetFile = new File(ruleSetLocation.toOSString());
PreferencesModelImpl.java,final FileInputStream in = new FileInputStream(ruleSetLocation.toOSString());,if (FileInputStream(ruleSetLocation != null ) final FileInputStream in = new FileInputStream(ruleSetLocation.toOSString());
PreferencesModelImpl.java,ConfigurationTO[] configurations = preferencesTo.getConfigurations().getConfigurations();,if (preferencesTo != null ) ConfigurationTO[] configurations = preferencesTo.getConfigurations().getConfigurations();
PreferencesModelImpl.java,RuleSetTO[] rulesets = configurations[i].getRuleSets();,if (configurations[i] != null ) RuleSetTO[] rulesets = configurations[i].getRuleSets();
PreferencesModelImpl.java,Configuration configuration = (Configuration) i.next();,if (i != null ) Configuration configuration = (Configuration) i.next();
PreferencesModelImpl.java,RuleSetProxy[] proxies = configuration.getRuleSets();,if (configuration != null ) RuleSetProxy[] proxies = configuration.getRuleSets();
ProjectPropertiesModelImpl.java,this.propertiesDao = DAOFactory.getFactory().getProjectPropertiesDAO();,if (DAOFactory != null ) this.propertiesDao = DAOFactory.getFactory().getProjectPropertiesDAO();
ProjectPropertiesModelImpl.java,this.projectRuleSet = PMDPlugin.getDefault().getRuleSet();,if (PMDPlugin != null ) this.projectRuleSet = PMDPlugin.getDefault().getRuleSet();
ProjectPropertiesModelImpl.java,final ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray());,if (ByteArrayInputStream(baos != null ) final ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray());
ProjectPropertiesModelImpl.java,final RuleSet pluginRuleSet = PMDPlugin.getDefault().getRuleSet();,if (PMDPlugin != null ) final RuleSet pluginRuleSet = PMDPlugin.getDefault().getRuleSet();
ProjectPropertiesModelImpl.java,final Iterator i = this.projectRuleSet.getRules().iterator();,if (this != null ) final Iterator i = this.projectRuleSet.getRules().iterator();
ProjectPropertiesModelImpl.java,final Rule projectRule = (Rule) i.next();,if (i != null ) final Rule projectRule = (Rule) i.next();
ProjectPropertiesModelImpl.java,final Rule pluginRule = pluginRuleSet.getRuleByName(projectRule.getName());,if (pluginRuleSet != null ) final Rule pluginRule = pluginRuleSet.getRuleByName(projectRule.getName());
ProjectPropertiesModelImpl.java,final Iterator k = this.projectRuleSet.getRules().iterator();,if (this != null ) final Iterator k = this.projectRuleSet.getRules().iterator();
ProjectPropertiesModelImpl.java,final Rule projectRule = (Rule) k.next();,if (k != null ) final Rule projectRule = (Rule) k.next();
ProjectPropertiesModelImpl.java,final Rule pluginRule = pluginRuleSet.getRuleByName(projectRule.getName());,if (pluginRuleSet != null ) final Rule pluginRule = pluginRuleSet.getRuleByName(projectRule.getName());
ProjectPropertiesModelImpl.java,this.ruleSetStoredInProject = projectProperties.isRuleSetStoredInProject();,if (projectProperties != null ) this.ruleSetStoredInProject = projectProperties.isRuleSetStoredInProject();
ProjectPropertiesModelImpl.java,this.includeDerivedFiles = projectProperties.isIncludeDerivedFiles();,if (projectProperties != null ) this.includeDerivedFiles = projectProperties.isIncludeDerivedFiles();
ProjectPropertiesModelImpl.java,final RuleSet pluginRuleSet = PMDPlugin.getDefault().getRuleSet();,if (PMDPlugin != null ) final RuleSet pluginRuleSet = PMDPlugin.getDefault().getRuleSet();
ProjectPropertiesModelImpl.java,final IWorkingSetManager workingSetManager = PlatformUI.getWorkbench().getWorkingSetManager();,if (PlatformUI != null ) final IWorkingSetManager workingSetManager = PlatformUI.getWorkbench().getWorkingSetManager();
ProjectPropertiesModelImpl.java,final Iterator i = this.projectRuleSet.getRules().iterator();,if (this != null ) final Iterator i = this.projectRuleSet.getRules().iterator();
ProjectPropertiesModelImpl.java,final Rule rule = (Rule) i.next();,if (i != null ) final Rule rule = (Rule) i.next();
ProjectRecord.java,IResource[] members = project.members();,if (project != null ) IResource[] members = project.members();
ProjectRecord.java,fragments = root.getChildren();,if (root != null ) fragments = root.getChildren();
DataflowAnomalyTableViewer.java,TableColumn[] columns = table.getColumns();,if (table != null ) TableColumn[] columns = table.getColumns();
DataflowGraphViewer.java,List flow = node.getDataFlowNode().getFlow();,if (node != null ) List flow = node.getDataFlowNode().getFlow();
DataflowGraphViewer.java,nextNodes += String.valueOf(n.getIndex());,if (String != null ) nextNodes += String.valueOf(n.getIndex());
DataflowGraphViewer.java,List access = inode.getVariableAccess();,if (inode != null ) List access = inode.getVariableAccess();
DataflowGraphViewer.java,retString = reader.readLine();,if (reader != null ) retString = reader.readLine();
DataflowView.java,DataflowGraph graph = graphViewer.getGraph();,if (graphViewer != null ) DataflowGraph graph = graphViewer.getGraph();
DataflowView.java,String resourceString = getResourceAsString(method.getResource());,if (getResourceAsString(method != null ) String resourceString = getResourceAsString(method.getResource());
DataflowView.java,ArrayList pmdMethodList = getPMDMethods(method.getResource());,if (getPMDMethods(method != null ) ArrayList pmdMethodList = getPMDMethods(method.getResource());
DataflowView.java,String methodName = method.getElementName();,if (method != null ) String methodName = method.getElementName();
DataflowView.java,String[] methodParamTypes = method.getParameterTypes();,if (method != null ) String[] methodParamTypes = method.getParameterTypes();
DataflowView.java,tempString = stringParamArray[k].trim();,if (stringParamArray[k] != null ) tempString = stringParamArray[k].trim();
DataflowView.java,retString = reader.readLine();,if (reader != null ) retString = reader.readLine();
DataflowView.java,retString += reader.readLine().trim();,if (reader != null ) retString += reader.readLine().trim();
DataflowView.java,DataflowGraph graph = graphViewer.getGraph();,if (graphViewer != null ) DataflowGraph graph = graphViewer.getGraph();
PriorityFilter.java,listString += priorityList.get(i).toString();,if (priorityList != null ) listString += priorityList.get(i).toString();
TableColumnSorter.java,TableColumn[] columns = column.getParent().getColumns();,if (column != null ) TableColumn[] columns = column.getParent().getColumns();
ViewMemento.java,path = PMDPlugin.getDefault().getStateLocation();,if (PMDPlugin != null ) path = PMDPlugin.getDefault().getStateLocation();
ViewMemento.java,String line = contentReader.readLine();,if (contentReader != null ) String line = contentReader.readLine();
ViewMemento.java,valueString += valueList.get(k).toString();,if (valueList != null ) valueString += valueList.get(k).toString();
ViolationOutline.java,Integer[] widthArray = page.getColumnWidths();,if (page != null ) Integer[] widthArray = page.getColumnWidths();
ViolationOutline.java,Integer[] sorterProps = page.getSorterProperties();,if (page != null ) Integer[] sorterProps = page.getSorterProperties();
ViolationOutline.java,ArrayList filterList = priorityFilter.getPriorityFilterList();,if (priorityFilter != null ) ArrayList filterList = priorityFilter.getPriorityFilterList();
ViolationOutline.java,Integer[] priorities = PMDPlugin.getDefault().getPriorityValues();,if (PMDPlugin != null ) Integer[] priorities = PMDPlugin.getDefault().getPriorityValues();
ViolationOutline.java,Table table = viewer.getTable();,if (viewer != null ) Table table = viewer.getTable();
ViolationOutline.java,IWorkbenchPage page = getSite().getPage();,if (getSite() != null ) IWorkbenchPage page = getSite().getPage();
ViolationOutline.java,Integer[] widthArray = oldPage.getColumnWidths();,if (oldPage != null ) Integer[] widthArray = oldPage.getColumnWidths();
ViolationOutline.java,Integer[] sorterProps = oldPage.getSorterProperties();,if (oldPage != null ) Integer[] sorterProps = oldPage.getSorterProperties();
ViolationOutline.java,IPage page = super.getCurrentPage();,if (super != null ) IPage page = super.getCurrentPage();
ViolationOutlinePage.java,ViewerFilter[] filters = outline.getFilters();,if (outline != null ) ViewerFilter[] filters = outline.getFilters();
ViolationOutlinePage.java,TableColumn[] columns = table.getColumns();,if (table != null ) TableColumn[] columns = table.getColumns();
ViolationOutlinePage.java,TableColumn[] columns = tableViewer.getTable().getColumns();,if (tableViewer != null ) TableColumn[] columns = tableViewer.getTable().getColumns();
ViolationOutlinePage.java,IMarker marker = (IMarker) selection.getFirstElement();,if (selection != null ) IMarker marker = (IMarker) selection.getFirstElement();
ViolationOutlinePage.java,IEditorInput input = editor.getEditorInput();,if (editor != null ) IEditorInput input = editor.getEditorInput();
ViolationOverview.java,TableColumn[] columns = table.getColumns();,if (table != null ) TableColumn[] columns = table.getColumns();
ViolationOverview.java,Table table = treeViewer.getTableTree().getTable();,if (treeViewer != null ) Table table = treeViewer.getTableTree().getTable();
ViolationOverview.java,Integer[] priorities = PMDPlugin.getDefault().getPriorityValues();,if (PMDPlugin != null ) Integer[] priorities = PMDPlugin.getDefault().getPriorityValues();
ViolationOverview.java,ArrayList projectFilterList = projectFilter.getProjectFilterList();,if (projectFilter != null ) ArrayList projectFilterList = projectFilter.getProjectFilterList();
ViolationOverview.java,PMDRecord[] projects = root.getChildren();,if (root != null ) PMDRecord[] projects = root.getChildren();
ViolationOverview.java,List filterList = priorityFilter.getPriorityFilterList();,if (priorityFilter != null ) List filterList = priorityFilter.getPriorityFilterList();
ViolationOverview.java,Object object = selection.getFirstElement();,if (selection != null ) Object object = selection.getFirstElement();
ViolationOverview.java,Object object = selection.getFirstElement();,if (selection != null ) Object object = selection.getFirstElement();
ViolationOverviewLabelProvider.java,Object[] files = packRec.getChildren();,if (packRec != null ) Object[] files = packRec.getChildren();
ViolationOverviewLabelProvider.java,Object[] files = packRec.getChildren();,if (packRec != null ) Object[] files = packRec.getChildren();
CollapseAllAction.java,treeViewer = view.getViewer();,if (view != null ) treeViewer = view.getViewer();
PriorityFilterAction.java,ViewerFilter[] filters = view.getFilters();,if (view != null ) ViewerFilter[] filters = view.getFilters();
PriorityFilterAction.java,ViewerFilter[] filters = view.getViewer().getFilters();,if (view != null ) ViewerFilter[] filters = view.getViewer().getFilters();
ProjectFilterAction.java,ViewerFilter[] filters = view.getViewer().getFilters();,if (view != null ) ViewerFilter[] filters = view.getViewer().getFilters();
RemoveViolationAction.java,IWorkspace workspace = ResourcesPlugin.getWorkspace();,if (ResourcesPlugin != null ) IWorkspace workspace = ResourcesPlugin.getWorkspace();
MarkerLabelProvider.java,IJavaElement javaElement = JavaCore.create(marker.getResource());,if (JavaCore != null ) IJavaElement javaElement = JavaCore.create(marker.getResource());
MarkerLabelProvider.java,IPackageDeclaration[] packageDeclarations = compilationUnit.getPackageDeclarations();,if (compilationUnit != null ) IPackageDeclaration[] packageDeclarations = compilationUnit.getPackageDeclarations();
MarkerLabelProvider.java,IJavaElement[] elements = status.getElements();,if (status != null ) IJavaElement[] elements = status.getElements();
PartListener.java,selectionProvider = focusPart.getSite().getSelectionProvider();,if (focusPart != null ) selectionProvider = focusPart.getSite().getSelectionProvider();
PartListener.java,selectionProvider = part.getSite().getSelectionProvider();,if (part != null ) selectionProvider = part.getSite().getSelectionProvider();
PartListener.java,ISelectionProvider selectionProvider = part.getSite().getSelectionProvider();,if (part != null ) ISelectionProvider selectionProvider = part.getSite().getSelectionProvider();
PartListener.java,ISelectionProvider selectionProvider = part.getSite().getSelectionProvider();,if (part != null ) ISelectionProvider selectionProvider = part.getSite().getSelectionProvider();
PartListener.java,Object selectedObject = structuredSelection.getFirstElement();,if (structuredSelection != null ) Object selectedObject = structuredSelection.getFirstElement();
PriorityFilter.java,flSelected = violationView.isInformationFilterChecked();,if (violationView != null ) flSelected = violationView.isInformationFilterChecked();
QuickFixAction.java,IMarker[] selectedMarkers = violationView.getSelectedViolations();,if (violationView != null ) IMarker[] selectedMarkers = violationView.getSelectedViolations();
QuickFixAction.java,IMarker[] selectedMarkers = violationView.getSelectedViolations();,if (violationView != null ) IMarker[] selectedMarkers = violationView.getSelectedViolations();
QuickFixAction.java,IWorkbench workbench = PlatformUI.getWorkbench();,if (PlatformUI != null ) IWorkbench workbench = PlatformUI.getWorkbench();
QuickFixAction.java,Object[] result = dialog.getResult();,if (dialog != null ) Object[] result = dialog.getResult();
ResourceFilter.java,IResource focusResource = violationView.getFocusResource();,if (violationView != null ) IResource focusResource = violationView.getFocusResource();
ResourceMarkerContentProvider.java,int iKind = markerDeltas[i].getKind();,if (markerDeltas[i] != null ) int iKind = markerDeltas[i].getKind();
ResourceMarkerContentProvider.java,IMarker marker = markerDeltas[i].getMarker();,if (markerDeltas[i] != null ) IMarker marker = markerDeltas[i].getMarker();
ReviewAction.java,final boolean reviewPmdStyle = PMDPlugin.getDefault().isReviewPmdStyle();,if (PMDPlugin != null ) final boolean reviewPmdStyle = PMDPlugin.getDefault().isReviewPmdStyle();
ReviewAction.java,Shell shell = Display.getCurrent().getActiveShell();,if (Display != null ) Shell shell = Display.getCurrent().getActiveShell();
ReviewAction.java,IResource resource = marker.getResource();,if (marker != null ) IResource resource = marker.getResource();
ReviewAction.java,IJavaElement[] elements = status.getElements();,if (status != null ) IJavaElement[] elements = status.getElements();
ReviewAction.java,String additionalCommentPattern = PMDPlugin.getDefault().getReviewAdditionalComment();,if (PMDPlugin != null ) String additionalCommentPattern = PMDPlugin.getDefault().getReviewAdditionalComment();
ReviewAction.java,String additionalCommentPattern = PMDPlugin.getDefault().getReviewAdditionalComment();,if (PMDPlugin != null ) String additionalCommentPattern = PMDPlugin.getDefault().getReviewAdditionalComment();
ReviewAction.java,index = sourceCode.substring(offset).length();,if (sourceCode != null ) index = sourceCode.substring(offset).length();
ReviewAction.java,result = sb.toString();,if (sb != null ) result = sb.toString();
ShowRuleAction.java,Rule selectedRule = violationView.getSelectedViolationRule();,if (violationView != null ) Rule selectedRule = violationView.getSelectedViolationRule();
ViolationSorter.java,int sorterFlag = violationView.getSorterFlag();,if (violationView != null ) int sorterFlag = violationView.getSorterFlag();
ViolationView.java,IStructuredSelection selection = (IStructuredSelection) event.getSelection();,if (event != null ) IStructuredSelection selection = (IStructuredSelection) event.getSelection();
ViolationView.java,IMarker marker = (IMarker) selection.getFirstElement();,if (selection != null ) IMarker marker = (IMarker) selection.getFirstElement();
ViolationView.java,IResource resource = marker.getResource();,if (marker != null ) IResource resource = marker.getResource();
ViolationView.java,IWorkbenchPage page = getSite().getPage();,if (getSite() != null ) IWorkbenchPage page = getSite().getPage();
ViolationView.java,IStructuredSelection selection = (IStructuredSelection) event.getSelection();,if (event != null ) IStructuredSelection selection = (IStructuredSelection) event.getSelection();
ViolationView.java,IMarker marker = (IMarker) selection.getFirstElement();,if (selection != null ) IMarker marker = (IMarker) selection.getFirstElement();
ViolationView.java,IEditorInput input = editor.getEditorInput();,if (editor != null ) IEditorInput input = editor.getEditorInput();
ViolationView.java,IProject newProject = resource.getProject();,if (resource != null ) IProject newProject = resource.getProject();
ViolationView.java,ISelection selection = violationTableViewer.getSelection();,if (violationTableViewer != null ) ISelection selection = violationTableViewer.getSelection();
ViolationView.java,Iterator i = structuredSelection.iterator();,if (structuredSelection != null ) Iterator i = structuredSelection.iterator();
ViolationView.java,IWorkspace workspace = ResourcesPlugin.getWorkspace();,if (ResourcesPlugin != null ) IWorkspace workspace = ResourcesPlugin.getWorkspace();
ViolationView.java,Table violationTable = violationTableViewer.getTable();,if (violationTableViewer != null ) Table violationTable = violationTableViewer.getTable();
ViolationView.java,Table table = violationTableViewer.getTable();,if (violationTableViewer != null ) Table table = violationTableViewer.getTable();
ViolationView.java,IActionBars actionBars = getViewSite().getActionBars();,if (getViewSite() != null ) IActionBars actionBars = getViewSite().getActionBars();
ViolationView.java,IToolBarManager toolBarMgr = actionBars.getToolBarManager();,if (actionBars != null ) IToolBarManager toolBarMgr = actionBars.getToolBarManager();
PMDPlugin.java,IProject project = resource.getProject();,if (resource != null ) IProject project = resource.getProject();
PMDPlugin.java,IProject project = resource.getProject();,if (resource != null ) IProject project = resource.getProject();
PMDPlugin.java,Iterator i = projectRuleSet.getRules().iterator();,if (projectRuleSet != null ) Iterator i = projectRuleSet.getRules().iterator();
PMDPlugin.java,long newModificationStamp = ruleSetFile.getModificationStamp();,if (ruleSetFile != null ) long newModificationStamp = ruleSetFile.getModificationStamp();
PMDPlugin.java,projectRuleSet = ruleSetFactory.createRuleSet(ruleSetFile.getContents());,if (ruleSetFactory != null ) projectRuleSet = ruleSetFactory.createRuleSet(ruleSetFile.getContents());
PMDPlugin.java,Iterator i = ruleSet.getRules().iterator();,if (ruleSet != null ) Iterator i = ruleSet.getRules().iterator();
PMDPlugin.java,Rule rule = (Rule) i.next();,if (i != null ) Rule rule = (Rule) i.next();
PMDPlugin.java,IWorkingSetManager workingSetManager = PlatformUI.getWorkbench().getWorkingSetManager();,if (PlatformUI != null ) IWorkingSetManager workingSetManager = PlatformUI.getWorkbench().getWorkingSetManager();
UnusedPrivateMethodRule.java,MethodNameDeclaration mnd = (MethodNameDeclaration) i.next();,if (i != null ) MethodNameDeclaration mnd = (MethodNameDeclaration) i.next();
Designer.java,ASTCompilationUnit lastCompilationUnit = createParser().CompilationUnit();,if (createParser() != null ) ASTCompilationUnit lastCompilationUnit = createParser().CompilationUnit();
Designer.java,ASTCompilationUnit c = parser.CompilationUnit();,if (parser != null ) ASTCompilationUnit c = parser.CompilationUnit();
Designer.java,ASTCompilationUnit cu = createParser().CompilationUnit();,if (createParser() != null ) ASTCompilationUnit cu = createParser().CompilationUnit();
RunnableCommandProcessor.java,final IWorkspace workspace = ResourcesPlugin.getWorkspace();,if (ResourcesPlugin != null ) final IWorkspace workspace = ResourcesPlugin.getWorkspace();
PMDPlugin.java,Set newRules = newRuleSet.getRules();,if (newRuleSet != null ) Set newRules = newRuleSet.getRules();
BaseVisitor.java,review.lineNumber = violation.getNode().getBeginLine();,if (violation != null ) review.lineNumber = violation.getNode().getBeginLine();
PMDPropertyPage.java,final Set activeRules = activeRuleSet.getRules();,if (activeRuleSet != null ) final Set activeRules = activeRuleSet.getRules();
CPPTokenizer.java,Token currToken = CPPParserTokenManager.getNextToken();,if (CPPParserTokenManager != null ) Token currToken = CPPParserTokenManager.getNextToken();
CPPTokenizer.java,currToken = CPPParserTokenManager.getNextToken();,if (CPPParserTokenManager != null ) currToken = CPPParserTokenManager.getNextToken();
CPPParser.java,int[] oldentry = (int[]) (e.nextElement());,if ((e != null ) int[] oldentry = (int[]) (e.nextElement());
ParseException.java,retval += expected.toString();,if (expected != null ) retval += expected.toString();
Report.java,RuleViolation rv = (RuleViolation) iter.next();,if (iter != null ) RuleViolation rv = (RuleViolation) iter.next();
Report.java,RuleViolation rv = (RuleViolation) i.next();,if (i != null ) RuleViolation rv = (RuleViolation) i.next();
ReportHTMLPrintVisitor.java,RuleViolation vio = vnode.getRuleViolation();,if (vnode != null ) RuleViolation vio = vnode.getRuleViolation();
CSVRenderer.java,RuleViolation rv = (RuleViolation) i.next();,if (i != null ) RuleViolation rv = (RuleViolation) i.next();
EmacsRenderer.java,RuleViolation rv = (RuleViolation) i.next();,if (i != null ) RuleViolation rv = (RuleViolation) i.next();
HTMLRenderer.java,RuleViolation rv = (RuleViolation) i.next();,if (i != null ) RuleViolation rv = (RuleViolation) i.next();
IDEAJRenderer.java,RuleViolation rv = (RuleViolation) i.next();,if (i != null ) RuleViolation rv = (RuleViolation) i.next();
IDEAJRenderer.java,RuleViolation rv = (RuleViolation) i.next();,if (i != null ) RuleViolation rv = (RuleViolation) i.next();
PapariTextRenderer.java,RuleViolation rv = (RuleViolation) i.next();,if (i != null ) RuleViolation rv = (RuleViolation) i.next();
TextPadRenderer.java,RuleViolation rv = (RuleViolation) i.next();,if (i != null ) RuleViolation rv = (RuleViolation) i.next();
TextRenderer.java,RuleViolation rv = (RuleViolation) i.next();,if (i != null ) RuleViolation rv = (RuleViolation) i.next();
VBHTMLRenderer.java,RuleViolation rv = (RuleViolation) iter.next();,if (iter != null ) RuleViolation rv = (RuleViolation) iter.next();
XMLRenderer.java,RuleViolation rv = (RuleViolation) i.next();,if (i != null ) RuleViolation rv = (RuleViolation) i.next();
PMDScanAnnotation.java,Part part = ( Part )propertyChangeEvent.getSource();,if ()propertyChangeEvent != null ) Part part = ( Part )propertyChangeEvent.getSource();
EditorChangeListener.java,Node[] nodes = TopComponent.getRegistry().getActivatedNodes();,if (TopComponent != null ) Node[] nodes = TopComponent.getRegistry().getActivatedNodes();
EditorChangeListener.java,StyledDocument doc = edtCookie.getDocument();,if (edtCookie != null ) StyledDocument doc = edtCookie.getDocument();
Scanner.java,StyledDocument doc = edtCookie.getDocument();,if (edtCookie != null ) StyledDocument doc = edtCookie.getDocument();
Scanner.java,EditorCookie cookie = (EditorCookie)evt.getSource();,if ((EditorCookie)evt != null ) EditorCookie cookie = (EditorCookie)evt.getSource();
Scanner.java,StyledDocument doc = cookie.getDocument();,if (cookie != null ) StyledDocument doc = cookie.getDocument();
Scanner.java,StyledDocument doc = edtCookie.getDocument();,if (edtCookie != null ) StyledDocument doc = edtCookie.getDocument();
Scanner.java,tabSize = foo.intValue();,if (foo != null ) tabSize = foo.intValue();
Scanner.java,Line.Set lineset = cookie.getLineSet();,if (cookie != null ) Line.Set lineset = cookie.getLineSet();
Scanner.java,int lineNum = fault.getLine();,if (fault != null ) int lineNum = fault.getLine();
Scanner.java,String text = line.getText();,if (line != null ) String text = line.getText();
Scanner.java,PMDScanAnnotation annotation = PMDScanAnnotation.getNewInstance();,if (PMDScanAnnotation != null ) PMDScanAnnotation annotation = PMDScanAnnotation.getNewInstance();
Scanner.java,String msg = fault.getMessage();,if (fault != null ) String msg = fault.getMessage();
AvoidFieldNameMatchingMethodName.java,ASTMethodDeclaration m = (ASTMethodDeclaration) it.next();,if (it != null ) ASTMethodDeclaration m = (ASTMethodDeclaration) it.next();
Report.java,SimpleNode node = violation.getNode();,if (violation != null ) SimpleNode node = violation.getNode();
Report.java,CanSuppressWarnings t = (CanSuppressWarnings) i.next();,if (i != null ) CanSuppressWarnings t = (CanSuppressWarnings) i.next();
Java13Parser.java,Object rootNode = parser.CompilationUnit();,if (parser != null ) Object rootNode = parser.CompilationUnit();
Java14Parser.java,Object rootNode = parser.CompilationUnit();,if (parser != null ) Object rootNode = parser.CompilationUnit();
Java15Parser.java,Object rootNode = parser.CompilationUnit();,if (parser != null ) Object rootNode = parser.CompilationUnit();
RunPMDAction.java,Iterator iterator = ctx.getReport().iterator();,if (ctx != null ) Iterator iterator = ctx.getReport().iterator();
JspParser.java,int[] oldentry = (int[]) (e.nextElement());,if ((e != null ) int[] oldentry = (int[]) (e.nextElement());
RuleSetTest.java,Set rules = IUT.getRules();,if (IUT != null ) Set rules = IUT.getRules();
UseIndexOfChar.java,ASTLiteral literal = (ASTLiteral) j.next();,if (j != null ) ASTLiteral literal = (ASTLiteral) j.next();
Benchmark.java,Set rules = ruleSet.getRules();,if (ruleSet != null ) Set rules = ruleSet.getRules();
JavaParser.java,int[] oldentry = (int[]) (e.nextElement());,if ((e != null ) int[] oldentry = (int[]) (e.nextElement());
InefficientStringBuffering.java,ASTLiteral literal = (ASTLiteral) i.next();,if (i != null ) ASTLiteral literal = (ASTLiteral) i.next();
InefficientStringBuffering.java,ASTName name = (ASTName) i.next();,if (i != null ) ASTName name = (ASTName) i.next();
InefficientStringBuffering.java,VariableNameDeclaration vnd = (VariableNameDeclaration) name.getNameDeclaration();,if (name != null ) VariableNameDeclaration vnd = (VariableNameDeclaration) name.getNameDeclaration();
FileReporterTest.java,String line = reader.readLine();,if (reader != null ) String line = reader.readLine();
FileReporterTest.java,line = reader.readLine();,if (reader != null ) line = reader.readLine();
MatchAlgorithmTest.java,Match match = (Match)matches.next();,if ((Match)matches != null ) Match match = (Match)matches.next();
MatchAlgorithmTest.java,Match match = (Match)matches.next();,if ((Match)matches != null ) Match match = (Match)matches.next();
GeneralFiddlingTest.java,DataFlowNode dfan = (DataFlowNode)i.next();,if ((DataFlowNode)i != null ) DataFlowNode dfan = (DataFlowNode)i.next();
GeneralFiddlingTest.java,VariableAccess o = (VariableAccess)j.next();,if ((VariableAccess)j != null ) VariableAccess o = (VariableAccess)j.next();
AbstractJspNodesTst.java,Node rootNode = parser.CompilationUnit();,if (parser != null ) Node rootNode = parser.CompilationUnit();
AbstractJspNodesTst.java,for(Iterator i=allNodes.iterator(); i.hasNext(); ) {,if ({ != null ) for(Iterator i=allNodes.iterator(); i.hasNext(); ) {
AcceptanceTest.java,VariableNameDeclaration d = (VariableNameDeclaration)i.next();,if ((VariableNameDeclaration)i != null ) VariableNameDeclaration d = (VariableNameDeclaration)i.next();
ClassScopeTest.java,ClassScope s = (ClassScope)n.getScope();,if ((ClassScope)n != null ) ClassScope s = (ClassScope)n.getScope();
ClassScopeTest.java,MethodNameDeclaration mnd = (MethodNameDeclaration)i.next();,if ((MethodNameDeclaration)i != null ) MethodNameDeclaration mnd = (MethodNameDeclaration)i.next();
ClassScopeTest.java,ClassScope c = (ClassScope)n.getScope();,if ((ClassScope)n != null ) ClassScope c = (ClassScope)n.getScope();
ClassScopeTest.java,MethodNameDeclaration mnd = (MethodNameDeclaration)i.next();,if ((MethodNameDeclaration)i != null ) MethodNameDeclaration mnd = (MethodNameDeclaration)i.next();
ClassScopeTest.java,mnd = (MethodNameDeclaration)i.next();,if ((MethodNameDeclaration)i != null ) mnd = (MethodNameDeclaration)i.next();
ClassScopeTest.java,MethodNameDeclaration mnd = (MethodNameDeclaration)i.next();,if ((MethodNameDeclaration)i != null ) MethodNameDeclaration mnd = (MethodNameDeclaration)i.next();
ClassScopeTest.java,mnd = (MethodNameDeclaration)i.next();,if ((MethodNameDeclaration)i != null ) mnd = (MethodNameDeclaration)i.next();
ClassScopeTest.java,MethodNameDeclaration mnd = (MethodNameDeclaration)i.next();,if ((MethodNameDeclaration)i != null ) MethodNameDeclaration mnd = (MethodNameDeclaration)i.next();
ClassScopeTest.java,mnd = (MethodNameDeclaration)i.next();,if ((MethodNameDeclaration)i != null ) mnd = (MethodNameDeclaration)i.next();
LocalScopeTest.java,LocalScope scope = (LocalScope)node.getScope();,if ((LocalScope)node != null ) LocalScope scope = (LocalScope)node.getScope();
LocalScopeTest.java,MethodScope ms  = scope.getEnclosingMethodScope();,if (scope != null ) MethodScope ms  = scope.getEnclosingMethodScope();
MethodScopeTest.java,MethodScope ms = (MethodScope)meth.getScope();,if ((MethodScope)meth != null ) MethodScope ms = (MethodScope)meth.getScope();
SourceFileScopeTest.java,ClassNameDeclaration classNameDeclaration = (ClassNameDeclaration)iterator.next();,if ((ClassNameDeclaration)iterator != null ) ClassNameDeclaration classNameDeclaration = (ClassNameDeclaration)iterator.next();
PMD.java,SourceType sourceType = getSourceTypeOfFile(ctx.getSourceCodeFilename());,if (getSourceTypeOfFile(ctx != null ) SourceType sourceType = getSourceTypeOfFile(ctx.getSourceCodeFilename());
PMD.java,Parser parser = sourceTypeHandler.getParser();,if (sourceTypeHandler != null ) Parser parser = sourceTypeHandler.getParser();
PMD.java,Object rootNode = parser.parse(excluder.getCopyReader());,if (parser != null ) Object rootNode = parser.parse(excluder.getCopyReader());
PMD.java,sourceType = sourceTypeDiscoverer.getSourceTypeOfJavaFiles();,if (sourceTypeDiscoverer != null ) sourceType = sourceTypeDiscoverer.getSourceTypeOfJavaFiles();
PMD.java,RuleSets rulesets = ruleSetFactory.createRuleSets(opts.getRulesets());,if (ruleSetFactory != null ) RuleSets rulesets = ruleSetFactory.createRuleSets(opts.getRulesets());
PMD.java,Renderer r = opts.createRenderer();,if (opts != null ) Renderer r = opts.createRenderer();
PMD.java,DataSource dataSource = (DataSource) i.next();,if (i != null ) DataSource dataSource = (DataSource) i.next();
PMD.java,Rule r = (Rule) i.next();,if (i != null ) Rule r = (Rule) i.next();
PMD.java,Enumeration e = zipFile.entries();,if (zipFile != null ) Enumeration e = zipFile.entries();
PMD.java,ZipEntry zipEntry = (ZipEntry) e.nextElement();,if (e != null ) ZipEntry zipEntry = (ZipEntry) e.nextElement();
Report.java,CanSuppressWarnings t = (CanSuppressWarnings)i.next();,if ((CanSuppressWarnings)i != null ) CanSuppressWarnings t = (CanSuppressWarnings)i.next();
RuleSetFactory.java,RuleSet[] allRuleSets = ruleSets.getAllRuleSets();,if (ruleSets != null ) RuleSet[] allRuleSets = ruleSets.getAllRuleSets();
RuleSetFactory.java,Element root = doc.getDocumentElement();,if (doc != null ) Element root = doc.getDocumentElement();
RuleSetFactory.java,NodeList nodeList = root.getChildNodes();,if (root != null ) NodeList nodeList = root.getChildNodes();
RuleSetFactory.java,String key = (String) j.next();,if (j != null ) String key = (String) j.next();
RuleSetFactory.java,Rule externalRule = externalRuleSet.getRuleByName(externalRuleID.getRuleName());,if (externalRuleSet != null ) Rule externalRule = externalRuleSet.getRuleByName(externalRuleID.getRuleName());
RuleSetFactory.java,NodeList excludeNodes = ruleElement.getChildNodes();,if (ruleElement != null ) NodeList excludeNodes = ruleElement.getChildNodes();
RuleSetFactory.java,Rule rule = (Rule) i.next();,if (i != null ) Rule rule = (Rule) i.next();
RuleSets.java,RuleSet ruleSet = (RuleSet) i.next();,if (i != null ) RuleSet ruleSet = (RuleSet) i.next();
RuleSets.java,RuleSet ruleSet = (RuleSet) i.next();,if (i != null ) RuleSet ruleSet = (RuleSet) i.next();
SourceTypeDiscoverer.java,String fileName = sourceFile.getName();,if (sourceFile != null ) String fileName = sourceFile.getName();
SourceTypeDiscoverer.java,String extensionUppercase = fileName.substring(extensionIndex).toUpperCase();,if (fileName != null ) String extensionUppercase = fileName.substring(extensionIndex).toUpperCase();
PMDTask.java,Rule rule = (Rule) i.next();,if (i != null ) Rule rule = (Rule) i.next();
ASTVariableDeclaratorId.java,SimpleNode n = (SimpleNode)jjtGetParent().jjtGetParent();,if ((SimpleNode)jjtGetParent() != null ) SimpleNode n = (SimpleNode)jjtGetParent().jjtGetParent();
JavaParser.java,int[] oldentry = (int[])(e.nextElement());,if ((int[])(e != null ) int[] oldentry = (int[])(e.nextElement());
ParseException.java,retval += expected.toString();,if (expected != null ) retval += expected.toString();
AnyTokenizer.java,String line = reader.readLine();,if (reader != null ) String line = reader.readLine();
AnyTokenizer.java,String token = tokenizer.nextToken();,if (tokenizer != null ) String token = tokenizer.nextToken();
AnyTokenizer.java,token = tokenizer.nextToken();,if (tokenizer != null ) token = tokenizer.nextToken();
AnyTokenizer.java,line = reader.readLine();,if (reader != null ) line = reader.readLine();
CPPParser.java,int[] oldentry = (int[])(e.nextElement());,if ((int[])(e != null ) int[] oldentry = (int[])(e.nextElement());
ParseException.java,retval += expected.toString();,if (expected != null ) retval += expected.toString();
DaaRule.java,IDataFlowNode inode = (IDataFlowNode)d.next();,if ((IDataFlowNode)d != null ) IDataFlowNode inode = (IDataFlowNode)d.next();
CurrentPath.java,IDataFlowNode inode = (IDataFlowNode)list.getLast();,if ((IDataFlowNode)list != null ) IDataFlowNode inode = (IDataFlowNode)list.getLast();
VariableAccessVisitor.java,Map declarations = (Map)i.next();,if ((Map)i != null ) Map declarations = (Map)i.next();
JJTJspParserState.java,nodes = new java.util.Stack();,if (java != null ) nodes = new java.util.Stack();
JJTJspParserState.java,marks = new java.util.Stack();,if (java != null ) marks = new java.util.Stack();
JspParser.java,int[] oldentry = (int[])(e.nextElement());,if ((int[])(e != null ) int[] oldentry = (int[])(e.nextElement());
NoInlineStyleInformation.java,ASTElement parent = (ASTElement) attributeNode.jjtGetParent();,if (attributeNode != null ) ASTElement parent = (ASTElement) attributeNode.jjtGetParent();
Java13Parser.java,Object rootNode = parser.CompilationUnit();,if (parser != null ) Object rootNode = parser.CompilationUnit();
Java14Parser.java,Object rootNode = parser.CompilationUnit();,if (parser != null ) Object rootNode = parser.CompilationUnit();
Java15Parser.java,Object rootNode = parser.CompilationUnit();,if (parser != null ) Object rootNode = parser.CompilationUnit();
AvoidFieldNameMatchingMethodName.java,String varName = node.getVariableName();,if (node != null ) String varName = node.getVariableName();
AvoidFieldNameMatchingMethodName.java,varName = varName.toLowerCase();,if (varName != null ) varName = varName.toLowerCase();
AvoidFieldNameMatchingMethodName.java,ASTMethodDeclaration m = (ASTMethodDeclaration) it.next();,if (it != null ) ASTMethodDeclaration m = (ASTMethodDeclaration) it.next();
CloseResource.java,ASTImportDeclaration n = (ASTImportDeclaration)i.next();,if ((ASTImportDeclaration)i != null ) ASTImportDeclaration n = (ASTImportDeclaration)i.next();
MethodWithSameNameAsEnclosingClass.java,ASTMethodDeclarator m = (ASTMethodDeclarator)i.next();,if ((ASTMethodDeclarator)i != null ) ASTMethodDeclarator m = (ASTMethodDeclarator)i.next();
SymbolTableTestRule.java,MethodNameDeclaration mnd = (MethodNameDeclaration)i.next();,if ((MethodNameDeclaration)i != null ) MethodNameDeclaration mnd = (MethodNameDeclaration)i.next();
UnusedPrivateMethodRule.java,MethodNameDeclaration mnd = (MethodNameDeclaration)i.next();,if ((MethodNameDeclaration)i != null ) MethodNameDeclaration mnd = (MethodNameDeclaration)i.next();
UnusedPrivateMethodRule.java,NameOccurrence occ = (NameOccurrence)i.next();,if ((NameOccurrence)i != null ) NameOccurrence occ = (NameOccurrence)i.next();
UnusedPrivateMethodRule.java,ASTMethodDeclarator node = (ASTMethodDeclarator)mnd.getNode();,if ((ASTMethodDeclarator)mnd != null ) ASTMethodDeclarator node = (ASTMethodDeclarator)mnd.getNode();
UselessAssignment.java,IDataFlowNode inode = (IDataFlowNode)i.next();,if ((IDataFlowNode)i != null ) IDataFlowNode inode = (IDataFlowNode)i.next();
XPathRule.java,for(Iterator i = astCompilationUnits.iterator(); i.hasNext(); ) {,if ({ != null ) for(Iterator i = astCompilationUnits.iterator(); i.hasNext(); ) {
AssignmentToNonFinalStatic.java,NameOccurrence occ = (NameOccurrence)j.next();,if ((NameOccurrence)j != null ) NameOccurrence occ = (NameOccurrence)j.next();
ImmutableField.java,NameOccurrence occ = (NameOccurrence)j.next();,if ((NameOccurrence)j != null ) NameOccurrence occ = (NameOccurrence)j.next();
UnnecessaryLocalBeforeReturn.java,VariableNameDeclaration key = (VariableNameDeclaration)i.next();,if ((VariableNameDeclaration)i != null ) VariableNameDeclaration key = (VariableNameDeclaration)i.next();
UnnecessaryLocalBeforeReturn.java,NameOccurrence occ = (NameOccurrence)j.next();,if ((NameOccurrence)j != null ) NameOccurrence occ = (NameOccurrence)j.next();
MethodArgumentCouldBeFinal.java,VariableNameDeclaration var = (VariableNameDeclaration)i.next();,if ((VariableNameDeclaration)i != null ) VariableNameDeclaration var = (VariableNameDeclaration)i.next();
ConsecutiveLiteralAppends.java,Map decls = node.getScope().getVariableDeclarations();,if (node != null ) Map decls = node.getScope().getVariableDeclarations();
ConsecutiveLiteralAppends.java,Map.Entry entry = (Map.Entry) iter.next();,if (iter != null ) Map.Entry entry = (Map.Entry) iter.next();
ConsecutiveLiteralAppends.java,List decl = (List) entry.getValue();,if (entry != null ) List decl = (List) entry.getValue();
ConsecutiveLiteralAppends.java,SimpleNode n = no.getLocation();,if (no != null ) SimpleNode n = no.getLocation();
ConsecutiveLiteralAppends.java,Node parent = node.jjtGetParent();,if (node != null ) Node parent = node.jjtGetParent();
ConsecutiveLiteralAppends.java,Node parentNode = node.jjtGetParent();,if (node != null ) Node parentNode = node.jjtGetParent();
ConsecutiveLiteralAppends.java,parentNode = parentNode.jjtGetParent();,if (parentNode != null ) parentNode = parentNode.jjtGetParent();
ConsecutiveLiteralAppends.java,int allChildren = parentNode.jjtGetNumChildren();,if (parentNode != null ) int allChildren = parentNode.jjtGetNumChildren();
ConsecutiveLiteralAppends.java,SimpleNode nn = (SimpleNode) node.getTypeNameNode();,if (node != null ) SimpleNode nn = (SimpleNode) node.getTypeNameNode();
InefficientStringBuffering.java,ASTLiteral literal = (ASTLiteral)i.next();,if ((ASTLiteral)i != null ) ASTLiteral literal = (ASTLiteral)i.next();
InefficientStringBuffering.java,ASTName name = (ASTName)i.next();,if ((ASTName)i != null ) ASTName name = (ASTName)i.next();
InefficientStringBuffering.java,VariableNameDeclaration vnd = (VariableNameDeclaration)name.getNameDeclaration();,if ((VariableNameDeclaration)name != null ) VariableNameDeclaration vnd = (VariableNameDeclaration)name.getNameDeclaration();
StringInstantiation.java,NameDeclaration nd = (NameDeclaration)name.getNameDeclaration();,if ((NameDeclaration)name != null ) NameDeclaration nd = (NameDeclaration)name.getNameDeclaration();
UseIndexOfChar.java,ASTLiteral literal = (ASTLiteral)j.next();,if ((ASTLiteral)j != null ) ASTLiteral literal = (ASTLiteral)j.next();
AbstractSunSecureRule.java,final ASTFieldDeclaration fd = (ASTFieldDeclaration) it.next();,if (it != null ) final ASTFieldDeclaration fd = (ASTFieldDeclaration) it.next();
ClassScope.java,MethodNameDeclaration mnd = (MethodNameDeclaration)i.next();,if ((MethodNameDeclaration)i != null ) MethodNameDeclaration mnd = (MethodNameDeclaration)i.next();
ClassScope.java,MethodNameDeclaration mnd = (MethodNameDeclaration)i.next();,if ((MethodNameDeclaration)i != null ) MethodNameDeclaration mnd = (MethodNameDeclaration)i.next();
NameFinder.java,NameOccurrence occurrence = (NameOccurrence)names.getLast();,if ((NameOccurrence)names != null ) NameOccurrence occurrence = (NameOccurrence)names.getLast();
Benchmark.java,Result result = (Result)j.next();,if ((Result)j != null ) Result result = (Result)j.next();
Benchmark.java,File file = (File)k.next();,if ((File)k != null ) File file = (File)k.next();
Benchmark.java,Rule rule = (Rule)j.next();,if ((Rule)j != null ) Rule rule = (Rule)j.next();
Benchmark.java,File file = (File)k.next();,if ((File)k != null ) File file = (File)k.next();
RuleSetTest.java,Collection rules = IUT.getRules();,if (IUT != null ) Collection rules = IUT.getRules();
RuleSetFactory.java,DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();,if (DocumentBuilderFactory != null ) DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();
CyclomaticComplexity.java,Entry classEntry = (Entry) entryStack.pop();,if (entryStack != null ) Entry classEntry = (Entry) entryStack.pop();
Benchmark.java,Collection rules = ruleSet.getRules();,if (ruleSet != null ) Collection rules = ruleSet.getRules();
ParseException.java,retval += expected.toString();,if (expected != null ) retval += expected.toString();
RuleSetTest.java,Set rules = IUT.getRules();,if (IUT != null ) Set rules = IUT.getRules();
Benchmark.java,Set rules = ruleSet.getRules();,if (ruleSet != null ) Set rules = ruleSet.getRules();
ParseException.java,retval += expected.toString();,if (expected != null ) retval += expected.toString();
PMD.java,JavaParser parser = targetJDKVersion.createParser(excluder.getCopyReader());,if (targetJDKVersion != null ) JavaParser parser = targetJDKVersion.createParser(excluder.getCopyReader());
PMD.java,ASTCompilationUnit c = parser.CompilationUnit();,if (parser != null ) ASTCompilationUnit c = parser.CompilationUnit();
PMD.java,files = collectFromCommaDelimitedString(opts.getInputPath());,if (collectFromCommaDelimitedString(opts != null ) files = collectFromCommaDelimitedString(opts.getInputPath());
PMD.java,files = collectFilesFromOneName(opts.getInputPath());,if (collectFilesFromOneName(opts != null ) files = collectFilesFromOneName(opts.getInputPath());
PMD.java,RuleSet rules = ruleSetFactory.createRuleSet(opts.getRulesets());,if (ruleSetFactory != null ) RuleSet rules = ruleSetFactory.createRuleSet(opts.getRulesets());
PMD.java,Rule r = (Rule)i.next();,if ((Rule)i != null ) Rule r = (Rule)i.next();
PMD.java,DataSource dataSource = (DataSource) i.next();,if (i != null ) DataSource dataSource = (DataSource) i.next();
PMD.java,Renderer r = opts.createRenderer();,if (opts != null ) Renderer r = opts.createRenderer();
PMD.java,Enumeration e = zipFile.entries();,if (zipFile != null ) Enumeration e = zipFile.entries();
PMD.java,ZipEntry zipEntry = (ZipEntry) e.nextElement();,if (e != null ) ZipEntry zipEntry = (ZipEntry) e.nextElement();
RuleSetFactory.java,DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();,if (DocumentBuilderFactory != null ) DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();
RuleSetFactory.java,Element root = doc.getDocumentElement();,if (doc != null ) Element root = doc.getDocumentElement();
RuleSetFactory.java,NodeList nodeList = root.getChildNodes();,if (root != null ) NodeList nodeList = root.getChildNodes();
RuleSetFactory.java,String key = (String)j.next();,if ((String)j != null ) String key = (String)j.next();
RuleSetFactory.java,Rule externalRule = externalRuleSet.getRuleByName(externalRuleID.getRuleName());,if (externalRuleSet != null ) Rule externalRule = externalRuleSet.getRuleByName(externalRuleID.getRuleName());
RuleSetFactory.java,NodeList excludeNodes = ruleElement.getChildNodes();,if (ruleElement != null ) NodeList excludeNodes = ruleElement.getChildNodes();
RuleSetFactory.java,Rule rule = (Rule) i.next();,if (i != null ) Rule rule = (Rule) i.next();
PMDTask.java,Rule rule = (Rule) i.next();,if (i != null ) Rule rule = (Rule) i.next();
InefficientEmptyStringCheck.java,Map mapDeclars = node.getScope().getVariableDeclarations();,if (node != null ) Map mapDeclars = node.getScope().getVariableDeclarations();
InefficientEmptyStringCheck.java,NameOccurrence occ = (NameOccurrence) j.next();,if (j != null ) NameOccurrence occ = (NameOccurrence) j.next();
RunPMDAction.java,FileObject fobj = dataobject.getPrimaryFile();,if (dataobject != null ) FileObject fobj = dataobject.getPrimaryFile();
RunPMDAction.java,Iterator iterator = ctx.getReport().iterator();,if (ctx != null ) Iterator iterator = ctx.getReport().iterator();
RunPMDAction.java,RuleViolation violation = ( RuleViolation )iterator.next();,if ()iterator != null ) RuleViolation violation = ( RuleViolation )iterator.next();
AppendCharacterWithChar.java,String str = node.getImage();,if (node != null ) String str = node.getImage();
ClearReviewsAction.java,Iterator i = structuredSelection.iterator();,if (structuredSelection != null ) Iterator i = structuredSelection.iterator();
ClearReviewsAction.java,Object object = (Object) i.next();,if (i != null ) Object object = (Object) i.next();
BaseVisitor.java,final Reader input = new InputStreamReader(file.getContents());,if (InputStreamReader(file != null ) final Reader input = new InputStreamReader(file.getContents());
ConfigUtils.java,Map propOverrides = PMDOptionsSettings.getDefault().getRuleProperties();,if (PMDOptionsSettings != null ) Map propOverrides = PMDOptionsSettings.getDefault().getRuleProperties();
RuleEnabler.java,int index = chosenList.getSelectedIndex();,if (chosenList != null ) int index = chosenList.getSelectedIndex();
RuleEnabler.java,int index = availableList.getSelectedIndex();,if (availableList != null ) int index = availableList.getSelectedIndex();
RuleEnabler.java,PMDOptionsSettings settings = PMDOptionsSettings.getDefault();,if (PMDOptionsSettings != null ) PMDOptionsSettings settings = PMDOptionsSettings.getDefault();
RuleEnabler.java,Map allRulesPropOverrides = settings.getRuleProperties();,if (settings != null ) Map allRulesPropOverrides = settings.getRuleProperties();
RulesConfig.java,list = ConfigUtils.getAllAvailableRules();,if (ConfigUtils != null ) list = ConfigUtils.getAllAvailableRules();
BeanMembersShouldSerializeRule.java,ASTMethodDeclarator meth = (ASTMethodDeclarator) i.next();,if (i != null ) ASTMethodDeclarator meth = (ASTMethodDeclarator) i.next();
BeanMembersShouldSerializeRule.java,String varName = decl.getImage();,if (decl != null ) String varName = decl.getImage();
BaseVisitor.java,review.lineNumber = violation.getLine();,if (violation != null ) review.lineNumber = violation.getLine();
PreferencesModelTest.java,PreferencesModel model = ModelFactory.getFactory().getPreferencesModel();,if (ModelFactory != null ) PreferencesModel model = ModelFactory.getFactory().getPreferencesModel();
PreferencesModelTest.java,String comment = model.getReviewAdditionalComment();,if (model != null ) String comment = model.getReviewAdditionalComment();
PreferencesModelImpl.java,final IPreferenceStore preferenceStore = PMDPlugin.getDefault().getPreferenceStore();,if (PMDPlugin != null ) final IPreferenceStore preferenceStore = PMDPlugin.getDefault().getPreferenceStore();
PreferencesModelImpl.java,final IPreferenceStore preferenceStore = PMDPlugin.getDefault().getPreferenceStore();,if (PMDPlugin != null ) final IPreferenceStore preferenceStore = PMDPlugin.getDefault().getPreferenceStore();
PreferencesModelImpl.java,final IRuleSetManager ruleSetManager = PMDCorePlugin.getDefault().getRuleSetManager();,if (PMDCorePlugin != null ) final IRuleSetManager ruleSetManager = PMDCorePlugin.getDefault().getRuleSetManager();
PreferencesModelImpl.java,final Set defaultRuleSets = ruleSetManager.getDefaultRuleSets();,if (ruleSetManager != null ) final Set defaultRuleSets = ruleSetManager.getDefaultRuleSets();
PreferencesModelImpl.java,final File confsDir = new File(configurationsLocation.toOSString());,if (File(configurationsLocation != null ) final File confsDir = new File(configurationsLocation.toOSString());
PreferencesModelImpl.java,final Configuration conf = new ConfigurationImpl(confLocation.getName());,if (ConfigurationImpl(confLocation != null ) final Configuration conf = new ConfigurationImpl(confLocation.getName());
RegexpFunction.java,String pattern = attr.getValue();,if (attr != null ) String pattern = attr.getValue();
StringToStringRule.java,VariableNameDeclaration vnd = (VariableNameDeclaration)node.getNameDeclaration();,if ((VariableNameDeclaration)node != null ) VariableNameDeclaration vnd = (VariableNameDeclaration)node.getNameDeclaration();
StringToStringRule.java,NameOccurrence occ = (NameOccurrence) j.next();,if (j != null ) NameOccurrence occ = (NameOccurrence) j.next();
UnusedLocalVariableRule.java,VariableNameDeclaration decl = (VariableNameDeclaration)node.getNameDeclaration();,if ((VariableNameDeclaration)node != null ) VariableNameDeclaration decl = (VariableNameDeclaration)node.getNameDeclaration();
UnusedLocalVariableRule.java,Scope scope = node.getScope();,if (node != null ) Scope scope = node.getScope();
UnusedLocalVariableRule.java,Map locals = scope.getVariableDeclarations();,if (scope != null ) Map locals = scope.getVariableDeclarations();
UnusedLocalVariableRule.java,VariableNameDeclaration decl = (VariableNameDeclaration) i.next();,if (i != null ) VariableNameDeclaration decl = (VariableNameDeclaration) i.next();
InefficientStringBuffering.java,VariableNameDeclaration vnd = (VariableNameDeclaration)n.getNameDeclaration();,if ((VariableNameDeclaration)n != null ) VariableNameDeclaration vnd = (VariableNameDeclaration)n.getNameDeclaration();
NullAssignmentRule.java,VariableNameDeclaration vnd = (VariableNameDeclaration)i.next();,if ((VariableNameDeclaration)i != null ) VariableNameDeclaration vnd = (VariableNameDeclaration)i.next();
StringInstantiation.java,VariableNameDeclaration nd = (VariableNameDeclaration)name.getNameDeclaration();,if ((VariableNameDeclaration)name != null ) VariableNameDeclaration nd = (VariableNameDeclaration)name.getNameDeclaration();
StringToStringRule.java,SimpleNode nameNode = node.getTypeNameNode();,if (node != null ) SimpleNode nameNode = node.getTypeNameNode();
StringToStringRule.java,Map decls = node.getScope().getVariableDeclarations();,if (node != null ) Map decls = node.getScope().getVariableDeclarations();
StringToStringRule.java,VariableNameDeclaration decl = (VariableNameDeclaration) i.next();,if (i != null ) VariableNameDeclaration decl = (VariableNameDeclaration) i.next();
StringToStringRule.java,NameOccurrence occ = (NameOccurrence) j.next();,if (j != null ) NameOccurrence occ = (NameOccurrence) j.next();
Benchmark.java,Iterator i = factory.getRegisteredRuleSets();,if (factory != null ) Iterator i = factory.getRegisteredRuleSets();
Benchmark.java,Result result = (Result)j.next();,if ((Result)j != null ) Result result = (Result)j.next();
Benchmark.java,StringBuffer out = new StringBuffer(result.rule.getName());,if (StringBuffer(result != null ) StringBuffer out = new StringBuffer(result.rule.getName());
XMLRenderer.java,Report.SuppressedViolation suppressed = (Report.SuppressedViolation) i.next();,if (i != null ) Report.SuppressedViolation suppressed = (Report.SuppressedViolation) i.next();
UnusedFormalParameterRule.java,Map vars = node.getScope().getVariableDeclarations();,if (node != null ) Map vars = node.getScope().getVariableDeclarations();
UnusedFormalParameterRule.java,VariableNameDeclaration nameDecl = (VariableNameDeclaration) i.next();,if (i != null ) VariableNameDeclaration nameDecl = (VariableNameDeclaration) i.next();
Benchmark.java,Iterator i = factory.getRegisteredRuleSets();,if (factory != null ) Iterator i = factory.getRegisteredRuleSets();
Designer.java,SimpleNode node = (SimpleNode) iter.next();,if (iter != null ) SimpleNode node = (SimpleNode) iter.next();
Plugin.java,SelectedRules rs = new SelectedRules(SettingsPanel.createSettingsStorage());,if (SelectedRules(SettingsPanel != null ) SelectedRules rs = new SelectedRules(SettingsPanel.createSettingsStorage());
Plugin.java,Project project = (Project)context.getElement();,if ((Project)context != null ) Project project = (Project)context.getElement();
Plugin.java,LogPage page = LogManager.getLogManager().getMsgPage();,if (LogManager != null ) LogPage page = LogManager.getLogManager().getMsgPage();
Plugin.java,RuleViolation rv = (RuleViolation)i.next();,if ((RuleViolation)i != null ) RuleViolation rv = (RuleViolation)i.next();
Plugin.java,Element doc = contextMenu.getContext().getElement();,if (contextMenu != null ) Element doc = contextMenu.getContext().getElement();
XMLRendererTest.java,String report = renderer.render(list.iterator());,if (renderer != null ) String report = renderer.render(list.iterator());
XMLRendererTest.java,String report = renderer.render(list.iterator());,if (renderer != null ) String report = renderer.render(list.iterator());
XMLRendererTest.java,String report = renderer.render(list.iterator());,if (renderer != null ) String report = renderer.render(list.iterator());
MenuBuilder.java,int violations = ctx.getReport().size();,if (ctx != null ) int violations = ctx.getReport().size();
MenuBuilder.java,RuleViolation rv = (RuleViolation)i.next();,if ((RuleViolation)i != null ) RuleViolation rv = (RuleViolation)i.next();
MenuBuilder.java,curClass = curObject.getBClass();,if (curObject != null ) curClass = curObject.getBClass();
MenuBuilder.java,curPackage = curClass.getPackage();,if (curClass != null ) curPackage = curClass.getPackage();
MenuBuilder.java,classEditor = curClass.getEditor();,if (curClass != null ) classEditor = curClass.getEditor();
MenuBuilder.java,int textLen = classEditor.getTextLength();,if (classEditor != null ) int textLen = classEditor.getTextLength();
CompareObjectsWithEquals.java,Map vars = scope.getVariableDeclarations();,if (scope != null ) Map vars = scope.getVariableDeclarations();
CompareObjectsWithEquals.java,VariableNameDeclaration key = (VariableNameDeclaration)i.next();,if ((VariableNameDeclaration)i != null ) VariableNameDeclaration key = (VariableNameDeclaration)i.next();
PMDOpenTool.java,StyleContext context = EditorManager.getStyleContext();,if (EditorManager != null ) StyleContext context = EditorManager.getStyleContext();
PMDOpenTool.java,RuleSet rules = rsp.getActiveRuleSet();,if (rsp != null ) RuleSet rules = rsp.getActiveRuleSet();
PMDOpenTool.java,String packageName = node.getName();,if (node != null ) String packageName = node.getName();
PMDOpenTool.java,Match m = (Match) iter.next();,if (iter != null ) Match m = (Match) iter.next();
PMDOpenTool.java,EditorPane editor = viewer.getEditor();,if (viewer != null ) EditorPane editor = viewer.getEditor();
PMDOpenTool.java,EditorPane editor = viewer.getEditor();,if (viewer != null ) EditorPane editor = viewer.getEditor();
PMDOpenTool.java,String line = reader.readLine();,if (reader != null ) String line = reader.readLine();
PMDOpenTool.java,line = reader.readLine();,if (reader != null ) line = reader.readLine();
PriorityFilter.java,flSelected = violationView.isInformationFilterChecked();,if (violationView != null ) flSelected = violationView.isInformationFilterChecked();
ReviewCodeCmd.java,final IProject project = this.resource.getProject();,if (this != null ) final IProject project = this.resource.getProject();
PMDPropertyPageController.java,final IProgressService progressService = PlatformUI.getWorkbench().getProgressService();,if (PlatformUI != null ) final IProgressService progressService = PlatformUI.getWorkbench().getProgressService();
PMDPropertyPageController.java,this.rebuildNeeded = cmd.isNeedRebuild();,if (cmd != null ) this.rebuildNeeded = cmd.isNeedRebuild();
SymbolTableTestRule.java,Map decls = node.getScope().getVariableDeclarations();,if (node != null ) Map decls = node.getScope().getVariableDeclarations();
SymbolTableTestRule.java,VariableNameDeclaration decl = (VariableNameDeclaration) i.next();,if (i != null ) VariableNameDeclaration decl = (VariableNameDeclaration) i.next();
SymbolTableTestRule.java,NameOccurrence occ = (NameOccurrence)j.next();,if ((NameOccurrence)j != null ) NameOccurrence occ = (NameOccurrence)j.next();
Plugin.java,Project project = (Project)context.getDocument();,if ((Project)context != null ) Project project = (Project)context.getDocument();
Plugin.java,Iterator kids = project.getChildren();,if (project != null ) Iterator kids = project.getChildren();
Plugin.java,Object obj = kids.next();,if (kids != null ) Object obj = kids.next();
Plugin.java,Element doc = contextMenu.getContext().getDocument();,if (contextMenu != null ) Element doc = contextMenu.getContext().getDocument();
Report.java,ASTTypeDeclaration t = (ASTTypeDeclaration)i.next();,if ((ASTTypeDeclaration)i != null ) ASTTypeDeclaration t = (ASTTypeDeclaration)i.next();
TextRenderer.java,RuleViolation excluded = (RuleViolation) i.next();,if (i != null ) RuleViolation excluded = (RuleViolation) i.next();
TextRenderer.java,Set keys = suppressed.keySet();,if (suppressed != null ) Set keys = suppressed.keySet();
TextRenderer.java,String filename = (String)i.next();,if ((String)i != null ) String filename = (String)i.next();
XMLRenderer.java,RuleViolation rv = (RuleViolation) i.next();,if (i != null ) RuleViolation rv = (RuleViolation) i.next();
SymbolTableTestRule.java,NameOccurrence nameOccurrence = (NameOccurrence) j.next();,if (j != null ) NameOccurrence nameOccurrence = (NameOccurrence) j.next();
TooManyFields.java,ASTFieldDeclaration fd = (ASTFieldDeclaration) it.next();,if (it != null ) ASTFieldDeclaration fd = (ASTFieldDeclaration) it.next();
Report.java,ASTTypeDeclaration t = (ASTTypeDeclaration)node.jjtGetParent();,if ((ASTTypeDeclaration)node != null ) ASTTypeDeclaration t = (ASTTypeDeclaration)node.jjtGetParent();
RuleViolation.java,this.filename = ctx.getSourceCodeFilename();,if (ctx != null ) this.filename = ctx.getSourceCodeFilename();
PMDOpenTool.java,String packageName = node.getName();,if (node != null ) String packageName = node.getName();
DAAPathFinder.java,PathElement e = new PathElement(currentPath.getLast());,if (PathElement(currentPath != null ) PathElement e = new PathElement(currentPath.getLast());
DAAPathFinder.java,DefaultMutableTreeNode level = this.getRootNode();,if (this != null ) DefaultMutableTreeNode level = this.getRootNode();
DAAPathFinder.java,DefaultMutableTreeNode level = this.getRootNode();,if (this != null ) DefaultMutableTreeNode level = this.getRootNode();
DAAPathFinder.java,DefaultMutableTreeNode last = this.getLastNode();,if (this != null ) DefaultMutableTreeNode last = this.getLastNode();
DAAPathFinder.java,last = this.getLastNode();,if (this != null ) last = this.getLastNode();
DAAPathFinder.java,IDataFlowNode inode = (IDataFlowNode)currentPath.getLast();,if ((IDataFlowNode)currentPath != null ) IDataFlowNode inode = (IDataFlowNode)currentPath.getLast();
DAAPathFinder.java,DefaultMutableTreeNode treeNode = this.getLastNode();,if (this != null ) DefaultMutableTreeNode treeNode = this.getLastNode();
DAAPathFinder.java,DefaultMutableTreeNode last = this.getLastNode();,if (this != null ) DefaultMutableTreeNode last = this.getLastNode();
DAAPathFinder.java,PathElement e = (PathElement) last.getUserObject();,if (last != null ) PathElement e = (PathElement) last.getUserObject();
DAAPathFinder.java,DefaultMutableTreeNode last = this.getLastNode();,if (this != null ) DefaultMutableTreeNode last = this.getLastNode();
DAAPathFinder.java,PathElement e = (PathElement) last.getUserObject();,if (last != null ) PathElement e = (PathElement) last.getUserObject();
DAAPathFinder.java,IDataFlowNode inode = (IDataFlowNode)this.currentPath.getLast();,if ((IDataFlowNode)this != null ) IDataFlowNode inode = (IDataFlowNode)this.currentPath.getLast();
DAAPathFinder.java,IDataFlowNode doBranch = this.getDoBranchNodeFromFirstDoStatement();,if (this != null ) IDataFlowNode doBranch = this.getDoBranchNodeFromFirstDoStatement();
ASTPanel.java,Node node = (Node) e.getParameter(); node != null;,if (null; != null ) Node node = (Node) e.getParameter(); node != null;
UselessAssignment.java,Object o = hash.get(va.getVariableName());,if (hash != null ) Object o = hash.get(va.getVariableName());
AttributeAxisIteratorTest.java,Attribute a = (Attribute)iter.next();,if ((Attribute)iter != null ) Attribute a = (Attribute)iter.next();
AttributeAxisIteratorTest.java,a = (Attribute)iter.next();,if ((Attribute)iter != null ) a = (Attribute)iter.next();
AttributeAxisIteratorTest.java,a = (Attribute)iter.next();,if ((Attribute)iter != null ) a = (Attribute)iter.next();
AttributeAxisIteratorTest.java,a = (Attribute)iter.next();,if ((Attribute)iter != null ) a = (Attribute)iter.next();
AttributeAxisIterator.java,Class returnType = preFilter[i].getReturnType();,if (preFilter[i] != null ) Class returnType = preFilter[i].getReturnType();
AttributeAxisIterator.java,Method[] tmp = contextNode.getClass().getMethods();,if (contextNode != null ) Method[] tmp = contextNode.getClass().getMethods();
AttributeAxisIterator.java,Class returnType = method.getReturnType();,if (method != null ) Class returnType = method.getReturnType();
AttributeAxisIterator.java,String name = truncateMethodName(method.getName());,if (truncateMethodName(method != null ) String name = truncateMethodName(method.getName());
AttributeAxisIterator.java,Class returnType = method.getReturnType();,if (method != null ) Class returnType = method.getReturnType();
AttributeAxisIterator.java,this.methods = contextNode.getClass().getMethods();,if (contextNode != null ) this.methods = contextNode.getClass().getMethods();
SimpleNodeTest.java,Document document = node.asXml();,if (node != null ) Document document = node.asXml();
SimpleNodeTest.java,String xmlString = writer.toString();,if (writer != null ) String xmlString = writer.toString();
ClassScope.java,SimpleNode n = occurrence.getLocation();,if (occurrence != null ) SimpleNode n = occurrence.getLocation();
ClassScopeTest.java,Iterator i = m.keySet().iterator();,if (m != null ) Iterator i = m.keySet().iterator();
ClassScopeTest.java,MethodNameDeclaration mnd = (MethodNameDeclaration)i.next();,if ((MethodNameDeclaration)i != null ) MethodNameDeclaration mnd = (MethodNameDeclaration)i.next();
ClassScopeTest.java,mnd = (MethodNameDeclaration)i.next();,if ((MethodNameDeclaration)i != null ) mnd = (MethodNameDeclaration)i.next();
UnusedPrivateMethodRule.java,ASTMethodDeclarator node = (ASTMethodDeclarator)mnd.getNode();,if ((ASTMethodDeclarator)mnd != null ) ASTMethodDeclarator node = (ASTMethodDeclarator)mnd.getNode();
UnusedPrivateMethodRule.java,ASTPrimaryExpression parent = (ASTPrimaryExpression) node.jjtGetParent();,if (node != null ) ASTPrimaryExpression parent = (ASTPrimaryExpression) node.jjtGetParent();
UnusedPrivateMethodRule.java,MethodNameDeclaration mnd = (MethodNameDeclaration)i.next();,if ((MethodNameDeclaration)i != null ) MethodNameDeclaration mnd = (MethodNameDeclaration)i.next();
UnusedPrivateMethodRule.java,ASTMethodDeclarator methodNode = (ASTMethodDeclarator)mnd.getNode();,if ((ASTMethodDeclarator)mnd != null ) ASTMethodDeclarator methodNode = (ASTMethodDeclarator)mnd.getNode();
UnusedPrivateMethodRule.java,MethodNameDeclaration mnd = (MethodNameDeclaration)i.next();,if ((MethodNameDeclaration)i != null ) MethodNameDeclaration mnd = (MethodNameDeclaration)i.next();
UnusedPrivateMethodRule.java,ASTMethodDeclarator node = (ASTMethodDeclarator)mnd.getNode();,if ((ASTMethodDeclarator)mnd != null ) ASTMethodDeclarator node = (ASTMethodDeclarator)mnd.getNode();
UnusedPrivateMethodRule.java,VariableNameDeclaration decl = (VariableNameDeclaration)i.next();,if ((VariableNameDeclaration)i != null ) VariableNameDeclaration decl = (VariableNameDeclaration)i.next();
CompareObjectsWithEquals.java,Scope scope = (Scope)node.getScope();,if ((Scope)node != null ) Scope scope = (Scope)node.getScope();
CompareObjectsWithEquals.java,MethodScope scope = node.getScope().getEnclosingMethodScope();,if (node != null ) MethodScope scope = node.getScope().getEnclosingMethodScope();
ImmutableField.java,VariableNameDeclaration decl = (VariableNameDeclaration) i.next();,if (i != null ) VariableNameDeclaration decl = (VariableNameDeclaration) i.next();
ActiveRuleSetPropertyGroup.java,RuleSet rs = (RuleSet)e.next();,if ((RuleSet)e != null ) RuleSet rs = (RuleSet)e.next();
ActiveRuleSetPropertyGroup.java,RuleSet rs = (RuleSet)iter.next();,if ((RuleSet)iter != null ) RuleSet rs = (RuleSet)iter.next();
ActiveRuleSetPropertyPage.java,RuleSetProperty rsp = (RuleSetProperty)iter.next();,if ((RuleSetProperty)iter != null ) RuleSetProperty rsp = (RuleSetProperty)iter.next();
ActiveRuleSetPropertyPage.java,ListEntry le = (ListEntry)e.nextElement();,if ((ListEntry)e != null ) ListEntry le = (ListEntry)e.nextElement();
ActiveRuleSetPropertyPage.java,ListEntry le = (ListEntry)e.nextElement();,if ((ListEntry)e != null ) ListEntry le = (ListEntry)e.nextElement();
ConfigureRuleSetPropertyPage.java,RuleSetProperty rsp = (RuleSetProperty)iter.next();,if ((RuleSetProperty)iter != null ) RuleSetProperty rsp = (RuleSetProperty)iter.next();
ConfigureRuleSetPropertyPage.java,RuleSetProperty rsp = (RuleSetProperty)iter.next();,if ((RuleSetProperty)iter != null ) RuleSetProperty rsp = (RuleSetProperty)iter.next();
ConfigureRuleSetPropertyPage.java,RuleSetProperty rsp = (RuleSetProperty)iter.next();,if ((RuleSetProperty)iter != null ) RuleSetProperty rsp = (RuleSetProperty)iter.next();
ConfigureRuleSetPropertyPage.java,RuleSetProperty rsp = (RuleSetProperty)iter.next();,if ((RuleSetProperty)iter != null ) RuleSetProperty rsp = (RuleSetProperty)iter.next();
ConfigureRuleSetPropertyPage.java,Rule rule = (Rule)iter.next();,if ((Rule)iter != null ) Rule rule = (Rule)iter.next();
ImportedRuleSetPropertyPage.java,RuleSet rs = (RuleSet)iter.next();,if ((RuleSet)iter != null ) RuleSet rs = (RuleSet)iter.next();
RuleSetProperty.java,Rule rule = (Rule)iter.next();,if ((Rule)iter != null ) Rule rule = (Rule)iter.next();
RuleSetProperty.java,Rule rule = (Rule)iter.next();,if ((Rule)iter != null ) Rule rule = (Rule)iter.next();
RuleSetProperty.java,Rule rule = (Rule)iter.next();,if ((Rule)iter != null ) Rule rule = (Rule)iter.next();
PMDOpenTool.java,RuleSetProperty rsp = (RuleSetProperty)iter.next();,if ((RuleSetProperty)iter != null ) RuleSetProperty rsp = (RuleSetProperty)iter.next();
PMDOpenTool.java,RuleViolation rv = (RuleViolation)i.next();,if ((RuleViolation)i != null ) RuleViolation rv = (RuleViolation)i.next();
PMDOpenTool.java,Node node = Browser.getActiveBrowser().getActiveNode();,if (Browser != null ) Node node = Browser.getActiveBrowser().getActiveNode();
PMDOpenTool.java,Document doc = viewer.getEditor().getDocument();,if (viewer != null ) Document doc = viewer.getEditor().getDocument();
PMDOpenTool.java,Node[] fileNodes = packageNode.getDisplayChildren();,if (packageNode != null ) Node[] fileNodes = packageNode.getDisplayChildren();
PMDOpenTool.java,InputStream is = javaNode.getInputStream();,if (javaNode != null ) InputStream is = javaNode.getInputStream();
PMDOpenTool.java,String packageName = node.getName();,if (node != null ) String packageName = node.getName();
PMDOpenTool.java,Node[] fileNodes = packageNode.getDisplayChildren();,if (packageNode != null ) Node[] fileNodes = packageNode.getDisplayChildren();
PMDOpenTool.java,String packageName = node.getName();,if (node != null ) String packageName = node.getName();
PMDOpenTool.java,Match m = (Match)iter.next();,if ((Match)iter != null ) Match m = (Match)iter.next();
VariableAccessVisitor.java,NameOccurrence no = (NameOccurrence) k.next();,if (k != null ) NameOccurrence no = (NameOccurrence) k.next();
UselessAssignment.java,Report rpt = rc.getReport();,if (rc != null ) Report rpt = rc.getReport();
DataFlowCreator.java,ASTIfStatement st = (ASTIfStatement) node.jjtGetParent();,if (node != null ) ASTIfStatement st = (ASTIfStatement) node.jjtGetParent();
DataFlowCreator.java,ASTForStatement parent = (ASTForStatement) node.jjtGetParent();,if (node != null ) ASTForStatement parent = (ASTForStatement) node.jjtGetParent();
Linker.java,this.braceStack = dataFlow.getBraceStack();,if (dataFlow != null ) this.braceStack = dataFlow.getBraceStack();
Linker.java,this.continueBreakReturnStack = dataFlow.getContinueBreakReturnStack();,if (dataFlow != null ) this.continueBreakReturnStack = dataFlow.getContinueBreakReturnStack();
ASTPanel.java,Node node = (Node) e.getParameter(); node != null;,if (null; != null ) Node node = (Node) e.getParameter(); node != null;
ASTPanel.java,TreePath path = new TreePath(list.toArray());,if (TreePath(list != null ) TreePath path = new TreePath(list.toArray());
SourceCodePanel.java,final SimpleNode node = (SimpleNode) e.getParameter();,if (e != null ) final SimpleNode node = (SimpleNode) e.getParameter();
AttributesSubMenu.java,Attribute attribute = (Attribute) i.next();,if (i != null ) Attribute attribute = (Attribute) i.next();
SimpleNodeTreeNodeAdapter.java,children = new ArrayList(node.jjtGetNumChildren());,if (ArrayList(node != null ) children = new ArrayList(node.jjtGetNumChildren());
JavaTokenizer.java,StringBuffer sb = tokens.getCodeBuffer();,if (tokens != null ) StringBuffer sb = tokens.getCodeBuffer();
JavaTokenizer.java,Token currToken = tokenMgr.getNextToken();,if (tokenMgr != null ) Token currToken = tokenMgr.getNextToken();
JavaTokenizer.java,currToken = tokenMgr.getNextToken();,if (tokenMgr != null ) currToken = tokenMgr.getNextToken();
JavaTokenizer.java,currToken = tokenMgr.getNextToken();,if (tokenMgr != null ) currToken = tokenMgr.getNextToken();
JavaTokenizer.java,currToken = tokenMgr.getNextToken();,if (tokenMgr != null ) currToken = tokenMgr.getNextToken();
MatchAlgorithm.java,matches = coll.getMatches();,if (coll != null ) matches = coll.getMatches();
MatchCollector.java,ArrayList matchList = new ArrayList(startMap.values());,if (ArrayList(startMap != null ) ArrayList matchList = new ArrayList(startMap.values());
Linker.java,IDataFlowNode node = so.getDataFlowNode();,if (so != null ) IDataFlowNode node = so.getDataFlowNode();
VariableAccessVisitor.java,Map declarations = (Map)i.next();,if ((Map)i != null ) Map declarations = (Map)i.next();
VariableAccessVisitor.java,VariableNameDeclaration vnd = (VariableNameDeclaration) j.next();,if (j != null ) VariableNameDeclaration vnd = (VariableNameDeclaration) j.next();
VariableAccessVisitor.java,Iterator scopeIter = scopeSet.iterator();,if (scopeSet != null ) Iterator scopeIter = scopeSet.iterator();
VariableAccessVisitor.java,Map map = (Map) scopeIter.next();,if (scopeIter != null ) Map map = (Map) scopeIter.next();
VariableAccessVisitor.java,Iterator iter = map.keySet().iterator();,if (map != null ) Iterator iter = map.keySet().iterator();
VariableAccessVisitor.java,VariableNameDeclaration vnd = (VariableNameDeclaration) iter.next();,if (iter != null ) VariableNameDeclaration vnd = (VariableNameDeclaration) iter.next();
AcceptanceTest.java,Scope s = local.getScope();,if (local != null ) Scope s = local.getScope();
XPathRule.java,SimpleNode actualNode = (SimpleNode) iter.next();,if (iter != null ) SimpleNode actualNode = (SimpleNode) iter.next();
XPathRule.java,Entry entry = (Entry) iter.next();,if (iter != null ) Entry entry = (Entry) iter.next();
AttributeAxisIterator.java,String name = method.getName();,if (method != null ) String name = method.getName();
AttributeAxisIterator.java,Class returnType = method.getReturnType();,if (method != null ) Class returnType = method.getReturnType();
ExceptionAsFlowControl.java,String throwName = node.getFirstClassOrInterfaceTypeImage();,if (node != null ) String throwName = node.getFirstClassOrInterfaceTypeImage();
AvoidFieldNameMatchingTypeName.java,String varName = node.getVariableName();,if (node != null ) String varName = node.getVariableName();
AvoidFieldNameMatchingTypeName.java,varName = varName.toLowerCase();,if (varName != null ) varName = varName.toLowerCase();
AvoidNonConstructorMethodsWithClassName.java,String methodName = node.getMethodName();,if (node != null ) String methodName = node.getMethodName();
ImportFromSamePackageRule.java,String importPkgName = importDecl.getPackageName();,if (importDecl != null ) String importPkgName = importDecl.getPackageName();
AccessorClassGeneration.java,String aName = (String) li.previous();,if (li != null ) String aName = (String) li.previous();
AccessorClassGeneration.java,ClassData outerDataSet = (ClassData) outerIterator.next();,if (outerIterator != null ) ClassData outerDataSet = (ClassData) outerIterator.next();
AccessorClassGeneration.java,ASTConstructorDeclaration cd = (ASTConstructorDeclaration) constructors.next();,if (constructors != null ) ASTConstructorDeclaration cd = (ASTConstructorDeclaration) constructors.next();
AccessorClassGeneration.java,ClassData innerDataSet = (ClassData) innerIterator.next();,if (innerIterator != null ) ClassData innerDataSet = (ClassData) innerIterator.next();
AccessorClassGeneration.java,AllocData ad = (AllocData) allocations.next();,if (allocations != null ) AllocData ad = (AllocData) allocations.next();
AvoidReassigningParameters.java,Scope scope = node.getScope();,if (node != null ) Scope scope = node.getScope();
AvoidReassigningParameters.java,Map params = scope.getVariableDeclarations();,if (scope != null ) Map params = scope.getVariableDeclarations();
NullAssignmentRule.java,Scope s = name.getScope();,if (name != null ) Scope s = name.getScope();
NullAssignmentRule.java,Map vars = cs.getVariableDeclarations();,if (cs != null ) Map vars = cs.getVariableDeclarations();
SourceFileScopeTest.java,Scope scope = decl.getScope();,if (decl != null ) Scope scope = decl.getScope();
SourceFileScopeTest.java,Map m = scope.getClassDeclarations();,if (scope != null ) Map m = scope.getClassDeclarations();
DoubleCheckedLocking.java,insideInterface = node.isInterface();,if (node != null ) insideInterface = node.isInterface();
MethodReturnsInternalArray.java,final ASTReturnStatement ret = (ASTReturnStatement) it.next();,if (it != null ) final ASTReturnStatement ret = (ASTReturnStatement) it.next();
ImportFromSamePackageRule.java,ASTName nameNode = node.getImportedNameNode();,if (node != null ) ASTName nameNode = node.getImportedNameNode();
AttributeAxisIterator.java,String name = method.getName();,if (method != null ) String name = method.getName();
ProgressDialog.java,progressBarLabel = new javax.swing.JLabel();,if (javax != null ) progressBarLabel = new javax.swing.JLabel();
ProgressDialog.java,progressBar = new javax.swing.JProgressBar();,if (javax != null ) progressBar = new javax.swing.JProgressBar();
ProgressDialog.java,cancelButton = new javax.swing.JButton();,if (javax != null ) cancelButton = new javax.swing.JButton();
ProgressDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
ProgressDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
ProgressDialog.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RunPMDAction.java,FileObject fobj = dataobject.getPrimaryFile();,if (dataobject != null ) FileObject fobj = dataobject.getPrimaryFile();
UnusedPrivateMethodRule.java,ClassScope cs = (ClassScope)node.getScope();,if ((ClassScope)node != null ) ClassScope cs = (ClassScope)node.getScope();
UnusedPrivateMethodRule.java,Map methods = cs.getMethodDeclarations();,if (cs != null ) Map methods = cs.getMethodDeclarations();
UnusedPrivateMethodRule.java,ASTMethodDeclarator n = (ASTMethodDeclarator)mnd.getNode();,if ((ASTMethodDeclarator)mnd != null ) ASTMethodDeclarator n = (ASTMethodDeclarator)mnd.getNode();
UnusedPrivateMethodRule.java,ASTMethodDeclarator methodNode = (ASTMethodDeclarator) i.next();,if (i != null ) ASTMethodDeclarator methodNode = (ASTMethodDeclarator) i.next();
UnusedPrivateMethodRule.java,node = (SimpleNode) i.next();,if (i != null ) node = (SimpleNode) i.next();
Scanner.java,PMDScanAnnotation annotation = PMDScanAnnotation.getNewInstance();,if (PMDScanAnnotation != null ) PMDScanAnnotation annotation = PMDScanAnnotation.getNewInstance();
Scanner.java,String msg = fault.getMessage();,if (fault != null ) String msg = fault.getMessage();
AbstractRule.java,Scope s = node.getScope();,if (node != null ) Scope s = node.getScope();
AbstractRule.java,methodName = ms.getName();,if (ms != null ) methodName = ms.getName();
PMDPlugin.java,ClassLoader loader = getClass().getClassLoader();,if (getClass() != null ) ClassLoader loader = getClass().getClassLoader();
PMDCorePlugin.java,ruleSetFile = br.readLine();,if (br != null ) ruleSetFile = br.readLine();
ProjectPropertiesModelTest.java,projectRuleSet = model.getProjectRuleSet();,if (model != null ) projectRuleSet = model.getProjectRuleSet();
CPD.java,renderer = (Renderer) rClass.newInstance();,if (rClass != null ) renderer = (Renderer) rClass.newInstance();
CPD.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
ProjectPropertiesModelTest.java,Iterator i = projectRuleSet.getRules().iterator();,if (projectRuleSet != null ) Iterator i = projectRuleSet.getRules().iterator();
ProjectPropertiesModelTest.java,Rule rule = (Rule) i.next();,if (i != null ) Rule rule = (Rule) i.next();
ProjectPropertiesModelTest.java,Rule pmdRule = basicRuleSet.getRuleByName(rule.getName());,if (basicRuleSet != null ) Rule pmdRule = basicRuleSet.getRuleByName(rule.getName());
ProjectPropertiesModelTest.java,i = basicRuleSet.getRules().iterator();,if (basicRuleSet != null ) i = basicRuleSet.getRules().iterator();
ProjectPropertiesModelTest.java,Rule pmdRule = (Rule) i.next();,if (i != null ) Rule pmdRule = (Rule) i.next();
ProjectPropertiesModelTest.java,Rule rule = projectRuleSet.getRuleByName(pmdRule.getName());,if (projectRuleSet != null ) Rule rule = projectRuleSet.getRuleByName(pmdRule.getName());
ProjectPropertiesModelImpl.java,final Rule pluginRule = pluginRuleSet.getRuleByName(projectRule.getName());,if (pluginRuleSet != null ) final Rule pluginRule = pluginRuleSet.getRuleByName(projectRule.getName());
PMDPlugin.java,projectRuleSet = ruleSetFactory.createRuleSet(ruleSetFile.getContents());,if (ruleSetFactory != null ) projectRuleSet = ruleSetFactory.createRuleSet(ruleSetFile.getContents());
PMDPlugin.java,ImageRegistry registry = PMDPlugin.getDefault().getImageRegistry();,if (PMDPlugin != null ) ImageRegistry registry = PMDPlugin.getDefault().getImageRegistry();
PMDPlugin.java,IWorkingSetManager workingSetManager = PlatformUI.getWorkbench().getWorkingSetManager();,if (PlatformUI != null ) IWorkingSetManager workingSetManager = PlatformUI.getWorkbench().getWorkingSetManager();
HTMLRenderer.java,String externalInfoUrl = rv.getRule().getExternalInfoUrl();,if (rv != null ) String externalInfoUrl = rv.getRule().getExternalInfoUrl();
Report.java,"String key = rv.getPackageName() + ""."" + rv.getClassName();","if (rv != null ) String key = rv.getPackageName() + ""."" + rv.getClassName();"
PapariTextRenderer.java,fileName = rv.getFilename();,if (rv != null ) fileName = rv.getFilename();
PapariTextRenderer.java,Map summary = report.getCountSummary();,if (report != null ) Map summary = report.getCountSummary();
PapariTextRenderer.java,fileName = error.getFile();,if (error != null ) fileName = error.getFile();
StatementAndBraceFinder.java,ASTForStatement parent = (ASTForStatement) node.jjtGetParent();,if (node != null ) ASTForStatement parent = (ASTForStatement) node.jjtGetParent();
CompareObjectsWithEquals.java,MethodScope scope = node.getScope().getEnclosingMethodScope();,if (node != null ) MethodScope scope = node.getScope().getEnclosingMethodScope();
CompareObjectsWithEquals.java,Map vars = scope.getVariableDeclarations();,if (scope != null ) Map vars = scope.getVariableDeclarations();
CompareObjectsWithEquals.java,VariableNameDeclaration key = (VariableNameDeclaration)i.next();,if ((VariableNameDeclaration)i != null ) VariableNameDeclaration key = (VariableNameDeclaration)i.next();
VariableNameDeclaration.java,Node parent = node.jjtGetParent().jjtGetParent();,if (node != null ) Node parent = node.jjtGetParent().jjtGetParent();
VariableNameDeclaration.java,Node parent = node.jjtGetParent().jjtGetParent();,if (node != null ) Node parent = node.jjtGetParent().jjtGetParent();
VariableNameDeclaration.java,Node parent = node.jjtGetParent().jjtGetParent();,if (node != null ) Node parent = node.jjtGetParent().jjtGetParent();
Designer.java,StringReader sr = new StringReader(codeEditorPane.getText());,if (StringReader(codeEditorPane != null ) StringReader sr = new StringReader(codeEditorPane.getText());
Designer.java,String text = this.codeEditorPane.getText();,if (this != null ) String text = this.codeEditorPane.getText();
Designer.java,Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();,if (Toolkit != null ) Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();
Designer.java,ASTCompilationUnit cu = createParser().CompilationUnit();,if (createParser() != null ) ASTCompilationUnit cu = createParser().CompilationUnit();
Designer.java,Document document = node.asXml();,if (node != null ) Document document = node.asXml();
Designer.java,String xmlString = writer.toString();,if (writer != null ) String xmlString = writer.toString();
DaaRule.java,int current = va.getAccessType();,if (va != null ) int current = va.getAccessType();
DAAPathFinder.java,DefaultMutableTreeNode child = (DefaultMutableTreeNode) level.getFirstChild();,if (level != null ) DefaultMutableTreeNode child = (DefaultMutableTreeNode) level.getFirstChild();
DAAPathFinder.java,PathElement e = (PathElement) child.getUserObject();,if (child != null ) PathElement e = (PathElement) child.getUserObject();
ProjectPropertiesModelImpl.java,final String key = (String) j.next();,if (j != null ) final String key = (String) j.next();
ProjectPropertiesModelImpl.java,final Iterator i = this.projectRuleSet.getRules().iterator();,if (this != null ) final Iterator i = this.projectRuleSet.getRules().iterator();
ProjectPropertiesModelImpl.java,final Rule rule = (Rule) i.next();,if (i != null ) final Rule rule = (Rule) i.next();
GeneralFiddlingTest.java,IDataFlowNode flow = meth.getDataFlowNode();,if (meth != null ) IDataFlowNode flow = meth.getDataFlowNode();
GeneralFiddlingTest.java,IDataFlowNode o = (IDataFlowNode)i.next();,if ((IDataFlowNode)i != null ) IDataFlowNode o = (IDataFlowNode)i.next();
DataFlowNode.java,this.line = node.getBeginLine();,if (node != null ) this.line = node.getBeginLine();
DataFlowNode.java,empty = bitSet.isEmpty();,if (bitSet != null ) empty = bitSet.isEmpty();
AbstractRule.java,ASTCompilationUnit node = (ASTCompilationUnit) i.next();,if (i != null ) ASTCompilationUnit node = (ASTCompilationUnit) i.next();
AbstractRule.java,className = node.getImage();,if (node != null ) className = node.getImage();
AbstractRule.java,methodName = node.getImage();,if (node != null ) methodName = node.getImage();
RuleSet.java,Rule r = (Rule) i.next();,if (i != null ) Rule r = (Rule) i.next();
Search.java,"decl = searchUpward(occ, occ.getScope());","if (occ != null ) decl = searchUpward(occ, occ.getScope());"
PMDScanAnnotation.java,Line line = ( Line )propertyChangeEvent.getSource();,if ()propertyChangeEvent != null ) Line line = ( Line )propertyChangeEvent.getSource();
PMDPreferencePage.java,RuleSet importedRuleSet = factory.createRuleSet(dialog.getImportedRuleSetName());,if (factory != null ) RuleSet importedRuleSet = factory.createRuleSet(dialog.getImportedRuleSetName());
RuleSetSelectionDialog.java,importedRuleSetName = inputCombo.getText();,if (inputCombo != null ) importedRuleSetName = inputCombo.getText();
ProjectPropertiesModelImpl.java,final String key = (String) j.next();,if (j != null ) final String key = (String) j.next();
SimpleNodeTest.java,ASTBlock b = (ASTBlock)i.next();,if ((ASTBlock)i != null ) ASTBlock b = (ASTBlock)i.next();
SimpleNodeTest.java,ASTVariableInitializer b = (ASTVariableInitializer)i.next();,if ((ASTVariableInitializer)i != null ) ASTVariableInitializer b = (ASTVariableInitializer)i.next();
SimpleNodeTest.java,ASTExpression b = (ASTExpression)i.next();,if ((ASTExpression)i != null ) ASTExpression b = (ASTExpression)i.next();
SimpleNode.java,SimpleNode parent = (SimpleNode)this.jjtGetParent();,if ((SimpleNode)this != null ) SimpleNode parent = (SimpleNode)this.jjtGetParent();
SimpleNode.java,String cn = getClass().getName();,if (getClass() != null ) String cn = getClass().getName();
CPDCheckProjectAction.java,Object obj = iter.next();,if (iter != null ) Object obj = iter.next();
CPDCheckProjectAction.java,Iterator iter = cpd.getMatches();,if (cpd != null ) Iterator iter = cpd.getMatches();
CPDCheckProjectAction.java,Match match = (Match) iter.next();,if (iter != null ) Match match = (Match) iter.next();
ProjectPropertiesModelImpl.java,this.projectRuleSet = PMDPlugin.getDefault().getRuleSet();,if (PMDPlugin != null ) this.projectRuleSet = PMDPlugin.getDefault().getRuleSet();
ProjectPropertiesModelImpl.java,this.ruleSetStoredInProject = projectProperties.isRuleSetStoredInProject();,if (projectProperties != null ) this.ruleSetStoredInProject = projectProperties.isRuleSetStoredInProject();
DeltaVisitor.java,final Reader input = new InputStreamReader(file.getContents());,if (InputStreamReader(file != null ) final Reader input = new InputStreamReader(file.getContents());
QueryProjectRuleSetCmd.java,final long newModificationStamp = ruleSetFile.getModificationStamp();,if (ruleSetFile != null ) final long newModificationStamp = ruleSetFile.getModificationStamp();
QueryProjectRuleSetCmd.java,this.projectRuleSet = ruleSetFactory.createRuleSet(ruleSetFile.getContents());,if (ruleSetFactory != null ) this.projectRuleSet = ruleSetFactory.createRuleSet(ruleSetFile.getContents());
QueryProjectWorkingSetCmd.java,final IWorkingSetManager workingSetManager = PlatformUI.getWorkbench().getWorkingSetManager();,if (PlatformUI != null ) final IWorkingSetManager workingSetManager = PlatformUI.getWorkbench().getWorkingSetManager();
ResourceVisitor.java,final Reader input = new InputStreamReader(file.getContents());,if (InputStreamReader(file != null ) final Reader input = new InputStreamReader(file.getContents());
UpdatePmdEnabledPropertyCmd.java,final IProjectDescription description = this.project.getDescription();,if (this != null ) final IProjectDescription description = this.project.getDescription();
UpdatePmdEnabledPropertyCmd.java,final IProjectDescription description = this.project.getDescription();,if (this != null ) final IProjectDescription description = this.project.getDescription();
UpdateProjectRuleSetCmd.java,final RuleSetWriter writer = WriterAbstractFactory.getFactory().getRuleSetWriter();,if (WriterAbstractFactory != null ) final RuleSetWriter writer = WriterAbstractFactory.getFactory().getRuleSetWriter();
UpdateProjectRuleSetCmd.java,final Iterator i = oldRuleSet.getRules().iterator();,if (oldRuleSet != null ) final Iterator i = oldRuleSet.getRules().iterator();
UpdateProjectRuleSetCmd.java,final Set selectedRules = newRuleSet.getRules();,if (newRuleSet != null ) final Set selectedRules = newRuleSet.getRules();
UpdateProjectRuleSetCmd.java,final Rule rule = (Rule) i.next();,if (i != null ) final Rule rule = (Rule) i.next();
UpdateProjectRuleSetCmd.java,final Iterator j = newRuleSet.getRules().iterator();,if (newRuleSet != null ) final Iterator j = newRuleSet.getRules().iterator();
UpdateProjectRuleSetCmd.java,final Set previousRules = oldRuleSet.getRules();,if (oldRuleSet != null ) final Set previousRules = oldRuleSet.getRules();
UpdateProjectRuleSetCmd.java,final Rule rule = (Rule) j.next();,if (j != null ) final Rule rule = (Rule) j.next();
UpdateRuleSetStoredInProjectPropertyCmd.java,this.ruleSetFileExists = ruleSetFile.exists();,if (ruleSetFile != null ) this.ruleSetFileExists = ruleSetFile.exists();
ProjectPropertiesModelImpl.java,this.pmdEnabled = cmd.isPmdEnabled();,if (cmd != null ) this.pmdEnabled = cmd.isPmdEnabled();
ProjectPropertiesModelImpl.java,final RuleSet pluginRuleSet = PMDPlugin.getDefault().getRuleSet();,if (PMDPlugin != null ) final RuleSet pluginRuleSet = PMDPlugin.getDefault().getRuleSet();
ProjectPropertiesModelImpl.java,this.projectRuleSet = cmd.getProjectRuleSet();,if (cmd != null ) this.projectRuleSet = cmd.getProjectRuleSet();
ProjectPropertiesModelImpl.java,flNeedSave |= this.synchronizeRuleSet();,if (this != null ) flNeedSave |= this.synchronizeRuleSet();
ProjectPropertiesModelImpl.java,this.ruleSetStoredInProject = cmd.isRuleSetStoredInProject();,if (cmd != null ) this.ruleSetStoredInProject = cmd.isRuleSetStoredInProject();
ProjectPropertiesModelImpl.java,this.ruleSetFileExist = cmd.isRuleSetFileExists();,if (cmd != null ) this.ruleSetFileExist = cmd.isRuleSetFileExists();
ProjectPropertiesModelImpl.java,this.projectWorkingSet = cmd.getProjectWorkingSet();,if (cmd != null ) this.projectWorkingSet = cmd.getProjectWorkingSet();
ProjectPropertiesModelImpl.java,final RuleSet pluginRuleSet = PMDPlugin.getDefault().getRuleSet();,if (PMDPlugin != null ) final RuleSet pluginRuleSet = PMDPlugin.getDefault().getRuleSet();
ProjectPropertiesModelImpl.java,final Iterator i = this.projectRuleSet.getRules().iterator();,if (this != null ) final Iterator i = this.projectRuleSet.getRules().iterator();
ProjectPropertiesModelImpl.java,final Iterator i = pluginRuleSet.getRules().iterator();,if (pluginRuleSet != null ) final Iterator i = pluginRuleSet.getRules().iterator();
ProjectPropertiesModelImpl.java,final Rule rule = (Rule) i.next();,if (i != null ) final Rule rule = (Rule) i.next();
UpdateProjectPropertiesCmd.java,this.needRebuild = projectPropertiesModel.isNeedRebuild();,if (projectPropertiesModel != null ) this.needRebuild = projectPropertiesModel.isNeedRebuild();
UpdateProjectPropertiesCmd.java,this.ruleSetFileExists = !projectPropertiesModel.isRuleSetFileExist();,if (!projectPropertiesModel != null ) this.ruleSetFileExists = !projectPropertiesModel.isRuleSetFileExist();
UnusedPrivateMethodRule.java,AccessNode parent = (AccessNode) node.jjtGetParent();,if (node != null ) AccessNode parent = (AccessNode) node.jjtGetParent();
SymbolFacade.java,NameOccurrence occ = (NameOccurrence) i.next();,if (i != null ) NameOccurrence occ = (NameOccurrence) i.next();
SymbolFacade.java,decl = search.getResult();,if (search != null ) decl = search.getResult();
SymbolFacade.java,decl = search.getResult();,if (search != null ) decl = search.getResult();
ExceptionAsFlowControl.java,List list = parent.getCatchBlocks();,if (parent != null ) List list = parent.getCatchBlocks();
ExceptionAsFlowControl.java,ASTCatch catchStmt = (ASTCatch) iter.next();,if (iter != null ) ASTCatch catchStmt = (ASTCatch) iter.next();
SimpleNode.java,final String cn = getClass().getName();,if (getClass() != null ) final String cn = getClass().getName();
UnusedFormalParameterRule.java,Map vars = node.getScope().getVariableDeclarations();,if (node != null ) Map vars = node.getScope().getVariableDeclarations();
UnusedFormalParameterRule.java,VariableNameDeclaration nameDecl = (VariableNameDeclaration) i.next();,if (i != null ) VariableNameDeclaration nameDecl = (VariableNameDeclaration) i.next();
BaseVisitor.java,review.ruleName = (String) pendingReviews.pop();,if (pendingReviews != null ) review.ruleName = (String) pendingReviews.pop();
StringUtil.java,int l = src.length();,if (src != null ) int l = src.length();
DefaultCommandProcessorStrategy.java,Enumeration e = bundle.getKeys();,if (bundle != null ) Enumeration e = bundle.getKeys();
DefaultCommandProcessorStrategy.java,String key = (String) e.nextElement();,if (e != null ) String key = (String) e.nextElement();
PMDProcessor.java,Reader input = new InputStreamReader(file.getContents());,if (InputStreamReader(file != null ) Reader input = new InputStreamReader(file.getContents());
PMDProcessor.java,Iterator iter = context.getReport().iterator();,if (context != null ) Iterator iter = context.getReport().iterator();
PMDProcessor.java,RuleViolation violation = (RuleViolation) iter.next();,if (iter != null ) RuleViolation violation = (RuleViolation) iter.next();
PMDProcessor.java,review.ruleName = violation.getRule().getName();,if (violation != null ) review.ruleName = violation.getRule().getName();
PMDProcessor.java,review.lineNumber = violation.getLine();,if (violation != null ) review.lineNumber = violation.getLine();
PMDProcessor.java,String line = reader.readLine();,if (reader != null ) String line = reader.readLine();
PMDProcessor.java,line = line.trim();,if (line != null ) line = line.trim();
PMDProcessor.java,review.ruleName = (String) pendingReviews.pop();,if (pendingReviews != null ) review.ruleName = (String) pendingReviews.pop();
PMDVisitorRunner.java,IWorkspace workspace = ResourcesPlugin.getWorkspace();,if (ResourcesPlugin != null ) IWorkspace workspace = ResourcesPlugin.getWorkspace();
PMDVisitorRunner.java,Set filesSet = markerDirectives.keySet();,if (markerDirectives != null ) Set filesSet = markerDirectives.keySet();
PMDVisitorRunner.java,Iterator i = filesSet.iterator();,if (filesSet != null ) Iterator i = filesSet.iterator();
PMDVisitorRunner.java,IFile file = (IFile) i.next();,if (i != null ) IFile file = (IFile) i.next();
PMDVisitorRunner.java,Iterator j = markerInfoSet.iterator();,if (markerInfoSet != null ) Iterator j = markerInfoSet.iterator();
PMDVisitorRunner.java,MarkerInfo markerInfo = (MarkerInfo) j.next();,if (j != null ) MarkerInfo markerInfo = (MarkerInfo) j.next();
PMDVisitorRunner.java,IMarker marker = file.createMarker(markerInfo.getType());,if (file != null ) IMarker marker = file.createMarker(markerInfo.getType());
QueryProjectRuleSetCmd.java,boolean ruleSetStoredInProject = queryRuleSetStoredInProjectCmd.isRuleSetStoredInProject();,if (queryRuleSetStoredInProjectCmd != null ) boolean ruleSetStoredInProject = queryRuleSetStoredInProjectCmd.isRuleSetStoredInProject();
QueryProjectRuleSetCmd.java,RuleSet configuredRuleSet = PMDPlugin.getDefault().getRuleSet();,if (PMDPlugin != null ) RuleSet configuredRuleSet = PMDPlugin.getDefault().getRuleSet();
QueryProjectRuleSetCmd.java,Iterator i = this.projectRuleSet.getRules().iterator();,if (this != null ) Iterator i = this.projectRuleSet.getRules().iterator();
QueryProjectRuleSetCmd.java,long newModificationStamp = ruleSetFile.getModificationStamp();,if (ruleSetFile != null ) long newModificationStamp = ruleSetFile.getModificationStamp();
QueryProjectRuleSetCmd.java,RuleSet ruleSet = PMDPlugin.getDefault().getRuleSet();,if (PMDPlugin != null ) RuleSet ruleSet = PMDPlugin.getDefault().getRuleSet();
QueryProjectRuleSetCmd.java,Rule rule = ruleSet.getRuleByName(st.nextToken());,if (ruleSet != null ) Rule rule = ruleSet.getRuleByName(st.nextToken());
QueryProjectWorkingSetCmd.java,IWorkingSetManager workingSetManager = PlatformUI.getWorkbench().getWorkingSetManager();,if (PlatformUI != null ) IWorkingSetManager workingSetManager = PlatformUI.getWorkbench().getWorkingSetManager();
UpdatePmdEnabledPropertyCmd.java,IProjectDescription description = this.project.getDescription();,if (this != null ) IProjectDescription description = this.project.getDescription();
UpdatePmdEnabledPropertyCmd.java,String[] natureIds = description.getNatureIds();,if (description != null ) String[] natureIds = description.getNatureIds();
UpdatePmdEnabledPropertyCmd.java,IProjectDescription description = this.project.getDescription();,if (this != null ) IProjectDescription description = this.project.getDescription();
UpdatePmdEnabledPropertyCmd.java,String[] natureIds = description.getNatureIds();,if (description != null ) String[] natureIds = description.getNatureIds();
UpdateProjectRuleSetCmd.java,Iterator i = this.projectRuleSet.getRules().iterator();,if (this != null ) Iterator i = this.projectRuleSet.getRules().iterator();
UpdateProjectRuleSetCmd.java,Rule rule = (Rule) i.next();,if (i != null ) Rule rule = (Rule) i.next();
UpdateProjectRuleSetCmd.java,Set selectedRules = this.projectRuleSet.getRules();,if (this != null ) Set selectedRules = this.projectRuleSet.getRules();
UpdateProjectRuleSetCmd.java,Rule rule = (Rule) i.next();,if (i != null ) Rule rule = (Rule) i.next();
UpdateProjectRuleSetCmd.java,i = this.projectRuleSet.getRules().iterator();,if (this != null ) i = this.projectRuleSet.getRules().iterator();
UpdateProjectRuleSetCmd.java,Set previousRules = queryCmd.getProjectRuleSet().getRules();,if (queryCmd != null ) Set previousRules = queryCmd.getProjectRuleSet().getRules();
UpdateProjectRuleSetCmd.java,Rule rule = (Rule) i.next();,if (i != null ) Rule rule = (Rule) i.next();
PMDPropertyPage.java,Table ruleTable = availableRulesTableViewer.getTable();,if (availableRulesTableViewer != null ) Table ruleTable = availableRulesTableViewer.getTable();
PMDPropertyPage.java,Table ruleTable = availableRulesTableViewer.getTable();,if (availableRulesTableViewer != null ) Table ruleTable = availableRulesTableViewer.getTable();
PMDPropertyPage.java,RuleSet activeRuleSet = model.getProjectRuleSet();,if (model != null ) RuleSet activeRuleSet = model.getProjectRuleSet();
PMDPropertyPage.java,Set activeRules = activeRuleSet.getRules();,if (activeRuleSet != null ) Set activeRules = activeRuleSet.getRules();
PMDPropertyPage.java,TableItem[] itemList = availableRulesTableViewer.getTable().getItems();,if (availableRulesTableViewer != null ) TableItem[] itemList = availableRulesTableViewer.getTable().getItems();
PMDPropertyPage.java,Object rule = itemList[i].getData();,if (itemList[i] != null ) Object rule = itemList[i].getData();
PMDPropertyPage.java,TableItem[] rulesList = this.availableRulesTableViewer.getTable().getItems();,if (this != null ) TableItem[] rulesList = this.availableRulesTableViewer.getTable().getItems();
PMDPropertyPageController.java,IWorkbench workbench = PlatformUI.getWorkbench();,if (PlatformUI != null ) IWorkbench workbench = PlatformUI.getWorkbench();
PMDPropertyPageController.java,IWorkingSetManager workingSetManager = workbench.getWorkingSetManager();,if (workbench != null ) IWorkingSetManager workingSetManager = workbench.getWorkingSetManager();
PMDPropertyPageController.java,RuleSet ruleSet = this.propertyPageBean.getProjectRuleSet();,if (this != null ) RuleSet ruleSet = this.propertyPageBean.getProjectRuleSet();
PMDPropertyPageController.java,RuleSetWriter writer = WriterAbstractFactory.getFactory().getRuleSetWriter();,if (WriterAbstractFactory != null ) RuleSetWriter writer = WriterAbstractFactory.getFactory().getRuleSetWriter();
UpdateProjectPropertiesCmd.java,this.needRebuild = projectPropertyModel.isNeedRebuild();,if (projectPropertyModel != null ) this.needRebuild = projectPropertyModel.isNeedRebuild();
UpdateProjectPropertiesCmd.java,this.ruleSetFileExists = !projectPropertyModel.isRuleSetFileExist();,if (!projectPropertyModel != null ) this.ruleSetFileExists = !projectPropertyModel.isRuleSetFileExist();
AcceptanceTest.java,ASTCompilationUnit c = parser.CompilationUnit();,if (parser != null ) ASTCompilationUnit c = parser.CompilationUnit();
AcceptanceTest.java,ASTCompilationUnit c = parser.CompilationUnit();,if (parser != null ) ASTCompilationUnit c = parser.CompilationUnit();
AcceptanceTest.java,ASTCompilationUnit c = parser.CompilationUnit();,if (parser != null ) ASTCompilationUnit c = parser.CompilationUnit();
AcceptanceTest.java,ASTCompilationUnit c = parser.CompilationUnit();,if (parser != null ) ASTCompilationUnit c = parser.CompilationUnit();
Designer.java,StringReader sr = new StringReader(codeEditorPane.getText());,if (StringReader(codeEditorPane != null ) StringReader sr = new StringReader(codeEditorPane.getText());
Benchmark.java,RuleSet ruleSet = (RuleSet)i.next();,if ((RuleSet)i != null ) RuleSet ruleSet = (RuleSet)i.next();
Benchmark.java,Set rules = ruleSet.getRules();,if (ruleSet != null ) Set rules = ruleSet.getRules();
Benchmark.java,Rule rule = (Rule)j.next();,if ((Rule)j != null ) Rule rule = (Rule)j.next();
Benchmark.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
Benchmark.java,File file = (File)k.next();,if ((File)k != null ) File file = (File)k.next();
Benchmark.java,long end = System.currentTimeMillis();,if (System != null ) long end = System.currentTimeMillis();
PMDTask.java,RuleSet rs = (RuleSet) it.next();,if (it != null ) RuleSet rs = (RuleSet) it.next();
AccessorClassGeneration.java,String className = node.getUnmodifedInterfaceDeclaration().getImage();,if (node != null ) String className = node.getUnmodifedInterfaceDeclaration().getImage();
AccessorClassGeneration.java,String className = node.getUnmodifedInterfaceDeclaration().getImage();,if (node != null ) String className = node.getUnmodifedInterfaceDeclaration().getImage();
CyclomaticComplexity.java,Node parentNode = node.jjtGetParent();,if (node != null ) Node parentNode = node.jjtGetParent();
CyclomaticComplexity.java,parentNode = parentNode.jjtGetParent();,if (parentNode != null ) parentNode = parentNode.jjtGetParent();
LooseCoupling.java,Node parent = node.jjtGetParent().jjtGetParent();,if (node != null ) Node parent = node.jjtGetParent().jjtGetParent();
TooManyFields.java,Node p = fd.jjtGetParent();,if (fd != null ) Node p = fd.jjtGetParent();
TooManyFields.java,String key = nc.getImage();,if (nc != null ) String key = nc.getImage();
ExceptionAsFlowControl.java,String throwName = node.getFirstASTNameImage();,if (node != null ) String throwName = node.getFirstASTNameImage();
TestClassWithoutTestCases.java,ASTMethodDeclarator md = (ASTMethodDeclarator) it.next();,if (it != null ) ASTMethodDeclarator md = (ASTMethodDeclarator) it.next();
MethodArgumentCouldBeFinal.java,final String varName = (String)it.next();,if ((String)it != null ) final String varName = (String)it.next();
MethodArgumentCouldBeFinal.java,ASTFormalParameter p = (ASTFormalParameter) it.next();,if (it != null ) ASTFormalParameter p = (ASTFormalParameter) it.next();
StatisticalRule.java,DataPoint point = (DataPoint) points.last();,if (points != null ) DataPoint point = (DataPoint) points.last();
StatisticalRule.java,Iterator points = dataPoints.iterator();,if (dataPoints != null ) Iterator points = dataPoints.iterator();
ExceptionAsFlowControl.java,ASTCatch catchStmt = (ASTCatch) iter.next();,if (iter != null ) ASTCatch catchStmt = (ASTCatch) iter.next();
Designer.java,StringReader sr = new StringReader(codeEditorPane.getText());,if (StringReader(codeEditorPane != null ) StringReader sr = new StringReader(codeEditorPane.getText());
Designer.java,ASTCompilationUnit c = parser.CompilationUnit();,if (parser != null ) ASTCompilationUnit c = parser.CompilationUnit();
UnusedPrivateMethodRule.java,SimpleNode node = (SimpleNode) i.next();,if (i != null ) SimpleNode node = (SimpleNode) i.next();
PMDTask.java,Formatter formatter = (Formatter) i.next();,if (i != null ) Formatter formatter = (Formatter) i.next();
BasicScopeFactory.java,ScopeEvaluator ev = (ScopeEvaluator) i.next();,if (i != null ) ScopeEvaluator ev = (ScopeEvaluator) i.next();
CPDDuplicateCodeViewer.java,int start = buffer.getLineStartOffset(duplicate.getBeginLine());,if (buffer != null ) int start = buffer.getLineStartOffset(duplicate.getBeginLine());
RuleSet.java,fileName = fileName.trim();,if (fileName != null ) fileName = fileName.trim();
JobCommand.java,executionStatus = this.execute();,if (this != null ) executionStatus = this.execute();
SourceCode.java,c = (List) code.get();,if (code != null ) c = (List) code.get();
SourceCode.java,this.code = cl.getCode();,if (cl != null ) this.code = cl.getCode();
DiscardableNodeCleaner.java,SimpleNode node = (SimpleNode) i.next();,if (i != null ) SimpleNode node = (SimpleNode) i.next();
DiscardableNodeCleaner.java,SimpleNode parent = (SimpleNode) node.jjtGetParent();,if (node != null ) SimpleNode parent = (SimpleNode) node.jjtGetParent();
DiscardableNodeCleaner.java,SimpleNode parent = (SimpleNode) node.jjtGetParent();,if (node != null ) SimpleNode parent = (SimpleNode) node.jjtGetParent();
QueryProjectPropertiesCmd.java,this.pmdEnabled = queryPmdEnabledCmd.isPmdEnabled();,if (queryPmdEnabledCmd != null ) this.pmdEnabled = queryPmdEnabledCmd.isPmdEnabled();
QueryProjectPropertiesCmd.java,this.projectWorkingSet = queryProjectWorkingSetCmd.getProjectWorkingSet();,if (queryProjectWorkingSetCmd != null ) this.projectWorkingSet = queryProjectWorkingSetCmd.getProjectWorkingSet();
QueryProjectPropertiesCmd.java,this.projectRuleSet = queryProjectRuleSetCmd.getProjectRuleSet();,if (queryProjectRuleSetCmd != null ) this.projectRuleSet = queryProjectRuleSetCmd.getProjectRuleSet();
QueryProjectPropertiesCmd.java,this.projectRuleSet = PMDPlugin.getDefault().getRuleSet();,if (PMDPlugin != null ) this.projectRuleSet = PMDPlugin.getDefault().getRuleSet();
QueryProjectPropertiesCmd.java,this.ruleSetStoredInProject = queryRuleSetStoredInProjectCmd.isRuleSetStoredInProject();,if (queryRuleSetStoredInProjectCmd != null ) this.ruleSetStoredInProject = queryRuleSetStoredInProjectCmd.isRuleSetStoredInProject();
UpdateProjectPropertiesCmd.java,this.ruleSetFileNotFound = ruleSetStoredInProjectCmd.isRuleSetFileNotFound();,if (ruleSetStoredInProjectCmd != null ) this.ruleSetFileNotFound = ruleSetStoredInProjectCmd.isRuleSetFileNotFound();
UpdateProjectPropertiesCmd.java,this.needRebuild = ruleSetStoredInProjectCmd.isNeedRebuild();,if (ruleSetStoredInProjectCmd != null ) this.needRebuild = ruleSetStoredInProjectCmd.isNeedRebuild();
UpdateRuleSetStoredInProjectPropertyCmd.java,this.ruleSetFileNotFound = !ruleSetFile.exists();,if (!ruleSetFile != null ) this.ruleSetFileNotFound = !ruleSetFile.exists();
PMDPropertyPage.java,this.model = controller.getPropertyPageModel();,if (controller != null ) this.model = controller.getPropertyPageModel();
PMDPropertyPageController.java,RuleSet ruleSet = this.propertyPageModel.getProjectRuleSet();,if (this != null ) RuleSet ruleSet = this.propertyPageModel.getProjectRuleSet();
PMDPropertyPage.java,this.selectedWorkingSet = controller.getProjectWorkingSet();,if (controller != null ) this.selectedWorkingSet = controller.getProjectWorkingSet();
PMDPropertyPage.java,RuleSet activeRuleSet = controller.getProjectRules();,if (controller != null ) RuleSet activeRuleSet = controller.getProjectRules();
PMDPropertyPage.java,IWorkbench workbench = PlatformUI.getWorkbench();,if (PlatformUI != null ) IWorkbench workbench = PlatformUI.getWorkbench();
PMDPropertyPage.java,IWorkingSetManager workingSetManager = workbench.getWorkingSetManager();,if (workbench != null ) IWorkingSetManager workingSetManager = workbench.getWorkingSetManager();
PMDPropertyPageController.java,boolean fEnabled = propertyPage.isPMDEnabled();,if (propertyPage != null ) boolean fEnabled = propertyPage.isPMDEnabled();
PMDPropertyPageController.java,IProject project = resource.getProject();,if (resource != null ) IProject project = resource.getProject();
PMDPropertyPageController.java,IProject project = resource.getProject();,if (resource != null ) IProject project = resource.getProject();
PMDPropertyPageController.java,activeRules = activeRuleSet.getRules();,if (activeRuleSet != null ) activeRules = activeRuleSet.getRules();
PMDPropertyPageController.java,TableItem[] rulesList = this.propertyPage.getRulesList();,if (this != null ) TableItem[] rulesList = this.propertyPage.getRulesList();
PMDPropertyPageController.java,Iterator i = activeRules.iterator();,if (activeRules != null ) Iterator i = activeRules.iterator();
PMDPropertyPageController.java,Set selectedRules = selectedRuleSet.getRules();,if (selectedRuleSet != null ) Set selectedRules = selectedRuleSet.getRules();
PMDPropertyPageController.java,Rule rule = (Rule) i.next();,if (i != null ) Rule rule = (Rule) i.next();
PMDPropertyPageController.java,IProject project = resource.getProject();,if (resource != null ) IProject project = resource.getProject();
PMDPropertyPageController.java,IWorkingSet selectedWorkingSet = this.propertyPage.getSelectedWorkingSet();,if (this != null ) IWorkingSet selectedWorkingSet = this.propertyPage.getSelectedWorkingSet();
PMDPropertyPageController.java,IProject project = resource.getProject();,if (resource != null ) IProject project = resource.getProject();
PMDPropertyPageController.java,ProgressMonitorDialog progressDialog = new ProgressMonitorDialog(this.propertyPage.getShell());,if (ProgressMonitorDialog(this != null ) ProgressMonitorDialog progressDialog = new ProgressMonitorDialog(this.propertyPage.getShell());
PMDPropertyPageController.java,IProject project = resource.getProject();,if (resource != null ) IProject project = resource.getProject();
PMDPropertyPageController.java,ProgressMonitorDialog progressDialog = new ProgressMonitorDialog(this.propertyPage.getShell());,if (ProgressMonitorDialog(this != null ) ProgressMonitorDialog progressDialog = new ProgressMonitorDialog(this.propertyPage.getShell());
PMDPropertyPageController.java,IProject project = resource.getProject();,if (resource != null ) IProject project = resource.getProject();
PMDPropertyPageController.java,ProgressMonitorDialog progressDialog = new ProgressMonitorDialog(this.propertyPage.getShell());,if (ProgressMonitorDialog(this != null ) ProgressMonitorDialog progressDialog = new ProgressMonitorDialog(this.propertyPage.getShell());
PMDPropertyPageController.java,IProjectDescription description = project.getDescription();,if (project != null ) IProjectDescription description = project.getDescription();
PMDPropertyPageController.java,String[] natureIds = description.getNatureIds();,if (description != null ) String[] natureIds = description.getNatureIds();
PMDPropertyPageController.java,IProjectDescription description = project.getDescription();,if (project != null ) IProjectDescription description = project.getDescription();
PMDPropertyPageController.java,String[] natureIds = description.getNatureIds();,if (description != null ) String[] natureIds = description.getNatureIds();
PMDPropertyPage.java,RuleSet configuredRuleSet = PMDPlugin.getDefault().getRuleSet();,if (PMDPlugin != null ) RuleSet configuredRuleSet = PMDPlugin.getDefault().getRuleSet();
PMDPropertyPage.java,boolean fEnabled = enablePMDButton.getSelection();,if (enablePMDButton != null ) boolean fEnabled = enablePMDButton.getSelection();
PMDPropertyPage.java,activeRules = activeRuleSet.getRules();,if (activeRuleSet != null ) activeRules = activeRuleSet.getRules();
PMDPropertyPage.java,TableItem[] rulesList = availableRulesTableViewer.getTable().getItems();,if (availableRulesTableViewer != null ) TableItem[] rulesList = availableRulesTableViewer.getTable().getItems();
PMDPropertyPage.java,Iterator i = activeRules.iterator();,if (activeRules != null ) Iterator i = activeRules.iterator();
PMDPropertyPage.java,Set selectedRules = selectedRuleSet.getRules();,if (selectedRuleSet != null ) Set selectedRules = selectedRuleSet.getRules();
PMDPropertyPage.java,Rule rule = (Rule) i.next();,if (i != null ) Rule rule = (Rule) i.next();
PMDPropertyPage.java,IProject project = resource.getProject();,if (resource != null ) IProject project = resource.getProject();
PMDPropertyPage.java,IProject project = resource.getProject();,if (resource != null ) IProject project = resource.getProject();
PMDPropertyPage.java,IProject project = resource.getProject();,if (resource != null ) IProject project = resource.getProject();
PMDPropertyPage.java,IProject project = resource.getProject();,if (resource != null ) IProject project = resource.getProject();
PMDPropertyPage.java,IProject project = resource.getProject();,if (resource != null ) IProject project = resource.getProject();
PMDPropertyPage.java,IProject project = resource.getProject();,if (resource != null ) IProject project = resource.getProject();
PMDPropertyPage.java,RuleSetWriter writer = WriterAbstractFactory.getFactory().getRuleSetWriter();,if (WriterAbstractFactory != null ) RuleSetWriter writer = WriterAbstractFactory.getFactory().getRuleSetWriter();
PMDPropertyPage.java,IProjectDescription description = project.getDescription();,if (project != null ) IProjectDescription description = project.getDescription();
PMDPropertyPage.java,String[] natureIds = description.getNatureIds();,if (description != null ) String[] natureIds = description.getNatureIds();
PMDPropertyPage.java,IProjectDescription description = project.getDescription();,if (project != null ) IProjectDescription description = project.getDescription();
PMDPropertyPage.java,String[] natureIds = description.getNatureIds();,if (description != null ) String[] natureIds = description.getNatureIds();
RuleSetFactory.java,NodeList nodeList = descriptionNode.getChildNodes();,if (descriptionNode != null ) NodeList nodeList = descriptionNode.getChildNodes();
RuleSetFactory.java,NodeList nodeList = ruleElement.getChildNodes();,if (ruleElement != null ) NodeList nodeList = ruleElement.getChildNodes();
RuleSetFactory.java,NodeList nodeList = exampleNode.getChildNodes();,if (exampleNode != null ) NodeList nodeList = exampleNode.getChildNodes();
RuleSetFactory.java,NodeList nodeList = valueNode.getChildNodes();,if (valueNode != null ) NodeList nodeList = valueNode.getChildNodes();
RuleSetFactory.java,NodeList nodeList = priorityNode.getChildNodes();,if (priorityNode != null ) NodeList nodeList = priorityNode.getChildNodes();
RuleSetFactory.java,NodeList nodeList = propertiesNode.getChildNodes();,if (propertiesNode != null ) NodeList nodeList = propertiesNode.getChildNodes();
RuleSetFactory.java,NodeList nodeList = propertyNode.getChildNodes();,if (propertyNode != null ) NodeList nodeList = propertyNode.getChildNodes();
RuleSetFactory.java,String ruleSetName = st.nextToken().trim();,if (st != null ) String ruleSetName = st.nextToken().trim();
RuleSetFactory.java,NodeList nodeList = descriptionNode.getChildNodes();,if (descriptionNode != null ) NodeList nodeList = descriptionNode.getChildNodes();
RuleSetFactory.java,NodeList nodeList = exampleNode.getChildNodes();,if (exampleNode != null ) NodeList nodeList = exampleNode.getChildNodes();
RuleSetFactory.java,NodeList nodeList = valueNode.getChildNodes();,if (valueNode != null ) NodeList nodeList = valueNode.getChildNodes();
EncodingTest.java,ASTCompilationUnit acu = parser.CompilationUnit();,if (parser != null ) ASTCompilationUnit acu = parser.CompilationUnit();
CouplingBetweenObjectsRule.java,this.className = firstStmt.getImage();,if (firstStmt != null ) this.className = firstStmt.getImage();
SourceCodeTest.java,String code = MatchAlgorithmTest.getSampleCode();,if (MatchAlgorithmTest != null ) String code = MatchAlgorithmTest.getSampleCode();
CPD.java,SourceCode sourceCode = new SourceCode(file.getAbsolutePath());,if (SourceCode(file != null ) SourceCode sourceCode = new SourceCode(file.getAbsolutePath());
UnusedLocalVariableRule.java,used = !occ.isOnLeftHandSide();,if (!occ != null ) used = !occ.isOnLeftHandSide();
ImmutableFieldRule.java,NameOccurrence occ = (NameOccurrence)j.next();,if ((NameOccurrence)j != null ) NameOccurrence occ = (NameOccurrence)j.next();
ImmutableFieldRule.java,SimpleNode node = occ.getLocation();,if (occ != null ) SimpleNode node = occ.getLocation();
JavaParser.java,int[] oldentry = (int[]) (e.nextElement());,if ((e != null ) int[] oldentry = (int[]) (e.nextElement());
CPPParser.java,int[] oldentry = (int[]) (enum.nextElement());,if ((enum != null ) int[] oldentry = (int[]) (enum.nextElement());
ImmutableFieldRule.java,NameOccurrence occurance = (NameOccurrence)j.next();,if ((NameOccurrence)j != null ) NameOccurrence occurance = (NameOccurrence)j.next();
ImmutableFieldRule.java,SimpleNode node = occurance.getLocation();,if (occurance != null ) SimpleNode node = occurance.getLocation();
NameOccurrence.java,SimpleNode parent = (SimpleNode) node.jjtGetParent();,if (node != null ) SimpleNode parent = (SimpleNode) node.jjtGetParent();
ImmutableFieldRule.java,SimpleNode node = occurance.getLocation();,if (occurance != null ) SimpleNode node = occurance.getLocation();
Linker.java,this.cbrStack = dataFlow.getContinueBreakReturnStack();,if (dataFlow != null ) this.cbrStack = dataFlow.getContinueBreakReturnStack();
GeneralFiddlingTest.java,ASTMethodDeclaration p = (ASTMethodDeclaration)d.jjtGetParent();,if ((ASTMethodDeclaration)d != null ) ASTMethodDeclaration p = (ASTMethodDeclaration)d.jjtGetParent();
DataFlowNode.java,res += this.node.getClass().toString();,if (this != null ) res += this.node.getClass().toString();
Linker.java,this.cbrStack = dataFlow.getCBRStack();,if (dataFlow != null ) this.cbrStack = dataFlow.getCBRStack();
Linker.java,IDataFlowNode node = (IDataFlowNode) so.getDataFlowNode();,if (so != null ) IDataFlowNode node = (IDataFlowNode) so.getDataFlowNode();
Linker.java,IDataFlowNode node = (IDataFlowNode) so.getDataFlowNode();,if (so != null ) IDataFlowNode node = (IDataFlowNode) so.getDataFlowNode();
Linker.java,IDataFlowNode node = (IDataFlowNode) so.getDataFlowNode();,if (so != null ) IDataFlowNode node = (IDataFlowNode) so.getDataFlowNode();
ReportHTMLPrintVisitor.java,String str = (String) cnode.getClassName();,if (cnode != null ) String str = (String) cnode.getClassName();
ReportHTMLPrintVisitor.java,str = (String) pnode.getPackageName();,if (pnode != null ) str = (String) pnode.getPackageName();
PMDTask.java,Rule rule = (Rule)i.next();,if ((Rule)i != null ) Rule rule = (Rule)i.next();
DiscardableNodeCleaner.java,SimpleNode node = (SimpleNode)i.next();,if ((SimpleNode)i != null ) SimpleNode node = (SimpleNode)i.next();
DiscardableNodeCleaner.java,SimpleNode parent = (SimpleNode)node.jjtGetParent();,if ((SimpleNode)node != null ) SimpleNode parent = (SimpleNode)node.jjtGetParent();
JavaParser.java,int[] oldentry = (int[])(e.nextElement());,if ((int[])(e != null ) int[] oldentry = (int[])(e.nextElement());
SimpleNode.java,parentNode = parentNode.jjtGetParent();,if (parentNode != null ) parentNode = parentNode.jjtGetParent();
SimpleNode.java,parentNode = parentNode.jjtGetParent();,if (parentNode != null ) parentNode = parentNode.jjtGetParent();
CPDTask.java,FileSet fileSet = (FileSet) iterator.next();,if (iterator != null ) FileSet fileSet = (FileSet) iterator.next();
CPDTask.java,String[] includedFiles = directoryScanner.getIncludedFiles();,if (directoryScanner != null ) String[] includedFiles = directoryScanner.getIncludedFiles();
CPDTask.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
CPDTask.java,long stop = System.currentTimeMillis();,if (System != null ) long stop = System.currentTimeMillis();
CPDTask.java,format = formatAttribute.getValue();,if (formatAttribute != null ) format = formatAttribute.getValue();
MatchCollector.java,ArrayList matchList = new ArrayList(startMap.values());,if (ArrayList(startMap != null ) ArrayList matchList = new ArrayList(startMap.values());
SimpleRenderer.java,Match match = (Match)matches.next();,if ((Match)matches != null ) Match match = (Match)matches.next();
SimpleRenderer.java,TokenEntry mark = (TokenEntry)occurrences.next();,if ((TokenEntry)occurrences != null ) TokenEntry mark = (TokenEntry)occurrences.next();
XMLRenderer.java,Match match = (Match) matches.next();,if (matches != null ) Match match = (Match) matches.next();
XMLRenderer.java,TokenEntry mark = (TokenEntry) iterator.next();,if (iterator != null ) TokenEntry mark = (TokenEntry) iterator.next();
XMLRenderer.java,String codeFragment = match.getSourceCodeSlice();,if (match != null ) String codeFragment = match.getSourceCodeSlice();
CPPParser.java,int[] oldentry = (int[])(enum.nextElement());,if ((int[])(enum != null ) int[] oldentry = (int[])(enum.nextElement());
VariableAccessVisitor.java,IDataFlowNode inode = node.getDataFlowNode();,if (node != null ) IDataFlowNode inode = node.getDataFlowNode();
VariableAccessVisitor.java,Iterator scopeIter = scopeSet.iterator();,if (scopeSet != null ) Iterator scopeIter = scopeSet.iterator();
VariableAccessVisitor.java,Map map = (Map)scopeIter.next();,if ((Map)scopeIter != null ) Map map = (Map)scopeIter.next();
VariableAccessVisitor.java,Iterator iter = map.keySet().iterator();,if (map != null ) Iterator iter = map.keySet().iterator();
VariableAccessVisitor.java,VariableNameDeclaration vnd = (VariableNameDeclaration)iter.next();,if ((VariableNameDeclaration)iter != null ) VariableNameDeclaration vnd = (VariableNameDeclaration)iter.next();
PapariTextRenderer.java,Map summary = report.getCountSummary();,if (report != null ) Map summary = report.getCountSummary();
PapariTextRenderer.java,String key = (String)i.next();,if ((String)i != null ) String key = (String)i.next();
PapariTextRenderer.java,Report.ProcessingError error = (Report.ProcessingError)i.next();,if ((Report != null ) Report.ProcessingError error = (Report.ProcessingError)i.next();
SummaryHTMLRenderer.java,String ruleName = (String)i.next();,if ((String)i != null ) String ruleName = (String)i.next();
TextPadRenderer.java,i = report.iterator();,if (report != null ) i = report.iterator();
TextPadRenderer.java,RuleViolation rv = (RuleViolation) i.next();,if (i != null ) RuleViolation rv = (RuleViolation) i.next();
BeanMembersShouldSerializeRule.java,ASTMethodDeclarator meth = (ASTMethodDeclarator)i.next();,if ((ASTMethodDeclarator)i != null ) ASTMethodDeclarator meth = (ASTMethodDeclarator)i.next();
BeanMembersShouldSerializeRule.java,VariableNameDeclaration decl = (VariableNameDeclaration)i.next();,if ((VariableNameDeclaration)i != null ) VariableNameDeclaration decl = (VariableNameDeclaration)i.next();
SuspiciousOctalEscapeRule.java,String image = node.getImage();,if (node != null ) String image = node.getImage();
UnusedLocalVariableRule.java,NameOccurrence occ = (NameOccurrence)j.next();,if ((NameOccurrence)j != null ) NameOccurrence occ = (NameOccurrence)j.next();
UnusedPrivateFieldRule.java,NameOccurrence nameOccurrence = (NameOccurrence)j.next();,if ((NameOccurrence)j != null ) NameOccurrence nameOccurrence = (NameOccurrence)j.next();
ExceptionSignatureDeclaration.java,exception = (ASTName)iter.next();,if ((ASTName)iter != null ) exception = (ASTName)iter.next();
StatisticalRule.java,Iterator points = dataPoints.iterator();,if (dataPoints != null ) Iterator points = dataPoints.iterator();
StatisticalRule.java,DataPoint point = (DataPoint) points.next();,if (points != null ) DataPoint point = (DataPoint) points.next();
BasicScopeFactory.java,ScopeEvaluator ev = (ScopeEvaluator)i.next();,if ((ScopeEvaluator)i != null ) ScopeEvaluator ev = (ScopeEvaluator)i.next();
NameOccurrence.java,SimpleNode parent = (SimpleNode)node.jjtGetParent();,if ((SimpleNode)node != null ) SimpleNode parent = (SimpleNode)node.jjtGetParent();
DFAPanel.java,wrapper = (ElementWrapper)nodeList.getSelectedValue();,if ((ElementWrapper)nodeList != null ) wrapper = (ElementWrapper)nodeList.getSelectedValue();
ReportHTMLPrintVisitor.java,this.lenght = this.packageBuf.length();,if (this != null ) this.lenght = this.packageBuf.length();
YAHTMLRenderer.java,ReportTree tree = report.getViolationTree();,if (report != null ) ReportTree tree = report.getViolationTree();
CyclomaticComplexityRule.java,Entry entry = (Entry) entryStack.peek();,if (entryStack != null ) Entry entry = (Entry) entryStack.peek();
CyclomaticComplexityRule.java,Entry entry = (Entry) entryStack.peek();,if (entryStack != null ) Entry entry = (Entry) entryStack.peek();
CyclomaticComplexityRule.java,Entry entry = (Entry) entryStack.peek();,if (entryStack != null ) Entry entry = (Entry) entryStack.peek();
XMLRendererTest.java,Iterator i = strings.iterator();,if (strings != null ) Iterator i = strings.iterator();
XMLRendererTest.java,String str = (String) i.next();,if (i != null ) String str = (String) i.next();
Linker.java,int x = sc.getLastIndex() - sc.getFirstIndex();,if (sc != null ) int x = sc.getLastIndex() - sc.getFirstIndex();
Linker.java,for(int y=sc.getLastIndex();y>=sc.getFirstIndex();y--) {,if ({ != null ) for(int y=sc.getLastIndex();y>=sc.getFirstIndex();y--) {
Linker.java,IDataFlowNode node = (IDataFlowNode)so.getDataFlowNode();,if ((IDataFlowNode)so != null ) IDataFlowNode node = (IDataFlowNode)so.getDataFlowNode();
Linker.java,List bList = node.getFlow();,if (node != null ) List bList = node.getFlow();
Linker.java,IDataFlowNode node = (IDataFlowNode)so.getDataFlowNode();,if ((IDataFlowNode)so != null ) IDataFlowNode node = (IDataFlowNode)so.getDataFlowNode();
Linker.java,IDataFlowNode node = (IDataFlowNode)so.getDataFlowNode();,if ((IDataFlowNode)so != null ) IDataFlowNode node = (IDataFlowNode)so.getDataFlowNode();
SequenceChecker.java,aktStatus = this.aktStatus.step(so.getType());,if (this != null ) aktStatus = this.aktStatus.step(so.getType());
CyclomaticComplexityRule.java,String className = node.getImage();,if (node != null ) String className = node.getImage();
CyclomaticComplexityRule.java,int lineNumber = node.getBeginLine();,if (node != null ) int lineNumber = node.getBeginLine();
CyclomaticComplexityRule.java,int lineNumber = node.getBeginLine();,if (node != null ) int lineNumber = node.getBeginLine();
Linker.java,int x = sc.getLastIndex() - sc.getFirstIndex();,if (sc != null ) int x = sc.getLastIndex() - sc.getFirstIndex();
Linker.java,IDataFlowNode node = so.getDataFlowNode();,if (so != null ) IDataFlowNode node = so.getDataFlowNode();
Linker.java,List bList = node.getFlow();,if (node != null ) List bList = node.getFlow();
Linker.java,List cList = node.getFlow();,if (node != null ) List cList = node.getFlow();
Linker.java,IDataFlowNode node = so.getDataFlowNode();,if (so != null ) IDataFlowNode node = so.getDataFlowNode();
Linker.java,IDataFlowNode node = so.getDataFlowNode();,if (so != null ) IDataFlowNode node = so.getDataFlowNode();
VariableAccessVisitor.java,IDataFlowNode inode = node.getDataFlowNode();,if (node != null ) IDataFlowNode inode = node.getDataFlowNode();
VariableAccessVisitor.java,IDataFlowNode dfn = node.getDataFlowNode();,if (node != null ) IDataFlowNode dfn = node.getDataFlowNode();
VariableAccessVisitor.java,Node n = node.jjtGetParent();,if (node != null ) Node n = node.jjtGetParent();
DFAPanel.java,ElementWrapper wrapper = (ElementWrapper)nodeList.getSelectedValue();,if ((ElementWrapper)nodeList != null ) ElementWrapper wrapper = (ElementWrapper)nodeList.getSelectedValue();
DFAPanel.java,SimpleNode n = (SimpleNode)i.next();,if ((SimpleNode)i != null ) SimpleNode n = (SimpleNode)i.next();
DFAPanel.java,y = this.computeDrawPos(inode.getIndex());,if (this != null ) y = this.computeDrawPos(inode.getIndex());
ASTViewer.java,y = this.computeDrawPos(inode.getIndex());,if (this != null ) y = this.computeDrawPos(inode.getIndex());
ASTViewer.java,StringReader sr = new StringReader(codeEditorPane.getText());,if (StringReader(codeEditorPane != null ) StringReader sr = new StringReader(codeEditorPane.getText());
ASTViewer.java,ASTCompilationUnit c = parser.CompilationUnit();,if (parser != null ) ASTCompilationUnit c = parser.CompilationUnit();
ASTViewer.java,StringReader sr = new StringReader(codeEditorPane.getText());,if (StringReader(codeEditorPane != null ) StringReader sr = new StringReader(codeEditorPane.getText());
ASTViewer.java,ASTCompilationUnit c = parser.CompilationUnit();,if (parser != null ) ASTCompilationUnit c = parser.CompilationUnit();
ASTViewer.java,SimpleNode node = (SimpleNode) iter.next();,if (iter != null ) SimpleNode node = (SimpleNode) iter.next();
ASTViewer.java,String tok = st.nextToken();,if (st != null ) String tok = st.nextToken();
ASTViewer.java,String tok = st.nextToken();,if (st != null ) String tok = st.nextToken();
DFAGrapher.java,String tok = st.nextToken();,if (st != null ) String tok = st.nextToken();
DFAPanel.java,List flow = node.getDataFlowNode().getFlow();,if (node != null ) List flow = node.getDataFlowNode().getFlow();
DFAPanel.java,y = this.computeDrawPos(inode.getIndex());,if (this != null ) y = this.computeDrawPos(inode.getIndex());
DFAGrapher.java,List flow = node.getDataFlowNode().getFlow();,if (node != null ) List flow = node.getDataFlowNode().getFlow();
DFAGrapher.java,y = this.computeDrawPos(inode.getIndex());,if (this != null ) y = this.computeDrawPos(inode.getIndex());
DFAGrapher.java,List access = inode.getVariableAccess();,if (inode != null ) List access = inode.getVariableAccess();
DFAGrapher.java,code = br.readLine().trim();,if (br != null ) code = br.readLine().trim();
DFAGrapher.java,ASTCompilationUnit c = parser.CompilationUnit();,if (parser != null ) ASTCompilationUnit c = parser.CompilationUnit();
VariableAccessVisitor.java,List l = dfn.getVariableAccess();,if (dfn != null ) List l = dfn.getVariableAccess();
SequenceChecker.java,node = so.getDataFlowNode();,if (so != null ) node = so.getDataFlowNode();
AcceptanceTest.java,IDataFlowNode inode = decl.getDataFlowNode();,if (decl != null ) IDataFlowNode inode = decl.getDataFlowNode();
AcceptanceTestRule.java,String methodName = node.getImage();,if (node != null ) String methodName = node.getImage();
AcceptanceTestRule.java,IDataFlowNode inode = node.getDataFlowNode();,if (node != null ) IDataFlowNode inode = node.getDataFlowNode();
AcceptanceTestRule.java,"boolean result = check(methodName, inode.getFlow());","if (inode != null ) boolean result = check(methodName, inode.getFlow());"
AcceptanceTestRule.java,List flow = inode.getFlow();,if (inode != null ) List flow = inode.getFlow();
TestRule.java,String methodName = node.getImage();,if (node != null ) String methodName = node.getImage();
TestRule.java,IDataFlowNode inode = node.getDataFlowNode();,if (node != null ) IDataFlowNode inode = node.getDataFlowNode();
TestRule.java,List flow = inode.getFlow();,if (inode != null ) List flow = inode.getFlow();
DaaRule.java,List gesamtListe = node.getDataFlowNode().getFlow();,if (node != null ) List gesamtListe = node.getDataFlowNode().getFlow();
UnusedLocalVariableRule.java,NameOccurrence nameOccurrence = (NameOccurrence)j.next();,if ((NameOccurrence)j != null ) NameOccurrence nameOccurrence = (NameOccurrence)j.next();
ASTTypeTest.java,ASTCompilationUnit cu = parser.CompilationUnit();,if (parser != null ) ASTCompilationUnit cu = parser.CompilationUnit();
ASTTypeTest.java,ASTCompilationUnit cu = parser.CompilationUnit();,if (parser != null ) ASTCompilationUnit cu = parser.CompilationUnit();
ASTTypeTest.java,ASTCompilationUnit cu = parser.CompilationUnit();,if (parser != null ) ASTCompilationUnit cu = parser.CompilationUnit();
Report.java,RuleViolation rv = (RuleViolation)i.next();,if ((RuleViolation)i != null ) RuleViolation rv = (RuleViolation)i.next();
AnalysisViewer.java,int result = fileChooser.showSaveDialog(PMDViewer.getViewer());,if (fileChooser != null ) int result = fileChooser.showSaveDialog(PMDViewer.getViewer());
RulesTree.java,RulesClassSelectDialog dialog = new RulesClassSelectDialog(PMDViewer.getViewer());,if (RulesClassSelectDialog(PMDViewer != null ) RulesClassSelectDialog dialog = new RulesClassSelectDialog(PMDViewer.getViewer());
SearchViewer.java,int result = fileChooser.showSaveDialog(PMDViewer.getViewer());,if (fileChooser != null ) int result = fileChooser.showSaveDialog(PMDViewer.getViewer());
PMD.java,File file = (File) i.next();,if (i != null ) File file = (File) i.next();
SymbolTableTestRule.java,SimpleNode n = node.getTypeNameNode();,if (node != null ) SimpleNode n = node.getTypeNameNode();
CloseConnectionRule.java,ASTLocalVariableDeclaration var = (ASTLocalVariableDeclaration) it.next();,if (it != null ) ASTLocalVariableDeclaration var = (ASTLocalVariableDeclaration) it.next();
CloseConnectionRule.java,ASTTryStatement t = (ASTTryStatement) it.next();,if (it != null ) ASTTryStatement t = (ASTTryStatement) it.next();
UnusedImportsRule.java,"ImportWrapper wrapper = new ImportWrapper(className, node.getBeginLine());","if (node != null ) ImportWrapper wrapper = new ImportWrapper(className, node.getBeginLine());"
PMD.java,files = collectFromCommaDelimitedString(opts.getInputFileName());,if (collectFromCommaDelimitedString(opts != null ) files = collectFromCommaDelimitedString(opts.getInputFileName());
PMD.java,files = collectFilesFromOneName(opts.getInputFileName());,if (collectFilesFromOneName(opts != null ) files = collectFilesFromOneName(opts.getInputFileName());
UnusedLocalVariableRule.java,Map locals = node.getScope().getVariableDeclarations();,if (node != null ) Map locals = node.getScope().getVariableDeclarations();
AvoidDuplicateLiteralsRule.java,currentNode = currentNode.jjtGetParent();,if (currentNode != null ) currentNode = currentNode.jjtGetParent();
NameOccurrences.java,result += occ.getImage();,if (occ != null ) result += occ.getImage();
PMDJEditPlugin.java,RuleViolation rv = (RuleViolation)j.next();,if ((RuleViolation)j != null ) RuleViolation rv = (RuleViolation)j.next();
PMDJEditPlugin.java,File file = (File)i.next();,if ((File)i != null ) File file = (File)i.next();
PMDJEditPlugin.java,final String output = renderer.render(ctx.getReport());,if (renderer != null ) final String output = renderer.render(ctx.getReport());
CyclomaticComplexityRule.java,int lineNumber = node.getBeginLine();,if (node != null ) int lineNumber = node.getBeginLine();
PMDPlugin.java,Iterator it = rsf.getRegisteredRuleSets();,if (rsf != null ) Iterator it = rsf.getRegisteredRuleSets();
PMDPlugin.java,URL urlBasic = getDescriptor().getInstallURL();,if (getDescriptor() != null ) URL urlBasic = getDescriptor().getInstallURL();
UnusedLocalVariableRule.java,Map unused = node.getScope().getVariableDeclarations();,if (node != null ) Map unused = node.getScope().getVariableDeclarations();
AbstractScopeTest.java,NameDeclaration decl = (NameDeclaration) i.next();,if (i != null ) NameDeclaration decl = (NameDeclaration) i.next();
UnusedLocalVariableRule.java,VariableNameDeclaration decl = (VariableNameDeclaration) i.next();,if (i != null ) VariableNameDeclaration decl = (VariableNameDeclaration) i.next();
StatisticalRule.java,totalSquared += point.getScore() * point.getScore();,if (point != null ) totalSquared += point.getScore() * point.getScore();
PMDJEditPlugin.java,dir = browser.getDirectory();,if (browser != null ) dir = browser.getDirectory();
PMDJEditPlugin.java,tilesize = Integer.parseInt(txttilesize.getText());,if (Integer != null ) tilesize = Integer.parseInt(txttilesize.getText());
UnusedLocalVariableRule.java,VariableNameDeclaration decl = (VariableNameDeclaration) i.next();,if (i != null ) VariableNameDeclaration decl = (VariableNameDeclaration) i.next();
BeanMembersShouldSerializeRule.java,String methName = meth.getImage();,if (meth != null ) String methName = meth.getImage();
BeanMembersShouldSerializeRule.java,String methName = meth.getImage();,if (meth != null ) String methName = meth.getImage();
BeanMembersShouldSerializeRule.java,String methName = meth.getImage();,if (meth != null ) String methName = meth.getImage();
ConfigUtils.java,Iterator it = ruleSetFactory.getRegisteredRuleSets();,if (ruleSetFactory != null ) Iterator it = ruleSetFactory.getRegisteredRuleSets();
ConfigUtils.java,RuleSet ruleset = ( RuleSet )it.next();,if ()it != null ) RuleSet ruleset = ( RuleSet )it.next();
RuleListModel.java,int i = list.size();,if (list != null ) int i = list.size();
RuleClassLoader.java,Object o = clazz.newInstance();,if (clazz != null ) Object o = clazz.newInstance();
Scanner.java,EditorCookie cookie = (EditorCookie)ev.getSource();,if ((EditorCookie)ev != null ) EditorCookie cookie = (EditorCookie)ev.getSource();
ConfigUtils.java,Iterator iterator = value.iterator();,if (value != null ) Iterator iterator = value.iterator();
ConfigUtils.java,Iterator it = ruleSetFactory.getRegisteredRuleSets();,if (ruleSetFactory != null ) Iterator it = ruleSetFactory.getRegisteredRuleSets();
ConfigUtils.java,RuleSet ruleset = ( RuleSet )it.next();,if ()it != null ) RuleSet ruleset = ( RuleSet )it.next();
AvailableListModel.java,int i = list.size();,if (list != null ) int i = list.size();
AvailableListModel.java,int i = list.size();,if (list != null ) int i = list.size();
Scanner.java,Set lineset = cookie.getLineSet();,if (cookie != null ) Set lineset = cookie.getLineSet();
MockRule.java,Report report = ctx.getReport();,if (ctx != null ) Report report = ctx.getReport();
MockRule.java,Iterator vs = violations.iterator();,if (violations != null ) Iterator vs = violations.iterator();
AbstractRule.java,private String name = getClass().getName();,if (getClass() != null ) private String name = getClass().getName();
PMDPlugin.java,String srcDir = (String)iter.next();,if ((String)iter != null ) String srcDir = (String)iter.next();
PMDPlugin.java,File fileName = (File)fileIter.next();,if ((File)fileIter != null ) File fileName = (File)fileIter.next();
PMDPlugin.java,RuleViolation rv = (RuleViolation)i.next();,if ((RuleViolation)i != null ) RuleViolation rv = (RuleViolation)i.next();
RuleSetFactory.java,String ruleSetName = st.nextToken().trim();,if (st != null ) String ruleSetName = st.nextToken().trim();
AcceptanceTest.java,ASTCompilationUnit c = parser.CompilationUnit();,if (parser != null ) ASTCompilationUnit c = parser.CompilationUnit();
PMDGenerateASTAction.java,JavaParser parser = new JavaParser(file.getContents());,if (JavaParser(file != null ) JavaParser parser = new JavaParser(file.getContents());
PMDScanAnnotation.java,Iterator iterator = annotations.iterator();,if (annotations != null ) Iterator iterator = annotations.iterator();
JDeveloperRuleSetFactory.java,DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();,if (DocumentBuilderFactory != null ) DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();
JDeveloperRuleSetFactory.java,Element root = doc.getDocumentElement();,if (doc != null ) Element root = doc.getDocumentElement();
JDeveloperRuleSetFactory.java,rule = externalRuleSet.getRuleByName(externalRuleID.getRuleName());,if (externalRuleSet != null ) rule = externalRuleSet.getRuleByName(externalRuleID.getRuleName());
JDeveloperRuleSetFactory.java,Node node = ruleNode.getFirstChild();,if (ruleNode != null ) Node node = ruleNode.getFirstChild();
JDeveloperRuleSetFactory.java,Node propNode = node.getFirstChild().getNextSibling();,if (node != null ) Node propNode = node.getFirstChild().getNextSibling();
JDeveloperRuleSetFactory.java,Node xpathExprNode = propNode.getFirstChild().getNextSibling();,if (propNode != null ) Node xpathExprNode = propNode.getFirstChild().getNextSibling();
JDeveloperRuleSetFactory.java,propValue = xpathExprNode.getFirstChild().getNodeValue();,if (xpathExprNode != null ) propValue = xpathExprNode.getFirstChild().getNodeValue();
JDeveloperRuleSetFactory.java,propNode = propNode.getNextSibling().getNextSibling();,if (propNode != null ) propNode = propNode.getNextSibling().getNextSibling();
JDeveloperRuleSetFactory.java,node = node.getNextSibling();,if (node != null ) node = node.getNextSibling();
PMDJEditPlugin.java,Mark mark = (Mark)occurrences.next();,if ((Mark)occurrences != null ) Mark mark = (Mark)occurrences.next();
CSVRenderer.java,Mark mark = (Mark) marks.next();,if (marks != null ) Mark mark = (Mark) marks.next();
MatchAlgorithm.java,code = new ArrayList(tokens.size());,if (ArrayList(tokens != null ) code = new ArrayList(tokens.size());
MatchAlgorithm.java,marks = new ArrayList(tokens.size());,if (ArrayList(tokens != null ) marks = new ArrayList(tokens.size());
MatchAlgorithm.java,TokenEntry token = (TokenEntry) iter.next();,if (iter != null ) TokenEntry token = (TokenEntry) iter.next();
MatchAlgorithm.java,Mark m = (Mark)i.next();,if ((Mark)i != null ) Mark m = (Mark)i.next();
MatchAlgorithm.java,List l = (ArrayList)i.next();,if ((ArrayList)i != null ) List l = (ArrayList)i.next();
MatchAlgorithm.java,matches = coll.getMatches();,if (coll != null ) matches = coll.getMatches();
MatchAlgorithm.java,Mark mark = (Mark) occurrences.next();,if (occurrences != null ) Mark mark = (Mark) occurrences.next();
SimpleRenderer.java,Mark mark = (Mark)occurrences.next();,if ((Mark)occurrences != null ) Mark mark = (Mark)occurrences.next();
TokenEntry.java,h = image.hashCode();,if (image != null ) h = image.hashCode();
XMLRenderer.java,Mark mark = (Mark) iterator.next();,if (iterator != null ) Mark mark = (Mark) iterator.next();
MatchAlgorithm.java,TokenEntry token = (TokenEntry)iter.next();,if ((TokenEntry)iter != null ) TokenEntry token = (TokenEntry)iter.next();
MatchAlgorithm.java,Match match = (Match)i.next();,if ((Match)i != null ) Match match = (Match)i.next();
MatchAlgorithm.java,Mark mark = (Mark)occurrences.next();,if ((Mark)occurrences != null ) Mark mark = (Mark)occurrences.next();
MatchCollector.java,Match.MatchCode matchCode = new Match.MatchCode();,if (Match != null ) Match.MatchCode matchCode = new Match.MatchCode();
MatchCollector.java,ArrayList matchList = new ArrayList(startMap.values());,if (ArrayList(startMap != null ) ArrayList matchList = new ArrayList(startMap.values());
GUI.java,String report = resultsTextArea.getText();,if (resultsTextArea != null ) String report = resultsTextArea.getText();
TokenEntry.java,this.chars = image.toCharArray();,if (image != null ) this.chars = image.toCharArray();
TokenEntry.java,this.chars = image.toCharArray();,if (image != null ) this.chars = image.toCharArray();
Tokens.java,TokenEntry endTok = get(mark.getIndexIntoTokenArray() + match.getTokenCount());,if (match != null ) TokenEntry endTok = get(mark.getIndexIntoTokenArray() + match.getTokenCount());
JavaParser.java,int[] oldentry = (int[])(enum.nextElement());,if ((int[])(enum != null ) int[] oldentry = (int[])(enum.nextElement());
DocumentNavigatorTest.java,attr = (Attribute) iter.next();,if (iter != null ) attr = (Attribute) iter.next();
DocumentNavigatorTest.java,attr = (Attribute) iter.next();,if (iter != null ) attr = (Attribute) iter.next();
DocumentNavigatorTest.java,attr = (Attribute) iter.next();,if (iter != null ) attr = (Attribute) iter.next();
DocumentNavigatorTest.java,attr = (Attribute) iter.next();,if (iter != null ) attr = (Attribute) iter.next();
DocumentNavigatorTest.java,attr = (Attribute) iter.next();,if (iter != null ) attr = (Attribute) iter.next();
DocumentNavigatorTest.java,attr = (Attribute) iter.next();,if (iter != null ) attr = (Attribute) iter.next();
DocumentNavigatorTest.java,attr = (Attribute) iter.next();,if (iter != null ) attr = (Attribute) iter.next();
DocumentNavigatorTest.java,attr = (Attribute) iter.next();,if (iter != null ) attr = (Attribute) iter.next();
DocumentNavigatorTest.java,attr = (Attribute) iter.next();,if (iter != null ) attr = (Attribute) iter.next();
DocumentNavigatorTest.java,attr = (Attribute) iter.next();,if (iter != null ) attr = (Attribute) iter.next();
DocumentNavigatorTest.java,attr = (Attribute) iter.next();,if (iter != null ) attr = (Attribute) iter.next();
DocumentNavigatorTest.java,attr = (Attribute) iter.next();,if (iter != null ) attr = (Attribute) iter.next();
DocumentNavigatorTest.java,attr = (Attribute) iter.next();,if (iter != null ) attr = (Attribute) iter.next();
DocumentNavigatorTest.java,attr = (Attribute) iter.next();,if (iter != null ) attr = (Attribute) iter.next();
DocumentNavigatorTest.java,attr = (Attribute) iter.next();,if (iter != null ) attr = (Attribute) iter.next();
DocumentNavigatorTest.java,attr = (Attribute) iter.next();,if (iter != null ) attr = (Attribute) iter.next();
DocumentNavigatorTest.java,attr = (Attribute) iter.next();,if (iter != null ) attr = (Attribute) iter.next();
DocumentNavigatorTest.java,attr = (Attribute) iter.next();,if (iter != null ) attr = (Attribute) iter.next();
DocumentNavigatorTest.java,attr = (Attribute) iter.next();,if (iter != null ) attr = (Attribute) iter.next();
DocumentNavigatorTest.java,attr = (Attribute) iter.next();,if (iter != null ) attr = (Attribute) iter.next();
DocumentNavigatorTest.java,attr = (Attribute) iter.next();,if (iter != null ) attr = (Attribute) iter.next();
DocumentNavigatorTest.java,attr = (Attribute) iter.next();,if (iter != null ) attr = (Attribute) iter.next();
DocumentNavigatorTest.java,attr = (Attribute) iter.next();,if (iter != null ) attr = (Attribute) iter.next();
PMDPlugin.java,Writer out = new FileWriter(ruleSetLocation.toOSString());,if (FileWriter(ruleSetLocation != null ) Writer out = new FileWriter(ruleSetLocation.toOSString());
RuleProperties.java,int index = property.indexOf(SEPARATOR) + SEPARATOR.length();,if (SEPARATOR != null ) int index = property.indexOf(SEPARATOR) + SEPARATOR.length();
ReviewAction.java,String sourceCode = compilationUnit.getBuffer().getContents();,if (compilationUnit != null ) String sourceCode = compilationUnit.getBuffer().getContents();
VariableNamingConventionsRule.java,String varName = childNodeId.getImage();,if (childNodeId != null ) String varName = childNodeId.getImage();
QuickFixAction.java,IWorkbench workbench = PlatformUI.getWorkbench();,if (PlatformUI != null ) IWorkbench workbench = PlatformUI.getWorkbench();
PropertiesModel.java,RuleProperties properties = rule.getProperties();,if (rule != null ) RuleProperties properties = rule.getProperties();
PMDProcessor.java,String line = reader.readLine().trim();,if (reader != null ) String line = reader.readLine().trim();
PMDProcessor.java,review.ruleName = (String) pendingReviews.pop();,if (pendingReviews != null ) review.ruleName = (String) pendingReviews.pop();
PMDVisitorRunner.java,Workspace workspace = (Workspace) ResourcesPlugin.getWorkspace();,if (ResourcesPlugin != null ) Workspace workspace = (Workspace) ResourcesPlugin.getWorkspace();
PMDVisitorRunner.java,MarkerManager markerManager = workspace.getMarkerManager();,if (workspace != null ) MarkerManager markerManager = workspace.getMarkerManager();
PMDVisitorRunner.java,IFile file = (IFile) i.next();,if (i != null ) IFile file = (IFile) i.next();
PMDPropertyPage.java,Set activeRules = activeRuleSet.getRules();,if (activeRuleSet != null ) Set activeRules = activeRuleSet.getRules();
PMDPropertyPage.java,TableItem[] itemList = availableRulesTableViewer.getTable().getItems();,if (availableRulesTableViewer != null ) TableItem[] itemList = availableRulesTableViewer.getTable().getItems();
PMDPropertyPage.java,Object rule = itemList[i].getData();,if (itemList[i] != null ) Object rule = itemList[i].getData();
PMDPropertyPage.java,activeRules = activeRuleSet.getRules();,if (activeRuleSet != null ) activeRules = activeRuleSet.getRules();
PMDPropertyPage.java,TableItem[] rulesList = availableRulesTableViewer.getTable().getItems();,if (availableRulesTableViewer != null ) TableItem[] rulesList = availableRulesTableViewer.getTable().getItems();
PMDPropertyPage.java,Iterator i = activeRules.iterator();,if (activeRules != null ) Iterator i = activeRules.iterator();
PMDPropertyPage.java,Set selectedRules = selectedRuleSet.getRules();,if (selectedRuleSet != null ) Set selectedRules = selectedRuleSet.getRules();
PMDPropertyPage.java,Rule rule = (Rule) i.next();,if (i != null ) Rule rule = (Rule) i.next();
PMDPropertyPage.java,IProjectDescription description = project.getDescription();,if (project != null ) IProjectDescription description = project.getDescription();
PMDPropertyPage.java,String[] natureIds = description.getNatureIds();,if (description != null ) String[] natureIds = description.getNatureIds();
XMLRenderer.java,String d = rv.getDescription();,if (rv != null ) String d = rv.getDescription();
Plugin.java,Document candidate = (Document)i.next();,if ((Document)i != null ) Document candidate = (Document)i.next();
RuleSetFactory.java,String ruleSetName = st.nextToken().trim();,if (st != null ) String ruleSetName = st.nextToken().trim();
RuleSetFactory.java,Node node = ruleNode.getFirstChild();,if (ruleNode != null ) Node node = ruleNode.getFirstChild();
RuleSetFactory.java,node = node.getNextSibling();,if (node != null ) node = node.getNextSibling();
RuleSetFactory.java,NodeList excludeNodes = ruleNode.getChildNodes();,if (ruleNode != null ) NodeList excludeNodes = ruleNode.getChildNodes();
RuleSetFactory.java,Rule rule = (Rule)i.next();,if ((Rule)i != null ) Rule rule = (Rule)i.next();
RuleSetFactory.java,Node propNode = node.getFirstChild().getNextSibling();,if (node != null ) Node propNode = node.getFirstChild().getNextSibling();
RuleSetFactory.java,Node xpathExprNode = propNode.getFirstChild().getNextSibling();,if (propNode != null ) Node xpathExprNode = propNode.getFirstChild().getNextSibling();
PMDPlugin.java,IProject project = resource.getProject();,if (resource != null ) IProject project = resource.getProject();
PMDVisitorRunner.java,IFile file = (IFile) i.next();,if (i != null ) IFile file = (IFile) i.next();
PMDVisitorRunner.java,Workspace workspace = (Workspace) file.getWorkspace();,if (file != null ) Workspace workspace = (Workspace) file.getWorkspace();
PMDVisitorRunner.java,MarkerManager markerManager = workspace.getMarkerManager();,if (workspace != null ) MarkerManager markerManager = workspace.getMarkerManager();
PMDVisitorRunner.java,file = (IFile) i.next();,if (i != null ) file = (IFile) i.next();
ViolationView.java,Workspace workspace = (Workspace) ResourcesPlugin.getWorkspace();,if (ResourcesPlugin != null ) Workspace workspace = (Workspace) ResourcesPlugin.getWorkspace();
PMDGenerateASTAction.java,SimpleNode root = parser.CompilationUnit();,if (parser != null ) SimpleNode root = parser.CompilationUnit();
PMDPlugin.java,FileOutputStream out = new FileOutputStream(ruleSetLocation.toOSString());,if (FileOutputStream(ruleSetLocation != null ) FileOutputStream out = new FileOutputStream(ruleSetLocation.toOSString());
RuleSetWriter.java,for(Iterator rules = ruleSet.getRules().iterator(); rules.hasNext(); write((Rule)rules.next()));,if (write((Rule)rules != null ) for(Iterator rules = ruleSet.getRules().iterator(); rules.hasNext(); write((Rule)rules.next()));
RuleSetWriter.java,Properties properties = rule.getProperties();,if (rule != null ) Properties properties = rule.getProperties();
RuleSetWriter.java,for(Enumeration keys = properties.keys(); keys.hasMoreElements(); outputLine()),if (outputLine()) != null ) for(Enumeration keys = properties.keys(); keys.hasMoreElements(); outputLine())
RuleSetWriter.java,String name = (String)keys.nextElement();,if ((String)keys != null ) String name = (String)keys.nextElement();
PMDPlugin.java,savedFilename = gel.getEditor().getFileName();,if (gel != null ) savedFilename = gel.getEditor().getFileName();
PMDPlugin.java,String code = savedGel.getEditor().getContents();,if (savedGel != null ) String code = savedGel.getEditor().getContents();
PMDPlugin.java,String srcDir = (String) iter.next();,if (iter != null ) String srcDir = (String) iter.next();
PMDPlugin.java,Iterator fileIter = files.iterator();,if (files != null ) Iterator fileIter = files.iterator();
PMDPlugin.java,File fileName = (File) fileIter.next();,if (fileIter != null ) File fileName = (File) fileIter.next();
PMDPlugin.java,Report r = ctx.getReport();,if (ctx != null ) Report r = ctx.getReport();
PMDPlugin.java,RuleViolation rv = (RuleViolation) i.next();,if (i != null ) RuleViolation rv = (RuleViolation) i.next();
PMDPlugin.java,Properties props = new Properties(System.getProperties());,if (Properties(System != null ) Properties props = new Properties(System.getProperties());
PMDPlugin.java,int size = st.countTokens();,if (st != null ) int size = st.countTokens();
PMDPlugin.java,String label = st.nextToken();,if (st != null ) String label = st.nextToken();
PMDPlugin.java,line = br.readLine();,if (br != null ) line = br.readLine();
PMDPlugin.java,String lines = sb.toString();,if (sb != null ) String lines = sb.toString();
RuleSetWriter.java,RuleProperties properties = rule.getProperties();,if (rule != null ) RuleProperties properties = rule.getProperties();
CloseConnectionRule.java,var = (ASTLocalVariableDeclaration) it.next();,if (it != null ) var = (ASTLocalVariableDeclaration) it.next();
CloseConnectionRule.java,t = (ASTTryStatement) it.next();,if (it != null ) t = (ASTTryStatement) it.next();
RuleSetWriter.java,RuleProperties properties = rule.getProperties();,if (rule != null ) RuleProperties properties = rule.getProperties();
RulesTreeModel.java,rule = ruleNode.getRule();,if (ruleNode != null ) rule = ruleNode.getRule();
RulesTreeModel.java,properties = rule.getProperties();,if (rule != null ) properties = rule.getProperties();
RulesTreeModel.java,keys = properties.keys();,if (properties != null ) keys = properties.keys();
CPDDuplicateCodeViewer.java,DefaultMutableTreeNode node = (DefaultMutableTreeNode)tree.getLastSelectedPathComponent();,if ((DefaultMutableTreeNode)tree != null ) DefaultMutableTreeNode node = (DefaultMutableTreeNode)tree.getLastSelectedPathComponent();
CPDDuplicateCodeViewer.java,"final Buffer buffer = jEdit.openFile(view,duplicate.getFilename());","if (jEdit != null ) final Buffer buffer = jEdit.openFile(view,duplicate.getFilename());"
CPDDuplicateCodeViewer.java,int start = buffer.getLineStartOffset(duplicate.getBeginLine());,if (buffer != null ) int start = buffer.getLineStartOffset(duplicate.getBeginLine());
PMDJEditPlugin.java,VFS vfs = buffer.getVFS();,if (buffer != null ) VFS vfs = buffer.getVFS();
PMDJEditPlugin.java,String path = buffer.getPath();,if (buffer != null ) String path = buffer.getPath();
PMDJEditPlugin.java,RuleViolation rv = (RuleViolation)i.next();,if ((RuleViolation)i != null ) RuleViolation rv = (RuleViolation)i.next();
PMDJEditPlugin.java,File file = (File)i.next();,if ((File)i != null ) File file = (File)i.next();
PMDJEditPlugin.java,RuleViolation rv = (RuleViolation)j.next();,if ((RuleViolation)j != null ) RuleViolation rv = (RuleViolation)j.next();
PMDJEditPlugin.java,selectedFile = chooser.getSelectedFile();,if (chooser != null ) selectedFile = chooser.getSelectedFile();
PMDJEditPlugin.java,tilesize = Integer.parseInt(txttilesize.getText());,if (Integer != null ) tilesize = Integer.parseInt(txttilesize.getText());
PMDJEditPlugin.java,Match match = (Match)i.next();,if ((Match)i != null ) Match match = (Match)i.next();
PMDJEditPlugin.java,Mark mark = (Mark)occurrences.next();,if ((Mark)occurrences != null ) Mark mark = (Mark)occurrences.next();
PMDJEditPlugin.java,int lastLine = mark.getBeginLine()+match.getLineCount();,if (mark != null ) int lastLine = mark.getBeginLine()+match.getLineCount();
PMDOptionPane.java,int index = locationToIndex(e.getPoint());,if (locationToIndex(e != null ) int index = locationToIndex(e.getPoint());
PMDOptionPane.java,String example = rules.getRule(box).getExample();,if (rules != null ) String example = rules.getRule(box).getExample();
PMDOptionPane.java,int index = locationToIndex(e.getPoint());,if (locationToIndex(e != null ) int index = locationToIndex(e.getPoint());
PMDOptionPane.java,JList list = new CheckboxList(rules.getAllBoxes());,if (CheckboxList(rules != null ) JList list = new CheckboxList(rules.getAllBoxes());
SelectedRules.java,for(Iterator i = rsf.getRegisteredRuleSets(); i.hasNext(); ),if () != null ) for(Iterator i = rsf.getRegisteredRuleSets(); i.hasNext(); )
SelectedRules.java,RuleSet rs = (RuleSet)i.next();,if ((RuleSet)i != null ) RuleSet rs = (RuleSet)i.next();
SelectedRules.java,RuleSet rs = rsf.createRuleSet(strtok.nextToken());,if (rsf != null ) RuleSet rs = rsf.createRuleSet(strtok.nextToken());
SelectedRules.java,for(Iterator i = rules.keySet().iterator(); i.hasNext(); ),if () != null ) for(Iterator i = rules.keySet().iterator(); i.hasNext(); )
SelectedRules.java,Rule rule = (Rule)i.next();,if ((Rule)i != null ) Rule rule = (Rule)i.next();
SelectedRules.java,for(Iterator i = rules.values().iterator(); i.hasNext(); ),if () != null ) for(Iterator i = rules.values().iterator(); i.hasNext(); )
SelectedRules.java,for(Iterator i = rules.keySet().iterator(); i.hasNext(); ),if () != null ) for(Iterator i = rules.keySet().iterator(); i.hasNext(); )
SelectedRules.java,Rule rule = (Rule)i.next();,if ((Rule)i != null ) Rule rule = (Rule)i.next();
SelectedRules.java,for(Iterator i = rules.keySet().iterator(); i.hasNext(); ),if () != null ) for(Iterator i = rules.keySet().iterator(); i.hasNext(); )
SelectedRules.java,Rule rule = (Rule)i.next();,if ((Rule)i != null ) Rule rule = (Rule)i.next();
SelectedRules.java,for(Iterator j = rs.getRules().iterator(); j.hasNext(); ),if () != null ) for(Iterator j = rs.getRules().iterator(); j.hasNext(); )
SelectedRules.java,Rule rule = (Rule)j.next();,if ((Rule)j != null ) Rule rule = (Rule)j.next();
PMDJEditPlugin.java,Buffer buffer = jEdit.getFirstBuffer();,if (jEdit != null ) Buffer buffer = jEdit.getFirstBuffer();
PMDJEditPlugin.java,buffer = buffer.getNext();,if (buffer != null ) buffer = buffer.getNext();
AttributeAxisIteratorTest.java,Attribute a = (Attribute)iter.next();,if ((Attribute)iter != null ) Attribute a = (Attribute)iter.next();
AttributeAxisIteratorTest.java,a = (Attribute)iter.next();,if ((Attribute)iter != null ) a = (Attribute)iter.next();
AttributeAxisIteratorTest.java,a = (Attribute)iter.next();,if ((Attribute)iter != null ) a = (Attribute)iter.next();
AttributeAxisIteratorTest.java,a = (Attribute)iter.next();,if ((Attribute)iter != null ) a = (Attribute)iter.next();
CPDDuplicateCodeViewer.java,DefaultMutableTreeNode node = (DefaultMutableTreeNode)tree.getLastSelectedPathComponent();,if ((DefaultMutableTreeNode)tree != null ) DefaultMutableTreeNode node = (DefaultMutableTreeNode)tree.getLastSelectedPathComponent();
CPDDuplicateCodeViewer.java,"final Buffer buffer = jEdit.openFile(view,duplicate.getFilename());","if (jEdit != null ) final Buffer buffer = jEdit.openFile(view,duplicate.getFilename());"
CPDDuplicateCodeViewer.java,int start = buffer.getLineStartOffset(duplicate.getBeginLine());,if (buffer != null ) int start = buffer.getLineStartOffset(duplicate.getBeginLine());
PMDJEditPlugin.java,Buffer buffer = jEdit.getFirstBuffer();,if (jEdit != null ) Buffer buffer = jEdit.getFirstBuffer();
PMDJEditPlugin.java,buffer = buffer.getNext();,if (buffer != null ) buffer = buffer.getNext();
PMDJEditPlugin.java,String path = buffer.getPath();,if (buffer != null ) String path = buffer.getPath();
PMDJEditPlugin.java,RuleViolation rv = (RuleViolation)i.next();,if ((RuleViolation)i != null ) RuleViolation rv = (RuleViolation)i.next();
PMDJEditPlugin.java,File file = (File)i.next();,if ((File)i != null ) File file = (File)i.next();
PMDJEditPlugin.java,RuleViolation rv = (RuleViolation)j.next();,if ((RuleViolation)j != null ) RuleViolation rv = (RuleViolation)j.next();
PMDJEditPlugin.java,selectedFile = chooser.getSelectedFile();,if (chooser != null ) selectedFile = chooser.getSelectedFile();
PMDJEditPlugin.java,tilesize = Integer.parseInt(txttilesize.getText());,if (Integer != null ) tilesize = Integer.parseInt(txttilesize.getText());
PMDJEditPlugin.java,Match match = (Match)i.next();,if ((Match)i != null ) Match match = (Match)i.next();
PMDJEditPlugin.java,Mark mark = (Mark)occurrences.next();,if ((Mark)occurrences != null ) Mark mark = (Mark)occurrences.next();
PMDJEditPlugin.java,int lastLine = mark.getBeginLine()+match.getLineCount();,if (mark != null ) int lastLine = mark.getBeginLine()+match.getLineCount();
PMDOptionPane.java,int index = locationToIndex(e.getPoint());,if (locationToIndex(e != null ) int index = locationToIndex(e.getPoint());
PMDOptionPane.java,String example = rules.getRule(box).getExample();,if (rules != null ) String example = rules.getRule(box).getExample();
PMDOptionPane.java,int index = locationToIndex(e.getPoint());,if (locationToIndex(e != null ) int index = locationToIndex(e.getPoint());
PMDOptionPane.java,JList list = new CheckboxList(rules.getAllBoxes());,if (CheckboxList(rules != null ) JList list = new CheckboxList(rules.getAllBoxes());
SelectedRules.java,for(Iterator i = rsf.getRegisteredRuleSets(); i.hasNext(); ),if () != null ) for(Iterator i = rsf.getRegisteredRuleSets(); i.hasNext(); )
SelectedRules.java,RuleSet rs = (RuleSet)i.next();,if ((RuleSet)i != null ) RuleSet rs = (RuleSet)i.next();
SelectedRules.java,RuleSet rs = rsf.createRuleSet(strtok.nextToken());,if (rsf != null ) RuleSet rs = rsf.createRuleSet(strtok.nextToken());
SelectedRules.java,for(Iterator i = rules.keySet().iterator(); i.hasNext(); ),if () != null ) for(Iterator i = rules.keySet().iterator(); i.hasNext(); )
SelectedRules.java,Rule rule = (Rule)i.next();,if ((Rule)i != null ) Rule rule = (Rule)i.next();
SelectedRules.java,for(Iterator i = rules.values().iterator(); i.hasNext(); ),if () != null ) for(Iterator i = rules.values().iterator(); i.hasNext(); )
SelectedRules.java,for(Iterator i = rules.keySet().iterator(); i.hasNext(); ),if () != null ) for(Iterator i = rules.keySet().iterator(); i.hasNext(); )
SelectedRules.java,Rule rule = (Rule)i.next();,if ((Rule)i != null ) Rule rule = (Rule)i.next();
SelectedRules.java,for(Iterator i = rules.keySet().iterator(); i.hasNext(); ),if () != null ) for(Iterator i = rules.keySet().iterator(); i.hasNext(); )
SelectedRules.java,Rule rule = (Rule)i.next();,if ((Rule)i != null ) Rule rule = (Rule)i.next();
SelectedRules.java,for(Iterator j = rs.getRules().iterator(); j.hasNext(); ),if () != null ) for(Iterator j = rs.getRules().iterator(); j.hasNext(); )
SelectedRules.java,Rule rule = (Rule)j.next();,if ((Rule)j != null ) Rule rule = (Rule)j.next();
RuleProperties.java,int index = property.indexOf(SEPARATOR) + SEPARATOR.length();,if (SEPARATOR != null ) int index = property.indexOf(SEPARATOR) + SEPARATOR.length();
RuleEnabler.java,information = new javax.swing.JEditorPane();,if (javax != null ) information = new javax.swing.JEditorPane();
ViolationView.java,ISelection selection = violationTableViewer.getSelection();,if (violationTableViewer != null ) ISelection selection = violationTableViewer.getSelection();
ViolationView.java,ISelection selection = violationTableViewer.getSelection();,if (violationTableViewer != null ) ISelection selection = violationTableViewer.getSelection();
ViolationView.java,Iterator i = structuredSelection.iterator();,if (structuredSelection != null ) Iterator i = structuredSelection.iterator();
ViolationView.java,IMarker marker = (IMarker) i.next();,if (i != null ) IMarker marker = (IMarker) i.next();
GUI.java,String report = resultsTextArea.getText();,if (resultsTextArea != null ) String report = resultsTextArea.getText();
SimpleNodeTest.java,Iterator iter = methods.iterator();,if (methods != null ) Iterator iter = methods.iterator();
SimpleNodeTest.java,Iterator iter = uCD.iterator();,if (uCD != null ) Iterator iter = uCD.iterator();
RuleSetReadWriteTest.java,int rulesInCount = rulesIn.size();,if (rulesIn != null ) int rulesInCount = rulesIn.size();
RuleSetReadWriteTest.java,int rulesOutCount = rulesOut.size();,if (rulesOut != null ) int rulesOutCount = rulesOut.size();
RuleSetReadWriteTest.java,String key = rulesOutArray[n].getName();,if (rulesOutArray[n] != null ) String key = rulesOutArray[n].getName();
RuleSetReadWriteTest.java,Iterator iterator = rulesIn.iterator();,if (rulesIn != null ) Iterator iterator = rulesIn.iterator();
RuleSetReadWriteTest.java,Rule ruleIn = (Rule) iterator.next();,if (iterator != null ) Rule ruleIn = (Rule) iterator.next();
RuleSetReadWriteTest.java,String key = ruleIn.getName();,if (ruleIn != null ) String key = ruleIn.getName();
RuleSetReadWriteTest.java,RuleProperties propertiesIn = ruleIn.getProperties();,if (ruleIn != null ) RuleProperties propertiesIn = ruleIn.getProperties();
RuleSetReadWriteTest.java,RuleProperties propertiesOut = ruleOut.getProperties();,if (ruleOut != null ) RuleProperties propertiesOut = ruleOut.getProperties();
RuleSetReadWriteTest.java,Enumeration property = propertiesIn.keys();,if (propertiesIn != null ) Enumeration property = propertiesIn.keys();
RuleSetReadWriteTest.java,String propertyName = (String) property.nextElement();,if (property != null ) String propertyName = (String) property.nextElement();
PMDOpenTool.java,RuleViolation rv = (RuleViolation)i.next();,if ((RuleViolation)i != null ) RuleViolation rv = (RuleViolation)i.next();
PMDOpenTool.java,Node node = Browser.getActiveBrowser().getActiveNode();,if (Browser != null ) Node node = Browser.getActiveBrowser().getActiveNode();
PMDOpenTool.java,Document doc = viewer.getEditor().getDocument();,if (viewer != null ) Document doc = viewer.getEditor().getDocument();
PMDOpenTool.java,Node[] fileNodes = packageNode.getDisplayChildren();,if (packageNode != null ) Node[] fileNodes = packageNode.getDisplayChildren();
PMDOpenTool.java,InputStream is = javaNode.getInputStream();,if (javaNode != null ) InputStream is = javaNode.getInputStream();
PMDOpenTool.java,String packageName = node.getName();,if (node != null ) String packageName = node.getName();
PMDOpenTool.java,Node[] fileNodes = packageNode.getDisplayChildren();,if (packageNode != null ) Node[] fileNodes = packageNode.getDisplayChildren();
PMDOpenTool.java,String packageName = node.getName();,if (node != null ) String packageName = node.getName();
PMDOpenTool.java,Results results = cpd.getResults();,if (cpd != null ) Results results = cpd.getResults();
PMDOpenTool.java,Tile t = (Tile)iter.next();,if ((Tile)iter != null ) Tile t = (Tile)iter.next();
RuleSetFactory.java,Node xpathExprNode = propNode.getFirstChild().getNextSibling();,if (propNode != null ) Node xpathExprNode = propNode.getFirstChild().getNextSibling();
RuleSetFactory.java,propNode = propNode.getNextSibling().getNextSibling();,if (propNode != null ) propNode = propNode.getNextSibling().getNextSibling();
Search.java,String fullName = cls.getName();,if (cls != null ) String fullName = cls.getName();
PMDPropertyPage.java,boolean fEnabled = enablePMDButton.getSelection();,if (enablePMDButton != null ) boolean fEnabled = enablePMDButton.getSelection();
PMDPlugin.java,Iterator i = ruleSet.getRules().iterator();,if (ruleSet != null ) Iterator i = ruleSet.getRules().iterator();
PMDPlugin.java,Rule rule = (Rule) i.next();,if (i != null ) Rule rule = (Rule) i.next();
AcceptanceTest.java,ASTCompilationUnit c = parser.CompilationUnit();,if (parser != null ) ASTCompilationUnit c = parser.CompilationUnit();
PMDPlugin.java,int tokenCount = tokenizer.countTokens();,if (tokenizer != null ) int tokenCount = tokenizer.countTokens();
PMDPlugin.java,elements[i] = tokenizer.nextToken();,if (tokenizer != null ) elements[i] = tokenizer.nextToken();
PMDProcessor.java,String[] ruleSetFiles = PMDPlugin.getDefault().getRuleSetsPreference();,if (PMDPlugin != null ) String[] ruleSetFiles = PMDPlugin.getDefault().getRuleSetsPreference();
BasicScopeFactory.java,scope = new ClassScope(node.getImage());,if (ClassScope(node != null ) scope = new ClassScope(node.getImage());
BasicScopeFactory.java,scope = new ClassScope(node.getImage());,if (ClassScope(node != null ) scope = new ClassScope(node.getImage());
RuleSetReadWriteTest.java,int rulesInCount = rulesIn.size();,if (rulesIn != null ) int rulesInCount = rulesIn.size();
RuleSetReadWriteTest.java,int rulesOutCount = rulesOut.size();,if (rulesOut != null ) int rulesOutCount = rulesOut.size();
RuleSetReadWriteTest.java,String key = rulesOutArray[n].getName();,if (rulesOutArray[n] != null ) String key = rulesOutArray[n].getName();
RuleSetReadWriteTest.java,Iterator iterator = rulesIn.iterator();,if (rulesIn != null ) Iterator iterator = rulesIn.iterator();
RuleSetReadWriteTest.java,Rule ruleIn = (Rule) iterator.next();,if (iterator != null ) Rule ruleIn = (Rule) iterator.next();
RuleSetReadWriteTest.java,String key = ruleIn.getName();,if (ruleIn != null ) String key = ruleIn.getName();
RuleSetReadWriteTest.java,RuleProperties propertiesIn = ruleIn.getProperties();,if (ruleIn != null ) RuleProperties propertiesIn = ruleIn.getProperties();
RuleSetReadWriteTest.java,RuleProperties propertiesOut = ruleOut.getProperties();,if (ruleOut != null ) RuleProperties propertiesOut = ruleOut.getProperties();
RuleSetReadWriteTest.java,Enumeration property = propertiesIn.keys();,if (propertiesIn != null ) Enumeration property = propertiesIn.keys();
RuleSetReadWriteTest.java,String propertyName = (String) property.nextElement();,if (property != null ) String propertyName = (String) property.nextElement();
RuleSetList.java,directoryPath = directoryPath.trim();,if (directoryPath != null ) directoryPath = directoryPath.trim();
RuleSetList.java,ruleSetNameList = inputStream.readLine();,if (inputStream != null ) ruleSetNameList = inputStream.readLine();
RuleSetList.java,ruleSetNames[index] = parser.nextToken().trim();,if (parser != null ) ruleSetNames[index] = parser.nextToken().trim();
RuleSetList.java,directoryPath = directoryPath.trim();,if (directoryPath != null ) directoryPath = directoryPath.trim();
RuleSetReader.java,SAXParserFactory factory = SAXParserFactory.newInstance();,if (SAXParserFactory != null ) SAXParserFactory factory = SAXParserFactory.newInstance();
RuleSetReader.java,parser = factory.newSAXParser();,if (factory != null ) parser = factory.newSAXParser();
RuleSetReader.java,Throwable originalException = exception.getException();,if (exception != null ) Throwable originalException = exception.getException();
RuleSetWriter.java,Iterator rules = ruleSet.getRules().iterator();,if (ruleSet != null ) Iterator rules = ruleSet.getRules().iterator();
RuleSetWriter.java,RuleProperties properties = rule.getProperties();,if (rule != null ) RuleProperties properties = rule.getProperties();
RuleSetWriter.java,Enumeration keys = properties.keys();,if (properties != null ) Enumeration keys = properties.keys();
RuleSetWriter.java,String name = (String) keys.nextElement();,if (keys != null ) String name = (String) keys.nextElement();
PMDDirectory.java,Iterator ruleSetFiles = getRuleSetFiles().iterator();,if (getRuleSetFiles() != null ) Iterator ruleSetFiles = getRuleSetFiles().iterator();
PMDDirectory.java,File ruleSetFile = (File) ruleSetFiles.next();,if (ruleSetFiles != null ) File ruleSetFile = (File) ruleSetFiles.next();
PMDDirectory.java,Iterator allRules = ruleSet.getRules().iterator();,if (ruleSet != null ) Iterator allRules = ruleSet.getRules().iterator();
PMDDirectory.java,Rule rule = (Rule) allRules.next();,if (allRules != null ) Rule rule = (Rule) allRules.next();
PMDDirectory.java,Iterator ruleSets = (new RuleSetFactory()).getRegisteredRuleSets();,if (RuleSetFactory()) != null ) Iterator ruleSets = (new RuleSetFactory()).getRegisteredRuleSets();
PMDDirectory.java,ruleSet = (RuleSet) ruleSets.next();,if (ruleSets != null ) ruleSet = (RuleSet) ruleSets.next();
PMDDirectory.java,rules = ruleSet.getRules().iterator();,if (ruleSet != null ) rules = ruleSet.getRules().iterator();
PMDDirectory.java,ruleSetFiles = ruleSetFilesList.iterator();,if (ruleSetFilesList != null ) ruleSetFiles = ruleSetFilesList.iterator();
PMDDirectory.java,File ruleSetFile = (File) ruleSetFiles.next();,if (ruleSetFiles != null ) File ruleSetFile = (File) ruleSetFiles.next();
PMDDirectory.java,Iterator ruleSets = ruleSetList.iterator();,if (ruleSetList != null ) Iterator ruleSets = ruleSetList.iterator();
PMDDirectory.java,RuleSet ruleSet = (RuleSet) ruleSets.next();,if (ruleSets != null ) RuleSet ruleSet = (RuleSet) ruleSets.next();
PMDDirectory.java,String ruleSetFileName = ruleSet.getFileName();,if (ruleSet != null ) String ruleSetFileName = ruleSet.getFileName();
PMDDirectory.java,File directory = file.getParentFile();,if (file != null ) File directory = file.getParentFile();
PMDDirectory.java,List ruleSetList = event.getRuleSetList();,if (event != null ) List ruleSetList = event.getRuleSetList();
PMDDirectory.java,int priority = event.getLowestPriorityForAnalysis();,if (event != null ) int priority = event.getLowestPriorityForAnalysis();
ProjectFile.java,Enumeration keys = PROPERTIES.propertyNames();,if (PROPERTIES != null ) Enumeration keys = PROPERTIES.propertyNames();
ProjectFile.java,valueCount = parser.countTokens();,if (parser != null ) valueCount = parser.countTokens();
ProjectFile.java,values[index] = parser.nextToken();,if (parser != null ) values[index] = parser.nextToken();
ProjectFile.java,SAXParserFactory factory = SAXParserFactory.newInstance();,if (SAXParserFactory != null ) SAXParserFactory factory = SAXParserFactory.newInstance();
ProjectFile.java,SAXParser parser = factory.newSAXParser();,if (factory != null ) SAXParser parser = factory.newSAXParser();
AboutPMD.java,Dimension screenSize = getToolkit().getScreenSize();,if (getToolkit() != null ) Dimension screenSize = getToolkit().getScreenSize();
AboutPMD.java,JPanel buttonPanel = ComponentFactory.createButtonPanel();,if (ComponentFactory != null ) JPanel buttonPanel = ComponentFactory.createButtonPanel();
AboutPMD.java,layout = (GridBagLayout) infoPanel.getLayout();,if (infoPanel != null ) layout = (GridBagLayout) infoPanel.getLayout();
AboutPMD.java,layout = (GridBagLayout) infoPanel.getLayout();,if (infoPanel != null ) layout = (GridBagLayout) infoPanel.getLayout();
AboutPMD.java,font = textArea.getFont();,if (textArea != null ) font = textArea.getFont();
AboutPMD.java,layout = (GridBagLayout) infoPanel.getLayout();,if (infoPanel != null ) layout = (GridBagLayout) infoPanel.getLayout();
AboutPMD.java,layout = (GridBagLayout) creditsPanel.getLayout();,if (creditsPanel != null ) layout = (GridBagLayout) creditsPanel.getLayout();
AboutPMD.java,layout = (GridBagLayout) creditsPanel.getLayout();,if (creditsPanel != null ) layout = (GridBagLayout) creditsPanel.getLayout();
AnalysisResultsViewer.java,int priority = Preferences.getPreferences().getLowestPriorityForAnalysis();,if (Preferences != null ) int priority = Preferences.getPreferences().getLowestPriorityForAnalysis();
AnalysisViewer.java,font = titledBorder.getTitleFont();,if (titledBorder != null ) font = titledBorder.getTitleFont();
AnalysisViewer.java,Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();,if (Toolkit != null ) Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
AnalysisViewer.java,Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();,if (Toolkit != null ) Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
AnalysisViewer.java,String message = pmdException.getMessage();,if (pmdException != null ) String message = pmdException.getMessage();
AnalysisViewer.java,Exception exception = pmdException.getReason();,if (pmdException != null ) Exception exception = pmdException.getReason();
AnalysisViewer.java,String directory = Preferences.getPreferences().getAnalysisResultsPath();,if (Preferences != null ) String directory = Preferences.getPreferences().getAnalysisResultsPath();
AnalysisViewer.java,String message = pmdException.getMessage();,if (pmdException != null ) String message = pmdException.getMessage();
AnalysisViewer.java,Exception exception = pmdException.getReason();,if (pmdException != null ) Exception exception = pmdException.getReason();
AnalysisViewer.java,String path = Preferences.getPreferences().getAnalysisResultsPath();,if (Preferences != null ) String path = Preferences.getPreferences().getAnalysisResultsPath();
AnalysisViewer.java,int result = fileChooser.showSaveDialog(PMDViewer.getViewer());,if (fileChooser != null ) int result = fileChooser.showSaveDialog(PMDViewer.getViewer());
AnalysisViewer.java,String message = pmdException.getMessage();,if (pmdException != null ) String message = pmdException.getMessage();
AnalysisViewer.java,Exception exception = pmdException.getReason();,if (pmdException != null ) Exception exception = pmdException.getReason();
AnalysisViewer.java,String fileName = file.getName();,if (file != null ) String fileName = file.getName();
ComponentFactory.java,Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();,if (Toolkit != null ) Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
DirectoryTable.java,int row = selectionModel.getAnchorSelectionIndex();,if (selectionModel != null ) int row = selectionModel.getAnchorSelectionIndex();
DirectoryTable.java,mouseLocation = event.getPoint();,if (event != null ) mouseLocation = event.getPoint();
DirectoryTable.java,tableData = tableModel.getDataVector();,if (tableModel != null ) tableData = tableModel.getDataVector();
DirectoryTable.java,rowCount = tableData.size();,if (tableData != null ) rowCount = tableData.size();
DirectoryTableModel.java,pattern = buffer.toString();,if (buffer != null ) pattern = buffer.toString();
DirectoryTableModel.java,TreePath treePath = event.getPath();,if (event != null ) TreePath treePath = event.getPath();
DirectoryTableModel.java,DirectoryTreeNode treeNode = (DirectoryTreeNode) treePath.getLastPathComponent();,if (treePath != null ) DirectoryTreeNode treeNode = (DirectoryTreeNode) treePath.getLastPathComponent();
DirectoryTableModel.java,Object userObject = treeNode.getUserObject();,if (treeNode != null ) Object userObject = treeNode.getUserObject();
DirectoryTableModel.java,String fileName = file.getName().toLowerCase();,if (file != null ) String fileName = file.getName().toLowerCase();
DirectoryTree.java,DirectoryTreeNode treeNode = (DirectoryTreeNode) treeModel.getRoot();,if (treeModel != null ) DirectoryTreeNode treeNode = (DirectoryTreeNode) treeModel.getRoot();
DirectoryTree.java,TreePath treePath = new TreePath(treeNode.getPath());,if (TreePath(treeNode != null ) TreePath treePath = new TreePath(treeNode.getPath());
DirectoryTree.java,TreePath path = getSelectionModel().getSelectionPath();,if (getSelectionModel() != null ) TreePath path = getSelectionModel().getSelectionPath();
DirectoryTree.java,File[] directories = event.getFileList();,if (event != null ) File[] directories = event.getFileList();
DirectoryTree.java,Object userObject = treeNode.getUserObject();,if (treeNode != null ) Object userObject = treeNode.getUserObject();
DirectoryTreeModel.java,treePath = event.getPath();,if (event != null ) treePath = event.getPath();
DirectoryTreeModel.java,treeNode = (DirectoryTreeNode) treePath.getLastPathComponent();,if (treePath != null ) treeNode = (DirectoryTreeNode) treePath.getLastPathComponent();
DirectoryTreeModel.java,children = treeNode.children();,if (treeNode != null ) children = treeNode.children();
DirectoryTreeModel.java,DirectoryTreeNode childTreeNode = (DirectoryTreeNode) children.nextElement();,if (children != null ) DirectoryTreeNode childTreeNode = (DirectoryTreeNode) children.nextElement();
DirectoryTreeModel.java,File directory = (File) childTreeNode.getUserObject();,if (childTreeNode != null ) File directory = (File) childTreeNode.getUserObject();
DirectoryTreeModel.java,treePath = event.getPath();,if (event != null ) treePath = event.getPath();
DirectoryTreeModel.java,treeNode = (DirectoryTreeNode) treePath.getLastPathComponent();,if (treePath != null ) treeNode = (DirectoryTreeNode) treePath.getLastPathComponent();
DirectoryTreeModel.java,children = treeNode.children();,if (treeNode != null ) children = treeNode.children();
DirectoryTreeModel.java,DirectoryTreeNode childTreeNode = (DirectoryTreeNode) children.nextElement();,if (children != null ) DirectoryTreeNode childTreeNode = (DirectoryTreeNode) children.nextElement();
DirectoryTreeNode.java,String name = file.getName();,if (file != null ) String name = file.getName();
HTMLResultRenderer.java,Iterator violations = report.iterator();,if (report != null ) Iterator violations = report.iterator();
HTMLResultRenderer.java,String hexValue = Integer.toHexString(Color.WHITE.getRGB());,if (Integer != null ) String hexValue = Integer.toHexString(Color.WHITE.getRGB());
HTMLResultRenderer.java,RuleViolation ruleViolation = (RuleViolation) violations.next();,if (violations != null ) RuleViolation ruleViolation = (RuleViolation) violations.next();
HTMLResultRenderer.java,Rule rule = ruleViolation.getRule();,if (ruleViolation != null ) Rule rule = ruleViolation.getRule();
HTMLResultRenderer.java,String ruleMessage = ruleViolation.getDescription();,if (ruleViolation != null ) String ruleMessage = ruleViolation.getDescription();
HTMLResultRenderer.java,String description = rule.getDescription();,if (rule != null ) String description = rule.getDescription();
HTMLResultRenderer.java,String example = rule.getExample();,if (rule != null ) String example = rule.getExample();
HTMLResultRenderer.java,example = buffer.toString();,if (buffer != null ) example = buffer.toString();
HTMLResultRenderer.java,char[] chars = text.trim().toCharArray();,if (text != null ) char[] chars = text.trim().toCharArray();
HelpMenu.java,PMDViewer viewer = PMDViewer.getViewer();,if (PMDViewer != null ) PMDViewer viewer = PMDViewer.getViewer();
MessageDialog.java,Rectangle parentWindowBounds = parentWindow.getBounds();,if (parentWindow != null ) Rectangle parentWindowBounds = parentWindow.getBounds();
MessageDialog.java,message = stream.toString();,if (stream != null ) message = stream.toString();
PMDLookAndFeel.java,Color darkBlue = Color.blue.darker();,if (Color != null ) Color darkBlue = Color.blue.darker();
PMDViewer.java,screenSize = Toolkit.getDefaultToolkit().getScreenSize();,if (Toolkit != null ) screenSize = Toolkit.getDefaultToolkit().getScreenSize();
PMDViewer.java,String message = pmdException.getMessage();,if (pmdException != null ) String message = pmdException.getMessage();
PMDViewer.java,Exception exception = pmdException.getReason();,if (pmdException != null ) Exception exception = pmdException.getReason();
PMDViewer.java,int menuCount = menuBar.getMenuCount();,if (menuBar != null ) int menuCount = menuBar.getMenuCount();
PMDViewer.java,int menuCount = menuBar.getMenuCount();,if (menuBar != null ) int menuCount = menuBar.getMenuCount();
PMDViewer.java,String message = pmdException.getMessage();,if (pmdException != null ) String message = pmdException.getMessage();
PMDViewer.java,Exception exception = pmdException.getReason();,if (pmdException != null ) Exception exception = pmdException.getReason();
Preferences.java,File directory = file.getParentFile();,if (file != null ) File directory = file.getParentFile();
Preferences.java,key = name.toLowerCase();,if (name != null ) key = name.toLowerCase();
Preferences.java,directory = buffer.toString();,if (buffer != null ) directory = buffer.toString();
Preferences.java,value = buffer.toString();,if (buffer != null ) value = buffer.toString();
Preferences.java,String key = trim(pathName).toLowerCase();,if (trim(pathName) != null ) String key = trim(pathName).toLowerCase();
Preferences.java,text = text.trim();,if (text != null ) text = text.trim();
PreferencesEditor.java,preferences = Preferences.getPreferences();,if (Preferences != null ) preferences = Preferences.getPreferences();
PreferencesEditor.java,String currentPath = preferences.getCurrentPathToPMD();,if (preferences != null ) String currentPath = preferences.getCurrentPathToPMD();
PreferencesEditor.java,String userPath = preferences.getUserPathToPMD();,if (preferences != null ) String userPath = preferences.getUserPathToPMD();
PreferencesEditor.java,String sharedPath = preferences.getSharedPathToPMD();,if (preferences != null ) String sharedPath = preferences.getSharedPathToPMD();
PreferencesEditor.java,String analysisResultsPath = preferences.getAnalysisResultsPath();,if (preferences != null ) String analysisResultsPath = preferences.getAnalysisResultsPath();
PreferencesEditor.java,int priority = preferences.getLowestPriorityForAnalysis();,if (preferences != null ) int priority = preferences.getLowestPriorityForAnalysis();
PreferencesEditor.java,layout = (GridBagLayout) dataPanel.getLayout();,if (dataPanel != null ) layout = (GridBagLayout) dataPanel.getLayout();
PreferencesEditor.java,font = textArea.getFont();,if (textArea != null ) font = textArea.getFont();
PreferencesEditor.java,layout = (GridBagLayout) dataPanel.getLayout();,if (dataPanel != null ) layout = (GridBagLayout) dataPanel.getLayout();
PreferencesEditor.java,fontMetrics = button.getFontMetrics(button.getFont());,if (button != null ) fontMetrics = button.getFontMetrics(button.getFont());
PreferencesEditor.java,"size = new Dimension(width, button.getHeight());","if (button != null ) size = new Dimension(width, button.getHeight());"
PreferencesEditor.java,layout = (GridBagLayout) dataPanel.getLayout();,if (dataPanel != null ) layout = (GridBagLayout) dataPanel.getLayout();
PreferencesEditor.java,layout = (GridBagLayout) dataPanel.getLayout();,if (dataPanel != null ) layout = (GridBagLayout) dataPanel.getLayout();
PreferencesEditor.java,Preferences preferences = Preferences.getPreferences();,if (Preferences != null ) Preferences preferences = Preferences.getPreferences();
PreferencesEditor.java,String message = pmdException.getMessage();,if (pmdException != null ) String message = pmdException.getMessage();
PreferencesEditor.java,Exception exception = pmdException.getReason();,if (pmdException != null ) Exception exception = pmdException.getReason();
PreferencesEditor.java,file = file.getParentFile();,if (file != null ) file = file.getParentFile();
PreferencesEditor.java,file = fileChooser.getSelectedFile();,if (fileChooser != null ) file = fileChooser.getSelectedFile();
PrintAnalysisResults.java,toolkit = Toolkit.getDefaultToolkit();,if (Toolkit != null ) toolkit = Toolkit.getDefaultToolkit();
PrintAnalysisResults.java,viewer = PMDViewer.getViewer();,if (PMDViewer != null ) viewer = PMDViewer.getViewer();
PrintAnalysisResults.java,dateFormat = DateFormat.getDateTimeInstance();,if (DateFormat != null ) dateFormat = DateFormat.getDateTimeInstance();
PrintAnalysisResults.java,String textLine = parser.nextToken();,if (parser != null ) String textLine = parser.nextToken();
PrintAnalysisResults.java,String textLine = buffer.toString();,if (buffer != null ) String textLine = buffer.toString();
PrintAnalysisResults.java,PrintLineInfo printLineInfo = (PrintLineInfo) lineTableIterator.next();,if (lineTableIterator != null ) PrintLineInfo printLineInfo = (PrintLineInfo) lineTableIterator.next();
ResultsViewer.java,component = component.getParent();,if (component != null ) component = component.getParent();
ResultsViewer.java,Report report = ruleContext.getReport();,if (ruleContext != null ) Report report = ruleContext.getReport();
ResultsViewer.java,fullText = renderer.endRendering();,if (renderer != null ) fullText = renderer.endRendering();
ResultsViewer.java,String message = pmdException.getMessage();,if (pmdException != null ) String message = pmdException.getMessage();
ResultsViewer.java,Exception exception = pmdException.getReason();,if (pmdException != null ) Exception exception = pmdException.getReason();
ResultsViewer.java,report = ruleContext.getReport();,if (ruleContext != null ) report = ruleContext.getReport();
ResultsViewer.java,String message = pmdException.getMessage();,if (pmdException != null ) String message = pmdException.getMessage();
ResultsViewer.java,Exception exception = pmdException.getReason();,if (pmdException != null ) Exception exception = pmdException.getReason();
RuleEditingPanel.java,component = component.getParent();,if (component != null ) component = component.getParent();
RuleEditingTabbedPane.java,TreePath treePath = event.getPath();,if (event != null ) TreePath treePath = event.getPath();
RuleEditingTabbedPane.java,Object component = treePath.getLastPathComponent();,if (treePath != null ) Object component = treePath.getLastPathComponent();
RulePropertyEditingPanel.java,String name = dataNode.getName();,if (dataNode != null ) String name = dataNode.getName();
RulePropertyEditingPanel.java,String valueType = dataNode.getPropertyValueType();,if (dataNode != null ) String valueType = dataNode.getPropertyValueType();
RulePropertyEditingPanel.java,component = component.getParent();,if (component != null ) component = component.getParent();
RuleSetEditingPanel.java,component = component.getParent();,if (component != null ) component = component.getParent();
RulesClassSelectDialog.java,PMDDirectory pmdDirectory = PMDDirectory.getDirectory();,if (PMDDirectory != null ) PMDDirectory pmdDirectory = PMDDirectory.getDirectory();
RulesClassSelectDialog.java,String rulesDirectoryPath = pmdDirectory.getRuleSetsDirectoryPath();,if (pmdDirectory != null ) String rulesDirectoryPath = pmdDirectory.getRuleSetsDirectoryPath();
RulesClassSelectDialog.java,JPanel buttonPanel = ComponentFactory.createButtonPanel();,if (ComponentFactory != null ) JPanel buttonPanel = ComponentFactory.createButtonPanel();
RulesEditor.java,Enumeration children = treeNode.children();,if (treeNode != null ) Enumeration children = treeNode.children();
RulesEditor.java,Enumeration ruleSetNodes = rootNode.children();,if (rootNode != null ) Enumeration ruleSetNodes = rootNode.children();
RulesEditor.java,RulesTreeNode ruleSetNode = (RulesTreeNode) ruleSetNodes.nextElement();,if (ruleSetNodes != null ) RulesTreeNode ruleSetNode = (RulesTreeNode) ruleSetNodes.nextElement();
RulesEditor.java,RuleSet ruleSet = ruleSetNode.getRuleSet();,if (ruleSetNode != null ) RuleSet ruleSet = ruleSetNode.getRuleSet();
RulesEditor.java,Enumeration ruleNodes = ruleSetNode.children();,if (ruleSetNode != null ) Enumeration ruleNodes = ruleSetNode.children();
RulesEditor.java,RulesTreeNode ruleNode = (RulesTreeNode) ruleNodes.nextElement();,if (ruleNodes != null ) RulesTreeNode ruleNode = (RulesTreeNode) ruleNodes.nextElement();
RulesEditor.java,int lowestPriority = Preferences.getPreferences().getLowestPriorityForAnalysis();,if (Preferences != null ) int lowestPriority = Preferences.getPreferences().getLowestPriorityForAnalysis();
RulesEditor.java,String message = pmdException.getMessage();,if (pmdException != null ) String message = pmdException.getMessage();
RulesEditor.java,Exception exception = pmdException.getReason();,if (pmdException != null ) Exception exception = pmdException.getReason();
RulesEditor.java,Enumeration ruleSetNodes = rootNode.children();,if (rootNode != null ) Enumeration ruleSetNodes = rootNode.children();
RulesEditor.java,RulesTreeNode ruleSetNode = (RulesTreeNode) ruleSetNodes.nextElement();,if (ruleSetNodes != null ) RulesTreeNode ruleSetNode = (RulesTreeNode) ruleSetNodes.nextElement();
RulesEditor.java,Enumeration ruleNodes = ruleSetNode.children();,if (ruleSetNode != null ) Enumeration ruleNodes = ruleSetNode.children();
RulesEditor.java,RulesTreeNode ruleNode = (RulesTreeNode) ruleNodes.nextElement();,if (ruleNodes != null ) RulesTreeNode ruleNode = (RulesTreeNode) ruleNodes.nextElement();
RulesTree.java,TreePath treePath = new TreePath(getRootNode().getPath());,if (TreePath(getRootNode() != null ) TreePath treePath = new TreePath(getRootNode().getPath());
RulesTree.java,TreePath treePath = new TreePath(node.getPath());,if (TreePath(node != null ) TreePath treePath = new TreePath(node.getPath());
RulesTree.java,TreePath treePath = new TreePath(node.getPath());,if (TreePath(node != null ) TreePath treePath = new TreePath(node.getPath());
RulesTree.java,location = event.getPoint();,if (event != null ) location = event.getPoint();
RulesTree.java,treeNode = (RulesTreeNode) treePath.getLastPathComponent();,if (treePath != null ) treeNode = (RulesTreeNode) treePath.getLastPathComponent();
RulesTree.java,JCheckBoxMenuItem includeMenuItem = (JCheckBoxMenuItem) event.getSource();,if (event != null ) JCheckBoxMenuItem includeMenuItem = (JCheckBoxMenuItem) event.getSource();
RulesTree.java,RulesTreeNode rootNode = rulesTree.getSelectedNode();,if (rulesTree != null ) RulesTreeNode rootNode = rulesTree.getSelectedNode();
RulesTree.java,RulesTreeNode ruleSetNode = RulesTree.this.getSelectedNode();,if (RulesTree != null ) RulesTreeNode ruleSetNode = RulesTree.this.getSelectedNode();
RulesTree.java,String ruleSetName = ruleSetNode.getName();,if (ruleSetNode != null ) String ruleSetName = ruleSetNode.getName();
RulesTree.java,String message = pmdException.getMessage();,if (pmdException != null ) String message = pmdException.getMessage();
RulesTree.java,Exception exception = pmdException.getReason();,if (pmdException != null ) Exception exception = pmdException.getReason();
RulesTree.java,String className = rule.getClass().getName();,if (rule != null ) String className = rule.getClass().getName();
RulesTree.java,RulesTreeNode ruleSetNode = rulesTree.getSelectedNode();,if (rulesTree != null ) RulesTreeNode ruleSetNode = rulesTree.getSelectedNode();
RulesTree.java,DefaultTreeModel treeModel = (DefaultTreeModel) rulesTree.getModel();,if (rulesTree != null ) DefaultTreeModel treeModel = (DefaultTreeModel) rulesTree.getModel();
RulesTree.java,TreePath treePath = new TreePath(ruleNode.getPath());,if (TreePath(ruleNode != null ) TreePath treePath = new TreePath(ruleNode.getPath());
RulesTree.java,RulesClassSelectDialog dialog = new RulesClassSelectDialog(PMDViewer.getViewer());,if (RulesClassSelectDialog(PMDViewer != null ) RulesClassSelectDialog dialog = new RulesClassSelectDialog(PMDViewer.getViewer());
RulesTree.java,File selectedFile = dialog.getSelectedClassFile();,if (dialog != null ) File selectedFile = dialog.getSelectedClassFile();
RulesTree.java,Object object = clazz.newInstance();,if (clazz != null ) Object object = clazz.newInstance();
RulesTree.java,String abstractRuleClassName = AbstractRule.class.getName();,if (AbstractRule != null ) String abstractRuleClassName = AbstractRule.class.getName();
RulesTree.java,buffer = byteArrayOutputStream.toByteArray();,if (byteArrayOutputStream != null ) buffer = byteArrayOutputStream.toByteArray();
RulesTree.java,RulesTreeNode ruleNode = RulesTree.this.getSelectedNode();,if (RulesTree != null ) RulesTreeNode ruleNode = RulesTree.this.getSelectedNode();
RulesTree.java,String ruleName = ruleNode.getName();,if (ruleNode != null ) String ruleName = ruleNode.getName();
RulesTree.java,RulesTreeNode ruleNode = rulesTree.getSelectedNode();,if (rulesTree != null ) RulesTreeNode ruleNode = rulesTree.getSelectedNode();
RulesTree.java,DefaultTreeModel treeModel = (DefaultTreeModel) rulesTree.getModel();,if (rulesTree != null ) DefaultTreeModel treeModel = (DefaultTreeModel) rulesTree.getModel();
RulesTree.java,RulesTreeNode propertyNode = RulesTree.this.getSelectedNode();,if (RulesTree != null ) RulesTreeNode propertyNode = RulesTree.this.getSelectedNode();
RulesTree.java,String propertyName = propertyNode.getName();,if (propertyNode != null ) String propertyName = propertyNode.getName();
RulesTree.java,font = RulesTree.this.getFont();,if (RulesTree != null ) font = RulesTree.this.getFont();
RulesTreeModel.java,Enumeration ruleSetNodes = rootNode.children();,if (rootNode != null ) Enumeration ruleSetNodes = rootNode.children();
RulesTreeModel.java,RulesTreeNode ruleSetNode = (RulesTreeNode) ruleSetNodes.nextElement();,if (ruleSetNodes != null ) RulesTreeNode ruleSetNode = (RulesTreeNode) ruleSetNodes.nextElement();
RulesTreeModel.java,Enumeration ruleSetNodes = rootNode.children();,if (rootNode != null ) Enumeration ruleSetNodes = rootNode.children();
RulesTreeModel.java,RulesTreeNode ruleSetNode = (RulesTreeNode) ruleSetNodes.nextElement();,if (ruleSetNodes != null ) RulesTreeNode ruleSetNode = (RulesTreeNode) ruleSetNodes.nextElement();
RulesTreeModel.java,Enumeration ruleNodes = ruleSetNode.children();,if (ruleSetNode != null ) Enumeration ruleNodes = ruleSetNode.children();
RulesTreeModel.java,RulesTreeNode ruleNode = (RulesTreeNode) ruleNodes.nextElement();,if (ruleNodes != null ) RulesTreeNode ruleNode = (RulesTreeNode) ruleNodes.nextElement();
RulesTreeModel.java,ruleSet = ruleSetNode.getRuleSet();,if (ruleSetNode != null ) ruleSet = ruleSetNode.getRuleSet();
RulesTreeModel.java,setOfRules = ruleSet.getRules();,if (ruleSet != null ) setOfRules = ruleSet.getRules();
RulesTreeModel.java,rule = ruleNode.getRule();,if (ruleNode != null ) rule = ruleNode.getRule();
RulesTreeModel.java,properties = rule.getProperties();,if (rule != null ) properties = rule.getProperties();
RulesTreeModel.java,keys = properties.keys();,if (properties != null ) keys = properties.keys();
RulesTreeModel.java,propertyNames[index] = (String) keys.nextElement();,if (keys != null ) propertyNames[index] = (String) keys.nextElement();
RulesTreeModel.java,RulesTreeNode parentNode = event.getParentNode();,if (event != null ) RulesTreeNode parentNode = event.getParentNode();
RulesTreeNode.java,RulesTreeNode childNode = (RulesTreeNode) children.nextElement();,if (children != null ) RulesTreeNode childNode = (RulesTreeNode) children.nextElement();
RulesTreeNode.java,include = ruleSetNode.include();,if (ruleSetNode != null ) include = ruleSetNode.include();
RulesTreeNode.java,ruleSetNode = (RulesTreeNode) ruleNode.getParent();,if (ruleNode != null ) ruleSetNode = (RulesTreeNode) ruleNode.getParent();
RulesTreeNode.java,include = ruleSetNode.include();,if (ruleSetNode != null ) include = ruleSetNode.include();
RulesTreeNode.java,text = text.trim();,if (text != null ) text = text.trim();
RulesTreeNode.java,String currentNodeName = treeNodes[n].getName();,if (treeNodes[n] != null ) String currentNodeName = treeNodes[n].getName();
SearchResultsViewer.java,String fileName = file.getName().toLowerCase();,if (file != null ) String fileName = file.getName().toLowerCase();
SearchViewer.java,font = titledBorder.getTitleFont();,if (titledBorder != null ) font = titledBorder.getTitleFont();
SearchViewer.java,Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();,if (Toolkit != null ) Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
SearchViewer.java,Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();,if (Toolkit != null ) Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
SearchViewer.java,String message = pmdException.getMessage();,if (pmdException != null ) String message = pmdException.getMessage();
SearchViewer.java,Exception exception = pmdException.getReason();,if (pmdException != null ) Exception exception = pmdException.getReason();
SearchViewer.java,String directory = Preferences.getPreferences().getAnalysisResultsPath();,if (Preferences != null ) String directory = Preferences.getPreferences().getAnalysisResultsPath();
SearchViewer.java,String message = pmdException.getMessage();,if (pmdException != null ) String message = pmdException.getMessage();
SearchViewer.java,Exception exception = pmdException.getReason();,if (pmdException != null ) Exception exception = pmdException.getReason();
SearchViewer.java,String path = Preferences.getPreferences().getAnalysisResultsPath();,if (Preferences != null ) String path = Preferences.getPreferences().getAnalysisResultsPath();
SearchViewer.java,int result = fileChooser.showSaveDialog(PMDViewer.getViewer());,if (fileChooser != null ) int result = fileChooser.showSaveDialog(PMDViewer.getViewer());
SearchViewer.java,String message = pmdException.getMessage();,if (pmdException != null ) String message = pmdException.getMessage();
SearchViewer.java,Exception exception = pmdException.getReason();,if (pmdException != null ) Exception exception = pmdException.getReason();
SearchViewer.java,String fileName = file.getName();,if (file != null ) String fileName = file.getName();
SearchViewer.java,Enumeration ruleSets = rulesNode.children();,if (rulesNode != null ) Enumeration ruleSets = rulesNode.children();
SearchViewer.java,RulesTreeNode childNode = (RulesTreeNode) ruleSets.nextElement();,if (ruleSets != null ) RulesTreeNode childNode = (RulesTreeNode) ruleSets.nextElement();
SearchViewer.java,ruleSet = rulesNode.getRuleSet();,if (rulesNode != null ) ruleSet = rulesNode.getRuleSet();
SearchViewer.java,rulesNode = (RulesTreeNode) rulesNode.getParent();,if (rulesNode != null ) rulesNode = (RulesTreeNode) rulesNode.getParent();
SearchViewer.java,File directory = (File) directoryNode.getUserObject();,if (directoryNode != null ) File directory = (File) directoryNode.getUserObject();
StatusBar.java,Rectangle oldClip = graphics.getClipBounds();,if (graphics != null ) Rectangle oldClip = graphics.getClipBounds();
StatusBar.java,Color oldColor = graphics.getColor();,if (graphics != null ) Color oldColor = graphics.getColor();
TextRenderer.java,Iterator violations = report.iterator();,if (report != null ) Iterator violations = report.iterator();
TextRenderer.java,RuleViolation ruleViolation = (RuleViolation) violations.next();,if (violations != null ) RuleViolation ruleViolation = (RuleViolation) violations.next();
TextRenderer.java,Rule rule = ruleViolation.getRule();,if (ruleViolation != null ) Rule rule = ruleViolation.getRule();
TextRenderer.java,String ruleMessage = ruleViolation.getDescription();,if (ruleViolation != null ) String ruleMessage = ruleViolation.getDescription();
TextRenderer.java,String description = rule.getDescription();,if (rule != null ) String description = rule.getDescription();
TextRenderer.java,String example = rule.getExample();,if (rule != null ) String example = rule.getExample();
AnalyzeFileEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
AnalyzeFileEvent.java,listener = (AnalyzeFileEventListener) listeners.next();,if (listeners != null ) listener = (AnalyzeFileEventListener) listeners.next();
AnalyzeFileEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
AnalyzeFileEvent.java,listener = (AnalyzeFileEventListener) listeners.next();,if (listeners != null ) listener = (AnalyzeFileEventListener) listeners.next();
DirectoryTableEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
DirectoryTableEvent.java,listener = (DirectoryTableEventListener) listeners.next();,if (listeners != null ) listener = (DirectoryTableEventListener) listeners.next();
DirectoryTableEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
DirectoryTableEvent.java,listener = (DirectoryTableEventListener) listeners.next();,if (listeners != null ) listener = (DirectoryTableEventListener) listeners.next();
DirectoryTableEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
DirectoryTableEvent.java,listener = (DirectoryTableEventListener) listeners.next();,if (listeners != null ) listener = (DirectoryTableEventListener) listeners.next();
HTMLAnalysisResultsEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
HTMLAnalysisResultsEvent.java,listener = (HTMLAnalysisResultsEventListener) listeners.next();,if (listeners != null ) listener = (HTMLAnalysisResultsEventListener) listeners.next();
HTMLAnalysisResultsEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
HTMLAnalysisResultsEvent.java,listener = (HTMLAnalysisResultsEventListener) listeners.next();,if (listeners != null ) listener = (HTMLAnalysisResultsEventListener) listeners.next();
ListenerList.java,Object listener = listeners.next();,if (listeners != null ) Object listener = listeners.next();
PMDDirectoryRequestEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
PMDDirectoryRequestEvent.java,listener = (PMDDirectoryRequestEventListener) listeners.next();,if (listeners != null ) listener = (PMDDirectoryRequestEventListener) listeners.next();
PMDDirectoryRequestEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
PMDDirectoryRequestEvent.java,listener = (PMDDirectoryRequestEventListener) listeners.next();,if (listeners != null ) listener = (PMDDirectoryRequestEventListener) listeners.next();
PMDDirectoryRequestEvent.java,String message = pmdException.getMessage();,if (pmdException != null ) String message = pmdException.getMessage();
PMDDirectoryRequestEvent.java,Exception exception = pmdException.getReason();,if (pmdException != null ) Exception exception = pmdException.getReason();
PMDDirectoryRequestEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
PMDDirectoryRequestEvent.java,listener = (PMDDirectoryRequestEventListener) listeners.next();,if (listeners != null ) listener = (PMDDirectoryRequestEventListener) listeners.next();
PMDDirectoryRequestEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
PMDDirectoryRequestEvent.java,listener = (PMDDirectoryRequestEventListener) listeners.next();,if (listeners != null ) listener = (PMDDirectoryRequestEventListener) listeners.next();
PMDDirectoryRequestEvent.java,String message = pmdException.getMessage();,if (pmdException != null ) String message = pmdException.getMessage();
PMDDirectoryRequestEvent.java,Exception exception = pmdException.getReason();,if (pmdException != null ) Exception exception = pmdException.getReason();
PMDDirectoryReturnedEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
PMDDirectoryReturnedEvent.java,listener = (PMDDirectoryReturnedEventListener) listeners.next();,if (listeners != null ) listener = (PMDDirectoryReturnedEventListener) listeners.next();
PMDDirectoryReturnedEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
PMDDirectoryReturnedEvent.java,listener = (PMDDirectoryReturnedEventListener) listeners.next();,if (listeners != null ) listener = (PMDDirectoryReturnedEventListener) listeners.next();
PMDDirectoryReturnedEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
PMDDirectoryReturnedEvent.java,listener = (PMDDirectoryReturnedEventListener) listeners.next();,if (listeners != null ) listener = (PMDDirectoryReturnedEventListener) listeners.next();
PMDDirectoryReturnedEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
PMDDirectoryReturnedEvent.java,listener = (PMDDirectoryReturnedEventListener) listeners.next();,if (listeners != null ) listener = (PMDDirectoryReturnedEventListener) listeners.next();
RuleSetChangedEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
RuleSetChangedEvent.java,listener = (RuleSetChangedEventListener) listeners.next();,if (listeners != null ) listener = (RuleSetChangedEventListener) listeners.next();
RuleSetChangedEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
RuleSetChangedEvent.java,listener = (RuleSetChangedEventListener) listeners.next();,if (listeners != null ) listener = (RuleSetChangedEventListener) listeners.next();
RuleSetEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
RuleSetEvent.java,listener = (RuleSetEventListener) listeners.next();,if (listeners != null ) listener = (RuleSetEventListener) listeners.next();
RulesEditingEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
RulesEditingEvent.java,listener = (RulesEditingEventListener) listeners.next();,if (listeners != null ) listener = (RulesEditingEventListener) listeners.next();
RulesEditingEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
RulesEditingEvent.java,listener = (RulesEditingEventListener) listeners.next();,if (listeners != null ) listener = (RulesEditingEventListener) listeners.next();
RulesInMemoryEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
RulesInMemoryEvent.java,listener = (RulesInMemoryEventListener) listeners.next();,if (listeners != null ) listener = (RulesInMemoryEventListener) listeners.next();
RulesInMemoryEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
RulesInMemoryEvent.java,listener = (RulesInMemoryEventListener) listeners.next();,if (listeners != null ) listener = (RulesInMemoryEventListener) listeners.next();
RulesInMemoryEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
RulesInMemoryEvent.java,listener = (RulesInMemoryEventListener) listeners.next();,if (listeners != null ) listener = (RulesInMemoryEventListener) listeners.next();
RulesTreeModelEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
RulesTreeModelEvent.java,listener = (RulesTreeModelEventListener) listeners.next();,if (listeners != null ) listener = (RulesTreeModelEventListener) listeners.next();
RulesTreeModelEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
RulesTreeModelEvent.java,listener = (RulesTreeModelEventListener) listeners.next();,if (listeners != null ) listener = (RulesTreeModelEventListener) listeners.next();
RulesTreeModelEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
RulesTreeModelEvent.java,listener = (RulesTreeModelEventListener) listeners.next();,if (listeners != null ) listener = (RulesTreeModelEventListener) listeners.next();
SearchDirectoryEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
SearchDirectoryEvent.java,listener = (SearchDirectoryEventListener) listeners.next();,if (listeners != null ) listener = (SearchDirectoryEventListener) listeners.next();
SearchRuleEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
SearchRuleEvent.java,listener = (SearchRuleEventListener) listeners.next();,if (listeners != null ) listener = (SearchRuleEventListener) listeners.next();
SetupFilesEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
SetupFilesEvent.java,listener = (SetupFilesEventListener) listeners.next();,if (listeners != null ) listener = (SetupFilesEventListener) listeners.next();
SetupFilesEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
SetupFilesEvent.java,listener = (SetupFilesEventListener) listeners.next();,if (listeners != null ) listener = (SetupFilesEventListener) listeners.next();
SetupFilesEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
SetupFilesEvent.java,listener = (SetupFilesEventListener) listeners.next();,if (listeners != null ) listener = (SetupFilesEventListener) listeners.next();
StatusBarEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
StatusBarEvent.java,listener = (StatusBarEventListener) listeners.next();,if (listeners != null ) listener = (StatusBarEventListener) listeners.next();
StatusBarEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
StatusBarEvent.java,listener = (StatusBarEventListener) listeners.next();,if (listeners != null ) listener = (StatusBarEventListener) listeners.next();
StatusBarEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
StatusBarEvent.java,listener = (StatusBarEventListener) listeners.next();,if (listeners != null ) listener = (StatusBarEventListener) listeners.next();
TextAnalysisResultsEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
TextAnalysisResultsEvent.java,listener = (TextAnalysisResultsEventListener) listeners.next();,if (listeners != null ) listener = (TextAnalysisResultsEventListener) listeners.next();
TextAnalysisResultsEvent.java,Iterator listeners = listenerList.iterator();,if (listenerList != null ) Iterator listeners = listenerList.iterator();
TextAnalysisResultsEvent.java,listener = (TextAnalysisResultsEventListener) listeners.next();,if (listeners != null ) listener = (TextAnalysisResultsEventListener) listeners.next();
CPDDuplicateCodeViewer.java,"final Buffer buffer = jEdit.openFile(view,duplicate.getFilename());","if (jEdit != null ) final Buffer buffer = jEdit.openFile(view,duplicate.getFilename());"
CPDDuplicateCodeViewer.java,int start = buffer.getLineStartOffset(duplicate.getBeginLine());,if (buffer != null ) int start = buffer.getLineStartOffset(duplicate.getBeginLine());
PMDJEditPlugin.java,Buffer buffer = jEdit.getFirstBuffer();,if (jEdit != null ) Buffer buffer = jEdit.getFirstBuffer();
PMDJEditPlugin.java,buffer = buffer.getNext();,if (buffer != null ) buffer = buffer.getNext();
SimpleNodeTest.java,Iterator iter = methods.iterator();,if (methods != null ) Iterator iter = methods.iterator();
VBHTMLRenderer.java,Iterator iter = report.iterator();,if (report != null ) Iterator iter = report.iterator();
VBHTMLRenderer.java,iter = report.errors();,if (report != null ) iter = report.errors();
CPDCheckProjectAction.java,Object sel = targetPart.getSite().getSelectionProvider();,if (targetPart != null ) Object sel = targetPart.getSite().getSelectionProvider();
CPDCheckProjectAction.java,Object obj = iter.next();,if (iter != null ) Object obj = iter.next();
CPDCheckProjectAction.java,Results results = cpd.getResults();,if (cpd != null ) Results results = cpd.getResults();
CPDCheckProjectAction.java,Tile tile = (Tile) iter.next();,if (iter != null ) Tile tile = (Tile) iter.next();
HTMLResultRenderer.java,String hexValue = Integer.toHexString(pmdGray.getRGB());,if (Integer != null ) String hexValue = Integer.toHexString(pmdGray.getRGB());
PMDPlugin.java,String srcDir = (String)iter.next();,if ((String)iter != null ) String srcDir = (String)iter.next();
PMDPlugin.java,File fileName = (File)fileIter.next();,if ((File)fileIter != null ) File fileName = (File)fileIter.next();
PMDPlugin.java,RuleViolation rv = (RuleViolation)i.next();,if ((RuleViolation)i != null ) RuleViolation rv = (RuleViolation)i.next();
RuleSetFactory.java,rule = externalRuleSet.getRuleByName(externalRuleID.getRuleName());,if (externalRuleSet != null ) rule = externalRuleSet.getRuleByName(externalRuleID.getRuleName());
RuleSetFactory.java,Node node = ruleNode.getFirstChild();,if (ruleNode != null ) Node node = ruleNode.getFirstChild();
RuleSetFactory.java,Node propNode = node.getFirstChild().getNextSibling();,if (node != null ) Node propNode = node.getFirstChild().getNextSibling();
RuleSetFactory.java,Node xpathExprNode = propNode.getFirstChild().getNextSibling();,if (propNode != null ) Node xpathExprNode = propNode.getFirstChild().getNextSibling();
RuleSetFactory.java,propNode = propNode.getNextSibling().getNextSibling();,if (propNode != null ) propNode = propNode.getNextSibling().getNextSibling();
RuleSetFactory.java,node = node.getNextSibling();,if (node != null ) node = node.getNextSibling();
PMDTask.java,Rule rule = (Rule)i.next();,if ((Rule)i != null ) Rule rule = (Rule)i.next();
CPDTask.java,FileSet fs = (FileSet) i.next();,if (i != null ) FileSet fs = (FileSet) i.next();
CPDTask.java,String[] srcFiles = ds.getIncludedFiles();,if (ds != null ) String[] srcFiles = ds.getIncludedFiles();
CPDTask.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
CPDTask.java,long stop = System.currentTimeMillis();,if (System != null ) long stop = System.currentTimeMillis();
CPDTask.java,Writer writer = getToFileWriter(project.getBaseDir().toString());,if (getToFileWriter(project != null ) Writer writer = getToFileWriter(project.getBaseDir().toString());
SelectedRules.java,RuleSet rs = (RuleSet)i.next();,if ((RuleSet)i != null ) RuleSet rs = (RuleSet)i.next();
SelectedRules.java,Rule rule = (Rule)j.next();,if ((Rule)j != null ) Rule rule = (Rule)j.next();
SelectedRules.java,Rule rule = (Rule)i.next();,if ((Rule)i != null ) Rule rule = (Rule)i.next();
SelectedRules.java,Rule rule = (Rule)i.next();,if ((Rule)i != null ) Rule rule = (Rule)i.next();
SelectedRules.java,Rule rule = (Rule)i.next();,if ((Rule)i != null ) Rule rule = (Rule)i.next();
PMDPlugin.java,String srcDir = (String)iter.next();,if ((String)iter != null ) String srcDir = (String)iter.next();
PMDPlugin.java,File fileName = (File)fileIter.next();,if ((File)fileIter != null ) File fileName = (File)fileIter.next();
PMDPlugin.java,JFrame newFrame = createProblemFrame(ctx.getReport());,if (createProblemFrame(ctx != null ) JFrame newFrame = createProblemFrame(ctx.getReport());
PMDJEditPlugin.java,JEditTextArea textArea = view.getTextArea();,if (view != null ) JEditTextArea textArea = view.getTextArea();
PMDPlugin.java,RuleViolation rv = (RuleViolation)i.next();,if ((RuleViolation)i != null ) RuleViolation rv = (RuleViolation)i.next();
PositionalIterator3.java,Iterator i = (new List()).iterator();,if (List()) != null ) Iterator i = (new List()).iterator();
PositionalIterator3.java,Iterator j = (new List()).iterator();,if (List()) != null ) Iterator j = (new List()).iterator();
SymbolFacadeTest.java,ASTCompilationUnit c = parser.CompilationUnit();,if (parser != null ) ASTCompilationUnit c = parser.CompilationUnit();
PMDJEditPlugin.java,String path = buffer.getPath();,if (buffer != null ) String path = buffer.getPath();
PMDJEditPlugin.java,RuleViolation rv = (RuleViolation)i.next();,if ((RuleViolation)i != null ) RuleViolation rv = (RuleViolation)i.next();
PMDJEditPlugin.java,File file = (File)i.next();,if ((File)i != null ) File file = (File)i.next();
PMDJEditPlugin.java,RuleViolation rv = (RuleViolation)j.next();,if ((RuleViolation)j != null ) RuleViolation rv = (RuleViolation)j.next();
PMDPlugin.java,RuleViolation rv = (RuleViolation)i.next();,if ((RuleViolation)i != null ) RuleViolation rv = (RuleViolation)i.next();
PMDTask.java,Formatter f = (Formatter) i.next();,if (i != null ) Formatter f = (Formatter) i.next();
PMDTask.java,Rule rule = (Rule)i.next();,if ((Rule)i != null ) Rule rule = (Rule)i.next();
CPD.java,Match match = (Match)i.next();,if ((Match)i != null ) Match match = (Match)i.next();
CPD.java,Mark mark = (Mark)occurrences.next();,if ((Mark)occurrences != null ) Mark mark = (Mark)occurrences.next();
GUI.java,String report = cpd.getReport();,if (cpd != null ) String report = cpd.getReport();
SettingsPanel.java,JList list = new CheckboxList(rules.getAllBoxes());,if (CheckboxList(rules != null ) JList list = new CheckboxList(rules.getAllBoxes());
CPD.java,TokenList tl = (TokenList)i.next();,if ((TokenList)i != null ) TokenList tl = (TokenList)i.next();
CPD.java,TokenEntry te = (TokenEntry)j.next();,if ((TokenEntry)j != null ) TokenEntry te = (TokenEntry)j.next();
CPD.java,TokenList tokenList = tokenSets.getTokenList(mark.getFile());,if (tokenSets != null ) TokenList tokenList = tokenSets.getTokenList(mark.getFile());
CPD.java,TokenList ts = new TokenList(file.getAbsolutePath());,if (TokenList(file != null ) TokenList ts = new TokenList(file.getAbsolutePath());
Scanner.java,PMDAnnotation annotation = PMDAnnotation.getNewInstance();,if (PMDAnnotation != null ) PMDAnnotation annotation = PMDAnnotation.getNewInstance();
JavaParser.java,int[] oldentry = (int[]) (enum.nextElement());,if ((enum != null ) int[] oldentry = (int[]) (enum.nextElement());
TokenSets.java,TokenList tl = (TokenList) i.next();,if (i != null ) TokenList tl = (TokenList) i.next();
TokenSets.java,total += tl.size();,if (tl != null ) total += tl.size();
TokenSets.java,TokenList ts = (TokenList) i.next();,if (i != null ) TokenList ts = (TokenList) i.next();
Mark.java,this.offset = code.size();,if (code != null ) this.offset = code.size();
CPD.java,char[] chars = te.getImage().toCharArray();,if (te != null ) char[] chars = te.getImage().toCharArray();
MatchAlgorithm.java,MyToken token = (MyToken)iter.next();,if ((MyToken)iter != null ) MyToken token = (MyToken)iter.next();
CPD.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
CPDTest.java,Results results = cpd.getResults();,if (cpd != null ) Results results = cpd.getResults();
CPDTest.java,TokenEntry tok = (TokenEntry) i.next();,if (i != null ) TokenEntry tok = (TokenEntry) i.next();
CPDTest.java,Results results = cpd.getResults();,if (cpd != null ) Results results = cpd.getResults();
CPDTest.java,TokenEntry tok = (TokenEntry) i.next();,if (i != null ) TokenEntry tok = (TokenEntry) i.next();
GSTTest.java,Results results = gst.crunch();,if (gst != null ) Results results = gst.crunch();
GSTTest.java,TokenEntry tok = (TokenEntry) occs.next();,if (occs != null ) TokenEntry tok = (TokenEntry) occs.next();
OccurrencesTest.java,TokenEntry tok = (TokenEntry) i.next();,if (i != null ) TokenEntry tok = (TokenEntry) i.next();
ResultsTest.java,Tile tile = new Tile(CPDTest.getHelloTokens());,if (Tile(CPDTest != null ) Tile tile = new Tile(CPDTest.getHelloTokens());
TileTest.java,Tile tileCopy = tile.copy();,if (tile != null ) Tile tileCopy = tile.copy();
CPD.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
GST.java,Tile tile = (Tile) i.next();,if (i != null ) Tile tile = (Tile) i.next();
GST.java,int totalTiles = occ.size();,if (occ != null ) int totalTiles = occ.size();
GST.java,Tile tile = (Tile) i.next();,if (i != null ) Tile tile = (Tile) i.next();
GST.java,TokenEntry tok = (TokenEntry) i.next();,if (i != null ) TokenEntry tok = (TokenEntry) i.next();
GST.java,Tile newTile = tile.copy();,if (tile != null ) Tile newTile = tile.copy();
Occurrences.java,int totalCount = tss.tokenCount();,if (tss != null ) int totalCount = tss.tokenCount();
Occurrences.java,TokenList ts = (TokenList) j.next();,if (j != null ) TokenList ts = (TokenList) j.next();
Occurrences.java,doneSoFar += ts.size();,if (ts != null ) doneSoFar += ts.size();
Occurrences.java,TokenEntry tok = (TokenEntry) i.next();,if (i != null ) TokenEntry tok = (TokenEntry) i.next();
Occurrences.java,Tile tile = (Tile) i.next();,if (i != null ) Tile tile = (Tile) i.next();
Occurrences.java,Tile tile = (Tile) i.next();,if (i != null ) Tile tile = (Tile) i.next();
TextRenderer.java,Results results = cpd.getResults();,if (cpd != null ) Results results = cpd.getResults();
TextRenderer.java,Tile tile = (Tile) i.next();,if (i != null ) Tile tile = (Tile) i.next();
TextRenderer.java,TokenEntry tok = (TokenEntry) j.next();,if (j != null ) TokenEntry tok = (TokenEntry) j.next();
Tile.java,TokenEntry tok = (TokenEntry) i.next();,if (i != null ) TokenEntry tok = (TokenEntry) i.next();
Tile.java,TokenEntry token = (TokenEntry) i.next();,if (i != null ) TokenEntry token = (TokenEntry) i.next();
TokenList.java,int nextTokenIndex = tok.getIndex() + tile.getTokenCount();,if (tile != null ) int nextTokenIndex = tok.getIndex() + tile.getTokenCount();
CPD.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
JUnitStaticSuiteRule.java,AccessNode parent = (AccessNode) node.jjtGetParent();,if (node != null ) AccessNode parent = (AccessNode) node.jjtGetParent();
ConfigUtils.java,Iterator iterator = ruleSetFactory.getRegisteredRuleSets();,if (ruleSetFactory != null ) Iterator iterator = ruleSetFactory.getRegisteredRuleSets();
ConfigUtils.java,RuleSet ruleset = ( RuleSet )iterator.next();,if ()iterator != null ) RuleSet ruleset = ( RuleSet )iterator.next();
RuleSetChooser.java,remove = new javax.swing.JButton();,if (javax != null ) remove = new javax.swing.JButton();
RuleSetChooser.java,add = new javax.swing.JButton();,if (javax != null ) add = new javax.swing.JButton();
RuleSetChooserEditor.java,ListModel model = chooser.getListModel();,if (chooser != null ) ListModel model = chooser.getListModel();
RuleSetChooserEditor.java,DefaultListModel model = chooser.getListModel();,if (chooser != null ) DefaultListModel model = chooser.getListModel();
RuleSetChooserEditor.java,int tokens = tokenizer.countTokens();,if (tokenizer != null ) int tokens = tokenizer.countTokens();
RuleClassLoader.java,String classPath = PMDOptionsSettings.getDefault().getClasspath();,if (PMDOptionsSettings != null ) String classPath = PMDOptionsSettings.getDefault().getClasspath();
RuleSetFactoryTest.java,Iterator i = rs.getRules().iterator();,if (rs != null ) Iterator i = rs.getRules().iterator();
RuleSetFactoryTest.java,Rule rule = (Rule) i.next();,if (i != null ) Rule rule = (Rule) i.next();
PMDVisitor.java,Iterator iter = context.getReport().iterator();,if (context != null ) Iterator iter = context.getReport().iterator();
PMDVisitor.java,RuleViolation violation = (RuleViolation) iter.next();,if (iter != null ) RuleViolation violation = (RuleViolation) iter.next();
PMDPlugin.java,ResourceBundle bundle= PMDPlugin.getDefault().getResourceBundle();,if (PMDPlugin != null ) ResourceBundle bundle= PMDPlugin.getDefault().getResourceBundle();
PMDPlugin.java,int tokenCount = tokenizer.countTokens();,if (tokenizer != null ) int tokenCount = tokenizer.countTokens();
PMDPlugin.java,elements[i] = tokenizer.nextToken();,if (tokenizer != null ) elements[i] = tokenizer.nextToken();
CPDCheckProjectAction.java,Object sel = targetPart.getSite().getSelectionProvider();,if (targetPart != null ) Object sel = targetPart.getSite().getSelectionProvider();
CPDCheckProjectAction.java,Object obj = iter.next();,if (iter != null ) Object obj = iter.next();
CPDCheckProjectAction.java,Results results = cpd.getResults();,if (cpd != null ) Results results = cpd.getResults();
CPDCheckProjectAction.java,Tile tile = (Tile) iter.next();,if (iter != null ) Tile tile = (Tile) iter.next();
PMDAction.java,String[] rulesetFiles = PMDPlugin.getDefault().getRuleSetsPreference();,if (PMDPlugin != null ) String[] rulesetFiles = PMDPlugin.getDefault().getRuleSetsPreference();
PMDCheckFileAction.java,String[] rulesetFiles = PMDPlugin.getDefault().getRuleSetsPreference();,if (PMDPlugin != null ) String[] rulesetFiles = PMDPlugin.getDefault().getRuleSetsPreference();
PMDCheckFileAction.java,Object obj = iter.next();,if (iter != null ) Object obj = iter.next();
PMDCheckProjectAction.java,String[] rulesetFiles = PMDPlugin.getDefault().getRuleSetsPreference();,if (PMDPlugin != null ) String[] rulesetFiles = PMDPlugin.getDefault().getRuleSetsPreference();
IfElseStmtsMustUseBracesRule.java,lineNumberOfLastViolation = node.getBeginLine();,if (node != null ) lineNumberOfLastViolation = node.getBeginLine();
IfStmtsMustUseBracesRule.java,lineNumberOfLastViolation = node.getBeginLine();,if (node != null ) lineNumberOfLastViolation = node.getBeginLine();
LongVariableRule.java,String image = decl.getImage();,if (decl != null ) String image = decl.getImage();
ShortVariableRule.java,String image = decl.getImage();,if (decl != null ) String image = decl.getImage();
ShortVariableRule.java,parent = parent.jjtGetParent();,if (parent != null ) parent = parent.jjtGetParent();
ShortMethodNameRule.java,String image = decl.getImage();,if (decl != null ) String image = decl.getImage();
EmptyFinallyBlockRule.java,ASTBlock finallyBlock = node.getFinallyBlock();,if (node != null ) ASTBlock finallyBlock = node.getFinallyBlock();
ForLoopShouldBeWhileLoopRule.java,"RuleViolation rv = createRuleViolation(ctx, node.getBeginLine());","if (node != null ) RuleViolation rv = createRuleViolation(ctx, node.getBeginLine());"
JumbledIncrementerRule.java,Node forUpdate = (Node) i.next();,if (i != null ) Node forUpdate = (Node) i.next();
OverrideBothEqualsAndHashcodeRule.java,AccessNode parent = (AccessNode) node.jjtGetParent();,if (node != null ) AccessNode parent = (AccessNode) node.jjtGetParent();
MockRule.java,Report report = ctx.getReport();,if (ctx != null ) Report report = ctx.getReport();
MockRule.java,Iterator vs = violations.iterator();,if (violations != null ) Iterator vs = violations.iterator();
ReportTest.java,Object o = ms.next();,if (ms != null ) Object o = ms.next();
RuleSetFactoryTest.java,Rule rule = (Rule)i.next();,if ((Rule)i != null ) Rule rule = (Rule)i.next();
RuleSetTest.java,Iterator expected = values.iterator();,if (values != null ) Iterator expected = values.iterator();
ClassDeclTest.java,Iterator i = classes.iterator();,if (classes != null ) Iterator i = classes.iterator();
FieldDeclTest.java,Iterator i = fields.iterator();,if (fields != null ) Iterator i = fields.iterator();
MethodDeclTest.java,Iterator i = methods.iterator();,if (methods != null ) Iterator i = methods.iterator();
ParserTst.java,ASTCompilationUnit cu = parser.CompilationUnit();,if (parser != null ) ASTCompilationUnit cu = parser.CompilationUnit();
SimpleNodeTest.java,Iterator iter = methods.iterator();,if (methods != null ) Iterator iter = methods.iterator();
SimpleNodeTest.java,Iterator iter = methods.iterator();,if (methods != null ) Iterator iter = methods.iterator();
SimpleNodeTest.java,Iterator iter = methods.iterator();,if (methods != null ) Iterator iter = methods.iterator();
SimpleNodeTest.java,Iterator iter = uCD.iterator();,if (uCD != null ) Iterator iter = uCD.iterator();
CPDTest.java,TokenEntry tok = (TokenEntry)i.next();,if ((TokenEntry)i != null ) TokenEntry tok = (TokenEntry)i.next();
CPDTest.java,TokenEntry tok = (TokenEntry)i.next();,if ((TokenEntry)i != null ) TokenEntry tok = (TokenEntry)i.next();
GSTTest.java,TokenEntry tok = (TokenEntry)occs.next();,if ((TokenEntry)occs != null ) TokenEntry tok = (TokenEntry)occs.next();
OccurrencesTest.java,TokenEntry tok = (TokenEntry)i.next();,if ((TokenEntry)i != null ) TokenEntry tok = (TokenEntry)i.next();
XMLRendererTest.java,Iterator i = strings.iterator();,if (strings != null ) Iterator i = strings.iterator();
XMLRendererTest.java,String str = (String) i.next();,if (i != null ) String str = (String) i.next();
CyclomaticComplexityRuleTest.java,RuleViolation rv = (RuleViolation)i.next();,if ((RuleViolation)i != null ) RuleViolation rv = (RuleViolation)i.next();
CyclomaticComplexityRuleTest.java,RuleViolation rv = (RuleViolation)i.next();,if ((RuleViolation)i != null ) RuleViolation rv = (RuleViolation)i.next();
CyclomaticComplexityRuleTest.java,RuleViolation rv = (RuleViolation)i.next();,if ((RuleViolation)i != null ) RuleViolation rv = (RuleViolation)i.next();
MetricTest.java,int count = random.nextInt();,if (random != null ) int count = random.nextInt();
MetricTest.java,double total = random.nextDouble();,if (random != null ) double total = random.nextDouble();
MetricTest.java,double low = random.nextDouble();,if (random != null ) double low = random.nextDouble();
MetricTest.java,double high = random.nextDouble();,if (random != null ) double high = random.nextDouble();
MetricTest.java,double mean = random.nextDouble();,if (random != null ) double mean = random.nextDouble();
MetricTest.java,double stdev = random.nextDouble();,if (random != null ) double stdev = random.nextDouble();
StatisticalRuleTest.java,Iterator metrics = report.metrics();,if (report != null ) Iterator metrics = report.metrics();
StatisticalRuleTest.java,Object o = metrics.next();,if (metrics != null ) Object o = metrics.next();
AbstractScopeTest.java,NameDeclaration decl = (NameDeclaration)i.next();,if ((NameDeclaration)i != null ) NameDeclaration decl = (NameDeclaration)i.next();
SymbolFacadeTest.java,ASTCompilationUnit c = parser.CompilationUnit();,if (parser != null ) ASTCompilationUnit c = parser.CompilationUnit();
AbstractRule.java,ASTCompilationUnit node = (ASTCompilationUnit)i.next();,if ((ASTCompilationUnit)i != null ) ASTCompilationUnit node = (ASTCompilationUnit)i.next();
PMD.java,File file = (File)i.next();,if ((File)i != null ) File file = (File)i.next();
ProjectFile.java,SAXParserFactory factory = SAXParserFactory.newInstance();,if (SAXParserFactory != null ) SAXParserFactory factory = SAXParserFactory.newInstance();
Report.java,ReportListener listener = (ReportListener)i.next();,if ((ReportListener)i != null ) ReportListener listener = (ReportListener)i.next();
Report.java,ReportListener listener = (ReportListener) i.next();,if (i != null ) ReportListener listener = (ReportListener) i.next();
RuleSet.java,Rule r = (Rule)i.next();,if ((Rule)i != null ) Rule r = (Rule)i.next();
RuleSet.java,Iterator rs = rules.iterator();,if (rules != null ) Iterator rs = rules.iterator();
RuleSet.java,Rule rule = (Rule) rs.next();,if (rs != null ) Rule rule = (Rule) rs.next();
RuleSetReader.java,SAXParserFactory factory = SAXParserFactory.newInstance();,if (SAXParserFactory != null ) SAXParserFactory factory = SAXParserFactory.newInstance();
PMDTask.java,Formatter f = (Formatter)i.next();,if ((Formatter)i != null ) Formatter f = (Formatter)i.next();
PMDTask.java,Formatter formatter = (Formatter)i.next();,if ((Formatter)i != null ) Formatter formatter = (Formatter)i.next();
JJTJavaParserState.java,nodes = new java.util.Stack();,if (java != null ) nodes = new java.util.Stack();
JJTJavaParserState.java,marks = new java.util.Stack();,if (java != null ) marks = new java.util.Stack();
JavaParser.java,int[] oldentry = (int[])(enum.nextElement());,if ((int[])(enum != null ) int[] oldentry = (int[])(enum.nextElement());
GST.java,Tile tile = (Tile)i.next();,if ((Tile)i != null ) Tile tile = (Tile)i.next();
GST.java,Tile tile = (Tile)i.next();,if ((Tile)i != null ) Tile tile = (Tile)i.next();
GST.java,TokenEntry tok = (TokenEntry)i.next();,if ((TokenEntry)i != null ) TokenEntry tok = (TokenEntry)i.next();
Occurrences.java,TokenList ts = (TokenList)j.next();,if ((TokenList)j != null ) TokenList ts = (TokenList)j.next();
Occurrences.java,TokenEntry tok = (TokenEntry)i.next();,if ((TokenEntry)i != null ) TokenEntry tok = (TokenEntry)i.next();
Occurrences.java,Tile tile = (Tile)i.next();,if ((Tile)i != null ) Tile tile = (Tile)i.next();
Occurrences.java,Tile tile = (Tile)i.next();,if ((Tile)i != null ) Tile tile = (Tile)i.next();
TextRenderer.java,Tile tile = (Tile)i.next();,if ((Tile)i != null ) Tile tile = (Tile)i.next();
TextRenderer.java,TokenEntry tok = (TokenEntry)j.next();,if ((TokenEntry)j != null ) TokenEntry tok = (TokenEntry)j.next();
Tile.java,TokenEntry tok = (TokenEntry)i.next();,if ((TokenEntry)i != null ) TokenEntry tok = (TokenEntry)i.next();
Tile.java,TokenEntry token = (TokenEntry)i.next();,if ((TokenEntry)i != null ) TokenEntry token = (TokenEntry)i.next();
TokenSets.java,TokenList tl = (TokenList)i.next();,if ((TokenList)i != null ) TokenList tl = (TokenList)i.next();
TokenSets.java,TokenList ts = (TokenList)i.next();,if ((TokenList)i != null ) TokenList ts = (TokenList)i.next();
IDEAJRenderer.java,String path = (String)i.next();,if ((String)i != null ) String path = (String)i.next();
XMLRenderer.java,Report.ProcessingError pe = (Report.ProcessingError)i.next();,if ((Report != null ) Report.ProcessingError pe = (Report.ProcessingError)i.next();
AccessorClassGenerationRule.java,for(ListIterator li = classQualifyingNames.listIterator(classQualifyingNames.size());li.hasPrevious();){,if (classQualifyingNames != null ) for(ListIterator li = classQualifyingNames.listIterator(classQualifyingNames.size());li.hasPrevious();){
AccessorClassGenerationRule.java,String aName = (String)li.previous();,if ((String)li != null ) String aName = (String)li.previous();
AccessorClassGenerationRule.java,for(Iterator outerIterator = classDataList.iterator();outerIterator.hasNext();){,if (classDataList != null ) for(Iterator outerIterator = classDataList.iterator();outerIterator.hasNext();){
AccessorClassGenerationRule.java,ClassData outerDataSet = (ClassData)outerIterator.next();,if ((ClassData)outerIterator != null ) ClassData outerDataSet = (ClassData)outerIterator.next();
AccessorClassGenerationRule.java,for(Iterator constructors = outerDataSet.getPrivateConstructorIterator();constructors.hasNext();){,if (outerDataSet != null ) for(Iterator constructors = outerDataSet.getPrivateConstructorIterator();constructors.hasNext();){
AccessorClassGenerationRule.java,ASTConstructorDeclaration cd = (ASTConstructorDeclaration)constructors.next();,if ((ASTConstructorDeclaration)constructors != null ) ASTConstructorDeclaration cd = (ASTConstructorDeclaration)constructors.next();
AccessorClassGenerationRule.java,for(Iterator innerIterator = classDataList.iterator();innerIterator.hasNext();){,if (classDataList != null ) for(Iterator innerIterator = classDataList.iterator();innerIterator.hasNext();){
AccessorClassGenerationRule.java,ClassData innerDataSet = (ClassData)innerIterator.next();,if ((ClassData)innerIterator != null ) ClassData innerDataSet = (ClassData)innerIterator.next();
AccessorClassGenerationRule.java,for(Iterator allocations = innerDataSet.getInstantiationIterator();allocations.hasNext();){,if (innerDataSet != null ) for(Iterator allocations = innerDataSet.getInstantiationIterator();allocations.hasNext();){
AccessorClassGenerationRule.java,AllocData ad = (AllocData)allocations.next();,if ((AllocData)allocations != null ) AllocData ad = (AllocData)allocations.next();
AccessorClassGenerationRule.java,String className = node.getUnmodifedInterfaceDeclaration().getImage();,if (node != null ) String className = node.getUnmodifedInterfaceDeclaration().getImage();
AccessorClassGenerationRule.java,String className = node.getUnmodifedInterfaceDeclaration().getImage();,if (node != null ) String className = node.getUnmodifedInterfaceDeclaration().getImage();
AvoidDuplicateLiteralsRule.java,String key = (String)i.next();,if ((String)i != null ) String key = (String)i.next();
AvoidReassigningParametersRule.java,VariableNameDeclaration decl = (VariableNameDeclaration)i.next();,if ((VariableNameDeclaration)i != null ) VariableNameDeclaration decl = (VariableNameDeclaration)i.next();
AvoidReassigningParametersRule.java,NameOccurrence occ = (NameOccurrence)j.next();,if ((NameOccurrence)j != null ) NameOccurrence occ = (NameOccurrence)j.next();
ConstructorCallsOverridableMethodRule.java,int i = node.jjtGetNumChildren();,if (node != null ) int i = node.jjtGetNumChildren();
ConstructorCallsOverridableMethodRule.java,int numOfArguments = args.getArgumentCount();,if (args != null ) int numOfArguments = args.getArgumentCount();
ConstructorCallsOverridableMethodRule.java,String name = child.getImage();//special case,if (case != null ) String name = child.getImage();//special case
ConstructorCallsOverridableMethodRule.java,String value = st.nextToken();,if (st != null ) String value = st.nextToken();
ConstructorCallsOverridableMethodRule.java,for(Iterator it = pkg.iterator();it.hasNext();){,if (pkg != null ) for(Iterator it = pkg.iterator();it.hasNext();){
ConstructorCallsOverridableMethodRule.java,String name = (String)it.next();,if ((String)it != null ) String name = (String)it.next();
ConstructorCallsOverridableMethodRule.java,for(Iterator it = vars.iterator();it.hasNext();){,if (vars != null ) for(Iterator it = vars.iterator();it.hasNext();){
ConstructorCallsOverridableMethodRule.java,String name = (String)it.next();,if ((String)it != null ) String name = (String)it.next();
ConstructorCallsOverridableMethodRule.java,for(Iterator it = getCurrentEvalPackage().calledMethods.iterator();it.hasNext();){,if (getCurrentEvalPackage() != null ) for(Iterator it = getCurrentEvalPackage().calledMethods.iterator();it.hasNext();){
ConstructorCallsOverridableMethodRule.java,MethodInvocation meth = (MethodInvocation) it.next();,if (it != null ) MethodInvocation meth = (MethodInvocation) it.next();
ConstructorCallsOverridableMethodRule.java,String methName = h.getASTMethodDeclarator().getImage();,if (h != null ) String methName = h.getASTMethodDeclarator().getImage();
ConstructorCallsOverridableMethodRule.java,int count = h.getASTMethodDeclarator().getParameterCount();,if (h != null ) int count = h.getASTMethodDeclarator().getParameterCount();
ConstructorCallsOverridableMethodRule.java,ConstructorHolder ch = (ConstructorHolder) privConstIter.next();,if (privConstIter != null ) ConstructorHolder ch = (ConstructorHolder) privConstIter.next();
ConstructorCallsOverridableMethodRule.java,int paramCount = ch.getASTConstructorDeclaration().getParameterCount();,if (ch != null ) int paramCount = ch.getASTConstructorDeclaration().getParameterCount();
ConstructorCallsOverridableMethodRule.java,for(Iterator calledConstIter = getCurrentEvalPackage().calledConstructors.iterator();calledConstIter.hasNext();){,if (getCurrentEvalPackage() != null ) for(Iterator calledConstIter = getCurrentEvalPackage().calledConstructors.iterator();calledConstIter.hasNext();){
ConstructorCallsOverridableMethodRule.java,ConstructorInvocation ci = (ConstructorInvocation) calledConstIter.next();,if (calledConstIter != null ) ConstructorInvocation ci = (ConstructorInvocation) calledConstIter.next();
ConstructorCallsOverridableMethodRule.java,for(Iterator methodsIter = classMethodMap.keySet().iterator();methodsIter.hasNext();){,if (classMethodMap != null ) for(Iterator methodsIter = classMethodMap.keySet().iterator();methodsIter.hasNext();){
ConstructorCallsOverridableMethodRule.java,MethodHolder h = (MethodHolder)methodsIter.next();,if ((MethodHolder)methodsIter != null ) MethodHolder h = (MethodHolder)methodsIter.next();
ConstructorCallsOverridableMethodRule.java,for(Iterator calledMethsIter = calledMeths.iterator();calledMethsIter.hasNext() && (h.isDangerous() == false);){,if (false);){ != null ) for(Iterator calledMethsIter = calledMeths.iterator();calledMethsIter.hasNext() && (h.isDangerous() == false);){
ConstructorCallsOverridableMethodRule.java,MethodInvocation meth = (MethodInvocation) calledMethsIter.next();,if (calledMethsIter != null ) MethodInvocation meth = (MethodInvocation) calledMethsIter.next();
ConstructorCallsOverridableMethodRule.java,for(Iterator innerMethsIter = classMethodMap.keySet().iterator();innerMethsIter.hasNext();){ //need to skip self here h == h3,if (h3 != null ) for(Iterator innerMethsIter = classMethodMap.keySet().iterator();innerMethsIter.hasNext();){ //need to skip self here h == h3
ConstructorCallsOverridableMethodRule.java,for(Iterator constIter = classConstructorMap.keySet().iterator();constIter.hasNext();){,if (classConstructorMap != null ) for(Iterator constIter = classConstructorMap.keySet().iterator();constIter.hasNext();){
ConstructorCallsOverridableMethodRule.java,ConstructorHolder ch = (ConstructorHolder)constIter.next();,if ((ConstructorHolder)constIter != null ) ConstructorHolder ch = (ConstructorHolder)constIter.next();
ConstructorCallsOverridableMethodRule.java,"for(Iterator calledMethsIter = calledMeths.iterator();calledMethsIter.hasNext() && !ch.isDangerous();){//but thee are diff objects which represent same thing but were never evaluated, they need reevaluation","if (reevaluation != null ) for(Iterator calledMethsIter = calledMeths.iterator();calledMethsIter.hasNext() && !ch.isDangerous();){//but thee are diff objects which represent same thing but were never evaluated, they need reevaluation"
ConstructorCallsOverridableMethodRule.java,MethodInvocation meth = (MethodInvocation)calledMethsIter.next();//CCE,if ((MethodInvocation)calledMethsIter != null ) MethodInvocation meth = (MethodInvocation)calledMethsIter.next();//CCE
ConstructorCallsOverridableMethodRule.java,String methName = meth.getName();,if (meth != null ) String methName = meth.getName();
ConstructorCallsOverridableMethodRule.java,int methArgCount = meth.getArgumentCount();,if (meth != null ) int methArgCount = meth.getArgumentCount();
ConstructorCallsOverridableMethodRule.java,for(Iterator evaldMethsIter = evaluatedMethods.iterator();evaldMethsIter.hasNext();){,if (evaluatedMethods != null ) for(Iterator evaldMethsIter = evaluatedMethods.iterator();evaldMethsIter.hasNext();){
ConstructorCallsOverridableMethodRule.java,MethodHolder h = (MethodHolder)evaldMethsIter.next();,if ((MethodHolder)evaldMethsIter != null ) MethodHolder h = (MethodHolder)evaldMethsIter.next();
ConstructorCallsOverridableMethodRule.java,String matchName = h.getASTMethodDeclarator().getImage();,if (h != null ) String matchName = h.getASTMethodDeclarator().getImage();
ConstructorCallsOverridableMethodRule.java,int matchParamCount = h.getASTMethodDeclarator().getParameterCount();,if (h != null ) int matchParamCount = h.getASTMethodDeclarator().getParameterCount();
ConstructorCallsOverridableMethodRule.java,for(Iterator constIter = classConstructorMap.keySet().iterator();constIter.hasNext();){,if (classConstructorMap != null ) for(Iterator constIter = classConstructorMap.keySet().iterator();constIter.hasNext();){
ConstructorCallsOverridableMethodRule.java,ConstructorHolder ch = (ConstructorHolder)constIter.next();,if ((ConstructorHolder)constIter != null ) ConstructorHolder ch = (ConstructorHolder)constIter.next();
ConstructorCallsOverridableMethodRule.java,ConstructorInvocation calledC = ch.getCalledConstructor();,if (ch != null ) ConstructorInvocation calledC = ch.getCalledConstructor();
ConstructorCallsOverridableMethodRule.java,int cCount = calledC.getArgumentCount();,if (calledC != null ) int cCount = calledC.getArgumentCount();
ConstructorCallsOverridableMethodRule.java,"for(Iterator innerConstIter = classConstructorMap.keySet().iterator();innerConstIter.hasNext() && !ch.isDangerous();){ //forget skipping self because that introduces another check for each, but only 1 hit","if (hit != null ) for(Iterator innerConstIter = classConstructorMap.keySet().iterator();innerConstIter.hasNext() && !ch.isDangerous();){ //forget skipping self because that introduces another check for each, but only 1 hit"
ConstructorCallsOverridableMethodRule.java,ASTExplicitConstructorInvocation eci = ch.getASTExplicitConstructorInvocation();,if (ch != null ) ASTExplicitConstructorInvocation eci = ch.getASTExplicitConstructorInvocation();
ConstructorCallsOverridableMethodRule.java,AccessNode parent = (AccessNode)node.jjtGetParent();,if ((AccessNode)node != null ) AccessNode parent = (AccessNode)node.jjtGetParent();
ConstructorCallsOverridableMethodRule.java,for(Iterator it = expressions.iterator();it.hasNext();){,if (expressions != null ) for(Iterator it = expressions.iterator();it.hasNext();){
ConstructorCallsOverridableMethodRule.java,ASTPrimaryExpression ape = (ASTPrimaryExpression)it.next();,if ((ASTPrimaryExpression)it != null ) ASTPrimaryExpression ape = (ASTPrimaryExpression)it.next();
ConstructorCallsOverridableMethodRule.java,List packClass = meth.getQualifierNames();,if (meth != null ) List packClass = meth.getQualifierNames();
ConstructorCallsOverridableMethodRule.java,for(Iterator it = packClass.iterator();it.hasNext();){,if (packClass != null ) for(Iterator it = packClass.iterator();it.hasNext();){
ConstructorCallsOverridableMethodRule.java,String name = (String) it.next();,if (it != null ) String name = (String) it.next();
DuplicateImportsRule.java,ImportWrapper thisImportOnDemand = (ImportWrapper)i.next();,if ((ImportWrapper)i != null ) ImportWrapper thisImportOnDemand = (ImportWrapper)i.next();
DuplicateImportsRule.java,ImportWrapper thisSingleTypeImport = (ImportWrapper)j.next();,if ((ImportWrapper)j != null ) ImportWrapper thisSingleTypeImport = (ImportWrapper)j.next();
JumbledIncrementerRule.java,Node forUpdate = (Node)i.next();,if ((Node)i != null ) Node forUpdate = (Node)i.next();
OverrideBothEqualsAndHashcodeRule.java,AccessNode parent = (AccessNode)node.jjtGetParent();,if ((AccessNode)node != null ) AccessNode parent = (AccessNode)node.jjtGetParent();
ShortMethodNameRule.java,String image = decl.getImage();,if (decl != null ) String image = decl.getImage();
ShortVariableRule.java,String image = decl.getImage();,if (decl != null ) String image = decl.getImage();
ShortVariableRule.java,parent = parent.jjtGetParent();,if (parent != null ) parent = parent.jjtGetParent();
StringToStringRule.java,VariableNameDeclaration decl = (VariableNameDeclaration)i.next();,if ((VariableNameDeclaration)i != null ) VariableNameDeclaration decl = (VariableNameDeclaration)i.next();
StringToStringRule.java,NameOccurrence occ = (NameOccurrence)j.next();,if ((NameOccurrence)j != null ) NameOccurrence occ = (NameOccurrence)j.next();
UnusedFormalParameterRule.java,VariableNameDeclaration nameDecl = (VariableNameDeclaration)i.next();,if ((VariableNameDeclaration)i != null ) VariableNameDeclaration nameDecl = (VariableNameDeclaration)i.next();
UnusedImportsRule.java,ImportWrapper wrapper = (ImportWrapper)i.next();,if ((ImportWrapper)i != null ) ImportWrapper wrapper = (ImportWrapper)i.next();
UnusedLocalVariableRule.java,VariableNameDeclaration decl = (VariableNameDeclaration)i.next();,if ((VariableNameDeclaration)i != null ) VariableNameDeclaration decl = (VariableNameDeclaration)i.next();
UnusedPrivateFieldRule.java,VariableNameDeclaration decl = (VariableNameDeclaration)i.next();,if ((VariableNameDeclaration)i != null ) VariableNameDeclaration decl = (VariableNameDeclaration)i.next();
UnusedPrivateMethodRule.java,AccessNode parent = (AccessNode)node.jjtGetParent();,if ((AccessNode)node != null ) AccessNode parent = (AccessNode)node.jjtGetParent();
UnusedPrivateMethodRule.java,ASTPrimaryExpression parent = (ASTPrimaryExpression)node.jjtGetParent();,if ((ASTPrimaryExpression)node != null ) ASTPrimaryExpression parent = (ASTPrimaryExpression)node.jjtGetParent();
UnusedPrivateMethodRule.java,ASTMethodDeclarator methodNode = (ASTMethodDeclarator)i.next();,if ((ASTMethodDeclarator)i != null ) ASTMethodDeclarator methodNode = (ASTMethodDeclarator)i.next();
UnusedPrivateMethodRule.java,SimpleNode node = (SimpleNode)i.next();,if ((SimpleNode)i != null ) SimpleNode node = (SimpleNode)i.next();
UnusedPrivateMethodRule.java,VariableNameDeclaration decl = (VariableNameDeclaration)i.next();,if ((VariableNameDeclaration)i != null ) VariableNameDeclaration decl = (VariableNameDeclaration)i.next();
OnlyOneReturnRule.java,SimpleNode problem = (SimpleNode)i.next();,if ((SimpleNode)i != null ) SimpleNode problem = (SimpleNode)i.next();
PositionalIteratorRule.java,String name = (String)i.next();,if ((String)i != null ) String name = (String)i.next();
JUnitAssertionsShouldIncludeMessageRule.java,AssertionCall call = (AssertionCall)i.next();,if ((AssertionCall)i != null ) AssertionCall call = (AssertionCall)i.next();
JUnitStaticSuiteRule.java,AccessNode parent = (AccessNode)node.jjtGetParent();,if ((AccessNode)node != null ) AccessNode parent = (AccessNode)node.jjtGetParent();
DataPoint.java,Double rhsScore = new Double( rhs.getScore());,if (rhs != null ) Double rhsScore = new Double( rhs.getScore());
StatisticalRule.java,total += point.getScore();,if (point != null ) total += point.getScore();
StatisticalRule.java,totalSquared += point.getScore() * point.getScore();,if (point != null ) totalSquared += point.getScore() * point.getScore();
StatisticalRule.java,Iterator points = pointSet.iterator();,if (pointSet != null ) Iterator points = pointSet.iterator();
StatisticalRule.java,DataPoint point = (DataPoint) points.last();,if (points != null ) DataPoint point = (DataPoint) points.last();
StatisticalRule.java,Iterator points = dataPoints.iterator();,if (dataPoints != null ) Iterator points = dataPoints.iterator();
StatisticalRule.java,DataPoint point = (DataPoint) points.next();,if (points != null ) DataPoint point = (DataPoint) points.next();
PMDLookAndFeel.java,Color darkBlue = Color.blue.darker();,if (Color != null ) Color darkBlue = Color.blue.darker();
PMDDirectoryRequestEvent.java,listener = (PMDDirectoryRequestEventListener) listeners.next();,if (listeners != null ) listener = (PMDDirectoryRequestEventListener) listeners.next();
NameOccurrences.java,NameOccurrence occ = (NameOccurrence)i.next();,if ((NameOccurrence)i != null ) NameOccurrence occ = (NameOccurrence)i.next();
SymbolFacade.java,NameOccurrence occ = (NameOccurrence)i.next();,if ((NameOccurrence)i != null ) NameOccurrence occ = (NameOccurrence)i.next();
TypeSet.java,String importStmt = (String)i.next();,if ((String)i != null ) String importStmt = (String)i.next();
TypeSet.java,String importStmt = (String)i.next();,if ((String)i != null ) String importStmt = (String)i.next();
TypeSet.java,Resolver resolver = (Resolver)i.next();,if ((Resolver)i != null ) Resolver resolver = (Resolver)i.next();
RuleViolation.java,this.className = ctx.getClassName();,if (ctx != null ) this.className = ctx.getClassName();
RuleViolation.java,this.packageName = ctx.getPackageName();,if (ctx != null ) this.packageName = ctx.getPackageName();
TextRenderer.java,Report.ProcessingError rv = (Report.ProcessingError) i.next();,if (i != null ) Report.ProcessingError rv = (Report.ProcessingError) i.next();
RuleSetTest.java,Set rules = IUT.getRules();,if (IUT != null ) Set rules = IUT.getRules();
RuleSetTest.java,Iterator i = rules.iterator();,if (rules != null ) Iterator i = rules.iterator();
CouplingBetweenObjectsRule.java,int thresh = this.getThreshold();,if (this != null ) int thresh = this.getThreshold();
ExcessiveNodeCountRule.java,int numChildren = node.jjtGetNumChildren();,if (node != null ) int numChildren = node.jjtGetNumChildren();
ExcessiveNodeCountRule.java,numNodes += treeSize.intValue();,if (treeSize != null ) numNodes += treeSize.intValue();
JumpingSelectionModel.java,List editors = Ide.getEditorManager().getAllEditors();,if (Ide != null ) List editors = Ide.getEditorManager().getAllEditors();
JumpingSelectionModel.java,Editor editor = (Editor)i.next();,if ((Editor)i != null ) Editor editor = (Editor)i.next();
JumpingSelectionModel.java,Document doc = editor.getContext().getDocument();,if (editor != null ) Document doc = editor.getContext().getDocument();
Plugin.java,AddinManager addinManager = Ide.getAddinManager();,if (Ide != null ) AddinManager addinManager = Ide.getAddinManager();
Plugin.java,Project proj = (Project)context.getDocument();,if ((Project)context != null ) Project proj = (Project)context.getDocument();
Plugin.java,List foo = proj.getListOfChildren();,if (proj != null ) List foo = proj.getListOfChildren();
Plugin.java,Document d = (Document)i.next();,if ((Document)i != null ) Document d = (Document)i.next();
Plugin.java,Context context = contextMenu.getContext();,if (contextMenu != null ) Context context = contextMenu.getContext();
Plugin.java,Element doc = context.getDocument();,if (context != null ) Element doc = context.getDocument();
RuleViolationPage.java,List editors = Ide.getEditorManager().getAllEditors();,if (Ide != null ) List editors = Ide.getEditorManager().getAllEditors();
RuleViolationPage.java,Editor editor = (Editor)i.next();,if ((Editor)i != null ) Editor editor = (Editor)i.next();
RuleViolationPage.java,Document doc = editor.getContext().getDocument();,if (editor != null ) Document doc = editor.getContext().getDocument();
Plugin.java,LogWindow window = Ide.getLogWindow();,if (Ide != null ) LogWindow window = Ide.getLogWindow();
Plugin.java,RuleViolation rv = (RuleViolation)i.next();,if ((RuleViolation)i != null ) RuleViolation rv = (RuleViolation)i.next();
RuleSetReader.java,Exception originalException = exception.getException();,if (exception != null ) Exception originalException = exception.getException();
AnalysisResultsViewer.java,String message = pmdException.getMessage();,if (pmdException != null ) String message = pmdException.getMessage();
AnalysisResultsViewer.java,Exception exception = pmdException.getOriginalException();,if (pmdException != null ) Exception exception = pmdException.getOriginalException();
AnalysisViewer.java,Exception exception = pmdException.getOriginalException();,if (pmdException != null ) Exception exception = pmdException.getOriginalException();
AnalysisViewer.java,Exception exception = pmdException.getOriginalException();,if (pmdException != null ) Exception exception = pmdException.getOriginalException();
AnalysisViewer.java,Exception exception = pmdException.getOriginalException();,if (pmdException != null ) Exception exception = pmdException.getOriginalException();
PMDViewer.java,Exception exception = pmdException.getOriginalException();,if (pmdException != null ) Exception exception = pmdException.getOriginalException();
PMDViewer.java,Exception exception = pmdException.getOriginalException();,if (pmdException != null ) Exception exception = pmdException.getOriginalException();
PreferencesEditor.java,Exception exception = pmdException.getOriginalException();,if (pmdException != null ) Exception exception = pmdException.getOriginalException();
ResultsViewer.java,Exception exception = pmdException.getOriginalException();,if (pmdException != null ) Exception exception = pmdException.getOriginalException();
ResultsViewer.java,Exception exception = pmdException.getOriginalException();,if (pmdException != null ) Exception exception = pmdException.getOriginalException();
RulesEditor.java,Exception exception = pmdException.getOriginalException();,if (pmdException != null ) Exception exception = pmdException.getOriginalException();
RulesTree.java,Exception exception = pmdException.getOriginalException();,if (pmdException != null ) Exception exception = pmdException.getOriginalException();
SearchViewer.java,Exception exception = pmdException.getOriginalException();,if (pmdException != null ) Exception exception = pmdException.getOriginalException();
SearchViewer.java,Exception exception = pmdException.getOriginalException();,if (pmdException != null ) Exception exception = pmdException.getOriginalException();
SearchViewer.java,Exception exception = pmdException.getOriginalException();,if (pmdException != null ) Exception exception = pmdException.getOriginalException();
PMDDirectoryRequestEvent.java,Exception exception = pmdException.getOriginalException();,if (pmdException != null ) Exception exception = pmdException.getOriginalException();
PMDDirectoryRequestEvent.java,Exception exception = pmdException.getOriginalException();,if (pmdException != null ) Exception exception = pmdException.getOriginalException();
ConstructorCallsOverridableMethodRule.java,for(Iterator it = getEvalPackage().calledMethods.iterator();it.hasNext();){,if (getEvalPackage() != null ) for(Iterator it = getEvalPackage().calledMethods.iterator();it.hasNext();){
ConstructorCallsOverridableMethodRule.java,for(Iterator calledConstIter = getEvalPackage().calledConstructors.iterator();calledConstIter.hasNext();){,if (getEvalPackage() != null ) for(Iterator calledConstIter = getEvalPackage().calledConstructors.iterator();calledConstIter.hasNext();){
ConstructorCallsOverridableMethodRule.java,Holder h = (Holder)methodsIter.next();,if ((Holder)methodsIter != null ) Holder h = (Holder)methodsIter.next();
ConstructorCallsOverridableMethodRule.java,Holder h = (Holder)evaldMethsIter.next();,if ((Holder)evaldMethsIter != null ) Holder h = (Holder)evaldMethsIter.next();
ConstructorCallsOverridableMethodRule.java,List packClass = meth.getPackageClassNames();,if (meth != null ) List packClass = meth.getPackageClassNames();
RunPMDAction.java,Iterator iterator = ctx.getReport().iterator();,if (ctx != null ) Iterator iterator = ctx.getReport().iterator();
RunPMDAction.java,RuleViolation violation = ( RuleViolation )iterator.next();,if ()iterator != null ) RuleViolation violation = ( RuleViolation )iterator.next();
ConstructorCallsOverridableMethodRule.java,int i = node.jjtGetNumChildren();,if (node != null ) int i = node.jjtGetNumChildren();
ConstructorCallsOverridableMethodRule.java,int numOfArguments = args.getArgumentCount();,if (args != null ) int numOfArguments = args.getArgumentCount();
ConstructorCallsOverridableMethodRule.java,String value = st.nextToken();,if (st != null ) String value = st.nextToken();
ConstructorCallsOverridableMethodRule.java,for(Iterator it = pkg.iterator();it.hasNext();){,if (pkg != null ) for(Iterator it = pkg.iterator();it.hasNext();){
ConstructorCallsOverridableMethodRule.java,String name = (String)it.next();,if ((String)it != null ) String name = (String)it.next();
ConstructorCallsOverridableMethodRule.java,for(Iterator it = vars.iterator();it.hasNext();){,if (vars != null ) for(Iterator it = vars.iterator();it.hasNext();){
ConstructorCallsOverridableMethodRule.java,String name = (String)it.next();,if ((String)it != null ) String name = (String)it.next();
ConstructorCallsOverridableMethodRule.java,ConstructorInvocation calledC = ch.getCalledConstructor();,if (ch != null ) ConstructorInvocation calledC = ch.getCalledConstructor();
ConstructorCallsOverridableMethodRule.java,String cName = calledC.getName();,if (calledC != null ) String cName = calledC.getName();
ConstructorCallsOverridableMethodRule.java,int cCount = calledC.getArgumentCount();,if (calledC != null ) int cCount = calledC.getArgumentCount();
ConstructorCallsOverridableMethodRule.java,"for(Iterator innerConstIter = classConstructorMap.keySet().iterator();innerConstIter.hasNext() && !ch.isDangerous();){ //forget skipping self because that introduces another check for each, but only 1 hit","if (hit != null ) for(Iterator innerConstIter = classConstructorMap.keySet().iterator();innerConstIter.hasNext() && !ch.isDangerous();){ //forget skipping self because that introduces another check for each, but only 1 hit"
ConstructorCallsOverridableMethodRule.java,List packClass = meth.getPackageClassNames();,if (meth != null ) List packClass = meth.getPackageClassNames();
ConstructorCallsOverridableMethodRule.java,for(Iterator it = packClass.iterator();it.hasNext() && (found == false);){,if (false);){ != null ) for(Iterator it = packClass.iterator();it.hasNext() && (found == false);){
ConstructorCallsOverridableMethodRule.java,String name = (String) it.next();,if (it != null ) String name = (String) it.next();
RunPMDAction.java,Iterator iterator = ctx.getReport().iterator();,if (ctx != null ) Iterator iterator = ctx.getReport().iterator();
RunPMDAction.java,RuleViolation violation = ( RuleViolation )iterator.next();,if ()iterator != null ) RuleViolation violation = ( RuleViolation )iterator.next();
RunPMDAction.java,DataObject dataobject = ( DataObject )enumeration.nextElement();,if ()enumeration != null ) DataObject dataobject = ( DataObject )enumeration.nextElement();
CyclomaticComplexityRule.java,int lineNumber = node.getBeginLine();,if (node != null ) int lineNumber = node.getBeginLine();
IDEAJRenderer.java,String tok = st.nextToken();,if (st != null ) String tok = st.nextToken();
PMDTask.java,String fileName = file.getAbsolutePath();,if (file != null ) String fileName = file.getAbsolutePath();
CyclomaticComplexityRule.java,String className = node.getImage();,if (node != null ) String className = node.getImage();
CyclomaticComplexityRule.java,int lineNumber = node.getBeginLine();,if (node != null ) int lineNumber = node.getBeginLine();
CyclomaticComplexityRule.java,int lineNumber = node.getBeginLine();,if (node != null ) int lineNumber = node.getBeginLine();
PMDDirectory.java,File ruleSetFile = (File) ruleSetFiles.next();,if (ruleSetFiles != null ) File ruleSetFile = (File) ruleSetFiles.next();
PMDDirectory.java,int priority = event.getLowestPriorityForAnalysis();,if (event != null ) int priority = event.getLowestPriorityForAnalysis();
RulesTree.java,String message = exception.getMessage();,if (exception != null ) String message = exception.getMessage();
RulesTree.java,Exception originalException = exception.getOriginalException();,if (exception != null ) Exception originalException = exception.getOriginalException();
PMDDirectoryRequestEvent.java,listener = (PMDDirectoryRequestEventListener) listeners.next();,if (listeners != null ) listener = (PMDDirectoryRequestEventListener) listeners.next();
PMDDirectoryRequestEvent.java,listener = (PMDDirectoryRequestEventListener) listeners.next();,if (listeners != null ) listener = (PMDDirectoryRequestEventListener) listeners.next();
PMDDirectoryRequestEvent.java,listener = (PMDDirectoryRequestEventListener) listeners.next();,if (listeners != null ) listener = (PMDDirectoryRequestEventListener) listeners.next();
PMDTask.java,Database db = (Database) i.next();,if (i != null ) Database db = (Database) i.next();
JDBCReportListener.java,keys = ins.getGeneratedKeys();,if (ins != null ) keys = ins.getGeneratedKeys();
AnalysisViewer.java,Rectangle oldClip = graphics.getClipBounds();,if (graphics != null ) Rectangle oldClip = graphics.getClipBounds();
AnalysisViewer.java,Color oldColor = graphics.getColor();,if (graphics != null ) Color oldColor = graphics.getColor();
HTMLResultRenderer.java,Iterator violations = report.iterator();,if (report != null ) Iterator violations = report.iterator();
HTMLResultRenderer.java,String hexValue = Integer.toHexString(pmdGray.getRGB());,if (Integer != null ) String hexValue = Integer.toHexString(pmdGray.getRGB());
HTMLResultRenderer.java,RuleViolation ruleViolation = (RuleViolation) violations.next();,if (violations != null ) RuleViolation ruleViolation = (RuleViolation) violations.next();
HTMLResultRenderer.java,Rule rule = ruleViolation.getRule();,if (ruleViolation != null ) Rule rule = ruleViolation.getRule();
HTMLResultRenderer.java,String ruleMessage = ruleViolation.getDescription();,if (ruleViolation != null ) String ruleMessage = ruleViolation.getDescription();
HTMLResultRenderer.java,String description = rule.getDescription();,if (rule != null ) String description = rule.getDescription();
HTMLResultRenderer.java,String example = rule.getExample();,if (rule != null ) String example = rule.getExample();
HTMLResultRenderer.java,example = buffer.toString();,if (buffer != null ) example = buffer.toString();
HTMLResultRenderer.java,char[] chars = text.toCharArray();,if (text != null ) char[] chars = text.toCharArray();
ResultsViewer.java,int priority = Preferences.getPreferences().getLowestPriorityForAnalysis();,if (Preferences != null ) int priority = Preferences.getPreferences().getLowestPriorityForAnalysis();
RuleEditingPanel.java,parentWidth = parent.getWidth();,if (parent != null ) parentWidth = parent.getWidth();
RuleEditingPanel.java,containerSize = parent.getSize();,if (parent != null ) containerSize = parent.getSize();
RuleEditingPanel.java,nameLabelHeight = fontMetrics.getHeight();,if (fontMetrics != null ) nameLabelHeight = fontMetrics.getHeight();
RuleEditingPanel.java,classNameLabelHeight = fontMetrics.getHeight();,if (fontMetrics != null ) classNameLabelHeight = fontMetrics.getHeight();
RuleEditingPanel.java,messageLabelHeight = fontMetrics.getHeight();,if (fontMetrics != null ) messageLabelHeight = fontMetrics.getHeight();
RuleEditingPanel.java,descriptionLabelHeight = fontMetrics.getHeight();,if (fontMetrics != null ) descriptionLabelHeight = fontMetrics.getHeight();
RuleEditingPanel.java,exampleLabelHeight = fontMetrics.getHeight();,if (fontMetrics != null ) exampleLabelHeight = fontMetrics.getHeight();
RuleEditingPanel.java,priorityLabelHeight = fontMetrics.getHeight();,if (fontMetrics != null ) priorityLabelHeight = fontMetrics.getHeight();
RulePropertyEditingPanel.java,parentWidth = parent.getWidth();,if (parent != null ) parentWidth = parent.getWidth();
RulePropertyEditingPanel.java,containerSize = parent.getSize();,if (parent != null ) containerSize = parent.getSize();
RulePropertyEditingPanel.java,nameLabelHeight = fontMetrics.getHeight();,if (fontMetrics != null ) nameLabelHeight = fontMetrics.getHeight();
RulePropertyEditingPanel.java,valueLabelHeight = fontMetrics.getHeight();,if (fontMetrics != null ) valueLabelHeight = fontMetrics.getHeight();
RulePropertyEditingPanel.java,valueTypeLabelHeight = fontMetrics.getHeight();,if (fontMetrics != null ) valueTypeLabelHeight = fontMetrics.getHeight();
RuleSetEditingPanel.java,parentWidth = parent.getWidth();,if (parent != null ) parentWidth = parent.getWidth();
RuleSetEditingPanel.java,containerSize = parent.getSize();,if (parent != null ) containerSize = parent.getSize();
RuleSetEditingPanel.java,nameLabelHeight = fontMetrics.getHeight();,if (fontMetrics != null ) nameLabelHeight = fontMetrics.getHeight();
RuleSetEditingPanel.java,descriptionLabelHeight = fontMetrics.getHeight();,if (fontMetrics != null ) descriptionLabelHeight = fontMetrics.getHeight();
RulesTree.java,TreePath treePath = new TreePath(rootNode.getPath());,if (TreePath(rootNode != null ) TreePath treePath = new TreePath(rootNode.getPath());
RulesTree.java,ruleSet = ruleSetNode.getRuleSet();,if (ruleSetNode != null ) ruleSet = ruleSetNode.getRuleSet();
RulesTree.java,setOfRules = ruleSet.getRules();,if (ruleSet != null ) setOfRules = ruleSet.getRules();
RulesTree.java,rule = ruleNode.getRule();,if (ruleNode != null ) rule = ruleNode.getRule();
RulesTree.java,properties = rule.getProperties();,if (rule != null ) properties = rule.getProperties();
RulesTree.java,keys = properties.keys();,if (properties != null ) keys = properties.keys();
RulesTree.java,propertyNames[index] = (String) keys.nextElement();,if (keys != null ) propertyNames[index] = (String) keys.nextElement();
TextRenderer.java,Iterator violations = report.iterator();,if (report != null ) Iterator violations = report.iterator();
AnalysisViewer.java,Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();,if (Toolkit != null ) Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
AnalysisViewer.java,Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();,if (Toolkit != null ) Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
RuleSetReadWriteTest.java,int propertiesInCount = propertiesIn.size();,if (propertiesIn != null ) int propertiesInCount = propertiesIn.size();
RuleSetReadWriteTest.java,int propertiesOutCount = propertiesOut.size();,if (propertiesOut != null ) int propertiesOutCount = propertiesOut.size();
RuleSetFactory.java,String ruleSetName = st.nextToken();,if (st != null ) String ruleSetName = st.nextToken();
Preferences.java,String key = trim(name).toLowerCase();,if (trim(name) != null ) String key = trim(name).toLowerCase();
Preferences.java,String key = name.toLowerCase();,if (name != null ) String key = name.toLowerCase();
RuleSetReader.java,SAXParserFactory factory = SAXParserFactory.newInstance();,if (SAXParserFactory != null ) SAXParserFactory factory = SAXParserFactory.newInstance();
RuleSetReader.java,int newLength = buffer.length();,if (buffer != null ) int newLength = buffer.length();
AnalysisViewer.java,String path = Preferences.getPreferences().getAnalysisResultsPath();,if (Preferences != null ) String path = Preferences.getPreferences().getAnalysisResultsPath();
AnalysisViewer.java,int result = fileChooser.showSaveDialog(PMDViewer.getViewer());,if (fileChooser != null ) int result = fileChooser.showSaveDialog(PMDViewer.getViewer());
DirectoryTableModel.java,TreePath treePath = event.getPath();,if (event != null ) TreePath treePath = event.getPath();
DirectoryTableModel.java,DirectoryTreeNode treeNode = (DirectoryTreeNode) treePath.getLastPathComponent();,if (treePath != null ) DirectoryTreeNode treeNode = (DirectoryTreeNode) treePath.getLastPathComponent();
DirectoryTableModel.java,Object userObject = treeNode.getUserObject();,if (treeNode != null ) Object userObject = treeNode.getUserObject();
DirectoryTableModel.java,largestSize = size.length();,if (size != null ) largestSize = size.length();
DirectoryTableModel.java,int numberOfSpaces = largestSize - size.length();,if (size != null ) int numberOfSpaces = largestSize - size.length();
DirectoryTableModel.java,size = buffer.toString();,if (buffer != null ) size = buffer.toString();
PMDViewer.java,Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();,if (Toolkit != null ) Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
PMDViewer.java,String message = pmdException.getMessage();,if (pmdException != null ) String message = pmdException.getMessage();
PMDViewer.java,Exception exception = pmdException.getOriginalException();,if (pmdException != null ) Exception exception = pmdException.getOriginalException();
PMDViewer.java,MenuElement[] menuElements = menuBar.getSubElements();,if (menuBar != null ) MenuElement[] menuElements = menuBar.getSubElements();
PMDViewer.java,MenuElement[] menuElements = menuBar.getSubElements();,if (menuBar != null ) MenuElement[] menuElements = menuBar.getSubElements();
PMDViewer.java,Rectangle oldClip = graphics.getClipBounds();,if (graphics != null ) Rectangle oldClip = graphics.getClipBounds();
PMDViewer.java,Color oldColor = graphics.getColor();,if (graphics != null ) Color oldColor = graphics.getColor();
PMDViewer.java,Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();,if (Toolkit != null ) Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
PMDViewer.java,Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();,if (Toolkit != null ) Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
PMDViewer.java,String message = pmdException.getMessage();,if (pmdException != null ) String message = pmdException.getMessage();
PMDViewer.java,Exception exception = pmdException.getOriginalException();,if (pmdException != null ) Exception exception = pmdException.getOriginalException();
PMDViewer.java,String message = pmdException.getMessage();,if (pmdException != null ) String message = pmdException.getMessage();
PMDViewer.java,Exception exception = pmdException.getOriginalException();,if (pmdException != null ) Exception exception = pmdException.getOriginalException();
ResultsViewer.java,int priority = Preferences.getPreferences().getLowestPriorityForAnalysis();,if (Preferences != null ) int priority = Preferences.getPreferences().getLowestPriorityForAnalysis();
ResultsViewer.java,File file = event.getSelectedFile();,if (event != null ) File file = event.getSelectedFile();
RulesEditor.java,PMDViewer pmdViewer = PMDViewer.getViewer();,if (PMDViewer != null ) PMDViewer pmdViewer = PMDViewer.getViewer();
RulesEditor.java,int windowWidth = pmdViewer.getWidth();,if (pmdViewer != null ) int windowWidth = pmdViewer.getWidth();
RulesEditor.java,int windowHeight = pmdViewer.getHeight();,if (pmdViewer != null ) int windowHeight = pmdViewer.getHeight();
RulesEditor.java,Enumeration children = treeNode.children();,if (treeNode != null ) Enumeration children = treeNode.children();
RulesEditor.java,RuleSet ruleSet = (RuleSet) ruleSets.next();,if (ruleSets != null ) RuleSet ruleSet = (RuleSet) ruleSets.next();
RulesEditor.java,String ruleSetName = ruleSet.getName();,if (ruleSet != null ) String ruleSetName = ruleSet.getName();
RulesEditor.java,Iterator rules = ruleSet.getRules().iterator();,if (ruleSet != null ) Iterator rules = ruleSet.getRules().iterator();
RulesEditor.java,Rule rule = (Rule) rules.next();,if (rules != null ) Rule rule = (Rule) rules.next();
RulesEditor.java,String ruleName = rule.getName();,if (rule != null ) String ruleName = rule.getName();
PMDViewer.java,Clipboard clipboard = PMDViewer.this.getToolkit().getSystemClipboard();,if (PMDViewer != null ) Clipboard clipboard = PMDViewer.this.getToolkit().getSystemClipboard();
PMDViewer.java,Clipboard clipboard = PMDViewer.this.getToolkit().getSystemClipboard();,if (PMDViewer != null ) Clipboard clipboard = PMDViewer.this.getToolkit().getSystemClipboard();
PreferencesEditor.java,directory = preferences.getCurrentPathToPMD();,if (preferences != null ) directory = preferences.getCurrentPathToPMD();
PreferencesEditor.java,directory = preferences.getUserPathToPMD();,if (preferences != null ) directory = preferences.getUserPathToPMD();
PreferencesEditor.java,directory = preferences.getSharedPathToPMD();,if (preferences != null ) directory = preferences.getSharedPathToPMD();
DirectoryTree.java,PMDViewer pmdViewer = PMDViewer.getViewer();,if (PMDViewer != null ) PMDViewer pmdViewer = PMDViewer.getViewer();
DirectoryTree.java,PMDViewer pmdViewer = PMDViewer.getViewer();,if (PMDViewer != null ) PMDViewer pmdViewer = PMDViewer.getViewer();
PMDViewer.java,Dimension screenSize = getToolkit().getScreenSize();,if (getToolkit() != null ) Dimension screenSize = getToolkit().getScreenSize();
PMDViewer.java,MenuElement[] menuElements = menuBar.getSubElements();,if (menuBar != null ) MenuElement[] menuElements = menuBar.getSubElements();
PMDViewer.java,MenuElement[] menuElements = menuBar.getSubElements();,if (menuBar != null ) MenuElement[] menuElements = menuBar.getSubElements();
ResultsViewer.java,File file = event.getSelectedFile();,if (event != null ) File file = event.getSelectedFile();
RuleEditingPanel.java,activeLabelHeight = fontMetrics.getHeight();,if (fontMetrics != null ) activeLabelHeight = fontMetrics.getHeight();
RuleEditingPanel.java,activeWidth = checkBoxIcon.getIconWidth();,if (checkBoxIcon != null ) activeWidth = checkBoxIcon.getIconWidth();
RuleEditingPanel.java,activeHeight = checkBoxIcon.getIconHeight();,if (checkBoxIcon != null ) activeHeight = checkBoxIcon.getIconHeight();
RulePropertyEditingPanel.java,String name = data.getName();,if (data != null ) String name = data.getName();
RulePropertyEditingPanel.java,String valueType = data.getPropertyValueType();,if (data != null ) String valueType = data.getPropertyValueType();
RuleSetEditingPanel.java,activeLabelHeight = fontMetrics.getHeight();,if (fontMetrics != null ) activeLabelHeight = fontMetrics.getHeight();
RuleSetEditingPanel.java,activeWidth = checkBoxIcon.getIconWidth();,if (checkBoxIcon != null ) activeWidth = checkBoxIcon.getIconWidth();
RuleSetEditingPanel.java,activeHeight = checkBoxIcon.getIconHeight();,if (checkBoxIcon != null ) activeHeight = checkBoxIcon.getIconHeight();
PMDDirectory.java,File[] files = directory.listFiles();,if (directory != null ) File[] files = directory.listFiles();
PMDDirectory.java,Iterator ruleSets = ruleSetFactory.getRegisteredRuleSets();,if (ruleSetFactory != null ) Iterator ruleSets = ruleSetFactory.getRegisteredRuleSets();
PMDDirectory.java,Iterator ruleSetFiles = ruleSetFilesList.iterator();,if (ruleSetFilesList != null ) Iterator ruleSetFiles = ruleSetFilesList.iterator();
PreferencesEditor.java,Dimension screenSize = getToolkit().getScreenSize();,if (getToolkit() != null ) Dimension screenSize = getToolkit().getScreenSize();
ResultsViewer.java,String filePath = file.getPath();,if (file != null ) String filePath = file.getPath();
RuleEditingTabbedPane.java,TreePath treePath = event.getPath();,if (event != null ) TreePath treePath = event.getPath();
RuleEditingTabbedPane.java,Object component = treePath.getLastPathComponent();,if (treePath != null ) Object component = treePath.getLastPathComponent();
RuleEditingTabbedPane.java,IRulesEditingData[] childData = RuleEditingTabbedPane.this.getData();,if (RuleEditingTabbedPane != null ) IRulesEditingData[] childData = RuleEditingTabbedPane.this.getData();
RulesClassSelectDialog.java,Dimension screenSize = getToolkit().getScreenSize();,if (getToolkit() != null ) Dimension screenSize = getToolkit().getScreenSize();
RulesClassSelectDialog.java,int windowLocationX = pmdViewer.getX();,if (pmdViewer != null ) int windowLocationX = pmdViewer.getX();
RulesClassSelectDialog.java,int windowLocationY = pmdViewer.getY();,if (pmdViewer != null ) int windowLocationY = pmdViewer.getY();
RulesClassSelectDialog.java,String rulesDirectoryPath = pmdDirectory.getRuleSetsDirectory();,if (pmdDirectory != null ) String rulesDirectoryPath = pmdDirectory.getRuleSetsDirectory();
RulesEditor.java,Dimension screenSize = getToolkit().getScreenSize();,if (getToolkit() != null ) Dimension screenSize = getToolkit().getScreenSize();
RulesEditor.java,int windowLocationX = pmdViewer.getX();,if (pmdViewer != null ) int windowLocationX = pmdViewer.getX();
RulesEditor.java,int windowLocationY = pmdViewer.getY();,if (pmdViewer != null ) int windowLocationY = pmdViewer.getY();
RulesEditor.java,ruleSet = ruleSetNode.getRuleSet();,if (ruleSetNode != null ) ruleSet = ruleSetNode.getRuleSet();
RulesEditor.java,setOfRules = ruleSet.getRules();,if (ruleSet != null ) setOfRules = ruleSet.getRules();
RulesEditor.java,rule = ruleNode.getRule();,if (ruleNode != null ) rule = ruleNode.getRule();
RulesEditor.java,properties = rule.getProperties();,if (rule != null ) properties = rule.getProperties();
RulesEditor.java,keys = properties.keys();,if (properties != null ) keys = properties.keys();
RulesEditor.java,propertyNames[index] = (String) keys.nextElement();,if (keys != null ) propertyNames[index] = (String) keys.nextElement();
RulesTree.java,TreePath treePath = new TreePath(node.getPath());,if (TreePath(node != null ) TreePath treePath = new TreePath(node.getPath());
RulesTree.java,TreePath treePath = new TreePath(node.getPath());,if (TreePath(node != null ) TreePath treePath = new TreePath(node.getPath());
RulesTree.java,int childCount = parentNode.getChildCount();,if (parentNode != null ) int childCount = parentNode.getChildCount();
RulesTree.java,String currentNodeName = treeNodes[n].getName();,if (treeNodes[n] != null ) String currentNodeName = treeNodes[n].getName();
RulesTree.java,String ruleSetName = ruleSetNode.getName();,if (ruleSetNode != null ) String ruleSetName = ruleSetNode.getName();
AvailableListModel.java,Iterator iterator = ruleSetFactory.getRegisteredRuleSets();,if (ruleSetFactory != null ) Iterator iterator = ruleSetFactory.getRegisteredRuleSets();
AvailableListModel.java,RuleSet ruleset = ( RuleSet )iterator.next();,if ()iterator != null ) RuleSet ruleset = ( RuleSet )iterator.next();
AvailableListModel.java,Set rules = ruleset.getRules();,if (ruleset != null ) Set rules = ruleset.getRules();
RunPMDAction.java,List list = SelectedListModel.getSelectedListModelInstance().getData();,if (SelectedListModel != null ) List list = SelectedListModel.getSelectedListModelInstance().getData();
RunPMDAction.java,Iterator iterator = list.iterator();,if (list != null ) Iterator iterator = list.iterator();
PropertiesModel.java,String key = (String)keys.nextElement();,if ((String)keys != null ) String key = (String)keys.nextElement();
RuleEditor.java,Iterator iterator = value.iterator();,if (value != null ) Iterator iterator = value.iterator();
RuleEditor.java,Rule rule = ( Rule )iterator.next();,if ()iterator != null ) Rule rule = ( Rule )iterator.next();
SelectedListModel.java,Rule rule = (Rule)iterator.next();,if ((Rule)iterator != null ) Rule rule = (Rule)iterator.next();
RuleEnabler.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RuleEnabler.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RuleEnabler.java,gridBagConstraints = new java.awt.GridBagConstraints();,if (java != null ) gridBagConstraints = new java.awt.GridBagConstraints();
RuleEnabler.java,example = new javax.swing.JTextPane();,if (javax != null ) example = new javax.swing.JTextPane();
XMLRenderer.java,filename = rv.getFilename();,if (rv != null ) filename = rv.getFilename();
AvoidStringLiteralsRule.java,currentNode = currentNode.jjtGetParent();,if (currentNode != null ) currentNode = currentNode.jjtGetParent();
RunPMDAction.java,DataObject dataobject = ( DataObject )enumeration.nextElement();,if ()enumeration != null ) DataObject dataobject = ( DataObject )enumeration.nextElement();
PMDAnnotation.java,Line line = (Line)propertyChangeEvent.getSource();,if ((Line)propertyChangeEvent != null ) Line line = (Line)propertyChangeEvent.getSource();
PMDOutputListener.java,Set set = cookie.getLineSet();,if (cookie != null ) Set set = cookie.getLineSet();
PMDOutputListener.java,Set set = cookie.getLineSet();,if (cookie != null ) Set set = cookie.getLineSet();
PMDOutputListener.java,Set set = cookie.getLineSet();,if (cookie != null ) Set set = cookie.getLineSet();
ClassScope.java,NameDeclaration decl = (VariableNameDeclaration)i.next();,if ((VariableNameDeclaration)i != null ) NameDeclaration decl = (VariableNameDeclaration)i.next();
GlobalScope.java,NameDeclaration nameDeclaration = (NameDeclaration)i.next();,if ((NameDeclaration)i != null ) NameDeclaration nameDeclaration = (NameDeclaration)i.next();
LocalScope.java,NameDeclaration nameDeclaration = (NameDeclaration)i.next();,if ((NameDeclaration)i != null ) NameDeclaration nameDeclaration = (NameDeclaration)i.next();
MethodScope.java,NameDeclaration nameDeclaration = (NameDeclaration)i.next();,if ((NameDeclaration)i != null ) NameDeclaration nameDeclaration = (NameDeclaration)i.next();
AvoidReassigningParametersRule.java,Map params = scope.getUsedVariableDeclarations();,if (scope != null ) Map params = scope.getUsedVariableDeclarations();
StringToStringRule.java,Map decls = node.getScope().getUsedVariableDeclarations();,if (node != null ) Map decls = node.getScope().getUsedVariableDeclarations();
AbstractScope.java,VariableNameDeclaration nameDeclaration = (VariableNameDeclaration)i.next();,if ((VariableNameDeclaration)i != null ) VariableNameDeclaration nameDeclaration = (VariableNameDeclaration)i.next();
AbstractScope.java,VariableNameDeclaration nameDeclaration = (VariableNameDeclaration)i.next();,if ((VariableNameDeclaration)i != null ) VariableNameDeclaration nameDeclaration = (VariableNameDeclaration)i.next();
PMDOutputListener.java,Set set = cookie.getLineSet();,if (cookie != null ) Set set = cookie.getLineSet();
RunPMDAction.java,Iterator iterator = ctx.getReport().iterator();,if (ctx != null ) Iterator iterator = ctx.getReport().iterator();
RunPMDAction.java,RuleViolation violation = ( RuleViolation )iterator.next();,if ()iterator != null ) RuleViolation violation = ( RuleViolation )iterator.next();
RunPMDAction.java,DataObject dataobject = ( DataObject )enumeration.nextElement();,if ()enumeration != null ) DataObject dataobject = ( DataObject )enumeration.nextElement();
RunPMDAction.java,Iterator iterator = dataobject.files().iterator();,if (dataobject != null ) Iterator iterator = dataobject.files().iterator();
RunPMDAction.java,FileObject file = ( FileObject )iterator.next();,if ()iterator != null ) FileObject file = ( FileObject )iterator.next();
DirectoryTree.java,DirectoryTreeNode treeNode = (DirectoryTreeNode) treeModel.getRoot();,if (treeModel != null ) DirectoryTreeNode treeNode = (DirectoryTreeNode) treeModel.getRoot();
DirectoryTree.java,TreePath treePath = new TreePath(treeNode.getPath());,if (TreePath(treeNode != null ) TreePath treePath = new TreePath(treeNode.getPath());
RulesTree.java,PMDDirectory pmdDirectory = pmdViewer.getPMDDirectory();,if (pmdViewer != null ) PMDDirectory pmdDirectory = pmdViewer.getPMDDirectory();
RulesTree.java,String rulesDirectoryPath = pmdDirectory.getRuleSetsDirectory();,if (pmdDirectory != null ) String rulesDirectoryPath = pmdDirectory.getRuleSetsDirectory();
RulesTree.java,File selectedFile = fileChooser.getSelectedFile();,if (fileChooser != null ) File selectedFile = fileChooser.getSelectedFile();
RulesTree.java,String path = selectedFile.getPath();,if (selectedFile != null ) String path = selectedFile.getPath();
RulesTree.java,Rule rule = (Rule) ruleClass.newInstance();,if (ruleClass != null ) Rule rule = (Rule) ruleClass.newInstance();
NameOccurrences.java,NameOccurrence occ = (NameOccurrence)i.next();,if ((NameOccurrence)i != null ) NameOccurrence occ = (NameOccurrence)i.next();
NameOccurrences.java,result += occ.getImage();,if (occ != null ) result += occ.getImage();
AbstractScopeTest.java,VariableNameDeclaration decl = (VariableNameDeclaration)i.next();,if ((VariableNameDeclaration)i != null ) VariableNameDeclaration decl = (VariableNameDeclaration)i.next();
ClassScope.java,VariableNameDeclaration decl = (VariableNameDeclaration)i.next();,if ((VariableNameDeclaration)i != null ) VariableNameDeclaration decl = (VariableNameDeclaration)i.next();
GlobalScope.java,VariableNameDeclaration nameDeclaration = (VariableNameDeclaration)i.next();,if ((VariableNameDeclaration)i != null ) VariableNameDeclaration nameDeclaration = (VariableNameDeclaration)i.next();
LocalScope.java,VariableNameDeclaration nameDeclaration = (VariableNameDeclaration)i.next();,if ((VariableNameDeclaration)i != null ) VariableNameDeclaration nameDeclaration = (VariableNameDeclaration)i.next();
MethodScope.java,VariableNameDeclaration nameDeclaration = (VariableNameDeclaration)i.next();,if ((VariableNameDeclaration)i != null ) VariableNameDeclaration nameDeclaration = (VariableNameDeclaration)i.next();
StringToStringRule.java,Map decls = node.getScope().getUsedDeclarations();,if (node != null ) Map decls = node.getScope().getUsedDeclarations();
UnusedLocalVariableRule.java,VariableNameDeclaration symbol = (VariableNameDeclaration)i.next();,if ((VariableNameDeclaration)i != null ) VariableNameDeclaration symbol = (VariableNameDeclaration)i.next();
AbstractScopeTest.java,NameDeclaration decl = (NameDeclaration)i.next();,if ((NameDeclaration)i != null ) NameDeclaration decl = (NameDeclaration)i.next();
StringToStringRule.java,NameDeclaration decl = (NameDeclaration)i.next();,if ((NameDeclaration)i != null ) NameDeclaration decl = (NameDeclaration)i.next();
UnusedFormalParameterRule.java,NameDeclaration nameDecl = (NameDeclaration)i.next();,if ((NameDeclaration)i != null ) NameDeclaration nameDecl = (NameDeclaration)i.next();
UnusedLocalVariableRule.java,NameDeclaration symbol = (NameDeclaration)i.next();,if ((NameDeclaration)i != null ) NameDeclaration symbol = (NameDeclaration)i.next();
UnusedPrivateInstanceVariableRule.java,NameDeclaration decl = (NameDeclaration)i.next();,if ((NameDeclaration)i != null ) NameDeclaration decl = (NameDeclaration)i.next();
UnusedPrivateMethodRule.java,NameDeclaration decl = (NameDeclaration)i.next();,if ((NameDeclaration)i != null ) NameDeclaration decl = (NameDeclaration)i.next();
AbstractScope.java,NameDeclaration nameDeclaration = (NameDeclaration)i.next();,if ((NameDeclaration)i != null ) NameDeclaration nameDeclaration = (NameDeclaration)i.next();
AbstractScope.java,NameDeclaration nameDeclaration = (NameDeclaration)i.next();,if ((NameDeclaration)i != null ) NameDeclaration nameDeclaration = (NameDeclaration)i.next();
ClassScope.java,NameDeclaration decl = (NameDeclaration)i.next();,if ((NameDeclaration)i != null ) NameDeclaration decl = (NameDeclaration)i.next();
GlobalScope.java,NameDeclaration nameDeclaration = (NameDeclaration)i.next();,if ((NameDeclaration)i != null ) NameDeclaration nameDeclaration = (NameDeclaration)i.next();
LocalScope.java,NameDeclaration nameDeclaration = (NameDeclaration)i.next();,if ((NameDeclaration)i != null ) NameDeclaration nameDeclaration = (NameDeclaration)i.next();
MethodScope.java,NameDeclaration nameDeclaration = (NameDeclaration)i.next();,if ((NameDeclaration)i != null ) NameDeclaration nameDeclaration = (NameDeclaration)i.next();
LookupController.java,NameOccurrence occ = (NameOccurrence)i.next();,if ((NameOccurrence)i != null ) NameOccurrence occ = (NameOccurrence)i.next();
LookupController.java,decl = search.execute();,if (search != null ) decl = search.execute();
Search.java,"NameDeclaration decl = searchUpward(occ, occ.getScope());","if (occ != null ) NameDeclaration decl = searchUpward(occ, occ.getScope());"
NameOccurrenceTest.java,List names = occ.getQualifiers();,if (occ != null ) List names = occ.getQualifiers();
NameOccurrenceTest.java,names = occ.getQualifiers();,if (occ != null ) names = occ.getQualifiers();
NameOccurrenceTest.java,NameOccurrence occ = new NameOccurrence(decl.getNode());,if (NameOccurrence(decl != null ) NameOccurrence occ = new NameOccurrence(decl.getNode());
LookupController.java,List qualifiers = nameOccurrence.getQualifiers();,if (nameOccurrence != null ) List qualifiers = nameOccurrence.getQualifiers();
LookupController.java,NameDeclaration decl = lookup(nameOccurrence.getScope());,if (lookup(nameOccurrence != null ) NameDeclaration decl = lookup(nameOccurrence.getScope());
SymbolFacade.java,SimpleNode parent = (SimpleNode)node.jjtGetParent();,if ((SimpleNode)node != null ) SimpleNode parent = (SimpleNode)node.jjtGetParent();
ClassScope.java,NameDeclaration nameDeclaration = (NameDeclaration)i.next();,if ((NameDeclaration)i != null ) NameDeclaration nameDeclaration = (NameDeclaration)i.next();
UnusedPrivateInstanceVariableRule.java,SimpleNode declNode = decl.getNode();,if (decl != null ) SimpleNode declNode = decl.getNode();
UnusedPrivateInstanceVariableRule.java,NameDeclaration decl = (NameDeclaration)i.next();,if ((NameDeclaration)i != null ) NameDeclaration decl = (NameDeclaration)i.next();
UnusedPrivateInstanceVariableRule.java,NameDeclaration decl = (NameDeclaration)i.next();,if ((NameDeclaration)i != null ) NameDeclaration decl = (NameDeclaration)i.next();
UnusedFormalParameterRule.java,int limit = startNode.jjtGetNumChildren();,if (startNode != null ) int limit = startNode.jjtGetNumChildren();
UnusedFormalParameterRule.java,int childCount = node.jjtGetNumChildren();,if (node != null ) int childCount = node.jjtGetNumChildren();
NamespaceTest.java,OldSymbolTable parent = nameSpace.peek();,if (nameSpace != null ) OldSymbolTable parent = nameSpace.peek();
UnusedPrivateInstanceVariableRule.java,OldSymbol symbol = (OldSymbol)i.next();,if ((OldSymbol)i != null ) OldSymbol symbol = (OldSymbol)i.next();
UnusedPrivateInstanceVariableRule.java,Namespace group = (Namespace)nameSpaces.peek();,if ((Namespace)nameSpaces != null ) Namespace group = (Namespace)nameSpaces.peek();
UnusedPrivateInstanceVariableRule.java,ASTPrimaryExpression parent = (ASTPrimaryExpression)node.jjtGetParent();,if ((ASTPrimaryExpression)node != null ) ASTPrimaryExpression parent = (ASTPrimaryExpression)node.jjtGetParent();
UnusedPrivateInstanceVariableRule.java,force = prefix.usesThisModifier();,if (prefix != null ) force = prefix.usesThisModifier();
UnusedPrivateInstanceVariableRule.java,Namespace group = (Namespace)nameSpaces.peek();,if ((Namespace)nameSpaces != null ) Namespace group = (Namespace)nameSpaces.peek();
LocalScope.java,NameDeclaration nameDeclaration = (NameDeclaration)i.next();,if ((NameDeclaration)i != null ) NameDeclaration nameDeclaration = (NameDeclaration)i.next();
LocalScope.java,NameDeclaration nameDeclaration = (NameDeclaration)i.next();,if ((NameDeclaration)i != null ) NameDeclaration nameDeclaration = (NameDeclaration)i.next();
OldSymbolTable.java,OldSymbol symbol = (OldSymbol)i.next();,if ((OldSymbol)i != null ) OldSymbol symbol = (OldSymbol)i.next();
OldSymbolTable.java,OldSymbol symbol = (OldSymbol)i.next();,if ((OldSymbol)i != null ) OldSymbol symbol = (OldSymbol)i.next();
LongVariableRule.java,String image = decl.getImage();,if (decl != null ) String image = decl.getImage();
UnnecessaryConversionTemporaryRule.java,String name = child.getImage();,if (child != null ) String name = child.getImage();
UnusedFormalParameterRule.java,int paramCount = formalParams.jjtGetNumChildren();,if (formalParams != null ) int paramCount = formalParams.jjtGetNumChildren();
RuleSetReadWriteTest.java,Properties propertiesIn = ruleIn.getProperties();,if (ruleIn != null ) Properties propertiesIn = ruleIn.getProperties();
RuleSetReadWriteTest.java,Properties propertiesOut = ruleOut.getProperties();,if (ruleOut != null ) Properties propertiesOut = ruleOut.getProperties();
PreferencesEditor.java,int windowWidth = fileChooser.getWidth();,if (fileChooser != null ) int windowWidth = fileChooser.getWidth();
PreferencesEditor.java,int windowHeight = fileChooser.getHeight();,if (fileChooser != null ) int windowHeight = fileChooser.getHeight();
PreferencesEditor.java,Dimension screenSize = getToolkit().getScreenSize();,if (getToolkit() != null ) Dimension screenSize = getToolkit().getScreenSize();
RuleSetWriter.java,Properties properties = rule.getProperties();,if (rule != null ) Properties properties = rule.getProperties();
RuleSetWriter.java,String propertyName = (String) keys.nextElement();,if (keys != null ) String propertyName = (String) keys.nextElement();
RuleEditingTabbedPane.java,TreePath treePath = event.getPath();,if (event != null ) TreePath treePath = event.getPath();
RuleEditingTabbedPane.java,Object component = treePath.getLastPathComponent();,if (treePath != null ) Object component = treePath.getLastPathComponent();
RulesTree.java,RulesTreeNode treeNode = RulesTree.this.getSelectedNode();,if (RulesTree != null ) RulesTreeNode treeNode = RulesTree.this.getSelectedNode();
RulesTree.java,Point location = event.getPoint();,if (event != null ) Point location = event.getPoint();
IDEAJRenderer.java,String inLower = in.toLowerCase();,if (in != null ) String inLower = in.toLowerCase();
IDEAJRenderer.java,int preambleend = inLower.indexOf(preamble) + preamble.length();,if (preamble != null ) int preambleend = inLower.indexOf(preamble) + preamble.length();
SymbolTableBuilderTest.java,ASTCompilationUnit c = parser.CompilationUnit();,if (parser != null ) ASTCompilationUnit c = parser.CompilationUnit();
SymbolTableBuilderTest.java,SymbolTable table = stb.getSymbolTable();,if (stb != null ) SymbolTable table = stb.getSymbolTable();
Scope.java,NameDeclaration nameDeclaration = (NameDeclaration)i.next();,if ((NameDeclaration)i != null ) NameDeclaration nameDeclaration = (NameDeclaration)i.next();
Scope.java,NameDeclaration nameDeclaration = (NameDeclaration)i.next();,if ((NameDeclaration)i != null ) NameDeclaration nameDeclaration = (NameDeclaration)i.next();
Scope.java,NameDeclaration nameDeclaration = (NameDeclaration)i.next();,if ((NameDeclaration)i != null ) NameDeclaration nameDeclaration = (NameDeclaration)i.next();
Scope.java,NameDeclaration nameDecl = (NameDeclaration)i.next();,if ((NameDeclaration)i != null ) NameDeclaration nameDecl = (NameDeclaration)i.next();
NamespaceTest.java,SymbolTable parent = nameSpace.peek();,if (nameSpace != null ) SymbolTable parent = nameSpace.peek();
UnusedLocalVariableRule.java,Symbol symbol = (Symbol)i.next();,if ((Symbol)i != null ) Symbol symbol = (Symbol)i.next();
UnusedPrivateInstanceVariableRule.java,Symbol symbol = (Symbol)i.next();,if ((Symbol)i != null ) Symbol symbol = (Symbol)i.next();
SymbolTable.java,Symbol symbol = (Symbol)i.next();,if ((Symbol)i != null ) Symbol symbol = (Symbol)i.next();
SymbolTable.java,Symbol symbol = (Symbol)i.next();,if ((Symbol)i != null ) Symbol symbol = (Symbol)i.next();
SymbolTableBuilder.java,tablePtr = tablePtr.getParent();,if (tablePtr != null ) tablePtr = tablePtr.getParent();
SymbolTableBuilder.java,tablePtr = table.getParent();,if (table != null ) tablePtr = table.getParent();
UnusedCodeRule.java,Symbol symbol = (Symbol)i.next();,if ((Symbol)i != null ) Symbol symbol = (Symbol)i.next();
RulesTree.java,Object userObject = treeNode.getUserObject();,if (treeNode != null ) Object userObject = treeNode.getUserObject();
StatisticalRule.java,Iterator points = dataPoints.iterator();,if (dataPoints != null ) Iterator points = dataPoints.iterator();
SymbolTable.java,Symbol symbol = (Symbol)i.next();,if ((Symbol)i != null ) Symbol symbol = (Symbol)i.next();
SymbolTable.java,Symbol symbol = (Symbol)i.next();,if ((Symbol)i != null ) Symbol symbol = (Symbol)i.next();
RuleSet.java,Iterator rs = rules.iterator();,if (rules != null ) Iterator rs = rules.iterator();
RuleSet.java,Rule rule = (Rule) rs.next();,if (rs != null ) Rule rule = (Rule) rs.next();
Preferences.java,String value = (String) values.nextElement();,if (values != null ) String value = (String) values.nextElement();
Preferences.java,value = buffer.toString();,if (buffer != null ) value = buffer.toString();
Preferences.java,String key = trim(name).toLowerCase();,if (trim(name) != null ) String key = trim(name).toLowerCase();
Preferences.java,String key = trim(name).toLowerCase();,if (trim(name) != null ) String key = trim(name).toLowerCase();
ResultsViewer.java,Exception exception = pmdException.getOriginalException();,if (pmdException != null ) Exception exception = pmdException.getOriginalException();
ResultsViewer.java,String message = pmdException.getMessage();,if (pmdException != null ) String message = pmdException.getMessage();
ResultsViewer.java,Iterator rules = ruleSet.getRules().iterator();,if (ruleSet != null ) Iterator rules = ruleSet.getRules().iterator();
ResultsViewer.java,Rule rule = (Rule) rules.next();,if (rules != null ) Rule rule = (Rule) rules.next();
ResultsViewer.java,Exception exception = pmdException.getOriginalException();,if (pmdException != null ) Exception exception = pmdException.getOriginalException();
ResultsViewer.java,String message = pmdException.getMessage();,if (pmdException != null ) String message = pmdException.getMessage();
RulesEditor.java,ruleSetDirectoryName = preferences.getCurrentRuleSetDirectory();,if (preferences != null ) ruleSetDirectoryName = preferences.getCurrentRuleSetDirectory();
RulesEditor.java,ruleSetDirectoryName = preferences.getCurrentRuleSetDirectory();,if (preferences != null ) ruleSetDirectoryName = preferences.getCurrentRuleSetDirectory();
RulesEditor.java,Iterator ruleSets = ruleSetFactory.getRegisteredRuleSets();,if (ruleSetFactory != null ) Iterator ruleSets = ruleSetFactory.getRegisteredRuleSets();
RulesEditor.java,String ruleSetDirectory = preferences.getCurrentRuleSetDirectory();,if (preferences != null ) String ruleSetDirectory = preferences.getCurrentRuleSetDirectory();
RulesEditor.java,Enumeration ruleSetNodes = treeNode.children();,if (treeNode != null ) Enumeration ruleSetNodes = treeNode.children();
RulesEditor.java,String ruleSetName = ruleSet.getName();,if (ruleSet != null ) String ruleSetName = ruleSet.getName();
RulesEditor.java,Enumeration ruleNodes = ruleSetNode.children();,if (ruleSetNode != null ) Enumeration ruleNodes = ruleSetNode.children();
RulesEditor.java,RulesTreeNode ruleNode = (RulesTreeNode) ruleNodes.nextElement();,if (ruleNodes != null ) RulesTreeNode ruleNode = (RulesTreeNode) ruleNodes.nextElement();
RulesEditor.java,String message = pmdException.getMessage();,if (pmdException != null ) String message = pmdException.getMessage();
RulesEditor.java,Exception originalException = pmdException.getOriginalException();,if (pmdException != null ) Exception originalException = pmdException.getOriginalException();
TileExpander.java,Tile tile = (Tile)i.next();,if ((Tile)i != null ) Tile tile = (Tile)i.next();
PMDClassLoader.java,text = text.trim();,if (text != null ) text = text.trim();
PMDDirectory.java,Iterator directories = ruleSetDirectoryNames.iterator();,if (ruleSetDirectoryNames != null ) Iterator directories = ruleSetDirectoryNames.iterator();
PMDDirectory.java,String directoryName = (String) directories.next();,if (directories != null ) String directoryName = (String) directories.next();
PMDDirectory.java,Iterator includedRuleSets = includedRuleSetFileNames.iterator();,if (includedRuleSetFileNames != null ) Iterator includedRuleSets = includedRuleSetFileNames.iterator();
PMDDirectory.java,String includedRuleSetFileName = (String) includedRuleSets.next();,if (includedRuleSets != null ) String includedRuleSetFileName = (String) includedRuleSets.next();
PMDDirectory.java,Iterator allRules = ruleSet.getRules().iterator();,if (ruleSet != null ) Iterator allRules = ruleSet.getRules().iterator();
PMDDirectory.java,Rule rule = (Rule) allRules.next();,if (allRules != null ) Rule rule = (Rule) allRules.next();
PMDDirectory.java,File[] directoryNames = ruleSetDirectory.listFiles();,if (ruleSetDirectory != null ) File[] directoryNames = ruleSetDirectory.listFiles();
PMDDirectory.java,File[] files = directory.listFiles();,if (directory != null ) File[] files = directory.listFiles();
PMDDirectory.java,String ruleSetFileName = parser.nextToken().trim();,if (parser != null ) String ruleSetFileName = parser.nextToken().trim();
PMDDirectory.java,Iterator iterator = ruleSetFileNames.iterator();,if (ruleSetFileNames != null ) Iterator iterator = ruleSetFileNames.iterator();
PMDDirectory.java,String[] fileNames = directory.list();,if (directory != null ) String[] fileNames = directory.list();
CPD.java,TokenList ts = new TokenList(file.getAbsolutePath());,if (TokenList(file != null ) TokenList ts = new TokenList(file.getAbsolutePath());
UnusedPrivateInstanceVariableRule.java,Namespace group = (Namespace)nameSpaces.peek();,if ((Namespace)nameSpaces != null ) Namespace group = (Namespace)nameSpaces.peek();
ResultsViewer.java,ruleSets = ruleSetFactory.getRegisteredRuleSets();,if (ruleSetFactory != null ) ruleSets = ruleSetFactory.getRegisteredRuleSets();
ResultsViewer.java,String filePath = file.getPath();,if (file != null ) String filePath = file.getPath();
RuleEditingTabbedPane.java,TreePath treePath = event.getPath();,if (event != null ) TreePath treePath = event.getPath();
RuleEditingTabbedPane.java,Object component = treePath.getLastPathComponent();,if (treePath != null ) Object component = treePath.getLastPathComponent();
RuleAllEditingPanelUI.java,TreePath treePath = event.getPath();,if (event != null ) TreePath treePath = event.getPath();
RuleAllEditingPanelUI.java,Object object = treePath.getLastPathComponent();,if (treePath != null ) Object object = treePath.getLastPathComponent();
RuleEditingPanelUI.java,TreePath treePath = event.getPath();,if (event != null ) TreePath treePath = event.getPath();
RuleEditingPanelUI.java,Object object = treePath.getLastPathComponent();,if (treePath != null ) Object object = treePath.getLastPathComponent();
RulePropertyEditingPanelUI.java,TreePath treePath = event.getPath();,if (event != null ) TreePath treePath = event.getPath();
RulePropertyEditingPanelUI.java,Object object = treePath.getLastPathComponent();,if (treePath != null ) Object object = treePath.getLastPathComponent();
RuleSetEditingPanelUI.java,TreePath treePath = event.getPath();,if (event != null ) TreePath treePath = event.getPath();
RuleSetEditingPanelUI.java,Object object = treePath.getLastPathComponent();,if (treePath != null ) Object object = treePath.getLastPathComponent();
PMDOpenTool.java,String packageName = node.getName();,if (node != null ) String packageName = node.getName();
CPD.java,TokenEntry firstToken = (TokenEntry)i.next();,if ((TokenEntry)i != null ) TokenEntry firstToken = (TokenEntry)i.next();
DGST.java,occ = tg.harvest(occ.size());,if (tg != null ) occ = tg.harvest(occ.size());
TilePlanter.java,Tile tile = (Tile)i.next();,if ((Tile)i != null ) Tile tile = (Tile)i.next();
DGST.java,TokenEntry te = (TokenEntry)j.next();,if ((TokenEntry)j != null ) TokenEntry te = (TokenEntry)j.next();
DGST.java,Tile tile = (Tile)j.next();,if ((Tile)j != null ) Tile tile = (Tile)j.next();
DGST.java,TokenEntry te = (TokenEntry)j.next();,if ((TokenEntry)j != null ) TokenEntry te = (TokenEntry)j.next();
TileExpander.java,Tile tile = (Tile)i.next();,if ((Tile)i != null ) Tile tile = (Tile)i.next();
Test.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
Test.java,long stop = System.currentTimeMillis();,if (System != null ) long stop = System.currentTimeMillis();
Test.java,start = System.currentTimeMillis();,if (System != null ) start = System.currentTimeMillis();
Test.java,stop = System.currentTimeMillis();,if (System != null ) stop = System.currentTimeMillis();
TileHarvesterTest.java,Occurrences newOcc = tileGatherer.gather(occ.size());,if (tileGatherer != null ) Occurrences newOcc = tileGatherer.gather(occ.size());
DGST.java,occ = tg.gather(occ.size());,if (tg != null ) occ = tg.gather(occ.size());
DGST.java,TokenEntry te = (TokenEntry)j.next();,if ((TokenEntry)j != null ) TokenEntry te = (TokenEntry)j.next();
TileExpander.java,Tile newTile = tileWrapper.tile.copy();,if (tileWrapper != null ) Tile newTile = tileWrapper.tile.copy();
PMDViewer.java,String message = pmdException.getMessage();,if (pmdException != null ) String message = pmdException.getMessage();
PMDViewer.java,Exception exception = pmdException.getOriginalException();,if (pmdException != null ) Exception exception = pmdException.getOriginalException();
Preferences.java,directory = file.getParentFile();,if (file != null ) directory = file.getParentFile();
RuleEditingTabbedPane.java,TreePath treePath = event.getPath();,if (event != null ) TreePath treePath = event.getPath();
RuleEditingTabbedPane.java,Object component = treePath.getLastPathComponent();,if (treePath != null ) Object component = treePath.getLastPathComponent();
DirectoryTreeModel.java,File[] fileSystemRoots = File.listRoots();,if (File != null ) File[] fileSystemRoots = File.listRoots();
DGST.java,Tile tile = (Tile)i.next();,if ((Tile)i != null ) Tile tile = (Tile)i.next();
PMDTask.java,String ruleSetName = st.nextToken();,if (st != null ) String ruleSetName = st.nextToken();
DCPDWorker.java,Tile tile = (Tile)i.next();,if ((Tile)i != null ) Tile tile = (Tile)i.next();
DCPDWorker.java,TokenEntry tok = (TokenEntry)i.next();,if ((TokenEntry)i != null ) TokenEntry tok = (TokenEntry)i.next();
DCPDWorker.java,Tile newTile = tileWrapper.tile.copy();,if (tileWrapper != null ) Tile newTile = tileWrapper.tile.copy();
DGST.java,TokenEntry tok = (TokenEntry)i.next();,if ((TokenEntry)i != null ) TokenEntry tok = (TokenEntry)i.next();
DGST.java,Tile newTile = tile.copy();,if (tile != null ) Tile newTile = tile.copy();
RuleEditingPanel.java,TreePath treePath = event.getPath();,if (event != null ) TreePath treePath = event.getPath();
RuleEditingPanel.java,Object component = treePath.getLastPathComponent();,if (treePath != null ) Object component = treePath.getLastPathComponent();
RulePropertyEditingPanel.java,TreePath treePath = event.getPath();,if (event != null ) TreePath treePath = event.getPath();
RulePropertyEditingPanel.java,Object object = treePath.getLastPathComponent();,if (treePath != null ) Object object = treePath.getLastPathComponent();
RuleSetEditingPanel.java,TreePath treePath = event.getPath();,if (event != null ) TreePath treePath = event.getPath();
RuleSetEditingPanel.java,Object object = treePath.getLastPathComponent();,if (treePath != null ) Object object = treePath.getLastPathComponent();
RuleSetFactory.java,Iterator iterator = ruleSetNames.iterator();,if (ruleSetNames != null ) Iterator iterator = ruleSetNames.iterator();
RuleSetFactory.java,String fileNames = buffer.toString();,if (buffer != null ) String fileNames = buffer.toString();
MessageDialog.java,Rectangle parentWindowBounds = PMDViewer.getWindow().getBounds();,if (PMDViewer != null ) Rectangle parentWindowBounds = PMDViewer.getWindow().getBounds();
StatisticalRule.java,point = (DataPoint) points.next();,if (points != null ) point = (DataPoint) points.next();
StatisticalRule.java,point = (DataPoint) points.next();,if (points != null ) point = (DataPoint) points.next();
Test.java,ASTCompilationUnit c = parser.CompilationUnit();,if (parser != null ) ASTCompilationUnit c = parser.CompilationUnit();
StatisticalRule.java,DataPoint point = (DataPoint) points.next();,if (points != null ) DataPoint point = (DataPoint) points.next();
RuleSetWriter.java,Map properties = rule.getProperties();,if (rule != null ) Map properties = rule.getProperties();
RuleSetWriter.java,Iterator iterator = properties.keySet().iterator();,if (properties != null ) Iterator iterator = properties.keySet().iterator();
RuleSetWriter.java,String propertyName = (String) iterator.next();,if (iterator != null ) String propertyName = (String) iterator.next();
MockRule.java,Report report = ctx.getReport();,if (ctx != null ) Report report = ctx.getReport();
MockRule.java,Iterator vs = violations.iterator();,if (violations != null ) Iterator vs = violations.iterator();
PMDOpenTool.java,Node[] fileNodes = node.getDisplayChildren();,if (node != null ) Node[] fileNodes = node.getDisplayChildren();
PMDOpenTool.java,InputStream is = javaNode.getInputStream();,if (javaNode != null ) InputStream is = javaNode.getInputStream();
PMDOpenTool.java,Node[] fileNodes = node.getDisplayChildren();,if (node != null ) Node[] fileNodes = node.getDisplayChildren();
DGST.java,Tile tile = (Tile)i.next();,if ((Tile)i != null ) Tile tile = (Tile)i.next();
StatisticalRule.java,DataPoint point = (DataPoint) points.next();,if (points != null ) DataPoint point = (DataPoint) points.next();
DCPDWorker.java,Tile tile = (Tile)i.next();,if ((Tile)i != null ) Tile tile = (Tile)i.next();
DGST.java,Tile tile = (Tile)i.next();,if ((Tile)i != null ) Tile tile = (Tile)i.next();
DGST.java,Tile tile = (Tile)i.next();,if ((Tile)i != null ) Tile tile = (Tile)i.next();
DGST.java,int totalTiles = occ.size();,if (occ != null ) int totalTiles = occ.size();
DGST.java,Tile tile = (Tile)i.next();,if ((Tile)i != null ) Tile tile = (Tile)i.next();
StatisticalRule.java,total += point.getScore();,if (point != null ) total += point.getScore();
StatisticalRule.java,Iterator points = dataPoints.iterator();,if (dataPoints != null ) Iterator points = dataPoints.iterator();
StatisticalRule.java,DataPoint point = (DataPoint) points.next();,if (points != null ) DataPoint point = (DataPoint) points.next();
StatisticalRule.java,Iterator points = dataPoints.iterator();,if (dataPoints != null ) Iterator points = dataPoints.iterator();
StatisticalRule.java,DataPoint point = (DataPoint) points.next();,if (points != null ) DataPoint point = (DataPoint) points.next();
StatisticalRule.java,DataPoint point = (DataPoint) pointsCopy.last();,if (pointsCopy != null ) DataPoint point = (DataPoint) pointsCopy.last();
GST.java,Tile tile = (Tile)i.next();,if ((Tile)i != null ) Tile tile = (Tile)i.next();
PMDOpenTool.java,Node[] fileNodes = node.getDisplayChildren();,if (node != null ) Node[] fileNodes = node.getDisplayChildren();
PMDOpenTool.java,Results results = cpd.getResults();,if (cpd != null ) Results results = cpd.getResults();
PMDOpenTool.java,Tile t = (Tile)iter.next();,if ((Tile)iter != null ) Tile t = (Tile)iter.next();
GUI.java,final long start = System.currentTimeMillis();,if (System != null ) final long start = System.currentTimeMillis();
PMDViewer.java,String useLookAndFeel = UIManager.getSystemLookAndFeelClassName();,if (UIManager != null ) String useLookAndFeel = UIManager.getSystemLookAndFeelClassName();
DirectoryTreeModel.java,TreePath treePath = event.getPath();,if (event != null ) TreePath treePath = event.getPath();
DirectoryTreeModel.java,DirectoryTreeNode treeNode = (DirectoryTreeNode) treePath.getLastPathComponent();,if (treePath != null ) DirectoryTreeNode treeNode = (DirectoryTreeNode) treePath.getLastPathComponent();
MessageDialog.java,Rectangle parentWindowBounds = parentWindow.getBounds();,if (parentWindow != null ) Rectangle parentWindowBounds = parentWindow.getBounds();
ResultsViewer.java,int index = event.getFirstIndex();,if (event != null ) int index = event.getFirstIndex();
SourceFileList.java,TreePath treePath = event.getPath();,if (event != null ) TreePath treePath = event.getPath();
SourceFileList.java,DirectoryTreeNode treeNode = (DirectoryTreeNode) treePath.getLastPathComponent();,if (treePath != null ) DirectoryTreeNode treeNode = (DirectoryTreeNode) treePath.getLastPathComponent();
SourceFileList.java,Object userObject = treeNode.getUserObject();,if (treeNode != null ) Object userObject = treeNode.getUserObject();
DirectoryTree.java,DirectoryTreeNode treeNode = (DirectoryTreeNode) treeModel.getRoot();,if (treeModel != null ) DirectoryTreeNode treeNode = (DirectoryTreeNode) treeModel.getRoot();
DirectoryTree.java,TreePath treePath = new TreePath(treeNode.getPath());,if (TreePath(treeNode != null ) TreePath treePath = new TreePath(treeNode.getPath());
DirectoryTree.java,Object userObject = treeNode.getUserObject();,if (treeNode != null ) Object userObject = treeNode.getUserObject();
DirectoryTreeModel.java,File[] fileSystemRoots = File.listRoots();,if (File != null ) File[] fileSystemRoots = File.listRoots();
DirectoryTreeModel.java,treePath = event.getPath();,if (event != null ) treePath = event.getPath();
DirectoryTreeModel.java,treeNode = (DirectoryTreeNode) treePath.getLastPathComponent();,if (treePath != null ) treeNode = (DirectoryTreeNode) treePath.getLastPathComponent();
DirectoryTreeModel.java,children = treeNode.children();,if (treeNode != null ) children = treeNode.children();
DirectoryTreeModel.java,DirectoryTreeNode childTreeNode = (DirectoryTreeNode) children.nextElement();,if (children != null ) DirectoryTreeNode childTreeNode = (DirectoryTreeNode) children.nextElement();
DirectoryTreeModel.java,File directory = (File) childTreeNode.getUserObject();,if (childTreeNode != null ) File directory = (File) childTreeNode.getUserObject();
DirectoryTreeModel.java,TreePath treePath = event.getPath();,if (event != null ) TreePath treePath = event.getPath();
DirectoryTreeModel.java,DirectoryTreeNode treeNode = (DirectoryTreeNode) treePath.getLastPathComponent();,if (treePath != null ) DirectoryTreeNode treeNode = (DirectoryTreeNode) treePath.getLastPathComponent();
DirectoryTreeModel.java,DirectoryTreeNode childTreeNode = (DirectoryTreeNode) children.nextElement();,if (children != null ) DirectoryTreeNode childTreeNode = (DirectoryTreeNode) children.nextElement();
DirectoryTreeNode.java,String name = file.getName();,if (file != null ) String name = file.getName();
MessageDialog.java,Rectangle parentWindowBounds = parentWindow.getBounds();,if (parentWindow != null ) Rectangle parentWindowBounds = parentWindow.getBounds();
MessageDialog.java,message = stream.toString();,if (stream != null ) message = stream.toString();
PMDViewer.java,Dimension screenSize = getToolkit().getScreenSize();,if (getToolkit() != null ) Dimension screenSize = getToolkit().getScreenSize();
PMDViewer.java,String useLookAndFeel = UIManager.getSystemLookAndFeelClassName();,if (UIManager != null ) String useLookAndFeel = UIManager.getSystemLookAndFeelClassName();
ResultsEditorPane.java,ruleSets = ruleSetFactory.getRegisteredRuleSets();,if (ruleSetFactory != null ) ruleSets = ruleSetFactory.getRegisteredRuleSets();
ResultsEditorPane.java,int index = event.getFirstIndex();,if (event != null ) int index = event.getFirstIndex();
SourceFileList.java,TreePath treePath = event.getPath();,if (event != null ) TreePath treePath = event.getPath();
SourceFileList.java,DirectoryTreeNode treeNode = (DirectoryTreeNode) treePath.getLastPathComponent();,if (treePath != null ) DirectoryTreeNode treeNode = (DirectoryTreeNode) treePath.getLastPathComponent();
SourceFileList.java,Object userObject = treeNode.getUserObject();,if (treeNode != null ) Object userObject = treeNode.getUserObject();
TextRenderer.java,Iterator violations = report.iterator();,if (report != null ) Iterator violations = report.iterator();
TextRenderer.java,RuleViolation ruleViolation = (RuleViolation) violations.next();,if (violations != null ) RuleViolation ruleViolation = (RuleViolation) violations.next();
TextRenderer.java,Rule rule = ruleViolation.getRule();,if (ruleViolation != null ) Rule rule = ruleViolation.getRule();
TextRenderer.java,String ruleMessage = ruleViolation.getDescription();,if (ruleViolation != null ) String ruleMessage = ruleViolation.getDescription();
TextRenderer.java,String description = rule.getDescription();,if (rule != null ) String description = rule.getDescription();
TextRenderer.java,String example = rule.getExample();,if (rule != null ) String example = rule.getExample();
GST.java,int totalTiles = occ.size();,if (occ != null ) int totalTiles = occ.size();
DirectoryTreeModel.java,treePath = event.getPath();,if (event != null ) treePath = event.getPath();
DirectoryTreeModel.java,treeNode = (DirectoryTreeNode) treePath.getLastPathComponent();,if (treePath != null ) treeNode = (DirectoryTreeNode) treePath.getLastPathComponent();
DirectoryTreeModel.java,children = treeNode.children();,if (treeNode != null ) children = treeNode.children();
SourceFileList.java,String fileName = file.getName().toLowerCase();,if (file != null ) String fileName = file.getName().toLowerCase();
Test.java,TokenList ts = new TokenList(file.getAbsolutePath());,if (TokenList(file != null ) TokenList ts = new TokenList(file.getAbsolutePath());
TSSWrapper.java,TokenList tl = (TokenList)i.next();,if ((TokenList)i != null ) TokenList tl = (TokenList)i.next();
Test.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
Test.java,long stop = System.currentTimeMillis();,if (System != null ) long stop = System.currentTimeMillis();
RuleSetFactory.java,String description = node.getFirstChild().getNodeValue();,if (node != null ) String description = node.getFirstChild().getNodeValue();
RuleSetFactory.java,Node propNode = node.getFirstChild();,if (node != null ) Node propNode = node.getFirstChild();
RuleSetFactory.java,propNode = propNode.getNextSibling();,if (propNode != null ) propNode = propNode.getNextSibling();
ConfigureRuleSetPropertyPage.java,int index = list.getSelectedIndex();,if (list != null ) int index = list.getSelectedIndex();
ConfigureRuleSetPropertyPage.java,String ruleSetName = listRuleSets.getSelectedValue().toString();,if (listRuleSets != null ) String ruleSetName = listRuleSets.getSelectedValue().toString();
GUI.java,final long start = System.currentTimeMillis();,if (System != null ) final long start = System.currentTimeMillis();
GUI.java,long now = System.currentTimeMillis();,if (System != null ) long now = System.currentTimeMillis();
PMDOptionPane.java,int index = locationToIndex(e.getPoint());,if (locationToIndex(e != null ) int index = locationToIndex(e.getPoint());
RuleSet.java,Iterator rs = rules.iterator();,if (rules != null ) Iterator rs = rules.iterator();
RuleSet.java,Rule rule = (Rule) rs.next();,if (rs != null ) Rule rule = (Rule) rs.next();
GST.java,newTile = tile.copy();,if (tile != null ) newTile = tile.copy();
UnusedPrivateInstanceVariableRule.java,Namespace group = (Namespace)nameSpaces.peek();,if ((Namespace)nameSpaces != null ) Namespace group = (Namespace)nameSpaces.peek();
StatisticalRule.java,Iterator points = dataPoints.iterator();,if (dataPoints != null ) Iterator points = dataPoints.iterator();
StatisticalRule.java,DataPoint point = (DataPoint) points.next();,if (points != null ) DataPoint point = (DataPoint) points.next();
StatisticalRule.java,DataPoint point = (DataPoint) points.next();,if (points != null ) DataPoint point = (DataPoint) points.next();
StatisticalRule.java,total += point.getScore();,if (point != null ) total += point.getScore();
Occurrences.java,Tile tile = (Tile)i.next();,if ((Tile)i != null ) Tile tile = (Tile)i.next();
Occurrences.java,TokenEntry tok = (TokenEntry)j.next();,if ((TokenEntry)j != null ) TokenEntry tok = (TokenEntry)j.next();
Tile.java,TokenEntry tok = (TokenEntry)i.next();,if ((TokenEntry)i != null ) TokenEntry tok = (TokenEntry)i.next();
UnusedLocalVariableRule.java,Symbol symbol = (Symbol)i.next();,if ((Symbol)i != null ) Symbol symbol = (Symbol)i.next();
UnusedPrivateInstanceVariableRule.java,Symbol symbol = (Symbol)i.next();,if ((Symbol)i != null ) Symbol symbol = (Symbol)i.next();
Results.java,TokenEntry firstToken = (TokenEntry)i.next();,if ((TokenEntry)i != null ) TokenEntry firstToken = (TokenEntry)i.next();
Results.java,int lastTokenIndex = firstToken.getIndex() + tile.getTokenCount();,if (tile != null ) int lastTokenIndex = firstToken.getIndex() + tile.getTokenCount();
CPD.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
CPD.java,Results results = cpd.getResults();,if (cpd != null ) Results results = cpd.getResults();
CPD.java,Tile tile = (Tile)i.next();,if ((Tile)i != null ) Tile tile = (Tile)i.next();
CPD.java,TokenEntry tok = (TokenEntry)j.next();,if ((TokenEntry)j != null ) TokenEntry tok = (TokenEntry)j.next();
GUI.java,Results results = cpd.getResults();,if (cpd != null ) Results results = cpd.getResults();
GUI.java,Tile tile = (Tile)i.next();,if ((Tile)i != null ) Tile tile = (Tile)i.next();
GUI.java,TokenEntry tok = (TokenEntry)j.next();,if ((TokenEntry)j != null ) TokenEntry tok = (TokenEntry)j.next();
PMDJEditPlugin.java,DockableWindowManager wm = view.getDockableWindowManager();,if (view != null ) DockableWindowManager wm = view.getDockableWindowManager();
PMDJEditPlugin.java,DockableWindowManager wm = view.getDockableWindowManager();,if (view != null ) DockableWindowManager wm = view.getDockableWindowManager();
PMDOptionPane.java,RuleSet rs = (RuleSet)i.next();,if ((RuleSet)i != null ) RuleSet rs = (RuleSet)i.next();
SelectedRuleSetsMap.java,RuleSet rs = (RuleSet)i.next();,if ((RuleSet)i != null ) RuleSet rs = (RuleSet)i.next();
SelectedRuleSetsMap.java,RuleSet rs = (RuleSet)i.next();,if ((RuleSet)i != null ) RuleSet rs = (RuleSet)i.next();
SelectedRuleSetsMap.java,RuleSet rs = (RuleSet)i.next();,if ((RuleSet)i != null ) RuleSet rs = (RuleSet)i.next();
PMDOpenTool.java,Node node = Browser.getActiveBrowser().getActiveNode();,if (Browser != null ) Node node = Browser.getActiveBrowser().getActiveNode();
PMDOpenTool.java,Document doc = viewer.getEditor().getDocument();,if (viewer != null ) Document doc = viewer.getEditor().getDocument();
PMDOpenTool.java,Node[] fileNodes = node.getDisplayChildren();,if (node != null ) Node[] fileNodes = node.getDisplayChildren();
PMDOpenTool.java,InputStream is = javaNode.getInputStream();,if (javaNode != null ) InputStream is = javaNode.getInputStream();
CPDTest.java,Results occs = cpd.getResults();,if (cpd != null ) Results occs = cpd.getResults();
CPDTest.java,Token tok = (Token)i.next();,if ((Token)i != null ) Token tok = (Token)i.next();
CPDTest.java,Results results = cpd.getResults();,if (cpd != null ) Results results = cpd.getResults();
CPDTest.java,Token tok = (Token)i.next();,if ((Token)i != null ) Token tok = (Token)i.next();
GSTTest.java,Results results = gst.crunch();,if (gst != null ) Results results = gst.crunch();
GSTTest.java,Token tok = (Token)occs.next();,if ((Token)occs != null ) Token tok = (Token)occs.next();
OccurrencesTest.java,Token tok = (Token)i.next();,if ((Token)i != null ) Token tok = (Token)i.next();
TileTest.java,Tile tileCopy = tile.copy();,if (tile != null ) Tile tileCopy = tile.copy();
CPD.java,TokenList ts = new TokenList(file.getAbsolutePath());,if (TokenList(file != null ) TokenList ts = new TokenList(file.getAbsolutePath());
CPD.java,Tile tile = (Tile)i.next();,if ((Tile)i != null ) Tile tile = (Tile)i.next();
CPD.java,Results results = cpd.getResults();,if (cpd != null ) Results results = cpd.getResults();
CPD.java,Tile tile = (Tile)i.next();,if ((Tile)i != null ) Tile tile = (Tile)i.next();
GST.java,Tile tile = (Tile)i.next();,if ((Tile)i != null ) Tile tile = (Tile)i.next();
GST.java,Tile tile = (Tile)i.next();,if ((Tile)i != null ) Tile tile = (Tile)i.next();
GST.java,Token tok = (Token)i.next();,if ((Token)i != null ) Token tok = (Token)i.next();
GST.java,newTile = tile.copy();,if (tile != null ) newTile = tile.copy();
Occurrences.java,TokenList ts = (TokenList)j.next();,if ((TokenList)j != null ) TokenList ts = (TokenList)j.next();
Occurrences.java,Token tok = (Token)i.next();,if ((Token)i != null ) Token tok = (Token)i.next();
Occurrences.java,Tile tile = (Tile)i.next();,if ((Tile)i != null ) Tile tile = (Tile)i.next();
Occurrences.java,Tile tile = (Tile)i.next();,if ((Tile)i != null ) Tile tile = (Tile)i.next();
Occurrences.java,Tile tile = (Tile)i.next();,if ((Tile)i != null ) Tile tile = (Tile)i.next();
Occurrences.java,Token tok = (Token)j.next();,if ((Token)j != null ) Token tok = (Token)j.next();
Tile.java,Token tok = (Token)i.next();,if ((Token)i != null ) Token tok = (Token)i.next();
Tile.java,Token tok = (Token)i.next();,if ((Token)i != null ) Token tok = (Token)i.next();
Tile.java,Token token = (Token)i.next();,if ((Token)i != null ) Token token = (Token)i.next();
TokenList.java,int nextTokenIndex = tok.getIndex() + tile.getTokenCount();,if (tile != null ) int nextTokenIndex = tok.getIndex() + tile.getTokenCount();
TokenSets.java,TokenList ts = (TokenList)i.next();,if ((TokenList)i != null ) TokenList ts = (TokenList)i.next();
PMDOpenTool.java,Node[] fileNodes = node.getDisplayChildren();,if (node != null ) Node[] fileNodes = node.getDisplayChildren();
PMDOpenTool.java,InputStream is = javaNode.getInputStream();,if (javaNode != null ) InputStream is = javaNode.getInputStream();
Results.java,Tile tile = (Tile)i.next();,if ((Tile)i != null ) Tile tile = (Tile)i.next();
CPD.java,results = gst.crunch();,if (gst != null ) results = gst.crunch();
CPD.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
CPD.java,long stop = System.currentTimeMillis();,if (System != null ) long stop = System.currentTimeMillis();
GST.java,Tile newTile = tile.copy();,if (tile != null ) Tile newTile = tile.copy();
TokenSets.java,TokenList ts = (TokenList)i.next();,if ((TokenList)i != null ) TokenList ts = (TokenList)i.next();
CPDTest.java,Results results = cpd.getResults();,if (cpd != null ) Results results = cpd.getResults();
CPDTest.java,Token tok = (Token)i.next();,if ((Token)i != null ) Token tok = (Token)i.next();
GST.java,Token tok = (Token)j.next();,if ((Token)j != null ) Token tok = (Token)j.next();
CPDTest.java,Occurrence occ = (Occurrence)i.next();,if ((Occurrence)i != null ) Occurrence occ = (Occurrence)i.next();
CPDTest.java,Occurrence occ = (Occurrence)i.next();,if ((Occurrence)i != null ) Occurrence occ = (Occurrence)i.next();
GSTTest.java,Occurrence oc = (Occurrence)occs.next();,if ((Occurrence)occs != null ) Occurrence oc = (Occurrence)occs.next();
OccurrencesTest.java,Occurrence occ = (Occurrence)i.next();,if ((Occurrence)i != null ) Occurrence occ = (Occurrence)i.next();
GST.java,Occurrence occ = (Occurrence)j.next();,if ((Occurrence)j != null ) Occurrence occ = (Occurrence)j.next();
GST.java,Occurrence occ = (Occurrence)i.next();,if ((Occurrence)i != null ) Occurrence occ = (Occurrence)i.next();
Occurrences.java,Occurrence occ = (Occurrence)j.next();,if ((Occurrence)j != null ) Occurrence occ = (Occurrence)j.next();
TokenList.java,int nextTokenIndex = occ.getIndex() + tile.getTokenCount();,if (tile != null ) int nextTokenIndex = occ.getIndex() + tile.getTokenCount();
Occurrence.java,this.index = tok.getIndex();,if (tok != null ) this.index = tok.getIndex();
CPDTest.java,Occurrences occs = cpd.getResults();,if (cpd != null ) Occurrences occs = cpd.getResults();
CPDTest.java,Occurrences occs = cpd.getResults();,if (cpd != null ) Occurrences occs = cpd.getResults();
GSTTest.java,Occurrences occ = gst.getResults();,if (gst != null ) Occurrences occ = gst.getResults();
GSTTest.java,Iterator tiles = occ.getTiles();,if (occ != null ) Iterator tiles = occ.getTiles();
GSTTest.java,Tile tile = (Tile)tiles.next();,if ((Tile)tiles != null ) Tile tile = (Tile)tiles.next();
CPD.java,results = gst.getResults();,if (gst != null ) results = gst.getResults();
Occurrences.java,Tile tile = (Tile)i.next();,if ((Tile)i != null ) Tile tile = (Tile)i.next();
RuleSetFactory.java,RuleSet ruleSet = createRuleSet(st.nextToken());,if (createRuleSet(st != null ) RuleSet ruleSet = createRuleSet(st.nextToken());
GSTTest.java,occ = gst.getResults();,if (gst != null ) occ = gst.getResults();
CPD.java,TokenSet ts = new TokenSet(file.getAbsolutePath());,if (TokenSet(file != null ) TokenSet ts = new TokenSet(file.getAbsolutePath());
Occurrences.java,TokenSet ts = (TokenSet)j.next();,if ((TokenSet)j != null ) TokenSet ts = (TokenSet)j.next();
TokenSets.java,TokenSet ts = (TokenSet)i.next();,if ((TokenSet)i != null ) TokenSet ts = (TokenSet)i.next();
TokenSets.java,TokenSet ts = (TokenSet)i.next();,if ((TokenSet)i != null ) TokenSet ts = (TokenSet)i.next();
Occurrences.java,Token tok = (Token)i.next();,if ((Token)i != null ) Token tok = (Token)i.next();
CPD.java,Occurrences occ = gst.getResults();,if (gst != null ) Occurrences occ = gst.getResults();
CPD.java,Tile tile = (Tile)i.next();,if ((Tile)i != null ) Tile tile = (Tile)i.next();
CPD.java,String image = (String)i.next();,if ((String)i != null ) String image = (String)i.next();
CPD.java,TokenPtr tokenPtr = (TokenPtr)j.next();,if ((TokenPtr)j != null ) TokenPtr tokenPtr = (TokenPtr)j.next();
CPD.java,lastTokenCount = tokens.size();,if (tokens != null ) lastTokenCount = tokens.size();
CPD.java,String image = (String)i.next();,if ((String)i != null ) String image = (String)i.next();
CPD.java,File file = (File)i.next();,if ((File)i != null ) File file = (File)i.next();
CPD.java,File file = (File)i.next();,if ((File)i != null ) File file = (File)i.next();
CPD.java,String alreadyIn = (String)p.next();,if ((String)p != null ) String alreadyIn = (String)p.next();
PMDJEditPlugin.java,List files = findFilesInDirectory(browser.getDirectory());,if (findFilesInDirectory(browser != null ) List files = findFilesInDirectory(browser.getDirectory());
PMDJEditPlugin.java,File file = (File)i.next();,if ((File)i != null ) File file = (File)i.next();
PMDJEditPlugin.java,RuleViolation rv = (RuleViolation)j.next();,if ((RuleViolation)j != null ) RuleViolation rv = (RuleViolation)j.next();
PMDJEditPlugin.java,List files = findFilesRecursively(browser.getDirectory());,if (findFilesRecursively(browser != null ) List files = findFilesRecursively(browser.getDirectory());
PMDJEditPlugin.java,File file = (File)i.next();,if ((File)i != null ) File file = (File)i.next();
PMDJEditPlugin.java,RuleViolation rv = (RuleViolation)j.next();,if ((RuleViolation)j != null ) RuleViolation rv = (RuleViolation)j.next();
UnusedLocalVariableRule.java,Namespace nameSpace = (Namespace)nameSpaces.peek();,if ((Namespace)nameSpaces != null ) Namespace nameSpace = (Namespace)nameSpaces.peek();
UnusedLocalVariableRule.java,Namespace group = (Namespace)nameSpaces.peek();,if ((Namespace)nameSpaces != null ) Namespace group = (Namespace)nameSpaces.peek();
UnusedLocalVariableRule.java,Namespace group = (Namespace)nameSpaces.peek();,if ((Namespace)nameSpaces != null ) Namespace group = (Namespace)nameSpaces.peek();
ConfigureRuleSetPropertyPage.java,String ruleSetName = listRuleSets.getSelectedValue().toString();,if (listRuleSets != null ) String ruleSetName = listRuleSets.getSelectedValue().toString();
ActiveRuleSetPropertyPage.java,Iterator iter = ActiveRuleSetPropertyGroup.ruleSets.values().iterator();,if (ActiveRuleSetPropertyGroup != null ) Iterator iter = ActiveRuleSetPropertyGroup.ruleSets.values().iterator();
PMDOpenTool.java,RuleSet rules = rsp.getRuleSet();,if (rsp != null ) RuleSet rules = rsp.getRuleSet();
PMDJEditPlugin.java,RuleViolation rv = (RuleViolation)i.next();,if ((RuleViolation)i != null ) RuleViolation rv = (RuleViolation)i.next();
ActiveRuleSetPropertyPage.java,Iterator iter = RuleSetPropertyGroup.ruleSets.values().iterator();,if (RuleSetPropertyGroup != null ) Iterator iter = RuleSetPropertyGroup.ruleSets.values().iterator();
ForLoopsMustUseBracesRule.java,lineNumberOfLastViolation = node.getBeginLine();,if (node != null ) lineNumberOfLastViolation = node.getBeginLine();
WhileLoopsMustUseBracesRule.java,lineNumberOfLastViolation = node.getBeginLine();,if (node != null ) lineNumberOfLastViolation = node.getBeginLine();
IfElseStmtsMustUseBracesRule.java,lineNumberOfLastViolation = node.getBeginLine();,if (node != null ) lineNumberOfLastViolation = node.getBeginLine();
PMDJEditPlugin.java,RuleViolation rv = (RuleViolation)i.next();,if ((RuleViolation)i != null ) RuleViolation rv = (RuleViolation)i.next();
PMDJEditPlugin.java,String path = buffer.getPath();,if (buffer != null ) String path = buffer.getPath();
PMDOptionPane.java,String key = (String)i.next();,if ((String)i != null ) String key = (String)i.next();
SelectedRuleSetsMap.java,String key = (String)i.next();,if ((String)i != null ) String key = (String)i.next();
SelectedRuleSetsMap.java,String key = (String)i.next();,if ((String)i != null ) String key = (String)i.next();
PMDJEditPlugin.java,RuleViolation rv = (RuleViolation)i.next();,if ((RuleViolation)i != null ) RuleViolation rv = (RuleViolation)i.next();
PMDJEditPlugin.java,String path = buffer.getPath();,if (buffer != null ) String path = buffer.getPath();
PMDRuleViolationDialog.java,RuleViolation rv = (RuleViolation)i.next();,if ((RuleViolation)i != null ) RuleViolation rv = (RuleViolation)i.next();
PMDJEditPlugin.java,PMDRuleViolationDialog dialog = new PMDRuleViolationDialog(ctx.getReport());,if (PMDRuleViolationDialog(ctx != null ) PMDRuleViolationDialog dialog = new PMDRuleViolationDialog(ctx.getReport());
DuplicateImportsRule.java,String thisImportOnDemand = (String)i.next();,if ((String)i != null ) String thisImportOnDemand = (String)i.next();
DuplicateImportsRule.java,String thisSingleTypeImport = (String)j.next();,if ((String)j != null ) String thisSingleTypeImport = (String)j.next();
RuleSetPropertyPage.java,Iterator iter = rsf.getRegisteredRuleSets();,if (rsf != null ) Iterator iter = rsf.getRegisteredRuleSets();
RuleSetPropertyPage.java,RuleSet rs = (RuleSet)iter.next();,if ((RuleSet)iter != null ) RuleSet rs = (RuleSet)iter.next();
PMDOpenTool.java,Document doc = viewer.getEditor().getDocument();,if (viewer != null ) Document doc = viewer.getEditor().getDocument();
PMDOpenTool.java,RuleViolation rv = (RuleViolation)i.next();,if ((RuleViolation)i != null ) RuleViolation rv = (RuleViolation)i.next();
PMDOpenTool.java,Node[] fileNodes = node.getDisplayChildren();,if (node != null ) Node[] fileNodes = node.getDisplayChildren();
PMDOpenTool.java,Document doc = viewer.getEditor().getDocument();,if (viewer != null ) Document doc = viewer.getEditor().getDocument();
PMDOpenTool.java,RuleViolation rv = (RuleViolation)i.next();,if ((RuleViolation)i != null ) RuleViolation rv = (RuleViolation)i.next();
UnusedPrivateInstanceVariableRuleTest.java,Iterator i =  report.iterator();,if (report != null ) Iterator i =  report.iterator();
UnusedPrivateInstanceVariableRuleTest.java,Iterator i =  report.iterator();,if (report != null ) Iterator i =  report.iterator();
UnusedLocalVariableRule.java,Namespace group = (Namespace)nameSpaces.peek();,if ((Namespace)nameSpaces != null ) Namespace group = (Namespace)nameSpaces.peek();
UnusedLocalVariableTest.java,Iterator i =  report.iterator();,if (report != null ) Iterator i =  report.iterator();
UnusedLocalVariableRule.java,Namespace group = (Namespace)tableGroups.peek();,if ((Namespace)tableGroups != null ) Namespace group = (Namespace)tableGroups.peek();
UnusedLocalVariableRule.java,Namespace group = (Namespace)tableGroups.peek();,if ((Namespace)tableGroups != null ) Namespace group = (Namespace)tableGroups.peek();
UnusedLocalVariableRule.java,Namespace group = (Namespace)tableGroups.peek();,if ((Namespace)tableGroups != null ) Namespace group = (Namespace)tableGroups.peek();
TypeSet.java,String importStmt = (String)i.next();,if ((String)i != null ) String importStmt = (String)i.next();
PMD.java,ASTCompilationUnit c = parser.CompilationUnit();,if (parser != null ) ASTCompilationUnit c = parser.CompilationUnit();
PMDJEditPlugin.java,RuleViolation rv = (RuleViolation)i.next();,if ((RuleViolation)i != null ) RuleViolation rv = (RuleViolation)i.next();
PMDTask.java,String ruleSetName = st.nextToken();,if (st != null ) String ruleSetName = st.nextToken();
PMDOptionPane.java,String key = (String)i.next();,if ((String)i != null ) String key = (String)i.next();
PMDJEditPlugin.java,String text = view.getTextArea().getText();,if (view != null ) String text = view.getTextArea().getText();
Report.java,RuleViolation rv = (RuleViolation) i.next();,if (i != null ) RuleViolation rv = (RuleViolation) i.next();
Report.java,RuleViolation rv = (RuleViolation) i.next();,if (i != null ) RuleViolation rv = (RuleViolation) i.next();
RuleFactoryTest.java,String list = rf.getConcatenatedRuleSetList();,if (rf != null ) String list = rf.getConcatenatedRuleSetList();
PMD.java,Rule rule = (Rule)iterator.next();,if ((Rule)iterator != null ) Rule rule = (Rule)iterator.next();
RuleSetFactory.java,NodeList rules = root.getChildNodes();,if (root != null ) NodeList rules = root.getChildNodes();
UnusedLocalVariableTest.java,Iterator i =  report.violationsInCurrentFile();,if (report != null ) Iterator i =  report.violationsInCurrentFile();
UnusedPrivateInstanceVariableRuleTest.java,Iterator i =  report.violationsInCurrentFile();,if (report != null ) Iterator i =  report.violationsInCurrentFile();
UnusedPrivateInstanceVariableRuleTest.java,Iterator i =  report.violationsInCurrentFile();,if (report != null ) Iterator i =  report.violationsInCurrentFile();
Report.java,String filename = (String)i.next();,if ((String)i != null ) String filename = (String)i.next();
Report.java,RuleViolation rv = (RuleViolation) iterator.next();,if (iterator != null ) RuleViolation rv = (RuleViolation) iterator.next();
Report.java,String filename = (String)i.next();,if ((String)i != null ) String filename = (String)i.next();
Report.java,RuleViolation rv = (RuleViolation) iterator.next();,if (iterator != null ) RuleViolation rv = (RuleViolation) iterator.next();
IfElseStmtsMustUseBracesRule.java,this.lineNumberOfLastViolation = node.getBeginLine();,if (node != null ) this.lineNumberOfLastViolation = node.getBeginLine();
Report.java,String filename = (String)i.next();,if ((String)i != null ) String filename = (String)i.next();
Report.java,RuleViolation rv = (RuleViolation) iterator.next();,if (iterator != null ) RuleViolation rv = (RuleViolation) iterator.next();
RuleFactoryTest.java,String list = RuleFactory.getConcatenatedRuleSetList();,if (RuleFactory != null ) String list = RuleFactory.getConcatenatedRuleSetList();
RuleTst.java,ASTCompilationUnit astCU = parser.CompilationUnit();,if (parser != null ) ASTCompilationUnit astCU = parser.CompilationUnit();
FunctionalTest.java,Iterator i =  report.violationsInCurrentFile();,if (report != null ) Iterator i =  report.violationsInCurrentFile();
FunctionalTest.java,Iterator i =  report.violationsInCurrentFile();,if (report != null ) Iterator i =  report.violationsInCurrentFile();
FunctionalTest.java,Iterator i =  report.violationsInCurrentFile();,if (report != null ) Iterator i =  report.violationsInCurrentFile();
AbstractRule.java,SimpleNode node = (SimpleNode)i.next();,if ((SimpleNode)i != null ) SimpleNode node = (SimpleNode)i.next();
IfElseStmtsMustUseBracesRule.java,this.lineNumberOfLastViolation = node.getBeginLine();,if (node != null ) this.lineNumberOfLastViolation = node.getBeginLine();
UnnecessaryConversionTemporaryRule.java,String name = child.getImage();,if (child != null ) String name = child.getImage();
UnusedLocalVariableRule.java,Namespace group = (Namespace)tableGroups.peek();,if ((Namespace)tableGroups != null ) Namespace group = (Namespace)tableGroups.peek();
UnusedLocalVariableRule.java,Namespace group = (Namespace)tableGroups.peek();,if ((Namespace)tableGroups != null ) Namespace group = (Namespace)tableGroups.peek();
UnusedLocalVariableRule.java,Symbol symbol = (Symbol)i.next();,if ((Symbol)i != null ) Symbol symbol = (Symbol)i.next();
UnusedLocalVariableRule.java,Namespace group = (Namespace)tableGroups.peek();,if ((Namespace)tableGroups != null ) Namespace group = (Namespace)tableGroups.peek();
UnusedPrivateInstanceVariableRule.java,Namespace group = (Namespace)nameSpaces.peek();,if ((Namespace)nameSpaces != null ) Namespace group = (Namespace)nameSpaces.peek();
UnusedPrivateInstanceVariableRule.java,Namespace group = (Namespace)nameSpaces.peek();,if ((Namespace)nameSpaces != null ) Namespace group = (Namespace)nameSpaces.peek();
UnusedPrivateInstanceVariableRule.java,Symbol symbol = (Symbol)i.next();,if ((Symbol)i != null ) Symbol symbol = (Symbol)i.next();
PMD.java,JavaParserVisitor rule = (JavaParserVisitor)iterator.next();,if ((JavaParserVisitor)iterator != null ) JavaParserVisitor rule = (JavaParserVisitor)iterator.next();
FunctionalTest.java,Iterator i =  report.iterator();,if (report != null ) Iterator i =  report.iterator();
FunctionalTest.java,Iterator i =  report.iterator();,if (report != null ) Iterator i =  report.iterator();
FunctionalTest.java,Iterator i =  report.iterator();,if (report != null ) Iterator i =  report.iterator();
PMD.java,Report report = new Report(file.getAbsolutePath());,if (Report(file != null ) Report report = new Report(file.getAbsolutePath());
Report.java,RuleViolation violation = (RuleViolation) iterator.next();,if (iterator != null ) RuleViolation violation = (RuleViolation) iterator.next();
PMD.java,Report report = new Report(file.getAbsolutePath());,if (Report(file != null ) Report report = new Report(file.getAbsolutePath());
PMD.java,ASTCompilationUnit c = parser.CompilationUnit();,if (parser != null ) ASTCompilationUnit c = parser.CompilationUnit();
PMD.java,JavaParserVisitor rule = (JavaParserVisitor)iterator.next();,if ((JavaParserVisitor)iterator != null ) JavaParserVisitor rule = (JavaParserVisitor)iterator.next();
PMDTask.java,FileSet fs = (FileSet) i.next();,if (i != null ) FileSet fs = (FileSet) i.next();
PMDTask.java,String[] srcFiles = ds.getIncludedFiles();,if (ds != null ) String[] srcFiles = ds.getIncludedFiles();
SymbolTable.java,Symbol symbol = (Symbol)i.next();,if ((Symbol)i != null ) Symbol symbol = (Symbol)i.next();
SymbolTable.java,Symbol symbol = (Symbol)i.next();,if ((Symbol)i != null ) Symbol symbol = (Symbol)i.next();
UnusedLocalVariableRule.java,Namespace group = (Namespace)tableGroups.peek();,if ((Namespace)tableGroups != null ) Namespace group = (Namespace)tableGroups.peek();
UnusedLocalVariableRule.java,Namespace group = (Namespace)tableGroups.peek();,if ((Namespace)tableGroups != null ) Namespace group = (Namespace)tableGroups.peek();
UnusedLocalVariableRule.java,Symbol symbol = (Symbol)i.next();,if ((Symbol)i != null ) Symbol symbol = (Symbol)i.next();
UnusedLocalVariableRule.java,Namespace group = (Namespace)tableGroups.peek();,if ((Namespace)tableGroups != null ) Namespace group = (Namespace)tableGroups.peek();
UnusedPrivateInstanceVariableRule.java,Namespace group = (Namespace)nameSpaces.peek();,if ((Namespace)nameSpaces != null ) Namespace group = (Namespace)nameSpaces.peek();
UnusedPrivateInstanceVariableRule.java,Namespace group = (Namespace)nameSpaces.peek();,if ((Namespace)nameSpaces != null ) Namespace group = (Namespace)nameSpaces.peek();
UnusedPrivateInstanceVariableRule.java,Symbol symbol = (Symbol)i.next();,if ((Symbol)i != null ) Symbol symbol = (Symbol)i.next();
