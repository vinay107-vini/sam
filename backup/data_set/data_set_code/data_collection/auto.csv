Filename,Buggy/Deleted,Fixed/Added
MoreTypesIsTypeOfTest.java,this.elements = compilationRule.getElements();,if (compilationRule != null ) this.elements = compilationRule.getElements();
MoreTypesIsTypeOfTest.java,Element element = Iterables.getOnlyElement(typeElement.getEnclosedElements());,if (Iterables != null ) Element element = Iterables.getOnlyElement(typeElement.getEnclosedElements());
MoreTypesIsTypeOfTest.java,TypeMirror arrayType = MoreElements.asExecutable(element).getReturnType();,if (MoreElements != null ) TypeMirror arrayType = MoreElements.asExecutable(element).getReturnType();
MoreTypes.java,int nArguments = aArguments.size();,if (aArguments != null ) int nArguments = aArguments.size();
AutoBuilderProcessor.java,vars.build = executable.invoke();,if (executable != null ) vars.build = executable.invoke();
BuilderRequiredProperties.java,int primitiveCount = primitiveProperties.size();,if (primitiveProperties != null ) int primitiveCount = primitiveProperties.size();
BuilderRequiredPropertiesTest.java,Property stringProperty = Iterables.getOnlyElement(onlyString.getProperties());,if (Iterables != null ) Property stringProperty = Iterables.getOnlyElement(onlyString.getProperties());
BuilderRequiredPropertiesTest.java,Property stringProperty = Iterables.getOnlyElement(onlyString.getProperties());,if (Iterables != null ) Property stringProperty = Iterables.getOnlyElement(onlyString.getProperties());
AutoBuilderProcessor.java,TypeMirror returnType = executable.getReturnType();,if (executable != null ) TypeMirror returnType = executable.getReturnType();
AutoBuilderProcessor.java,TypeElement enclosing = MoreElements.asType(executable.getEnclosingElement());,if (MoreElements != null ) TypeElement enclosing = MoreElements.asType(executable.getEnclosingElement());
AutoBuilderProcessor.java,String type = TypeEncoder.encodeRaw(enclosing.asType());,if (TypeEncoder != null ) String type = TypeEncoder.encodeRaw(enclosing.asType());
AutoBuilderProcessor.java,boolean generic = !enclosing.getTypeParameters().isEmpty();,if (!enclosing != null ) boolean generic = !enclosing.getTypeParameters().isEmpty();
BuilderMethodClassifierForAutoBuilder.java,TypeElement container = MoreElements.asType(executable.getEnclosingElement());,if (MoreElements != null ) TypeElement container = MoreElements.asType(executable.getEnclosingElement());
AutoBuilderProcessor.java,TypeMirror returnType = autoAnnotationMethod.getReturnType();,if (autoAnnotationMethod != null ) TypeMirror returnType = autoAnnotationMethod.getReturnType();
AutoValueOrBuilderTemplateVars.java,ImmutableSet<Property> builderRequiredProperties = ImmutableSet.of();,if (ImmutableSet != null ) ImmutableSet<Property> builderRequiredProperties = ImmutableSet.of();
AutoValueProcessor.java,vars.types = processingEnv.getTypeUtils();,if (processingEnv != null ) vars.types = processingEnv.getTypeUtils();
AutoValueishProcessor.java,simpleAnnotationName = annotationType.getSimpleName().toString();,if (annotationType != null ) simpleAnnotationName = annotationType.getSimpleName().toString();
MoreElementsTest.java,ExecutableElement method = methods.iterator().next();,if (methods != null ) ExecutableElement method = methods.iterator().next();
GwtCompatibility.java,AnnotationMirror annotation = gwtCompatibleAnnotation.get();,if (gwtCompatibleAnnotation != null ) AnnotationMirror annotation = gwtCompatibleAnnotation.get();
AutoFactoryProcessor.java,allowSubclasses = methodDescriptor.declaration().allowSubclasses();,if (methodDescriptor != null ) allowSubclasses = methodDescriptor.declaration().allowSubclasses();
MoreElements.java,Set<ExecutableElement> methods = new LinkedHashSet<ExecutableElement>(methodMap.values());,if (LinkedHashSet<ExecutableElement>(methodMap != null ) Set<ExecutableElement> methods = new LinkedHashSet<ExecutableElement>(methodMap.values());
MoreElements.java,String annotationClassName = annotationClass.getCanonicalName();,if (annotationClass != null ) String annotationClassName = annotationClass.getCanonicalName();
MoreElementsTest.java,Elements elements = compilation.getElements();,if (compilation != null ) Elements elements = compilation.getElements();
MoreElementsTest.java,Elements elements = compilation.getElements();,if (compilation != null ) Elements elements = compilation.getElements();
MoreElementsTest.java,Elements elements = compilation.getElements();,if (compilation != null ) Elements elements = compilation.getElements();
MoreElementsTest.java,Elements elements = compilation.getElements();,if (compilation != null ) Elements elements = compilation.getElements();
MoreElementsTest.java,Elements elementUtils = compilation.getElements();,if (compilation != null ) Elements elementUtils = compilation.getElements();
MoreElementsTest.java,Elements elements = compilation.getElements();,if (compilation != null ) Elements elements = compilation.getElements();
AutoFactoryProcessor.java,publicType |= methodDescriptor.publicMethod();,if (methodDescriptor != null ) publicType |= methodDescriptor.publicMethod();
AutoFactoryProcessor.java,allowSubclasses = methodDescriptor.declaration().allowSubclasses();,if (methodDescriptor != null ) allowSubclasses = methodDescriptor.declaration().allowSubclasses();
AutoAnnotationProcessor.java,elementUtils = processingEnv.getElementUtils();,if (processingEnv != null ) elementUtils = processingEnv.getElementUtils();
AutoAnnotationProcessor.java,typeUtils = processingEnv.getTypeUtils();,if (processingEnv != null ) typeUtils = processingEnv.getTypeUtils();
Overrides.java,overriddenType = MoreElements.asType(overridden.getEnclosingElement());,if (MoreElements != null ) overriddenType = MoreElements.asType(overridden.getEnclosingElement());
AutoValueishProcessor.java,String name = method.getSimpleName().toString();,if (method != null ) String name = method.getSimpleName().toString();
BuilderMethodClassifier.java,String methodName = method.getSimpleName().toString();,if (method != null ) String methodName = method.getSimpleName().toString();
BuilderSpec.java,int nTypeParameters = a.getTypeParameters().size();,if (a != null ) int nTypeParameters = a.getTypeParameters().size();
BuilderSpec.java,Set<TypeMirror> autoValueBounds = new TypeMirrorSet(aParam.getBounds());,if (TypeMirrorSet(aParam != null ) Set<TypeMirror> autoValueBounds = new TypeMirrorSet(aParam.getBounds());
BuilderSpec.java,Set<TypeMirror> builderBounds = new TypeMirrorSet(bParam.getBounds());,if (TypeMirrorSet(bParam != null ) Set<TypeMirror> builderBounds = new TypeMirrorSet(bParam.getBounds());
AutoBuilderProcessor.java,vars.builtClass = TypeEncoder.encodeRaw(constructedType.asType());,if (TypeEncoder != null ) vars.builtClass = TypeEncoder.encodeRaw(constructedType.asType());
AutoValueishProcessor.java,TypeMirror propertyType = method.getReturnType();,if (method != null ) TypeMirror propertyType = method.getReturnType();
BuilderSpec.java,this.classifier = optionalClassifier.get();,if (optionalClassifier != null ) this.classifier = optionalClassifier.get();
BuilderMethodClassifier.java,this.getterNameToGetter = getterToPropertyNameBuilder.build();,if (getterToPropertyNameBuilder != null ) this.getterNameToGetter = getterToPropertyNameBuilder.build();
BuilderMethodClassifier.java,valueGetter = entry.getValue();,if (entry != null ) valueGetter = entry.getValue();
BuilderMethodClassifier.java,ImmutableSet<ExecutableElement> allGetters = getterToPropertyName.keySet();,if (getterToPropertyName != null ) ImmutableSet<ExecutableElement> allGetters = getterToPropertyName.keySet();
AutoValueTemplateVars.java,ImmutableList<String> builderAnnotations = ImmutableList.of();,if (ImmutableList != null ) ImmutableList<String> builderAnnotations = ImmutableList.of();
AutoValueTemplateVars.java,Optional<SimpleMethod> buildMethod = Optional.empty();,if (Optional != null ) Optional<SimpleMethod> buildMethod = Optional.empty();
AutoValueishProcessor.java,type = (TypeElement) type.getEnclosingElement();,if (type != null ) type = (TypeElement) type.getEnclosingElement();
BuilderSpec.java,boolean autoValueHasToBuilder = !toBuilderMethods.isEmpty();,if (!toBuilderMethods != null ) boolean autoValueHasToBuilder = !toBuilderMethods.isEmpty();
FactoryWriter.java,ImmutableSet<PackageAndClass> factoryNames = factoriesBeingCreated.get(type.toString());,if (factoriesBeingCreated != null ) ImmutableSet<PackageAndClass> factoryNames = factoriesBeingCreated.get(type.toString());
BuilderSpec.java,DeclaredType returnType = MoreTypes.asDeclared(method.getReturnType());,if (MoreTypes != null ) DeclaredType returnType = MoreTypes.asDeclared(method.getReturnType());
SimpleServiceLoader.java,String className = maybeClassName.get();,if (maybeClassName != null ) String className = maybeClassName.get();
SimpleServiceLoader.java,Object provider = c.getConstructor().newInstance();,if (c != null ) Object provider = c.getConstructor().newInstance();
FactoryDescriptor.java,Key key = entry.getKey();,if (entry != null ) Key key = entry.getKey();
FactoryDescriptor.java,Parameter parameter = Iterables.getOnlyElement(entry.getValue());,if (Iterables != null ) Parameter parameter = Iterables.getOnlyElement(entry.getValue());
FactoryDescriptor.java,Optional<AnnotationMirror> nullable = Optional.absent();,if (Optional != null ) Optional<AnnotationMirror> nullable = Optional.absent();
FactoryDescriptor.java,nullable = nullable.or(param.nullable());,if (nullable != null ) nullable = nullable.or(param.nullable());
Parameter.java,Optional<AnnotationMirror> nullable = Optional.absent();,if (Optional != null ) Optional<AnnotationMirror> nullable = Optional.absent();
AutoServiceProcessor.java,OutputStream out = fileObject.openOutputStream();,if (fileObject != null ) OutputStream out = fileObject.openOutputStream();
AutoAnnotationProcessor.java,TypeElement methodClass = (TypeElement) method.getEnclosingElement();,if (method != null ) TypeElement methodClass = (TypeElement) method.getEnclosingElement();
AutoAnnotationProcessor.java,TypeElement type = (TypeElement) method.getEnclosingElement();,if (method != null ) TypeElement type = (TypeElement) method.getEnclosingElement();
AutoAnnotationProcessor.java,type = (TypeElement) type.getEnclosingElement();,if (type != null ) type = (TypeElement) type.getEnclosingElement();
SuperficialValidation.java,TypeMirror expectedType = valueEntry.getKey().getReturnType();,if (valueEntry != null ) TypeMirror expectedType = valueEntry.getKey().getReturnType();
SuperficialValidation.java,expectedType = MoreTypes.asArray(expectedType).getComponentType();,if (MoreTypes != null ) expectedType = MoreTypes.asArray(expectedType).getComponentType();
BuilderSpec.java,String copy = copyFunction.apply(property.toString());,if (copyFunction != null ) String copy = copyFunction.apply(property.toString());
BasicAnnotationProcessor.java,deferredElementsByAnnotationBuilder = ImmutableSetMultimap.builder();,if (ImmutableSetMultimap != null ) deferredElementsByAnnotationBuilder = ImmutableSetMultimap.builder();
BasicAnnotationProcessor.java,TypeElement annotationType = elements.getTypeElement(annotationClass.getCanonicalName());,if (elements != null ) TypeElement annotationType = elements.getTypeElement(annotationClass.getCanonicalName());
BasicAnnotationProcessorTest.java,processArguments = ImmutableList.builder();,if (ImmutableList != null ) processArguments = ImmutableList.builder();
AutoFactoryDeclaration.java,CharSequence packageName = getPackage(targetType()).getQualifiedName();,if (getPackage(targetType()) != null ) CharSequence packageName = getPackage(targetType()).getQualifiedName();
AutoFactoryProcessor.java,String factoryName = declaration.get().getFactoryName();,if (declaration != null ) String factoryName = declaration.get().getFactoryName();
AutoFactoryProcessor.java,publicType |= methodDescriptor.publicMethod();,if (methodDescriptor != null ) publicType |= methodDescriptor.publicMethod();
AutoFactoryProcessor.java,allowSubclasses = methodDescriptor.declaration().allowSubclasses();,if (methodDescriptor != null ) allowSubclasses = methodDescriptor.declaration().allowSubclasses();
FactoryWriter.java,String factoryName = getSimpleName(descriptor.name()).toString();,if (getSimpleName(descriptor != null ) String factoryName = getSimpleName(descriptor.name()).toString();
PropertyBuilderClassifier.java,Name name = method.getSimpleName();,if (method != null ) Name name = method.getSimpleName();
SerializableAutoValueExtension.java,Serializer serializer = serializersMap.get(propertyMirror.getType());,if (serializersMap != null ) Serializer serializer = serializersMap.get(propertyMirror.getType());
BasicAnnotationProcessor.java,missingElements = allMissingElements.build();,if (allMissingElements != null ) missingElements = allMissingElements.build();
BuilderMethodClassifier.java,VariableElement parameterElement = Iterables.getOnlyElement(setter.getParameters());,if (Iterables != null ) VariableElement parameterElement = Iterables.getOnlyElement(setter.getParameters());
AutoValueNotEclipseTest.java,PropertyBuilderInheritsType.Builder builder = PropertyBuilderInheritsType.builder();,if (PropertyBuilderInheritsType != null ) PropertyBuilderInheritsType.Builder builder = PropertyBuilderInheritsType.builder();
AutoValueNotEclipseTest.java,PropertyBuilderInheritsType x = builder.build();,if (builder != null ) PropertyBuilderInheritsType x = builder.build();
TypeSimplifier.java,TypeElement typeElement = (TypeElement) declaredType.asElement();,if (declaredType != null ) TypeElement typeElement = (TypeElement) declaredType.asElement();
MoreTypes.java,typeElement = MoreElements.asType(type.asElement());,if (MoreElements != null ) typeElement = MoreElements.asType(type.asElement());
BuilderSpec.java,BuilderMethodClassifier classifier = optionalClassifier.get();,if (optionalClassifier != null ) BuilderMethodClassifier classifier = optionalClassifier.get();
PropertyBuilderClassifier.java,TypeMirror barTypeMirror = barGetter.getReturnType();,if (barGetter != null ) TypeMirror barTypeMirror = barGetter.getReturnType();
ExtensionTest.java,Writer sourceWriter = sourceFile.openWriter();,if (sourceFile != null ) Writer sourceWriter = sourceFile.openWriter();
MemoizeExtension.java,TypeMirror returnType = method.getReturnType();,if (method != null ) TypeMirror returnType = method.getReturnType();
AutoValueOrOneOfProcessor.java,DeclaredType declaredType = MoreTypes.asDeclared(type.asType());,if (MoreTypes != null ) DeclaredType declaredType = MoreTypes.asDeclared(type.asType());
DependencyInjectionIntegrationTest.java,FactoryGeneratedFactory factoryGeneratedFactory = DaggerFactoryComponent.create().factory();,if (DaggerFactoryComponent != null ) FactoryGeneratedFactory factoryGeneratedFactory = DaggerFactoryComponent.create().factory();
Reformatter.java,StringBuilder sb = new StringBuilder(s.length());,if (StringBuilder(s != null ) StringBuilder sb = new StringBuilder(s.length());
Reformatter.java,StringBuilder sb = new StringBuilder(s.length());,if (StringBuilder(s != null ) StringBuilder sb = new StringBuilder(s.length());
Reformatter.java,StringBuilder sb = new StringBuilder(s.length());,if (StringBuilder(s != null ) StringBuilder sb = new StringBuilder(s.length());
BuilderSpec.java,DeclaredType builderTypeMirror = MoreTypes.asDeclared(builderTypeElement.asType());,if (MoreTypes != null ) DeclaredType builderTypeMirror = MoreTypes.asDeclared(builderTypeElement.asType());
BuilderSpec.java,TypeMirror parameterType = Iterables.getOnlyElement(setterMirror.getParameterTypes());,if (Iterables != null ) TypeMirror parameterType = Iterables.getOnlyElement(setterMirror.getParameterTypes());
BuilderSpec.java,vars.builderSetters = setterBuilder.build();,if (setterBuilder != null ) vars.builderSetters = setterBuilder.build();
BuilderSpec.java,boolean nullable = maybeNullable.isPresent();,if (maybeNullable != null ) boolean nullable = maybeNullable.isPresent();
BuilderSpec.java,of = optionalish.ofNullable();,if (optionalish != null ) of = optionalish.ofNullable();
Key.java,String typeQualifiedName = MoreTypes.asTypeElement(type()).toString();,if (MoreTypes != null ) String typeQualifiedName = MoreTypes.asTypeElement(type()).toString();
AutoAnnotationCompilationTest.java,JavaCompiler javaCompiler = ToolProvider.getSystemJavaCompiler();,if (ToolProvider != null ) JavaCompiler javaCompiler = ToolProvider.getSystemJavaCompiler();
AutoAnnotationCompilationTest.java,boolean result = compilationTask.call();,if (compilationTask != null ) boolean result = compilationTask.call();
BuilderMethodClassifier.java,TypeMirror erasedCopyOfReturnType = typeUtils.erasure(copyOfMethod.getReturnType());,if (typeUtils != null ) TypeMirror erasedCopyOfReturnType = typeUtils.erasure(copyOfMethod.getReturnType());
BuilderMethodClassifier.java,String property = getterEntry.getValue();,if (getterEntry != null ) String property = getterEntry.getValue();
BuilderMethodClassifier.java,TypeMirror propertyType = getterEntry.getKey().getReturnType();,if (getterEntry != null ) TypeMirror propertyType = getterEntry.getKey().getReturnType();
BuilderMethodClassifier.java,TypeMirror originalGetterType = originalGetter.getReturnType();,if (originalGetter != null ) TypeMirror originalGetterType = originalGetter.getReturnType();
BuilderMethodClassifier.java,TypeMirror targetType = valueGetter.getReturnType();,if (valueGetter != null ) TypeMirror targetType = valueGetter.getReturnType();
BuilderMethodClassifier.java,TypeMirror targetType = valueGetter.getReturnType();,if (valueGetter != null ) TypeMirror targetType = valueGetter.getReturnType();
BuilderSpec.java,String property = entry.getKey();,if (entry != null ) String property = entry.getKey();
BuilderSpec.java,ExecutableElement setter = entry.getValue();,if (entry != null ) ExecutableElement setter = entry.getValue();
BuilderSpec.java,VariableElement parameterElement = Iterables.getOnlyElement(setter.getParameters());,if (Iterables != null ) VariableElement parameterElement = Iterables.getOnlyElement(setter.getParameters());
BuilderSpec.java,TypeMirror parameterType = parameterElement.asType();,if (parameterElement != null ) TypeMirror parameterType = parameterElement.asType();
EclipseHack.java,Types typeUtils = processingEnv.getTypeUtils();,if (processingEnv != null ) Types typeUtils = processingEnv.getTypeUtils();
EclipseHack.java,Types typeUtils = processingEnv.getTypeUtils();,if (processingEnv != null ) Types typeUtils = processingEnv.getTypeUtils();
EclipseHack.java,Types typeUtils = processingEnv.getTypeUtils();,if (processingEnv != null ) Types typeUtils = processingEnv.getTypeUtils();
EclipseHack.java,Elements elementUtils = processingEnv.getElementUtils();,if (processingEnv != null ) Elements elementUtils = processingEnv.getElementUtils();
Parser.java,c = reader.read();,if (reader != null ) c = reader.read();
Parser.java,int len = sb.length();,if (sb != null ) int len = sb.length();
Parser.java,ImmutableList<Node> nestedTokens = nestedParser.parseTokens();,if (nestedParser != null ) ImmutableList<Node> nestedTokens = nestedParser.parseTokens();
Parser.java,Integer value = Ints.tryParse(sb.toString());,if (Ints != null ) Integer value = Ints.tryParse(sb.toString());
ReferenceNode.java,"method = visibleMethod(method, target.getClass());","if (target != null ) method = visibleMethod(method, target.getClass());"
ReferenceNode.java,"Method methodSuper = visibleMethod(method, in.getSuperclass());","if (in != null ) Method methodSuper = visibleMethod(method, in.getSuperclass());"
Reparser.java,Macro macro = macros.get(macroCall.name());,if (macros != null ) Macro macro = macros.get(macroCall.name());
BuilderSpec.java,Types typeUtils = processingEnv.getTypeUtils();,if (processingEnv != null ) Types typeUtils = processingEnv.getTypeUtils();
Optionalish.java,TypeElement typeElement = MoreElements.asType(optionalType.asElement());,if (MoreElements != null ) TypeElement typeElement = MoreElements.asType(optionalType.asElement());
AutoOneOfProcessor.java,vars.types = processingEnv.getTypeUtils();,if (processingEnv != null ) vars.types = processingEnv.getTypeUtils();
AutoValueOrOneOfProcessor.java,Set<ExecutableElement> propertyMethods = annotatedPropertyMethods.keySet();,if (annotatedPropertyMethods != null ) Set<ExecutableElement> propertyMethods = annotatedPropertyMethods.keySet();
AutoValueProcessor.java,vars.annotations = ImmutableList.of();,if (ImmutableList != null ) vars.annotations = ImmutableList.of();
AutoValueProcessor.java,Element annotationElement = annotation.getAnnotationType().asElement();,if (annotation != null ) Element annotationElement = annotation.getAnnotationType().asElement();
TemplateVars.java,this.fields = getFields(getClass().getDeclaredFields());,if (getFields(getClass() != null ) this.fields = getFields(getClass().getDeclaredFields());
BugDetector.java,typeAnnotationsNotReturned = annotationsFromVisitor.isEmpty();,if (annotationsFromVisitor != null ) typeAnnotationsNotReturned = annotationsFromVisitor.isEmpty();
AutoValueProcessor.java,TypeMirror annotationMirror = annotationElement.asType();,if (annotationElement != null ) TypeMirror annotationMirror = annotationElement.asType();
GeneratedImport.java,Elements elements = compilationRule.getElements();,if (compilationRule != null ) Elements elements = compilationRule.getElements();
Parser.java,c = reader.read();,if (reader != null ) c = reader.read();
AutoValueOrOneOfProcessor.java,Set<Name> noArgMethods = Sets.newHashSet();,if (Sets != null ) Set<Name> noArgMethods = Sets.newHashSet();
AutoValueProcessor.java,List<AutoValueExtension> applicableExtensions = Lists.newArrayList();,if (Lists != null ) List<AutoValueExtension> applicableExtensions = Lists.newArrayList();
AutoValueProcessor.java,List<AutoValueExtension> finalExtensions = Lists.newArrayList();,if (Lists != null ) List<AutoValueExtension> finalExtensions = Lists.newArrayList();
AutoValueProcessor.java,Set<ExecutableElement> consumed = Sets.newHashSet();,if (Sets != null ) Set<ExecutableElement> consumed = Sets.newHashSet();
AutoValueProcessor.java,Set<ExecutableElement> consumedHere = Sets.newHashSet();,if (Sets != null ) Set<ExecutableElement> consumedHere = Sets.newHashSet();
ReferenceNode.java,List<Method> compatibleMethods = Lists.newArrayList();,if (Lists != null ) List<Method> compatibleMethods = Lists.newArrayList();
AutoValueProcessor.java,TypeMirror propertyType = method.getReturnType();,if (method != null ) TypeMirror propertyType = method.getReturnType();
AutoValueProcessor.java,DeclaredType declaredType = MoreTypes.asDeclared(type.asType());,if (MoreTypes != null ) DeclaredType declaredType = MoreTypes.asDeclared(type.asType());
AutoValueProcessor.java,typeUtils = processingEnv.getTypeUtils();,if (processingEnv != null ) typeUtils = processingEnv.getTypeUtils();
AutoValueProcessor.java,String name = type.getSimpleName().toString();,if (type != null ) String name = type.getSimpleName().toString();
AutoValueProcessor.java,type = (TypeElement) type.getEnclosingElement();,if (type != null ) type = (TypeElement) type.getEnclosingElement();
AutoValueProcessor.java,this.name = method.getSimpleName().toString();,if (method != null ) this.name = method.getSimpleName().toString();
AutoValueProcessor.java,Set<Modifier> mods = method.getModifiers();,if (method != null ) Set<Modifier> mods = method.getModifiers();
AutoValueProcessor.java,String name = method.getSimpleName().toString();,if (method != null ) String name = method.getSimpleName().toString();
AutoValueProcessor.java,TypeElement annotationElement = elementUtils.getTypeElement(annotation.getCanonicalName());,if (elementUtils != null ) TypeElement annotationElement = elementUtils.getTypeElement(annotation.getCanonicalName());
AutoValueProcessor.java,String methodName = method.getSimpleName().toString();,if (method != null ) String methodName = method.getSimpleName().toString();
AutoValueProcessor.java,ElementKind enclosingKind = type.getEnclosingElement().getKind();,if (type != null ) ElementKind enclosingKind = type.getEnclosingElement().getKind();
AutoValueProcessor.java,Set<Name> noArgMethods = Sets.newHashSet();,if (Sets != null ) Set<Name> noArgMethods = Sets.newHashSet();
AutoValueProcessor.java,boolean hasArgs = !method.getParameters().isEmpty();,if (!method != null ) boolean hasArgs = !method.getParameters().isEmpty();
AutoValueProcessor.java,TypeMirror type = getter.getReturnType();,if (getter != null ) TypeMirror type = getter.getReturnType();
AutoValueProcessor.java,List<VariableElement> fields = ElementFilter.fieldsIn(type.getEnclosedElements());,if (ElementFilter != null ) List<VariableElement> fields = ElementFilter.fieldsIn(type.getEnclosedElements());
AutoValueProcessor.java,Object value = field.getConstantValue();,if (field != null ) Object value = field.getConstantValue();
TemplateVars.java,Field[] declaredFields = getClass().getDeclaredFields();,if (getClass() != null ) Field[] declaredFields = getClass().getDeclaredFields();
TemplateVars.java,this.fields = fields.build();,if (fields != null ) this.fields = fields.build();
ReferenceNode.java,List<Method> methodsWithName = Lists.newArrayList();,if (Lists != null ) List<Method> methodsWithName = Lists.newArrayList();
Reparser.java,this.macros = Maps.newTreeMap();,if (Maps != null ) this.macros = Maps.newTreeMap();
AutoServiceProcessor.java,TypeElement providerType = (TypeElement) providerInterface.asElement();,if (providerInterface != null ) TypeElement providerType = (TypeElement) providerInterface.asElement();
AutoAnnotationProcessor.java,TypeMirror annotationTypeMirror = annotationElement.asType();,if (annotationElement != null ) TypeMirror annotationTypeMirror = annotationElement.asType();
AutoAnnotationProcessor.java,Set<TypeMirror> memberTypes = getMemberTypes(memberMethods.values());,if (getMemberTypes(memberMethods != null ) Set<TypeMirror> memberTypes = getMemberTypes(memberMethods.values());
AutoAnnotationProcessor.java,vars.annotationName = typeSimplifier.simplify(annotationElement.asType());,if (typeSimplifier != null ) vars.annotationName = typeSimplifier.simplify(annotationElement.asType());
AutoAnnotationProcessor.java,vars.imports = typeSimplifier.typesToImport();,if (typeSimplifier != null ) vars.imports = typeSimplifier.typesToImport();
AutoValueProcessor.java,DeclaredType declaredType = MoreTypes.asDeclared(type.asType());,if (MoreTypes != null ) DeclaredType declaredType = MoreTypes.asDeclared(type.asType());
AutoValueProcessor.java,vars.imports = typeSimplifier.typesToImport();,if (typeSimplifier != null ) vars.imports = typeSimplifier.typesToImport();
GwtSerialization.java,String type = property.getType();,if (property != null ) String type = property.getType();
TypeSimplifier.java,String topString = top.getQualifiedName().toString();,if (top != null ) String topString = top.getQualifiedName().toString();
TypeSimplifier.java,TypeMirror extendsBound = type.getExtendsBound();,if (type != null ) TypeMirror extendsBound = type.getExtendsBound();
TypeSimplifier.java,TypeMirror superBound = type.getSuperBound();,if (type != null ) TypeMirror superBound = type.getSuperBound();
SimplifyWithAnnotationsTest.java,Types typeUtils = processingEnv.getTypeUtils();,if (processingEnv != null ) Types typeUtils = processingEnv.getTypeUtils();
TypeSimplifierTest.java,TypeMirror multipleBoundsMirror = multipleBoundsElement.asType();,if (multipleBoundsElement != null ) TypeMirror multipleBoundsMirror = multipleBoundsElement.asType();
TypeSimplifierTest.java,typeUtils = processingEnv.getTypeUtils();,if (processingEnv != null ) typeUtils = processingEnv.getTypeUtils();
TypeSimplifierTest.java,elementUtils = processingEnv.getElementUtils();,if (processingEnv != null ) elementUtils = processingEnv.getElementUtils();
TypeSimplifierTest.java,ErrorType errorType = (ErrorType) extendsUndefinedType.getSuperclass();,if (extendsUndefinedType != null ) ErrorType errorType = (ErrorType) extendsUndefinedType.getSuperclass();
BuilderMethodClassifier.java,this.getterNameToGetter = getterToPropertyNameBuilder.build();,if (getterToPropertyNameBuilder != null ) this.getterNameToGetter = getterToPropertyNameBuilder.build();
AutoAnnotationProcessor.java,Writer writer = sourceFile.openWriter();,if (sourceFile != null ) Writer writer = sourceFile.openWriter();
BuilderSpec.java,Optional<TypeElement> builderTypeElement = Optional.absent();,if (Optional != null ) Optional<TypeElement> builderTypeElement = Optional.absent();
GwtCompatibility.java,Optional<AnnotationMirror> gwtCompatibleAnnotation = Optional.absent();,if (Optional != null ) Optional<AnnotationMirror> gwtCompatibleAnnotation = Optional.absent();
GwtCompatibility.java,List<String> elements = Lists.newArrayList();,if (Lists != null ) List<String> elements = Lists.newArrayList();
AutoValueProcessor.java,Writer writer = sourceFile.openWriter();,if (sourceFile != null ) Writer writer = sourceFile.openWriter();
GwtSerialization.java,Writer writer = sourceFile.openWriter();,if (sourceFile != null ) Writer writer = sourceFile.openWriter();
CompilationErrorsTest.java,javac = ToolProvider.getSystemJavaCompiler();,if (ToolProvider != null ) javac = ToolProvider.getSystemJavaCompiler();
CompilationErrorsTest.java,tmpDir = temporaryFolder.getRoot();,if (temporaryFolder != null ) tmpDir = temporaryFolder.getRoot();
CompilationErrorsTest.java,File[] files = dir.listFiles();,if (dir != null ) File[] files = dir.listFiles();
CompilationErrorsTest.java,deletedAll &= file.delete();,if (file != null ) deletedAll &= file.delete();
CompilationErrorsTest.java,List<String> classNames = Lists.newArrayList();,if (Lists != null ) List<String> classNames = Lists.newArrayList();
CompilationErrorsTest.java,List<JavaFileObject> sourceFiles = Lists.newArrayList();,if (Lists != null ) List<JavaFileObject> sourceFiles = Lists.newArrayList();
CompilationErrorsTest.java,"File dir = new File(tmpDir, className.sourceDirectoryName());","if (className != null ) File dir = new File(tmpDir, className.sourceDirectoryName());"
CompilationErrorsTest.java,boolean compiledOk = javacTask.call();,if (javacTask != null ) boolean compiledOk = javacTask.call();
CompilationErrorsTest.java,int expectedLine = expectedDiagnostic.getColumnKey();,if (expectedDiagnostic != null ) int expectedLine = expectedDiagnostic.getColumnKey();
CompilationErrorsTest.java,int actualLine = diagnostic.getColumnKey();,if (diagnostic != null ) int actualLine = diagnostic.getColumnKey();
AbstractMethodExtractor.java,boolean topLevel = (braceDepth == classStack.size());,if (classStack != null ) boolean topLevel = (braceDepth == classStack.size());
AbstractMethodExtractor.java,String container = classStack.getLast();,if (classStack != null ) String container = classStack.getLast();
AbstractMethodExtractor.java,className = tokenizer.nextToken();,if (tokenizer != null ) className = tokenizer.nextToken();
EclipseHack.java,TypeElement owner = properties.get(index).getOwner();,if (properties != null ) TypeElement owner = properties.get(index).getOwner();
EclipseHack.java,order = propertyOrderer.determinePropertyOrder();,if (propertyOrderer != null ) order = propertyOrderer.determinePropertyOrder();
EclipseHack.java,allFound &= order.contains(property.getGetter());,if (order != null ) allFound &= order.contains(property.getGetter());
EclipseHack.java,sourceReader = readerProvider.call();,if (readerProvider != null ) sourceReader = readerProvider.call();
EclipseHack.java,String className = type.getQualifiedName().toString();,if (type != null ) String className = type.getQualifiedName().toString();
EclipseHack.java,URL classFileUrl = classFileUri.toURL();,if (classFileUri != null ) URL classFileUrl = classFileUri.toURL();
EclipseHack.java,inputStream = classFileUrl.openStream();,if (classFileUrl != null ) inputStream = classFileUrl.openStream();
AbstractMethodListerTest.java,ClassLoader loader = abstractClass.getClassLoader();,if (abstractClass != null ) ClassLoader loader = abstractClass.getClassLoader();
AbstractMethodListerTest.java,List<String> methods = abstractMethodLister.abstractNoArgMethods();,if (abstractMethodLister != null ) List<String> methods = abstractMethodLister.abstractNoArgMethods();
EclipseHackTokenizerTest.java,String tokens = tokenStringBuilder.toString();,if (tokenStringBuilder != null ) String tokens = tokenStringBuilder.toString();
MemoizeExtension.java,Set<String> parameterNames = Sets.newLinkedHashSet();,if (Sets != null ) Set<String> parameterNames = Sets.newLinkedHashSet();
AutoValueProcessor.java,vars.isFinal = applicableExtensions.isEmpty();,if (applicableExtensions != null ) vars.isFinal = applicableExtensions.isEmpty();
AutoValueTest.java,OptionalPropertyWithBuilder omitted = OptionalPropertyWithBuilder.builder().build();,if (OptionalPropertyWithBuilder != null ) OptionalPropertyWithBuilder omitted = OptionalPropertyWithBuilder.builder().build();
AutoValueProcessor.java,"String subclass = generatedSubclassName(type, applicableExtensions.size());","if (applicableExtensions != null ) String subclass = generatedSubclassName(type, applicableExtensions.size());"
AutoValueTest.java,int mods = method.getModifiers();,if (method != null ) int mods = method.getModifiers();
AutoValueProcessor.java,Set<Modifier> mods = method.getModifiers();,if (method != null ) Set<Modifier> mods = method.getModifiers();
BuilderSpec.java,vars.buildMethodName = buildMethod.getSimpleName().toString();,if (buildMethod != null ) vars.buildMethodName = buildMethod.getSimpleName().toString();
AutoValueTest.java,Empty instance = Empty.create();,if (Empty != null ) Empty instance = Empty.create();
AutoValueTest.java,ExplicitEquals instance = ExplicitEquals.create();,if (ExplicitEquals != null ) ExplicitEquals instance = ExplicitEquals.create();
AutoValueTest.java,LukesBase.LukesSub sub = LukesBase.LukesSub.create();,if (LukesBase != null ) LukesBase.LukesSub sub = LukesBase.LukesSub.create();
AutoValueTest.java,EmptyWithBuilder x = EmptyWithBuilder.builder().build();,if (EmptyWithBuilder != null ) EmptyWithBuilder x = EmptyWithBuilder.builder().build();
AutoValueTest.java,EmptyWithBuilder y = EmptyWithBuilder.builder().build();,if (EmptyWithBuilder != null ) EmptyWithBuilder y = EmptyWithBuilder.builder().build();
AutoValueTest.java,BuilderWithUnprefixedGetters<String> instance = builder.setNoGetter(noGetter).build();,if (builder != null ) BuilderWithUnprefixedGetters<String> instance = builder.setNoGetter(noGetter).build();
AutoValueTest.java,BuilderWithPrefixedGetters<String> instance = builder.setNoGetter(noGetter).build();,if (builder != null ) BuilderWithPrefixedGetters<String> instance = builder.setNoGetter(noGetter).build();
AutoValueTest.java,BuilderWithPropertyBuilders<Integer> b = bBuilder.build();,if (bBuilder != null ) BuilderWithPropertyBuilders<Integer> b = bBuilder.build();
AutoValueTest.java,BuilderWithPropertyBuilders<Integer> c = cBuilder.build();,if (cBuilder != null ) BuilderWithPropertyBuilders<Integer> c = cBuilder.build();
AutoValueTest.java,BuilderWithPropertyBuilders<Integer> d = dBuilder.build();,if (dBuilder != null ) BuilderWithPropertyBuilders<Integer> d = dBuilder.build();
TypeSimplifierTest.java,File tmpDir = Files.createTempDir();,if (Files != null ) File tmpDir = Files.createTempDir();
TypeSimplifierTest.java,JavaCompiler javac = ToolProvider.getSystemJavaCompiler();,if (ToolProvider != null ) JavaCompiler javac = ToolProvider.getSystemJavaCompiler();
TypeSimplifierTest.java,typeUtil = processingEnv.getTypeUtils();,if (processingEnv != null ) typeUtil = processingEnv.getTypeUtils();
TypeSimplifierTest.java,TypeMirror multipleBoundsMirror = multipleBoundsElement.asType();,if (multipleBoundsElement != null ) TypeMirror multipleBoundsMirror = multipleBoundsElement.asType();
TypeSimplifierTest.java,List<VariableElement> fields = ElementFilter.fieldsIn(erasureClass.getEnclosedElements());,if (ElementFilter != null ) List<VariableElement> fields = ElementFilter.fieldsIn(erasureClass.getEnclosedElements());
TypeSimplifierTest.java,String fieldName = field.getSimpleName().toString();,if (field != null ) String fieldName = field.getSimpleName().toString();
TypeSimplifierTest.java,TypeMirror fieldType = field.asType();,if (field != null ) TypeMirror fieldType = field.asType();
TypeSimplifierTest.java,ErrorType errorType = (ErrorType) extendsUndefinedType.getSuperclass();,if (extendsUndefinedType != null ) ErrorType errorType = (ErrorType) extendsUndefinedType.getSuperclass();
CompilationErrorsTest.java,tmpDir = Files.createTempDir();,if (Files != null ) tmpDir = Files.createTempDir();
BuilderMethodClassifier.java,String builderTypeString = builderTypeElement.getQualifiedName().toString();,if (builderTypeElement != null ) String builderTypeString = builderTypeElement.getQualifiedName().toString();
BuilderSpec.java,String property = entry.getKey();,if (entry != null ) String property = entry.getKey();
BuilderSpec.java,ExecutableElement propertyBuilderMethod = entry.getValue();,if (entry != null ) ExecutableElement propertyBuilderMethod = entry.getValue();
BuilderSpec.java,String immutableType = typeSimplifier.simplify(autoValuePropertyMethod.getReturnType());,if (typeSimplifier != null ) String immutableType = typeSimplifier.simplify(autoValuePropertyMethod.getReturnType());
BuilderSpec.java,Set<String> methodNames = Sets.newHashSet();,if (Sets != null ) Set<String> methodNames = Sets.newHashSet();
BuilderSpec.java,int nTypeParameters = autoValueClass.getTypeParameters().size();,if (autoValueClass != null ) int nTypeParameters = autoValueClass.getTypeParameters().size();
BuilderSpec.java,Set<TypeMirror> autoValueBounds = new TypeMirrorSet(autoValueParam.getBounds());,if (TypeMirrorSet(autoValueParam != null ) Set<TypeMirror> autoValueBounds = new TypeMirrorSet(autoValueParam.getBounds());
BuilderSpec.java,Set<TypeMirror> builderBounds = new TypeMirrorSet(builderParam.getBounds());,if (TypeMirrorSet(builderParam != null ) Set<TypeMirror> builderBounds = new TypeMirrorSet(builderParam.getBounds());
EclipseHack.java,DeclaredType autoValueTypeMirror = MoreTypes.asDeclared(autoValueType.asType());,if (MoreTypes != null ) DeclaredType autoValueTypeMirror = MoreTypes.asDeclared(autoValueType.asType());
ReferenceNode.java,String nodeClassName = Node.class.getName();,if (Node != null ) String nodeClassName = Node.class.getName();
Overrides.java,DeclaredType inType = MoreTypes.asDeclared(in.asType());,if (MoreTypes != null ) DeclaredType inType = MoreTypes.asDeclared(in.asType());
OverridesTest.java,elementUtils = compilation.getElements();,if (compilation != null ) elementUtils = compilation.getElements();
OverridesTest.java,typeUtils = compilation.getTypes();,if (compilation != null ) typeUtils = compilation.getTypes();
AutoFactoryProcessor.java,factoryWriter = new FactoryWriter(processingEnv.getFiler());,if (FactoryWriter(processingEnv != null ) factoryWriter = new FactoryWriter(processingEnv.getFiler());
TypeSimplifier.java,String typeString = typeElement.getQualifiedName().toString();,if (typeElement != null ) String typeString = typeElement.getQualifiedName().toString();
TypeSimplifier.java,Element enclosing = type.getEnclosingElement();,if (type != null ) Element enclosing = type.getEnclosingElement();
MoreTypes.java,TypeParameterElement aElement = (TypeParameterElement) a.asElement();,if (a != null ) TypeParameterElement aElement = (TypeParameterElement) a.asElement();
MoreTypes.java,TypeParameterElement bElement = (TypeParameterElement) b.asElement();,if (b != null ) TypeParameterElement bElement = (TypeParameterElement) b.asElement();
MoreTypes.java,ImmutableList<TypeMirror> noArguments = ImmutableList.of();,if (ImmutableList != null ) ImmutableList<TypeMirror> noArguments = ImmutableList.of();
MoreTypes.java,result += t.getKind().hashCode();,if (t != null ) result += t.getKind().hashCode();
MoreTypes.java,result += t.asElement().hashCode();,if (t != null ) result += t.asElement().hashCode();
MoreTypes.java,TypeParameterElement element = (TypeParameterElement) t.asElement();,if (t != null ) TypeParameterElement element = (TypeParameterElement) t.asElement();
MoreTypes.java,typeElement = MoreElements.asType(type.asElement());,if (MoreElements != null ) typeElement = MoreElements.asType(type.asElement());
FactoryDescriptor.java,type = param.type();,if (param != null ) type = param.type();
FactoryWriter.java,nullableArgument = parameter.nullable().isPresent();,if (parameter != null ) nullableArgument = parameter.nullable().isPresent();
Parameter.java,DeclaredType annotationType = annotationMirror.getAnnotationType();,if (annotationMirror != null ) DeclaredType annotationType = annotationMirror.getAnnotationType();
FactoryWriter.java,argument = codeBlock(parameter.name());,if (codeBlock(parameter != null ) argument = codeBlock(parameter.name());
FactoryWriter.java,argument = codeBlock(provider.name());,if (codeBlock(provider != null ) argument = codeBlock(provider.name());
FactoryWriter.java,Key key = entry.getKey();,if (entry != null ) Key key = entry.getKey();
FactoryWriter.java,String providerName = entry.getValue();,if (entry != null ) String providerName = entry.getValue();
FactoryWriter.java,Optional<AnnotationMirror> qualifier = key.getQualifier();,if (key != null ) Optional<AnnotationMirror> qualifier = key.getQualifier();
FactoryDescriptor.java,Parameter parameter = Iterables.getOnlyElement(entry.getValue());,if (Iterables != null ) Parameter parameter = Iterables.getOnlyElement(entry.getValue());
FactoryDescriptor.java,Optional<AnnotationMirror> nullable = Optional.absent();,if (Optional != null ) Optional<AnnotationMirror> nullable = Optional.absent();
FactoryDescriptor.java,type = param.type();,if (param != null ) type = param.type();
FactoryDescriptor.java,nullable = nullable.or(param.nullable());,if (nullable != null ) nullable = nullable.or(param.nullable());
FactoryWriter.java,CodeBlock.Builder args = CodeBlock.builder();,if (CodeBlock != null ) CodeBlock.Builder args = CodeBlock.builder();
FactoryWriter.java,Iterator<Parameter> parameters = methodDescriptor.creationParameters().iterator();,if (methodDescriptor != null ) Iterator<Parameter> parameters = methodDescriptor.creationParameters().iterator();
FactoryWriter.java,Parameter parameter = parameters.next();,if (parameters != null ) Parameter parameter = parameters.next();
FactoryWriter.java,argument = codeBlock(parameter.name());,if (codeBlock(parameter != null ) argument = codeBlock(parameter.name());
FactoryWriter.java,argument = codeBlock(provider.name());,if (codeBlock(provider != null ) argument = codeBlock(provider.name());
FactoryWriter.java,nullableArgument = parameter.nullable().isPresent();,if (parameter != null ) nullableArgument = parameter.nullable().isPresent();
Key.java,String typeQualifiedName = MoreTypes.asTypeElement(type()).toString();,if (MoreTypes != null ) String typeQualifiedName = MoreTypes.asTypeElement(type()).toString();
Parameter.java,Optional<AnnotationMirror> nullable = Optional.absent();,if (Optional != null ) Optional<AnnotationMirror> nullable = Optional.absent();
FactoryWriter.java,Key key = entry.getKey();,if (entry != null ) Key key = entry.getKey();
FactoryWriter.java,String providerName = entry.getValue();,if (entry != null ) String providerName = entry.getValue();
FactoryWriter.java,Optional<AnnotationMirror> qualifier = key.getQualifier();,if (key != null ) Optional<AnnotationMirror> qualifier = key.getQualifier();
BuilderMethodClassifier.java,TypeMirror returnType = method.getReturnType();,if (method != null ) TypeMirror returnType = method.getReturnType();
BuilderMethodClassifier.java,TypeMirror builderGetterType = builderGetter.getReturnType();,if (builderGetter != null ) TypeMirror builderGetterType = builderGetter.getReturnType();
BuilderMethodClassifier.java,TypeMirror builderTypeMirror = method.getReturnType();,if (method != null ) TypeMirror builderTypeMirror = method.getReturnType();
AutoValueTemplateVars.java,ImmutableSet<String> propertiesWithBuilderGetters = ImmutableSet.of();,if (ImmutableSet != null ) ImmutableSet<String> propertiesWithBuilderGetters = ImmutableSet.of();
BuilderSpec.java,vars.propertiesWithBuilderGetters = classifier.propertiesWithBuilderGetters();,if (classifier != null ) vars.propertiesWithBuilderGetters = classifier.propertiesWithBuilderGetters();
AutoValueProcessor.java,"String subclass = generatedSubclassName(type, appliedExtensions.size());","if (appliedExtensions != null ) String subclass = generatedSubclassName(type, appliedExtensions.size());"
AutoValueProcessor.java,vars.isFinal = appliedExtensions.isEmpty();,if (appliedExtensions != null ) vars.isFinal = appliedExtensions.isEmpty();
AutoValueProcessor.java,Types typeUtils = processingEnv.getTypeUtils();,if (processingEnv != null ) Types typeUtils = processingEnv.getTypeUtils();
AutoValueProcessor.java,toBuilderMethods = ImmutableSet.of();,if (ImmutableSet != null ) toBuilderMethods = ImmutableSet.of();
AutoValueProcessor.java,Set<Name> toImplementNames = Sets.newHashSet();,if (Sets != null ) Set<Name> toImplementNames = Sets.newHashSet();
AutoValueProcessor.java,Types typeUtils = processingEnv.getTypeUtils();,if (processingEnv != null ) Types typeUtils = processingEnv.getTypeUtils();
AutoValueProcessor.java,Types typeUtils = processingEnv.getTypeUtils();,if (processingEnv != null ) Types typeUtils = processingEnv.getTypeUtils();
AutoValueProcessor.java,Types typeUtils = processingEnv.getTypeUtils();,if (processingEnv != null ) Types typeUtils = processingEnv.getTypeUtils();
FactoryDescriptor.java,Parameter parameter = Iterables.getOnlyElement(entry.getValue());,if (Iterables != null ) Parameter parameter = Iterables.getOnlyElement(entry.getValue());
FactoryDescriptor.java,Optional<AnnotationMirror> nullable = Optional.absent();,if (Optional != null ) Optional<AnnotationMirror> nullable = Optional.absent();
FactoryDescriptor.java,type = param.type();,if (param != null ) type = param.type();
FactoryDescriptor.java,nullable = nullable.or(param.nullable());,if (nullable != null ) nullable = nullable.or(param.nullable());
FactoryWriter.java,CodeBlock.Builder args = CodeBlock.builder();,if (CodeBlock != null ) CodeBlock.Builder args = CodeBlock.builder();
FactoryWriter.java,Iterator<Parameter> parameters = methodDescriptor.creationParameters().iterator();,if (methodDescriptor != null ) Iterator<Parameter> parameters = methodDescriptor.creationParameters().iterator();
FactoryWriter.java,Parameter parameter = parameters.next();,if (parameters != null ) Parameter parameter = parameters.next();
FactoryWriter.java,argument = codeBlock(parameter.name());,if (codeBlock(parameter != null ) argument = codeBlock(parameter.name());
FactoryWriter.java,argument = codeBlock(provider.name());,if (codeBlock(provider != null ) argument = codeBlock(provider.name());
FactoryWriter.java,nullableArgument = parameter.nullable().isPresent();,if (parameter != null ) nullableArgument = parameter.nullable().isPresent();
Key.java,String typeQualifiedName = MoreTypes.asTypeElement(type()).toString();,if (MoreTypes != null ) String typeQualifiedName = MoreTypes.asTypeElement(type()).toString();
Parameter.java,Optional<AnnotationMirror> nullable = Optional.absent();,if (Optional != null ) Optional<AnnotationMirror> nullable = Optional.absent();
FactoryWriter.java,Key key = entry.getKey();,if (entry != null ) Key key = entry.getKey();
FactoryWriter.java,String providerName = entry.getValue();,if (entry != null ) String providerName = entry.getValue();
FactoryWriter.java,Optional<AnnotationMirror> qualifier = key.getQualifier();,if (key != null ) Optional<AnnotationMirror> qualifier = key.getQualifier();
AutoFactoryDeclaration.java,CharSequence packageName = getPackage(targetType).getQualifiedName();,if (getPackage(targetType) != null ) CharSequence packageName = getPackage(targetType).getQualifiedName();
FactoryDescriptor.java,this.providerNames = providersBuilder.build();,if (providersBuilder != null ) this.providerNames = providersBuilder.build();
FactoryDescriptorGenerator.java,Element classElement = constructor.getEnclosingElement();,if (constructor != null ) Element classElement = constructor.getEnclosingElement();
FactoryMethodDescriptor.java,this.name = builder.name.get();,if (builder != null ) this.name = builder.name.get();
FactoryMethodDescriptor.java,this.returnType = builder.returnType.get();,if (builder != null ) this.returnType = builder.returnType.get();
FactoryWriter.java,JavaFileObject sourceFile = filer.createSourceFile(descriptor.name());,if (filer != null ) JavaFileObject sourceFile = filer.createSourceFile(descriptor.name());
FactoryWriter.java,JavaWriter writer = new JavaWriter(sourceFile.openWriter());,if (JavaWriter(sourceFile != null ) JavaWriter writer = new JavaWriter(sourceFile.openWriter());
FactoryWriter.java,String packageName = getPackage(descriptor.name()).toString();,if (getPackage(descriptor != null ) String packageName = getPackage(descriptor.name()).toString();
FactoryWriter.java,String implementingPackageName = getPackage(implementingType).toString();,if (getPackage(implementingType) != null ) String implementingPackageName = getPackage(implementingType).toString();
ImplementationMethodDescriptor.java,this.name = builder.name.get();,if (builder != null ) this.name = builder.name.get();
ImplementationMethodDescriptor.java,this.returnType = builder.returnType.get();,if (builder != null ) this.returnType = builder.returnType.get();
AutoFactoryDeclaration.java,CharSequence packageName = getPackage(targetType()).getQualifiedName();,if (getPackage(targetType()) != null ) CharSequence packageName = getPackage(targetType()).getQualifiedName();
FactoryDescriptorGenerator.java,TypeElement classElement = MoreElements.asType(constructor.getEnclosingElement());,if (MoreElements != null ) TypeElement classElement = MoreElements.asType(constructor.getEnclosingElement());
FactoryWriter.java,String factoryName = getSimpleName(descriptor.name()).toString();,if (getSimpleName(descriptor != null ) String factoryName = getSimpleName(descriptor.name()).toString();
AutoFactoryDeclaration.java,CharSequence packageName = getPackage(targetType).getQualifiedName();,if (getPackage(targetType) != null ) CharSequence packageName = getPackage(targetType).getQualifiedName();
FactoryDescriptor.java,this.providerNames = providersBuilder.build();,if (providersBuilder != null ) this.providerNames = providersBuilder.build();
FactoryDescriptorGenerator.java,Element classElement = constructor.getEnclosingElement();,if (constructor != null ) Element classElement = constructor.getEnclosingElement();
FactoryMethodDescriptor.java,this.name = builder.name.get();,if (builder != null ) this.name = builder.name.get();
FactoryMethodDescriptor.java,this.returnType = builder.returnType.get();,if (builder != null ) this.returnType = builder.returnType.get();
FactoryWriter.java,JavaFileObject sourceFile = filer.createSourceFile(descriptor.name());,if (filer != null ) JavaFileObject sourceFile = filer.createSourceFile(descriptor.name());
FactoryWriter.java,JavaWriter writer = new JavaWriter(sourceFile.openWriter());,if (JavaWriter(sourceFile != null ) JavaWriter writer = new JavaWriter(sourceFile.openWriter());
FactoryWriter.java,String packageName = getPackage(descriptor.name()).toString();,if (getPackage(descriptor != null ) String packageName = getPackage(descriptor.name()).toString();
FactoryWriter.java,String implementingPackageName = getPackage(implementingType).toString();,if (getPackage(implementingType) != null ) String implementingPackageName = getPackage(implementingType).toString();
ImplementationMethodDescriptor.java,this.name = builder.name.get();,if (builder != null ) this.name = builder.name.get();
ImplementationMethodDescriptor.java,this.returnType = builder.returnType.get();,if (builder != null ) this.returnType = builder.returnType.get();
AutoValueProcessor.java,DeclaredType autoValueTypeMirror = MoreTypes.asDeclared(type.asType());,if (MoreTypes != null ) DeclaredType autoValueTypeMirror = MoreTypes.asDeclared(type.asType());
AutoValueProcessor.java,String propertyType = typeSimplifier.simplify(method.getReturnType());,if (typeSimplifier != null ) String propertyType = typeSimplifier.simplify(method.getReturnType());
AutoValueProcessor.java,String methodName = method.getSimpleName().toString();,if (method != null ) String methodName = method.getSimpleName().toString();
AutoValueProcessor.java,Set<String> seen = Sets.newHashSet();,if (Sets != null ) Set<String> seen = Sets.newHashSet();
AutoValueProcessor.java,String methodName = method.getSimpleName().toString();,if (method != null ) String methodName = method.getSimpleName().toString();
AutoValueProcessor.java,"String subclass = generatedSubclassName(type, appliedExtensions.size());","if (appliedExtensions != null ) String subclass = generatedSubclassName(type, appliedExtensions.size());"
AutoValueProcessor.java,vars.isFinal = appliedExtensions.isEmpty();,if (appliedExtensions != null ) vars.isFinal = appliedExtensions.isEmpty();
AutoValueProcessor.java,String methodName = method.getSimpleName().toString();,if (method != null ) String methodName = method.getSimpleName().toString();
AutoValueProcessor.java,"ImmutableSet<ExecutableElement> methods = getLocalAndInheritedMethods(type, processingEnv.getElementUtils());","if (processingEnv != null ) ImmutableSet<ExecutableElement> methods = getLocalAndInheritedMethods(type, processingEnv.getElementUtils());"
CompilationErrorsTest.java,Collection<String> actualDiagnostics = diagnostics.get(expectedDiagnostic.getKey());,if (diagnostics != null ) Collection<String> actualDiagnostics = diagnostics.get(expectedDiagnostic.getKey());
CompilationTest.java,ExecutableElement maybeOverridden = it.next();,if (it != null ) ExecutableElement maybeOverridden = it.next();
AutoValueProcessor.java,Set<ExecutableElement> methods = new LinkedHashSet<ExecutableElement>(methodMap.values());,if (LinkedHashSet<ExecutableElement>(methodMap != null ) Set<ExecutableElement> methods = new LinkedHashSet<ExecutableElement>(methodMap.values());
AutoValueProcessor.java,Types typeUtils = processingEnv.getTypeUtils();,if (processingEnv != null ) Types typeUtils = processingEnv.getTypeUtils();
AutoValueProcessor.java,Elements elementUtils = processingEnv.getElementUtils();,if (processingEnv != null ) Elements elementUtils = processingEnv.getElementUtils();
AutoValueProcessor.java,List<ExecutableElement> theseMethods = ElementFilter.methodsIn(type.getEnclosedElements());,if (ElementFilter != null ) List<ExecutableElement> theseMethods = ElementFilter.methodsIn(type.getEnclosedElements());
AutoValueProcessor.java,ExecutableElement otherMethod = methodIter.next();,if (methodIter != null ) ExecutableElement otherMethod = methodIter.next();
BuilderSpec.java,ExecutableElement maybeOverridden = it.next();,if (it != null ) ExecutableElement maybeOverridden = it.next();
BasicAnnotationProcessor.java,Set<String> validPackageNames = Sets.newLinkedHashSet();,if (Sets != null ) Set<String> validPackageNames = Sets.newLinkedHashSet();
BasicAnnotationProcessor.java,Set<String> validTypeNames = Sets.newLinkedHashSet();,if (Sets != null ) Set<String> validTypeNames = Sets.newLinkedHashSet();
BasicAnnotationProcessor.java,String annotatedPackageName = annotatedPackageElement.getQualifiedName().toString();,if (annotatedPackageElement != null ) String annotatedPackageName = annotatedPackageElement.getQualifiedName().toString();
BasicAnnotationProcessor.java,String enclosingTypeName = enclosingType.getQualifiedName().toString();,if (enclosingType != null ) String enclosingTypeName = enclosingType.getQualifiedName().toString();
BasicAnnotationProcessorTest.java,PrintWriter writer = new PrintWriter(source.openWriter());,if (PrintWriter(source != null ) PrintWriter writer = new PrintWriter(source.openWriter());
FactoryMethodDescriptor.java,this.factoryName = builder.factoryName.get();,if (builder != null ) this.factoryName = builder.factoryName.get();
TemplateVars.java,Thread currentThread = Thread.currentThread();,if (Thread != null ) Thread currentThread = Thread.currentThread();
TemplateVars.java,ClassLoader oldContextLoader = currentThread.getContextClassLoader();,if (currentThread != null ) ClassLoader oldContextLoader = currentThread.getContextClassLoader();
NoVelocityLoggingTest.java,FileHandler fileHandler = new FileHandler(log.getPath());,if (FileHandler(log != null ) FileHandler fileHandler = new FileHandler(log.getPath());
NoVelocityLoggingTest.java,LogManager logManager = LogManager.getLogManager();,if (LogManager != null ) LogManager logManager = LogManager.getLogManager();
VelocityClassLoaderTest.java,String velocityClassName = Velocity.class.getName();,if (Velocity != null ) String velocityClassName = Velocity.class.getName();
FactoryWriter.java,Optional<String> qualifier = key.getQualifier();,if (key != null ) Optional<String> qualifier = key.getQualifier();
FactoryWriter.java,Optional<AnnotationMirror> qualifier = key.getQualifier();,if (key != null ) Optional<AnnotationMirror> qualifier = key.getQualifier();
FactoryWriter.java,Optional<String> qualifier = key.getQualifier();,if (key != null ) Optional<String> qualifier = key.getQualifier();
AutoValueProcessor.java,String source = genClass.source();,if (genClass != null ) String source = genClass.source();
AutoValueProcessor.java,String text = Reformatter.fixup(genClass.source());,if (Reformatter != null ) String text = Reformatter.fixup(genClass.source());
AutoValueProcessor.java,String text = Reformatter.fixup(genClass.source());,if (Reformatter != null ) String text = Reformatter.fixup(genClass.source());
BuilderMethodClassifier.java,TypeMirror expectedType = valueGetter.getReturnType();,if (valueGetter != null ) TypeMirror expectedType = valueGetter.getReturnType();
BuilderSpec.java,vars.builderSetterNames = setterNameBuilder.build();,if (setterNameBuilder != null ) vars.builderSetterNames = setterNameBuilder.build();
AutoValueProcessor.java,Messager messager = processingEnv.getMessager();,if (processingEnv != null ) Messager messager = processingEnv.getMessager();
AutoValueTemplateVars.java,Set<String> propertiesWithBuilderGetters = Collections.emptySet();,if (Collections != null ) Set<String> propertiesWithBuilderGetters = Collections.emptySet();
BuilderSpec.java,this.elementUtils = processingEnv.getElementUtils();,if (processingEnv != null ) this.elementUtils = processingEnv.getElementUtils();
AutoValueTemplateVars.java,Set<String> validators = Collections.emptySet();,if (Collections != null ) Set<String> validators = Collections.emptySet();
BuilderSpec.java,Optional<ExecutableElement> validateMethod = Optional.absent();,if (Optional != null ) Optional<ExecutableElement> validateMethod = Optional.absent();
BuilderSpec.java,vars.validators = ImmutableSet.of();,if (ImmutableSet != null ) vars.validators = ImmutableSet.of();
BuilderSpec.java,String name = setter.getSimpleName().toString();,if (setter != null ) String name = setter.getSimpleName().toString();
BuilderSpec.java,VariableElement parameter = Iterables.getOnlyElement(setter.getParameters());,if (Iterables != null ) VariableElement parameter = Iterables.getOnlyElement(setter.getParameters());
BuilderSpec.java,boolean prefixing = !prefixMap.isEmpty();,if (!prefixMap != null ) boolean prefixing = !prefixMap.isEmpty();
BuilderSpec.java,int nParameters = method.getParameters().size();,if (method != null ) int nParameters = method.getParameters().size();
BuilderSpec.java,this.typeUtils = processingEnv.getTypeUtils();,if (processingEnv != null ) this.typeUtils = processingEnv.getTypeUtils();
AutoValueProcessor.java,String methodName = method.getSimpleName().toString();,if (method != null ) String methodName = method.getSimpleName().toString();
AutoValueProcessor.java,String name = type.getQualifiedName().toString();,if (type != null ) String name = type.getQualifiedName().toString();
AnnotationDefaults.java,AnnotationValue defaultValue = memberMethod.getDefaultValue();,if (memberMethod != null ) AnnotationValue defaultValue = memberMethod.getDefaultValue();
AnnotationDefaults.java,TypeMirror type = memberMethod.getReturnType();,if (memberMethod != null ) TypeMirror type = memberMethod.getReturnType();
AutoValueProcessor.java,String annotationName = typeSimplifier.simplify(annotationMirror.getAnnotationType());,if (typeSimplifier != null ) String annotationName = typeSimplifier.simplify(annotationMirror.getAnnotationType());
AutoValueProcessor.java,List<String> values = Lists.newArrayList();,if (Lists != null ) List<String> values = Lists.newArrayList();
AutoValueProcessor.java,String propType = typeSimplifier.simplify(method.getReturnType());,if (typeSimplifier != null ) String propType = typeSimplifier.simplify(method.getReturnType());
EclipseHack.java,allFound &= order.contains(property.toString());,if (order != null ) allFound &= order.contains(property.toString());
AutoValueProcessor.java,String fullName = typeSimplifier.simplify(annotationMirror.getAnnotationType());,if (typeSimplifier != null ) String fullName = typeSimplifier.simplify(annotationMirror.getAnnotationType());
AutoValueProcessor.java,String value = entry.getValue().toString();,if (entry != null ) String value = entry.getValue().toString();
AutoValueProcessor.java,Element element = annotationMirror.getAnnotationType().asElement();,if (annotationMirror != null ) Element element = annotationMirror.getAnnotationType().asElement();
AutoValueProcessor.java,Types typeUtils = processingEnv.getTypeUtils();,if (processingEnv != null ) Types typeUtils = processingEnv.getTypeUtils();
AutoServiceProcessor.java,DeclaredType type = mirror.getAnnotationType();,if (mirror != null ) DeclaredType type = mirror.getAnnotationType();
AutoServiceProcessor.java,TypeElement typeElement = (TypeElement) type.asElement();,if (type != null ) TypeElement typeElement = (TypeElement) type.asElement();
AbstractMethodExtractor.java,className = tokenizer.nextToken();,if (tokenizer != null ) className = tokenizer.nextToken();
AbstractMethodExtractor.java,String container = classStack.getLast();,if (classStack != null ) String container = classStack.getLast();
AbstractMethodExtractor.java,List<String> methods = abstractMethods.get(classStack.getLast());,if (abstractMethods != null ) List<String> methods = abstractMethods.get(classStack.getLast());
AutoValueProcessor.java,s += sep + typeParameter.getSimpleName();,if (typeParameter != null ) s += sep + typeParameter.getSimpleName();
TypeSimplifierTest.java,boolean compiledOk = javacTask.call();,if (javacTask != null ) boolean compiledOk = javacTask.call();
TypeSimplifierTest.java,elementUtil = processingEnv.getElementUtils();,if (processingEnv != null ) elementUtil = processingEnv.getElementUtils();
MoreTypes.java,result += hashList(t.getTypeArguments());,if (hashList(t != null ) result += hashList(t.getTypeArguments());
MoreTypes.java,result += hashList(t.getParameterTypes());,if (hashList(t != null ) result += hashList(t.getParameterTypes());
MoreTypes.java,result += hashList(t.getThrownTypes());,if (hashList(t != null ) result += hashList(t.getThrownTypes());
MoreTypes.java,result += hashList(t.getTypeVariables());,if (hashList(t != null ) result += hashList(t.getTypeVariables());
TypeSimplifierTest.java,Set<TypeMirror> types = ImmutableSet.of();,if (ImmutableSet != null ) Set<TypeMirror> types = ImmutableSet.of();
AutoValueProcessor.java,StringBuilder sb = new StringBuilder(s.length());,if (StringBuilder(s != null ) StringBuilder sb = new StringBuilder(s.length());
AutoValueProcessor.java,StringBuilder sb = new StringBuilder(s.length());,if (StringBuilder(s != null ) StringBuilder sb = new StringBuilder(s.length());
AutoValueProcessor.java,StringBuilder sb = new StringBuilder(s.length());,if (StringBuilder(s != null ) StringBuilder sb = new StringBuilder(s.length());
EclipseHack.java,TypeElement owner = properties.get(index).owner();,if (properties != null ) TypeElement owner = properties.get(index).owner();
Template.java,"int afterOpen = dollar + ""$["".length();","if (""$["" != null ) int afterOpen = dollar + ""$["".length();"
TypeSimplifierTest.java,"TypeSimplifier typeSimplifier = new TypeSimplifier(typeUtil, """", typesBuilder.build());","if (typesBuilder != null ) TypeSimplifier typeSimplifier = new TypeSimplifier(typeUtil, """", typesBuilder.build());"
AutoValueProcessor.java,String s = type.getSimpleName().toString();,if (type != null ) String s = type.getSimpleName().toString();
EclipseHack.java,Filer filer = processingEnv.getFiler();,if (processingEnv != null ) Filer filer = processingEnv.getFiler();
EclipseHack.java,topLevel = topLevel.getEnclosingElement();,if (topLevel != null ) topLevel = topLevel.getEnclosingElement();
EclipseHack.java,File file = new File(resource.toUri());,if (File(resource != null ) File file = new File(resource.toUri());
EclipseHack.java,this.file = new File(resource.toUri());,if (File(resource != null ) this.file = new File(resource.toUri());
AutoValueProcessor.java,Elements elementUtils = processingEnv.getElementUtils();,if (processingEnv != null ) Elements elementUtils = processingEnv.getElementUtils();
TypeSimplifier.java,String erasure = typeUtil.erasure(type).toString();,if (typeUtil != null ) String erasure = typeUtil.erasure(type).toString();
TypeSimplifier.java,spelling = type.toString();,if (type != null ) spelling = type.toString();
AutoValueProcessor.java,Element enclosing = type.getEnclosingElement();,if (type != null ) Element enclosing = type.getEnclosingElement();
AutoValueProcessor.java,String name = method.getSimpleName().toString();,if (method != null ) String name = method.getSimpleName().toString();
AutoValues.java,String classToConstructName = classToConstruct.getName();,if (classToConstruct != null ) String classToConstructName = classToConstruct.getName();
AutoValues.java,factory = implementationClass.newInstance();,if (implementationClass != null ) factory = implementationClass.newInstance();
AutoValueProcessor.java,List<TypeElement> classes = ElementFilter.typesIn(type.getEnclosedElements());,if (ElementFilter != null ) List<TypeElement> classes = ElementFilter.typesIn(type.getEnclosedElements());
AutoValueProcessor.java,ExecutableElement parentMethod = methodIter.next();,if (methodIter != null ) ExecutableElement parentMethod = methodIter.next();
FactoryDescriptorGenerator.java,final AutoFactoryDeclaration declaration = declarationFactory.createIfValid(element).get();,if (declarationFactory != null ) final AutoFactoryDeclaration declaration = declarationFactory.createIfValid(element).get();
ImplemetationMethodDescriptor.java,this.factoryName = builder.factoryName.get();,if (builder != null ) this.factoryName = builder.factoryName.get();
AutoFactoryChecker.java,String className = classNameValue.getValue().toString();,if (classNameValue != null ) String className = classNameValue.getValue().toString();
FactoryDescriptorGenerator.java,String returnType = e.getReturnType().toString();,if (e != null ) String returnType = e.getReturnType().toString();
FactoryDescriptorGenerator.java,providedParameters = ImmutableSet.of();,if (ImmutableSet != null ) providedParameters = ImmutableSet.of();
AutoFactoryDeclaration.java,String named = namedValue.getValue().toString();,if (namedValue != null ) String named = namedValue.getValue().toString();
AutoFactoryProcessor.java,Messager messager = processingEnv.getMessager();,if (processingEnv != null ) Messager messager = processingEnv.getMessager();
AutoFactoryProcessor.java,Elements elements = processingEnv.getElementUtils();,if (processingEnv != null ) Elements elements = processingEnv.getElementUtils();
AutoFactoryProcessor.java,FactoryWriter factoryWriter = new FactoryWriter(processingEnv.getFiler());,if (FactoryWriter(processingEnv != null ) FactoryWriter factoryWriter = new FactoryWriter(processingEnv.getFiler());
Compilation.java,JavacTool compiler = (JavacTool) ToolProvider.getSystemJavaCompiler();,if (ToolProvider != null ) JavacTool compiler = (JavacTool) ToolProvider.getSystemJavaCompiler();
Compilation.java,Elements elements = task.getElements();,if (task != null ) Elements elements = task.getElements();
Compilation.java,Types types = task.getTypes();,if (task != null ) Types types = task.getTypes();
Compilation.java,JavacTool compiler = (JavacTool) ToolProvider.getSystemJavaCompiler();,if (ToolProvider != null ) JavacTool compiler = (JavacTool) ToolProvider.getSystemJavaCompiler();
EqualityScanner.java,Kind referenceKind = checkNotNull(reference).getKind();,if (checkNotNull(reference) != null ) Kind referenceKind = checkNotNull(reference).getKind();
EqualityScanner.java,Kind treeKind = checkNotNull(tree).getKind();,if (checkNotNull(tree) != null ) Kind treeKind = checkNotNull(tree).getKind();
InMemoryJavaFileManager.java,lastModified = System.currentTimeMillis();,if (System != null ) lastModified = System.currentTimeMillis();
InMemoryJavaFileManager.java,lastModified = System.currentTimeMillis();,if (System != null ) lastModified = System.currentTimeMillis();
InMemoryJavaFileManager.java,this.data = Optional.absent();,if (Optional != null ) this.data = Optional.absent();
JavaFileObjects.java,this.lastModified = System.currentTimeMillis();,if (System != null ) this.lastModified = System.currentTimeMillis();
JavaFileObjects.java,String path = uri.getPath();,if (uri != null ) String path = uri.getPath();
JavaSourcesSubject.java,return lineNumber == input.getLineNumber();,if (input != null ) return lineNumber == input.getLineNumber();
JavaSourcesSubject.java,return columnNumber == input.getColumnNumber();,if (input != null ) return columnNumber == input.getColumnNumber();
JavaSourcesSubjectFactoryTest.java,Writer writer = sourceFile.openWriter();,if (sourceFile != null ) Writer writer = sourceFile.openWriter();
JavaSourcesSubject.java,Iterator<JavaFileObject> expectedIterator = expectedList.iterator();,if (expectedList != null ) Iterator<JavaFileObject> expectedIterator = expectedList.iterator();
JavaSourcesSubject.java,JavacTool compiler = (JavacTool) ToolProvider.getSystemJavaCompiler();,if (ToolProvider != null ) JavacTool compiler = (JavacTool) ToolProvider.getSystemJavaCompiler();
JavaSourcesSubject.java,JavacTool compiler = (JavacTool) ToolProvider.getSystemJavaCompiler();,if (ToolProvider != null ) JavacTool compiler = (JavacTool) ToolProvider.getSystemJavaCompiler();
AutoServiceProcessor.java,Set<String> oldServices = ServicesFile.readServiceFile(existingFile.openInputStream());,if (ServicesFile != null ) Set<String> oldServices = ServicesFile.readServiceFile(existingFile.openInputStream());
InMemoryJavaFileManager.java,String path = uri.getPath();,if (uri != null ) String path = uri.getPath();
AutoFactoryProcessorTest.java,this.compiler = ToolProvider.getSystemJavaCompiler();,if (ToolProvider != null ) this.compiler = ToolProvider.getSystemJavaCompiler();
AutoFactoryProcessorTest.java,this.inputSources = folder.newFolder();,if (folder != null ) this.inputSources = folder.newFolder();
AutoFactoryProcessorTest.java,this.expectedSources = folder.newFolder();,if (folder != null ) this.expectedSources = folder.newFolder();
AutoFactoryProcessorTest.java,this.outputSources = folder.newFolder();,if (folder != null ) this.outputSources = folder.newFolder();
JavaSourceSubject.java,this.compiler = (JavacTool) ToolProvider.getSystemJavaCompiler();,if (ToolProvider != null ) this.compiler = (JavacTool) ToolProvider.getSystemJavaCompiler();
InterfaceLinkAdapterGenerator.java,String typeName = type.getQualifiedName().toString();,if (type != null ) String typeName = type.getQualifiedName().toString();
FactoryWriter.java,String implementingPackageName = Names.getPackage(implementingType).toString();,if (Names != null ) String implementingPackageName = Names.getPackage(implementingType).toString();
BuildLogValidator.java,FileChannel fc = stream.getChannel();,if (stream != null ) FileChannel fc = stream.getChannel();
CodeGen.java,type = type.getEnclosingElement();,if (type != null ) type = type.getEnclosingElement();
CodeGen.java,TypeElement typeElement = (TypeElement) declaredType.asElement();,if (declaredType != null ) TypeElement typeElement = (TypeElement) declaredType.asElement();
CodeGen.java,return expectedClass == value.getClass();,if (value != null ) return expectedClass == value.getClass();
CodeGen.java,String qualifiedName = type.getQualifiedName().toString();,if (type != null ) String qualifiedName = type.getQualifiedName().toString();
CodeGen.java,TypeElement type = (TypeElement) constructor.getEnclosingElement();,if (constructor != null ) TypeElement type = (TypeElement) constructor.getEnclosingElement();
ProcessorUtils.java,Element typeElement = element.getEnclosingElement();,if (element != null ) Element typeElement = element.getEnclosingElement();
ProcessorUtils.java,type = typeElement.getEnclosingElement().asType();,if (typeElement != null ) type = typeElement.getEnclosingElement().asType();
ProcessorUtils.java,type = typeElement.asType();,if (typeElement != null ) type = typeElement.asType();
FactoryProcessor.java,Name typeName = type.getQualifiedName();,if (type != null ) Name typeName = type.getQualifiedName();
FactoryProcessor.java,type = element.asType();,if (element != null ) type = element.asType();
FactoryProcessor.java,Name typeName = type.getQualifiedName();,if (type != null ) Name typeName = type.getQualifiedName();
FactoryProcessor.java,type = element.asType();,if (element != null ) type = element.asType();
