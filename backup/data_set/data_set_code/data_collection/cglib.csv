Filename,Buggy/Deleted,Fixed/Added
BridgeMethodResolver.java,Map.Entry entry = (Map.Entry)entryIter.next();,if ((Map != null ) Map.Entry entry = (Map.Entry)entryIter.next();
BridgeMethodResolver.java,Class owner = (Class)entry.getKey();,if ((Class)entry != null ) Class owner = (Class)entry.getKey();
BridgeMethodResolver.java,Set bridges = (Set)entry.getValue();,if ((Set)entry != null ) Set bridges = (Set)entry.getValue();
ReflectUtils.java,Method[] methods = Object.class.getDeclaredMethods();,if (Object != null ) Method[] methods = Object.class.getDeclaredMethods();
Enhancer.java,final Map bridgeToTarget = new BridgeMethodResolver(declToBridge).resolveAll();,if (BridgeMethodResolver(declToBridge) != null ) final Map bridgeToTarget = new BridgeMethodResolver(declToBridge).resolveAll();
AbstractClassGenerator.java,Object save = CURRENT.get();,if (CURRENT != null ) Object save = CURRENT.get();
KeyFactory.java,seed += parameterTypes[i].hashCode();,if (parameterTypes[i] != null ) seed += parameterTypes[i].hashCode();
DebuggingClassWriter.java,byte[] b = DebuggingClassWriter.super.toByteArray();,if (DebuggingClassWriter != null ) byte[] b = DebuggingClassWriter.super.toByteArray();
DefaultNamingPolicy.java,String base = sb.toString();,if (sb != null ) String base = sb.toString();
RemappingCodeVisitor.java,nextLocal += args[i].getSize();,if (args[i] != null ) nextLocal += args[i].getSize();
MethodInterceptorGenerator.java,List declaredMethods = Arrays.asList(cls.getDeclaredMethods());,if (Arrays != null ) List declaredMethods = Arrays.asList(cls.getDeclaredMethods());
MethodInterceptorGenerator.java,"List declaredInfo = CollectionUtils.transform(declaredMethods, MethodInfoTransformer.getInstance());","if (MethodInfoTransformer != null ) List declaredInfo = CollectionUtils.transform(declaredMethods, MethodInfoTransformer.getInstance());"
MethodInterceptorGenerator.java,Integer index = (Integer)j.next();,if ((Integer)j != null ) Integer index = (Integer)j.next();
MethodProxy.java,AbstractClassGenerator fromEnhancer = AbstractClassGenerator.getCurrent();,if (AbstractClassGenerator != null ) AbstractClassGenerator fromEnhancer = AbstractClassGenerator.getCurrent();
MethodInterceptorGenerator.java,MethodInfo method = (MethodInfo)it.next();,if ((MethodInfo)it != null ) MethodInfo method = (MethodInfo)it.next();
MethodInterceptorGenerator.java,Signature sig = method.getSignature();,if (method != null ) Signature sig = method.getSignature();
AbstractProcessTask.java,String[] srcFiles = ds.getIncludedFiles();,if (ds != null ) String[] srcFiles = ds.getIncludedFiles();
Enhancer.java,type = type.getSuperclass();,if (type != null ) type = type.getSuperclass();
Enhancer.java,String desc = superType.getDescriptor();,if (superType != null ) String desc = superType.getDescriptor();
Enhancer.java,"methods = CollectionUtils.transform(superMethods, MethodInfoTransformer.getInstance());","if (MethodInfoTransformer != null ) methods = CollectionUtils.transform(superMethods, MethodInfoTransformer.getInstance());"
Enhancer.java,CodeEmitter e = ce.getStaticHook();,if (ce != null ) CodeEmitter e = ce.getStaticHook();
NoOpGenerator.java,MethodInfo method = (MethodInfo)it.next();,if ((MethodInfo)it != null ) MethodInfo method = (MethodInfo)it.next();
AbstractTransformTask.java,int[] version = reader.getVersion();,if (reader != null ) int[] version = reader.getVersion();
AbstractClassGenerator.java,Object save = CURRENT.get();,if (CURRENT != null ) Object save = CURRENT.get();
ReflectUtils.java,Class sc = clazz.getSuperclass();,if (clazz != null ) Class sc = clazz.getSuperclass();
BeanCopier.java,Type getterType = Type.getType(getter.getPropertyType());,if (Type != null ) Type getterType = Type.getType(getter.getPropertyType());
BeanCopier.java,Type setterType = Type.getType(setter.getPropertyType());,if (Type != null ) Type setterType = Type.getType(setter.getPropertyType());
CodeEmitter.java,Class declaring = method.getDeclaringClass();,if (method != null ) Class declaring = method.getDeclaringClass();
DispatcherGenerator.java,Method method = (Method)it.next();,if ((Method)it != null ) Method method = (Method)it.next();
EnhancerEmitter.java,Method method = (Method)it.next();,if ((Method)it != null ) Method method = (Method)it.next();
FixedValueGenerator.java,Method method = (Method)it.next();,if ((Method)it != null ) Method method = (Method)it.next();
InvocationHandlerGenerator.java,Method method = (Method)it.next();,if ((Method)it != null ) Method method = (Method)it.next();
InvocationHandlerGenerator.java,Method method = (Method)it.next();,if ((Method)it != null ) Method method = (Method)it.next();
LazyLoaderGenerator.java,Method method = (Method)it.next();,if ((Method)it != null ) Method method = (Method)it.next();
MethodInterceptorGenerator.java,Method method = (Method)it.next();,if ((Method)it != null ) Method method = (Method)it.next();
MethodInterceptorGenerator.java,Method method = (Method)it.next();,if ((Method)it != null ) Method method = (Method)it.next();
NoOpGenerator.java,Method method = (Method)it.next();,if ((Method)it != null ) Method method = (Method)it.next();
FastClassEmitter.java,Type[] types = sig.getArgumentTypes();,if (sig != null ) Type[] types = sig.getArgumentTypes();
MethodDelegate.java,boolean isStatic = Modifier.isStatic(method.getModifiers());,if (Modifier != null ) boolean isStatic = Modifier.isStatic(method.getModifiers());
AddStaticInitTransformer.java,Class[] types = classInit.getParameterTypes();,if (classInit != null ) Class[] types = classInit.getParameterTypes();
ReflectUtils.java,boolean flag = cstruct.isAccessible();,if (cstruct != null ) boolean flag = cstruct.isAccessible();
ReflectUtils.java,classes[i] = objects[i].getClass();,if (objects[i] != null ) classes[i] = objects[i].getClass();
ReflectUtils.java,PropertyDescriptor[] all = info.getPropertyDescriptors();,if (info != null ) PropertyDescriptor[] all = info.getPropertyDescriptors();
ReflectUtils.java,cl = cl.getSuperclass();,if (cl != null ) cl = cl.getSuperclass();
ReflectUtils.java,Class superclass = type.getSuperclass();,if (type != null ) Class superclass = type.getSuperclass();
ReflectUtils.java,Class[] interfaces = type.getInterfaces();,if (type != null ) Class[] interfaces = type.getInterfaces();
ReflectUtils.java,Class superclass = type.getSuperclass();,if (type != null ) Class superclass = type.getSuperclass();
ReflectUtils.java,Method[] methods = iface.getDeclaredMethods();,if (iface != null ) Method[] methods = iface.getDeclaredMethods();
ReflectUtils.java,boolean flag = cstruct.isAccessible();,if (cstruct != null ) boolean flag = cstruct.isAccessible();
ReflectUtils.java,classes[i] = objects[i].getClass();,if (objects[i] != null ) classes[i] = objects[i].getClass();
ReflectUtils.java,PropertyDescriptor[] all = info.getPropertyDescriptors();,if (info != null ) PropertyDescriptor[] all = info.getPropertyDescriptors();
ReflectUtils.java,cl = cl.getSuperclass();,if (cl != null ) cl = cl.getSuperclass();
ReflectUtils.java,Class superclass = type.getSuperclass();,if (type != null ) Class superclass = type.getSuperclass();
ReflectUtils.java,Class[] interfaces = type.getInterfaces();,if (type != null ) Class[] interfaces = type.getInterfaces();
ReflectUtils.java,Class superclass = type.getSuperclass();,if (type != null ) Class superclass = type.getSuperclass();
ReflectUtils.java,Method[] methods = iface.getDeclaredMethods();,if (iface != null ) Method[] methods = iface.getDeclaredMethods();
DebuggingClassWriter.java,byte[] b = super.toByteArray();,if (super != null ) byte[] b = super.toByteArray();
ReflectUtils.java,boolean flag = cstruct.isAccessible();,if (cstruct != null ) boolean flag = cstruct.isAccessible();
ReflectUtils.java,cl = cl.getSuperclass();,if (cl != null ) cl = cl.getSuperclass();
ReflectUtils.java,Class superclass = type.getSuperclass();,if (type != null ) Class superclass = type.getSuperclass();
ReflectUtils.java,Class[] interfaces = type.getInterfaces();,if (type != null ) Class[] interfaces = type.getInterfaces();
ReflectUtils.java,SecurityManager sm = System.getSecurityManager();,if (System != null ) SecurityManager sm = System.getSecurityManager();
InvocationHandlerGenerator.java,Class[] exceptionTypes = method.getExceptionTypes();,if (method != null ) Class[] exceptionTypes = method.getExceptionTypes();
AbstractFilterTransformer.java,AbstractFilterTransformer t = (AbstractFilterTransformer)super.clone();,if ((AbstractFilterTransformer)super != null ) AbstractFilterTransformer t = (AbstractFilterTransformer)super.clone();
AbstractFilterTransformer.java,t.pass = (ClassTransformer)pass.clone();,if ((ClassTransformer)pass != null ) t.pass = (ClassTransformer)pass.clone();
AbstractTransformer.java,AbstractTransformer t = (AbstractTransformer)super.clone();,if ((AbstractTransformer)super != null ) AbstractTransformer t = (AbstractTransformer)super.clone();
EmittingTransformer.java,EmittingTransformer t = (EmittingTransformer)super.clone();,if ((EmittingTransformer)super != null ) EmittingTransformer t = (EmittingTransformer)super.clone();
TransformerChain.java,TransformerChain t = (TransformerChain)super.clone();,if ((TransformerChain)super != null ) TransformerChain t = (TransformerChain)super.clone();
MethodProxy.java,List params = Arrays.asList(method.getParameterTypes());,if (Arrays != null ) List params = Arrays.asList(method.getParameterTypes());
MethodProxy.java,Method[] methods = type.getDeclaredMethods();,if (type != null ) Method[] methods = type.getDeclaredMethods();
MethodProxy.java,String name = methods[i].getName();,if (methods[i] != null ) String name = methods[i].getName();
MethodProxy.java,FastClass.Generator g = new FastClass.Generator();,if (FastClass != null ) FastClass.Generator g = new FastClass.Generator();
AbstractClassGenerator.java,final String keyFieldValue = key.toString();,if (key != null ) final String keyFieldValue = key.toString();
EnhancerEmitter.java,group[ctype] = new ArrayList(methods.size());,if (ArrayList(methods != null ) group[ctype] = new ArrayList(methods.size());
TestBeanMap.java,BeanMap.Generator gen = new BeanMap.Generator();,if (BeanMap != null ) BeanMap.Generator gen = new BeanMap.Generator();
ComplexOps.java,String string = (String)it.next();,if ((String)it != null ) String string = (String)it.next();
CodeEmitter.java,argumentTypes = sig.getArgumentTypes();,if (sig != null ) argumentTypes = sig.getArgumentTypes();
AbstractTransformTask.java,ClassTransformer t = (ClassTransformer)transformer.clone();,if ((ClassTransformer)transformer != null ) ClassTransformer t = (ClassTransformer)transformer.clone();
CodeEmitter.java,state.curBlock = state.curBlock.getParent();,if (state != null ) state.curBlock = state.curBlock.getParent();
MethodDelegate.java,"method = targetClass.getMethod(methodName, proxy.getParameterTypes());","if (proxy != null ) method = targetClass.getMethod(methodName, proxy.getParameterTypes());"
EnhancerEmitter.java,Constructor constructor = (Constructor)i.next();,if ((Constructor)i != null ) Constructor constructor = (Constructor)i.next();
ReflectOps.java,Type owner = Type.getType(method.getDeclaringClass());,if (Type != null ) Type owner = Type.getType(method.getDeclaringClass());
KeyFactoryEmitter.java,parameterTypes = TypeUtils.getTypes(newInstance.getParameterTypes());,if (TypeUtils != null ) parameterTypes = TypeUtils.getTypes(newInstance.getParameterTypes());
KeyFactoryEmitter.java,seed += parameterTypes[i].hashCode();,if (parameterTypes[i] != null ) seed += parameterTypes[i].hashCode();
InvocationHandlerGenerator.java,Method method = (Method)it.next();,if ((Method)it != null ) Method method = (Method)it.next();
CodeEmitter.java,codev = curMethod.getRaw();,if (curMethod != null ) codev = curMethod.getRaw();
CodeEmitter.java,curBlock = curBlock.getParent();,if (curBlock != null ) curBlock = curBlock.getParent();
CodeEmitter.java,Type[] args = curMethod.getArgumentTypes();,if (curMethod != null ) Type[] args = curMethod.getArgumentTypes();
CodeEmitter.java,Type[] args = curMethod.getArgumentTypes();,if (curMethod != null ) Type[] args = curMethod.getArgumentTypes();
CodeEmitter.java,amount += args[i].getSize();,if (args[i] != null ) amount += args[i].getSize();
CodeEmitter.java,Type[] args = curMethod.getArgumentTypes();,if (curMethod != null ) Type[] args = curMethod.getArgumentTypes();
EmitterMethod.java,returnType = sig.getReturnType();,if (sig != null ) returnType = sig.getReturnType();
EmitterMethod.java,argumentTypes = sig.getArgumentTypes();,if (sig != null ) argumentTypes = sig.getArgumentTypes();
EmitterMethod.java,nextLocal += type.getSize();,if (type != null ) nextLocal += type.getSize();
AddDelegateTransformer.java,Method[] methods = delegateIf[i].getMethods();,if (delegateIf[i] != null ) Method[] methods = delegateIf[i].getMethods();
ClassTransformer.java,ClassTransformer t = (ClassTransformer)super.clone();,if ((ClassTransformer)super != null ) ClassTransformer t = (ClassTransformer)super.clone();
Emitter.java,methodName = sig.getName();,if (sig != null ) methodName = sig.getName();
Emitter.java,returnType = sig.getReturnType();,if (sig != null ) returnType = sig.getReturnType();
Emitter.java,argumentTypes = sig.getArgumentTypes();,if (sig != null ) argumentTypes = sig.getArgumentTypes();
Emitter.java,size += types[i].getSize();,if (types[i] != null ) size += types[i].getSize();
Emitter.java,names[i] = types[i].getInternalName();,if (types[i] != null ) names[i] = types[i].getInternalName();
Emitter.java,amount += argumentTypes[i].getSize();,if (argumentTypes[i] != null ) amount += argumentTypes[i].getSize();
Emitter.java,nextLocal += type.getSize();,if (type != null ) nextLocal += type.getSize();
AddDelegateTransformer.java,Type type = Type.getType(m.getReturnType());,if (Type != null ) Type type = Type.getType(m.getReturnType());
AbstractClassGenerator.java,"final String keyFieldValue = key.toString(); // TODO: add generator name, etc?","if (etc? != null ) final String keyFieldValue = key.toString(); // TODO: add generator name, etc?"
FieldTransformer.java,for(Iterator iterator = fields.iterator(); iterator.hasNext();  ){,if (){ != null ) for(Iterator iterator = fields.iterator(); iterator.hasNext();  ){
FieldTransformer.java,String name = iterator.next().toString();,if (iterator != null ) String name = iterator.next().toString();
FieldTransformer.java,for(Iterator iterator = fields.iterator(); iterator.hasNext();  ){,if (){ != null ) for(Iterator iterator = fields.iterator(); iterator.hasNext();  ){
FieldTransformer.java,String name = iterator.next().toString();,if (iterator != null ) String name = iterator.next().toString();
TestTransformVisistor.java,data = cw.toByteArray();,if (cw != null ) data = cw.toByteArray();
TestTransformVisistor.java,"TransforClassLoader loader = new TransforClassLoader(data,cls.getName());","if (TransforClassLoader(data,cls != null ) TransforClassLoader loader = new TransforClassLoader(data,cls.getName());"
TestTransformVisistor.java,Class transformed = loader.loadClass(cls.getName());,if (loader != null ) Class transformed = loader.loadClass(cls.getName());
KeyFactoryEmitter.java,Class[] parameterTypes = newInstance.getParameterTypes();,if (newInstance != null ) Class[] parameterTypes = newInstance.getParameterTypes();
AbstractTransformTask.java,String[] srcFiles = ds.getIncludedFiles();,if (ds != null ) String[] srcFiles = ds.getIncludedFiles();
AbstractClassGenerator.java,SecurityManager sm = System.getSecurityManager();,if (System != null ) SecurityManager sm = System.getSecurityManager();
MixinEmitter.java,Method[] methods = classes[i].getMethods();,if (classes[i] != null ) Method[] methods = classes[i].getMethods();
ReflectUtils.java,classes[i] = objects[i].getClass();,if (objects[i] != null ) classes[i] = objects[i].getClass();
ReflectUtils.java,Method[] methods = iface.getDeclaredMethods();,if (iface != null ) Method[] methods = iface.getDeclaredMethods();
ReflectUtils.java,String name = type.getName();,if (type != null ) String name = type.getName();
ReflectUtils.java,int len = pkg.length();,if (pkg != null ) int len = pkg.length();
CodeTransformer.java,CodeTransformer ct = (CodeTransformer)CodeTransformer.this.clone();,if ((CodeTransformer)CodeTransformer != null ) CodeTransformer ct = (CodeTransformer)CodeTransformer.this.clone();
CodeTransformer.java,CodeTransformer t = (CodeTransformer)super.clone();,if ((CodeTransformer)super != null ) CodeTransformer t = (CodeTransformer)super.clone();
TestTransformingLoader.java,ClassLoader parent = TestTransformingLoader.class.getClassLoader();,if (TestTransformingLoader != null ) ClassLoader parent = TestTransformingLoader.class.getClassLoader();
ReflectOps.java,Class type = obj.getClass();,if (obj != null ) Class type = obj.getClass();
Signature.java,type = type.trim();,if (type != null ) type = type.trim();
Ops.java,Class type = obj.getClass();,if (obj != null ) Class type = obj.getClass();
Emitter2.java,size += types[i].getSize();,if (types[i] != null ) size += types[i].getSize();
Emitter2.java,names[i] = types[i].getInternalName();,if (types[i] != null ) names[i] = types[i].getInternalName();
Emitter2.java,curBlock = curBlock.getParent();,if (curBlock != null ) curBlock = curBlock.getParent();
Emitter2.java,amount += argumentTypes[i].getSize();,if (argumentTypes[i] != null ) amount += argumentTypes[i].getSize();
Emitter2.java,desc = type.getDescriptor();,if (type != null ) desc = type.getDescriptor();
Emitter2.java,desc = type.getInternalName();,if (type != null ) desc = type.getInternalName();
Emitter2.java,nextLocal += type.getSize();,if (type != null ) nextLocal += type.getSize();
Virt.java,Class[] parameterTypes = cg.getParameterTypes();,if (cg != null ) Class[] parameterTypes = cg.getParameterTypes();
Virt.java,Class type = obj.getClass();,if (obj != null ) Class type = obj.getClass();
Virt.java,Class compType = type.getComponentType();,if (type != null ) Class compType = type.getComponentType();
Virt.java,Class compType = type.getComponentType();,if (type != null ) Class compType = type.getComponentType();
Virt.java,String string = (String)it.next();,if ((String)it != null ) String string = (String)it.next();
ParallelSorterEmitter.java,Class type = arrays[i].getClass();,if (arrays[i] != null ) Class type = arrays[i].getClass();
ParallelSorterEmitter.java,Class type = arrays[i].getClass();,if (arrays[i] != null ) Class type = arrays[i].getClass();
ParallelSorterEmitter.java,Class component = type.getComponentType();,if (type != null ) Class component = type.getComponentType();
MulticastDelegate.java,Class returnType = method.getReturnType();,if (method != null ) Class returnType = method.getReturnType();
Emitter2.java,amount += parameterTypes[i].getSize();,if (parameterTypes[i] != null ) amount += parameterTypes[i].getSize();
TestTransformingLoader.java,ClassLoader parent = TestTransformingLoader.class.getClassLoader();,if (TestTransformingLoader != null ) ClassLoader parent = TestTransformingLoader.class.getClassLoader();
TestTransformingLoader.java,Class loaded = loader.loadClass(Example.class.getName());,if (loader != null ) Class loaded = loader.loadClass(Example.class.getName());
TransformClassVisitor.java,for(Iterator iterator = fields.iterator(); iterator.hasNext();  ){,if (){ != null ) for(Iterator iterator = fields.iterator(); iterator.hasNext();  ){
TransformClassVisitor.java,String name = iterator.next().toString();,if (iterator != null ) String name = iterator.next().toString();
TransformClassVisitor.java,for(Iterator iterator = fields.iterator(); iterator.hasNext();  ){,if (){ != null ) for(Iterator iterator = fields.iterator(); iterator.hasNext();  ){
TransformClassVisitor.java,String name = iterator.next().toString();,if (iterator != null ) String name = iterator.next().toString();
TransformClassVisitor.java,Type type = Type.getType(m.getReturnType());,if (Type != null ) Type type = Type.getType(m.getReturnType());
TransformLoader.java,data = out.toByteArray();,if (out != null ) data = out.toByteArray();
TransformLoader.java,Transformation t = (Transformation)i.next();,if ((Transformation)i != null ) Transformation t = (Transformation)i.next();
TestTransformVisistor.java,data = tv.transform();,if (tv != null ) data = tv.transform();
AbstractClassGenerator.java,byte[] b = cw.toByteArray();,if (cw != null ) byte[] b = cw.toByteArray();
BasicCodeGenerator.java,namePrefix = superclass.getName();,if (superclass != null ) namePrefix = superclass.getName();
BasicCodeGenerator.java,byte[] bytes = backend.getBytes();,if (backend != null ) byte[] bytes = backend.getBytes();
BasicCodeGenerator.java,SecurityManager sm = System.getSecurityManager();,if (System != null ) SecurityManager sm = System.getSecurityManager();
BasicCodeGenerator.java,"Block newBlock = new Block(curBlock, backend.mark());","if (backend != null ) Block newBlock = new Block(curBlock, backend.mark());"
BasicCodeGenerator.java,curBlock = curBlock.getParent();,if (curBlock != null ) curBlock = curBlock.getParent();
CodeGenerator.java,Class type = obj.getClass();,if (obj != null ) Class type = obj.getClass();
CodeGenerator.java,Class compType = type.getComponentType();,if (type != null ) Class compType = type.getComponentType();
CodeGenerator.java,Class compType = type.getComponentType();,if (type != null ) Class compType = type.getComponentType();
CodeGenerator.java,String string = (String)it.next();,if ((String)it != null ) String string = (String)it.next();
CollectionUtils.java,Object value = (Object)it.next();,if ((Object)it != null ) Object value = (Object)it.next();
CollectionUtils.java,List result = new ArrayList(c.size());,if (ArrayList(c != null ) List result = new ArrayList(c.size());
FactoryCache.java,defaultLoader = source.getClassLoader();,if (source != null ) defaultLoader = source.getClassLoader();
FactoryCache.java,BasicCodeGenerator cg = callback.newGenerator();,if (callback != null ) BasicCodeGenerator cg = callback.newGenerator();
FactoryCache.java,factory = callback.newFactory(cg.define());,if (callback != null ) factory = callback.newFactory(cg.define());
ReflectUtils.java,boolean flag = cstruct.isAccessible();,if (cstruct != null ) boolean flag = cstruct.isAccessible();
ReflectUtils.java,classes[i] = objects[i].getClass();,if (objects[i] != null ) classes[i] = objects[i].getClass();
ReflectUtils.java,Method[] methods = iface.getDeclaredMethods();,if (iface != null ) Method[] methods = iface.getDeclaredMethods();
ReflectUtils.java,String name = type.getName();,if (type != null ) String name = type.getName();
ReflectUtils.java,int len = pkg.length();,if (pkg != null ) int len = pkg.length();
ReflectUtils.java,PropertyDescriptor[] all = info.getPropertyDescriptors();,if (info != null ) PropertyDescriptor[] all = info.getPropertyDescriptors();
ReflectUtils.java,cl = cl.getSuperclass();,if (cl != null ) cl = cl.getSuperclass();
ReflectUtils.java,Class superclass = type.getSuperclass();,if (type != null ) Class superclass = type.getSuperclass();
ReflectUtils.java,Class[] interfaces = type.getInterfaces();,if (type != null ) Class[] interfaces = type.getInterfaces();
ConstructorDelegate.java,constructor = delegate.getDeclaredConstructor(newInstance.getParameterTypes());,if (delegate != null ) constructor = delegate.getDeclaredConstructor(newInstance.getParameterTypes());
MethodDelegate.java,Method[] methods = iface.getDeclaredMethods();,if (iface != null ) Method[] methods = iface.getDeclaredMethods();
MethodDelegate.java,"Method method = type.getMethod(methodName, proxy.getParameterTypes());","if (proxy != null ) Method method = type.getMethod(methodName, proxy.getParameterTypes());"
MethodDelegate.java,Class[] types = method.getParameterTypes();,if (method != null ) Class[] types = method.getParameterTypes();
ConstructorDelegate.java,constructor = declaring.getDeclaredConstructor(newInstance.getParameterTypes());,if (declaring != null ) constructor = declaring.getDeclaredConstructor(newInstance.getParameterTypes());
BeanMap.java,final Class type = bean.getClass();,if (bean != null ) final Class type = bean.getClass();
KeyFactoryEmitter.java,parameterTypes = newInstance.getParameterTypes();,if (newInstance != null ) parameterTypes = newInstance.getParameterTypes();
AbstractClassGenerator.java,t = superclass.getClassLoader();,if (superclass != null ) t = superclass.getClassLoader();
Emitter.java,"Block newBlock = new Block(curBlock, backend.mark());","if (backend != null ) Block newBlock = new Block(curBlock, backend.mark());"
CodeGenerator.java,t = getClass().getClassLoader();,if (getClass() != null ) t = getClass().getClassLoader();
FastClass.java,loader = type.getClassLoader();,if (type != null ) loader = type.getClassLoader();
FastClassEmitter.java,Class[] types = method.getParameterTypes();,if (method != null ) Class[] types = method.getParameterTypes();
FastClassEmitter.java,Class[] types = constructor.getParameterTypes();,if (constructor != null ) Class[] types = constructor.getParameterTypes();
CodeGenerator.java,SecurityManager sm = System.getSecurityManager();,if (System != null ) SecurityManager sm = System.getSecurityManager();
TestTransformVisistor.java,Object obj = transformed.newInstance();,if (transformed != null ) Object obj = transformed.newInstance();
EnhancerGenerator.java,Class superclass = type.getSuperclass();,if (type != null ) Class superclass = type.getSuperclass();
EnhancerGenerator.java,Class[] interfaces = type.getInterfaces();,if (type != null ) Class[] interfaces = type.getInterfaces();
MethodProxy.java,ClassLoader loader = superMethod.getDeclaringClass().getClassLoader();,if (superMethod != null ) ClassLoader loader = superMethod.getDeclaringClass().getClassLoader();
CodeGenerator.java,Object value = (Object)it.next();,if ((Object)it != null ) Object value = (Object)it.next();
MethodProxy.java,loader = superMethod.getDeclaringClass().getClassLoader();,if (superMethod != null ) loader = superMethod.getDeclaringClass().getClassLoader();
MethodProxy.java,Class[] types = method.getParameterTypes();,if (method != null ) Class[] types = method.getParameterTypes();
MixinGenerator.java,Method[] methods = classes[i].getMethods();,if (classes[i] != null ) Method[] methods = classes[i].getMethods();
EnhancerGenerator.java,Iterator it = list.iterator();,if (list != null ) Iterator it = list.iterator();
Mixin.java,Class delegate = incoming[i].getClass();,if (incoming[i] != null ) Class delegate = incoming[i].getClass();
MixinGenerator.java,methods = type.getMethods();,if (type != null ) methods = type.getMethods();
TestBulkBean.java,MA bean = (MA)mClass.newInstance();,if ((MA)mClass != null ) MA bean = (MA)mClass.newInstance();
TestBulkBean.java,MA bean = (MA)mc.newInstance();,if ((MA)mc != null ) MA bean = (MA)mc.newInstance();
ConstructorProxy.java,Constructor constructor = declaring.getDeclaredConstructor(newInstance.getParameterTypes());,if (declaring != null ) Constructor constructor = declaring.getDeclaredConstructor(newInstance.getParameterTypes());
ConstructorProxy.java,ClassLoader loader = constructor.getDeclaringClass().getClassLoader();,if (constructor != null ) ClassLoader loader = constructor.getDeclaringClass().getClassLoader();
EnhancerGenerator.java,Iterator it = members.iterator();,if (members != null ) Iterator it = members.iterator();
ConstructorDelegate.java,int mod = member.getModifiers();,if (member != null ) int mod = member.getModifiers();
EnhancerGenerator.java,Class[] types = constructor.getParameterTypes();,if (constructor != null ) Class[] types = constructor.getParameterTypes();
CodeGenerator.java,String value = (String)it.next();,if ((String)it != null ) String value = (String)it.next();
CodeGenerator.java,hashCodes[i] = strings[i].hashCode();,if (strings[i] != null ) hashCodes[i] = strings[i].hashCode();
ASMUtils.java,int len = name.length();,if (name != null ) int len = name.length();
Beans.java,String name = method.getName();,if (method != null ) String name = method.getName();
Enhancer.java,ClassLoader loader = getClass().getClassLoader();,if (getClass() != null ) ClassLoader loader = getClass().getClassLoader();
TestEnhancer.java,Object ser = in.readObject();,if (in != null ) Object ser = in.readObject();
InterfaceMaker.java,Method[] clsMethods = cls.getMethods();,if (cls != null ) Method[] clsMethods = cls.getMethods();
LookupDelegator.java,Method[] methods = interfaces[i].getMethods();,if (interfaces[i] != null ) Method[] methods = interfaces[i].getMethods();
MethodInterceptorGenerator.java,Class[] exceptionTypes = method.getExceptionTypes();,if (method != null ) Class[] exceptionTypes = method.getExceptionTypes();
NoOpGenerator.java,Method[] methods = Object.class.getMethods();,if (Object != null ) Method[] methods = Object.class.getMethods();
ParallelSorter.java,Class type = array.getClass().getComponentType();,if (array != null ) Class type = array.getClass().getComponentType();
ParallelSorterGenerator.java,Class type = objects[i].getClass();,if (objects[i] != null ) Class type = objects[i].getClass();
ParallelSorterGenerator.java,Class type = objects[i].getClass();,if (objects[i] != null ) Class type = objects[i].getClass();
ParallelSorterGenerator.java,Class component = type.getComponentType();,if (type != null ) Class component = type.getComponentType();
TestInterface.java,Method[] methods = iface.getMethods();,if (iface != null ) Method[] methods = iface.getMethods();
EnhancerGenerator.java,type = type.getSuperclass();,if (type != null ) type = type.getSuperclass();
EnhancerGenerator.java,Class superclass = type.getSuperclass();,if (type != null ) Class superclass = type.getSuperclass();
EnhancerGenerator.java,Class[] interfaces = type.getInterfaces();,if (type != null ) Class[] interfaces = type.getInterfaces();
EnhancerGenerator.java,Class[] exceptionTypes = method.getExceptionTypes();,if (method != null ) Class[] exceptionTypes = method.getExceptionTypes();
BasicCodeGenerator.java,int modifiers = method.getModifiers();,if (method != null ) int modifiers = method.getModifiers();
MetaClass.java,Method[] methods = target.getMethods();,if (target != null ) Method[] methods = target.getMethods();
MetaClass.java,Constructor[] constructors = target.getConstructors();,if (target != null ) Constructor[] constructors = target.getConstructors();
EnhancerGenerator.java,Class[] types = constructor.getParameterTypes();,if (constructor != null ) Class[] types = constructor.getParameterTypes();
BeanMap.java,Class type = bean.getClass();,if (bean != null ) Class type = bean.getClass();
BeanMapGenerator.java,this.switchStyle = switchStyle.intValue();,if (switchStyle != null ) this.switchStyle = switchStyle.intValue();
FactoryCache.java,factory = cg.define();,if (cg != null ) factory = cg.define();
MetaClass.java,int mod = method.getModifiers();,if (method != null ) int mod = method.getModifiers();
ConstructorProxy.java,Class declaring = constructor.getDeclaringClass();,if (constructor != null ) Class declaring = constructor.getDeclaringClass();
ConstructorProxy.java,ClassLoader loader = declaring.getClassLoader();,if (declaring != null ) ClassLoader loader = declaring.getClassLoader();
EnhancerGenerator.java,clazz = clazz.getSuperclass();,if (clazz != null ) clazz = clazz.getSuperclass();
EnhancerGenerator.java,Class superclass = clazz.getSuperclass();,if (clazz != null ) Class superclass = clazz.getSuperclass();
EnhancerGenerator.java,Class[] interfaces = clazz.getInterfaces();,if (clazz != null ) Class[] interfaces = clazz.getInterfaces();
MetaClass.java,cl = cl.getSuperclass();,if (cl != null ) cl = cl.getSuperclass();
MetaClass.java,Class clazz = generator.define();,if (generator != null ) Class clazz = generator.define();
MethodDelegate.java,"Method method = clazz.getMethod(methodName, proxy.getParameterTypes());","if (proxy != null ) Method method = clazz.getMethod(methodName, proxy.getParameterTypes());"
MethodProxy.java,Class declaring = superMethod.getDeclaringClass();,if (superMethod != null ) Class declaring = superMethod.getDeclaringClass();
MethodProxy.java,loader = declaring.getClassLoader();,if (declaring != null ) loader = declaring.getClassLoader();
ParallelSorter.java,Class component = type.getComponentType();,if (type != null ) Class component = type.getComponentType();
Delegator.java,Class[] delegateInterfaces = getAllInterfaces(delegate.getClass());,if (getAllInterfaces(delegate != null ) Class[] delegateInterfaces = getAllInterfaces(delegate.getClass());
Delegator.java,Iterator it = indexList.iterator();,if (indexList != null ) Iterator it = indexList.iterator();
Delegator.java,clazz = clazz.getSuperclass();,if (clazz != null ) clazz = clazz.getSuperclass();
DelegatorGenerator.java,MethodInfo info = (MethodInfo)it.next();,if ((MethodInfo)it != null ) MethodInfo info = (MethodInfo)it.next();
BasicCodeGenerator.java,bytes = backend.getBytes();,if (backend != null ) bytes = backend.getBytes();
BeanMap.java,Class key = bean.getClass();,if (bean != null ) Class key = bean.getClass();
DelegatorGenerator.java,methods = clazz.getMethods();,if (clazz != null ) methods = clazz.getMethods();
DelegatorGenerator.java,PropertyDescriptor[] descriptors = info.getPropertyDescriptors();,if (info != null ) PropertyDescriptor[] descriptors = info.getPropertyDescriptors();
DelegatorGenerator.java,Method read = pd.getReadMethod();,if (pd != null ) Method read = pd.getReadMethod();
DelegatorGenerator.java,Method write = pd.getWriteMethod();,if (pd != null ) Method write = pd.getWriteMethod();
ReflectUtils.java,String name = clazz.getName();,if (clazz != null ) String name = clazz.getName();
CodeGenerator.java,bytes = backend.getBytes();,if (backend != null ) bytes = backend.getBytes();
CodeGenerator.java,SecurityManager sm = System.getSecurityManager();,if (System != null ) SecurityManager sm = System.getSecurityManager();
CodeGenerator.java,int modifiers = method.getModifiers();,if (method != null ) int modifiers = method.getModifiers();
CodeGenerator.java,int ref = handlerList.size();,if (handlerList != null ) int ref = handlerList.size();
CodeGenerator.java,Object[] range = (Object[])handlerStack.removeLast();,if ((Object[])handlerStack != null ) Object[] range = (Object[])handlerStack.removeLast();
CodeGenerator.java,Class type = obj.getClass();,if (obj != null ) Class type = obj.getClass();
CodeGenerator.java,Class compType = type.getComponentType();,if (type != null ) Class compType = type.getComponentType();
CodeGenerator.java,Class compType = clazz.getComponentType();,if (clazz != null ) Class compType = clazz.getComponentType();
BCELBackend.java,cp = cg.getConstantPool();,if (cg != null ) cp = cg.getConstantPool();
BCELBackend.java,Map.Entry label = (Map.Entry)labelIterator.next();,if ((Map != null ) Map.Entry label = (Map.Entry)labelIterator.next();
BCELBackend.java,BranchInstruction instruction = (BranchInstruction)instructions.next();,if ((BranchInstruction)instructions != null ) BranchInstruction instruction = (BranchInstruction)instructions.next();
CodeGenerator.java,byte[] bytes = backend.getBytes();,if (backend != null ) byte[] bytes = backend.getBytes();
MethodProxy.java,Class[] types = method.getParameterTypes();,if (method != null ) Class[] types = method.getParameterTypes();
EnhancerGenerator.java,Class superclass = clazz.getSuperclass();,if (clazz != null ) Class superclass = clazz.getSuperclass();
DelegatorGenerator.java,int mod = method.getModifiers();,if (method != null ) int mod = method.getModifiers();
VisibilityFilter.java,pkg = source.getPackage();,if (source != null ) pkg = source.getPackage();
VisibilityFilter.java,Package other = member.getDeclaringClass().getPackage();,if (member != null ) Package other = member.getDeclaringClass().getPackage();
CodeGenerator.java,classes = resource.getDeclaredClasses();,if (resource != null ) classes = resource.getDeclaredClasses();
CodeGenerator.java,classes = methods[i].getParameterTypes();,if (methods[i] != null ) classes = methods[i].getParameterTypes();
CodeGenerator.java,classes = methods[i].getExceptionTypes();,if (methods[i] != null ) classes = methods[i].getExceptionTypes();
CodeGenerator.java,classes = constructors[i].getParameterTypes();,if (constructors[i] != null ) classes = constructors[i].getParameterTypes();
CodeGenerator.java,classes = constructors[i].getExceptionTypes();,if (constructors[i] != null ) classes = constructors[i].getExceptionTypes();
CodeGenerator.java,int b = is.read();,if (is != null ) int b = is.read();
CodeGenerator.java,SecurityManager sm = System.getSecurityManager();,if (System != null ) SecurityManager sm = System.getSecurityManager();
MethodProxy.java,Class declaring = method.getDeclaringClass();,if (method != null ) Class declaring = method.getDeclaringClass();
MethodProxy.java,ClassLoader loader = declaring.getClassLoader();,if (declaring != null ) ClassLoader loader = declaring.getClassLoader();
Enhancer.java,cls = obj.getClass();,if (obj != null ) cls = obj.getClass();
EnhancerGenerator.java,clazz = clazz.getSuperclass();,if (clazz != null ) clazz = clazz.getSuperclass();
CodeGenerator.java,Method[] methods = interfaces[i].getMethods();,if (interfaces[i] != null ) Method[] methods = interfaces[i].getMethods();
CodeGenerator.java,Class[] argumentTypes = method.getParameterTypes();,if (method != null ) Class[] argumentTypes = method.getParameterTypes();
CodeGenerator.java,Class clazz = (Class) iter.next();,if (iter != null ) Class clazz = (Class) iter.next();
Proxy.java,clazz = generator.define();,if (generator != null ) clazz = generator.define();
ProxyGenerator.java,interfacesStr[i] = interfaces[i].getName();,if (interfaces[i] != null ) interfacesStr[i] = interfaces[i].getName();
ProxyGenerator.java,Iterator methods =  methodMap.keySet().iterator();,if (methodMap != null ) Iterator methods =  methodMap.keySet().iterator();
ProxyGenerator.java,Method[] methods = interfaces[i].getMethods();,if (interfaces[i] != null ) Method[] methods = interfaces[i].getMethods();
ProxyGenerator.java,Class[] et = method.getExceptionTypes();,if (method != null ) Class[] et = method.getExceptionTypes();
ProxyGenerator.java,Class[] argumentTypes = method.getParameterTypes();,if (method != null ) Class[] argumentTypes = method.getParameterTypes();
ProxyGenerator.java,Class returnType = method.getReturnType();,if (method != null ) Class returnType = method.getReturnType();
ProxyGenerator.java,this.indent = sb.toString();,if (sb != null ) this.indent = sb.toString();
MetaClass.java,cl = cl.getSuperclass();,if (cl != null ) cl = cl.getSuperclass();
MetaClass.java,int mod = method.getModifiers();,if (method != null ) int mod = method.getModifiers();
MetaClass.java,Class clazz = generator.define();,if (generator != null ) Class clazz = generator.define();
EnhancerGenerator.java,constructorTypes = new ArrayList(constructorList.size());,if (ArrayList(constructorList != null ) constructorTypes = new ArrayList(constructorList.size());
EnhancerGenerator.java,Class[] types = constructor.getParameterTypes();,if (constructor != null ) Class[] types = constructor.getParameterTypes();
Enhancer.java,result = factory.getClass();,if (factory != null ) result = factory.getClass();
ConstructorProxy.java,Class declaring = constructor.getDeclaringClass();,if (constructor != null ) Class declaring = constructor.getDeclaringClass();
ConstructorProxy.java,ClassLoader loader = declaring.getClassLoader();,if (declaring != null ) ClassLoader loader = declaring.getClassLoader();
KeyFactoryGenerator.java,Method[] methods = keyInterface.getDeclaredMethods();,if (keyInterface != null ) Method[] methods = keyInterface.getDeclaredMethods();
EnhancerGenerator.java,Constructor constructor = (Constructor)i.next();,if ((Constructor)i != null ) Constructor constructor = (Constructor)i.next();
EnhancerGenerator.java,Constructor constructor = (Constructor)i.next();,if ((Constructor)i != null ) Constructor constructor = (Constructor)i.next();
EnhancerGenerator.java,Class[] types = constructor.getParameterTypes();,if (constructor != null ) Class[] types = constructor.getParameterTypes();
MethodProxy.java,Class methodClass = method.getDeclaringClass();,if (method != null ) Class methodClass = method.getDeclaringClass();
MethodProxy.java,loader = methodClass.getClassLoader();,if (methodClass != null ) loader = methodClass.getClassLoader();
EnhancerGenerator.java,Constructor[] constructors = clazz.getDeclaredConstructors();,if (clazz != null ) Constructor[] constructors = clazz.getDeclaredConstructors();
EnhancerGenerator.java,Iterator it = methods.iterator();,if (methods != null ) Iterator it = methods.iterator();
CodeGenerator.java,cp = cg.getConstantPool();,if (cg != null ) cp = cg.getConstantPool();
CodeGenerator.java,String name = cg.getClassName();,if (cg != null ) String name = cg.getClassName();
CodeGenerator.java,byte[] bytes = cg.getJavaClass().getBytes();,if (cg != null ) byte[] bytes = cg.getJavaClass().getBytes();
CodeGenerator.java,SecurityManager sm = System.getSecurityManager();,if (System != null ) SecurityManager sm = System.getSecurityManager();
CodeGenerator.java,Type[] types = mg.getArgumentTypes();,if (mg != null ) Type[] types = mg.getArgumentTypes();
CodeGenerator.java,InstructionHandle[] ih = (InstructionHandle[])handlerStack.removeLast();,if ((InstructionHandle[])handlerStack != null ) InstructionHandle[] ih = (InstructionHandle[])handlerStack.removeLast();
CodeGenerator.java,Map.Entry label = (Map.Entry)labelIterator.next();,if ((Map != null ) Map.Entry label = (Map.Entry)labelIterator.next();
CodeGenerator.java,BranchInstruction instruction = (BranchInstruction)instructions.next();,if ((BranchInstruction)instructions != null ) BranchInstruction instruction = (BranchInstruction)instructions.next();
CodeGenerator.java,amount += mg.getArgumentType(i).getSize();,if (mg != null ) amount += mg.getArgumentType(i).getSize();
CodeGenerator.java,size += types[i].getSize();,if (types[i] != null ) size += types[i].getSize();
Delegator.java,classes[i] = delegates[i].getClass();,if (delegates[i] != null ) classes[i] = delegates[i].getClass();
Enhancer.java,interfaceNames[i] = interfaces[i].getName();,if (interfaces[i] != null ) interfaceNames[i] = interfaces[i].getName();
BeanGenerator.java,generator = (BeanGenerator)getClass().getClassLoader();,if ((BeanGenerator)getClass() != null ) generator = (BeanGenerator)getClass().getClassLoader();
BeanGenerator.java,propertyDescriptors[i] = p[i].toPropertyDescriptor();,if (p[i] != null ) propertyDescriptors[i] = p[i].toPropertyDescriptor();
BeanGenerator.java,methodDescriptors[i] = m[i].toMethodDescriptor();,if (m[i] != null ) methodDescriptors[i] = m[i].toMethodDescriptor();
BeanGenerator.java,ConstantPoolGen cp = cg.getConstantPool();,if (cg != null ) ConstantPoolGen cp = cg.getConstantPool();
BeanGenerator.java,Type ret      = ClassFileUtils.toType(mtd.getReturnType());,if (ClassFileUtils != null ) Type ret      = ClassFileUtils.toType(mtd.getReturnType());
BeanGenerator.java,ConstantPoolGen cp = cg.getConstantPool();,if (cg != null ) ConstantPoolGen cp = cg.getConstantPool();
BeanGenerator.java,BeanProperty prop = (BeanProperty)i.next();,if ((BeanProperty)i != null ) BeanProperty prop = (BeanProperty)i.next();
BeanGenerator.java,BeanMethod m = (BeanMethod)i.next();,if ((BeanMethod)i != null ) BeanMethod m = (BeanMethod)i.next();
BeanGenerator.java,int mod = methods[i].getModifiers();,if (methods[i] != null ) int mod = methods[i].getModifiers();
BeanGenerator.java,int mod = method.getModifiers();,if (method != null ) int mod = method.getModifiers();
BeanGenerator.java,Map.Entry entry = (Map.Entry)i.next();,if ((Map != null ) Map.Entry entry = (Map.Entry)i.next();
BeanGenerator.java,Map.Entry entry = (Map.Entry)i.next();,if ((Map != null ) Map.Entry entry = (Map.Entry)i.next();
ClassFileUtils.java,Throwable e = ite.getTargetException();,if (ite != null ) Throwable e = ite.getTargetException();
ClassFileUtils.java,ConstantPoolGen cp = cg.getConstantPool();,if (cg != null ) ConstantPoolGen cp = cg.getConstantPool();
ClassFileUtils.java,InstructionList il = mg.getInstructionList();,if (mg != null ) InstructionList il = mg.getInstructionList();
Enhancer.java,loader = Enhancer.class.getClassLoader();,if (Enhancer != null ) loader = Enhancer.class.getClassLoader();
Enhancer.java,String key = keyBuff.toString();,if (keyBuff != null ) String key = keyBuff.toString();
Enhancer.java,map = new java.util.Hashtable();,if (java != null ) map = new java.util.Hashtable();
Enhancer.java,int mod = construct.getModifiers();,if (construct != null ) int mod = construct.getModifiers();
Enhancer.java,String parentClass = cg.getSuperclassName();,if (cg != null ) String parentClass = cg.getSuperclassName();
Enhancer.java,ConstantPoolGen cp = cg.getConstantPool(); // cg creates constant pool,if (pool != null ) ConstantPoolGen cp = cg.getConstantPool(); // cg creates constant pool
Enhancer.java,ConstantPoolGen cp = cg.getConstantPool();,if (cg != null ) ConstantPoolGen cp = cg.getConstantPool();
Enhancer.java,ConstantPoolGen cp = cg.getConstantPool(); // cg creates constant pool,if (pool != null ) ConstantPoolGen cp = cg.getConstantPool(); // cg creates constant pool
Enhancer.java,JavaClass jcl = cg.getJavaClass();,if (cg != null ) JavaClass jcl = cg.getJavaClass();
Enhancer.java,Class[] interfaces = clazz.getInterfaces();,if (clazz != null ) Class[] interfaces = clazz.getInterfaces();
Enhancer.java,Class superclazz = clazz.getSuperclass();,if (clazz != null ) Class superclazz = clazz.getSuperclass();
Enhancer.java,ConstantPoolGen cp = cg.getConstantPool();,if (cg != null ) ConstantPoolGen cp = cg.getConstantPool();
Enhancer.java,ConstantPoolGen cp = cg.getConstantPool();,if (cg != null ) ConstantPoolGen cp = cg.getConstantPool();
Enhancer.java,InstructionHandle start = il.getStart();,if (il != null ) InstructionHandle start = il.getStart();
Enhancer.java,ehStart   = il.getStart();,if (il != null ) ehStart   = il.getStart();
Enhancer.java,String fieldName      = (String)i.next();,if ((String)i != null ) String fieldName      = (String)i.next();
Enhancer.java,Class[] args = method.getParameterTypes();,if (method != null ) Class[] args = method.getParameterTypes();
Enhancer.java,String declaring    = method.getDeclaringClass().getName();,if (method != null ) String declaring    = method.getDeclaringClass().getName();
Enhancer.java,String fieldName = (String)entry.getKey();,if ((String)entry != null ) String fieldName = (String)entry.getKey();
Enhancer.java,interfaceNameList[i] = interfaces[i].getName();,if (interfaces[i] != null ) interfaceNameList[i] = interfaces[i].getName();
Enhancer.java,ClassLoader loader = this.getClass().getClassLoader();,if (this != null ) ClassLoader loader = this.getClass().getClassLoader();
MetaClass.java,ConstantPoolGen cp = cg.getConstantPool();,if (cg != null ) ConstantPoolGen cp = cg.getConstantPool();
TestBeanGenerator.java,Object bean = bg.getBeanClass().newInstance();,if (bg != null ) Object bean = bg.getBeanClass().newInstance();
TestBeanGenerator.java,Object bean = bg.getBeanClass().newInstance();,if (bg != null ) Object bean = bg.getBeanClass().newInstance();
TestEnhancer.java,int mod =  method.getModifiers();,if (method != null ) int mod =  method.getModifiers();
TestEnhancer.java,Class enhancedClass = source.getClass();,if (source != null ) Class enhancedClass = source.getClass();
TestEnhancer.java,Object ser = in.readObject();,if (in != null ) Object ser = in.readObject();
TestMetaClass.java,A bean = (A)mClass.newInstance();,if ((A)mClass != null ) A bean = (A)mClass.newInstance();
TestMetaClass.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
TestMetaClass.java,A bean = (A)mc.newInstance();,if ((A)mc != null ) A bean = (A)mc.newInstance();
EnhancerGenerator.java,Class[] types = (Class[])i.next();,if ((Class[])i != null ) Class[] types = (Class[])i.next();
ConstructorProxy.java,Class[] types = costructor.getParameterTypes();,if (costructor != null ) Class[] types = costructor.getParameterTypes();
EnhancerGenerator.java,Class[] types = cstruct.getParameterTypes();,if (cstruct != null ) Class[] types = cstruct.getParameterTypes();
CodeGenerator.java,int mod = member.getModifiers();,if (member != null ) int mod = member.getModifiers();
CodeGenerator.java,Package p = member.getDeclaringClass().getPackage();,if (member != null ) Package p = member.getDeclaringClass().getPackage();
EnhancerGenerator.java,int mod = cstruct.getModifiers();,if (cstruct != null ) int mod = cstruct.getModifiers();
EnhancerGenerator.java,Package packageName = getSuperclass().getPackage();,if (getSuperclass() != null ) Package packageName = getSuperclass().getPackage();
EnhancerGenerator.java,Method method = (Method)it.next();,if ((Method)it != null ) Method method = (Method)it.next();
EnhancerGenerator.java,int mod = method.getModifiers();,if (method != null ) int mod = method.getModifiers();
EnhancerGenerator.java,int modifiers = method.getModifiers();,if (method != null ) int modifiers = method.getModifiers();
EnhancerGenerator.java,List methodList = new ArrayList(methodMap.values());,if (ArrayList(methodMap != null ) List methodList = new ArrayList(methodMap.values());
MethodProxy.java,loader = MethodProxy.class.getClassLoader();,if (MethodProxy != null ) loader = MethodProxy.class.getClassLoader();
MethodDelegate.java,Class delegateClass = delegate.getClass();,if (delegate != null ) Class delegateClass = delegate.getClass();
MethodDelegate.java,"Method method = delegateClass.getMethod(methodName, proxy.getParameterTypes());","if (proxy != null ) Method method = delegateClass.getMethod(methodName, proxy.getParameterTypes());"
MethodClosure.java,Class delegateClass = method.getDeclaringClass();,if (method != null ) Class delegateClass = method.getDeclaringClass();
EnhancerGenerator.java,Class[] types = method.getParameterTypes();,if (method != null ) Class[] types = method.getParameterTypes();
EnhancerGenerator.java,Class[] args = method.getParameterTypes();,if (method != null ) Class[] args = method.getParameterTypes();
MethodProxy.java,loader = method.getDeclaringClass().getClassLoader();,if (method != null ) loader = method.getDeclaringClass().getClassLoader();
Delegator.java,iface = iface.getSuperclass();,if (iface != null ) iface = iface.getSuperclass();
EnhancerGenerator.java,int mod = construct.getModifiers();,if (construct != null ) int mod = construct.getModifiers();
Delegator.java,classes[i] = delegates[i].getClass();,if (delegates[i] != null ) classes[i] = delegates[i].getClass();
DelegatorGenerator.java,Method[] methods = iface.getMethods();,if (iface != null ) Method[] methods = iface.getMethods();
Delegator.java,loader = Delegator.class.getClassLoader();,if (Delegator != null ) loader = Delegator.class.getClassLoader();
Enhancer.java,loader = Enhancer.class.getClassLoader();,if (Enhancer != null ) loader = Enhancer.class.getClassLoader();
KeyFactory.java,loader = KeyFactory.class.getClassLoader();,if (KeyFactory != null ) loader = KeyFactory.class.getClassLoader();
MetaClass.java,loader = MetaClass.class.getClassLoader();,if (MetaClass != null ) loader = MetaClass.class.getClassLoader();
MethodProxy.java,Class[] types = method.getParameterTypes();,if (method != null ) Class[] types = method.getParameterTypes();
MethodProxy.java,Class[] types = method.getParameterTypes();,if (method != null ) Class[] types = method.getParameterTypes();
EnhancerGenerator.java,Class returnType = method.getReturnType();,if (method != null ) Class returnType = method.getReturnType();
EnhancerGenerator.java,int mod = method.getModifiers();,if (method != null ) int mod = method.getModifiers();
EnhancerGenerator.java,Method method = (Method)it.next();,if ((Method)it != null ) Method method = (Method)it.next();
EnhancerGenerator.java,String fieldName = (String)it.next();,if ((String)it != null ) String fieldName = (String)it.next();
EnhancerGenerator.java,Class[] args = method.getParameterTypes();,if (method != null ) Class[] args = method.getParameterTypes();
CodeGenerator.java,Class clazz = method.getDeclaringClass();,if (method != null ) Class clazz = method.getDeclaringClass();
EnhancerGenerator.java,Class[] args = method.getParameterTypes();,if (method != null ) Class[] args = method.getParameterTypes();
DelegatorGenerator.java,Method[] methods = iface.getMethods();,if (iface != null ) Method[] methods = iface.getMethods();
TestMetaClass.java,A bean = (A)mClass.newInstance();,if ((A)mClass != null ) A bean = (A)mClass.newInstance();
TestMetaClass.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
TestMetaClass.java,A bean = (A)mc.newInstance();,if ((A)mc != null ) A bean = (A)mc.newInstance();
DelegatorGenerator.java,types = method.getParameterTypes();,if (method != null ) types = method.getParameterTypes();
DelegatorGenerator.java,name = method.getName();,if (method != null ) name = method.getName();
CodeGenerator.java,String name = cg.getClassName();,if (cg != null ) String name = cg.getClassName();
CodeGenerator.java,byte[] bytes = cg.getJavaClass().getBytes();,if (cg != null ) byte[] bytes = cg.getJavaClass().getBytes();
EnhancerGenerator.java,String packageName = parentClass.getPackage().getName();,if (parentClass != null ) String packageName = parentClass.getPackage().getName();
EnhancerGenerator.java,boolean isAbstract = Modifier.isAbstract(method.getModifiers());,if (Modifier != null ) boolean isAbstract = Modifier.isAbstract(method.getModifiers());
CodeGenerator.java,Class compType = type.getComponentType();,if (type != null ) Class compType = type.getComponentType();
CodeGenerator.java,byte[] b = cg.getJavaClass().getBytes();,if (cg != null ) byte[] b = cg.getJavaClass().getBytes();
Delegator.java,Method[] methods = iface.getMethods();,if (iface != null ) Method[] methods = iface.getMethods();
Delegator.java,Class[] types = method.getParameterTypes();,if (method != null ) Class[] types = method.getParameterTypes();
ClassFileUtils.java,Throwable e = ite.getTargetException();,if (ite != null ) Throwable e = ite.getTargetException();
ClassFileUtils.java,ConstantPoolGen cp = cg.getConstantPool();,if (cg != null ) ConstantPoolGen cp = cg.getConstantPool();
ClassFileUtils.java,InstructionList il = mg.getInstructionList();,if (mg != null ) InstructionList il = mg.getInstructionList();
Enhancer.java,map = new java.util.Hashtable();,if (java != null ) map = new java.util.Hashtable();
Enhancer.java,int mod = construct.getModifiers();,if (construct != null ) int mod = construct.getModifiers();
Enhancer.java,String parentClass = cg.getSuperclassName();,if (cg != null ) String parentClass = cg.getSuperclassName();
Enhancer.java,ConstantPoolGen cp = cg.getConstantPool(); // cg creates constant pool,if (pool != null ) ConstantPoolGen cp = cg.getConstantPool(); // cg creates constant pool
Enhancer.java,ConstantPoolGen cp = cg.getConstantPool();,if (cg != null ) ConstantPoolGen cp = cg.getConstantPool();
Enhancer.java,ConstantPoolGen cp = cg.getConstantPool(); // cg creates constant pool,if (pool != null ) ConstantPoolGen cp = cg.getConstantPool(); // cg creates constant pool
Enhancer.java,JavaClass jcl = cg.getJavaClass();,if (cg != null ) JavaClass jcl = cg.getJavaClass();
Enhancer.java,Class[] interfaces = clazz.getInterfaces();,if (clazz != null ) Class[] interfaces = clazz.getInterfaces();
Enhancer.java,Class superclazz = clazz.getSuperclass();,if (clazz != null ) Class superclazz = clazz.getSuperclass();
Enhancer.java,ConstantPoolGen cp = cg.getConstantPool();,if (cg != null ) ConstantPoolGen cp = cg.getConstantPool();
Enhancer.java,ConstantPoolGen cp = cg.getConstantPool();,if (cg != null ) ConstantPoolGen cp = cg.getConstantPool();
Enhancer.java,InstructionHandle start = il.getStart();,if (il != null ) InstructionHandle start = il.getStart();
Enhancer.java,ehStart   = il.getStart();,if (il != null ) ehStart   = il.getStart();
Enhancer.java,String fieldName      = (String)i.next();,if ((String)i != null ) String fieldName      = (String)i.next();
Enhancer.java,Class[] args = method.getParameterTypes();,if (method != null ) Class[] args = method.getParameterTypes();
Enhancer.java,String declaring    = method.getDeclaringClass().getName();,if (method != null ) String declaring    = method.getDeclaringClass().getName();
Enhancer.java,interfaceNameList[i] = interfaces[i].getName();,if (interfaces[i] != null ) interfaceNameList[i] = interfaces[i].getName();
Enhancer.java,ClassLoader loader = this.getClass().getClassLoader();,if (this != null ) ClassLoader loader = this.getClass().getClassLoader();
ClassFileUtils.java,Throwable e = ite.getTargetException();,if (ite != null ) Throwable e = ite.getTargetException();
ClassFileUtils.java,ConstantPoolGen cp = cg.getConstantPool();,if (cg != null ) ConstantPoolGen cp = cg.getConstantPool();
ClassFileUtils.java,InstructionList il = mg.getInstructionList();,if (mg != null ) InstructionList il = mg.getInstructionList();
CodeGenerator.java,cp = cg.getConstantPool();,if (cg != null ) cp = cg.getConstantPool();
CodeGenerator.java,ClassFormatError err = new ClassFormatError(e.getMessage());,if (ClassFormatError(e != null ) ClassFormatError err = new ClassFormatError(e.getMessage());
CodeGenerator.java,Type type = Type.getType(typeClass.getName());,if (Type != null ) Type type = Type.getType(typeClass.getName());
CodeGenerator.java,returnType = method.getReturnType();,if (method != null ) returnType = method.getReturnType();
CodeGenerator.java,Map.Entry label = (Map.Entry)labelIterator.next();,if ((Map != null ) Map.Entry label = (Map.Entry)labelIterator.next();
CodeGenerator.java,BranchInstruction intruction = (BranchInstruction)instructions.next();,if ((BranchInstruction)instructions != null ) BranchInstruction intruction = (BranchInstruction)instructions.next();
CodeGenerator.java,Class clazz = method.getDeclaringClass();,if (method != null ) Class clazz = method.getDeclaringClass();
Delegator.java,ConstantPoolGen cp = cg.getConstantPool();,if (cg != null ) ConstantPoolGen cp = cg.getConstantPool();
Delegator.java,int ifaceref = cp.addClass(iface.getName());,if (cp != null ) int ifaceref = cp.addClass(iface.getName());
Delegator.java,Method[] methods = iface.getMethods();,if (iface != null ) Method[] methods = iface.getMethods();
Delegator.java,Class[] types = method.getParameterTypes();,if (method != null ) Class[] types = method.getParameterTypes();
Delegator.java,ConstantPoolGen cp = cg.getConstantPool();,if (cg != null ) ConstantPoolGen cp = cg.getConstantPool();
Delegator.java,ConstantPoolGen cp = cg.getConstantPool();,if (cg != null ) ConstantPoolGen cp = cg.getConstantPool();
Delegator.java,ConstantPoolGen cp = cg.getConstantPool();,if (cg != null ) ConstantPoolGen cp = cg.getConstantPool();
Delegator.java,Type[] args = mg.getArgumentTypes();,if (mg != null ) Type[] args = mg.getArgumentTypes();
Delegator.java,ConstantPoolGen cp = cg.getConstantPool();,if (cg != null ) ConstantPoolGen cp = cg.getConstantPool();
Delegator.java,ClassLoader loader = Thread.currentThread().getContextClassLoader(); // TODO,if (TODO != null ) ClassLoader loader = Thread.currentThread().getContextClassLoader(); // TODO
MetaClass.java,ConstantPoolGen cp = cg.getConstantPool();,if (cg != null ) ConstantPoolGen cp = cg.getConstantPool();
Delegator.java,ConstantPoolGen cp = cg.getConstantPool();,if (cg != null ) ConstantPoolGen cp = cg.getConstantPool();
Delegator.java,int ifaceref = cp.addClass(iface.getName());,if (cp != null ) int ifaceref = cp.addClass(iface.getName());
Delegator.java,Method[] methods = iface.getMethods();,if (iface != null ) Method[] methods = iface.getMethods();
Delegator.java,ConstantPoolGen cp = cg.getConstantPool();,if (cg != null ) ConstantPoolGen cp = cg.getConstantPool();
Delegator.java,ConstantPoolGen cp = cg.getConstantPool();,if (cg != null ) ConstantPoolGen cp = cg.getConstantPool();
Delegator.java,ConstantPoolGen cp = cg.getConstantPool();,if (cg != null ) ConstantPoolGen cp = cg.getConstantPool();
Delegator.java,Type[] args = mg.getArgumentTypes();,if (mg != null ) Type[] args = mg.getArgumentTypes();
Delegator.java,ConstantPoolGen cp = cg.getConstantPool();,if (cg != null ) ConstantPoolGen cp = cg.getConstantPool();
Delegator.java,Class[] delegateInterfaces = getAllInterfaces(delegate.getClass());,if (getAllInterfaces(delegate != null ) Class[] delegateInterfaces = getAllInterfaces(delegate.getClass());
Delegator.java,iface = iface.getSuperclass();,if (iface != null ) iface = iface.getSuperclass();
Delegator.java,Iterator it = indexList.iterator();,if (indexList != null ) Iterator it = indexList.iterator();
Delegator.java,clazz = clazz.getSuperclass();,if (clazz != null ) clazz = clazz.getSuperclass();
Enhancer.java,String key = keyBuff.toString();,if (keyBuff != null ) String key = keyBuff.toString();
Obj.java,int i = (int)System.currentTimeMillis();,if ((int)System != null ) int i = (int)System.currentTimeMillis();
BeanGenerator.java,Object obj = cls.newInstance();,if (cls != null ) Object obj = cls.newInstance();
BeanGenerator.java,PropertyDescriptor[] d = info.getPropertyDescriptors();,if (info != null ) PropertyDescriptor[] d = info.getPropertyDescriptors();
BeanGenerator.java,generator = (BeanGenerator)getClass().getClassLoader();,if ((BeanGenerator)getClass() != null ) generator = (BeanGenerator)getClass().getClassLoader();
BeanGenerator.java,ConstantPoolGen cp = cg.getConstantPool();,if (cg != null ) ConstantPoolGen cp = cg.getConstantPool();
BeanGenerator.java,Type ret      = ClassFileUtils.toType(mtd.getReturnType());,if (ClassFileUtils != null ) Type ret      = ClassFileUtils.toType(mtd.getReturnType());
BeanGenerator.java,ConstantPoolGen cp = cg.getConstantPool();,if (cg != null ) ConstantPoolGen cp = cg.getConstantPool();
BeanGenerator.java,BeanProperty prop = (BeanProperty)i.next();,if ((BeanProperty)i != null ) BeanProperty prop = (BeanProperty)i.next();
BeanGenerator.java,BeanMethod m = (BeanMethod)i.next();,if ((BeanMethod)i != null ) BeanMethod m = (BeanMethod)i.next();
BeanGenerator.java,int mod = methods[i].getModifiers();,if (methods[i] != null ) int mod = methods[i].getModifiers();
BeanGenerator.java,int mod = method.getModifiers();,if (method != null ) int mod = method.getModifiers();
BeanGenerator.java,Map.Entry entry = (Map.Entry)i.next();,if ((Map != null ) Map.Entry entry = (Map.Entry)i.next();
BeanGenerator.java,ConstantPoolGen cp = cg.getConstantPool();,if (cg != null ) ConstantPoolGen cp = cg.getConstantPool();
BeanGenerator.java,Type ret      = ClassFileUtils.toType(mtd.getReturnType());,if (ClassFileUtils != null ) Type ret      = ClassFileUtils.toType(mtd.getReturnType());
BeanGenerator.java,ConstantPoolGen cp = cg.getConstantPool();,if (cg != null ) ConstantPoolGen cp = cg.getConstantPool();
BeanGenerator.java,BeanProperty prop = (BeanProperty)i.next();,if ((BeanProperty)i != null ) BeanProperty prop = (BeanProperty)i.next();
BeanGenerator.java,BeanMethod m = (BeanMethod)i.next();,if ((BeanMethod)i != null ) BeanMethod m = (BeanMethod)i.next();
BeanGenerator.java,int mod = methods[i].getModifiers();,if (methods[i] != null ) int mod = methods[i].getModifiers();
BeanGenerator.java,BeanProperty prop = (BeanProperty)i.next();,if ((BeanProperty)i != null ) BeanProperty prop = (BeanProperty)i.next();
BeanGenerator.java,BeanMethod m = (BeanMethod)i.next();,if ((BeanMethod)i != null ) BeanMethod m = (BeanMethod)i.next();
BeanGenerator.java,Class cls = bg.generate();,if (bg != null ) Class cls = bg.generate();
Enhancer.java,ConstantPoolGen cp = cg.getConstantPool();,if (cg != null ) ConstantPoolGen cp = cg.getConstantPool();
Enhancer.java,InstructionList il = mg.getInstructionList();,if (mg != null ) InstructionList il = mg.getInstructionList();
Enhancer.java,int mod = construct.getModifiers();,if (construct != null ) int mod = construct.getModifiers();
Enhancer.java,ConstantPoolGen cp = cg.getConstantPool();,if (cg != null ) ConstantPoolGen cp = cg.getConstantPool();
Enhancer.java,InstructionList il = mg.getInstructionList();,if (mg != null ) InstructionList il = mg.getInstructionList();
TestEnhancer.java,int mod =  method.getModifiers();,if (method != null ) int mod =  method.getModifiers();
TestEnhancer.java,Class enhancedClass = source.getClass();,if (source != null ) Class enhancedClass = source.getClass();
TestEnhancer.java,Object ser = in.readObject();,if (in != null ) Object ser = in.readObject();
Enhancer.java,String name = (String) i.next();,if (i != null ) String name = (String) i.next();
Enhancer.java,interfaceNameList[i] = interfaces[i].getName();,if (interfaces[i] != null ) interfaceNameList[i] = interfaces[i].getName();
Enhancer.java,ClassLoader loader = this.getClass().getClassLoader();,if (this != null ) ClassLoader loader = this.getClass().getClassLoader();
Enhancer.java,loader = Enhancer.class.getClassLoader();,if (Enhancer != null ) loader = Enhancer.class.getClassLoader();
Enhancer.java,loader = ClassLoader.getSystemClassLoader();,if (ClassLoader != null ) loader = ClassLoader.getSystemClassLoader();
Enhancer.java,String parentClass = cg.getSuperclassName();,if (cg != null ) String parentClass = cg.getSuperclassName();
Enhancer.java,ConstantPoolGen cp = cg.getConstantPool(); // cg creates constant pool,if (pool != null ) ConstantPoolGen cp = cg.getConstantPool(); // cg creates constant pool
Enhancer.java,String key = keyBuff.toString();,if (keyBuff != null ) String key = keyBuff.toString();
Enhancer.java,methods = parentClass.getMethods();,if (parentClass != null ) methods = parentClass.getMethods();
Enhancer.java,int mod = methods[i].getModifiers();,if (methods[i] != null ) int mod = methods[i].getModifiers();
