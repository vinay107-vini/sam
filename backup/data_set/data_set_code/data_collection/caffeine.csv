Filename,Buggy/Deleted,Fixed/Added
Simulator.java,this.stopwatch = Stopwatch.createUnstarted();,if (Stopwatch != null ) this.stopwatch = Stopwatch.createUnstarted();
Simulator.java,int batchSize = settings.batchSize();,if (settings != null ) int batchSize = settings.batchSize();
Simulator.java,"var registry = new Registry(settings, traceReader.characteristics());","if (traceReader != null ) var registry = new Registry(settings, traceReader.characteristics());"
PolicyActor.java,long priorMisses = policy.stats().missCount();,if (policy != null ) long priorMisses = policy.stats().missCount();
PolicyActor.java,long priorHits = policy.stats().hitCount();,if (policy != null ) long priorHits = policy.stats().hitCount();
CacheContext.java,long maximum = weigher.unitsPerEntry() * maximumSize.max();,if (maximumSize != null ) long maximum = weigher.unitsPerEntry() * maximumSize.max();
BoundedLocalCache.java,int random = ThreadLocalRandom.current().nextInt();,if (ThreadLocalRandom != null ) int random = ThreadLocalRandom.current().nextInt();
BoundedLocalCache.java,candidate = accessOrderProtectedDeque().peek();,if (accessOrderProtectedDeque() != null ) candidate = accessOrderProtectedDeque().peek();
Stresser.java,drainStatus = local.drainStatus();,if (local != null ) drainStatus = local.drainStatus();
BoundedLocalCache.java,candidate = accessOrderWindowDeque().peekLast();,if (accessOrderWindowDeque() != null ) candidate = accessOrderWindowDeque().peekLast();
BoundedLocalCache.java,candidate = candidate.getPreviousInAccessOrder();,if (candidate != null ) candidate = candidate.getPreviousInAccessOrder();
TimerWheelTest.java,var snapshot = new ArrayList<Long>(cache.size());,if (ArrayList<Long>(cache != null ) var snapshot = new ArrayList<Long>(cache.size());
LocalAsyncCache.java,V value = Async.getIfReady(entry.getValue());,if (Async != null ) V value = Async.getIfReady(entry.getValue());
RefreshAfterWriteTest.java,var executor = (TrackingExecutor) context.executor();,if (context != null ) var executor = (TrackingExecutor) context.executor();
RefreshAfterWriteTest.java,var executor = (TrackingExecutor) context.executor();,if (context != null ) var executor = (TrackingExecutor) context.executor();
RefreshAfterWriteTest.java,var executor = (TrackingExecutor) context.executor();,if (context != null ) var executor = (TrackingExecutor) context.executor();
RefreshAfterWriteTest.java,var executor = (TrackingExecutor) context.executor();,if (context != null ) var executor = (TrackingExecutor) context.executor();
RefreshAfterWriteTest.java,var executor = (TrackingExecutor) context.executor();,if (context != null ) var executor = (TrackingExecutor) context.executor();
RefreshAfterWriteTest.java,submitted = executor.submitted();,if (executor != null ) submitted = executor.submitted();
RefreshAfterWriteTest.java,submitted = executor.submitted();,if (executor != null ) submitted = executor.submitted();
CacheValidationListener.java,var executor = (TrackingExecutor) context.executor();,if (context != null ) var executor = (TrackingExecutor) context.executor();
CacheValidationListener.java,var executor = (TrackingExecutor) context.executor();,if (context != null ) var executor = (TrackingExecutor) context.executor();
TraceBenchmark.java,"registry = new Registry(settings, ImmutableSet.of());","if (ImmutableSet != null ) registry = new Registry(settings, ImmutableSet.of());"
BufferTest.java,long recorded = buffer.recorded();,if (buffer != null ) long recorded = buffer.recorded();
BufferTest.java,long drained = buffer.drained();,if (buffer != null ) long drained = buffer.drained();
BufferTest.java,long recorded = buffer.recorded();,if (buffer != null ) long recorded = buffer.recorded();
BufferTest.java,long drained = buffer.drained();,if (buffer != null ) long drained = buffer.drained();
BufferTest.java,long recorded = buffer.recorded();,if (buffer != null ) long recorded = buffer.recorded();
FastFlowBuffer.java,E e = slot.get();,if (slot != null ) E e = slot.get();
ManyToOneBuffer.java,E e = slot.get();,if (slot != null ) E e = slot.get();
MavenWrapperDownloader.java,rbc = Channels.newChannel(website.openStream());,if (Channels != null ) rbc = Channels.newChannel(website.openStream());
MavenWrapperDownloader.java,rbc = Channels.newChannel(website.openStream());,if (Channels != null ) rbc = Channels.newChannel(website.openStream());
JmxRegistration.java,MBeanServer server = ManagementFactory.getPlatformMBeanServer();,if (ManagementFactory != null ) MBeanServer server = ManagementFactory.getPlatformMBeanServer();
JmxRegistration.java,MBeanServer server = ManagementFactory.getPlatformMBeanServer();,if (ManagementFactory != null ) MBeanServer server = ManagementFactory.getPlatformMBeanServer();
AsMapTest.java,int count = context.firstMiddleLastKeys().size();,if (context != null ) int count = context.firstMiddleLastKeys().size();
AsMapTest.java,int count = context.firstMiddleLastKeys().size();,if (context != null ) int count = context.firstMiddleLastKeys().size();
AsMapTest.java,int count = context.firstMiddleLastKeys().size();,if (context != null ) int count = context.firstMiddleLastKeys().size();
AsMapTest.java,int count = context.firstMiddleLastKeys().size();,if (context != null ) int count = context.firstMiddleLastKeys().size();
AsyncAsMapTest.java,int count = context.firstMiddleLastKeys().size();,if (context != null ) int count = context.firstMiddleLastKeys().size();
AsyncLoadingCacheTest.java,int count = context.firstMiddleLastKeys().size();,if (context != null ) int count = context.firstMiddleLastKeys().size();
CacheTest.java,int count = context.firstMiddleLastKeys().size();,if (context != null ) int count = context.firstMiddleLastKeys().size();
EvictionTest.java,int count = context.absentKeys().size();,if (context != null ) int count = context.absentKeys().size();
ExpirationTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpirationTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpirationTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpirationTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpirationTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpirationTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpirationTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpirationTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpirationTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpirationTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpirationTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpirationTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpirationTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpirationTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpirationTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpirationTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpirationTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpirationTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpireAfterAccessTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpireAfterVarTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpireAfterVarTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpireAfterVarTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpireAfterVarTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpireAfterWriteTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpireAfterWriteTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpireAfterWriteTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpireAfterWriteTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpireAfterWriteTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpireAfterWriteTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpireAfterWriteTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpireAfterWriteTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ReferenceTest.java,var firstKey = intern(context.firstKey());,if (intern(context != null ) var firstKey = intern(context.firstKey());
ReferenceTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ReferenceTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
RefreshAfterWriteTest.java,int count = context.firstMiddleLastKeys().size();,if (context != null ) int count = context.firstMiddleLastKeys().size();
RefreshAfterWriteTest.java,var oldValue = cache.getIfPresent(context.firstKey());,if (cache != null ) var oldValue = cache.getIfPresent(context.firstKey());
AsMapTest.java,int count = context.firstMiddleLastKeys().size();,if (context != null ) int count = context.firstMiddleLastKeys().size();
AsMapTest.java,int count = context.firstMiddleLastKeys().size();,if (context != null ) int count = context.firstMiddleLastKeys().size();
AsMapTest.java,int count = context.firstMiddleLastKeys().size();,if (context != null ) int count = context.firstMiddleLastKeys().size();
AsMapTest.java,int count = context.firstMiddleLastKeys().size();,if (context != null ) int count = context.firstMiddleLastKeys().size();
AsMapTest.java,int count = context.firstMiddleLastKeys().size();,if (context != null ) int count = context.firstMiddleLastKeys().size();
AsMapTest.java,int count = context.firstMiddleLastKeys().size();,if (context != null ) int count = context.firstMiddleLastKeys().size();
AsyncAsMapTest.java,int count = context.firstMiddleLastKeys().size();,if (context != null ) int count = context.firstMiddleLastKeys().size();
AsyncAsMapTest.java,int count = context.firstMiddleLastKeys().size();,if (context != null ) int count = context.firstMiddleLastKeys().size();
AsyncAsMapTest.java,int count = context.firstMiddleLastKeys().size();,if (context != null ) int count = context.firstMiddleLastKeys().size();
AsyncAsMapTest.java,int count = context.firstMiddleLastKeys().size();,if (context != null ) int count = context.firstMiddleLastKeys().size();
AsyncAsMapTest.java,int count = context.firstMiddleLastKeys().size();,if (context != null ) int count = context.firstMiddleLastKeys().size();
AsyncAsMapTest.java,int count = context.firstMiddleLastKeys().size();,if (context != null ) int count = context.firstMiddleLastKeys().size();
AsyncAsMapTest.java,int count = context.firstMiddleLastKeys().size();,if (context != null ) int count = context.firstMiddleLastKeys().size();
AsyncAsMapTest.java,var value = key.asFuture();,if (key != null ) var value = key.asFuture();
CacheTest.java,int count = context.firstMiddleLastKeys().size();,if (context != null ) int count = context.firstMiddleLastKeys().size();
CacheTest.java,int count = context.firstMiddleLastKeys().size();,if (context != null ) int count = context.firstMiddleLastKeys().size();
ExpirationTest.java,Int key = context.firstKey();,if (context != null ) Int key = context.firstKey();
ExpirationTest.java,Int value = context.absentValue();,if (context != null ) Int value = context.absentValue();
ExpirationTest.java,Int key = context.firstKey();,if (context != null ) Int key = context.firstKey();
ExpirationTest.java,Int value = context.absentValue();,if (context != null ) Int value = context.absentValue();
BoundedLocalCache.java,"int initialCapacity = Math.min(limit, cache.size());","if (cache != null ) int initialCapacity = Math.min(limit, cache.size());"
BoundedLocalCache.java,"int initialCapacity = Math.min(limit, cache.size());","if (cache != null ) int initialCapacity = Math.min(limit, cache.size());"
ReferenceTest.java,Int key = context.absentKey();,if (context != null ) Int key = context.absentKey();
ReferenceTest.java,Int key = context.absentKey();,if (context != null ) Int key = context.absentKey();
ReferenceTest.java,Int key = context.absentKey();,if (context != null ) Int key = context.absentKey();
ReferenceTest.java,Int key = context.absentKey();,if (context != null ) Int key = context.absentKey();
JSR166TestCase.java,SecurityManager sm = System.getSecurityManager();,if (System != null ) SecurityManager sm = System.getSecurityManager();
BoundedLocalCache.java,remainingNanos = end - System.nanoTime();,if (System != null ) remainingNanos = end - System.nanoTime();
ConcurrentHashMap8Test.java,Set set = map.keySet();,if (map != null ) Set set = map.keySet();
ConcurrentHashMap8Test.java,Spliterator<Integer> sp = set.spliterator();,if (set != null ) Spliterator<Integer> sp = set.spliterator();
ConcurrentHashMap8Test.java,Iterator it = full.iterator();,if (full != null ) Iterator it = full.iterator();
ConcurrentHashMap8Test.java,Object[] a = set().toArray();,if (set() != null ) Object[] a = set().toArray();
ConcurrentHashMapTest.java,"r = compare(size(), other.size());","if (other != null ) r = compare(size(), other.size());"
ConcurrentHashMapTest.java,Set s = map.keySet();,if (map != null ) Set s = map.keySet();
ConcurrentHashMapTest.java,Set s = map.keySet();,if (map != null ) Set s = map.keySet();
ConcurrentHashMapTest.java,Collection v = map.values();,if (map != null ) Collection v = map.values();
ConcurrentHashMapTest.java,Set s = map.entrySet();,if (map != null ) Set s = map.entrySet();
ConcurrentHashMapTest.java,Collection s = map.values();,if (map != null ) Collection s = map.values();
ConcurrentHashMapTest.java,Set s = map.entrySet();,if (map != null ) Set s = map.entrySet();
ConcurrentHashMapTest.java,Map.Entry e = (Map.Entry) it.next();,if (it != null ) Map.Entry e = (Map.Entry) it.next();
JSR166TestCase.java,long startTime = System.nanoTime();,if (System != null ) long startTime = System.nanoTime();
JSR166TestCase.java,long startTime = System.nanoTime();,if (System != null ) long startTime = System.nanoTime();
JSR166TestCase.java,Thread.State s = thread.getState();,if (thread != null ) Thread.State s = thread.getState();
BoundedLocalCache.java,proxy.refreshAfterWriteNanos = cache.refreshAfterWriteNanos();,if (cache != null ) proxy.refreshAfterWriteNanos = cache.refreshAfterWriteNanos();
BoundedLocalCache.java,proxy.refreshAfterWriteNanos = cache.refreshAfterWriteNanos();,if (cache != null ) proxy.refreshAfterWriteNanos = cache.refreshAfterWriteNanos();
BoundedLocalCache.java,proxy.refreshAfterWriteNanos = cache.refreshAfterWriteNanos();,if (cache != null ) proxy.refreshAfterWriteNanos = cache.refreshAfterWriteNanos();
BoundedLocalCache.java,this.executor = requireNonNull(builder.getExecutor());,if (requireNonNull(builder != null ) this.executor = requireNonNull(builder.getExecutor());
LocalAsyncCache.java,V value = Async.getIfReady(entry.getValue());,if (Async != null ) V value = Async.getIfReady(entry.getValue());
LocalAsyncCache.java,K key = cursor.getKey();,if (cursor != null ) K key = cursor.getKey();
AsMapTest.java,var toString = map.toString();,if (map != null ) var toString = map.toString();
AsyncAsMapTest.java,String toString = cache.asMap().toString();,if (cache != null ) String toString = cache.asMap().toString();
ReferenceTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ReferenceTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ReferenceTest.java,long size = cache.estimatedSize();,if (cache != null ) long size = cache.estimatedSize();
TimerWheelTest.java,var iterator = factory.get();,if (factory != null ) var iterator = factory.get();
TimerWheelTest.java,iterator = factory.get();,if (factory != null ) iterator = factory.get();
BoundedLocalCache.java,K key = node.getKey();,if (node != null ) K key = node.getKey();
BoundedLocalCache.java,K key = node.getKey();,if (node != null ) K key = node.getKey();
BoundedLocalCache.java,V value = transformer.apply(node.getValue());,if (transformer != null ) V value = transformer.apply(node.getValue());
BoundedLocalCache.java,this.now = cache.expirationTicker().read();,if (cache != null ) this.now = cache.expirationTicker().read();
BoundedLocalCache.java,isWeighted = builder.isWeighted();,if (builder != null ) isWeighted = builder.isWeighted();
TimerWheel.java,K key = node.getKey();,if (node != null ) K key = node.getKey();
TimerWheel.java,V value = transformer.apply(node.getValue());,if (transformer != null ) V value = transformer.apply(node.getValue());
EmptyCachesTest.java,Collection<Object> values = cache.asMap().keySet();,if (cache != null ) Collection<Object> values = cache.asMap().keySet();
LocalLoadingCacheTest.java,Set<Object> actualValues = ImmutableSet.copyOf(map.values());,if (ImmutableSet != null ) Set<Object> actualValues = ImmutableSet.copyOf(map.values());
LocalCacheFactoryGenerator.java,parentFeatures = ImmutableSet.of();,if (ImmutableSet != null ) parentFeatures = ImmutableSet.of();
NodeFactoryGenerator.java,parentFeatures = ImmutableSet.of();,if (ImmutableSet != null ) parentFeatures = ImmutableSet.of();
ElasticSearchPolicy.java,cache = builder.build();,if (builder != null ) cache = builder.build();
ElasticSearchPolicy.java,AccessEvent value = cache.get(event.key());,if (cache != null ) AccessEvent value = cache.get(event.key());
ElasticSearchPolicy.java,CacheStats stats = cache.stats();,if (cache != null ) CacheStats stats = cache.stats();
Synthetic.java,UniformSettings uniform = settings.synthetic().uniform();,if (settings != null ) UniformSettings uniform = settings.synthetic().uniform();
BoundedLocalCache.java,Runnable task = writeBuffer().poll();,if (writeBuffer() != null ) Runnable task = writeBuffer().poll();
Stresser.java,pendingWrites = local.writeBuffer().size();,if (local != null ) pendingWrites = local.writeBuffer().size();
Simulator.java,stopwatch = Stopwatch.createStarted();,if (Stopwatch != null ) stopwatch = Stopwatch.createStarted();
PolicyActor.java,long priorHits = policy.stats().hitCount();,if (policy != null ) long priorHits = policy.stats().hitCount();
PolicyActor.java,long priorMisses = policy.stats().missCount();,if (policy != null ) long priorMisses = policy.stats().missCount();
CoalescingBulkloader.java,private ScheduledExecutorService timer = Executors.newSingleThreadScheduledExecutor();,if (Executors != null ) private ScheduledExecutorService timer = Executors.newSingleThreadScheduledExecutor();
CoalescingBulkloader.java,waitingKey.waitingSince = System.currentTimeMillis();,if (System != null ) waitingKey.waitingSince = System.currentTimeMillis();
CoalescingBulkloader.java,final WaitingKey waitingKey = waitingKeys.poll();,if (waitingKeys != null ) final WaitingKey waitingKey = waitingKeys.poll();
CoalescingBulkloader.java,final WaitingKey nextWaitingKey = waitingKeys.peek();,if (waitingKeys != null ) final WaitingKey nextWaitingKey = waitingKeys.peek();
BoundedLocalCacheTest.java,var lookupKey = localCache.nodeFactory.newLookupKey(oldEntry.getKey());,if (localCache != null ) var lookupKey = localCache.nodeFactory.newLookupKey(oldEntry.getKey());
BoundedLocalCacheTest.java,long protectedSize = localCache.mainProtectedWeightedSize();,if (localCache != null ) long protectedSize = localCache.mainProtectedWeightedSize();
BoundedLocalCacheTest.java,long protectedMaximum = localCache.mainProtectedMaximum();,if (localCache != null ) long protectedMaximum = localCache.mainProtectedMaximum();
BoundedLocalCacheTest.java,long windowSize = localCache.windowWeightedSize();,if (localCache != null ) long windowSize = localCache.windowWeightedSize();
BoundedLocalCacheTest.java,long windowMaximum = localCache.windowMaximum();,if (localCache != null ) long windowMaximum = localCache.windowMaximum();
BoundedLocalCacheTest.java,long protectedSize = localCache.mainProtectedWeightedSize();,if (localCache != null ) long protectedSize = localCache.mainProtectedWeightedSize();
BoundedLocalCacheTest.java,long protectedMaximum = localCache.mainProtectedMaximum();,if (localCache != null ) long protectedMaximum = localCache.mainProtectedMaximum();
BoundedLocalCacheTest.java,long windowSize = localCache.windowWeightedSize();,if (localCache != null ) long windowSize = localCache.windowWeightedSize();
BoundedLocalCacheTest.java,long windowMaximum = localCache.windowMaximum();,if (localCache != null ) long windowMaximum = localCache.windowMaximum();
CacheProvider.java,Options options = Options.fromSystemProperties();,if (Options != null ) Options options = Options.fromSystemProperties();
CacheProvider.java,Parameter[] parameters = testMethod.getParameters();,if (testMethod != null ) Parameter[] parameters = testMethod.getParameters();
CacheProvider.java,params[i] = context.cache();,if (context != null ) params[i] = context.cache();
CacheProvider.java,params[i] = context.cache().asMap();,if (context != null ) params[i] = context.cache().asMap();
CacheProvider.java,"params[i] = expirationPolicy(parameters[i], context.cache());","if (context != null ) params[i] = expirationPolicy(parameters[i], context.cache());"
CacheProvider.java,"params[i] = refreshPolicy(parameters[i], context.cache());","if (context != null ) params[i] = refreshPolicy(parameters[i], context.cache());"
LocalAsyncCache.java,V value = AsMapView.this.get(entry.getKey());,if (AsMapView != null ) V value = AsMapView.this.get(entry.getKey());
UnboundedLocalCache.java,V value = cache.get(entry.getKey());,if (cache != null ) V value = cache.get(entry.getKey());
JSR166TestCase.java,SecurityManager sm = System.getSecurityManager();,if (System != null ) SecurityManager sm = System.getSecurityManager();
JSR166TestCase.java,SecurityManager sm = System.getSecurityManager();,if (System != null ) SecurityManager sm = System.getSecurityManager();
JSR166TestCase.java,Policy savedPolicy = Policy.getPolicy();,if (Policy != null ) Policy savedPolicy = Policy.getPolicy();
JSR166TestCase.java,Policy savedPolicy = Policy.getPolicy();,if (Policy != null ) Policy savedPolicy = Policy.getPolicy();
BoundedLocalCache.java,var iterator = iteratorSupplier.get();,if (iteratorSupplier != null ) var iterator = iteratorSupplier.get();
Solr10141Test.java,Random r = new Random(rnd.nextLong());,if (Random(rnd != null ) Random r = new Random(rnd.nextLong());
Solr10141Test.java,Random r = new Random(rnd.nextLong());,if (Random(rnd != null ) Random r = new Random(rnd.nextLong());
CacheValidationListener.java,TestRunner runner = (TestRunner) testResult.getTestContext();,if (testResult != null ) TestRunner runner = (TestRunner) testResult.getTestContext();
CacheValidationListener.java,TrackingExecutor executor = (TrackingExecutor) context.executor();,if (context != null ) TrackingExecutor executor = (TrackingExecutor) context.executor();
CacheValidationListener.java,TrackingExecutor executor = (TrackingExecutor) context.executor();,if (context != null ) TrackingExecutor executor = (TrackingExecutor) context.executor();
MapTestFactory.java,var name = context.toString();,if (context != null ) var name = context.toString();
CacheProvider.java,CacheContext context = entry.getKey();,if (entry != null ) CacheContext context = entry.getKey();
CacheProvider.java,params[i] = cache.asMap();,if (cache != null ) params[i] = cache.asMap();
AsMapTest.java,int count = context.firstMiddleLastKeys().size();,if (context != null ) int count = context.firstMiddleLastKeys().size();
AsMapTest.java,int count = context.firstMiddleLastKeys().size();,if (context != null ) int count = context.firstMiddleLastKeys().size();
AsMapTest.java,int count = context.firstMiddleLastKeys().size();,if (context != null ) int count = context.firstMiddleLastKeys().size();
AsMapTest.java,int length = context.original().size();,if (context != null ) int length = context.original().size();
AsMapTest.java,var array = map.keySet().toArray();,if (map != null ) var array = map.keySet().toArray();
AsMapTest.java,int count = context.original().size();,if (context != null ) int count = context.original().size();
AsMapTest.java,int length = context.original().size();,if (context != null ) int length = context.original().size();
AsMapTest.java,var array = map.values().toArray();,if (map != null ) var array = map.values().toArray();
AsMapTest.java,int count = context.original().size();,if (context != null ) int count = context.original().size();
AsMapTest.java,int count = context.original().size();,if (context != null ) int count = context.original().size();
AsMapTest.java,int length = context.original().size();,if (context != null ) int length = context.original().size();
AsMapTest.java,var array = map.entrySet().toArray();,if (map != null ) var array = map.entrySet().toArray();
AsMapTest.java,int count = context.original().size();,if (context != null ) int count = context.original().size();
AsMapTest.java,int count = context.original().size();,if (context != null ) int count = context.original().size();
AsyncAsMapTest.java,int length = context.original().size();,if (context != null ) int length = context.original().size();
AsyncAsMapTest.java,int count = context.original().size();,if (context != null ) int count = context.original().size();
AsyncAsMapTest.java,int length = context.original().size();,if (context != null ) int length = context.original().size();
AsyncAsMapTest.java,int count = context.original().size();,if (context != null ) int count = context.original().size();
AsyncAsMapTest.java,int count = context.original().size();,if (context != null ) int count = context.original().size();
AsyncAsMapTest.java,int length = context.original().size();,if (context != null ) int length = context.original().size();
AsyncAsMapTest.java,int count = context.original().size();,if (context != null ) int count = context.original().size();
AsyncAsMapTest.java,int count = context.original().size();,if (context != null ) int count = context.original().size();
AsyncCacheTest.java,int misses = context.absentKeys().size();,if (context != null ) int misses = context.absentKeys().size();
AsyncCacheTest.java,int misses = context.absentKeys().size();,if (context != null ) int misses = context.absentKeys().size();
AsyncCacheTest.java,int misses = context.absentKeys().size();,if (context != null ) int misses = context.absentKeys().size();
AsyncLoadingCacheTest.java,CompletableFuture<Int> future = cache.get(context.absentKey());,if (cache != null ) CompletableFuture<Int> future = cache.get(context.absentKey());
AsyncLoadingCacheTest.java,var result = cache.getAll(List.of());,if (cache != null ) var result = cache.getAll(List.of());
AsyncLoadingCacheTest.java,int misses = context.absentKeys().size();,if (context != null ) int misses = context.absentKeys().size();
AsyncLoadingCacheTest.java,int misses = context.absentKeys().size();,if (context != null ) int misses = context.absentKeys().size();
CacheTest.java,var result = cache.getAllPresent(List.of());,if (cache != null ) var result = cache.getAllPresent(List.of());
IsValidBoundedLocalCache.java,adjustment = cache.adjustment();,if (cache != null ) adjustment = cache.adjustment();
IsValidBoundedLocalCache.java,remainingNanos = end - System.nanoTime();,if (System != null ) remainingNanos = end - System.nanoTime();
IsValidBoundedLocalCache.java,var next = node.getNextInVariableOrder();,if (node != null ) var next = node.getNextInVariableOrder();
IsValidBoundedLocalCache.java,var prev = node.getPreviousInVariableOrder();,if (node != null ) var prev = node.getPreviousInVariableOrder();
IsValidBoundedLocalCache.java,totalSize += cell.getValue().size();,if (cell != null ) totalSize += cell.getValue().size();
IsValidBoundedLocalCache.java,weightedSize += node.getWeight();,if (node != null ) weightedSize += node.getWeight();
IsValidBoundedLocalCache.java,V value = node.getValue();,if (node != null ) V value = node.getValue();
IsValidBoundedLocalCache.java,K key = node.getKey();,if (node != null ) K key = node.getKey();
IsValidBoundedLocalCache.java,boolean success = future.isDone() && !future.isCompletedExceptionally();,if (!future != null ) boolean success = future.isDone() && !future.isCompletedExceptionally();
IsValidLinkedDeque.java,Set<E> seen = Sets.newIdentityHashSet();,if (Sets != null ) Set<E> seen = Sets.newIdentityHashSet();
IsValidLinkedDeque.java,E element = iterator.next();,if (iterator != null ) E element = iterator.next();
IsValidLinkedDeque.java,E first = deque.peekFirst();,if (deque != null ) E first = deque.peekFirst();
IsValidLinkedDeque.java,E last = deque.peekLast();,if (deque != null ) E last = deque.peekLast();
IsValidUnboundedLocalCache.java,boolean success = future.isDone() && !future.isCompletedExceptionally();,if (!future != null ) boolean success = future.isDone() && !future.isCompletedExceptionally();
LoadingCacheTest.java,var result = cache.getAll(List.of());,if (cache != null ) var result = cache.getAll(List.of());
CacheGenerator.java,"Set<Stats> statistics = filterTypes(options.stats(), cacheSpec.stats());","if (cacheSpec != null ) Set<Stats> statistics = filterTypes(options.stats(), cacheSpec.stats());"
CacheGenerator.java,"Set<ReferenceType> keys = filterTypes(options.keys(), cacheSpec.keys());","if (cacheSpec != null ) Set<ReferenceType> keys = filterTypes(options.keys(), cacheSpec.keys());"
CacheGenerator.java,"Set<ReferenceType> values = filterTypes(options.values(), cacheSpec.values());","if (cacheSpec != null ) Set<ReferenceType> values = filterTypes(options.values(), cacheSpec.values());"
CacheGenerator.java,"Set<Compute> computations = filterTypes(options.compute(), cacheSpec.compute());","if (cacheSpec != null ) Set<Compute> computations = filterTypes(options.compute(), cacheSpec.compute());"
StatsVerifier.java,TrackingExecutor executor = (TrackingExecutor) context.executor();,if (context != null ) TrackingExecutor executor = (TrackingExecutor) context.executor();
AbstractJCacheTest.java,CachingProvider provider = Caching.getCachingProvider(CaffeineCachingProvider.class.getName());,if (Caching != null ) CachingProvider provider = Caching.getCachingProvider(CaffeineCachingProvider.class.getName());
JCacheProfiler.java,CachingProvider provider = Caching.getCachingProvider(CaffeineCachingProvider.class.getName());,if (Caching != null ) CachingProvider provider = Caching.getCachingProvider(CaffeineCachingProvider.class.getName());
JCacheProfiler.java,Stopwatch stopwatch = Stopwatch.createStarted();,if (Stopwatch != null ) Stopwatch stopwatch = Stopwatch.createStarted();
EventDispatcherTest.java,dispatcher = new EventDispatcher<>(MoreExecutors.directExecutor());,if (EventDispatcher<>(MoreExecutors != null ) dispatcher = new EventDispatcher<>(MoreExecutors.directExecutor());
Issue412Test.java,listener = RemovalListeners.consuming();,if (RemovalListeners != null ) listener = RemovalListeners.consuming();
Rewriter.java,Stopwatch stopwatch = Stopwatch.createStarted();,if (Stopwatch != null ) Stopwatch stopwatch = Stopwatch.createStarted();
Rewriter.java,Stream<AccessEvent> events = inputFormat.readFiles(inputFiles).events();,if (inputFormat != null ) Stream<AccessEvent> events = inputFormat.readFiles(inputFiles).events();
AsMapTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
AsMapTest.java,Integer newValue = context.absentValue();,if (context != null ) Integer newValue = context.absentValue();
AsMapTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
AsMapTest.java,Integer newValue = context.absentValue();,if (context != null ) Integer newValue = context.absentValue();
AsMapTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
AsMapTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
AsMapTest.java,Integer newValue = context.absentValue();,if (context != null ) Integer newValue = context.absentValue();
AsMapTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
AsMapTest.java,Integer newValue = context.absentValue();,if (context != null ) Integer newValue = context.absentValue();
AsMapTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
AsMapTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
AsMapTest.java,Integer newValue = context.absentValue();,if (context != null ) Integer newValue = context.absentValue();
AsMapTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
AsMapTest.java,Integer newValue = context.absentValue();,if (context != null ) Integer newValue = context.absentValue();
AsMapTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
AsMapTest.java,Integer newValue = context.absentValue();,if (context != null ) Integer newValue = context.absentValue();
AsMapTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
AsMapTest.java,Integer newValue = context.absentValue();,if (context != null ) Integer newValue = context.absentValue();
AsMapTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
AsMapTest.java,Integer newValue = context.absentValue();,if (context != null ) Integer newValue = context.absentValue();
AsMapTest.java,String toString = map.toString();,if (map != null ) String toString = map.toString();
AsMapTest.java,Object[] array = map.keySet().toArray();,if (map != null ) Object[] array = map.keySet().toArray();
AsMapTest.java,Set<Integer> keys = map.keySet();,if (map != null ) Set<Integer> keys = map.keySet();
AsMapTest.java,Spliterator<Integer> spliterator = map.keySet().spliterator();,if (map != null ) Spliterator<Integer> spliterator = map.keySet().spliterator();
AsMapTest.java,Spliterator<Integer> spliterator = map.keySet().spliterator();,if (map != null ) Spliterator<Integer> spliterator = map.keySet().spliterator();
AsMapTest.java,Spliterator<Integer> spliterator = map.keySet().spliterator();,if (map != null ) Spliterator<Integer> spliterator = map.keySet().spliterator();
AsMapTest.java,Object[] array = map.values().toArray();,if (map != null ) Object[] array = map.values().toArray();
AsMapTest.java,Collection<Integer> values = map.values();,if (map != null ) Collection<Integer> values = map.values();
AsMapTest.java,Spliterator<Integer> spliterator = map.values().spliterator();,if (map != null ) Spliterator<Integer> spliterator = map.values().spliterator();
AsMapTest.java,Spliterator<Integer> spliterator = map.values().spliterator();,if (map != null ) Spliterator<Integer> spliterator = map.values().spliterator();
AsMapTest.java,Spliterator<Integer> spliterator = map.values().spliterator();,if (map != null ) Spliterator<Integer> spliterator = map.values().spliterator();
AsMapTest.java,Object[] array = map.entrySet().toArray();,if (map != null ) Object[] array = map.entrySet().toArray();
AsyncAsMapTest.java,CompletableFuture<Integer> value = CompletableFuture.completedFuture(context.absentValue());,if (CompletableFuture != null ) CompletableFuture<Integer> value = CompletableFuture.completedFuture(context.absentValue());
AsyncAsMapTest.java,CompletableFuture<Integer> value = CompletableFuture.completedFuture(context.absentValue());,if (CompletableFuture != null ) CompletableFuture<Integer> value = CompletableFuture.completedFuture(context.absentValue());
AsyncAsMapTest.java,CompletableFuture<Integer> value = CompletableFuture.completedFuture(context.absentValue());,if (CompletableFuture != null ) CompletableFuture<Integer> value = CompletableFuture.completedFuture(context.absentValue());
AsyncAsMapTest.java,CompletableFuture<Integer> value = CompletableFuture.completedFuture(context.absentValue());,if (CompletableFuture != null ) CompletableFuture<Integer> value = CompletableFuture.completedFuture(context.absentValue());
AsyncAsMapTest.java,CompletableFuture<Integer> value = CompletableFuture.completedFuture(context.absentValue());,if (CompletableFuture != null ) CompletableFuture<Integer> value = CompletableFuture.completedFuture(context.absentValue());
AsyncAsMapTest.java,CompletableFuture<Integer> value = CompletableFuture.completedFuture(context.absentValue());,if (CompletableFuture != null ) CompletableFuture<Integer> value = CompletableFuture.completedFuture(context.absentValue());
AsyncAsMapTest.java,CompletableFuture<Integer> value = CompletableFuture.completedFuture(context.absentValue());,if (CompletableFuture != null ) CompletableFuture<Integer> value = CompletableFuture.completedFuture(context.absentValue());
AsyncAsMapTest.java,CompletableFuture<Integer> value = CompletableFuture.completedFuture(context.absentValue());,if (CompletableFuture != null ) CompletableFuture<Integer> value = CompletableFuture.completedFuture(context.absentValue());
AsyncAsMapTest.java,CompletableFuture<Integer> value = CompletableFuture.completedFuture(context.absentValue());,if (CompletableFuture != null ) CompletableFuture<Integer> value = CompletableFuture.completedFuture(context.absentValue());
AsyncAsMapTest.java,CompletableFuture<Integer> value = CompletableFuture.completedFuture(context.absentValue());,if (CompletableFuture != null ) CompletableFuture<Integer> value = CompletableFuture.completedFuture(context.absentValue());
AsyncAsMapTest.java,var future = CompletableFuture.completedFuture(-context.absentKey());,if (CompletableFuture != null ) var future = CompletableFuture.completedFuture(-context.absentKey());
AsyncAsMapTest.java,CompletableFuture<Integer> value = CompletableFuture.completedFuture(context.absentValue());,if (CompletableFuture != null ) CompletableFuture<Integer> value = CompletableFuture.completedFuture(context.absentValue());
AsyncAsMapTest.java,CompletableFuture<Integer> absent = CompletableFuture.completedFuture(context.absentValue());,if (CompletableFuture != null ) CompletableFuture<Integer> absent = CompletableFuture.completedFuture(context.absentValue());
AsyncAsMapTest.java,Set<Integer> keys = cache.asMap().keySet();,if (cache != null ) Set<Integer> keys = cache.asMap().keySet();
AsyncCacheTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
AsyncCacheTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
AsyncCacheTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
AsyncCacheTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
AsyncCacheTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
AsyncCacheTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
AsyncCacheTest.java,List<Integer> keys = new ArrayList<>(context.absentKeys());,if (ArrayList<>(context != null ) List<Integer> keys = new ArrayList<>(context.absentKeys());
AsyncCacheTest.java,List<Integer> keys = new ArrayList<>(context.absentKeys());,if (ArrayList<>(context != null ) List<Integer> keys = new ArrayList<>(context.absentKeys());
AsyncCacheTest.java,CompletableFuture<Integer> value = CompletableFuture.completedFuture(context.absentValue());,if (CompletableFuture != null ) CompletableFuture<Integer> value = CompletableFuture.completedFuture(context.absentValue());
AsyncCacheTest.java,CompletableFuture<Integer> value = CompletableFuture.completedFuture(context.absentValue());,if (CompletableFuture != null ) CompletableFuture<Integer> value = CompletableFuture.completedFuture(context.absentValue());
AsyncLoadingCacheTest.java,CompletableFuture<Integer> future = cache.get(context.absentKey());,if (cache != null ) CompletableFuture<Integer> future = cache.get(context.absentKey());
AsyncLoadingCacheTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
AsyncLoadingCacheTest.java,List<Integer> keys = new ArrayList<>(context.absentKeys());,if (ArrayList<>(context != null ) List<Integer> keys = new ArrayList<>(context.absentKeys());
AsyncLoadingCacheTest.java,CompletableFuture<Integer> value = CompletableFuture.completedFuture(context.absentValue());,if (CompletableFuture != null ) CompletableFuture<Integer> value = CompletableFuture.completedFuture(context.absentValue());
AsyncLoadingCacheTest.java,CompletableFuture<Integer> get = cache.get(context.absentKey());,if (cache != null ) CompletableFuture<Integer> get = cache.get(context.absentKey());
BoundedLocalCacheTest.java,Object lookupKey = localCache.nodeFactory.newLookupKey(oldEntry.getKey());,if (localCache != null ) Object lookupKey = localCache.nodeFactory.newLookupKey(oldEntry.getKey());
BoundedLocalCacheTest.java,Thread evictor = Thread.currentThread();,if (Thread != null ) Thread evictor = Thread.currentThread();
BoundedLocalCacheTest.java,Integer value = first.getValue();,if (first != null ) Integer value = first.getValue();
CacheTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
CacheTest.java,Integer value = context.absentValue();,if (context != null ) Integer value = context.absentValue();
CacheTest.java,List<Integer> keys = new ArrayList<>(context.absentKeys());,if (ArrayList<>(context != null ) List<Integer> keys = new ArrayList<>(context.absentKeys());
CacheTest.java,Integer value = context.absentValue();,if (context != null ) Integer value = context.absentValue();
CacheTest.java,int count = context.firstMiddleLastKeys().size();,if (context != null ) int count = context.firstMiddleLastKeys().size();
ExpirationTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
ExpirationTest.java,Integer value = context.absentValue();,if (context != null ) Integer value = context.absentValue();
ExpirationTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ExpirationTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
ExpirationTest.java,Integer value = context.absentValue();,if (context != null ) Integer value = context.absentValue();
ExpirationTest.java,Set<Integer> keys = context.firstMiddleLastKeys();,if (context != null ) Set<Integer> keys = context.firstMiddleLastKeys();
ExpirationTest.java,CompletableFuture<Integer> future = CompletableFuture.completedFuture(context.absentValue());,if (CompletableFuture != null ) CompletableFuture<Integer> future = CompletableFuture.completedFuture(context.absentValue());
ExpirationTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ExpirationTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ExpirationTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ExpirationTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ExpirationTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
ExpirationTest.java,Integer value = context.absentValue();,if (context != null ) Integer value = context.absentValue();
ExpirationTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ExpirationTest.java,Integer value = context.absentValue();,if (context != null ) Integer value = context.absentValue();
ExpirationTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ExpirationTest.java,Integer value = context.absentValue();,if (context != null ) Integer value = context.absentValue();
ExpirationTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ExpirationTest.java,Integer value = context.absentValue();,if (context != null ) Integer value = context.absentValue();
ExpirationTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ExpirationTest.java,Integer value = context.absentValue();,if (context != null ) Integer value = context.absentValue();
ExpirationTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ExpirationTest.java,Integer value = context.absentValue();,if (context != null ) Integer value = context.absentValue();
ExpirationTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ExpirationTest.java,Integer value = context.absentValue();,if (context != null ) Integer value = context.absentValue();
ExpireAfterVarTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
ExpireAfterVarTest.java,CompletableFuture<Integer> future = CompletableFuture.completedFuture(context.absentValue());,if (CompletableFuture != null ) CompletableFuture<Integer> future = CompletableFuture.completedFuture(context.absentValue());
ExpireAfterVarTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ExpireAfterVarTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
ExpireAfterVarTest.java,Integer value = context.absentValue();,if (context != null ) Integer value = context.absentValue();
ExpireAfterVarTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ExpireAfterVarTest.java,Integer value = context.absentValue();,if (context != null ) Integer value = context.absentValue();
ExpireAfterVarTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
ExpireAfterVarTest.java,Integer value = context.absentValue();,if (context != null ) Integer value = context.absentValue();
ExpireAfterVarTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ExpireAfterVarTest.java,Integer value = context.absentValue();,if (context != null ) Integer value = context.absentValue();
LinkedDequeTest.java,LinkedValue first = deque.peek();,if (deque != null ) LinkedValue first = deque.peek();
LinkedDequeTest.java,LinkedValue first = deque.peekFirst();,if (deque != null ) LinkedValue first = deque.peekFirst();
LinkedDequeTest.java,LinkedValue last = deque.peekLast();,if (deque != null ) LinkedValue last = deque.peekLast();
LinkedDequeTest.java,LinkedValue first = deque.peekFirst();,if (deque != null ) LinkedValue first = deque.peekFirst();
LinkedDequeTest.java,LinkedValue value = deque.remove();,if (deque != null ) LinkedValue value = deque.remove();
LinkedDequeTest.java,LinkedValue first = deque.peekFirst();,if (deque != null ) LinkedValue first = deque.peekFirst();
LinkedDequeTest.java,LinkedValue value = deque.peek();,if (deque != null ) LinkedValue value = deque.peek();
LinkedDequeTest.java,LinkedValue first = deque.peekFirst();,if (deque != null ) LinkedValue first = deque.peekFirst();
LinkedDequeTest.java,LinkedValue value = deque.removeFirst();,if (deque != null ) LinkedValue value = deque.removeFirst();
LinkedDequeTest.java,LinkedValue last = deque.peekLast();,if (deque != null ) LinkedValue last = deque.peekLast();
LinkedDequeTest.java,LinkedValue value = deque.removeLast();,if (deque != null ) LinkedValue value = deque.removeLast();
LinkedDequeTest.java,LinkedValue first = deque.peekFirst();,if (deque != null ) LinkedValue first = deque.peekFirst();
LinkedDequeTest.java,LinkedValue value = deque.peek();,if (deque != null ) LinkedValue value = deque.peek();
LinkedDequeTest.java,LinkedValue first = deque.peekFirst();,if (deque != null ) LinkedValue first = deque.peekFirst();
LinkedDequeTest.java,LinkedValue value = deque.peek();,if (deque != null ) LinkedValue value = deque.peek();
LinkedDequeTest.java,LinkedValue first = deque.peekFirst();,if (deque != null ) LinkedValue first = deque.peekFirst();
LinkedDequeTest.java,LinkedValue first = deque.peekFirst();,if (deque != null ) LinkedValue first = deque.peekFirst();
LinkedDequeTest.java,LinkedValue value = deque.pop();,if (deque != null ) LinkedValue value = deque.pop();
LinkedDequeTest.java,PeekingIterator<LinkedValue> iterator = deque.iterator();,if (deque != null ) PeekingIterator<LinkedValue> iterator = deque.iterator();
LinkedDequeTest.java,LinkedValue value = iterator.next();,if (iterator != null ) LinkedValue value = iterator.next();
LinkedDequeTest.java,PeekingIterator<LinkedValue> iterator = deque.iterator();,if (deque != null ) PeekingIterator<LinkedValue> iterator = deque.iterator();
LinkedDequeTest.java,PeekingIterator<LinkedValue> iterator = deque.descendingIterator();,if (deque != null ) PeekingIterator<LinkedValue> iterator = deque.descendingIterator();
LinkedDequeTest.java,LinkedValue value = iterator.next();,if (iterator != null ) LinkedValue value = iterator.next();
LinkedDequeTest.java,PeekingIterator<LinkedValue> empty = new AccessOrderDeque<LinkedValue>().iterator();,if (AccessOrderDeque<LinkedValue>() != null ) PeekingIterator<LinkedValue> empty = new AccessOrderDeque<LinkedValue>().iterator();
LoadingCacheTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
LoadingCacheTest.java,List<Integer> keys = new ArrayList<>(context.absentKeys());,if (ArrayList<>(context != null ) List<Integer> keys = new ArrayList<>(context.absentKeys());
LoadingCacheTest.java,Integer value = context.absentValue();,if (context != null ) Integer value = context.absentValue();
LoadingCacheTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
LoadingCacheTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
LoadingCacheTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
LoadingCacheTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
LoadingCacheTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
ReferenceTest.java,Integer key = new Integer(context.firstKey());,if (Integer(context != null ) Integer key = new Integer(context.firstKey());
ReferenceTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ReferenceTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ReferenceTest.java,Set<Integer> keys = context.firstMiddleLastKeys();,if (context != null ) Set<Integer> keys = context.firstMiddleLastKeys();
ReferenceTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ReferenceTest.java,Set<Integer> keys = context.firstMiddleLastKeys();,if (context != null ) Set<Integer> keys = context.firstMiddleLastKeys();
ReferenceTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ReferenceTest.java,Set<Integer> keys = context.firstMiddleLastKeys();,if (context != null ) Set<Integer> keys = context.firstMiddleLastKeys();
ReferenceTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ReferenceTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ReferenceTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
ReferenceTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ReferenceTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ReferenceTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ReferenceTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ReferenceTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ReferenceTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ReferenceTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ReferenceTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ReferenceTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ReferenceTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ReferenceTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ReferenceTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ReferenceTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
ReferenceTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
ReferenceTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
ReferenceTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
ReferenceTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
RefreshAfterWriteTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
RefreshAfterWriteTest.java,Integer originalValue = context.absentValue();,if (context != null ) Integer originalValue = context.absentValue();
RefreshAfterWriteTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
RefreshAfterWriteTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
ConcurrentTestHarness.java,List<T> list = new ArrayList<>(data.length());,if (ArrayList<>(data != null ) List<T> list = new ArrayList<>(data.length());
GuavaCacheFromContext.java,long now = ticker.read();,if (ticker != null ) long now = ticker.read();
GuavaCacheFromContext.java,long now = ticker.read();,if (ticker != null ) long now = ticker.read();
GuavaCacheFromContext.java,long now = ticker.read();,if (ticker != null ) long now = ticker.read();
GuavaCacheFromContext.java,long now = ticker.read();,if (ticker != null ) long now = ticker.read();
CampPolicy.java,this.precision = settings.precision();,if (settings != null ) this.precision = settings.precision();
CampPolicy.java,Node node = data.get(event.key());,if (data != null ) Node node = data.get(event.key());
CampPolicy.java,Sentinel sentinel = priorityQueue.first();,if (priorityQueue != null ) Sentinel sentinel = priorityQueue.first();
GDWheelPolicy.java,this.nW = settings.numberOfWheels();,if (settings != null ) this.nW = settings.numberOfWheels();
GDWheelPolicy.java,this.nQ = settings.numberOfQueues();,if (settings != null ) this.nQ = settings.numberOfQueues();
GDWheelPolicy.java,this.maximumSize = settings.maximumSize();,if (settings != null ) this.maximumSize = settings.maximumSize();
GDWheelPolicy.java,long key = event.key();,if (event != null ) long key = event.key();
GDWheelPolicy.java,currentSize += event.weight();,if (event != null ) currentSize += event.weight();
GDWheelPolicy.java,Node node = data.get(p.key());,if (data != null ) Node node = data.get(p.key());
StripedBuffer.java,reads += buffer.reads();,if (buffer != null ) reads += buffer.reads();
StripedBuffer.java,writes += buffer.writes();,if (buffer != null ) writes += buffer.writes();
UnsafeAccess.java,Constructor<Unsafe> unsafeConstructor = Unsafe.class.getDeclaredConstructor();,if (Unsafe != null ) Constructor<Unsafe> unsafeConstructor = Unsafe.class.getDeclaredConstructor();
UnsafeAccessTest.java,int read = relaxedFields.getRelaxedInt();,if (relaxedFields != null ) int read = relaxedFields.getRelaxedInt();
UnsafeAccessTest.java,long read = relaxedFields.getRelaxedLong();,if (relaxedFields != null ) long read = relaxedFields.getRelaxedLong();
UnsafeAccessTest.java,Object read = relaxedFields.getRelaxedObject();,if (relaxedFields != null ) Object read = relaxedFields.getRelaxedObject();
SlotLookupBenchmark.java,long id = Thread.currentThread().getId();,if (Thread != null ) long id = Thread.currentThread().getId();
SlotLookupBenchmark.java,long id = Thread.currentThread().hashCode();,if (Thread != null ) long id = Thread.currentThread().hashCode();
StripedBuffer.java,h = PROBE.get();,if (PROBE != null ) h = PROBE.get();
StripedBuffer.java,probe = supplier.get();,if (supplier != null ) probe = supplier.get();
BoundedLocalCacheTest.java,int pending = buffer.size();,if (buffer != null ) int pending = buffer.size();
BufferTest.java,int recorded = buffer.recorded();,if (buffer != null ) int recorded = buffer.recorded();
BufferTest.java,int drained = buffer.drained();,if (buffer != null ) int drained = buffer.drained();
BufferTest.java,int recorded = buffer.recorded();,if (buffer != null ) int recorded = buffer.recorded();
BufferTest.java,int drained = buffer.drained();,if (buffer != null ) int drained = buffer.drained();
BufferTest.java,int recorded = buffer.recorded();,if (buffer != null ) int recorded = buffer.recorded();
UnboundedLocalCache.java,proxy.removalListener = cache.removalListener();,if (cache != null ) proxy.removalListener = cache.removalListener();
AsMapTest.java,Integer key = context.middleKey();,if (context != null ) Integer key = context.middleKey();
AsMapTest.java,Iterator<Integer> i = map.keySet().iterator();,if (map != null ) Iterator<Integer> i = map.keySet().iterator();
AsMapTest.java,Iterator<Integer> i = map.values().iterator();,if (map != null ) Iterator<Integer> i = map.values().iterator();
BoundedLocalCacheTest.java,Thread invalidator = Thread.currentThread();,if (Thread != null ) Thread invalidator = Thread.currentThread();
ExpirationTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ExpirationTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ExpirationTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ExpirationTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ExpirationTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ExpirationTest.java,Integer value = context.absentValue();,if (context != null ) Integer value = context.absentValue();
ExpireAfterVarTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpireAfterVarTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ReferenceTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ReferenceTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ReferenceTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ReferenceTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ReferenceTest.java,Set<Integer> keys = context.firstMiddleLastKeys();,if (context != null ) Set<Integer> keys = context.firstMiddleLastKeys();
ReferenceTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ReferenceTest.java,Set<Integer> keys = context.firstMiddleLastKeys();,if (context != null ) Set<Integer> keys = context.firstMiddleLastKeys();
ReferenceTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ReferenceTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ReferenceTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ReferenceTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ReferenceTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ReferenceTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ReferenceTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
CacheContext.java,this.cacheWriter = writer.create();,if (writer != null ) this.cacheWriter = writer.create();
JandexTest.java,Index index = new IndexReader(input).read();,if (IndexReader(input) != null ) Index index = new IndexReader(input).read();
JandexTest.java,Index index = new IndexReader(input).read();,if (IndexReader(input) != null ) Index index = new IndexReader(input).read();
JandexTest.java,Index index = new IndexReader(input).read();,if (IndexReader(input) != null ) Index index = new IndexReader(input).read();
CacheTest.java,int misses = context.absentKeys().size();,if (context != null ) int misses = context.absentKeys().size();
CacheTest.java,hitCount = context.initialSize();,if (context != null ) hitCount = context.initialSize();
CacheTest.java,missCount = absentKeys.size();,if (absentKeys != null ) missCount = absentKeys.size();
BoundedLocalCache.java,var pending = refreshes.get();,if (refreshes != null ) var pending = refreshes.get();
BoundedLocalCache.java,pending = refreshes.get();,if (refreshes != null ) pending = refreshes.get();
BoundedLocalCache.java,var pending = refreshes.get();,if (refreshes != null ) var pending = refreshes.get();
BoundedLocalCache.java,var pending = refreshes.get();,if (refreshes != null ) var pending = refreshes.get();
BoundedLocalCache.java,var pending = refreshes.get();,if (refreshes != null ) var pending = refreshes.get();
BoundedLocalCache.java,var pending = refreshes.get();,if (refreshes != null ) var pending = refreshes.get();
UnboundedLocalCache.java,var pending = refreshes.get();,if (refreshes != null ) var pending = refreshes.get();
UnboundedLocalCache.java,pending = refreshes.get();,if (refreshes != null ) pending = refreshes.get();
UnboundedLocalCache.java,var pending = refreshes.get();,if (refreshes != null ) var pending = refreshes.get();
UnboundedLocalCache.java,var pending = refreshes.get();,if (refreshes != null ) var pending = refreshes.get();
UnboundedLocalCache.java,var pending = refreshes.get();,if (refreshes != null ) var pending = refreshes.get();
RefreshAfterWriteTest.java,int count = reloading.incrementAndGet();,if (reloading != null ) int count = reloading.incrementAndGet();
BoundedLocalCache.java,long oldWriteTime = node.getWriteTime();,if (node != null ) long oldWriteTime = node.getWriteTime();
BoundedLocalCache.java,long startTime = statsTicker().read();,if (statsTicker() != null ) long startTime = statsTicker().read();
LocalAsyncCache.java,Logger logger = Logger.getLogger(LocalAsyncCache.class.getName());,if (Logger != null ) Logger logger = Logger.getLogger(LocalAsyncCache.class.getName());
LocalLoadingCache.java,Logger logger = Logger.getLogger(LocalLoadingCache.class.getName());,if (Logger != null ) Logger logger = Logger.getLogger(LocalLoadingCache.class.getName());
SingleConsumerQueueBenchmark.java,queue = queueType.create();,if (queueType != null ) queue = queueType.create();
SingleConsumerQueue.java,Node<E> next = cursor.getNextRelaxed();,if (cursor != null ) Node<E> next = cursor.getNextRelaxed();
SingleConsumerQueue.java,Node<E> next = first.getNextRelaxed();,if (first != null ) Node<E> next = first.getNextRelaxed();
SingleConsumerQueue.java,Node<E> found = slot.get();,if (slot != null ) Node<E> found = slot.get();
SingleConsumerQueue.java,found = slot.get();,if (slot != null ) found = slot.get();
UnsafeAccess.java,Constructor<Unsafe> unsafeConstructor = Unsafe.class.getDeclaredConstructor();,if (Unsafe != null ) Constructor<Unsafe> unsafeConstructor = Unsafe.class.getDeclaredConstructor();
SingleConsumerQueueTest.java,Integer first = queue.peek();,if (queue != null ) Integer first = queue.peek();
SingleConsumerQueueTest.java,Integer first = queue.peek();,if (queue != null ) Integer first = queue.peek();
SingleConsumerQueueTest.java,Integer value = queue.remove();,if (queue != null ) Integer value = queue.remove();
SingleConsumerQueueTest.java,Integer first = queue.peek();,if (queue != null ) Integer first = queue.peek();
SingleConsumerQueueTest.java,Integer value = queue.peek();,if (queue != null ) Integer value = queue.peek();
SingleConsumerQueueTest.java,Integer first = queue.peek();,if (queue != null ) Integer first = queue.peek();
SingleConsumerQueueTest.java,Integer first = queue.peek();,if (queue != null ) Integer first = queue.peek();
SingleConsumerQueueTest.java,Iterator<Integer> it = queue.iterator();,if (queue != null ) Iterator<Integer> it = queue.iterator();
SingleConsumerQueueTest.java,Iterator<Integer> it = queue.iterator();,if (queue != null ) Iterator<Integer> it = queue.iterator();
SingleConsumerQueueTest.java,Object[] actual = queue.toArray();,if (queue != null ) Object[] actual = queue.toArray();
SingleConsumerQueueTest.java,Object[] params = testResult.getParameters();,if (testResult != null ) Object[] params = testResult.getParameters();
UnsafeAccessTest.java,int read = relaxedFields.getRelaxedInt();,if (relaxedFields != null ) int read = relaxedFields.getRelaxedInt();
UnsafeAccessTest.java,long read = relaxedFields.getRelaxedLong();,if (relaxedFields != null ) long read = relaxedFields.getRelaxedLong();
UnsafeAccessTest.java,Object read = relaxedFields.getRelaxedObject();,if (relaxedFields != null ) Object read = relaxedFields.getRelaxedObject();
BoundedLocalCache.java,candidate = candidate.getPreviousInAccessOrder();,if (candidate != null ) candidate = candidate.getPreviousInAccessOrder();
BoundedLocalCache.java,candidate = candidate.getPreviousInAccessOrder();,if (candidate != null ) candidate = candidate.getPreviousInAccessOrder();
BoundedLocalCache.java,candidate = candidate.getPreviousInAccessOrder();,if (candidate != null ) candidate = candidate.getPreviousInAccessOrder();
BoundedLocalCache.java,candidate = candidate.getPreviousInAccessOrder();,if (candidate != null ) candidate = candidate.getPreviousInAccessOrder();
IsValidBoundedLocalCache.java,long weightedSize = cache.weightedSize();,if (cache != null ) long weightedSize = cache.weightedSize();
IsValidBoundedLocalCache.java,size += deque.size();,if (deque != null ) size += deque.size();
HasStats.java,TrackingExecutor executor = (TrackingExecutor) context.executor();,if (context != null ) TrackingExecutor executor = (TrackingExecutor) context.executor();
HasStats.java,CacheStats stats = context.stats();,if (context != null ) CacheStats stats = context.stats();
BoundedLocalCache.java,writer = builder.getCacheWriter();,if (builder != null ) writer = builder.getCacheWriter();
UnboundedLocalCache.java,this.writer = builder.getCacheWriter();,if (builder != null ) this.writer = builder.getCacheWriter();
AsMapTest.java,int count = context.firstMiddleLastKeys().size();,if (context != null ) int count = context.firstMiddleLastKeys().size();
AsMapTest.java,int count = context.firstMiddleLastKeys().size();,if (context != null ) int count = context.firstMiddleLastKeys().size();
AsMapTest.java,int count = context.firstMiddleLastKeys().size();,if (context != null ) int count = context.firstMiddleLastKeys().size();
CollisionPolicy.java,maximumSize = Ints.checkedCast(settings.maximumSize());,if (Ints != null ) maximumSize = Ints.checkedCast(settings.maximumSize());
CollisionPolicy.java,cache = builder.buildSparse(settings.sparseFactor());,if (builder != null ) cache = builder.buildSparse(settings.sparseFactor());
CollisionPolicy.java,cache = builder.buildPacked();,if (builder != null ) cache = builder.buildPacked();
Registry.java,"String id = ""linked."" + priority.name();","if (priority != null ) String id = ""linked."" + priority.name();"
Registry.java,"String id = ""linked."" + priority.name();","if (priority != null ) String id = ""linked."" + priority.name();"
Registry.java,"String id = ""sampled."" + priority.name();","if (priority != null ) String id = ""sampled."" + priority.name();"
Simulator.java,remaining = routes.size();,if (routes != null ) remaining = routes.size();
Simulator.java,batchSize = settings.batchSize();,if (settings != null ) batchSize = settings.batchSize();
TraceBenchmark.java,List<String> filePaths = settings.traceFiles().paths();,if (settings != null ) List<String> filePaths = settings.traceFiles().paths();
TraceBenchmark.java,TraceFormat format = settings.traceFiles().format();,if (settings != null ) TraceFormat format = settings.traceFiles().format();
Simulator.java,List<String> filePaths = settings.traceFiles().paths();,if (settings != null ) List<String> filePaths = settings.traceFiles().paths();
Simulator.java,TraceFormat format = settings.traceFiles().format();,if (settings != null ) TraceFormat format = settings.traceFiles().format();
TableReporter.java,long operations = policyStats.operationCount();,if (policyStats != null ) long operations = policyStats.operationCount();
TraceFormat.java,Stream<AccessEvent> events = Stream.empty();,if (Stream != null ) Stream<AccessEvent> events = Stream.empty();
TraceFormat.java,"events = Stream.concat(events, reader.events());","if (reader != null ) events = Stream.concat(events, reader.events());"
LinkedPolicy.java,final int weight = event.weight();,if (event != null ) final int weight = event.weight();
Cache2kPolicy.java,maximumSize = settings.maximumSize();,if (settings != null ) maximumSize = settings.maximumSize();
Cache2kPolicy.java,Object value = cache.peek(event.key());,if (cache != null ) Object value = cache.peek(event.key());
CaffeinePolicy.java,Object value = cache.getIfPresent(event.key());,if (cache != null ) Object value = cache.getIfPresent(event.key());
ElasticSearchPolicy.java,Object value = cache.get(event.key());,if (cache != null ) Object value = cache.get(event.key());
GuavaPolicy.java,Object value = cache.getIfPresent(event.key());,if (cache != null ) Object value = cache.getIfPresent(event.key());
ClockProPolicy.java,maximumSize = Ints.checkedCast(settings.maximumSize());,if (Ints != null ) maximumSize = Ints.checkedCast(settings.maximumSize());
CacheValidationListener.java,boolean briefParams = !detailedParams.get();,if (!detailedParams != null ) boolean briefParams = !detailedParams.get();
LocalAsyncCache.java,long startTime = delegate.statsTicker().read();,if (delegate != null ) long startTime = delegate.statsTicker().read();
CaffeineCachingProvider.java,ClassLoader classClassLoader = Thread.currentThread().getContextClassLoader();,if (Thread != null ) ClassLoader classClassLoader = Thread.currentThread().getContextClassLoader();
CaffeineCachingProvider.java,ClassLoader classClassLoader = Thread.currentThread().getContextClassLoader();,if (Thread != null ) ClassLoader classClassLoader = Thread.currentThread().getContextClassLoader();
RandomRemovalFrequencyTable.java,maxSum = sampleFactor * settings.maximumSize();,if (settings != null ) maxSum = sampleFactor * settings.maximumSize();
ArcPolicy.java,this.maximumSize = settings.maximumSize();,if (settings != null ) this.maximumSize = settings.maximumSize();
CarPolicy.java,this.maximumSize = settings.maximumSize();,if (settings != null ) this.maximumSize = settings.maximumSize();
CartPolicy.java,this.maximumSize = settings.maximumSize();,if (settings != null ) this.maximumSize = settings.maximumSize();
ClockProPolicy.java,maximumColdSize = settings.maximumSize();,if (settings != null ) maximumColdSize = settings.maximumSize();
ClockProPolicy.java,maximumSize = settings.maximumSize();,if (settings != null ) maximumSize = settings.maximumSize();
DClockPolicy.java,this.maximumSize = settings.maximumSize();,if (settings != null ) this.maximumSize = settings.maximumSize();
FrdPolicy.java,this.maximumSize = settings.maximumSize();,if (settings != null ) this.maximumSize = settings.maximumSize();
HillClimberFrdPolicy.java,this.maximumSize = settings.maximumSize();,if (settings != null ) this.maximumSize = settings.maximumSize();
IndicatorFrdPolicy.java,this.maximumSize = settings.maximumSize();,if (settings != null ) this.maximumSize = settings.maximumSize();
LirsPolicy.java,this.maximumSize = settings.maximumSize();,if (settings != null ) this.maximumSize = settings.maximumSize();
FrequentlyUsedPolicy.java,this.maximumSize = settings.maximumSize();,if (settings != null ) this.maximumSize = settings.maximumSize();
MultiQueuePolicy.java,maximumSize = settings.maximumSize();,if (settings != null ) maximumSize = settings.maximumSize();
S4LruPolicy.java,this.maximumSize = settings.maximumSize();,if (settings != null ) this.maximumSize = settings.maximumSize();
SegmentedLruPolicy.java,this.maximumSize = settings.maximumSize();,if (settings != null ) this.maximumSize = settings.maximumSize();
ClairvoyantPolicy.java,maximumSize = settings.maximumSize();,if (settings != null ) maximumSize = settings.maximumSize();
CollisionPolicy.java,maximumSize = settings.maximumSize();,if (settings != null ) maximumSize = settings.maximumSize();
SampledPolicy.java,this.maximumSize = settings.maximumSize();,if (settings != null ) this.maximumSize = settings.maximumSize();
WindowTinyLfuPolicy.java,this.maximumSize = settings.maximumSize();,if (settings != null ) this.maximumSize = settings.maximumSize();
HillClimberWindowTinyLfuPolicy.java,this.maximumSize = settings.maximumSize();,if (settings != null ) this.maximumSize = settings.maximumSize();
SimpleClimber.java,this.initialStepSize = settings.percentPivot() * settings.maximumSize();,if (settings != null ) this.initialStepSize = settings.percentPivot() * settings.maximumSize();
IndicatorClimber.java,this.cacheSize = settings.maximumSize();,if (settings != null ) this.cacheSize = settings.maximumSize();
MiniSimClimber.java,this.cacheSize = settings.maximumSize();,if (settings != null ) this.cacheSize = settings.maximumSize();
FeedbackTinyLfuPolicy.java,this.maximumSize = settings.maximumSize();,if (settings != null ) this.maximumSize = settings.maximumSize();
FeedbackWindowTinyLfuPolicy.java,this.maximumSize = settings.maximumSize();,if (settings != null ) this.maximumSize = settings.maximumSize();
FullySegmentedWindowTinyLfuPolicy.java,this.maximumSize = settings.maximumSize();,if (settings != null ) this.maximumSize = settings.maximumSize();
RandomWindowTinyLfuPolicy.java,maximumSize = settings.maximumSize();,if (settings != null ) maximumSize = settings.maximumSize();
S4WindowTinyLfuPolicy.java,this.maximumSize = settings.maximumSize();,if (settings != null ) this.maximumSize = settings.maximumSize();
WindowTinyCachePolicy.java,int maxSize = settings.maximumSize();,if (settings != null ) int maxSize = settings.maximumSize();
TuQueuePolicy.java,this.maximumSize = settings.maximumSize();,if (settings != null ) this.maximumSize = settings.maximumSize();
TwoQueuePolicy.java,this.maximumSize = settings.maximumSize();,if (settings != null ) this.maximumSize = settings.maximumSize();
CoherencePolicy.java,cache = new LocalCache(settings.maximumSize());,if (LocalCache(settings != null ) cache = new LocalCache(settings.maximumSize());
Issue30Test.java,long duration = (now.getTime() - last.getTime());,if (last != null ) long duration = (now.getTime() - last.getTime());
BoundedLocalCache.java,oldValue = node.getValue();,if (node != null ) oldValue = node.getValue();
CaffeinePolicy.java,maximumSize = settings.maximumSize();,if (settings != null ) maximumSize = settings.maximumSize();
TraceBenchmark.java,events = readEventStream(settings).toArray();,if (readEventStream(settings) != null ) events = readEventStream(settings).toArray();
TraceFormat.java,LongStream events = LongStream.empty();,if (LongStream != null ) LongStream events = LongStream.empty();
ElasticSearchPolicy.java,maximumSize = settings.maximumSize();,if (settings != null ) maximumSize = settings.maximumSize();
LocalLoadingCache.java,success = !loaded.isEmpty();,if (!loaded != null ) success = !loaded.isEmpty();
CacheValidationListener.java,params[i] = param.getClass().getSimpleName();,if (param != null ) params[i] = param.getClass().getSimpleName();
ClimberResetCountMin4.java,FilterType filterType = settings.membershipFilter();,if (settings != null ) FilterType filterType = settings.membershipFilter();
ClimberResetCountMin4.java,double expectedInsertionsMultiplier = doorkeeperSettings.expectedInsertionsMultiplier();,if (doorkeeperSettings != null ) double expectedInsertionsMultiplier = doorkeeperSettings.expectedInsertionsMultiplier();
ClimberResetCountMin4.java,"doorkeeper = filterType.create(expectedInsertions, doorkeeperSettings.fpp());","if (doorkeeperSettings != null ) doorkeeper = filterType.create(expectedInsertions, doorkeeperSettings.fpp());"
ClimberResetCountMin4.java,doorkeeper = Membership.disabled();,if (Membership != null ) doorkeeper = Membership.disabled();
PeriodicResetCountMin4.java,FilterType filterType = settings.membershipFilter();,if (settings != null ) FilterType filterType = settings.membershipFilter();
PeriodicResetCountMin4.java,double expectedInsertionsMultiplier = doorkeeperSettings.expectedInsertionsMultiplier();,if (doorkeeperSettings != null ) double expectedInsertionsMultiplier = doorkeeperSettings.expectedInsertionsMultiplier();
PeriodicResetCountMin4.java,"doorkeeper = filterType.create(expectedInsertions, doorkeeperSettings.fpp());","if (doorkeeperSettings != null ) doorkeeper = filterType.create(expectedInsertions, doorkeeperSettings.fpp());"
PeriodicResetCountMin4.java,doorkeeper = Membership.disabled();,if (Membership != null ) doorkeeper = Membership.disabled();
FilterType.java,int randomSeed = new BasicSettings(config).randomSeed();,if (BasicSettings(config) != null ) int randomSeed = new BasicSettings(config).randomSeed();
LocalLoadingCacheTest.java,totalLoadTime = stats.totalLoadTime();,if (stats != null ) totalLoadTime = stats.totalLoadTime();
AsMapTest.java,int count = context.firstMiddleLastKeys().size();,if (context != null ) int count = context.firstMiddleLastKeys().size();
CacheProxy.java,value = expirable.get();,if (expirable != null ) value = expirable.get();
AbstractTraceReader.java,List<InputStream> inputs = new ArrayList<>(filePaths.size());,if (ArrayList<>(filePaths != null ) List<InputStream> inputs = new ArrayList<>(filePaths.size());
BoundedLocalCache.java,victim = accessOrderEdenDeque().peekFirst();,if (accessOrderEdenDeque() != null ) victim = accessOrderEdenDeque().peekFirst();
BoundedLocalCache.java,long mainProtectedWeightedSize = mainProtectedWeightedSize() + node.getPolicyWeight();,if (node != null ) long mainProtectedWeightedSize = mainProtectedWeightedSize() + node.getPolicyWeight();
BoundedLocalCache.java,mainProtectedWeightedSize -= demoted.getPolicyWeight();,if (demoted != null ) mainProtectedWeightedSize -= demoted.getPolicyWeight();
BoundedLocalCache.java,first = accessOrderEdenDeque().iterator();,if (accessOrderEdenDeque() != null ) first = accessOrderEdenDeque().iterator();
BoundedLocalCache.java,first = accessOrderEdenDeque().descendingIterator();,if (accessOrderEdenDeque() != null ) first = accessOrderEdenDeque().descendingIterator();
CountMin4.java,randomSeed = settings.randomSeed();,if (settings != null ) randomSeed = settings.randomSeed();
SimpleClimber.java,Adaptation adaption = Adaptation.hold();,if (Adaptation != null ) Adaptation adaption = Adaptation.hold();
SimulatedAnnealingClimber.java,this.random = new Random(settings.randomSeed());,if (Random(settings != null ) this.random = new Random(settings.randomSeed());
SimulatedAnnealingClimber.java,this.coolDownRate = settings.coolDownRate();,if (settings != null ) this.coolDownRate = settings.coolDownRate();
SimulatedAnnealingClimber.java,this.minTemperature = settings.minTemperature();,if (settings != null ) this.minTemperature = settings.minTemperature();
SimulatedAnnealingClimber.java,Adaptation adaption = Adaptation.hold();,if (Adaptation != null ) Adaptation adaption = Adaptation.hold();
SimulatedAnnealingClimber.java,Adaptation adaption = Adaptation.hold();,if (Adaptation != null ) Adaptation adaption = Adaptation.hold();
SimulatedAnnealingClimber.java,double criteria = random.nextGaussian();,if (random != null ) double criteria = random.nextGaussian();
IndicatorClimber.java,double ind = indicator.getIndicator();,if (indicator != null ) double ind = indicator.getIndicator();
MiniSimClimber.java,this.period = settings.minisimPeriod();,if (settings != null ) this.period = settings.minisimPeriod();
HillClimberWindowTinyLfuPolicy.java,this.climber = strategy.create(settings.config());,if (strategy != null ) this.climber = strategy.create(settings.config());
IsValidBoundedLocalCache.java,long weightedSize = cache.weightedSize();,if (cache != null ) long weightedSize = cache.weightedSize();
Stresser.java,int pendingWrites = local.writeBuffer().size();,if (local != null ) int pendingWrites = local.writeBuffer().size();
Stresser.java,int drainStatus = local.drainStatus();,if (local != null ) int drainStatus = local.drainStatus();
RapidoidPolicy.java,maximumSize = settings.maximumSize();,if (settings != null ) maximumSize = settings.maximumSize();
BoundedLocalCache.java,Executor executor = builder.getExecutor();,if (builder != null ) Executor executor = builder.getExecutor();
LocalAsyncLoadingCache.java,long startTime = cache.statsTicker().read();,if (cache != null ) long startTime = cache.statsTicker().read();
LocalAsyncLoadingCache.java,long startTime = cache.statsTicker().read();,if (cache != null ) long startTime = cache.statsTicker().read();
LocalAsyncLoadingCache.java,this.startTime = cache.statsTicker().read();,if (cache != null ) this.startTime = cache.statsTicker().read();
LocalAsyncLoadingCache.java,long now = cache.statsTicker().read();,if (cache != null ) long now = cache.statsTicker().read();
LocalAsyncLoadingCache.java,long startTime = delegate.statsTicker().read();,if (delegate != null ) long startTime = delegate.statsTicker().read();
LocalAsyncLoadingCache.java,V value = AsMapView.this.get(entry.getKey());,if (AsMapView != null ) V value = AsMapView.this.get(entry.getKey());
LocalAsyncLoadingCache.java,V value = Async.getIfReady(entry.getValue());,if (Async != null ) V value = Async.getIfReady(entry.getValue());
LocalAsyncLoadingCache.java,K key = cursor.getKey();,if (cursor != null ) K key = cursor.getKey();
AsyncLoadingCacheTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
AsyncLoadingCacheTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
AsyncLoadingCacheTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
AsyncLoadingCacheTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
AsyncLoadingCacheTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
AsyncLoadingCacheTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
AsyncLoadingCacheTest.java,CompletableFuture<Integer> value = CompletableFuture.completedFuture(context.absentValue());,if (CompletableFuture != null ) CompletableFuture<Integer> value = CompletableFuture.completedFuture(context.absentValue());
AsyncLoadingCacheTest.java,CompletableFuture<Integer> value = CompletableFuture.completedFuture(context.absentValue());,if (CompletableFuture != null ) CompletableFuture<Integer> value = CompletableFuture.completedFuture(context.absentValue());
AsyncLoadingCacheTest.java,int count = context.firstMiddleLastKeys().size();,if (context != null ) int count = context.firstMiddleLastKeys().size();
BoundedLocalCache.java,V value = node.getValue();,if (node != null ) V value = node.getValue();
Ehcache2Policy.java,maximumSize = settings.maximumSize();,if (settings != null ) maximumSize = settings.maximumSize();
FrequencySketch.java,int seed = ThreadLocalRandom.current().nextInt();,if (ThreadLocalRandom != null ) int seed = ThreadLocalRandom.current().nextInt();
BoundedLocalCache.java,mainProtectedWeightedSize -= node.getPolicyWeight();,if (node != null ) mainProtectedWeightedSize -= node.getPolicyWeight();
BoundedLocalCache.java,candidate = candidate.getPreviousInAccessOrder();,if (candidate != null ) candidate = candidate.getPreviousInAccessOrder();
LocalAsyncLoadingCache.java,removalKey = cursor.getKey();,if (cursor != null ) removalKey = cursor.getKey();
CacheFactory.java,cacheLoader = config.getCacheLoaderFactory().create();,if (config != null ) cacheLoader = config.getCacheLoaderFactory().create();
Cache2kPolicy.java,Level level = logger.getLevel();,if (logger != null ) Level level = logger.getLevel();
Cache2kPolicy.java,maximumSize = settings.maximumSize();,if (settings != null ) maximumSize = settings.maximumSize();
BoundedLocalCache.java,long now = expirationTicker().read();,if (expirationTicker() != null ) long now = expirationTicker().read();
BoundedLocalCache.java,long now = expirationTicker().read();,if (expirationTicker() != null ) long now = expirationTicker().read();
BoundedLocalCache.java,long now = expirationTicker().read();,if (expirationTicker() != null ) long now = expirationTicker().read();
BoundedLocalCache.java,long now = expirationTicker().read();,if (expirationTicker() != null ) long now = expirationTicker().read();
BoundedLocalCache.java,long now = expirationTicker().read();,if (expirationTicker() != null ) long now = expirationTicker().read();
BoundedLocalCache.java,long now = cache.expirationTicker().read();,if (cache != null ) long now = cache.expirationTicker().read();
BoundedLocalCache.java,long now = cache.expirationTicker().read();,if (cache != null ) long now = cache.expirationTicker().read();
BoundedLocalCache.java,long now = cache.expirationTicker().read();,if (cache != null ) long now = cache.expirationTicker().read();
BoundedLocalCache.java,long now = cache.expirationTicker().read();,if (cache != null ) long now = cache.expirationTicker().read();
BoundedLocalCache.java,long now = cache.expirationTicker().read();,if (cache != null ) long now = cache.expirationTicker().read();
NonReentrantLock.java,Thread o = sync.getOwner();,if (sync != null ) Thread o = sync.getOwner();
NonReentrantLockTest.java,Thread testThread = Thread.currentThread();,if (Thread != null ) Thread testThread = Thread.currentThread();
NonReentrantLockTest.java,Condition condition = lock.newCondition();,if (lock != null ) Condition condition = lock.newCondition();
CacheEvictionTest.java,Integer key = entry.getKey();,if (entry != null ) Integer key = entry.getKey();
CacheTesting.java,Object key = current.getKey();,if (current != null ) Object key = current.getKey();
CacheTesting.java,Object key = current.getKey();,if (current != null ) Object key = current.getKey();
CacheTesting.java,Object key = current.getKey();,if (current != null ) Object key = current.getKey();
CacheTesting.java,K key = entry.getKey();,if (entry != null ) K key = entry.getKey();
CacheTesting.java,V value = entry.getValueReference().get();,if (entry != null ) V value = entry.getValueReference().get();
LocalAsyncLoadingCache.java,long startTime = delegate.statsTicker().read();,if (delegate != null ) long startTime = delegate.statsTicker().read();
LocalCacheSelectorCode.java,CodeBlock.Builder reflectBuilder = CodeBlock.builder();,if (CodeBlock != null ) CodeBlock.Builder reflectBuilder = CodeBlock.builder();
LocalCacheSelectorCode.java,CodeBlock.Builder switchBuilder = CodeBlock.builder();,if (CodeBlock != null ) CodeBlock.Builder switchBuilder = CodeBlock.builder();
BoundedLocalCache.java,long now = cache.expirationTicker().read();,if (cache != null ) long now = cache.expirationTicker().read();
BoundedLocalCache.java,long now = expirationTicker().read();,if (expirationTicker() != null ) long now = expirationTicker().read();
BoundedLocalCache.java,long now = expirationTicker().read();,if (expirationTicker() != null ) long now = expirationTicker().read();
BoundedLocalCache.java,long now = expirationTicker().read();,if (expirationTicker() != null ) long now = expirationTicker().read();
LocalAsyncLoadingCache.java,CompletableFuture<V> future = cache.get(entry.getKey());,if (cache != null ) CompletableFuture<V> future = cache.get(entry.getKey());
LocalLoadingCache.java,V value = get(entry.getKey());,if (get(entry != null ) V value = get(entry.getKey());
UnboundedLocalCache.java,Object value = data.get(entry.getKey());,if (data != null ) Object value = data.get(entry.getKey());
CacheFactory.java,this.expiry = config.getExpiryPolicyFactory().create();,if (config != null ) this.expiry = config.getExpiryPolicyFactory().create();
ReferenceTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ReferenceTest.java,long count = context.initialSize() - cache.estimatedSize();,if (cache != null ) long count = context.initialSize() - cache.estimatedSize();
ReferenceTest.java,long count = context.initialSize() - cache.estimatedSize();,if (cache != null ) long count = context.initialSize() - cache.estimatedSize();
ReferenceTest.java,long count = context.initialSize() - cache.estimatedSize();,if (cache != null ) long count = context.initialSize() - cache.estimatedSize();
ReferenceTest.java,long count = context.initialSize() - cache.estimatedSize();,if (cache != null ) long count = context.initialSize() - cache.estimatedSize();
ReferenceTest.java,Integer first = context.firstKey();,if (context != null ) Integer first = context.firstKey();
ReferenceTest.java,long count = context.initialSize() - map.size();,if (map != null ) long count = context.initialSize() - map.size();
ReferenceTest.java,long count = context.initialSize() - map.size();,if (map != null ) long count = context.initialSize() - map.size();
ReferenceTest.java,long count = context.initialSize() - map.size();,if (map != null ) long count = context.initialSize() - map.size();
TextReporter.java,File file = Paths.get(output).toFile();,if (Paths != null ) File file = Paths.get(output).toFile();
CacheProxy.java,currentTimeMS = ticker.read();,if (ticker != null ) currentTimeMS = ticker.read();
CacheProxy.java,Duration duration = expires.get();,if (expires != null ) Duration duration = expires.get();
BoundedLocalCache.java,long now = expirationTicker().read();,if (expirationTicker() != null ) long now = expirationTicker().read();
BoundedLocalCache.java,V value = node.getValue();,if (node != null ) V value = node.getValue();
CacheContext.java,this.executor = cacheExecutor.get();,if (cacheExecutor != null ) this.executor = cacheExecutor.get();
CacheContext.java,this.cacheWriter = writer.get();,if (writer != null ) this.cacheWriter = writer.get();
CacheGenerator.java,boolean expirationIncompatible = cacheSpec.requiresExpiration() && !context.expires();,if (!context != null ) boolean expirationIncompatible = cacheSpec.requiresExpiration() && !context.expires();
BoundedLocalCache.java,long currentDuration = now - node.getAccessTime();,if (node != null ) long currentDuration = now - node.getAccessTime();
BoundedLocalCache.java,this.iterator = cache.entrySet().iterator();,if (cache != null ) this.iterator = cache.entrySet().iterator();
BoundedLocalCache.java,K next = iterator.next().getKey();,if (iterator != null ) K next = iterator.next().getKey();
BoundedLocalCache.java,this.iterator = cache.entrySet().iterator();,if (cache != null ) this.iterator = cache.entrySet().iterator();
SimpleClimber.java,this.sampleSize = settings.sampleSize();,if (settings != null ) this.sampleSize = settings.sampleSize();
SimulatedAnnealingClimber.java,this.sampleSize = settings.sampleSize();,if (settings != null ) this.sampleSize = settings.sampleSize();
AdaptiveResetCountMin4.java,FilterType filterType = settings.membershipFilter();,if (settings != null ) FilterType filterType = settings.membershipFilter();
AdaptiveResetCountMin4.java,double expectedInsertionsMultiplier = doorkeeperSettings.expectedInsertionsMultiplier();,if (doorkeeperSettings != null ) double expectedInsertionsMultiplier = doorkeeperSettings.expectedInsertionsMultiplier();
AdaptiveResetCountMin4.java,doorkeeper = Membership.disabled();,if (Membership != null ) doorkeeper = Membership.disabled();
AdaptiveResetCountMin4.java,FilterType filterType = settings.membershipFilter();,if (settings != null ) FilterType filterType = settings.membershipFilter();
AdaptiveResetCountMin4.java,double expectedInsertionsMultiplier = doorkeeperSettings.expectedInsertionsMultiplier();,if (doorkeeperSettings != null ) double expectedInsertionsMultiplier = doorkeeperSettings.expectedInsertionsMultiplier();
AdaptiveResetCountMin4.java,doorkeeper = Membership.disabled();,if (Membership != null ) doorkeeper = Membership.disabled();
BoundedLocalCache.java,V value = node.getValue();,if (node != null ) V value = node.getValue();
BoundedLocalCache.java,V value = node.getValue();,if (node != null ) V value = node.getValue();
BoundedLocalCache.java,weight = node.getWeight();,if (node != null ) weight = node.getWeight();
BoundedLocalCache.java,long now = expirationTicker().read();,if (expirationTicker() != null ) long now = expirationTicker().read();
AnnealingWindowTinyLfuPolicy.java,this.random = new Random(settings.randomSeed());,if (Random(settings != null ) this.random = new Random(settings.randomSeed());
AnnealingWindowTinyLfuPolicy.java,this.maximumSize = settings.maximumSize();,if (settings != null ) this.maximumSize = settings.maximumSize();
AnnealingWindowTinyLfuPolicy.java,this.sampleSize = settings.sampleSize();,if (settings != null ) this.sampleSize = settings.sampleSize();
AnnealingWindowTinyLfuPolicy.java,this.coolDownRate = settings.coolDownRate();,if (settings != null ) this.coolDownRate = settings.coolDownRate();
AnnealingWindowTinyLfuPolicy.java,this.minTemperature = settings.minTemperature();,if (settings != null ) this.minTemperature = settings.minTemperature();
AnnealingWindowTinyLfuPolicy.java,double criteria = random.nextGaussian();,if (random != null ) double criteria = random.nextGaussian();
HillClimberWindowTinyLfuPolicy.java,this.sampleSize = settings.sampleSize();,if (settings != null ) this.sampleSize = settings.sampleSize();
AnnealingWindowTinyLfuPolicy.java,double criteria = random.nextDouble();,if (random != null ) double criteria = random.nextDouble();
HillClimberWindowTinyLfuPolicy.java,this.tolerance = settings.tolerance();,if (settings != null ) this.tolerance = settings.tolerance();
InfinispanPolicy.java,maximumSize = settings.maximumSize();,if (settings != null ) maximumSize = settings.maximumSize();
ExpirationTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpirationTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
SampledPolicy.java,long now = ticker.read();,if (ticker != null ) long now = ticker.read();
AsyncLoadingCacheTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
BoundedLocalCache.java,V value = node.getValue();,if (node != null ) V value = node.getValue();
LocalLoadingCache.java,K key = iter.next();,if (iter != null ) K key = iter.next();
CacheSpec.java,TrackingExecutor executor = CacheExecutor.DIRECT.get();,if (CacheExecutor != null ) TrackingExecutor executor = CacheExecutor.DIRECT.get();
CacheValidationListener.java,TrackingExecutor executor = context.executor();,if (context != null ) TrackingExecutor executor = context.executor();
BoundedLocalCache.java,eden = accessOrderEdenDeque().iterator();,if (accessOrderEdenDeque() != null ) eden = accessOrderEdenDeque().iterator();
BoundedLocalCache.java,eden = accessOrderEdenDeque().descendingIterator();,if (accessOrderEdenDeque() != null ) eden = accessOrderEdenDeque().descendingIterator();
BoundedLocalCache.java,first = accessOrderEdenDeque().iterator();,if (accessOrderEdenDeque() != null ) first = accessOrderEdenDeque().iterator();
BoundedLocalCache.java,second = accessOrderProbationDeque().iterator();,if (accessOrderProbationDeque() != null ) second = accessOrderProbationDeque().iterator();
BoundedLocalCache.java,third = accessOrderProtectedDeque().iterator();,if (accessOrderProtectedDeque() != null ) third = accessOrderProtectedDeque().iterator();
BoundedLocalCache.java,comparator = comparator.reversed();,if (comparator != null ) comparator = comparator.reversed();
BoundedLocalCache.java,first = accessOrderEdenDeque().descendingIterator();,if (accessOrderEdenDeque() != null ) first = accessOrderEdenDeque().descendingIterator();
BoundedLocalCache.java,second = accessOrderProbationDeque().descendingIterator();,if (accessOrderProbationDeque() != null ) second = accessOrderProbationDeque().descendingIterator();
BoundedLocalCache.java,third = accessOrderProtectedDeque().descendingIterator();,if (accessOrderProtectedDeque() != null ) third = accessOrderProtectedDeque().descendingIterator();
AsMapTest.java,int count = context.firstMiddleLastKeys().size();,if (context != null ) int count = context.firstMiddleLastKeys().size();
AsMapTest.java,int count = context.firstMiddleLastKeys().size();,if (context != null ) int count = context.firstMiddleLastKeys().size();
ExpirationTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpirationTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ReferenceTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ReferenceTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ReferenceTest.java,Set<Integer> keys = context.firstMiddleLastKeys();,if (context != null ) Set<Integer> keys = context.firstMiddleLastKeys();
ReferenceTest.java,Set<Integer> keys = context.firstMiddleLastKeys();,if (context != null ) Set<Integer> keys = context.firstMiddleLastKeys();
ReferenceTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ReferenceTest.java,long count = context.initialSize() - map.size();,if (map != null ) long count = context.initialSize() - map.size();
BoundedLocalCache.java,long now = expirationTicker().read();,if (expirationTicker() != null ) long now = expirationTicker().read();
AdaptiveTinyLfuPolicy.java,"feedback = new BloomFilter(sampleSize, settings.randomSeed());","if (settings != null ) feedback = new BloomFilter(sampleSize, settings.randomSeed());"
AdaptiveWindowTinyLfuPolicy.java,"feedback = new BloomFilter(sampleSize, settings.randomSeed());","if (settings != null ) feedback = new BloomFilter(sampleSize, settings.randomSeed());"
AdaptiveWindowTinyLfuPolicy.java,samplesBeforeDecrease = settings.samplesBeforeDecrease();,if (settings != null ) samplesBeforeDecrease = settings.samplesBeforeDecrease();
AdaptiveWindowTinyLfuPolicy.java,feedback = new FeedbackFilter(settings.config());,if (FeedbackFilter(settings != null ) feedback = new FeedbackFilter(settings.config());
TextTraceReader.java,List<InputStream> inputs = new ArrayList<>(filePaths.size());,if (ArrayList<>(filePaths != null ) List<InputStream> inputs = new ArrayList<>(filePaths.size());
FullySegmentedWindowTinyLfuPolicy.java,this.admittor = new TinyLfu(settings.config());,if (TinyLfu(settings != null ) this.admittor = new TinyLfu(settings.config());
RandomWindowTinyLfuPolicy.java,admittor = new TinyLfu(settings.config());,if (TinyLfu(settings != null ) admittor = new TinyLfu(settings.config());
S4WindowTinyLfuPolicy.java,this.admittor = new TinyLfu(settings.config());,if (TinyLfu(settings != null ) this.admittor = new TinyLfu(settings.config());
SimpleWindowTinyLfuPolicy.java,this.admittor = new TinyLfu(settings.config());,if (TinyLfu(settings != null ) this.admittor = new TinyLfu(settings.config());
WindowTinyLfuPolicy.java,this.admittor = new TinyLfu(settings.config());,if (TinyLfu(settings != null ) this.admittor = new TinyLfu(settings.config());
BoundedLocalCache.java,victim = accessOrderProtectedDeque().peekFirst();,if (accessOrderProtectedDeque() != null ) victim = accessOrderProtectedDeque().peekFirst();
BoundedLocalCache.java,K key = node.getKey();,if (node != null ) K key = node.getKey();
LocalAsyncLoadingCache.java,V newValue = newValueFuture.get();,if (newValueFuture != null ) V newValue = newValueFuture.get();
EvictionTest.java,int size = context.original().size();,if (context != null ) int size = context.original().size();
Stresser.java,int pendingWrites = local.writeQueue().size();,if (local != null ) int pendingWrites = local.writeQueue().size();
BoundedLocalCache.java,int victimHash = victimKey.hashCode();,if (victimKey != null ) int victimHash = victimKey.hashCode();
BoundedLocalCache.java,int candidateHash = candidateKey.hashCode();,if (candidateKey != null ) int candidateHash = candidateKey.hashCode();
BoundedLocalCache.java,victim = victim.getNextInAccessOrder();,if (victim != null ) victim = victim.getNextInAccessOrder();
FrequencySketchTest.java,final int item = ThreadLocalRandom.current().nextInt();,if (ThreadLocalRandom != null ) final int item = ThreadLocalRandom.current().nextInt();
HashClashTest.java,long startTime = System.currentTimeMillis();,if (System != null ) long startTime = System.currentTimeMillis();
HashClashTest.java,long endTime = System.currentTimeMillis();,if (System != null ) long endTime = System.currentTimeMillis();
TCachePolicy.java,maximumSize = settings.maximumSize();,if (settings != null ) maximumSize = settings.maximumSize();
FrequencySketch.java,int hash = spread(e.hashCode());,if (spread(e != null ) int hash = spread(e.hashCode());
FrequencySketch.java,int hash = spread(e.hashCode());,if (spread(e != null ) int hash = spread(e.hashCode());
FrequencySketchTest.java,final Integer item = ThreadLocalRandom.current().nextInt();,if (ThreadLocalRandom != null ) final Integer item = ThreadLocalRandom.current().nextInt();
SingleConsumerQueue.java,first = first.getNextRelaxed();,if (first != null ) first = first.getNextRelaxed();
Synthetic.java,int items = settings.synthetic().events();,if (settings != null ) int items = settings.synthetic().events();
Stresser.java,int pendingWrites = local.writeQueue().size();,if (local != null ) int pendingWrites = local.writeQueue().size();
Stresser.java,String elapsedTime = LocalTime.ofSecondOfDay(runningTime).toString();,if (LocalTime != null ) String elapsedTime = LocalTime.ofSecondOfDay(runningTime).toString();
BoundedLocalCache.java,long writeTime = node.getWriteTime();,if (node != null ) long writeTime = node.getWriteTime();
CacheProvider.java,params[i] = entry.getKey();,if (entry != null ) params[i] = entry.getKey();
CacheProvider.java,params[i] = entry.getValue(); // Cache or LoadingCache,if (LoadingCache != null ) params[i] = entry.getValue(); // Cache or LoadingCache
CacheProvider.java,params[i] = entry.getValue().asMap();,if (entry != null ) params[i] = entry.getValue().asMap();
LocalCacheFactoryGenerator.java,String className = entry.getKey();,if (entry != null ) String className = entry.getKey();
NodeFactoryGenerator.java,String className = entry.getKey();,if (entry != null ) String className = entry.getKey();
BoundedLocalCache.java,K castedKey = iterator.next().getKey();,if (iterator != null ) K castedKey = iterator.next().getKey();
LocalAsyncLoadingCache.java,V value = result.get(proxy.getKey());,if (result != null ) V value = result.get(proxy.getKey());
BoundedLocalCache.java,proxy.loader = cache.cacheLoader();,if (cache != null ) proxy.loader = cache.cacheLoader();
ComputeBenchmark.java,ints[i] = generator.nextInt();,if (generator != null ) ints[i] = generator.nextInt();
FrequencySketchBenchmark.java,ints[i] = generator.nextInt();,if (generator != null ) ints[i] = generator.nextInt();
GetPutBenchmark.java,ints[i] = generator.nextInt();,if (generator != null ) ints[i] = generator.nextInt();
CacheProfiler.java,ints[i] = generator.nextInt();,if (generator != null ) ints[i] = generator.nextInt();
BoundedLocalCache.java,final long now = expirationTicker().read();,if (expirationTicker() != null ) final long now = expirationTicker().read();
BoundedLocalCache.java,long mainProtectedWeightedSize = mainProtectedWeightedSize() + node.getPolicyWeight();,if (node != null ) long mainProtectedWeightedSize = mainProtectedWeightedSize() + node.getPolicyWeight();
BoundedLocalCache.java,mainProtectedWeightedSize -= node.getPolicyWeight();,if (node != null ) mainProtectedWeightedSize -= node.getPolicyWeight();
CacheFactory.java,this.ticker = Ticker.systemTicker();,if (Ticker != null ) this.ticker = Ticker.systemTicker();
ConcurrentQueueBenchmark.java,queue = queueType.create();,if (queueType != null ) queue = queueType.create();
ConcurrentLinkedStackProfiler.java,ThreadLocalRandom random = ThreadLocalRandom.current();,if (ThreadLocalRandom != null ) ThreadLocalRandom random = ThreadLocalRandom.current();
ConcurrentLinkedStack.java,E e = node.get();,if (node != null ) E e = node.get();
ConcurrentLinkedStack.java,E value = node.get();,if (node != null ) E value = node.get();
ConcurrentLinkedStack.java,E e = node.get();,if (node != null ) E e = node.get();
ConcurrentLinkedStack.java,E e = current.get();,if (current != null ) E e = current.get();
ConcurrentLinkedStack.java,Node<E> found = slot.get();,if (slot != null ) Node<E> found = slot.get();
ConcurrentLinkedStack.java,Node<E> found = slot.get();,if (slot != null ) Node<E> found = slot.get();
ConcurrentLinkedStack.java,found = slot.get();,if (slot != null ) found = slot.get();
ConcurrentLinkedStack.java,E value = node.get();,if (node != null ) E value = node.get();
ConcurrentLinkedStack.java,nextValue = node.get();,if (node != null ) nextValue = node.get();
ConcurrentLinkedStackTest.java,Iterator<Integer> it = stack.iterator();,if (stack != null ) Iterator<Integer> it = stack.iterator();
ConcurrentLinkedStackTest.java,Integer first = stack.peek();,if (stack != null ) Integer first = stack.peek();
ConcurrentLinkedStackTest.java,Integer value = stack.pop();,if (stack != null ) Integer value = stack.pop();
ConcurrentLinkedStackTest.java,int newSize = stack.size();,if (stack != null ) int newSize = stack.size();
ConcurrentLinkedStackTest.java,Integer value = stack.peek();,if (stack != null ) Integer value = stack.peek();
ConcurrentLinkedStackTest.java,Queue<Integer> queue = stack.asLifoQueue();,if (stack != null ) Queue<Integer> queue = stack.asLifoQueue();
ConcurrentLinkedStackTest.java,Iterator<Integer> it = stack.iterator();,if (stack != null ) Iterator<Integer> it = stack.iterator();
ConcurrentLinkedStackTest.java,Iterator<Integer> it = stack.iterator();,if (stack != null ) Iterator<Integer> it = stack.iterator();
ConcurrentLinkedStackTest.java,Integer first = stack.peek();,if (stack != null ) Integer first = stack.peek();
ConcurrentLinkedStackTest.java,int newSize = stack.size();,if (stack != null ) int newSize = stack.size();
ConcurrentLinkedStackTest.java,Object[] params = testResult.getParameters();,if (testResult != null ) Object[] params = testResult.getParameters();
ConcurrentLinkedStackTest.java,params[i] = param.getClass().getSimpleName();,if (param != null ) params[i] = param.getClass().getSimpleName();
StackMultiThreadedTest.java,int random = ThreadLocalRandom.current().nextInt();,if (ThreadLocalRandom != null ) int random = ThreadLocalRandom.current().nextInt();
StackMultiThreadedTest.java,int random = ThreadLocalRandom.current().nextInt();,if (ThreadLocalRandom != null ) int random = ThreadLocalRandom.current().nextInt();
StackMultiThreadedTest.java,int random = ThreadLocalRandom.current().nextInt();,if (ThreadLocalRandom != null ) int random = ThreadLocalRandom.current().nextInt();
BoundedLocalCache.java,int moveCount = node.getMoveCount();,if (node != null ) int moveCount = node.getMoveCount();
BoundedLocalCacheTest.java,int initialMoveCount = localCache.moveCount();,if (localCache != null ) int initialMoveCount = localCache.moveCount();
BoundedLocalCacheTest.java,Object keyRef = localCache.nodeFactory.newLookupKey(oldEntry.getKey());,if (localCache != null ) Object keyRef = localCache.nodeFactory.newLookupKey(oldEntry.getKey());
CacheProxy.java,final ClassLoader classLoader = cacheManager.getClassLoader();,if (cacheManager != null ) final ClassLoader classLoader = cacheManager.getClassLoader();
CacheProxy.java,long start = ticker.read();,if (ticker != null ) long start = ticker.read();
CacheProxy.java,long now = ticker.read();,if (ticker != null ) long now = ticker.read();
CacheProxy.java,long start = ticker.read();,if (ticker != null ) long start = ticker.read();
CacheProxy.java,long now = ticker.read();,if (ticker != null ) long now = ticker.read();
CacheProxy.java,long start = ticker.read();,if (ticker != null ) long start = ticker.read();
CacheProxy.java,long start = ticker.read();,if (ticker != null ) long start = ticker.read();
CacheProxy.java,long start = ticker.read();,if (ticker != null ) long start = ticker.read();
CacheProxy.java,long start = ticker.read();,if (ticker != null ) long start = ticker.read();
CacheProxy.java,long start = ticker.read();,if (ticker != null ) long start = ticker.read();
CacheProxy.java,long start = ticker.read();,if (ticker != null ) long start = ticker.read();
CacheProxy.java,long start = ticker.read();,if (ticker != null ) long start = ticker.read();
CacheProxy.java,long start = ticker.read();,if (ticker != null ) long start = ticker.read();
CacheProxy.java,long start = ticker.read();,if (ticker != null ) long start = ticker.read();
LoadingCacheProxy.java,long start = ticker.read();,if (ticker != null ) long start = ticker.read();
LoadingCacheProxy.java,long now = ticker.read();,if (ticker != null ) long now = ticker.read();
JCacheLoaderAdapter.java,long start = ticker.read();,if (ticker != null ) long start = ticker.read();
JCacheLoaderAdapter.java,long end = ticker.read();,if (ticker != null ) long end = ticker.read();
JCacheLoaderAdapter.java,long start = ticker.read();,if (ticker != null ) long start = ticker.read();
CacheProxy.java,long now = ticker.read();,if (ticker != null ) long now = ticker.read();
CacheProxy.java,Duration duration = expires.get();,if (expires != null ) Duration duration = expires.get();
LoadingCacheProxy.java,final long now = ticker.read();,if (ticker != null ) final long now = ticker.read();
CacheProxy.java,long now = ticker.read();,if (ticker != null ) long now = ticker.read();
CacheProxy.java,long start = ticker.read();,if (ticker != null ) long start = ticker.read();
CacheProxy.java,long now = ticker.read();,if (ticker != null ) long now = ticker.read();
LoadingCacheProxy.java,long now = ticker.read();,if (ticker != null ) long now = ticker.read();
Simulator.java,String filePath = settings.traceFile().path();,if (settings != null ) String filePath = settings.traceFile().path();
Simulator.java,TraceFormat format = settings.traceFile().format();,if (settings != null ) TraceFormat format = settings.traceFile().format();
Compactor.java,Stopwatch stopwatch = Stopwatch.createStarted();,if (Stopwatch != null ) Stopwatch stopwatch = Stopwatch.createStarted();
Compactor.java,lineNumber = context.currentLine();,if (context != null ) lineNumber = context.currentLine();
PolicyBuilder.java,admittor = Admittor.always();,if (Admittor != null ) admittor = Admittor.always();
BoundedBuffer.java,E e = slot.get();,if (slot != null ) E e = slot.get();
BoundedLocalCache.java,return (weigher == Weigher.singleton());,if (Weigher != null ) return (weigher == Weigher.singleton());
BoundedLocalCache.java,second = third = PeekingIterator.empty();,if (PeekingIterator != null ) second = third = PeekingIterator.empty();
BoundedLocalCache.java,deque = writeOrderDeque().iterator();,if (writeOrderDeque() != null ) deque = writeOrderDeque().iterator();
BoundedLocalCache.java,deque = writeOrderDeque().descendingIterator();,if (writeOrderDeque() != null ) deque = writeOrderDeque().descendingIterator();
BoundedLocalCache.java,K key = node.getKey();,if (node != null ) K key = node.getKey();
BoundedLocalCache.java,V value = transformer.apply(node.getValue());,if (transformer != null ) V value = transformer.apply(node.getValue());
BoundedLocalCacheTest.java,Integer key = first.getKey();,if (first != null ) Integer key = first.getKey();
SimpleWindowTinyLfuPolicy.java,this.maximumSize = settings.maximumSize();,if (settings != null ) this.maximumSize = settings.maximumSize();
BoundedLocalCacheTest.java,int initialMoveCount = localCache.moveCount();,if (localCache != null ) int initialMoveCount = localCache.moveCount();
Stresser.java,ints[i] = generator.nextInt();,if (generator != null ) ints[i] = generator.nextInt();
CounterGenerator.java,int ret = counter.getAndIncrement();,if (counter != null ) int ret = counter.getAndIncrement();
HistogramGenerator.java,str = in.readLine();,if (in != null ) str = in.readLine();
HotspotIntegerGenerator.java,Random random = Utils.random();,if (Utils != null ) Random random = Utils.random();
ScrambledZipfianGenerator.java,long ret = gen.nextLong();,if (gen != null ) long ret = gen.nextLong();
Utils.java,Random ret = rng.get();,if (rng != null ) Random ret = rng.get();
Utils.java,ret = new Random(rand.nextLong());,if (Random(rand != null ) ret = new Random(rand.nextLong());
ZipfianGenerator.java,double u = Utils.random().nextDouble();,if (Utils != null ) double u = Utils.random().nextDouble();
BoundedLocalCache.java,int distance = Math.abs(moveCount() - node.getMoveCount());,if (node != null ) int distance = Math.abs(moveCount() - node.getMoveCount());
RandomRemovalFrequencyTable.java,List<E> array = new ArrayList<>(table.keySet());,if (ArrayList<>(table != null ) List<E> array = new ArrayList<>(table.keySet());
TinyCachePolicy.java,boolean evicted = tinyCache.addItem(key.hashCode());,if (tinyCache != null ) boolean evicted = tinyCache.addItem(key.hashCode());
TinyCachePolicywithGhostCache.java,boolean evicted = tinyCache.addItem(key.hashCode());,if (tinyCache != null ) boolean evicted = tinyCache.addItem(key.hashCode());
WindowTinyCachePolicy.java,boolean evicted = tinyCache.addItem(key.hashCode());,if (tinyCache != null ) boolean evicted = tinyCache.addItem(key.hashCode());
WindowTinyCachePolicy.java,evicted = window.addItem(key.hashCode());,if (window != null ) evicted = window.addItem(key.hashCode());
TinyCachePolicy.java,boolean evicted = tinyCache.addItem(key.hashCode());,if (tinyCache != null ) boolean evicted = tinyCache.addItem(key.hashCode());
TinyCachePolicywithGhostCache.java,boolean evicted = tinyCache.addItem(key.hashCode());,if (tinyCache != null ) boolean evicted = tinyCache.addItem(key.hashCode());
WindowTinyCachePolicy.java,int maxSize = settings.maximumSize();,if (settings != null ) int maxSize = settings.maximumSize();
WindowTinyCachePolicy.java,boolean evicted = tinyCache.addItem(key.hashCode());,if (tinyCache != null ) boolean evicted = tinyCache.addItem(key.hashCode());
WindowTinyCachePolicy.java,evicted = window.addItem(key.hashCode());,if (window != null ) evicted = window.addItem(key.hashCode());
Caffeine.java,String pkg = clazz.getPackage().getName();,if (clazz != null ) String pkg = clazz.getPackage().getName();
Caffeine.java,String name = clazz.getSimpleName();,if (clazz != null ) String name = clazz.getSimpleName();
Caffeine.java,String className = element.getClassName();,if (element != null ) String className = element.getClassName();
CaffeineTextTraceReader.java,String[] record = parser.parseNext();,if (parser != null ) String[] record = parser.parseNext();
TraceEventFormats.java,int length = input.readInt();,if (input != null ) int length = input.readInt();
TraceEventFormats.java,chars[i] = input.readChar();,if (input != null ) chars[i] = input.readChar();
TracerIdGenerator.java,"long timestamp = Math.max(lastTimestamp, System.currentTimeMillis());","if (System != null ) long timestamp = Math.max(lastTimestamp, System.currentTimeMillis());"
TracerIdGenerator.java,InetAddress ip = InetAddress.getLocalHost();,if (InetAddress != null ) InetAddress ip = InetAddress.getLocalHost();
TracerIdGenerator.java,byte[] mac = NetworkInterface.getByInetAddress(ip).getHardwareAddress();,if (NetworkInterface != null ) byte[] mac = NetworkInterface.getByInetAddress(ip).getHardwareAddress();
TracerIdGeneratorTest.java,ids[i] = generator.nextId();,if (generator != null ) ids[i] = generator.nextId();
TracerTest.java,Tracer defaultTracer = Tracer.getDefault();,if (Tracer != null ) Tracer defaultTracer = Tracer.getDefault();
TracerTest.java,Tracer tracer = Tracer.disabled();,if (Tracer != null ) Tracer tracer = Tracer.disabled();
AsyncTracer.java,long id = generator.nextId();,if (generator != null ) long id = generator.nextId();
AsyncTracerTest.java,Tracer defaultTracer = Tracer.getDefault();,if (Tracer != null ) Tracer defaultTracer = Tracer.getDefault();
Simulator.java,batchSize = settings.batchSize();,if (settings != null ) batchSize = settings.batchSize();
TextReporter.java,long operations = policyStats.operationCount();,if (policyStats != null ) long operations = policyStats.operationCount();
BoundedLocalCache.java,oldValue = prior.getValue();,if (prior != null ) oldValue = prior.getValue();
BoundedLocalCache.java,oldWeight = prior.getWeight();,if (prior != null ) oldWeight = prior.getWeight();
BoundedLocalCache.java,long now = expirationTicker().read();,if (expirationTicker() != null ) long now = expirationTicker().read();
BoundedLocalCache.java,oldKey = node.getKey();,if (node != null ) oldKey = node.getKey();
BoundedLocalCache.java,oldValue = node.getValue();,if (node != null ) oldValue = node.getValue();
BoundedLocalCache.java,oldWeight = node.getWeight();,if (node != null ) oldWeight = node.getWeight();
BoundedLocalCache.java,oldKey = node.getKey();,if (node != null ) oldKey = node.getKey();
BoundedLocalCache.java,prevValue = node.getValue();,if (node != null ) prevValue = node.getValue();
BoundedLocalCache.java,oldWeight = node.getWeight();,if (node != null ) oldWeight = node.getWeight();
BoundedLocalCache.java,int weight = node.getWeight();,if (node != null ) int weight = node.getWeight();
EvictionTest.java,Integer next = generator.nextInt();,if (generator != null ) Integer next = generator.nextInt();
RandomRemovalFrequencyTable.java,maxSum = sampleFactor*settings.maximumSize();,if (sampleFactor*settings != null ) maxSum = sampleFactor*settings.maximumSize();
RandomRemovalFrequencyTable.java,ArrayList<E> array = new ArrayList<E>(table.keySet());,if (ArrayList<E>(table != null ) ArrayList<E> array = new ArrayList<E>(table.keySet());
BoundedLocalCache.java,node = node.getNextInAccessOrder();,if (node != null ) node = node.getNextInAccessOrder();
BoundedLocalCacheTest.java,List<Integer> evictionList = Lists.newArrayList();,if (Lists != null ) List<Integer> evictionList = Lists.newArrayList();
RandomRemovalFrequencyTable.java,maxSum = sampleFactor*settings.maximumSize();,if (sampleFactor*settings != null ) maxSum = sampleFactor*settings.maximumSize();
RandomRemovalFrequencyTable.java,ArrayList<E> array = new ArrayList<E>(table.keySet());,if (ArrayList<E>(table != null ) ArrayList<E> array = new ArrayList<E>(table.keySet());
BoundedLocalCache.java,node = node.getNextInAccessOrder();,if (node != null ) node = node.getNextInAccessOrder();
BoundedLocalCache.java,int weight = node.getWeight();,if (node != null ) int weight = node.getWeight();
BoundedLocalCache.java,K key = node.getKey();,if (node != null ) K key = node.getKey();
BoundedLocalCache.java,V value = transformer.apply(node.getValue());,if (transformer != null ) V value = transformer.apply(node.getValue());
BoundedLocalCache.java,maximum = cache.edenMaximum() + cache.mainMaximum();,if (cache != null ) maximum = cache.edenMaximum() + cache.mainMaximum();
EvictionTest.java,int size = context.original().size();,if (context != null ) int size = context.original().size();
BoundedLocalCache.java,K key = node.getKey();,if (node != null ) K key = node.getKey();
BoundedLocalCache.java,V value = transformer.apply(node.getValue());,if (transformer != null ) V value = transformer.apply(node.getValue());
BoundedLocalCache.java,proxy.maximumWeight = cache.maximum();,if (cache != null ) proxy.maximumWeight = cache.maximum();
BoundedLocalCache.java,proxy.maximumSize = cache.maximum();,if (cache != null ) proxy.maximumSize = cache.maximum();
Compactor.java,Stopwatch stopwatch = Stopwatch.createStarted();,if (Stopwatch != null ) Stopwatch stopwatch = Stopwatch.createStarted();
LocalCacheGenerator.java,this.constructor = MethodSpec.constructorBuilder();,if (MethodSpec != null ) this.constructor = MethodSpec.constructorBuilder();
NodeFactoryGenerator.java,TypeSpec.Builder nodeSubType = nodeGenerator.createNodeType();,if (nodeGenerator != null ) TypeSpec.Builder nodeSubType = nodeGenerator.createNodeType();
CountMin4TinyLfu.java,sketch = new FrequencySketch<>(settings.maximumSize());,if (FrequencySketch<>(settings != null ) sketch = new FrequencySketch<>(settings.maximumSize());
TinyLfu.java,sketch = new FrequencySketch<>(settings.maximumSize());,if (FrequencySketch<>(settings != null ) sketch = new FrequencySketch<>(settings.maximumSize());
CountMinTinyLfu.java,sampleSize = settings.sampleSize();,if (settings != null ) sampleSize = settings.sampleSize();
TinyLfu.java,long candidateFreq = sketch.frequency(candidateKey.hashCode());,if (sketch != null ) long candidateFreq = sketch.frequency(candidateKey.hashCode());
TinyLfu.java,long victimFreq = sketch.frequency(victimKey.hashCode());,if (sketch != null ) long victimFreq = sketch.frequency(victimKey.hashCode());
GoogleLirsPolicy.java,this.cache = new LirsMap<>(settings.maximumSize());,if (LirsMap<>(settings != null ) this.cache = new LirsMap<>(settings.maximumSize());
GoogleLirsPolicy.java,this.maximumSize = settings.maximumSize();,if (settings != null ) this.maximumSize = settings.maximumSize();
InfinispanLirsPolicy.java,maximumSize = new BasicSettings(config).maximumSize();,if (BasicSettings(config) != null ) maximumSize = new BasicSettings(config).maximumSize();
BoundedLocalCache.java,K key = node.getKey();,if (node != null ) K key = node.getKey();
BoundedLocalCache.java,V value = node.getValue();,if (node != null ) V value = node.getValue();
ConcurrentHashMapV7.java,seed = ThreadLocalRandom.current().nextInt();,if (ThreadLocalRandom != null ) seed = ThreadLocalRandom.current().nextInt();
BoundedLocalCache.java,proxy.ticker = cache.expirationTicker();,if (cache != null ) proxy.ticker = cache.expirationTicker();
BoundedLocalCache.java,proxy.ticker = cache.statsTicker();,if (cache != null ) proxy.ticker = cache.statsTicker();
BoundedLocalCache.java,proxy.ticker = Ticker.disabledTicker();,if (Ticker != null ) proxy.ticker = Ticker.disabledTicker();
ReferenceTest.java,Set<Integer> keys = context.firstMiddleLastKeys();,if (context != null ) Set<Integer> keys = context.firstMiddleLastKeys();
Ehcache3.java,CacheManager cacheManager = CacheManagerBuilder.newCacheManagerBuilder().build();,if (CacheManagerBuilder != null ) CacheManager cacheManager = CacheManagerBuilder.newCacheManagerBuilder().build();
AsyncLoadingCacheTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
AsyncLoadingCacheTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
AsyncLoadingCacheTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
AsyncLoadingCacheTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
AsyncLoadingCacheTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
AsyncLoadingCacheTest.java,Integer key = context.absentKey();,if (context != null ) Integer key = context.absentKey();
TinyLfu.java,long candidateCount = sketch.estimateCount(candidateKey.hashCode());,if (sketch != null ) long candidateCount = sketch.estimateCount(candidateKey.hashCode());
TinyLfu.java,long victimCount = sketch.estimateCount(victimKey.hashCode());,if (sketch != null ) long victimCount = sketch.estimateCount(victimKey.hashCode());
Simulator.java,Path filePath = settings.traceFile().path();,if (settings != null ) Path filePath = settings.traceFile().path();
CacheFactory.java,this.dispatcher = new EventDispatcher<>(ForkJoinPool.commonPool());,if (EventDispatcher<>(ForkJoinPool != null ) this.dispatcher = new EventDispatcher<>(ForkJoinPool.commonPool());
ReferenceTest.java,Set<Integer> keys = context.firstMiddleLastKeys();,if (context != null ) Set<Integer> keys = context.firstMiddleLastKeys();
ReferenceTest.java,Set<Integer> keys = context.original().keySet();,if (context != null ) Set<Integer> keys = context.original().keySet();
Simulator.java,Path filePath = settings.fileSource().path();,if (settings != null ) Path filePath = settings.fileSource().path();
Simulator.java,TraceFormat format = settings.fileSource().format();,if (settings != null ) TraceFormat format = settings.fileSource().format();
Synthetic.java,Hotspot hotspot = settings.synthetic().hotspot();,if (settings != null ) Hotspot hotspot = settings.synthetic().hotspot();
Synthetic.java,Uniform uniform = settings.synthetic().uniform();,if (settings != null ) Uniform uniform = settings.synthetic().uniform();
CounterGenerator.java,int ret = counter.getAndIncrement();,if (counter != null ) int ret = counter.getAndIncrement();
HistogramGenerator.java,str = in.readLine();,if (in != null ) str = in.readLine();
ScrambledZipfianGenerator.java,long ret=gen.nextLong();,if (ret=gen != null ) long ret=gen.nextLong();
ZipfianGenerator.java,double u=Utils.random().nextDouble();,if (u=Utils != null ) double u=Utils.random().nextDouble();
SamplingPolicy.java,"node = new Node(key, free.pop());","if (free != null ) node = new Node(key, free.pop());"
SamplingPolicy.java,node.accessTime = System.nanoTime();,if (System != null ) node.accessTime = System.nanoTime();
SamplingPolicy.java,ThreadLocalRandom random = ThreadLocalRandom.current();,if (ThreadLocalRandom != null ) ThreadLocalRandom random = ThreadLocalRandom.current();
SamplingPolicy.java,ThreadLocalRandom random = ThreadLocalRandom.current();,if (ThreadLocalRandom != null ) ThreadLocalRandom random = ThreadLocalRandom.current();
SamplingPolicy.java,this.insertionTime = System.nanoTime();,if (System != null ) this.insertionTime = System.nanoTime();
TwoQueuePolicy.java,this.maximumSize = settings.maximumSize();,if (settings != null ) this.maximumSize = settings.maximumSize();
JackrabbitLirsPolicy.java,CacheStats stats = cache.stats();,if (cache != null ) CacheStats stats = cache.stats();
Simulator.java,String packageName = Simulator.class.getPackage().getName();,if (Simulator != null ) String packageName = Simulator.class.getPackage().getName();
LinkedPolicy.java,Node node = data.get(event.keyHash());,if (data != null ) Node node = data.get(event.keyHash());
SamplingPolicy.java,this.free = new ArrayDeque<Integer>(settings.maximumSize());,if (ArrayDeque<Integer>(settings != null ) this.free = new ArrayDeque<Integer>(settings.maximumSize());
SamplingPolicy.java,Node node = data.get(event.keyHash());,if (data != null ) Node node = data.get(event.keyHash());
SamplingPolicy.java,node.accessTime = System.nanoTime();,if (System != null ) node.accessTime = System.nanoTime();
SamplingPolicy.java,Node node = data.get(event.keyHash());,if (data != null ) Node node = data.get(event.keyHash());
SamplingPolicy.java,Node node = data.remove(event.keyHash());,if (data != null ) Node node = data.remove(event.keyHash());
Simulator.java,remaining = settings.policies().size();,if (settings != null ) remaining = settings.policies().size();
AsyncLoadingCacheTest.java,CompletableFuture<Integer> value = CompletableFuture.completedFuture(context.absentValue());,if (CompletableFuture != null ) CompletableFuture<Integer> value = CompletableFuture.completedFuture(context.absentValue());
AsyncLoadingCacheTest.java,CompletableFuture<Integer> value = CompletableFuture.completedFuture(context.absentValue());,if (CompletableFuture != null ) CompletableFuture<Integer> value = CompletableFuture.completedFuture(context.absentValue());
ReferenceTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ReferenceTest.java,long count = context.initialSize() - cache.estimatedSize();,if (cache != null ) long count = context.initialSize() - cache.estimatedSize();
ReferenceTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ReferenceTest.java,WeakReference<Integer> weakKey = new WeakReference<>(context.firstKey());,if (WeakReference<>(context != null ) WeakReference<Integer> weakKey = new WeakReference<>(context.firstKey());
ReferenceTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
CacheGenerator.java,boolean expirationIncompatible = cacheSpec.expirationRequired() && !context.expires();,if (!context != null ) boolean expirationIncompatible = cacheSpec.expirationRequired() && !context.expires();
ExpireAfterAccessTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpireAfterAccessTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpireAfterAccessTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpireAfterAccessTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpireAfterAccessTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpireAfterAccessTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpireAfterAccessTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ExpireAfterAccessTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpireAfterAccessTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpireAfterAccessTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpireAfterAccessTest.java,CompletableFuture<Integer> future = CompletableFuture.completedFuture(context.absentValue());,if (CompletableFuture != null ) CompletableFuture<Integer> future = CompletableFuture.completedFuture(context.absentValue());
ExpireAfterAccessTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpireAfterAccessTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpireAfterAccessTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpireAfterAccessTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ExpireAfterAccessTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpireAfterAccessTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ExpireAfterAccessTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpireAfterAccessTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ExpireAfterAccessTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpireAfterAccessTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ExpireAfterAccessTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ExpireAfterAccessTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpireAfterAccessTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ExpireAfterAccessTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ExpireAfterAccessTest.java,Integer value = context.absentValue();,if (context != null ) Integer value = context.absentValue();
ExpireAfterAccessTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpireAfterAccessTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ExpireAfterAccessTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ExpireAfterAccessTest.java,Integer value = context.absentValue();,if (context != null ) Integer value = context.absentValue();
ExpireAfterAccessTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ExpireAfterAccessTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ExpireAfterAccessTest.java,Integer value = context.absentValue();,if (context != null ) Integer value = context.absentValue();
ExpireAfterAccessTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ExpireAfterAccessTest.java,Integer value = context.absentValue();,if (context != null ) Integer value = context.absentValue();
ExpireAfterWriteTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpireAfterWriteTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpireAfterWriteTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpireAfterWriteTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpireAfterWriteTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpireAfterWriteTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpireAfterWriteTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ExpireAfterWriteTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpireAfterWriteTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpireAfterWriteTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpireAfterWriteTest.java,CompletableFuture<Integer> future = CompletableFuture.completedFuture(context.absentValue());,if (CompletableFuture != null ) CompletableFuture<Integer> future = CompletableFuture.completedFuture(context.absentValue());
ExpireAfterWriteTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpireAfterWriteTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpireAfterWriteTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpireAfterWriteTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ExpireAfterWriteTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpireAfterWriteTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ExpireAfterWriteTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpireAfterWriteTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ExpireAfterWriteTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpireAfterWriteTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ExpireAfterWriteTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ExpireAfterWriteTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpireAfterWriteTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ExpireAfterWriteTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ExpireAfterWriteTest.java,Integer value = context.absentValue();,if (context != null ) Integer value = context.absentValue();
ExpireAfterWriteTest.java,long count = context.initialSize();,if (context != null ) long count = context.initialSize();
ExpireAfterWriteTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ExpireAfterWriteTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ExpireAfterWriteTest.java,Integer value = context.absentValue();,if (context != null ) Integer value = context.absentValue();
ExpireAfterWriteTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ExpireAfterWriteTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ExpireAfterWriteTest.java,Integer value = context.absentValue();,if (context != null ) Integer value = context.absentValue();
ExpireAfterWriteTest.java,Integer key = context.firstKey();,if (context != null ) Integer key = context.firstKey();
ExpireAfterWriteTest.java,Integer value = context.absentValue();,if (context != null ) Integer value = context.absentValue();
BoundedLocalCache.java,oldWeight = prior.getWeight();,if (prior != null ) oldWeight = prior.getWeight();
BoundedLocalCache.java,long now = expirationTicker().read();,if (expirationTicker() != null ) long now = expirationTicker().read();
BoundedLocalCache.java,long now = expirationTicker().read();,if (expirationTicker() != null ) long now = expirationTicker().read();
BoundedLocalCache.java,long now = expirationTicker().read();,if (expirationTicker() != null ) long now = expirationTicker().read();
BoundedLocalCache.java,long now = expirationTicker().read();,if (expirationTicker() != null ) long now = expirationTicker().read();
BoundedLocalCache.java,long now = ticker().read();,if (ticker() != null ) long now = ticker().read();
BoundedLocalCache.java,long now = ticker().read();,if (ticker() != null ) long now = ticker().read();
BoundedLocalCache.java,final long now = ticker().read();,if (ticker() != null ) final long now = ticker().read();
BoundedLocalCache.java,long now = ticker().read();,if (ticker() != null ) long now = ticker().read();
BoundedLocalCache.java,long now = ticker().read();,if (ticker() != null ) long now = ticker().read();
BoundedLocalCache.java,long now = ticker().read();,if (ticker() != null ) long now = ticker().read();
BoundedLocalCache.java,long now = ticker().read();,if (ticker() != null ) long now = ticker().read();
BoundedLocalCache.java,long now = ticker().read();,if (ticker() != null ) long now = ticker().read();
BoundedLocalCache.java,long now = ticker().read();,if (ticker() != null ) long now = ticker().read();
BoundedLocalCache.java,long now = ticker().read();,if (ticker() != null ) long now = ticker().read();
BoundedLocalCache.java,final long now = ticker().read();,if (ticker() != null ) final long now = ticker().read();
BoundedLocalCache.java,proxy.ticker = cache.ticker();,if (cache != null ) proxy.ticker = cache.ticker();
LocalAsyncLoadingCache.java,long now = cache.ticker().read();,if (cache != null ) long now = cache.ticker().read();
LocalAsyncLoadingCache.java,long now = cache.ticker().read();,if (cache != null ) long now = cache.ticker().read();
LocalAsyncLoadingCache.java,this.now = cache.ticker().read();,if (cache != null ) this.now = cache.ticker().read();
LocalAsyncLoadingCache.java,long now = ticker.read();,if (ticker != null ) long now = ticker.read();
LocalCache.java,long startTime = ticker().read();,if (ticker() != null ) long startTime = ticker().read();
LocalCache.java,long startTime = ticker().read();,if (ticker() != null ) long startTime = ticker().read();
CacheWriterVerifier.java,boolean mayVerify = context.isStrongKeys() && !context.isAsync();,if (!context != null ) boolean mayVerify = context.isStrongKeys() && !context.isAsync();
GuavaCacheFromContext.java,Integer castKey = notification.getKey();,if (notification != null ) Integer castKey = notification.getKey();
GuavaCacheFromContext.java,Integer castValue = notification.getValue();,if (notification != null ) Integer castValue = notification.getValue();
GuavaCacheFromContext.java,key = delegate.next();,if (delegate != null ) key = delegate.next();
GuavaCacheFromContext.java,entry = delegate.next();,if (delegate != null ) entry = delegate.next();
GuavaCacheFromContext.java,entry = delegate.next();,if (delegate != null ) entry = delegate.next();
ConcurrentLinkedLazyQueue.java,Node<E> prev = cursor.getPrevRelaxed();,if (cursor != null ) Node<E> prev = cursor.getPrevRelaxed();
ConcurrentLinkedLazyQueue.java,Node<E> next = first.getNextRelaxed();,if (first != null ) Node<E> next = first.getNextRelaxed();
ConcurrentLinkedLazyQueue.java,Node<E> found = slot.get();,if (slot != null ) Node<E> found = slot.get();
ConcurrentLinkedLazyQueue.java,found = slot.get();,if (slot != null ) found = slot.get();
ConcurrentLinkedLazyQueue.java,cursor = cursor.getNextRelaxed();,if (cursor != null ) cursor = cursor.getNextRelaxed();
ConcurrentLinkedLazyQueue.java,cursor = cursor.getNextRelaxed();,if (cursor != null ) cursor = cursor.getNextRelaxed();
ConcurrentLinkedLazyQueueTest.java,Integer first = queue.peek();,if (queue != null ) Integer first = queue.peek();
ConcurrentLinkedLazyQueueTest.java,Collection<Integer> removed = queue.drain();,if (queue != null ) Collection<Integer> removed = queue.drain();
ConcurrentLinkedLazyQueueTest.java,Integer first = queue.peek();,if (queue != null ) Integer first = queue.peek();
ConcurrentLinkedLazyQueueTest.java,Integer value = queue.remove();,if (queue != null ) Integer value = queue.remove();
ConcurrentLinkedLazyQueueTest.java,Integer first = queue.peek();,if (queue != null ) Integer first = queue.peek();
ConcurrentLinkedLazyQueueTest.java,Integer value = queue.peek();,if (queue != null ) Integer value = queue.peek();
ConcurrentLinkedLazyQueueTest.java,Integer first = queue.peek();,if (queue != null ) Integer first = queue.peek();
ConcurrentLinkedLazyQueueTest.java,Integer first = queue.peek();,if (queue != null ) Integer first = queue.peek();
ConcurrentLinkedLazyQueueTest.java,Iterator<Integer> it = queue.iterator();,if (queue != null ) Iterator<Integer> it = queue.iterator();
ConcurrentLinkedLazyQueueTest.java,Iterator<Integer> it = queue.iterator();,if (queue != null ) Iterator<Integer> it = queue.iterator();
ConcurrentLinkedLazyQueueTest.java,Object[] actual = queue.toArray();,if (queue != null ) Object[] actual = queue.toArray();
ConcurrentLinkedLazyQueueTest.java,Object[] params = testResult.getParameters();,if (testResult != null ) Object[] params = testResult.getParameters();
BoundedLocalCache.java,long now = ticker().read();,if (ticker() != null ) long now = ticker().read();
BoundedLocalCache.java,final long now = ticker().read();,if (ticker() != null ) final long now = ticker().read();
BoundedLocalCache.java,oldValue = prior.getValue();,if (prior != null ) oldValue = prior.getValue();
BoundedLocalCache.java,V value = prior.getValue();,if (prior != null ) V value = prior.getValue();
BoundedLocalCache.java,final int oldWeight = prior.getWeight();,if (prior != null ) final int oldWeight = prior.getWeight();
BoundedLocalCache.java,final long now = ticker().read();,if (ticker() != null ) final long now = ticker().read();
BoundedLocalCache.java,V oldValue = prior.getValue();,if (prior != null ) V oldValue = prior.getValue();
BoundedLocalCache.java,int oldWeight = prior.getWeight();,if (prior != null ) int oldWeight = prior.getWeight();
BoundedLocalCache.java,K nodeKey = node.getKey();,if (node != null ) K nodeKey = node.getKey();
BoundedLocalCache.java,val = node.getValue();,if (node != null ) val = node.getValue();
BoundedLocalCache.java,K key = node.getKey();,if (node != null ) K key = node.getKey();
BoundedLocalCache.java,V value = node.getValue();,if (node != null ) V value = node.getValue();
BoundedLocalCache.java,oldValue = node.getValue();,if (node != null ) oldValue = node.getValue();
BoundedLocalCache.java,oldWeight = node.getWeight();,if (node != null ) oldWeight = node.getWeight();
BoundedLocalCache.java,V value = node.getValue();,if (node != null ) V value = node.getValue();
BoundedLocalCache.java,proxy.maximumSize = cache.maximum();,if (cache != null ) proxy.maximumSize = cache.maximum();
BoundedLocalCache.java,V oldValue = node.getValue();,if (node != null ) V oldValue = node.getValue();
BufferTest.java,long recorded = buffer.recorded();,if (buffer != null ) long recorded = buffer.recorded();
BufferTest.java,long drained = buffer.drained();,if (buffer != null ) long drained = buffer.drained();
BufferTest.java,long recorded = buffer.recorded();,if (buffer != null ) long recorded = buffer.recorded();
BufferTest.java,boolean shouldDrain = buffer.record();,if (buffer != null ) boolean shouldDrain = buffer.record();
BufferTest.java,long drained = buffer.drained();,if (buffer != null ) long drained = buffer.drained();
BufferTest.java,long recorded = buffer.recorded();,if (buffer != null ) long recorded = buffer.recorded();
FastFlowBuffer.java,long tail = writeCounter.get();,if (writeCounter != null ) long tail = writeCounter.get();
FastFlowBuffer.java,long headCache = readCache.get();,if (readCache != null ) long headCache = readCache.get();
FastFlowBuffer.java,long head = readCounter.get();,if (readCounter != null ) long head = readCounter.get();
FastFlowBuffer.java,long head = readCounter.get();,if (readCounter != null ) long head = readCounter.get();
ManyToOneBuffer.java,long head = readCounter.get();,if (readCounter != null ) long head = readCounter.get();
ManyToOneBuffer.java,long tail = writeCounter.get();,if (writeCounter != null ) long tail = writeCounter.get();
ManyToOneBuffer.java,long head = readCounter.get();,if (readCounter != null ) long head = readCounter.get();
ManyToOneBuffer.java,long tail = writeCounter.get();,if (writeCounter != null ) long tail = writeCounter.get();
ComputeBenchmark.java,int index = ThreadLocalRandom.current().nextInt();,if (ThreadLocalRandom != null ) int index = ThreadLocalRandom.current().nextInt();
GetPutBenchmark.java,int index = ThreadLocalRandom.current().nextInt();,if (ThreadLocalRandom != null ) int index = ThreadLocalRandom.current().nextInt();
CacheProfiler.java,Long id = Thread.currentThread().getId();,if (Thread != null ) Long id = Thread.currentThread().getId();
CacheProfiler.java,Random random = ThreadLocalRandom.current();,if (ThreadLocalRandom != null ) Random random = ThreadLocalRandom.current();
CacheProfiler.java,Long key = new Long(random.nextLong());,if (Long(random != null ) Long key = new Long(random.nextLong());
BoundedLocalCache.java,final long now = ticker().read();,if (ticker() != null ) final long now = ticker().read();
BoundedLocalCache.java,final DrainStatus status = drainStatus.get();,if (drainStatus != null ) final DrainStatus status = drainStatus.get();
BoundedLocalCache.java,K key = node.getKey();,if (node != null ) K key = node.getKey();
BoundedLocalCache.java,final Runnable task = writeQueue().poll();,if (writeQueue() != null ) final Runnable task = writeQueue().poll();
TraceEvent.java,int length = input.readInt();,if (input != null ) int length = input.readInt();
TraceEvent.java,chars[i] = input.readChar();,if (input != null ) chars[i] = input.readChar();
TraceEvent.java,event.id = input.readLong();,if (input != null ) event.id = input.readLong();
TraceEvent.java,event.keyHash = input.readInt();,if (input != null ) event.keyHash = input.readInt();
TraceEvent.java,event.weight = input.readInt();,if (input != null ) event.weight = input.readInt();
TraceEvent.java,event.timestamp = input.readLong();,if (input != null ) event.timestamp = input.readLong();
CacheProxy.java,long start = ticker.read();,if (ticker != null ) long start = ticker.read();
CacheProxy.java,long start = ticker.read();,if (ticker != null ) long start = ticker.read();
LoadingCacheProxy.java,final long start = ticker.read();,if (ticker != null ) final long start = ticker.read();
LoadingCacheProxy.java,final long start = ticker.read();,if (ticker != null ) final long start = ticker.read();
SingleConsumerQueue.java,cursor = cursor.getNextRelaxed();,if (cursor != null ) cursor = cursor.getNextRelaxed();
ConcurrentLinkedStack.java,nextValue = next.get();,if (next != null ) nextValue = next.get();
ConcurrentLinkedStack.java,nextValue = next.get();,if (next != null ) nextValue = next.get();
MultiThreadedTest.java,int id = index.getAndIncrement();,if (index != null ) int id = index.getAndIncrement();
MultiThreadedTest.java,int id = index.getAndIncrement();,if (index != null ) int id = index.getAndIncrement();
ConcurrentLinkedStack.java,Node<E> node = top.get();,if (top != null ) Node<E> node = top.get();
ConcurrentLinkedStack.java,Node<E> node = top.get();,if (top != null ) Node<E> node = top.get();
ConcurrentLinkedStack.java,Node<E> current = top.get();,if (top != null ) Node<E> current = top.get();
ConcurrentLinkedStack.java,node.next = top.get();,if (top != null ) node.next = top.get();
ConcurrentLinkedStack.java,next = top.get();,if (top != null ) next = top.get();
ConcurrentLinkedStack.java,Object found = slot.get();,if (slot != null ) Object found = slot.get();
ConcurrentLinkedStack.java,found = slot.get();,if (slot != null ) found = slot.get();
ConcurrentLinkedStack.java,Object found = slot.get();,if (slot != null ) Object found = slot.get();
ConcurrentLinkedStack.java,Object found = slot.get();,if (slot != null ) Object found = slot.get();
ConcurrentLinkedStack.java,found = slot.get();,if (slot != null ) found = slot.get();
EliminationStackTest.java,Iterator<Integer> it = stack.iterator();,if (stack != null ) Iterator<Integer> it = stack.iterator();
EliminationStackTest.java,Integer first = stack.peek();,if (stack != null ) Integer first = stack.peek();
EliminationStackTest.java,Integer value = stack.pop();,if (stack != null ) Integer value = stack.pop();
EliminationStackTest.java,Integer value = stack.peek();,if (stack != null ) Integer value = stack.peek();
EliminationStackTest.java,Queue<Integer> queue = stack.asLifoQueue();,if (stack != null ) Queue<Integer> queue = stack.asLifoQueue();
EliminationStackTest.java,Iterator<Integer> it = stack.iterator();,if (stack != null ) Iterator<Integer> it = stack.iterator();
EliminationStackTest.java,Iterator<Integer> it = stack.iterator();,if (stack != null ) Iterator<Integer> it = stack.iterator();
EliminationStackTest.java,Integer first = stack.peek();,if (stack != null ) Integer first = stack.peek();
SingleConsumerQueue.java,cursor = cursor.getNextRelaxed();,if (cursor != null ) cursor = cursor.getNextRelaxed();
SingleConsumerQueue.java,Node<E> cursor = head.getNextRelaxed();,if (head != null ) Node<E> cursor = head.getNextRelaxed();
SingleConsumerQueue.java,Node<E> next = head.getNextRelaxed();,if (head != null ) Node<E> next = head.getNextRelaxed();
SingleConsumerQueue.java,Node<E> next = head.getNextRelaxed();,if (head != null ) Node<E> next = head.getNextRelaxed();
SingleConsumerQueue.java,Node<E> cursor = prev.getNextRelaxed();,if (prev != null ) Node<E> cursor = prev.getNextRelaxed();
SingleConsumerQueue.java,Node<E> next = cursor.getNextRelaxed();,if (cursor != null ) Node<E> next = cursor.getNextRelaxed();
SingleConsumerQueue.java,Node<E> cursor = prev.getNextRelaxed();,if (prev != null ) Node<E> cursor = prev.getNextRelaxed();
SingleConsumerQueue.java,Node<E> next = cursor.getNextRelaxed();,if (cursor != null ) Node<E> next = cursor.getNextRelaxed();
SingleConsumerQueue.java,cursor = prev.getNextRelaxed();,if (prev != null ) cursor = prev.getNextRelaxed();
BoundedBuffer.java,long head = readCounter.get();,if (readCounter != null ) long head = readCounter.get();
BoundedBuffer.java,long tail = writeCounter.get();,if (writeCounter != null ) long tail = writeCounter.get();
BoundedBuffer.java,long head = readCounter.get();,if (readCounter != null ) long head = readCounter.get();
BoundedBuffer.java,long tail = writeCounter.get();,if (writeCounter != null ) long tail = writeCounter.get();
SingleConsumerQueue.java,Node<E> cursor = tail.getNextRelaxed();,if (tail != null ) Node<E> cursor = tail.getNextRelaxed();
SingleConsumerQueue.java,Node<E> next = tail.getNextRelaxed();,if (tail != null ) Node<E> next = tail.getNextRelaxed();
SingleConsumerQueue.java,Node<E> next = tail.getNextRelaxed();,if (tail != null ) Node<E> next = tail.getNextRelaxed();
SingleConsumerQueue.java,cursor = cursor.getNextRelaxed();,if (cursor != null ) cursor = cursor.getNextRelaxed();
BoundedBuffer.java,long head = readCounter.get();,if (readCounter != null ) long head = readCounter.get();
BoundedBuffer.java,long tail = writeCounter.get();,if (writeCounter != null ) long tail = writeCounter.get();
BoundedBuffer.java,long head = readCounter.get();,if (readCounter != null ) long head = readCounter.get();
BoundedBuffer.java,long tail = writeCounter.get();,if (writeCounter != null ) long tail = writeCounter.get();
BoundedBuffer.java,E e = slot.get();,if (slot != null ) E e = slot.get();
BoundedBuffer.java,writes += counter.intValue();,if (counter != null ) writes += counter.intValue();
BoundedBuffer.java,reads += counter.intValue();,if (counter != null ) reads += counter.intValue();
BoundedLocalCache.java,long writeTime = node.getWriteTime();,if (node != null ) long writeTime = node.getWriteTime();
BoundedLocalCache.java,K key = node.getKey();,if (node != null ) K key = node.getKey();
BoundedBuffer.java,final long writes = counter.get();,if (counter != null ) final long writes = counter.get();
BoundedBuffer.java,final Object value = slot.get();,if (slot != null ) final Object value = slot.get();
BoundedBuffer.java,final Object value = slot.get();,if (slot != null ) final Object value = slot.get();
CacheGenerator.java,"Set<Stats> statistics = filterTypes(stats, cacheSpec.stats());","if (cacheSpec != null ) Set<Stats> statistics = filterTypes(stats, cacheSpec.stats());"
CacheGenerator.java,"Set<ReferenceType> keys = filterTypes(keyType, cacheSpec.keys());","if (cacheSpec != null ) Set<ReferenceType> keys = filterTypes(keyType, cacheSpec.keys());"
CacheGenerator.java,"Set<ReferenceType> values = filterTypes(valueType, cacheSpec.values());","if (cacheSpec != null ) Set<ReferenceType> values = filterTypes(valueType, cacheSpec.values());"
CacheGenerator.java,"Set<Compute> computations = filterTypes(compute, cacheSpec.compute());","if (cacheSpec != null ) Set<Compute> computations = filterTypes(compute, cacheSpec.compute());"
CacheGenerator.java,"Set<Implementation> implementations = filterTypes(implementation, cacheSpec.implementation());","if (cacheSpec != null ) Set<Implementation> implementations = filterTypes(implementation, cacheSpec.implementation());"
CacheProvider.java,params[i] = entry.getKey().ticker();,if (entry != null ) params[i] = entry.getKey().ticker();
BoundedLocalCache.java,K key = node.getKey();,if (node != null ) K key = node.getKey();
BoundedLocalCache.java,V value = node.getValue();,if (node != null ) V value = node.getValue();
BoundedLocalCache.java,K key = node.getKey();,if (node != null ) K key = node.getKey();
BoundedLocalCache.java,V value = node.getValue();,if (node != null ) V value = node.getValue();
BoundedLocalCache.java,K key = node.getKey();,if (node != null ) K key = node.getKey();
BoundedLocalCache.java,V value = node.getValue();,if (node != null ) V value = node.getValue();
BoundedLocalCache.java,V value = node.getValue();,if (node != null ) V value = node.getValue();
BoundedLocalCache.java,V oldValue = node.makeRetired();,if (node != null ) V oldValue = node.makeRetired();
BoundedLocalCache.java,oldValue = node.getValue();,if (node != null ) oldValue = node.getValue();
ComputeBenchmark.java,ints[i] = generator.nextInt();,if (generator != null ) ints[i] = generator.nextInt();
BoundedLocalCache.java,proxy.weigher = cache.weigher();,if (cache != null ) proxy.weigher = cache.weigher();
BoundedLocalCache.java,final long writeCount = counter.get();,if (counter != null ) final long writeCount = counter.get();
BoundedLocalCacheTest.java,int index = BoundedLocalCache.readBufferIndex();,if (BoundedLocalCache != null ) int index = BoundedLocalCache.readBufferIndex();
BoundedLocalCacheTest.java,int index = BoundedLocalCache.readBufferIndex();,if (BoundedLocalCache != null ) int index = BoundedLocalCache.readBufferIndex();
BoundedLocalCacheTest.java,NonReentrantLock lock = localCache.evictionLock();,if (localCache != null ) NonReentrantLock lock = localCache.evictionLock();
ReadBufferBenchmark.java,final int writeCount = writeCounter.get();,if (writeCounter != null ) final int writeCount = writeCounter.get();
ReadBufferBenchmark.java,int readCount = readCounter.get();,if (readCounter != null ) int readCount = readCounter.get();
ReadBufferBenchmark.java,Boolean value = buffer[index].getRelaxed();,if (buffer[index] != null ) Boolean value = buffer[index].getRelaxed();
ReadBufferBenchmark.java,final int writeCount = writeCounter.getRelaxed();,if (writeCounter != null ) final int writeCount = writeCounter.getRelaxed();
ReadBufferBenchmark.java,int readCount = readCounter.get();,if (readCounter != null ) int readCount = readCounter.get();
ReadBufferBenchmark.java,Boolean value = buffer[index].getRelaxed();,if (buffer[index] != null ) Boolean value = buffer[index].getRelaxed();
ReadBufferBenchmark.java,final int writeCount = writeCounter.getAndIncrement();,if (writeCounter != null ) final int writeCount = writeCounter.getAndIncrement();
ReadBufferBenchmark.java,int readCount = readCounter.get();,if (readCounter != null ) int readCount = readCounter.get();
ReadBufferBenchmark.java,int readCount = head.getRelaxed();,if (head != null ) int readCount = head.getRelaxed();
ReadBufferBenchmark.java,int writeCount = tail.getRelaxed();,if (tail != null ) int writeCount = tail.getRelaxed();
EliminationStack.java,long id = Thread.currentThread().getId();,if (Thread != null ) long id = Thread.currentThread().getId();
BoundedLocalCacheTest.java,int index = BoundedLocalCache.readBufferIndex();,if (BoundedLocalCache != null ) int index = BoundedLocalCache.readBufferIndex();
BoundedLocalCacheTest.java,long drained = drainCounter.get();,if (drainCounter != null ) long drained = drainCounter.get();
LocalCacheGenerator.java,this.constructor = MethodSpec.constructorBuilder();,if (MethodSpec != null ) this.constructor = MethodSpec.constructorBuilder();
BoundedLocalCache.java,List<Object> keys = new ArrayList<>(data.size());,if (ArrayList<>(data != null ) List<Object> keys = new ArrayList<>(data.size());
BoundedLocalCache.java,List<Object> keys = new ArrayList<>(data.size());,if (ArrayList<>(data != null ) List<Object> keys = new ArrayList<>(data.size());
BoundedLocalCache.java,proxy.maximumSize = cache.capacity();,if (cache != null ) proxy.maximumSize = cache.capacity();
BoundedLocalCache.java,proxy.maximumWeight = cache.capacity();,if (cache != null ) proxy.maximumWeight = cache.capacity();
BoundedLocalCache.java,this.isWeighted = builder.isWeighted();,if (builder != null ) this.isWeighted = builder.isWeighted();
BoundedLocalCache.java,final DrainStatus status = replacement.drainStatus();,if (replacement != null ) final DrainStatus status = replacement.drainStatus();
BoundedLocalCacheTest.java,NonReentrantLock lock = localCache.replacement.evictionLock();,if (localCache != null ) NonReentrantLock lock = localCache.replacement.evictionLock();
BoundedLocalCache.java,data = new ConcurrentHashMap<>(builder.getInitialCapacity());,if (ConcurrentHashMap<>(builder != null ) data = new ConcurrentHashMap<>(builder.getInitialCapacity());
AbstractLinkedPolicy.java,Node node = data.get(event.hash());,if (data != null ) Node node = data.get(event.hash());
AbstractSamplingPolicy.java,Node node = data.get(event.hash());,if (data != null ) Node node = data.get(event.hash());
AbstractSamplingPolicy.java,Node node = data.get(event.hash());,if (data != null ) Node node = data.get(event.hash());
AbstractSamplingPolicy.java,Node node = data.remove(event.hash());,if (data != null ) Node node = data.remove(event.hash());
CacheEvent.java,event.cacheId = input.readInt();,if (input != null ) event.cacheId = input.readInt();
CacheEvent.java,event.hash = input.readInt();,if (input != null ) event.hash = input.readInt();
CacheEvent.java,event.weightDifference = input.readInt();,if (input != null ) event.weightDifference = input.readInt();
CacheEvent.java,event.timestamp = input.readLong();,if (input != null ) event.timestamp = input.readLong();
CacheEventTest.java,CacheEvent recorded = CacheEvent.fromTextRecord(output.toString());,if (CacheEvent != null ) CacheEvent recorded = CacheEvent.fromTextRecord(output.toString());
CaffeineConfiguration.java,expireAfterAccessNanos = OptionalLong.empty();,if (OptionalLong != null ) expireAfterAccessNanos = OptionalLong.empty();
CaffeineConfiguration.java,expireAfterWriteNanos = OptionalLong.empty();,if (OptionalLong != null ) expireAfterWriteNanos = OptionalLong.empty();
CaffeineConfiguration.java,maximumWeight = OptionalLong.empty();,if (OptionalLong != null ) maximumWeight = OptionalLong.empty();
CaffeineConfiguration.java,maximumSize = OptionalLong.empty();,if (OptionalLong != null ) maximumSize = OptionalLong.empty();
LocalAsyncLoadingCache.java,CompletableFuture<V> future = iterator.next();,if (iterator != null ) CompletableFuture<V> future = iterator.next();
CacheManagerImpl.java,cacheLoader = config.getCacheLoaderFactory().create();,if (config != null ) cacheLoader = config.getCacheLoaderFactory().create();
CacheManagerImpl.java,Ticker ticker = Ticker.systemTicker();,if (Ticker != null ) Ticker ticker = Ticker.systemTicker();
CacheManagerImpl.java,ExpiryPolicy expiry = config.getExpiryPolicyFactory().create();,if (config != null ) ExpiryPolicy expiry = config.getExpiryPolicyFactory().create();
CacheProxy.java,final ClassLoader classLoader = cacheManager.getClassLoader();,if (cacheManager != null ) final ClassLoader classLoader = cacheManager.getClassLoader();
CacheProxy.java,expiry = configuration.getExpiryPolicyFactory().create();,if (configuration != null ) expiry = configuration.getExpiryPolicyFactory().create();
CacheProxy.java,entry = delegate.next();,if (delegate != null ) entry = delegate.next();
BoundedLocalCache.java,K key = node.getKey();,if (node != null ) K key = node.getKey();
BoundedLocalCache.java,proxy.weakKeys = cache.nodeFactory.weakKeys();,if (cache != null ) proxy.weakKeys = cache.nodeFactory.weakKeys();
IsValidBoundedLocalCache.java,boolean fullyDrained = cache.writeQueue().isEmpty();,if (cache != null ) boolean fullyDrained = cache.writeQueue().isEmpty();
BoundedLocalCache.java,long expirationTime = now - replacement.getExpireAfterAccessNanos();,if (replacement != null ) long expirationTime = now - replacement.getExpireAfterAccessNanos();
BoundedLocalCache.java,long expirationTime = now - replacement.expireAfterWriteNanos();,if (replacement != null ) long expirationTime = now - replacement.expireAfterWriteNanos();
BoundedLocalCache.java,final Runnable task = replacement.writeBuffer().poll();,if (replacement != null ) final Runnable task = replacement.writeBuffer().poll();
BoundedLocalCache.java,proxy.expireAfterAccessNanos = cache.replacement.getExpireAfterAccessNanos();,if (cache != null ) proxy.expireAfterAccessNanos = cache.replacement.getExpireAfterAccessNanos();
BoundedLocalCache.java,proxy.expireAfterWriteNanos = cache.replacement.expireAfterWriteNanos();,if (cache != null ) proxy.expireAfterWriteNanos = cache.replacement.expireAfterWriteNanos();
BoundedLocalCache.java,proxy.refreshAfterWriteNanos = cache.replacement.refreshAfterWriteNanos();,if (cache != null ) proxy.refreshAfterWriteNanos = cache.replacement.refreshAfterWriteNanos();
BoundedLocalCache.java,proxy.refreshAfterWriteNanos = cache.replacement.refreshAfterWriteNanos();,if (cache != null ) proxy.refreshAfterWriteNanos = cache.replacement.refreshAfterWriteNanos();
PageReplacement.java,expireAfterAccessNanos = builder.getExpireAfterAccessNanos();,if (builder != null ) expireAfterAccessNanos = builder.getExpireAfterAccessNanos();
PageReplacement.java,expireAfterWriteNanos = builder.getExpireAfterWriteNanos();,if (builder != null ) expireAfterWriteNanos = builder.getExpireAfterWriteNanos();
PageReplacement.java,refreshAfterWriteNanos = builder.getRefreshNanos();,if (builder != null ) refreshAfterWriteNanos = builder.getRefreshNanos();
IsValidBoundedLocalCache.java,boolean fullyDrained = cache.replacement.writeBuffer().isEmpty();,if (cache != null ) boolean fullyDrained = cache.replacement.writeBuffer().isEmpty();
BoundedLocalCache.java,long now = replacement.getTicker().read();,if (replacement != null ) long now = replacement.getTicker().read();
BoundedLocalCache.java,long now = replacement.getTicker().read();,if (replacement != null ) long now = replacement.getTicker().read();
BoundedLocalCache.java,final long now = replacement.getTicker().read();,if (replacement != null ) final long now = replacement.getTicker().read();
BoundedLocalCache.java,long now = replacement.getTicker().read();,if (replacement != null ) long now = replacement.getTicker().read();
BoundedLocalCache.java,long now = replacement.getTicker().read();,if (replacement != null ) long now = replacement.getTicker().read();
BoundedLocalCache.java,final long now = replacement.getTicker().read();,if (replacement != null ) final long now = replacement.getTicker().read();
BoundedLocalCache.java,long now = replacement.getTicker().read();,if (replacement != null ) long now = replacement.getTicker().read();
BoundedLocalCache.java,final long now = replacement.getTicker().read();,if (replacement != null ) final long now = replacement.getTicker().read();
BoundedLocalCache.java,final long now = replacement.getTicker().read();,if (replacement != null ) final long now = replacement.getTicker().read();
BoundedLocalCache.java,final long now = replacement.getTicker().read();,if (replacement != null ) final long now = replacement.getTicker().read();
BoundedLocalCache.java,proxy.ticker = cache.replacement.getTicker();,if (cache != null ) proxy.ticker = cache.replacement.getTicker();
BoundedLocalCache.java,proxy.weigher = cache.replacement.weigher();,if (cache != null ) proxy.weigher = cache.replacement.weigher();
PageReplacement.java,ticker = builder.getTicker();,if (builder != null ) ticker = builder.getTicker();
BoundedLocalCache.java,proxy.isRecordingStats = cache.replacement.isRecordingStats();,if (cache != null ) proxy.isRecordingStats = cache.replacement.isRecordingStats();
PageReplacement.java,statsCounter = builder.getStatsCounterSupplier().get();,if (builder != null ) statsCounter = builder.getStatsCounterSupplier().get();
PageReplacement.java,isRecordingStats = builder.isRecordingStats();,if (builder != null ) isRecordingStats = builder.isRecordingStats();
BoundedLocalCache.java,proxy.removalListener = cache.replacement.removalListener();,if (cache != null ) proxy.removalListener = cache.replacement.removalListener();
PageReplacement.java,executor = builder.getExecutor();,if (builder != null ) executor = builder.getExecutor();
BoundedLocalCache.java,proxy.loader = cache.replacement.getLoader();,if (cache != null ) proxy.loader = cache.replacement.getLoader();
BoundedLocalCache.java,"Object keyRef = nodeFactory.newReferenceKey(key, replacement.getKeyReferenceQueue());","if (replacement != null ) Object keyRef = nodeFactory.newReferenceKey(key, replacement.getKeyReferenceQueue());"
BoundedLocalCache.java,"Object keyRef = nodeFactory.newReferenceKey(key, replacement.getKeyReferenceQueue());","if (replacement != null ) Object keyRef = nodeFactory.newReferenceKey(key, replacement.getKeyReferenceQueue());"
BoundedLocalCache.java,refreshNanos = builder.getRefreshNanos();,if (builder != null ) refreshNanos = builder.getRefreshNanos();
BoundedLocalCache.java,expireAfterWriteNanos = builder.getExpireAfterWriteNanos();,if (builder != null ) expireAfterWriteNanos = builder.getExpireAfterWriteNanos();
BoundedLocalCache.java,expireAfterAccessNanos = builder.getExpireAfterAccessNanos();,if (builder != null ) expireAfterAccessNanos = builder.getExpireAfterAccessNanos();
BoundedLocalCache.java,executor = builder.getExecutor();,if (builder != null ) executor = builder.getExecutor();
BoundedLocalCache.java,statsCounter = builder.getStatsCounterSupplier().get();,if (builder != null ) statsCounter = builder.getStatsCounterSupplier().get();
BoundedLocalCache.java,isRecordingStats = builder.isRecordingStats();,if (builder != null ) isRecordingStats = builder.isRecordingStats();
BoundedLocalCache.java,ticker = builder.getTicker();,if (builder != null ) ticker = builder.getTicker();
BoundedLocalCache.java,long now = ticker.read();,if (ticker != null ) long now = ticker.read();
BoundedLocalCache.java,long now = ticker.read();,if (ticker != null ) long now = ticker.read();
BoundedLocalCache.java,final DrainStatus status = drainStatus.get();,if (drainStatus != null ) final DrainStatus status = drainStatus.get();
BoundedLocalCache.java,final long now = ticker.read();,if (ticker != null ) final long now = ticker.read();
BoundedLocalCache.java,final long writeCount = readBufferWriteCount[bufferIndex].get();,if (readBufferWriteCount[bufferIndex] != null ) final long writeCount = readBufferWriteCount[bufferIndex].get();
BoundedLocalCache.java,final Runnable task = writeBuffer.poll();,if (writeBuffer != null ) final Runnable task = writeBuffer.poll();
BoundedLocalCache.java,long now = ticker.read();,if (ticker != null ) long now = ticker.read();
BoundedLocalCache.java,long now = ticker.read();,if (ticker != null ) long now = ticker.read();
BoundedLocalCache.java,final long now = ticker.read();,if (ticker != null ) final long now = ticker.read();
BoundedLocalCache.java,long now = ticker.read();,if (ticker != null ) long now = ticker.read();
BoundedLocalCache.java,final long now = ticker.read();,if (ticker != null ) final long now = ticker.read();
BoundedLocalCache.java,final long now = ticker.read();,if (ticker != null ) final long now = ticker.read();
BoundedLocalCache.java,final long now = ticker.read();,if (ticker != null ) final long now = ticker.read();
BoundedLocalCache.java,long age = cache.ticker.read() - node.getAccessTime();,if (node != null ) long age = cache.ticker.read() - node.getAccessTime();
BoundedLocalCache.java,long age = cache.ticker.read() - node.getWriteTime();,if (node != null ) long age = cache.ticker.read() - node.getWriteTime();
BoundedLocalCache.java,long age = cache.ticker.read() - node.getWriteTime();,if (node != null ) long age = cache.ticker.read() - node.getWriteTime();
IsValidBoundedLocalCache.java,boolean fullyDrained = map.writeBuffer.isEmpty();,if (map != null ) boolean fullyDrained = map.writeBuffer.isEmpty();
ReadBufferBenchmark.java,final int writeCount = writeCounter.get();,if (writeCounter != null ) final int writeCount = writeCounter.get();
IsValidBoundedLocalCache.java,weightedSize += node.getWeight();,if (node != null ) weightedSize += node.getWeight();
ReadBufferBenchmark.java,Boolean value = buffer[index].get();,if (buffer[index] != null ) Boolean value = buffer[index].get();
BoundedLocalCache.java,K key = current.getKey();,if (current != null ) K key = current.getKey();
BoundedLocalCacheTest.java,final Executor executor = Executors.newCachedThreadPool();,if (Executors != null ) final Executor executor = Executors.newCachedThreadPool();
MultiThreadedTest.java,ExecutorService es = Executors.newSingleThreadExecutor();,if (Executors != null ) ExecutorService es = Executors.newSingleThreadExecutor();
BoundedLocalCache.java,K key = node.getKey();,if (node != null ) K key = node.getKey();
BoundedLocalCache.java,V value = node.getValue();,if (node != null ) V value = node.getValue();
BoundedLocalCache.java,keyStrategy = ReferenceStrategy.forStength(builder.getKeyStrength());,if (ReferenceStrategy != null ) keyStrategy = ReferenceStrategy.forStength(builder.getKeyStrength());
BoundedLocalCache.java,valueStrategy = ReferenceStrategy.forStength(builder.getValueStrength());,if (ReferenceStrategy != null ) valueStrategy = ReferenceStrategy.forStength(builder.getValueStrength());
BoundedLocalCache.java,WeightedValue<V> current = node.get();,if (node != null ) WeightedValue<V> current = node.get();
BoundedLocalCache.java,oldWeightedValue = prior.get();,if (prior != null ) oldWeightedValue = prior.get();
BoundedLocalCache.java,WeightedValue<V> weightedValue = node.get();,if (node != null ) WeightedValue<V> weightedValue = node.get();
BoundedLocalCache.java,weightedValue = node.get();,if (node != null ) weightedValue = node.get();
BoundedLocalCache.java,oldWeightedValue = node.get();,if (node != null ) oldWeightedValue = node.get();
BoundedLocalCache.java,oldWeightedValue = node.get();,if (node != null ) oldWeightedValue = node.get();
BoundedLocalCache.java,WeightedValue<V> oldWeightedValue = prior.get();,if (prior != null ) WeightedValue<V> oldWeightedValue = prior.get();
BoundedLocalCache.java,WeightedValue<V> oldWeightedValue = prior.get();,if (prior != null ) WeightedValue<V> oldWeightedValue = prior.get();
BoundedLocalCache.java,final long now = ticker.read();,if (ticker != null ) final long now = ticker.read();
BoundedLocalCache.java,WeightedValue<V> oldWeightedValue = prior.get();,if (prior != null ) WeightedValue<V> oldWeightedValue = prior.get();
NodeGenerator.java,String name = keyStrength.name();,if (keyStrength != null ) String name = keyStrength.name();
CacheLoadingTest.java,List<LogRecord> logRecords = logHandler.getStoredLogRecords();,if (logHandler != null ) List<LogRecord> logRecords = logHandler.getStoredLogRecords();
BoundedLocalCache.java,long startTime = ticker.read();,if (ticker != null ) long startTime = ticker.read();
BoundedLocalCache.java,long startTime = ticker.read();,if (ticker != null ) long startTime = ticker.read();
UnboundedLocalCache.java,long startTime = ticker.read();,if (ticker != null ) long startTime = ticker.read();
UnboundedLocalCache.java,long startTime = ticker.read();,if (ticker != null ) long startTime = ticker.read();
UnboundedLocalCache.java,this.iterator = local.data.keySet().iterator();,if (local != null ) this.iterator = local.data.keySet().iterator();
UnboundedLocalCache.java,key = iterator.next();,if (iterator != null ) key = iterator.next();
UnboundedLocalCache.java,this.iterator = local.data.entrySet().iterator();,if (local != null ) this.iterator = local.data.entrySet().iterator();
UnboundedLocalCache.java,V value = local.get(entry.getKey());,if (local != null ) V value = local.get(entry.getKey());
UnboundedLocalCache.java,this.iterator = local.data.entrySet().iterator();,if (local != null ) this.iterator = local.data.entrySet().iterator();
UnboundedLocalCache.java,isRecordingStats = manual.cache.isRecordingStats();,if (manual != null ) isRecordingStats = manual.cache.isRecordingStats();
UnboundedLocalCache.java,removalListener = manual.cache.removalListener();,if (manual != null ) removalListener = manual.cache.removalListener();
Shared.java,long now = cache.ticker().read();,if (cache != null ) long now = cache.ticker().read();
Shared.java,long now = cache.ticker().read();,if (cache != null ) long now = cache.ticker().read();
Shared.java,this.now = cache.ticker().read();,if (cache != null ) this.now = cache.ticker().read();
Shared.java,V value = result.get(proxy.getKey());,if (result != null ) V value = result.get(proxy.getKey());
Shared.java,success = !loaded.isEmpty();,if (!loaded != null ) success = !loaded.isEmpty();
Shared.java,long now = ticker.read();,if (ticker != null ) long now = ticker.read();
Shared.java,CompletableFuture<V> future = iterator.next();,if (iterator != null ) CompletableFuture<V> future = iterator.next();
Shared.java,V value = AsMapView.this.get(entry.getKey());,if (AsMapView != null ) V value = AsMapView.this.get(entry.getKey());
Shared.java,V value = Shared.getIfReady(entry.getValue());,if (Shared != null ) V value = Shared.getIfReady(entry.getValue());
BoundedLocalCache.java,long now = cache.ticker.read();,if (cache != null ) long now = cache.ticker.read();
BoundedLocalCache.java,V value = Shared.getWhenSuccessful(entry.getValue());,if (Shared != null ) V value = Shared.getWhenSuccessful(entry.getValue());
BoundedLocalCache.java,long now = cache.ticker.read();,if (cache != null ) long now = cache.ticker.read();
BoundedLocalCache.java,this.now = cache.ticker.read();,if (cache != null ) this.now = cache.ticker.read();
BoundedLocalCache.java,V value = result.get(proxy.getKey());,if (result != null ) V value = result.get(proxy.getKey());
UnboundedLocalCache.java,long now = cache.ticker.read();,if (cache != null ) long now = cache.ticker.read();
UnboundedLocalCache.java,long now = cache.ticker.read();,if (cache != null ) long now = cache.ticker.read();
UnboundedLocalCache.java,this.now = cache.ticker.read();,if (cache != null ) this.now = cache.ticker.read();
UnboundedLocalCache.java,V value = result.get(proxy.getKey());,if (result != null ) V value = result.get(proxy.getKey());
BoundedLocalCache.java,long startTime = cache.ticker.read();,if (cache != null ) long startTime = cache.ticker.read();
BoundedLocalCache.java,success = !loaded.isEmpty();,if (!loaded != null ) success = !loaded.isEmpty();
UnboundedLocalCache.java,long startTime = cache.ticker().read();,if (cache != null ) long startTime = cache.ticker().read();
UnboundedLocalCache.java,success = !loaded.isEmpty();,if (!loaded != null ) success = !loaded.isEmpty();
UnboundedLocalCache.java,long startTime = cache.ticker.read();,if (cache != null ) long startTime = cache.ticker.read();
BoundedLocalCache.java,V value = getWhenSuccessful(entry.getValue());,if (getWhenSuccessful(entry != null ) V value = getWhenSuccessful(entry.getValue());
BoundedLocalCache.java,long now = delegate.ticker.read();,if (delegate != null ) long now = delegate.ticker.read();
BoundedLocalCache.java,CompletableFuture<V> future = iterator.next();,if (iterator != null ) CompletableFuture<V> future = iterator.next();
BoundedLocalCache.java,V value = AsMapView.this.get(entry.getKey());,if (AsMapView != null ) V value = AsMapView.this.get(entry.getKey());
BoundedLocalCache.java,V value = getIfReady(entry.getValue());,if (getIfReady(entry != null ) V value = getIfReady(entry.getValue());
UnboundedLocalCache.java,long now = delegate.ticker.read();,if (delegate != null ) long now = delegate.ticker.read();
UnboundedLocalCache.java,CompletableFuture<V> future = iterator.next();,if (iterator != null ) CompletableFuture<V> future = iterator.next();
UnboundedLocalCache.java,V value = AsMapView.this.get(entry.getKey());,if (AsMapView != null ) V value = AsMapView.this.get(entry.getKey());
UnboundedLocalCache.java,V value = getIfReady(entry.getValue());,if (getIfReady(entry != null ) V value = getIfReady(entry.getValue());
Simulator.java,int items = settings.synthetic().items();,if (settings != null ) int items = settings.synthetic().items();
DiscreteGenerator.java,double val=Utils.random().nextDouble();,if (val=Utils != null ) double val=Utils.random().nextDouble();
FileGenerator.java,return current = reader.readLine();,if (reader != null ) return current = reader.readLine();
AbstractLinkedPolicy.java,"this.cache = new BoundedLinkedHashMap(accessOrder, settings.maximumSize());","if (settings != null ) this.cache = new BoundedLinkedHashMap(accessOrder, settings.maximumSize());"
Simulator.java,remaining = settings.policies.size();,if (settings != null ) remaining = settings.policies.size();
AsyncTracer.java,event.timestamp = System.nanoTime();,if (System != null ) event.timestamp = System.nanoTime();
AsyncTracer.java,event.hash = object.hashCode();,if (object != null ) event.hash = object.hashCode();
AsyncTracer.java,event.hashCode = object.hashCode();,if (object != null ) event.hashCode = object.hashCode();
CacheFromContext.java,context.cache = builder.build();,if (builder != null ) context.cache = builder.build();
BoundedLocalCache.java,long age = cache.ticker.read() - node.getAccessTime();,if (node != null ) long age = cache.ticker.read() - node.getAccessTime();
BoundedLocalCache.java,long age = cache.ticker.read() - node.getWriteTime();,if (node != null ) long age = cache.ticker.read() - node.getWriteTime();
UnboundedLocalCache.java,long now = cache.ticker.read();,if (cache != null ) long now = cache.ticker.read();
UnboundedLocalCache.java,long loadTime = cache.ticker.read();,if (cache != null ) long loadTime = cache.ticker.read();
CacheGenerator.java,"Set<ReferenceType> keys = filterReferenceTypes(keyType, cacheSpec.keys());","if (cacheSpec != null ) Set<ReferenceType> keys = filterReferenceTypes(keyType, cacheSpec.keys());"
CacheGenerator.java,"Set<ReferenceType> values = filterReferenceTypes(valueType, cacheSpec.values());","if (cacheSpec != null ) Set<ReferenceType> values = filterReferenceTypes(valueType, cacheSpec.values());"
UnboundedLocalCache.java,long loadTime = cache.ticker.read();,if (cache != null ) long loadTime = cache.ticker.read();
AsyncLocalCache.java,this.executor = builder.getExecutor();,if (builder != null ) this.executor = builder.getExecutor();
AsyncLocalCache.java,this.removalListener = builder.getRemovalListener();,if (builder != null ) this.removalListener = builder.getRemovalListener();
BoundedLocalCache.java,removalListener = builder.getRemovalListener();,if (builder != null ) removalListener = builder.getRemovalListener();
UnboundedLocalCache.java,this.removalListener = builder.getRemovalListener();,if (builder != null ) this.removalListener = builder.getRemovalListener();
CacheProvider.java,"params[i] = entry.getValue(); // Cache, LoadingCache, or AsyncLoadingCache","if (AsyncLoadingCache != null ) params[i] = entry.getValue(); // Cache, LoadingCache, or AsyncLoadingCache"
BoundedLocalCache.java,capacity = map.maximumWeightedSize.get();,if (map != null ) capacity = map.maximumWeightedSize.get();
MultiThreadedTest.java,List<Integer> value = values.poll();,if (values != null ) List<Integer> value = values.poll();
MultiThreadedTest.java,Operation[] ops = Operation.values();,if (Operation != null ) Operation[] ops = Operation.values();
MultiThreadedTest.java,int id = index.getAndIncrement();,if (index != null ) int id = index.getAndIncrement();
BoundedLocalCache.java,weigher = builder.getWeigher();,if (builder != null ) weigher = builder.getWeigher();
EvictionTest.java,Integer next = generator.nextInt();,if (generator != null ) Integer next = generator.nextInt();
CacheContext.java,long maximum = weigher.multipler() * maximumSize.max();,if (maximumSize != null ) long maximum = weigher.multipler() * maximumSize.max();
CacheLoadingTest.java,Object oldValue = ref.get();,if (ref != null ) Object oldValue = ref.get();
CacheLoadingTest.java,Object oldValue = ref.get();,if (ref != null ) Object oldValue = ref.get();
CacheReferencesTest.java,long initialSize = cache.size();,if (cache != null ) long initialSize = cache.size();
CacheTesting.java,long now = ticker.read();,if (ticker != null ) long now = ticker.read();
LocalCacheTest.java,List<LogRecord> logRecords = logHandler.getStoredLogRecords();,if (logHandler != null ) List<LogRecord> logRecords = logHandler.getStoredLogRecords();
LocalCacheTest.java,i = map.keySet().iterator();,if (map != null ) i = map.keySet().iterator();
LocalCacheTest.java,i = map.values().iterator();,if (map != null ) i = map.values().iterator();
LocalCacheTest.java,Iterator<Object> it = originalMap.keySet().iterator();,if (originalMap != null ) Iterator<Object> it = originalMap.keySet().iterator();
LocalCacheTest.java,notification = listener.remove();,if (listener != null ) notification = listener.remove();
LocalCacheTest.java,notification = listener.remove();,if (listener != null ) notification = listener.remove();
LocalCacheTest.java,newFirst = newFirst.getNext();,if (newFirst != null ) newFirst = newFirst.getNext();
LocalCacheTest.java,int size = expectedEntries.size();,if (expectedEntries != null ) int size = expectedEntries.size();
LocalCacheTest.java,Iterator<Object> it = originalMap.keySet().iterator();,if (originalMap != null ) Iterator<Object> it = originalMap.keySet().iterator();
BoundedLocalCache.java,current = iterator.next();,if (iterator != null ) current = iterator.next();
BoundedLocalCache.java,current = iterator.next();,if (iterator != null ) current = iterator.next();
AbstractCacheTest.java,CacheStats stats = counter.snapshot();,if (counter != null ) CacheStats stats = counter.snapshot();
AbstractCacheTest.java,CacheStats stats = counter.snapshot();,if (counter != null ) CacheStats stats = counter.snapshot();
AbstractLoadingCacheTest.java,Object v = valueRef.get();,if (valueRef != null ) Object v = valueRef.get();
AbstractLoadingCacheTest.java,Object v = valueRef.get();,if (valueRef != null ) Object v = valueRef.get();
AbstractLoadingCacheTest.java,Object v = valueRef.get();,if (valueRef != null ) Object v = valueRef.get();
AbstractLoadingCacheTest.java,Object v = valueRef.get();,if (valueRef != null ) Object v = valueRef.get();
CacheProvider.java,params[i] = entry.getValue();,if (entry != null ) params[i] = entry.getValue();
EvictionTest.java,long size = cache.size();,if (cache != null ) long size = cache.size();
BoundedLocalCache.java,V value = node.getValue();,if (node != null ) V value = node.getValue();
BoundedLocalCache.java,oldValue = oldWeightedValue.getValue();,if (oldWeightedValue != null ) oldValue = oldWeightedValue.getValue();
BoundedLocalCache.java,current = iterator.next();,if (iterator != null ) current = iterator.next();
CacheGenerator.java,context.cache = builder.build();,if (builder != null ) context.cache = builder.build();
AsMapTest.java,int count = context.firstMiddleLastKeys().size();,if (context != null ) int count = context.firstMiddleLastKeys().size();
AsMapTest.java,int count = context.firstMiddleLastKeys().size();,if (context != null ) int count = context.firstMiddleLastKeys().size();
AsMapTest.java,int count = context.firstMiddleLastKeys().size();,if (context != null ) int count = context.firstMiddleLastKeys().size();
AsMapTest.java,int count = context.firstMiddleLastKeys().size();,if (context != null ) int count = context.firstMiddleLastKeys().size();
AsMapTest.java,int count = context.firstMiddleLastKeys().size();,if (context != null ) int count = context.firstMiddleLastKeys().size();
BoundedLocalCache.java,int misses = keysToLoad.size();,if (keysToLoad != null ) int misses = keysToLoad.size();
UnboundedLocalCache.java,int misses = keysToLoad.size();,if (keysToLoad != null ) int misses = keysToLoad.size();
IsValidBoundedLocalCache.java,Set<Node> seen = Sets.newIdentityHashSet();,if (Sets != null ) Set<Node> seen = Sets.newIdentityHashSet();
CacheProvider.java,Parameter[] parameters = testMethod.getParameters();,if (testMethod != null ) Parameter[] parameters = testMethod.getParameters();
BoundedLocalCache.java,capacity = map.capacity.get();,if (map != null ) capacity = map.capacity.get();
CacheContext.java,context.removalListener = removalListenerType.create();,if (removalListenerType != null ) context.removalListener = removalListenerType.create();
CacheGenerator.java,CacheContext copy = context.copy();,if (context != null ) CacheContext copy = context.copy();
CacheGenerator.java,CacheContext copy = context.copy();,if (context != null ) CacheContext copy = context.copy();
CacheGenerator.java,CacheContext copy = context.copy();,if (context != null ) CacheContext copy = context.copy();
CacheGenerator.java,CacheContext copy = context.copy();,if (context != null ) CacheContext copy = context.copy();
CacheGenerator.java,copy.executor = executor.get();,if (executor != null ) copy.executor = executor.get();
CacheGenerator.java,CacheContext copy = context.copy();,if (context != null ) CacheContext copy = context.copy();
CacheGenerator.java,copy.removalListener = removalListenerType.create();,if (removalListenerType != null ) copy.removalListener = removalListenerType.create();
CacheGenerator.java,CacheContext copy = context.copy();,if (context != null ) CacheContext copy = context.copy();
CacheGenerator.java,CacheContext copy = context.copy();,if (context != null ) CacheContext copy = context.copy();
CacheGenerator.java,CacheContext copy = context.copy();,if (context != null ) CacheContext copy = context.copy();
LinkedDequeTest.java,SimpleLinkedValue first = deque.peek();,if (deque != null ) SimpleLinkedValue first = deque.peek();
LinkedDequeTest.java,SimpleLinkedValue first = deque.peekFirst();,if (deque != null ) SimpleLinkedValue first = deque.peekFirst();
LinkedDequeTest.java,SimpleLinkedValue last = deque.peekLast();,if (deque != null ) SimpleLinkedValue last = deque.peekLast();
LinkedDequeTest.java,SimpleLinkedValue first = deque.peekFirst();,if (deque != null ) SimpleLinkedValue first = deque.peekFirst();
LinkedDequeTest.java,SimpleLinkedValue value = deque.remove();,if (deque != null ) SimpleLinkedValue value = deque.remove();
LinkedDequeTest.java,SimpleLinkedValue first = deque.peekFirst();,if (deque != null ) SimpleLinkedValue first = deque.peekFirst();
LinkedDequeTest.java,SimpleLinkedValue value = deque.peek();,if (deque != null ) SimpleLinkedValue value = deque.peek();
LinkedDequeTest.java,SimpleLinkedValue first = deque.peekFirst();,if (deque != null ) SimpleLinkedValue first = deque.peekFirst();
LinkedDequeTest.java,SimpleLinkedValue value = deque.removeFirst();,if (deque != null ) SimpleLinkedValue value = deque.removeFirst();
LinkedDequeTest.java,SimpleLinkedValue last = deque.peekLast();,if (deque != null ) SimpleLinkedValue last = deque.peekLast();
LinkedDequeTest.java,SimpleLinkedValue value = deque.removeLast();,if (deque != null ) SimpleLinkedValue value = deque.removeLast();
LinkedDequeTest.java,SimpleLinkedValue first = deque.peekFirst();,if (deque != null ) SimpleLinkedValue first = deque.peekFirst();
LinkedDequeTest.java,SimpleLinkedValue value = deque.peek();,if (deque != null ) SimpleLinkedValue value = deque.peek();
LinkedDequeTest.java,SimpleLinkedValue first = deque.peekFirst();,if (deque != null ) SimpleLinkedValue first = deque.peekFirst();
LinkedDequeTest.java,SimpleLinkedValue value = deque.peek();,if (deque != null ) SimpleLinkedValue value = deque.peek();
LinkedDequeTest.java,SimpleLinkedValue first = deque.peekFirst();,if (deque != null ) SimpleLinkedValue first = deque.peekFirst();
LinkedDequeTest.java,SimpleLinkedValue first = deque.peekFirst();,if (deque != null ) SimpleLinkedValue first = deque.peekFirst();
LinkedDequeTest.java,SimpleLinkedValue value = deque.pop();,if (deque != null ) SimpleLinkedValue value = deque.pop();
CacheGenerator.java,CacheContext copy = context.copy();,if (context != null ) CacheContext copy = context.copy();
CacheGenerator.java,context.cache = builder.build(cacheSpec.loader());,if (builder != null ) context.cache = builder.build(cacheSpec.loader());
BoundedLocalCache.java,statsCounter = builder.statsCounterSupplier.get();,if (builder != null ) statsCounter = builder.statsCounterSupplier.get();
BoundedLocalCache.java,ticker = builder.ticker();,if (builder != null ) ticker = builder.ticker();
UnboundedLocalCache.java,this.statsCounter = builder.statsCounterSupplier.get();,if (builder != null ) this.statsCounter = builder.statsCounterSupplier.get();
UnboundedLocalCache.java,this.ticker = builder.ticker();,if (builder != null ) this.ticker = builder.ticker();
Caffeine.java,Executor executor = ForkJoinPool.commonPool();,if (ForkJoinPool != null ) Executor executor = ForkJoinPool.commonPool();
UnboundedLocalCache.java,this.iterator = local.cache.keySet().iterator();,if (local != null ) this.iterator = local.cache.keySet().iterator();
UnboundedLocalCache.java,this.iterator = local.cache.entrySet().iterator();,if (local != null ) this.iterator = local.cache.entrySet().iterator();
UnboundedLocalCache.java,this.iterator = local.cache.entrySet().iterator();,if (local != null ) this.iterator = local.cache.entrySet().iterator();
Caffeine.java,executor = ForkJoinPool.commonPool();,if (ForkJoinPool != null ) executor = ForkJoinPool.commonPool();
UnboundedLocalCache.java,long startTime = ticker.read();,if (ticker != null ) long startTime = ticker.read();
AbstractLocalCache.java,this.statsCounter = builder.statsCounterSupplier.get();,if (builder != null ) this.statsCounter = builder.statsCounterSupplier.get();
AbstractLocalCache.java,this.removalListener = builder.getRemovalListener();,if (builder != null ) this.removalListener = builder.getRemovalListener();
AbstractLocalCache.java,this.isRecordingStats = builder.isRecordingStats();,if (builder != null ) this.isRecordingStats = builder.isRecordingStats();
AbstractLocalCache.java,this.ticker = builder.ticker();,if (builder != null ) this.ticker = builder.ticker();
AbstractLocalCache.java,this.iterator = cache.keyIterator();,if (cache != null ) this.iterator = cache.keyIterator();
AbstractLocalCache.java,key = iterator.next();,if (iterator != null ) key = iterator.next();
AbstractLocalCache.java,this.iterator = cache.entryIterator();,if (cache != null ) this.iterator = cache.entryIterator();
AbstractLocalCache.java,entry = iterator.next();,if (iterator != null ) entry = iterator.next();
AbstractLocalCache.java,V value = cache.get(entry.getKey());,if (cache != null ) V value = cache.get(entry.getKey());
AbstractLocalCache.java,this.iterator = cache.entryIterator();,if (cache != null ) this.iterator = cache.entryIterator();
AbstractLocalCache.java,entry = iterator.next();,if (iterator != null ) entry = iterator.next();
SynchronizedBenchmark.java,owner = Thread.currentThread();,if (Thread != null ) owner = Thread.currentThread();
BoundedLocalCache.java,weightedValue = node.get();,if (node != null ) weightedValue = node.get();
BoundedLocalCache.java,weightedValue = node.get();,if (node != null ) weightedValue = node.get();
BoundedLocalCache.java,executor = ForkJoinPool.commonPool();,if (ForkJoinPool != null ) executor = ForkJoinPool.commonPool();
ConcurrentLinkedHashMap.java,final long writeCount = counter.get();,if (counter != null ) final long writeCount = counter.get();
ConcurrentLinkedHashMap.java,final DrainStatus status = drainStatus.get();,if (drainStatus != null ) final DrainStatus status = drainStatus.get();
ConcurrentLinkedHashMap.java,final long writeCount = readBufferWriteCount[bufferIndex].get();,if (readBufferWriteCount[bufferIndex] != null ) final long writeCount = readBufferWriteCount[bufferIndex].get();
ConcurrentLinkedHashMap.java,final Runnable task = writeBuffer.poll();,if (writeBuffer != null ) final Runnable task = writeBuffer.poll();
ConcurrentLinkedHashMap.java,WeightedValue<V> current = node.get();,if (node != null ) WeightedValue<V> current = node.get();
ConcurrentLinkedHashMap.java,WeightedValue<V> weightedValue = node.get();,if (node != null ) WeightedValue<V> weightedValue = node.get();
ConcurrentLinkedHashMap.java,weightedValue = node.get();,if (node != null ) weightedValue = node.get();
ConcurrentLinkedHashMap.java,current = iterator.next();,if (iterator != null ) current = iterator.next();
ConcurrentLinkedHashMap.java,current = iterator.next();,if (iterator != null ) current = iterator.next();
ConcurrentLinkedHashMap.java,current = iterator.next();,if (iterator != null ) current = iterator.next();
ConcurrentLinkedHashMap.java,capacity = map.capacity.get();,if (map != null ) capacity = map.capacity.get();
ConcurrentLinkedHashMap.java,executor = ForkJoinPool.commonPool();,if (ForkJoinPool != null ) executor = ForkJoinPool.commonPool();
ConcurrentLinkedHashMap.java,weigher = Weighers.entrySingleton();,if (Weighers != null ) weigher = Weighers.entrySingleton();
LocalLoadingCache.java,K key = entry.getKey();,if (entry != null ) K key = entry.getKey();
LocalLoadingCache.java,Promise<V> promise = entry.getValue();,if (entry != null ) Promise<V> promise = entry.getValue();
LocalLoadingCache.java,Promise<V> promise = entry.getValue();,if (entry != null ) Promise<V> promise = entry.getValue();
CacheGenerator.java,CacheContext copy = context.copy();,if (context != null ) CacheContext copy = context.copy();
CacheGenerator.java,context.cache = builder.build();,if (builder != null ) context.cache = builder.build();
CacheTest.java,int startKey = (int) context.initialSize();,if (context != null ) int startKey = (int) context.initialSize();
AbstractLocalCache.java,this.iterator = cache.entrySet().iterator();,if (cache != null ) this.iterator = cache.entrySet().iterator();
AbstractLocalCache.java,this.iterator = cache.entrySet().iterator();,if (cache != null ) this.iterator = cache.entrySet().iterator();
AbstractLocalCache.java,this.iterator = cache.keys();,if (cache != null ) this.iterator = cache.keys();
AbstractLocalCache.java,this.iterator = cache.keySet().iterator();,if (cache != null ) this.iterator = cache.keySet().iterator();
CacheProvider.java,CacheContext context = entry.getKey().copy();,if (entry != null ) CacheContext context = entry.getKey().copy();
CacheProvider.java,CacheContext context = entry.getKey().copy();,if (entry != null ) CacheContext context = entry.getKey().copy();
CacheProvider.java,CacheContext context = entry.getKey().copy();,if (entry != null ) CacheContext context = entry.getKey().copy();
CacheProvider.java,CacheContext context = entry.getKey().copy();,if (entry != null ) CacheContext context = entry.getKey().copy();
CacheProvider.java,params[i] = entry.getKey();,if (entry != null ) params[i] = entry.getKey();
CacheProvider.java,params[i] = entry.getValue();,if (entry != null ) params[i] = entry.getValue();
ConcurrentHashMap2.java,int h = spread(key.hashCode());,if (spread(key != null ) int h = spread(key.hashCode());
ConcurrentHashMap2.java,int hash = spread(key.hashCode());,if (spread(key != null ) int hash = spread(key.hashCode());
ConcurrentHashMap2.java,int hash = spread(key.hashCode());,if (spread(key != null ) int hash = spread(key.hashCode());
ConcurrentHashMap2.java,int h = spread(key.hashCode());,if (spread(key != null ) int h = spread(key.hashCode());
ConcurrentHashMap2.java,int h = spread(key.hashCode());,if (spread(key != null ) int h = spread(key.hashCode());
ConcurrentHashMap2.java,int h = spread(key.hashCode());,if (spread(key != null ) int h = spread(key.hashCode());
ConcurrentHashMap2.java,int h = spread(key.hashCode());,if (spread(key != null ) int h = spread(key.hashCode());
ConcurrentHashMap2.java,int h = ThreadLocalRandom.current().nextInt();,if (ThreadLocalRandom != null ) int h = ThreadLocalRandom.current().nextInt();
ConcurrentHashMap2.java,waiter = Thread.currentThread();,if (Thread != null ) waiter = Thread.currentThread();
ConcurrentHashMap2.java,long sz = map.mappingCount();,if (map != null ) long sz = map.mappingCount();
ConcurrentHashMap2.java,long sz = map.mappingCount();,if (map != null ) long sz = map.mappingCount();
ConcurrentHashMap2.java,Object e = it.next();,if (it != null ) Object e = it.next();
ConcurrentHashMap2.java,int h = spread(key.hashCode());,if (spread(key != null ) int h = spread(key.hashCode());
ConcurrentHashMap2.java,threadId = Thread.currentThread().getId();,if (Thread != null ) threadId = Thread.currentThread().getId();
UnboundedLocalCache.java,this.removalListener = builder.getRemovalListener();,if (builder != null ) this.removalListener = builder.getRemovalListener();
EliminationStack.java,Node<E> current = top.get();,if (top != null ) Node<E> current = top.get();
EliminationStack.java,E e = current.get();,if (current != null ) E e = current.get();
SingleConsumerQueue.java,E e = it.next();,if (it != null ) E e = it.next();
SingleConsumerQueue.java,cursor = prev.getNextRelaxed();,if (prev != null ) cursor = prev.getNextRelaxed();
SingleConsumerQueue.java,Node<E> cursor = tail.getNextRelaxed();,if (tail != null ) Node<E> cursor = tail.getNextRelaxed();
SingleConsumerQueue.java,next = cursor.getNextRelaxed();,if (cursor != null ) next = cursor.getNextRelaxed();
SingleConsumerQueue.java,Node<E> next = cursor.getNextRelaxed();,if (cursor != null ) Node<E> next = cursor.getNextRelaxed();
SingleConsumerQueue.java,next = cursor.getNextRelaxed();,if (cursor != null ) next = cursor.getNextRelaxed();
EliminationProfile.java,ThreadLocalRandom random = ThreadLocalRandom.current();,if (ThreadLocalRandom != null ) ThreadLocalRandom random = ThreadLocalRandom.current();
EliminationProfile.java,ThreadLocalRandom random = ThreadLocalRandom.current();,if (ThreadLocalRandom != null ) ThreadLocalRandom random = ThreadLocalRandom.current();
EliminationProfile.java,Stopwatch stopwatch = Stopwatch.createStarted();,if (Stopwatch != null ) Stopwatch stopwatch = Stopwatch.createStarted();
EliminationProfile.java,long count = calls.longValue();,if (calls != null ) long count = calls.longValue();
ConcurrentTestHarness.java,List<T> list = newArrayListWithCapacity(data.length());,if (newArrayListWithCapacity(data != null ) List<T> list = newArrayListWithCapacity(data.length());
