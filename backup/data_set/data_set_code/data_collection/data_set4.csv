Filename,Buggy/Deleted,Fixed/Added
Solve.java,int to = options.getTimeOut();,if (options != null ) int to = options.getTimeOut();
Solve.java,result = rs.labeling();,if (rs != null ) result = rs.labeling();
Solve.java,int to = options.getTimeOut();,if (options != null ) int to = options.getTimeOut();
Solve.java,result = rs.labeling();,if (rs != null ) result = rs.labeling();
Solve.java,int to = options.getTimeOut();,if (options != null ) int to = options.getTimeOut();
Solve.java,result = rs.labeling();,if (rs != null ) result = rs.labeling();
Solve.java,int ns = options.getNumberSolutions();,if (options != null ) int ns = options.getNumberSolutions();
Solve.java,int ns = options.getNumberSolutions();,if (options != null ) int ns = options.getNumberSolutions();
Solve.java,result = rs.labeling();,if (rs != null ) result = rs.labeling();
Solve.java,result = rs.labeling();,if (rs != null ) result = rs.labeling();
Solve.java,result = rs.labeling();,if (rs != null ) result = rs.labeling();
SearchItem.java,int count = body.jjtGetNumChildren();,if (body != null ) int count = body.jjtGetNumChildren();
ActivityMax.java,float right = var.activity();,if (var != null ) float right = var.activity();
ActivityMax.java,float left = leftVar.activity();,if (leftVar != null ) float left = leftVar.activity();
ActivityMax.java,float right = rightVar.activity();,if (rightVar != null ) float right = rightVar.activity();
ActivityMin.java,float right = var.activity();,if (var != null ) float right = var.activity();
ActivityMin.java,float left = leftVar.activity();,if (leftVar != null ) float left = leftVar.activity();
ActivityMin.java,float right = rightVar.activity();,if (rightVar != null ) float right = rightVar.activity();
TaskReversedView.java,int max = -lct - dur.max();,if (dur != null ) int max = -lct - dur.max();
TaskReversedView.java,int max = -lct - dur.max();,if (dur != null ) int max = -lct - dur.max();
Count.java,int start = position.value();,if (position != null ) int start = position.value();
Count.java,int start = position.value();,if (position != null ) int start = position.value();
ValuePrecede.java,int a = alpha.value();,if (alpha != null ) int a = alpha.value();
ValuePrecede.java,int b = beta.value();,if (beta != null ) int b = beta.value();
ValuePrecede.java,int a = alpha.value();,if (alpha != null ) int a = alpha.value();
ValuePrecede.java,int b = beta.value();,if (beta != null ) int b = beta.value();
ValuePrecede.java,int a = alpha.value();,if (alpha != null ) int a = alpha.value();
ValuePrecede.java,int g = gamma.value();,if (gamma != null ) int g = gamma.value();
ValuePrecede.java,int a = alpha.value();,if (alpha != null ) int a = alpha.value();
Regular.java,ValueEnumeration enumer = vars[level].domain.valueEnumeration();,if (vars[level] != null ) ValueEnumeration enumer = vars[level].domain.valueEnumeration();
Regular.java,v = enumer.nextElement();,if (enumer != null ) v = enumer.nextElement();
TaskNormalView.java,int max = lct - dur.max();,if (dur != null ) int max = lct - dur.max();
SplitRandomSelectFloat.java,leftFirst = generator.nextBoolean();,if (generator != null ) leftFirst = generator.nextBoolean();
SplitRandomSelect.java,int value = var.min();,if (var != null ) int value = var.min();
SplitRandomSelect.java,value = var.min();,if (var != null ) value = var.min();
SplitRandomSelect.java,value = super.getChoiceValue();,if (super != null ) value = super.getChoiceValue();
SplitRandomSelect.java,leftFirst = generator.nextBoolean();,if (generator != null ) leftFirst = generator.nextBoolean();
Conditional.java,Set<Var> cvs = c[i].arguments();,if (c[i] != null ) Set<Var> cvs = c[i].arguments();
CountBounds.java,int start = position.value();,if (position != null ) int start = position.value();
CountBounds.java,int start = position.value();,if (position != null ) int start = position.value();
CountValuesBounds.java,this.valuesDomainComplement = valuesDomain.complement();,if (valuesDomain != null ) this.valuesDomainComplement = valuesDomain.complement();
CountValuesBounds.java,int start = position.value();,if (position != null ) int start = position.value();
CountValuesBounds.java,restEq = rest.value();,if (rest != null ) restEq = rest.value();
CountValuesBounds.java,numberEq[i] = equal[i].value();,if (equal[i] != null ) numberEq[i] = equal[i].value();
CountValuesBounds.java,min += extendedCounter[i].min();,if (extendedCounter[i] != null ) min += extendedCounter[i].min();
CountValuesBounds.java,max += extendedCounter[i].max();,if (extendedCounter[i] != null ) max += extendedCounter[i].max();
Cumulative.java,long C = (long)limit.max();,if ((long)limit != null ) long C = (long)limit.max();
Cumulative.java,long C = (long)limit.max();,if ((long)limit != null ) long C = (long)limit.max();
Cumulative.java,LB[i] = ts[i].est();,if (ts[i] != null ) LB[i] = ts[i].est();
CumulativeBasic.java,int tResMin = t.res.min();,if (t != null ) int tResMin = t.res.min();
CumulativeBasic.java,lastStart[ti] = t.start.min();,if (t != null ) lastStart[ti] = t.start.min();
CumulativeBasic.java,lastFree[ti] = t.start.min();,if (t != null ) lastFree[ti] = t.start.min();
CumulativePrimary.java,int first = activePnt.value();,if (activePnt != null ) int first = activePnt.value();
CumulativePrimary.java,int first = activePnt.value();,if (activePnt != null ) int first = activePnt.value();
CumulativePrimary.java,int min = start[k].min();,if (start[k] != null ) int min = start[k].min();
CumulativePrimary.java,int s = start[k].min();,if (start[k] != null ) int s = start[k].min();
Solve.java,solveKind = getKind(kind.getKind());,if (getKind(kind != null ) solveKind = getKind(kind.getKind());
Solve.java,solveKind = getKind(kind.getKind());,if (getKind(kind != null ) solveKind = getKind(kind.getKind());
Solve.java,solveKind = getKind(kind.getKind());,if (getKind(kind != null ) solveKind = getKind(kind.getKind());
Solve.java,long currentTime = timer.getCPUTime();,if (timer != null ) long currentTime = timer.getCPUTime();
Solve.java,int to = options.getTimeOut();,if (options != null ) int to = options.getTimeOut();
Solve.java,Result = rs.labeling();,if (rs != null ) Result = rs.labeling();
Solve.java,int to = options.getTimeOut();,if (options != null ) int to = options.getTimeOut();
Solve.java,Result = rs.labeling();,if (rs != null ) Result = rs.labeling();
Solve.java,int to = options.getTimeOut();,if (options != null ) int to = options.getTimeOut();
Solve.java,Result = rs.labeling();,if (rs != null ) Result = rs.labeling();
Solve.java,int ns = options.getNumberSolutions();,if (options != null ) int ns = options.getNumberSolutions();
Solve.java,long currentTime = timer.getCPUTime();,if (timer != null ) long currentTime = timer.getCPUTime();
Solve.java,Result = rs.labeling();,if (rs != null ) Result = rs.labeling();
Solve.java,Result = rs.labeling();,if (rs != null ) Result = rs.labeling();
Solve.java,Result = rs.labeling();,if (rs != null ) Result = rs.labeling();
Solve.java,ComparatorVariable<IntVar> comparator = si.getVarSelect();,if (si != null ) ComparatorVariable<IntVar> comparator = si.getVarSelect();
Solve.java,int to = options.getTimeOut();,if (options != null ) int to = options.getTimeOut();
Solve.java,nodes += dfs.getNodes();,if (dfs != null ) nodes += dfs.getNodes();
Solve.java,nodes += label.getNodes();,if (label != null ) nodes += label.getNodes();
Solve.java,startCPU = timer.getCPUTime();,if (timer != null ) startCPU = timer.getCPUTime();
ImplicationConstraints.java,int val = ei.getKey();,if (ei != null ) int val = ei.getKey();
ImplicationConstraints.java,IntVar bb = ei.getValue();,if (ei != null ) IntVar bb = ei.getValue();
ReificationConstraints.java,int val = ei.getKey();,if (ei != null ) int val = ei.getKey();
ReificationConstraints.java,IntVar bb = ei.getValue();,if (ei != null ) IntVar bb = ei.getValue();
Sum.java,int pointer = nextGroundedPosition.value();,if (nextGroundedPosition != null ) int pointer = nextGroundedPosition.value();
Sum.java,int lMin = sumGrounded.value();,if (sumGrounded != null ) int lMin = sumGrounded.value();
VariablesParameters.java,int noAnnotations = child.jjtGetNumChildren();,if (child != null ) int noAnnotations = child.jjtGetNumChildren();
VariablesParameters.java,int no = nchild.jjtGetNumChildren();,if (nchild != null ) int no = nchild.jjtGetNumChildren();
VariablesParameters.java,int number = grandchild.jjtGetNumChildren();,if (grandchild != null ) int number = grandchild.jjtGetNumChildren();
GlobalConstraints.java,resSum += r[i].max();,if (r[i] != null ) resSum += r[i].max();
GlobalConstraints.java,lb[i] = counters[i].min();,if (counters[i] != null ) lb[i] = counters[i].min();
GlobalConstraints.java,ub[i] = counters[i].max();,if (counters[i] != null ) ub[i] = counters[i].max();
AtLeast.java,int start = position.value();,if (position != null ) int start = position.value();
AtLeast.java,int start = position.value();,if (position != null ) int start = position.value();
AtMost.java,int start = position.value();,if (position != null ) int start = position.value();
AtMost.java,int start = position.value();,if (position != null ) int start = position.value();
CountValues.java,this.valuesDomainComplement = valuesDomain.complement();,if (valuesDomain != null ) this.valuesDomainComplement = valuesDomain.complement();
CountValues.java,int start = position.value();,if (position != null ) int start = position.value();
CountValues.java,restEq = rest.value();,if (rest != null ) restEq = rest.value();
CountValues.java,numberEq[i] = equal[i].value();,if (equal[i] != null ) numberEq[i] = equal[i].value();
CountValues.java,min += extendedCounter[i].min();,if (extendedCounter[i] != null ) min += extendedCounter[i].min();
CountValues.java,max += extendedCounter[i].max();,if (extendedCounter[i] != null ) max += extendedCounter[i].max();
CountValues.java,c = counter[i].value();,if (counter[i] != null ) c = counter[i].value();
CountVar.java,int start = position.value();,if (position != null ) int start = position.value();
CountVar.java,int start = position.value();,if (position != null ) int start = position.value();
XmodYeqZ.java,int absY = Math.abs(y.value());,if (Math != null ) int absY = Math.abs(y.value());
XmodYeqZ.java,int absY = Math.abs(y.value());,if (Math != null ) int absY = Math.abs(y.value());
FloatDomain.java,ValueEnumeration enumer = domain.valueEnumeration();,if (domain != null ) ValueEnumeration enumer = domain.valueEnumeration();
FloatDomain.java,ValueEnumeration enumer = domain.valueEnumeration();,if (domain != null ) ValueEnumeration enumer = domain.valueEnumeration();
FloatDomain.java,ValueEnumeration enumer = domain.valueEnumeration();,if (domain != null ) ValueEnumeration enumer = domain.valueEnumeration();
FloatDomain.java,ValueEnumeration enumer = domain.valueEnumeration();,if (domain != null ) ValueEnumeration enumer = domain.valueEnumeration();
FloatDomain.java,int first = enumer.nextElement();,if (enumer != null ) int first = enumer.nextElement();
FloatDomain.java,int next = enumer.nextElement();,if (enumer != null ) int next = enumer.nextElement();
FloatDomain.java,ValueEnumeration enumer = domain.valueEnumeration();,if (domain != null ) ValueEnumeration enumer = domain.valueEnumeration();
FloatDomain.java,int next = enumer.nextElement();,if (enumer != null ) int next = enumer.nextElement();
FloatDomain.java,ValueEnumeration enumer = domain.valueEnumeration();,if (domain != null ) ValueEnumeration enumer = domain.valueEnumeration();
FloatDomain.java,int next = enumer.nextElement();,if (enumer != null ) int next = enumer.nextElement();
SumBool.java,int sumValue = sum.value();,if (sum != null ) int sumValue = sum.value();
SumBool.java,int sumValue = sum.value();,if (sum != null ) int sumValue = sum.value();
SumBool.java,int sumValue = sum.value();,if (sum != null ) int sumValue = sum.value();
SumBool.java,int sumValue = sum.value();,if (sum != null ) int sumValue = sum.value();
Channel.java,this.n = bs.size();,if (bs != null ) this.n = bs.size();
Channel.java,int start = position.value();,if (position != null ) int start = position.value();
Channel.java,IntVar b = valueMap.get(x.value());,if (valueMap != null ) IntVar b = valueMap.get(x.value());
ReificationConstraints.java,int val = ei.getKey();,if (ei != null ) int val = ei.getKey();
ReificationConstraints.java,IntVar bb = ei.getValue();,if (ei != null ) IntVar bb = ei.getValue();
Channel.java,int idx = indexOf(x.value());,if (indexOf(x != null ) int idx = indexOf(x.value());
ArgMax.java,int vDomMin = list[i].min();,if (list[i] != null ) int vDomMin = list[i].min();
ArgMax.java,int vDomMax = list[i].max();,if (list[i] != null ) int vDomMax = list[i].max();
ArgMax.java,int vDomMax = list[i].max();,if (list[i] != null ) int vDomMax = list[i].max();
XplusYplusCeqZ.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XplusYplusCeqZ.java,"sumMin = Math.addExact(sumMin, x.min());","if (x != null ) sumMin = Math.addExact(sumMin, x.min());"
XplusYplusCeqZ.java,"sumMax = Math.addExact(sumMax, x.max());","if (x != null ) sumMax = Math.addExact(sumMax, x.max());"
XplusYplusCeqZ.java,"sumMin = Math.addExact(sumMin, y.min());","if (y != null ) sumMin = Math.addExact(sumMin, y.min());"
XplusYplusCeqZ.java,"sumMax = Math.addExact(sumMax, y.max());","if (y != null ) sumMax = Math.addExact(sumMax, y.max());"
XplusYplusQeqZ.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XplusYplusQeqZ.java,"sumMin = Math.addExact(sumMin, x.min());","if (x != null ) sumMin = Math.addExact(sumMin, x.min());"
XplusYplusQeqZ.java,"sumMax = Math.addExact(sumMax, x.max());","if (x != null ) sumMax = Math.addExact(sumMax, x.max());"
XplusYplusQeqZ.java,"sumMin = Math.addExact(sumMin, y.min());","if (y != null ) sumMin = Math.addExact(sumMin, y.min());"
XplusYplusQeqZ.java,"sumMax = Math.addExact(sumMax, y.max());","if (y != null ) sumMax = Math.addExact(sumMax, y.max());"
XplusYplusQeqZ.java,"sumMin = Math.addExact(sumMin, q.min());","if (q != null ) sumMin = Math.addExact(sumMin, q.min());"
XplusYplusQeqZ.java,"sumMax = Math.addExact(sumMax, q.max());","if (q != null ) sumMax = Math.addExact(sumMax, q.max());"
XplusYplusQgtC.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XplusYplusQgtC.java,"sumMin = Math.addExact(sumMin, x.min());","if (x != null ) sumMin = Math.addExact(sumMin, x.min());"
XplusYplusQgtC.java,"sumMax = Math.addExact(sumMax, x.max());","if (x != null ) sumMax = Math.addExact(sumMax, x.max());"
XplusYplusQgtC.java,"sumMin = Math.addExact(sumMin, y.min());","if (y != null ) sumMin = Math.addExact(sumMin, y.min());"
XplusYplusQgtC.java,"sumMax = Math.addExact(sumMax, y.max());","if (y != null ) sumMax = Math.addExact(sumMax, y.max());"
XplusYplusQgtC.java,"sumMin = Math.addExact(sumMin, q.min());","if (q != null ) sumMin = Math.addExact(sumMin, q.min());"
XplusYplusQgtC.java,"sumMax = Math.addExact(sumMax, q.max());","if (q != null ) sumMax = Math.addExact(sumMax, q.max());"
ArgMax.java,vDom = list[i].dom();,if (list[i] != null ) vDom = list[i].dom();
ArgMax.java,singleMaxValue = list[i].value();,if (list[i] != null ) singleMaxValue = list[i].value();
ArgMax.java,vDom = list[i].dom();,if (list[i] != null ) vDom = list[i].dom();
ArgMin.java,vDom = list[i].dom();,if (list[i] != null ) vDom = list[i].dom();
ArgMin.java,singleMinValue = list[i].value();,if (list[i] != null ) singleMinValue = list[i].value();
ArgMin.java,vDom = list[i].dom();,if (list[i] != null ) vDom = list[i].dom();
Alldiff.java,int groundPos = grounded.value();,if (grounded != null ) int groundPos = grounded.value();
Alldifferent.java,int groundPos = grounded.value();,if (grounded != null ) int groundPos = grounded.value();
IntervalDomain.java,temp = domain.getClass().newInstance();,if (domain != null ) temp = domain.getClass().newInstance();
Solve.java,solveKind = getKind(kind.getKind());,if (getKind(kind != null ) solveKind = getKind(kind.getKind());
Solve.java,solveKind = getKind(kind.getKind());,if (getKind(kind != null ) solveKind = getKind(kind.getKind());
Solve.java,solveKind = getKind(kind.getKind());,if (getKind(kind != null ) solveKind = getKind(kind.getKind());
Solve.java,solveKind = getKind(kind.getKind());,if (getKind(kind != null ) solveKind = getKind(kind.getKind());
Count.java,return (countAll == counter.min());,if (counter != null ) return (countAll == counter.min());
Solve.java,ComparatorVariable<IntVar> comparator = comparator = si.getVarSelect();,if (si != null ) ComparatorVariable<IntVar> comparator = comparator = si.getVarSelect();
Member.java,int start = position.value();,if (position != null ) int start = position.value();
Member.java,int start = position.value();,if (position != null ) int start = position.value();
CumulativePrimary.java,int min = start[i].min(); //t.est();,if (//t != null ) int min = start[i].min(); //t.est();
XmodYeqZ.java,int absY = Math.abs(y.value());,if (Math != null ) int absY = Math.abs(y.value());
Solve.java,long currentTime = timeMeter.getThreadCpuTime(tread.getId());,if (timeMeter != null ) long currentTime = timeMeter.getThreadCpuTime(tread.getId());
Solve.java,long currentTime = timeMeter.getThreadCpuTime(tread.getId());,if (timeMeter != null ) long currentTime = timeMeter.getThreadCpuTime(tread.getId());
Solve.java,tread = java.lang.Thread.currentThread();,if (java != null ) tread = java.lang.Thread.currentThread();
Solve.java,startCPU = b.getThreadCpuTime(tread.getId());,if (b != null ) startCPU = b.getThreadCpuTime(tread.getId());
PrioritySearch.java,int solutionNoBeforeSearch = solutionListener.solutionsNo();,if (solutionListener != null ) int solutionNoBeforeSearch = solutionListener.solutionsNo();
Solve.java,nodes += label.getNodes();,if (label != null ) nodes += label.getNodes();
PrioritySearch.java,T current = itr.next();,if (itr != null ) T current = itr.next();
RestartSearch.java,ConsistencyListener cs = dfs[i].getConsistencyListener();,if (dfs[i] != null ) ConsistencyListener cs = dfs[i].getConsistencyListener();
SearchItem.java,int count = ann.jjtGetNumChildren();,if (ann != null ) int count = ann.jjtGetNumChildren();
Solve.java,solutions = label.getSolutionListener().solutionsNo();,if (label != null ) solutions = label.getSolutionListener().solutionsNo();
Solve.java,solutions = l.getSolutionListener().solutionsNo();,if (l != null ) solutions = l.getSolutionListener().solutionsNo();
VariablesParameters.java,int no = child.jjtGetNumChildren();,if (child != null ) int no = child.jjtGetNumChildren();
VariablesParameters.java,int number = grandchild.jjtGetNumChildren();,if (grandchild != null ) int number = grandchild.jjtGetNumChildren();
VariablesParameters.java,int numberSL = arrayLiteral.jjtGetNumChildren();,if (arrayLiteral != null ) int numberSL = arrayLiteral.jjtGetNumChildren();
Solve.java,solveKind = getKind(kind.getKind());,if (getKind(kind != null ) solveKind = getKind(kind.getKind());
SplitSelect.java,int value = super.getChoiceValue();,if (super != null ) int value = super.getChoiceValue();
Solve.java,int to = options.getTimeOut();,if (options != null ) int to = options.getTimeOut();
Binpacking.java,maxCapacity = maxC.max();,if (maxC != null ) maxCapacity = maxC.max();
Diffn.java,int lMin = rr.length(oDim).min();,if (rr != null ) int lMin = rr.length(oDim).min();
Diffn.java,int lMin = rr.length(oDim).min();,if (rr != null ) int lMin = rr.length(oDim).min();
FilterBenchmarkTest.java,result = store.consistency();,if (store != null ) result = store.consistency();
FilterBenchmarkTest.java,result = store.consistency();,if (store != null ) result = store.consistency();
FilterBenchmarkTest.java,result = store.consistency();,if (store != null ) result = store.consistency();
FilterBenchmarkTest.java,result = store.consistency();,if (store != null ) result = store.consistency();
FilterBenchmarkTest.java,result = store.consistency();,if (store != null ) result = store.consistency();
FilterBenchmarkTest.java,result = store.consistency();,if (store != null ) result = store.consistency();
FilterBenchmarkTest.java,result = store.consistency();,if (store != null ) result = store.consistency();
FilterBenchmarkTest.java,result = store.consistency();,if (store != null ) result = store.consistency();
FilterBenchmarkTest.java,int[] delays = filter.delays();,if (filter != null ) int[] delays = filter.delays();
FilterBenchmarkTest.java,int[] lastOp = filter.lastOp();,if (filter != null ) int[] lastOp = filter.lastOp();
FilterBenchmarkTest.java,D[i] = filter.addDel();,if (filter != null ) D[i] = filter.addDel();
FilterBenchmarkTest.java,D[i] = filter.mulDel();,if (filter != null ) D[i] = filter.mulDel();
FilterBenchmarkTest.java,Ns = filter.names();,if (filter != null ) Ns = filter.names();
FilterBenchmarkTest.java,int[] delays = filter.delays();,if (filter != null ) int[] delays = filter.delays();
FilterBenchmarkTest.java,int[] lastOp = filter.lastOp();,if (filter != null ) int[] lastOp = filter.lastOp();
FilterBenchmarkTest.java,D[i] = filter.addDel();,if (filter != null ) D[i] = filter.addDel();
FilterBenchmarkTest.java,D[i] = filter.mulDel();,if (filter != null ) D[i] = filter.mulDel();
FilterBenchmarkTest.java,Ns = filter.names();,if (filter != null ) Ns = filter.names();
FilterBenchmarkTest.java,int[] delays = filter.delays();,if (filter != null ) int[] delays = filter.delays();
FilterBenchmarkTest.java,int[] lastOp = filter.lastOp();,if (filter != null ) int[] lastOp = filter.lastOp();
FilterBenchmarkTest.java,D[i] = filter.addDel();,if (filter != null ) D[i] = filter.addDel();
FilterBenchmarkTest.java,D[i] = filter.mulDel();,if (filter != null ) D[i] = filter.mulDel();
FilterBenchmarkTest.java,Ns = filter.names();,if (filter != null ) Ns = filter.names();
FilterBenchmarkTest.java,int[] delays = filter.delays();,if (filter != null ) int[] delays = filter.delays();
FilterBenchmarkTest.java,int[] lastOp = filter.lastOp();,if (filter != null ) int[] lastOp = filter.lastOp();
FilterBenchmarkTest.java,D[i] = filter.addDel();,if (filter != null ) D[i] = filter.addDel();
FilterBenchmarkTest.java,D[i] = filter.mulDel();,if (filter != null ) D[i] = filter.mulDel();
FilterBenchmarkTest.java,Ns = filter.namesPipeline();,if (filter != null ) Ns = filter.namesPipeline();
Fz2jacop.java,Thread tread = java.lang.Thread.currentThread();,if (java != null ) Thread tread = java.lang.Thread.currentThread();
Fz2jacop.java,long startCPU = b.getThreadCpuTime(tread.getId());,if (b != null ) long startCPU = b.getThreadCpuTime(tread.getId());
Solve.java,tread = java.lang.Thread.currentThread();,if (java != null ) tread = java.lang.Thread.currentThread();
Solve.java,startCPU = b.getThreadCpuTime(tread.getId());,if (b != null ) startCPU = b.getThreadCpuTime(tread.getId());
Solve.java,tread = java.lang.Thread.currentThread();,if (java != null ) tread = java.lang.Thread.currentThread();
Solve.java,startCPU = b.getThreadCpuTime(tread.getId());,if (b != null ) startCPU = b.getThreadCpuTime(tread.getId());
SumInt.java,min = (long)xd.min();,if ((long)xd != null ) min = (long)xd.min();
SumInt.java,max = (long)xd.max();,if ((long)xd != null ) max = (long)xd.max();
SumInt.java,long sMax = (long)sum.max();,if ((long)sum != null ) long sMax = (long)sum.max();
SumInt.java,long sMin = (long)sum.min();,if ((long)sum != null ) long sMin = (long)sum.min();
Binpacking.java,IntVar var = binQueue.removeFirst();,if (binQueue != null ) IntVar var = binQueue.removeFirst();
Binpacking.java,IntVar var = itemQueue.removeFirst();,if (itemQueue != null ) IntVar var = itemQueue.removeFirst();
Binpacking.java,allCapacityMin += aLoad.min();,if (aLoad != null ) allCapacityMin += aLoad.min();
Binpacking.java,allCapacityMax += aLoad.max();,if (aLoad != null ) allCapacityMax += aLoad.max();
CumulativePrimary.java,int min = start[i].min(); //t.est();,if (//t != null ) int min = start[i].min(); //t.est();
SimpleTable.java,ValueEnumeration e = cd.valueEnumeration();,if (cd != null ) ValueEnumeration e = cd.valueEnumeration();
SimpleTable.java,Long bs = xSupport.get(e.nextElement());,if (xSupport != null ) Long bs = xSupport.get(e.nextElement());
SimpleTable.java,mask |= (bs.longValue());,if ((bs != null ) mask |= (bs.longValue());
SimpleTable.java,ValueEnumeration e = xi.dom().valueEnumeration();,if (xi != null ) ValueEnumeration e = xi.dom().valueEnumeration();
SimpleTable.java,int el = x[i].value();,if (x[i] != null ) int el = x[i].value();
Table.java,ValueEnumeration e = rp.valueEnumeration();,if (rp != null ) ValueEnumeration e = rp.valueEnumeration();
Table.java,long[] bs = xSupport.get(e.nextElement());,if (xSupport != null ) long[] bs = xSupport.get(e.nextElement());
Table.java,ValueEnumeration e = cd.valueEnumeration();,if (cd != null ) ValueEnumeration e = cd.valueEnumeration();
Table.java,long[] bs = xSupport.get(e.nextElement());,if (xSupport != null ) long[] bs = xSupport.get(e.nextElement());
Table.java,ValueEnumeration e = xi.dom().valueEnumeration();,if (xi != null ) ValueEnumeration e = xi.dom().valueEnumeration();
TableMill.java,int element = val.nextElement();,if (val != null ) int element = val.nextElement();
TableMill.java,int e = val.nextElement();,if (val != null ) int e = val.nextElement();
GlobalConstraints.java,double k = (double)diff.size();,if ((double)diff != null ) double k = (double)diff.size();
AleB.java,ValueEnumeration aLubEnum = a.domain.lub().valueEnumeration();,if (a != null ) ValueEnumeration aLubEnum = a.domain.lub().valueEnumeration();
AleB.java,ValueEnumeration bGlbEnum = b.domain.glb().valueEnumeration();,if (b != null ) ValueEnumeration bGlbEnum = b.domain.glb().valueEnumeration();
AleB.java,int be = bGlbEnum.nextElement();,if (bGlbEnum != null ) int be = bGlbEnum.nextElement();
AleB.java,ae = aLubEnum.nextElement();,if (aLubEnum != null ) ae = aLubEnum.nextElement();
AleB.java,be = bGlbEnum.nextElement();,if (bGlbEnum != null ) be = bGlbEnum.nextElement();
AleB.java,int xv = xe.nextElement();,if (xe != null ) int xv = xe.nextElement();
AleB.java,int yv = ye.nextElement();,if (ye != null ) int yv = ye.nextElement();
AltB.java,ValueEnumeration aLubEnum = a.domain.lub().valueEnumeration();,if (a != null ) ValueEnumeration aLubEnum = a.domain.lub().valueEnumeration();
AltB.java,ValueEnumeration bGlbEnum = b.domain.glb().valueEnumeration();,if (b != null ) ValueEnumeration bGlbEnum = b.domain.glb().valueEnumeration();
AltB.java,int be = bGlbEnum.nextElement();,if (bGlbEnum != null ) int be = bGlbEnum.nextElement();
AltB.java,ae = aLubEnum.nextElement();,if (aLubEnum != null ) ae = aLubEnum.nextElement();
AltB.java,be = bGlbEnum.nextElement();,if (bGlbEnum != null ) be = bGlbEnum.nextElement();
AltB.java,int xv = xe.nextElement();,if (xe != null ) int xv = xe.nextElement();
AltB.java,int yv = ye.nextElement();,if (ye != null ) int yv = ye.nextElement();
Alldiff.java,min[i] = listAlldiff[i].min();,if (listAlldiff[i] != null ) min[i] = listAlldiff[i].min();
Alldiff.java,max[i] = listAlldiff[i].max();,if (listAlldiff[i] != null ) max[i] = listAlldiff[i].max();
Alldiff.java,min[i] = listAlldiff[i].min();,if (listAlldiff[i] != null ) min[i] = listAlldiff[i].min();
Alldiff.java,max[i] = listAlldiff[i].max();,if (listAlldiff[i] != null ) max[i] = listAlldiff[i].max();
SimpleTable.java,ValueEnumeration e = cd.valueEnumeration();,if (cd != null ) ValueEnumeration e = cd.valueEnumeration();
SimpleTable.java,Long bs = xSupport.get(e.nextElement());,if (xSupport != null ) Long bs = xSupport.get(e.nextElement());
SimpleTable.java,mask |= (bs.longValue());,if ((bs != null ) mask |= (bs.longValue());
SimpleTable.java,ValueEnumeration e = xi.dom().valueEnumeration();,if (xi != null ) ValueEnumeration e = xi.dom().valueEnumeration();
Table.java,ValueEnumeration e = rp.valueEnumeration();,if (rp != null ) ValueEnumeration e = rp.valueEnumeration();
Table.java,long[] bs = xSupport.get(e.nextElement());,if (xSupport != null ) long[] bs = xSupport.get(e.nextElement());
Table.java,ValueEnumeration e = cd.valueEnumeration();,if (cd != null ) ValueEnumeration e = cd.valueEnumeration();
Table.java,long[] bs = xSupport.get(e.nextElement());,if (xSupport != null ) long[] bs = xSupport.get(e.nextElement());
Table.java,ValueEnumeration e = xi.dom().valueEnumeration();,if (xi != null ) ValueEnumeration e = xi.dom().valueEnumeration();
SumBool.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
SumBool.java,this.store = sum.getStore();,if (sum != null ) this.store = sum.getStore();
SumInt.java,this.store = sum.getStore();,if (sum != null ) this.store = sum.getStore();
SumInt.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
ValuePrecede.java,int a = alpha.value();,if (alpha != null ) int a = alpha.value();
ValuePrecede.java,int g = gamma.value();,if (gamma != null ) int g = gamma.value();
ValuePrecede.java,int a = alpha.value();,if (alpha != null ) int a = alpha.value();
CumulativePrimary.java,int min = start[i].min(); //t.est();,if (//t != null ) int min = start[i].min(); //t.est();
Binpacking.java,IntVar var = binQueue.removeFirst();,if (binQueue != null ) IntVar var = binQueue.removeFirst();
Binpacking.java,IntVar var = itemQueue.removeFirst();,if (itemQueue != null ) IntVar var = itemQueue.removeFirst();
Binpacking.java,allCapacityMin += aLoad.min();,if (aLoad != null ) allCapacityMin += aLoad.min();
Binpacking.java,allCapacityMax += aLoad.max();,if (aLoad != null ) allCapacityMax += aLoad.max();
SmallDenseDomainTest.java,Class<SmallDenseDomainTest> cls = (Class<SmallDenseDomainTest>) this.getClass();,if (this != null ) Class<SmallDenseDomainTest> cls = (Class<SmallDenseDomainTest>) this.getClass();
Subcircuit.java,int[] dominates = graph.dom();,if (graph != null ) int[] dominates = graph.dom();
Subcircuit.java,int[] dominates = graph.dom();,if (graph != null ) int[] dominates = graph.dom();
Subcircuit.java,n = stck.pop();,if (stck != null ) n = stck.pop();
Subcircuit.java,n = stck.pop();,if (stck != null ) n = stck.pop();
SimpleTable.java,IntDomain pd = cd.previousDomain();,if (cd != null ) IntDomain pd = cd.previousDomain();
Table.java,IntDomain pd = cd.previousDomain();,if (cd != null ) IntDomain pd = cd.previousDomain();
SimpleTable.java,IntDomain pd = cd.previousDomain();,if (cd != null ) IntDomain pd = cd.previousDomain();
Table.java,IntDomain pd = cd.previousDomain();,if (cd != null ) IntDomain pd = cd.previousDomain();
Max.java,int maxMax = max.max();,if (max != null ) int maxMax = max.max();
Max.java,int minMax = max.min();,if (max != null ) int minMax = max.min();
Max.java,vDom = var.dom();,if (var != null ) vDom = var.dom();
MaxSimple.java,int maxMax = max.max();,if (max != null ) int maxMax = max.max();
Min.java,int minMin = min.min();,if (min != null ) int minMin = min.min();
Min.java,int maxMin = min.max();,if (min != null ) int maxMin = min.max();
Min.java,vDom = var.dom();,if (var != null ) vDom = var.dom();
MinSimple.java,int minMin = min.min();,if (min != null ) int minMin = min.min();
SumWeight.java,long value = (long)var.min();,if ((long)var != null ) long value = (long)var.min();
XmodYeqZ.java,resultMin = result.min();,if (result != null ) resultMin = result.min();
XmodYeqZ.java,resultMax = result.max();,if (result != null ) resultMax = result.max();
XplusYeqZ.java,"sumMin = Math.subtractExact(sumMin, z.max());","if (z != null ) sumMin = Math.subtractExact(sumMin, z.max());"
XplusYeqZ.java,"sumMax = Math.subtractExact(sumMax, z.min());","if (z != null ) sumMax = Math.subtractExact(sumMax, z.min());"
SumWeight.java,int value = var.min();,if (var != null ) int value = var.min();
SumInt.java,min = xd.min();,if (xd != null ) min = xd.min();
SumInt.java,max = xd.max();,if (xd != null ) max = xd.max();
SumInt.java,int sMax = sum.max();,if (sum != null ) int sMax = sum.max();
SumInt.java,min = x[i].min();,if (x[i] != null ) min = x[i].min();
SumInt.java,int newMax = x[i].max();,if (x[i] != null ) int newMax = x[i].max();
SumInt.java,int sMin = sum.min();,if (sum != null ) int sMin = sum.min();
SumInt.java,max = x[i].max();,if (x[i] != null ) max = x[i].max();
SumInt.java,int newMin = x[i].min();,if (x[i] != null ) int newMin = x[i].min();
SumInt.java,min = x[i].min();,if (x[i] != null ) min = x[i].min();
SumInt.java,int newMin = x[i].min();,if (x[i] != null ) int newMin = x[i].min();
SumInt.java,int newMax = x[i].max();,if (x[i] != null ) int newMax = x[i].max();
SumInt.java,sMin += x[i].min();,if (x[i] != null ) sMin += x[i].min();
SumInt.java,sMax += x[i].max();,if (x[i] != null ) sMax += x[i].max();
SumInt.java,sMin += x[i].min();,if (x[i] != null ) sMin += x[i].min();
SumInt.java,sMax += x[i].max();,if (x[i] != null ) sMax += x[i].max();
SumInt.java,sMax += x[i].max();,if (x[i] != null ) sMax += x[i].max();
SumInt.java,sMin += x[i].min();,if (x[i] != null ) sMin += x[i].min();
SmallDenseDomainTest.java,long begin = System.currentTimeMillis();,if (System != null ) long begin = System.currentTimeMillis();
SmallDenseDomainTest.java,long end = System.currentTimeMillis();,if (System != null ) long end = System.currentTimeMillis();
SmallDenseDomainTest.java,long begin = System.currentTimeMillis();,if (System != null ) long begin = System.currentTimeMillis();
SmallDenseDomainTest.java,long end = System.currentTimeMillis();,if (System != null ) long end = System.currentTimeMillis();
SmallDenseDomainTest.java,nodes += search.getNodes();,if (search != null ) nodes += search.getNodes();
SmallDenseDomainTest.java,decisions += search.getDecisions();,if (search != null ) decisions += search.getDecisions();
SmallDenseDomainTest.java,wrongDecisions += search.getWrongDecisions();,if (search != null ) wrongDecisions += search.getWrongDecisions();
SmallDenseDomainTest.java,backtracks += search.getBacktracks();,if (search != null ) backtracks += search.getBacktracks();
SmallDenseDomainTest.java,long begin = System.currentTimeMillis();,if (System != null ) long begin = System.currentTimeMillis();
SmallDenseDomainTest.java,long end = System.currentTimeMillis();,if (System != null ) long end = System.currentTimeMillis();
SmallDenseDomainTest.java,long begin = System.currentTimeMillis();,if (System != null ) long begin = System.currentTimeMillis();
SmallDenseDomainTest.java,long end = System.currentTimeMillis();,if (System != null ) long end = System.currentTimeMillis();
SmallDenseDomainTest.java,precision = FloatDomain.precision();,if (FloatDomain != null ) precision = FloatDomain.precision();
XplusYeqZ.java,"sumMin = add(sumMin, x.min());","if (x != null ) sumMin = add(sumMin, x.min());"
XplusYeqZ.java,"sumMax = add(sumMax, x.max());","if (x != null ) sumMax = add(sumMax, x.max());"
XplusYeqZ.java,"sumMin = add(sumMin, y.min());","if (y != null ) sumMin = add(sumMin, y.min());"
XplusYeqZ.java,"sumMax = add(sumMax, y.max());","if (y != null ) sumMax = add(sumMax, y.max());"
XplusYeqZ.java,"sumMin = subtract(sumMin, z.max());","if (z != null ) sumMin = subtract(sumMin, z.max());"
XplusYeqZ.java,"sumMax = subtract(sumMax, z.min());","if (z != null ) sumMax = subtract(sumMax, z.min());"
SumWeight.java,int pointer = nextGroundedPosition.value();,if (nextGroundedPosition != null ) int pointer = nextGroundedPosition.value();
XmodYeqZ.java,resultMin = result.min();,if (result != null ) resultMin = result.min();
XmodYeqZ.java,resultMax = result.max();,if (result != null ) resultMax = result.max();
Binpacking.java,allCapacityMin += load[i].min();,if (load[i] != null ) allCapacityMin += load[i].min();
Binpacking.java,allCapacityMax += load[i].max();,if (load[i] != null ) allCapacityMax += load[i].max();
CumulativeBasic.java,durInt[i] = durations[i].value();,if (durations[i] != null ) durInt[i] = durations[i].value();
CumulativeBasic.java,resInt[i] = resources[i].value();,if (resources[i] != null ) resInt[i] = resources[i].value();
CumulativePrimary.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
Sum.java,boolean sat = sum.singleton();,if (sum != null ) boolean sat = sum.singleton();
Sum.java,sat = list[i].singleton();,if (list[i] != null ) sat = list[i].singleton();
Count.java,return (countAll == counter.min());,if (counter != null ) return (countAll == counter.min());
Binpacking.java,allBinsSingleton = item[i++].bin.singleton();,if (item[i++] != null ) allBinsSingleton = item[i++].bin.singleton();
ReversibleSparseBitSet.java,int n = limit.value();,if (limit != null ) int n = limit.value();
ReversibleSparseBitSet.java,long[] wrds = words.value();,if (words != null ) long[] wrds = words.value();
ReversibleSparseBitSet.java,long[] wrds = words.value();,if (words != null ) long[] wrds = words.value();
ReversibleSparseBitSet.java,long[] wrds = words.value();,if (words != null ) long[] wrds = words.value();
SumWeightedSet.java,ValueEnumeration enumer = a.domain.glb().valueEnumeration();,if (a != null ) ValueEnumeration enumer = a.domain.glb().valueEnumeration();
SumWeightedSet.java,sum += elementWeights.get(enumer.nextElement());,if (elementWeights != null ) sum += elementWeights.get(enumer.nextElement());
SumWeightedSet.java,int el = entries.getKey();,if (entries != null ) int el = entries.getKey();
Knapsack.java,var = item.getVariable();,if (item != null ) var = item.getVariable();
Alldistinct.java,HashSet<IntVar> visitedVariables = new HashSet<IntVar>(matching.size());,if (HashSet<IntVar>(matching != null ) HashSet<IntVar> visitedVariables = new HashSet<IntVar>(matching.size());
Or.java,Var V = variables.removeFirst();,if (variables != null ) Var V = variables.removeFirst();
Reified.java,Var V = variables.removeFirst();,if (variables != null ) Var V = variables.removeFirst();
Knapsack.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Knapsack.java,KnapsackItem value = entry.getValue();,if (entry != null ) KnapsackItem value = entry.getValue();
AndBoolVector.java,this.l = varSet.size();,if (varSet != null ) this.l = varSet.size();
Not.java,Var V = variables.removeFirst();,if (variables != null ) Var V = variables.removeFirst();
SumBool.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
SumWeight.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Alldifferent.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Alldifferent.java,numberArgs = (short) variables.size();,if (variables != null ) numberArgs = (short) variables.size();
CumulativeProfiles.java,value = t.res.max();,if (t != null ) value = t.res.max();
ExtensionalSupportVA.java,t[i] = list[i].min();,if (list[i] != null ) t[i] = list[i].min();
ExtensionalSupportVA.java,t[i] = list[i].min();,if (list[i] != null ) t[i] = list[i].min();
ExtensionalSupportVA.java,t[i] = list[i].min();,if (list[i] != null ) t[i] = list[i].min();
Subcircuit.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
NetworkFlow.java,this.numberArgs = (short) map.size();,if (map != null ) this.numberArgs = (short) map.size();
And.java,Var var = variables.removeFirst();,if (variables != null ) Var var = variables.removeFirst();
Cumulative.java,"startS = Math.min(startS, t.est());","if (t != null ) startS = Math.min(startS, t.est());"
Cumulative.java,"completionS = Math.max(completionS, t.lct());","if (t != null ) completionS = Math.max(completionS, t.lct());"
Cumulative.java,"completionS = Math.max(completionS, t.lct());","if (t != null ) completionS = Math.max(completionS, t.lct());"
Cumulative.java,"startS = Math.min(startS, t.est());","if (t != null ) startS = Math.min(startS, t.est());"
Cumulative.java,"startOfS = Math.min(startOfS, t.est());","if (t != null ) startOfS = Math.min(startOfS, t.est());"
Cumulative.java,"completionOfS = Math.max(completionOfS, t.lct());","if (t != null ) completionOfS = Math.max(completionOfS, t.lct());"
Cumulative.java,"completionOfS = Math.max(completionOfS, t.lct());","if (t != null ) completionOfS = Math.max(completionOfS, t.lct());"
Cumulative.java,"startOfS = Math.min(startOfS, t.est());","if (t != null ) startOfS = Math.min(startOfS, t.est());"
Cumulative.java,"lctOfS = Math.max(lctOfS, t.lct());","if (t != null ) lctOfS = Math.max(lctOfS, t.lct());"
Cumulative.java,"estOfS = Math.min(estOfS, t.est());","if (t != null ) estOfS = Math.min(estOfS, t.est());"
Cumulative.java,"lctS = Math.max(lctS, t.lct());","if (t != null ) lctS = Math.max(lctS, t.lct());"
Cumulative.java,"completionS = Math.max(completionS, t.lct());","if (t != null ) completionS = Math.max(completionS, t.lct());"
Cumulative.java,"startS = Math.min(startS, t.est());","if (t != null ) startS = Math.min(startS, t.est());"
Eq.java,Var V = variables.removeFirst();,if (variables != null ) Var V = variables.removeFirst();
Values.java,sat = list[i].singleton();,if (list[i] != null ) sat = list[i].singleton();
Xor.java,Var V = variables.removeFirst();,if (variables != null ) Var V = variables.removeFirst();
CumulativeBasic.java,durInt[i] = durations[i].value();,if (durations[i] != null ) durInt[i] = durations[i].value();
CumulativeBasic.java,resInt[i] = resources[i].value();,if (resources[i] != null ) resInt[i] = resources[i].value();
SimpleTable.java,IntDomain pd = cd.previousDomain();,if (cd != null ) IntDomain pd = cd.previousDomain();
SimpleTable.java,delta = rp.getSize();,if (rp != null ) delta = rp.getSize();
SimpleTable.java,ValueEnumeration e = rp.valueEnumeration();,if (rp != null ) ValueEnumeration e = rp.valueEnumeration();
SimpleTable.java,Long bs = xSupport.get(e.nextElement());,if (xSupport != null ) Long bs = xSupport.get(e.nextElement());
SimpleTable.java,mask |= (bs.longValue());,if ((bs != null ) mask |= (bs.longValue());
SimpleTable.java,ValueEnumeration e = cd.valueEnumeration();,if (cd != null ) ValueEnumeration e = cd.valueEnumeration();
SimpleTable.java,Long bs = xSupport.get(e.nextElement());,if (xSupport != null ) Long bs = xSupport.get(e.nextElement());
SimpleTable.java,mask |= (bs.longValue());,if ((bs != null ) mask |= (bs.longValue());
SimpleTable.java,long w = words.value();,if (words != null ) long w = words.value();
SimpleTable.java,long wrds = words.value();,if (words != null ) long wrds = words.value();
SimpleTable.java,boolean xiSingleton = xi.singleton();,if (xi != null ) boolean xiSingleton = xi.singleton();
SimpleTable.java,ValueEnumeration e = xi.dom().valueEnumeration();,if (xi != null ) ValueEnumeration e = xi.dom().valueEnumeration();
Table.java,IntDomain pd = cd.previousDomain();,if (cd != null ) IntDomain pd = cd.previousDomain();
Table.java,delta = rp.getSize();,if (rp != null ) delta = rp.getSize();
Table.java,ValueEnumeration e = rp.valueEnumeration();,if (rp != null ) ValueEnumeration e = rp.valueEnumeration();
Table.java,long[] bs = xSupport.get(e.nextElement());,if (xSupport != null ) long[] bs = xSupport.get(e.nextElement());
Table.java,ValueEnumeration e = cd.valueEnumeration();,if (cd != null ) ValueEnumeration e = cd.valueEnumeration();
Table.java,long[] bs = xSupport.get(e.nextElement());,if (xSupport != null ) long[] bs = xSupport.get(e.nextElement());
Table.java,long[] wrds = rbs.words.value();,if (rbs != null ) long[] wrds = rbs.words.value();
Table.java,boolean xiSingleton = xi.singleton();,if (xi != null ) boolean xiSingleton = xi.singleton();
Table.java,ValueEnumeration e = xi.dom().valueEnumeration();,if (xi != null ) ValueEnumeration e = xi.dom().valueEnumeration();
IntervalDomain.java,object.size = intervals.size();,if (intervals != null ) object.size = intervals.size();
XMLSaveSupport.java,SAXTransformerFactory tf = (SAXTransformerFactory) SAXTransformerFactory.newInstance();,if (SAXTransformerFactory != null ) SAXTransformerFactory tf = (SAXTransformerFactory) SAXTransformerFactory.newInstance();
XMLSaveSupport.java,TransformerHandler hd = tf.newTransformerHandler();,if (tf != null ) TransformerHandler hd = tf.newTransformerHandler();
XMLSaveSupport.java,Transformer serializer = hd.getTransformer();,if (hd != null ) Transformer serializer = hd.getTransformer();
XMLSaveSupport.java,Object[] sortedNames = store.variablesHashMap.keySet().toArray();,if (store != null ) Object[] sortedNames = store.variablesHashMap.keySet().toArray();
XMLSaveSupport.java,sortedNames = constraints.keySet().toArray();,if (constraints != null ) sortedNames = constraints.keySet().toArray();
XMLSaveSupport.java,Class c = object.getClass();,if (object != null ) Class c = object.getClass();
XMLSaveSupport.java,String characters = value.toString();,if (value != null ) String characters = value.toString();
XMLSaveSupport.java,Iterator iterator = collection.iterator();,if (collection != null ) Iterator iterator = collection.iterator();
XMLSaveSupport.java,Object ithObject = iterator.next();,if (iterator != null ) Object ithObject = iterator.next();
FloatIntervalDomain.java,object.size = intervals.size();,if (intervals != null ) object.size = intervals.size();
And.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
And.java,numberArgs += cc.numberArgs();,if (cc != null ) numberArgs += cc.numberArgs();
And.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
EqBool.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
ExtensionalSupportMDD.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Or.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
VariableTrace.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
VariableTrace.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
MinizincBasedTest.java,String result = baos.toString();,if (baos != null ) String result = baos.toString();
MinizincBasedTestsHelper.java,String foo = outputFilename.toString();,if (outputFilename != null ) String foo = outputFilename.toString();
MinizincBasedTestsHelper.java,String myString = line.toString();,if (line != null ) String myString = line.toString();
MinizincBasedTestsHelper.java,tab[i] = line.toString();,if (line != null ) tab[i] = line.toString();
FznFileGeneratorTest.java,itrScriptGold = goldList.iterator();,if (goldList != null ) itrScriptGold = goldList.iterator();
FznFileGeneratorTest.java,itrScriptTest = scriptTest.iterator();,if (scriptTest != null ) itrScriptTest = scriptTest.iterator();
FznFileGeneratorTest.java,expectedDir = Paths.get(itrScriptGold.next());,if (Paths != null ) expectedDir = Paths.get(itrScriptGold.next());
FznFileGeneratorTest.java,Path resultDir = Paths.get(itrScriptTest.next());,if (Paths != null ) Path resultDir = Paths.get(itrScriptTest.next());
MinizincBasedTestsHelper.java,String result = baos.toString();,if (baos != null ) String result = baos.toString();
Cumulative.java,int C = limit.max();,if (limit != null ) int C = limit.max();
GlobalConstraints.java,double k = (double)diff.size();,if ((double)diff != null ) double k = (double)diff.size();
ReversibleSparseBitSet.java,int l = limit.value();,if (limit != null ) int l = limit.value();
SimpleTable.java,delta = rp.getSize();,if (rp != null ) delta = rp.getSize();
Table.java,int nw = rbs.noWords();,if (rbs != null ) int nw = rbs.noWords();
GlobalConstraints.java,maxDomSize = vi.getSize();,if (vi != null ) maxDomSize = vi.getSize();
ReversibleSparseBitSet.java,long wOriginal = words[offset].value();,if (words[offset] != null ) long wOriginal = words[offset].value();
ReversibleSparseBitSet.java,long w = words[offset].value();,if (words[offset] != null ) long w = words[offset].value();
Table.java,ValueEnumeration e = v.dom().valueEnumeration();,if (v != null ) ValueEnumeration e = v.dom().valueEnumeration();
Table.java,int index = indexInteger.intValue();,if (indexInteger != null ) int index = indexInteger.intValue();
Solve.java,double[] costFloat = dictionary.getFloatArray(node.getIdent());,if (dictionary != null ) double[] costFloat = dictionary.getFloatArray(node.getIdent());
FznFileGeneratorTest.java,iterator = goldList.iterator();,if (goldList != null ) iterator = goldList.iterator();
Cumulative.java,int l = nonZeroTasks.size();,if (nonZeroTasks != null ) int l = nonZeroTasks.size();
Cumulative.java,int tEST = tt.EST();,if (tt != null ) int tEST = tt.EST();
Cumulative.java,int tLCT = tt.LCT();,if (tt != null ) int tLCT = tt.LCT();
Cumulative.java,int tLCT = tt.LCT();,if (tt != null ) int tLCT = tt.LCT();
Cumulative.java,int tEST = tt.EST();,if (tt != null ) int tEST = tt.EST();
Cumulative.java,int Dur = t.dur.min();,if (t != null ) int Dur = t.dur.min();
Cumulative.java,int Res = t.res.min();,if (t != null ) int Res = t.res.min();
Cumulative.java,int Dur = t.dur.min();,if (t != null ) int Dur = t.dur.min();
Cumulative.java,int Res = t.res.min();,if (t != null ) int Res = t.res.min();
Cumulative.java,A = minUse.start();,if (minUse != null ) A = minUse.start();
Cumulative.java,B = minUse.stop();,if (minUse != null ) B = minUse.stop();
Cumulative.java,ArrayList<Task> TasksToRemove = new ArrayList<Task>(S.size());,if (ArrayList<Task>(S != null ) ArrayList<Task> TasksToRemove = new ArrayList<Task>(S.size());
Cumulative.java,ArrayList<Task> TasksToRemove = new ArrayList<Task>(S.size());,if (ArrayList<Task>(S != null ) ArrayList<Task> TasksToRemove = new ArrayList<Task>(S.size());
CumulativeProfiles.java,value = t.res.max();,if (t != null ) value = t.res.max();
Alldistinct.java,next = (IntVar) e.next();,if (e != null ) next = (IntVar) e.next();
Alldistinct.java,HashSet<Integer> visitedValues = new HashSet<Integer>(valueMapVariable.size());,if (HashSet<Integer>(valueMapVariable != null ) HashSet<Integer> visitedValues = new HashSet<Integer>(valueMapVariable.size());
Knapsack.java,Set<IntVar> qs = itemPar.keySet();,if (itemPar != null ) Set<IntVar> qs = itemPar.keySet();
SimpleSolutionListener.java,T current = itr.next();,if (itr != null ) T current = itr.next();
Constraints.java,this.debug = opt.debug();,if (opt != null ) this.debug = opt.debug();
Support.java,this.debug = Options.debug();,if (Options != null ) this.debug = Options.debug();
Solve.java,setVar += v.dom().toString();,if (v != null ) setVar += v.dom().toString();
Store.java,count += watchedConstraints.get(v).size();,if (watchedConstraints != null ) count += watchedConstraints.get(v).size();
Store.java,Set<String> ids = variablesHashMap.keySet();,if (variablesHashMap != null ) Set<String> ids = variablesHashMap.keySet();
Store.java,Domain d = variablesHashMap.get(s).dom();,if (variablesHashMap != null ) Domain d = variablesHashMap.get(s).dom();
Binpacking.java,Set<IntVar> bs = itemPar.keySet();,if (itemPar != null ) Set<IntVar> bs = itemPar.keySet();
MUCA.java,in = Integer.valueOf(tk.nextToken());,if (Integer != null ) in = Integer.valueOf(tk.nextToken());
MUCA.java,out = Integer.valueOf(tk.nextToken());,if (Integer != null ) out = Integer.valueOf(tk.nextToken());
Support.java,Set<IntVar> vs = dictionary.aliasTable.keySet();,if (dictionary != null ) Set<IntVar> vs = dictionary.aliasTable.keySet();
Sum.java,"sumMin = subtract(sumMin, sum.max());","if (sum != null ) sumMin = subtract(sumMin, sum.max());"
Sum.java,"sumMax = subtract(sumMax, sum.min());","if (sum != null ) sumMax = subtract(sumMax, sum.min());"
WhoKilledAgatha.java,int numSolutions = label.getSolutionListener().solutionsNo();,if (label != null ) int numSolutions = label.getSolutionListener().solutionsNo();
IntervalGaussSeidel.java,double epsilon = FloatDomain.precision();,if (FloatDomain != null ) double epsilon = FloatDomain.precision();
CosPeqR_decomposed.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
CosPeqR_decomposed.java,sat = sat && c.satisfied();,if (c != null ) sat = sat && c.satisfied();
AbsXeqY.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
AbsXeqY.java,IntervalEnumeration enumer = x.domain.intervalEnumeration();,if (x != null ) IntervalEnumeration enumer = x.domain.intervalEnumeration();
AbsXeqY.java,Interval next = enumer.nextElement();,if (enumer != null ) Interval next = enumer.nextElement();
AbsXeqY.java,IntervalEnumeration enumer = y.domain.intervalEnumeration();,if (y != null ) IntervalEnumeration enumer = y.domain.intervalEnumeration();
AbsXeqY.java,Interval next = enumer.nextElement();,if (enumer != null ) Interval next = enumer.nextElement();
AbsXeqY.java,int xSize = xDom.noIntervals();,if (xDom != null ) int xSize = xDom.noIntervals();
Alldiff.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
Alldiff.java,int groundPos = grounded.value();,if (grounded != null ) int groundPos = grounded.value();
Alldiff.java,min[i] = listAlldiff[i].min();,if (listAlldiff[i] != null ) min[i] = listAlldiff[i].min();
Alldiff.java,max[i] = listAlldiff[i].max();,if (listAlldiff[i] != null ) max[i] = listAlldiff[i].max();
Alldiff.java,min[i] = listAlldiff[i].min();,if (listAlldiff[i] != null ) min[i] = listAlldiff[i].min();
Alldiff.java,max[i] = listAlldiff[i].max();,if (listAlldiff[i] != null ) max[i] = listAlldiff[i].max();
Alldifferent.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
Alldifferent.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Alldifferent.java,numberArgs = (short) variables.size();,if (variables != null ) numberArgs = (short) variables.size();
Alldifferent.java,int groundPos = grounded.value();,if (grounded != null ) int groundPos = grounded.value();
Alldifferent.java,for(int i = grounded.value(); i < list.length; i++),if (i++) != null ) for(int i = grounded.value(); i < list.length; i++)
Alldifferent.java,IntDomain vDom = list[i].dom();,if (list[i] != null ) IntDomain vDom = list[i].dom();
Alldifferent.java,IntDomain ljDom = list[j].dom();,if (list[j] != null ) IntDomain ljDom = list[j].dom();
Alldistinct.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Alldistinct.java,value = enumer.nextElement();,if (enumer != null ) value = enumer.nextElement();
Alldistinct.java,LinkedHashSet<IntVar> copy = (LinkedHashSet<IntVar>) variableQueue.clone();,if (variableQueue != null ) LinkedHashSet<IntVar> copy = (LinkedHashSet<IntVar>) variableQueue.clone();
Alldistinct.java,int lastNotGround = stampNotGroundedVariables.value();,if (stampNotGroundedVariables != null ) int lastNotGround = stampNotGroundedVariables.value();
Alldistinct.java,int lastPosition = stamp.value();,if (stamp != null ) int lastPosition = stamp.value();
Alldistinct.java,Iterator<IntVar> iter = fdvs.iterator();,if (fdvs != null ) Iterator<IntVar> iter = fdvs.iterator();
Alldistinct.java,IntVar V = iter.next();,if (iter != null ) IntVar V = iter.next();
Alldistinct.java,Integer matchedValue = matching.get(V).value();,if (matching != null ) Integer matchedValue = matching.get(V).value();
Alldistinct.java,int value = enumer.nextElement();,if (enumer != null ) int value = enumer.nextElement();
Alldistinct.java,int lastPosition = stamp.value();,if (stamp != null ) int lastPosition = stamp.value();
Alldistinct.java,IntVar singleton = singletons.removeFirst();,if (singletons != null ) IntVar singleton = singletons.removeFirst();
Alldistinct.java,Integer integerValue = singleton.value();,if (singleton != null ) Integer integerValue = singleton.value();
Alldistinct.java,int lastNotGroundedVariable = stampNotGroundedVariables.value();,if (stampNotGroundedVariables != null ) int lastNotGroundedVariable = stampNotGroundedVariables.value();
Alldistinct.java,matchedValue = matching.get(variable).value();,if (matching != null ) matchedValue = matching.get(variable).value();
Alldistinct.java,n = nStamp.value();,if (nStamp != null ) n = nStamp.value();
Alldistinct.java,int lastNotGroundedVariable = stampNotGroundedVariables.value();,if (stampNotGroundedVariables != null ) int lastNotGroundedVariable = stampNotGroundedVariables.value();
Alldistinct.java,IntVar changedVariable = fdvs.iterator().next();,if (fdvs != null ) IntVar changedVariable = fdvs.iterator().next();
Alldistinct.java,vn = nStamp.value();,if (nStamp != null ) vn = nStamp.value();
Alldistinct.java,next = (IntVar) e.next();,if (e != null ) next = (IntVar) e.next();
Alldistinct.java,int stampValue = stampValues.value();,if (stampValues != null ) int stampValue = stampValues.value();
Alldistinct.java,int noOfReachedVariablesLastTime = stampReachability.value();,if (stampReachability != null ) int noOfReachedVariablesLastTime = stampReachability.value();
Alldistinct.java,variableComponentId = sccStamp.get(variable).value();,if (sccStamp != null ) variableComponentId = sccStamp.get(variable).value();
Alldistinct.java,matched = matching.get(variable).value();,if (matching != null ) matched = matching.get(variable).value();
Alldistinct.java,lastPosition = stamp.value();,if (stamp != null ) lastPosition = stamp.value();
Alldistinct.java,int sizePotentialFreeValues = stampValues.value();,if (stampValues != null ) int sizePotentialFreeValues = stampValues.value();
Alldistinct.java,stampValue = stamp.value();,if (stamp != null ) stampValue = stamp.value();
Alldistinct.java,int lastNotGroundedVariable = stampNotGroundedVariables.value();,if (stampNotGroundedVariables != null ) int lastNotGroundedVariable = stampNotGroundedVariables.value();
Alldistinct.java,matched = matching.get(variable).value();,if (matching != null ) matched = matching.get(variable).value();
Alldistinct.java,int sizePotentialFreeValues = stampValues.value();,if (stampValues != null ) int sizePotentialFreeValues = stampValues.value();
Alldistinct.java,stampValue = stamp.value();,if (stamp != null ) stampValue = stamp.value();
Alldistinct.java,Integer top = (Integer) path.getLast();,if (path != null ) Integer top = (Integer) path.getLast();
Alldistinct.java,top = (Integer) path.getLast();,if (path != null ) top = (Integer) path.getLast();
Alldistinct.java,top = matching.get(first).value();,if (matching != null ) top = matching.get(first).value();
Alldistinct.java,int allPathsSize = allpaths.size();,if (allpaths != null ) int allPathsSize = allpaths.size();
Alldistinct.java,int freePathSize = freepath.size();,if (freepath != null ) int freePathSize = freepath.size();
Alldistinct.java,sizePotentialFreeValues = stampValues.value();,if (stampValues != null ) sizePotentialFreeValues = stampValues.value();
Alldistinct.java,stampValue = stamp.value();,if (stamp != null ) stampValue = stamp.value();
Alldistinct.java,n = nStamp.value();,if (nStamp != null ) n = nStamp.value();
Alldistinct.java,IntVar changedVariable = fdvs.iterator().next();,if (fdvs != null ) IntVar changedVariable = fdvs.iterator().next();
Alldistinct.java,int lastPosition = stamp.value();,if (stamp != null ) int lastPosition = stamp.value();
Alldistinct.java,matched = matching.get(reachableVariable).value();,if (matching != null ) matched = matching.get(reachableVariable).value();
Alldistinct.java,Integer matchedValue = matching.get(x).value();,if (matching != null ) Integer matchedValue = matching.get(x).value();
Alldistinct.java,int lastPosition = stamp.value();,if (stamp != null ) int lastPosition = stamp.value();
Alldistinct.java,int sccStampX = sccStamp.get(x).value();,if (sccStamp != null ) int sccStampX = sccStamp.get(x).value();
Alldistinct.java,IntDomain vDom = list[i].dom();,if (list[i] != null ) IntDomain vDom = list[i].dom();
Alldistinct.java,IntDomain ljDom = list[j].dom();,if (list[j] != null ) IntDomain ljDom = list[j].dom();
Alldistinct.java,Integer matchedValue = matching.get(x).value();,if (matching != null ) Integer matchedValue = matching.get(x).value();
Alldistinct.java,int lastPosition = stamp.value();,if (stamp != null ) int lastPosition = stamp.value();
Alldistinct.java,int lastNotGroundedVariable = stampNotGroundedVariables.value();,if (stampNotGroundedVariables != null ) int lastNotGroundedVariable = stampNotGroundedVariables.value();
Alldistinct.java,Integer firstValue = list[i].min();,if (list[i] != null ) Integer firstValue = list[i].min();
Alldistinct.java,Integer secondValue = list[i].max();,if (list[i] != null ) Integer secondValue = list[i].max();
Alldistinct.java,int sizePotentialFreeValues = stampValues.value();,if (stampValues != null ) int sizePotentialFreeValues = stampValues.value();
Alldistinct.java,stampValue = stamp.value();,if (stamp != null ) stampValue = stamp.value();
Alldistinct.java,int lastPosition = stamp.value();,if (stamp != null ) int lastPosition = stamp.value();
Alldistinct.java,IntDomain xDom = xVar.dom();,if (xVar != null ) IntDomain xDom = xVar.dom();
Alldistinct.java,ValueEnumeration enumer = xDom.valueEnumeration();,if (xDom != null ) ValueEnumeration enumer = xDom.valueEnumeration();
Alldistinct.java,int lastPosition = stamp.value();,if (stamp != null ) int lastPosition = stamp.value();
Alldistinct.java,int lastPosition = stamp.value();,if (stamp != null ) int lastPosition = stamp.value();
Alldistinct.java,Integer next = enumerX.nextElement();,if (enumerX != null ) Integer next = enumerX.nextElement();
Among.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Among.java,this.kSet = kSet.clone();,if (kSet != null ) this.kSet = kSet.clone();
Among.java,int currentLB = lowerBorder.value();,if (lowerBorder != null ) int currentLB = lowerBorder.value();
Among.java,int currentUB = upperBorder.value();,if (upperBorder != null ) int currentUB = upperBorder.value();
AmongVar.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
AmongVar.java,int yGround = yGrounded.value();,if (yGrounded != null ) int yGround = yGrounded.value();
AmongVar.java,K = K.union(x.min());,if (K != null ) K = K.union(x.min());
AmongVar.java,else U = (IntDomain)lbSDom.clone();,if ((IntDomain)lbSDom != null ) else U = (IntDomain)lbSDom.clone();
AmongVar.java,int yGr = this.yGrounded.value();,if (this != null ) int yGr = this.yGrounded.value();
AmongVar.java,ubSDom = (IntDomain)lbSDom.clone();,if ((IntDomain)lbSDom != null ) ubSDom = (IntDomain)lbSDom.clone();
AmongVar.java,int lastIndex = yGrounded.value();,if (yGrounded != null ) int lastIndex = yGrounded.value();
AmongVar.java,lbSDom = lbSDom.union(y.value());,if (lbSDom != null ) lbSDom = lbSDom.union(y.value());
And.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
And.java,numberArgs += cc.numberArgs();,if (cc != null ) numberArgs += cc.numberArgs();
And.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
And.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
And.java,Var var = variables.removeFirst();,if (variables != null ) Var var = variables.removeFirst();
ArgMax.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
ArgMax.java,vDom = list[i].dom();,if (list[i] != null ) vDom = list[i].dom();
ArgMax.java,singleMaxValue = list[i].value();,if (list[i] != null ) singleMaxValue = list[i].value();
ArgMax.java,vDom = list[i].dom();,if (list[i] != null ) vDom = list[i].dom();
ArgMax.java,boolean sat = maxIndex.singleton();,if (maxIndex != null ) boolean sat = maxIndex.singleton();
ArgMin.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
ArgMin.java,vDom = list[i].dom();,if (list[i] != null ) vDom = list[i].dom();
ArgMin.java,singleMinValue = list[i].value();,if (list[i] != null ) singleMinValue = list[i].value();
ArgMin.java,vDom = list[i].dom();,if (list[i] != null ) vDom = list[i].dom();
ArgMin.java,boolean sat = minIndex.singleton();,if (minIndex != null ) boolean sat = minIndex.singleton();
Assignment.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Assignment.java,int xValue = enumer.nextElement();,if (enumer != null ) int xValue = enumer.nextElement();
Assignment.java,int dValue = enumer.nextElement();,if (enumer != null ) int dValue = enumer.nextElement();
BoolClause.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
BoolClause.java,int startX = positionX.value();,if (positionX != null ) int startX = positionX.value();
BoolClause.java,int startY = positionY.value();,if (positionY != null ) int startY = positionY.value();
BoolClause.java,int startX = positionX.value();,if (positionX != null ) int startX = positionX.value();
BoolClause.java,int startY = positionY.value();,if (positionY != null ) int startY = positionY.value();
BoolClause.java,int startX = positionX.value();,if (positionX != null ) int startX = positionX.value();
BoolClause.java,int startY = positionY.value();,if (positionY != null ) int startY = positionY.value();
Circuit.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
Circuit.java,dom = var.dom();,if (var != null ) dom = var.dom();
Circuit.java,int Qmin = dom.min();,if (dom != null ) int Qmin = dom.min();
Circuit.java,boolean sat = super.satisfied(); // alldifferent,if (alldifferent != null ) boolean sat = super.satisfied(); // alldifferent
Count.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
Count.java,return (countAll == counter.min());,if (counter != null ) return (countAll == counter.min());
Cumulative.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
Cumulative.java,minProfile = cumulativeProfiles.minProfile();,if (cumulativeProfiles != null ) minProfile = cumulativeProfiles.minProfile();
Cumulative.java,maxProfile = cumulativeProfiles.maxProfile();,if (cumulativeProfiles != null ) maxProfile = cumulativeProfiles.maxProfile();
Cumulative.java,int limitMax = limit.max();,if (limit != null ) int limitMax = limit.max();
Cumulative.java,int tEST = tt.EST();,if (tt != null ) int tEST = tt.EST();
Cumulative.java,int tLCT = tt.LCT();,if (tt != null ) int tLCT = tt.LCT();
Cumulative.java,int limitMin = limit.min();,if (limit != null ) int limitMin = limit.min();
Cumulative.java,int limitMax = limit.max();,if (limit != null ) int limitMax = limit.max();
Cumulative.java,int tLCT = tt.LCT();,if (tt != null ) int tLCT = tt.LCT();
Cumulative.java,int tEST = tt.EST();,if (tt != null ) int tEST = tt.EST();
Cumulative.java,int limitMin = limit.min();,if (limit != null ) int limitMin = limit.min();
Cumulative.java,int Dur = t.dur.min();,if (t != null ) int Dur = t.dur.min();
Cumulative.java,int Res = t.res.min();,if (t != null ) int Res = t.res.min();
Cumulative.java,int limitMax = limit.max();,if (limit != null ) int limitMax = limit.max();
Cumulative.java,int Dur = t.dur.min();,if (t != null ) int Dur = t.dur.min();
Cumulative.java,int Res = t.res.min();,if (t != null ) int Res = t.res.min();
Cumulative.java,int limitMax = limit.max();,if (limit != null ) int limitMax = limit.max();
Cumulative.java,int tdur = t.dur.min();,if (t != null ) int tdur = t.dur.min();
Cumulative.java,int limitMin = limit.min();,if (limit != null ) int limitMin = limit.min();
Cumulative.java,int limitMin = limit.min();,if (limit != null ) int limitMin = limit.min();
Cumulative.java,int rs = right.min - Start.min();,if (Start != null ) int rs = right.min - Start.min();
Cumulative.java,offset = Resources.min();,if (Resources != null ) offset = Resources.min();
Cumulative.java,int ps = p.min - Start.min();,if (Start != null ) int ps = p.min - Start.min();
Cumulative.java,A = minUse.start();,if (minUse != null ) A = minUse.start();
Cumulative.java,B = minUse.stop();,if (minUse != null ) B = minUse.stop();
Cumulative.java,IntDomain tStartDom = t.start.dom();,if (t != null ) IntDomain tStartDom = t.start.dom();
Cumulative.java,ArrayList<Task> TasksToRemove = new ArrayList<Task>(S.size());,if (ArrayList<Task>(S != null ) ArrayList<Task> TasksToRemove = new ArrayList<Task>(S.size());
Cumulative.java,ArrayList<Task> TasksToRemove = new ArrayList<Task>(S.size());,if (ArrayList<Task>(S != null ) ArrayList<Task> TasksToRemove = new ArrayList<Task>(S.size());
Cumulative.java,int limitMax = limit.max();,if (limit != null ) int limitMax = limit.max();
CumulativeProfiles.java,tDurMin = t.dur.min();,if (t != null ) tDurMin = t.dur.min();
CumulativeProfiles.java,tResMin = t.res.min();,if (t != null ) tResMin = t.res.min();
CumulativeProfiles.java,value = t.res.max();,if (t != null ) value = t.res.max();
Diff.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
Diff.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Diff.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Diff.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Diff.java,minLength[i] = r.length[i].min();,if (r != null ) minLength[i] = r.length[i].min();
Diff.java,IntDomain rOriginDom = r.origin[i].dom();,if (r != null ) IntDomain rOriginDom = r.origin[i].dom();
Diff.java,IntDomain sOriginIdom = s.origin[m].dom();,if (s != null ) IntDomain sOriginIdom = s.origin[m].dom();
Diff.java,IntDomain sLengthIdom = s.length[m].dom();,if (s != null ) IntDomain sLengthIdom = s.length[m].dom();
Diff.java,int sLengthIMin = sLengthIdom.min();,if (sLengthIdom != null ) int sLengthIMin = sLengthIdom.min();
Diff.java,int sOriginIMax = sOriginIdom.max();,if (sOriginIdom != null ) int sOriginIMax = sOriginIdom.max();
Diff.java,IntDomain rOriginIdom = r.origin[i].dom();,if (r != null ) IntDomain rOriginIdom = r.origin[i].dom();
Diff.java,IntDomain rLengthIdom = r.length[i].dom();,if (r != null ) IntDomain rLengthIdom = r.length[i].dom();
Diff.java,int rLengthIMin = r.length[i].min();,if (r != null ) int rLengthIMin = r.length[i].min();
Diff.java,IntDomain rOrigin = r.origin[k].dom();,if (r != null ) IntDomain rOrigin = r.origin[k].dom();
Diff.java,int rOriginSize = rOrigin.noIntervals();,if (rOrigin != null ) int rOriginSize = rOrigin.noIntervals();
Diff.java,IntDomain rIdom = r.origin[i].dom();,if (r != null ) IntDomain rIdom = r.origin[i].dom();
Diff.java,Interval i = ie.nextElement();,if (ie != null ) Interval i = ie.nextElement();
Diff.java,dMax = excludeMin - i.min();,if (i != null ) dMax = excludeMin - i.min();
Diff.java,IntDomain rOrigin = r.origin[i].dom();,if (r != null ) IntDomain rOrigin = r.origin[i].dom();
Diff.java,IntDomain rLength = r.length[i].dom();,if (r != null ) IntDomain rLength = r.length[i].dom();
Diff.java,IntDomain rOriginJdom = r.origin[j].dom();,if (r != null ) IntDomain rOriginJdom = r.origin[j].dom();
Diff.java,IntDomain rLengthJdom = r.length[j].dom();,if (r != null ) IntDomain rLengthJdom = r.length[j].dom();
Diff.java,int minJ = rOriginJdom.min();,if (rOriginJdom != null ) int minJ = rOriginJdom.min();
Diff.java,int maxJ = rOriginJdom.max() + rLengthJdom.min();,if (rLengthJdom != null ) int maxJ = rOriginJdom.max() + rLengthJdom.min();
Diff.java,int durJ = rLengthJdom.min();,if (rLengthJdom != null ) int durJ = rLengthJdom.min();
Diff.java,int dur = Duration.min();,if (Duration != null ) int dur = Duration.min();
Diff.java,IntDomain StartDom = Start.dom();,if (Start != null ) IntDomain StartDom = Start.dom();
Diff.java,IntDomain StartDom = Start.dom();,if (Start != null ) IntDomain StartDom = Start.dom();
Diff.java,IntDomain rOriginJdom = r.origin[j].dom();,if (r != null ) IntDomain rOriginJdom = r.origin[j].dom();
Diff.java,IntDomain rOriginIdom = r.origin[i].dom();,if (r != null ) IntDomain rOriginIdom = r.origin[i].dom();
Diff.java,int rOriginIdomMin = rOriginIdom.min();,if (rOriginIdom != null ) int rOriginIdomMin = rOriginIdom.min();
Diff.java,int rOriginIdomMax = rOriginIdom.max();,if (rOriginIdom != null ) int rOriginIdomMax = rOriginIdom.max();
Diff2.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
Diff2.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Diff2.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Diff2.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Diff2.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Diff2.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Diff2.java,IntDomain rOrigin = r.origin[i].dom();,if (r != null ) IntDomain rOrigin = r.origin[i].dom();
Diff2.java,IntDomain rLength = r.length[i].dom();,if (r != null ) IntDomain rLength = r.length[i].dom();
Diff2.java,IntDomain rLengthDom = r.length[i].dom();,if (r != null ) IntDomain rLengthDom = r.length[i].dom();
Diff2.java,minLength[i] = rLengthDom.min();,if (rLengthDom != null ) minLength[i] = rLengthDom.min();
Diff2.java,IntDomain rOriginDom = r.origin[i].dom();,if (r != null ) IntDomain rOriginDom = r.origin[i].dom();
Diff2.java,IntDomain sOriginIdom = s.origin[m].dom();,if (s != null ) IntDomain sOriginIdom = s.origin[m].dom();
Diff2.java,IntDomain sLengthIdom = s.length[m].dom();,if (s != null ) IntDomain sLengthIdom = s.length[m].dom();
Diff2.java,int sLengthIMin = sLengthIdom.min();,if (sLengthIdom != null ) int sLengthIMin = sLengthIdom.min();
Diff2.java,int sOriginIMax = sOriginIdom.max();,if (sOriginIdom != null ) int sOriginIMax = sOriginIdom.max();
Diff2.java,IntDomain rOriginIdom = r.origin[i].dom();,if (r != null ) IntDomain rOriginIdom = r.origin[i].dom();
Diff2.java,IntDomain rLengthIdom = r.length[i].dom();,if (r != null ) IntDomain rLengthIdom = r.length[i].dom();
Disjoint.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
Disjoint.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Disjoint.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Disjoint.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Disjoint.java,IntDomain rOrigin = r.origin[i].dom();,if (r != null ) IntDomain rOrigin = r.origin[i].dom();
Disjoint.java,IntDomain rLength = r.length[i].dom();,if (r != null ) IntDomain rLength = r.length[i].dom();
Disjoint.java,IntDomain rLengthDom = r.length[i].dom();,if (r != null ) IntDomain rLengthDom = r.length[i].dom();
Disjoint.java,minLength[i] = rLengthDom.min();,if (rLengthDom != null ) minLength[i] = rLengthDom.min();
Disjoint.java,IntDomain rOriginDom = r.origin[i].dom();,if (r != null ) IntDomain rOriginDom = r.origin[i].dom();
Disjoint.java,IntDomain sOriginIdom = s.origin[m].dom();,if (s != null ) IntDomain sOriginIdom = s.origin[m].dom();
Disjoint.java,IntDomain sLengthIdom = s.length[m].dom();,if (s != null ) IntDomain sLengthIdom = s.length[m].dom();
Disjoint.java,int sLengthIMin = sLengthIdom.min();,if (sLengthIdom != null ) int sLengthIMin = sLengthIdom.min();
Disjoint.java,int sOriginIMax = sOriginIdom.max();,if (sOriginIdom != null ) int sOriginIMax = sOriginIdom.max();
Disjoint.java,IntDomain rOriginIdom = r.origin[i].dom();,if (r != null ) IntDomain rOriginIdom = r.origin[i].dom();
Disjoint.java,IntDomain rLengthIdom = r.length[i].dom();,if (r != null ) IntDomain rLengthIdom = r.length[i].dom();
Disjoint.java,IntDomain rOriginIdom = r.origin[i].dom();,if (r != null ) IntDomain rOriginIdom = r.origin[i].dom();
Disjoint.java,int rOriginIdomMin = rOriginIdom.min();,if (rOriginIdom != null ) int rOriginIdomMin = rOriginIdom.min();
Disjoint.java,int rOriginIdomMax = rOriginIdom.max();,if (rOriginIdom != null ) int rOriginIdomMax = rOriginIdom.max();
DisjointConditional.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
DisjointConditional.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
DisjointConditional.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
DisjointConditional.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
DisjointConditional.java,IntDomain rOriginJdom = r.origin[j].dom();,if (r != null ) IntDomain rOriginJdom = r.origin[j].dom();
DisjointConditional.java,IntDomain rLengthJdom = r.length[j].dom();,if (r != null ) IntDomain rLengthJdom = r.length[j].dom();
DisjointConditional.java,int minJ = rOriginJdom.min();,if (rOriginJdom != null ) int minJ = rOriginJdom.min();
DisjointConditional.java,int maxJ = rOriginJdom.max() + rLengthJdom.min();,if (rLengthJdom != null ) int maxJ = rOriginJdom.max() + rLengthJdom.min();
DisjointConditional.java,int durJ = rLengthJdom.min();,if (rLengthJdom != null ) int durJ = rLengthJdom.min();
DisjointConditional.java,IntDomain origin = r.origin[i].dom();,if (r != null ) IntDomain origin = r.origin[i].dom();
DisjointConditional.java,int dur = r.length[i].min();,if (r != null ) int dur = r.length[i].min();
DisjointConditional.java,IntDomain rLengthDom = r.length[i].dom();,if (r != null ) IntDomain rLengthDom = r.length[i].dom();
DisjointConditional.java,minLength[i] = rLengthDom.min();,if (rLengthDom != null ) minLength[i] = rLengthDom.min();
DisjointConditional.java,IntDomain rOriginDom = r.origin[i].dom();,if (r != null ) IntDomain rOriginDom = r.origin[i].dom();
DisjointConditional.java,IntDomain sOriginIdom = s.origin[m].dom();,if (s != null ) IntDomain sOriginIdom = s.origin[m].dom();
DisjointConditional.java,IntDomain sLengthIdom = s.length[m].dom();,if (s != null ) IntDomain sLengthIdom = s.length[m].dom();
DisjointConditional.java,int sLengthIMin = sLengthIdom.min();,if (sLengthIdom != null ) int sLengthIMin = sLengthIdom.min();
DisjointConditional.java,int sOriginIMax = sOriginIdom.max();,if (sOriginIdom != null ) int sOriginIMax = sOriginIdom.max();
DisjointConditional.java,IntDomain rOriginIdom = r.origin[i].dom();,if (r != null ) IntDomain rOriginIdom = r.origin[i].dom();
DisjointConditional.java,IntDomain rLengthIdom = r.length[i].dom();,if (r != null ) IntDomain rLengthIdom = r.length[i].dom();
DisjointConditional.java,IntDomain rOriginDom = r.origin[i].dom();,if (r != null ) IntDomain rOriginDom = r.origin[i].dom();
DisjointConditional.java,IntDomain rOriginJdom = r.origin[j].dom();,if (r != null ) IntDomain rOriginJdom = r.origin[j].dom();
DisjointConditional.java,IntDomain rLengthJdom = r.length[j].dom();,if (r != null ) IntDomain rLengthJdom = r.length[j].dom();
DisjointConditional.java,int minJ = rOriginJdom.min();,if (rOriginJdom != null ) int minJ = rOriginJdom.min();
DisjointConditional.java,int maxJ = rOriginJdom.max() + rLengthJdom.min();,if (rLengthJdom != null ) int maxJ = rOriginJdom.max() + rLengthJdom.min();
DisjointConditional.java,int durJ = rLengthJdom.min();,if (rLengthJdom != null ) int durJ = rLengthJdom.min();
DisjointConditional.java,int dur = Duration.min();,if (Duration != null ) int dur = Duration.min();
DisjointConditional.java,IntDomain StartDom = Start.dom();,if (Start != null ) IntDomain StartDom = Start.dom();
DisjointConditional.java,IntDomain StartDom = Start.dom();,if (Start != null ) IntDomain StartDom = Start.dom();
DisjointConditional.java,IntDomain rOriginJdom = r.origin[j].dom();,if (r != null ) IntDomain rOriginJdom = r.origin[j].dom();
DisjointConditional.java,IntDomain rOriginIdom = r.origin[i].dom();,if (r != null ) IntDomain rOriginIdom = r.origin[i].dom();
DisjointConditional.java,int rOriginIdomMin = rOriginIdom.min();,if (rOriginIdom != null ) int rOriginIdomMin = rOriginIdom.min();
DisjointConditional.java,int rOriginIdomMax = rOriginIdom.max();,if (rOriginIdom != null ) int rOriginIdomMax = rOriginIdom.max();
Distance.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Distance.java,int ySize = yDom.noIntervals();,if (yDom != null ) int ySize = yDom.noIntervals();
Distance.java,int zSize = z.domain.noIntervals();,if (z != null ) int zSize = z.domain.noIntervals();
Distance.java,int xSize = x.domain.noIntervals();,if (x != null ) int xSize = x.domain.noIntervals();
Distance.java,int zSize = zDom.noIntervals();,if (zDom != null ) int zSize = zDom.noIntervals();
Distance.java,int xSize = xDom.noIntervals();,if (xDom != null ) int xSize = xDom.noIntervals();
Distance.java,int ySize = yDom.noIntervals();,if (yDom != null ) int ySize = yDom.noIntervals();
ElementInteger.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
ElementInteger.java,IntDomain indexDom = index.dom().cloneLight();,if (index != null ) IntDomain indexDom = index.dom().cloneLight();
ElementInteger.java,int v = value.min();,if (value != null ) int v = value.min();
ElementIntegerFast.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
ElementIntegerFast.java,short sort = order.value();,if (order != null ) short sort = order.value();
ElementIntegerFast.java,int minIndex = index.min();,if (index != null ) int minIndex = index.min();
ElementIntegerFast.java,int maxIndex = index.max();,if (index != null ) int maxIndex = index.max();
ElementIntegerFast.java,boolean sat = value.singleton();,if (value != null ) boolean sat = value.singleton();
ElementIntegerFast.java,int v = value.min();,if (value != null ) int v = value.min();
ElementIntegerFast.java,ValueEnumeration e = index.domain.valueEnumeration();,if (index != null ) ValueEnumeration e = index.domain.valueEnumeration();
ElementVariable.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
ElementVariable.java,IntDomain temp = value.domain.cloneLight();,if (value != null ) IntDomain temp = value.domain.cloneLight();
ElementVariable.java,int min = list[position].domain.min();,if (list[position] != null ) int min = list[position].domain.min();
ElementVariable.java,int max = list[position].domain.max();,if (list[position] != null ) int max = list[position].domain.max();
ElementVariable.java,checkTrigger = nextValueDomain.getSize();,if (nextValueDomain != null ) checkTrigger = nextValueDomain.getSize();
ElementVariable.java,Iterator<IntVar> itr = variableQueue.iterator();,if (variableQueue != null ) Iterator<IntVar> itr = variableQueue.iterator();
ElementVariable.java,IntVar changedVar = itr.next();,if (itr != null ) IntVar changedVar = itr.next();
ElementVariable.java,int lostSupport = enumer.nextElement();,if (enumer != null ) int lostSupport = enumer.nextElement();
ElementVariable.java,boolean sat = value.singleton();,if (value != null ) boolean sat = value.singleton();
ElementVariable.java,int v = value.min();,if (value != null ) int v = value.min();
ElementVariable.java,ValueEnumeration e = index.domain.valueEnumeration();,if (index != null ) ValueEnumeration e = index.domain.valueEnumeration();
ElementVariableFast.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
ElementVariableFast.java,boolean sat = value.singleton();,if (value != null ) boolean sat = value.singleton();
ElementVariableFast.java,int v = value.min();,if (value != null ) int v = value.min();
ElementVariableFast.java,ValueEnumeration e = index.domain.valueEnumeration();,if (index != null ) ValueEnumeration e = index.domain.valueEnumeration();
Eq.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Eq.java,Var V = variables.removeFirst();,if (variables != null ) Var V = variables.removeFirst();
EqBool.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
EqBool.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
ExtensionalConflictVA.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
ExtensionalConflictVA.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
ExtensionalConflictVA.java,t[i] = list[i].min();,if (list[i] != null ) t[i] = list[i].min();
ExtensionalConflictVA.java,t[i] = list[i].min();,if (list[i] != null ) t[i] = list[i].min();
ExtensionalConflictVA.java,t[i] = list[i].min();,if (list[i] != null ) t[i] = list[i].min();
ExtensionalConflictVA.java,t[i] = list[i].min();,if (list[i] != null ) t[i] = list[i].min();
ExtensionalConflictVA.java,int value = enumer.nextElement();,if (enumer != null ) int value = enumer.nextElement();
ExtensionalConflictVA.java,t[i] = list[i].min();,if (list[i] != null ) t[i] = list[i].min();
ExtensionalSupportMDD.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
ExtensionalSupportMDD.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
ExtensionalSupportSTR.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
ExtensionalSupportSTR.java,nexts[current] = headsOfEliminatedTuples.value();,if (headsOfEliminatedTuples != null ) nexts[current] = headsOfEliminatedTuples.value();
ExtensionalSupportSTR.java,last = tailsOfEliminatedTuples.value();,if (tailsOfEliminatedTuples != null ) last = tailsOfEliminatedTuples.value();
ExtensionalSupportSTR.java,first = headsOfEliminatedTuples.value();,if (headsOfEliminatedTuples != null ) first = headsOfEliminatedTuples.value();
ExtensionalSupportSTR.java,nexts[last] = headsOfEliminatedTuples.value();,if (headsOfEliminatedTuples != null ) nexts[last] = headsOfEliminatedTuples.value();
ExtensionalSupportSTR.java,first = headsOfEliminatedTuples.value();,if (headsOfEliminatedTuples != null ) first = headsOfEliminatedTuples.value();
ExtensionalSupportSTR.java,last = tailsOfEliminatedTuples.value();,if (tailsOfEliminatedTuples != null ) last = tailsOfEliminatedTuples.value();
ExtensionalSupportSTR.java,domainSizeAfterConsistency[i] = list[i].getSize();,if (list[i] != null ) domainSizeAfterConsistency[i] = list[i].getSize();
ExtensionalSupportSTR.java,nbGlobalValuesToBeSupported += list[i].getSize();,if (list[i] != null ) nbGlobalValuesToBeSupported += list[i].getSize();
ExtensionalSupportSTR.java,nbValuesToBeSupported[i] = list[i].getSize();,if (list[i] != null ) nbValuesToBeSupported[i] = list[i].getSize();
ExtensionalSupportSTR.java,domainSizeAfterConsistency[i] = list[i].getSize();,if (list[i] != null ) domainSizeAfterConsistency[i] = list[i].getSize();
ExtensionalSupportVA.java,t[i] = list[i].min();,if (list[i] != null ) t[i] = list[i].min();
ExtensionalSupportVA.java,t[i] = list[i].min();,if (list[i] != null ) t[i] = list[i].min();
ExtensionalSupportVA.java,t[i] = list[i].min();,if (list[i] != null ) t[i] = list[i].min();
ExtensionalSupportVA.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
ExtensionalSupportVA.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
ExtensionalSupportVA.java,int value = enumer.nextElement();,if (enumer != null ) int value = enumer.nextElement();
GCC.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
GCC.java,stampValue = stamp.value();,if (stamp != null ) stampValue = stamp.value();
GCC.java,Integer j = venum.nextElement();,if (venum != null ) Integer j = venum.nextElement();
GCC.java,int xValue = xVar.value();,if (xVar != null ) int xValue = xVar.value();
GCC.java,int stampValue = stamp.value();,if (stamp != null ) int stampValue = stamp.value();
IfThen.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
IfThenBool.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
IfThenElse.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
In.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
In.java,this.DomComplement = dom.complement();,if (dom != null ) this.DomComplement = dom.complement();
IntRectangle.java,IntDomain RoriginIDom = R.origin[i].dom();,if (R != null ) IntDomain RoriginIDom = R.origin[i].dom();
Linear.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Linear.java,int pointer = nextGroundedPosition.value();,if (nextGroundedPosition != null ) int pointer = nextGroundedPosition.value();
Linear.java,int pointer = nextGroundedPosition.value();,if (nextGroundedPosition != null ) int pointer = nextGroundedPosition.value();
Linear.java,lMin = sumGrounded.value();,if (sumGrounded != null ) lMin = sumGrounded.value();
LinearIntDom.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
LinearIntDom.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
LinearIntDom.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
LinearIntDom.java,IntDomain currentDom = x[index].dom();,if (x[index] != null ) IntDomain currentDom = x[index].dom();
LinearIntDom.java,int element = val.nextElement();,if (val != null ) int element = val.nextElement();
LinearIntDom.java,IntDomain currentDom = x[index].dom();,if (x[index] != null ) IntDomain currentDom = x[index].dom();
LinearIntDom.java,int element = val.nextElement();,if (val != null ) int element = val.nextElement();
Max.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
Max.java,int start = position.value();,if (position != null ) int start = position.value();
Max.java,int maxMax = max.max();,if (max != null ) int maxMax = max.max();
Max.java,int minMax = max.min();,if (max != null ) int minMax = max.min();
Max.java,vDom = var.dom();,if (var != null ) vDom = var.dom();
Max.java,boolean sat = max.singleton();,if (max != null ) boolean sat = max.singleton();
Max.java,int MAX = max.min();,if (max != null ) int MAX = max.min();
MaxSimple.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
MaxSimple.java,int maxMax = max.max();,if (max != null ) int maxMax = max.max();
MaxSimple.java,int MAX = max.min();,if (max != null ) int MAX = max.min();
Min.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
Min.java,int start = position.value();,if (position != null ) int start = position.value();
Min.java,int minMin = min.min();,if (min != null ) int minMin = min.min();
Min.java,int maxMin = min.max();,if (min != null ) int maxMin = min.max();
Min.java,vDom = var.dom();,if (var != null ) vDom = var.dom();
Min.java,int minValue = min.max();,if (min != null ) int minValue = min.max();
MinSimple.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
MinSimple.java,int minMin = min.min();,if (min != null ) int minMin = min.min();
MinSimple.java,int MIN = min.max();,if (min != null ) int MIN = min.max();
NoGood.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
Not.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Not.java,Var V = variables.removeFirst();,if (variables != null ) Var V = variables.removeFirst();
Or.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
Or.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
Or.java,Var V = variables.removeFirst();,if (variables != null ) Var V = variables.removeFirst();
Rectangle.java,IntDomain originIdom = origin[i].dom();,if (origin[i] != null ) IntDomain originIdom = origin[i].dom();
Rectangle.java,IntDomain ROriginIdom = r.origin[i].dom();,if (r != null ) IntDomain ROriginIdom = r.origin[i].dom();
Rectangle.java,area *= length[i].min();,if (length[i] != null ) area *= length[i].min();
Rectangle.java,IntDomain originIdom = origin[i].dom();,if (origin[i] != null ) IntDomain originIdom = origin[i].dom();
Rectangle.java,start = originIdom.max();,if (originIdom != null ) start = originIdom.max();
Rectangle.java,IntDomain originI = origin[i].dom();,if (origin[i] != null ) IntDomain originI = origin[i].dom();
Rectangle.java,start = originI.max();,if (originI != null ) start = originI.max();
Reified.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Reified.java,Var V = variables.removeFirst();,if (variables != null ) Var V = variables.removeFirst();
Sequence.java,this.set = set.clone();,if (set != null ) this.set = set.clone();
SoftAlldifferent.java,int d = all.getSize();,if (all != null ) int d = all.getSize();
SoftAlldifferent.java,ValueEnumeration it = all.valueEnumeration();,if (all != null ) ValueEnumeration it = all.valueEnumeration();
SoftAlldifferent.java,int value = it.nextElement();,if (it != null ) int value = it.nextElement();
SoftGCC.java,int hardElement = hard.nextElement();,if (hard != null ) int hardElement = hard.nextElement();
SoftGCC.java,int softElement = soft.nextElement();,if (soft != null ) int softElement = soft.nextElement();
SoftGCC.java,int hardElement = hard.nextElement();,if (hard != null ) int hardElement = hard.nextElement();
SoftGCC.java,int softElement = soft.nextElement();,if (soft != null ) int softElement = soft.nextElement();
SoftGCC.java,int d = all.getSize();,if (all != null ) int d = all.getSize();
SoftGCC.java,ValueEnumeration it = all.valueEnumeration();,if (all != null ) ValueEnumeration it = all.valueEnumeration();
SoftGCC.java,int value = it.nextElement();,if (it != null ) int value = it.nextElement();
Subcircuit.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
Subcircuit.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Subcircuit.java,boolean sat = super.satisfied(); // alldifferent,if (alldifferent != null ) boolean sat = super.satisfied(); // alldifferent
Subcircuit.java,n = stck.pop();,if (stck != null ) n = stck.pop();
Sum.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Sum.java,int pointer = nextGroundedPosition.value();,if (nextGroundedPosition != null ) int pointer = nextGroundedPosition.value();
Sum.java,int lMin = sumGrounded.value();,if (sumGrounded != null ) int lMin = sumGrounded.value();
Sum.java,sumJustGrounded += currentDomain.min();,if (currentDomain != null ) sumJustGrounded += currentDomain.min();
Sum.java,lMin += currentDomain.min();,if (currentDomain != null ) lMin += currentDomain.min();
Sum.java,lMax += currentDomain.max();,if (currentDomain != null ) lMax += currentDomain.max();
Sum.java,boolean sat = sum.singleton();,if (sum != null ) boolean sat = sum.singleton();
Sum.java,sat = list[i].singleton();,if (list[i] != null ) sat = list[i].singleton();
Sum.java,"sumMin = subtract(sumMin, sum.max());","if (sum != null ) sumMin = subtract(sumMin, sum.max());"
Sum.java,"sumMax = subtract(sumMax, sum.min());","if (sum != null ) sumMax = subtract(sumMax, sum.min());"
Sum.java,guideValue = listDom.min();,if (listDom != null ) guideValue = listDom.min();
Sum.java,guideValue = listDom.max();,if (listDom != null ) guideValue = listDom.max();
SumBool.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
SumBool.java,IntDomain xd = x[i].dom();,if (x[i] != null ) IntDomain xd = x[i].dom();
SumBool.java,min += xd.min();,if (xd != null ) min += xd.min();
SumBool.java,max += xd.max();,if (xd != null ) max += xd.max();
SumBool.java,int sumValue = sum.value();,if (sum != null ) int sumValue = sum.value();
SumBool.java,int sumValue = sum.value();,if (sum != null ) int sumValue = sum.value();
SumBool.java,int sumValue = sum.value();,if (sum != null ) int sumValue = sum.value();
SumBool.java,int sumValue = sum.value();,if (sum != null ) int sumValue = sum.value();
SumBool.java,int sumValue = sum.value();,if (sum != null ) int sumValue = sum.value();
SumBool.java,IntDomain xd = x[i].dom();,if (x[i] != null ) IntDomain xd = x[i].dom();
SumInt.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
SumInt.java,IntDomain xd = x[i].dom();,if (x[i] != null ) IntDomain xd = x[i].dom();
SumInt.java,int sMax = sum.max();,if (sum != null ) int sMax = sum.max();
SumInt.java,int sMin = sum.min();,if (sum != null ) int sMin = sum.min();
SumInt.java,min = x[i].min();,if (x[i] != null ) min = x[i].min();
SumInt.java,int newMin = x[i].min();,if (x[i] != null ) int newMin = x[i].min();
SumInt.java,int newMax = x[i].max();,if (x[i] != null ) int newMax = x[i].max();
SumInt.java,guideValue = listDom.min();,if (listDom != null ) guideValue = listDom.min();
SumInt.java,guideValue = listDom.max();,if (listDom != null ) guideValue = listDom.max();
SumWeight.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
SumWeight.java,int pointer = nextGroundedPosition.value();,if (nextGroundedPosition != null ) int pointer = nextGroundedPosition.value();
SumWeight.java,lMin = sumGrounded.value();,if (sumGrounded != null ) lMin = sumGrounded.value();
SumWeight.java,int pointer = nextGroundedPosition.value();,if (nextGroundedPosition != null ) int pointer = nextGroundedPosition.value();
SumWeightDom.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
SumWeightDom.java,int pointer = nextGroundedPosition.value();,if (nextGroundedPosition != null ) int pointer = nextGroundedPosition.value();
SumWeightDom.java,lMin = sumGrounded.value();,if (sumGrounded != null ) lMin = sumGrounded.value();
SumWeightDom.java,lMin += lArray[i].min();,if (lArray[i] != null ) lMin += lArray[i].min();
SumWeightDom.java,lMax += lArray[i].max();,if (lArray[i] != null ) lMax += lArray[i].max();
SumWeightDom.java,int pointer = nextGroundedPosition.value();,if (nextGroundedPosition != null ) int pointer = nextGroundedPosition.value();
SumWeightDom.java,int sGround = sumGrounded.value();,if (sumGrounded != null ) int sGround = sumGrounded.value();
SumWeightDom.java,int pointer = nextGroundedPosition.value();,if (nextGroundedPosition != null ) int pointer = nextGroundedPosition.value();
Task.java,IntDomain sDom = start.dom();,if (start != null ) IntDomain sDom = start.dom();
Task.java,IntDomain dDom = dur.dom();,if (dur != null ) IntDomain dDom = dur.dom();
Task.java,IntDomain sDom = start.dom();,if (start != null ) IntDomain sDom = start.dom();
Task.java,int dDomMin = dur.dom().min();,if (dur != null ) int dDomMin = dur.dom().min();
Task.java,IntDomain sDom = start.dom();,if (start != null ) IntDomain sDom = start.dom();
Task.java,lst = sDom.max();,if (sDom != null ) lst = sDom.max();
Task.java,ect = sDom.min() + dur.min();,if (dur != null ) ect = sDom.min() + dur.min();
Values.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Values.java,int maxNumberDifferent = matcher.hopcroftKarp();,if (matcher != null ) int maxNumberDifferent = matcher.hopcroftKarp();
Values.java,int diffMin = count.min() - singletonValues.getSize();,if (singletonValues != null ) int diffMin = count.min() - singletonValues.getSize();
Values.java,sat = list[i].singleton();,if (list[i] != null ) sat = list[i].singleton();
VariableTrace.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
VariableTrace.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
VariableTrace.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XdivYeqZ.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XdivYeqZ.java,int xMin = xBounds.min();,if (xBounds != null ) int xMin = xBounds.min();
XdivYeqZ.java,int xMax = xBounds.max();,if (xBounds != null ) int xMax = xBounds.max();
XeqC.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XeqY.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XexpYeqZ.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XgtC.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XgtY.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XgteqC.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XgteqY.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XltC.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XltY.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XlteqC.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XlteqY.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XmodYeqZ.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XmodYeqZ.java,"reminderMax = Math.min(reminderMax, x.max());","if (x != null ) reminderMax = Math.min(reminderMax, x.max());"
XmodYeqZ.java,"reminderMin = Math.max(reminderMin, x.min());","if (x != null ) reminderMin = Math.max(reminderMin, x.min());"
XmodYeqZ.java,"reminderMin = Math.max(reminderMin, x.min());","if (x != null ) reminderMin = Math.max(reminderMin, x.min());"
XmodYeqZ.java,"reminderMax = Math.min(reminderMax, x.max());","if (x != null ) reminderMax = Math.min(reminderMax, x.max());"
XmodYeqZ.java,resultMin = result.min();,if (result != null ) resultMin = result.min();
XmodYeqZ.java,resultMax = result.max();,if (result != null ) resultMax = result.max();
XmulCeqZ.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XmulYeqC.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XmulYeqZ.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XneqC.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XneqY.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Xor.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Xor.java,Var V = variables.removeFirst();,if (variables != null ) Var V = variables.removeFirst();
XorBool.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XplusCeqZ.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XplusClteqZ.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XplusYeqC.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XplusYeqZ.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XplusYeqZ.java,"sumMin = add(sumMin, x.min());","if (x != null ) sumMin = add(sumMin, x.min());"
XplusYeqZ.java,"sumMax = add(sumMax, x.max());","if (x != null ) sumMax = add(sumMax, x.max());"
XplusYeqZ.java,"sumMin = add(sumMin, y.min());","if (y != null ) sumMin = add(sumMin, y.min());"
XplusYeqZ.java,"sumMax = add(sumMax, y.max());","if (y != null ) sumMax = add(sumMax, y.max());"
XplusYeqZ.java,"sumMin = subtract(sumMin, z.max());","if (z != null ) sumMin = subtract(sumMin, z.max());"
XplusYeqZ.java,"sumMax = subtract(sumMax, z.min());","if (z != null ) sumMax = subtract(sumMax, z.min());"
XplusYgtC.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XplusYlteqZ.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XplusYplusCeqZ.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XplusYplusQeqZ.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XplusYplusQgtC.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Binpacking.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
Binpacking.java,Set<IntVar> bs = itemPar.keySet();,if (itemPar != null ) Set<IntVar> bs = itemPar.keySet();
Binpacking.java,IntVar var = binQueue.removeFirst();,if (binQueue != null ) IntVar var = binQueue.removeFirst();
Binpacking.java,IntVar var = itemQueue.removeFirst();,if (itemQueue != null ) IntVar var = itemQueue.removeFirst();
Binpacking.java,allCapacityMin += load[i].min();,if (load[i] != null ) allCapacityMin += load[i].min();
Binpacking.java,allCapacityMax += load[i].max();,if (load[i] != null ) allCapacityMax += load[i].max();
Binpacking.java,maxCapacity = maxC.max();,if (maxC != null ) maxCapacity = maxC.max();
Binpacking.java,allBinsSingleton = item[i++].bin.singleton();,if (item[i++] != null ) allBinsSingleton = item[i++].bin.singleton();
Cumulative.java,int l = nonZeroTasks.size();,if (nonZeroTasks != null ) int l = nonZeroTasks.size();
CumulativeBasic.java,int limitMax = limit.max();,if (limit != null ) int limitMax = limit.max();
CumulativeBasic.java,int limitMax = limit.max();,if (limit != null ) int limitMax = limit.max();
CumulativeBasic.java,profileValue -= t.res.min();,if (t != null ) profileValue -= t.res.min();
CumulativeBasic.java,profileValue -= t.res.min();,if (t != null ) profileValue -= t.res.min();
CumulativeBasic.java,profileValue -= t.res.min();,if (t != null ) profileValue -= t.res.min();
CumulativeUnary.java,updateLCT[i] = t[i].lct();,if (t[i] != null ) updateLCT[i] = t[i].lct();
TaskNormalView.java,int max = lct - dur.max();,if (dur != null ) int max = lct - dur.max();
TaskReversedView.java,int max = - lct - dur.max();,if (dur != null ) int max = - lct - dur.max();
TaskReversedView.java,int max = - lct - dur.max();,if (dur != null ) int max = - lct - dur.max();
Diffn.java,BitSet o = overlapping[k].value();,if (overlapping[k] != null ) BitSet o = overlapping[k].value();
Diffn.java,int sLengthMin = s.length(i).min();,if (s != null ) int sLengthMin = s.length(i).min();
Diffn.java,BitSet o = overlapping[i].value();,if (overlapping[i] != null ) BitSet o = overlapping[i].value();
Diffn.java,int lMin = rr.length(oDim).min();,if (rr != null ) int lMin = rr.length(oDim).min();
Diffn.java,int lMin = rr.length(oDim).min();,if (rr != null ) int lMin = rr.length(oDim).min();
Diffn.java,profileValue -= r.length(oDim).min();,if (r != null ) profileValue -= r.length(oDim).min();
Diffn.java,profileValue -= rr.length(oDim).min();,if (rr != null ) profileValue -= rr.length(oDim).min();
Diffn.java,profileValue -= rr.length(oDim).min();,if (rr != null ) profileValue -= rr.length(oDim).min();
Nooverlap.java,BitSet os = overlapping[j].value();,if (overlapping[j] != null ) BitSet os = overlapping[j].value();
Nooverlap.java,BitSet o = (BitSet)os.clone();,if ((BitSet)os != null ) BitSet o = (BitSet)os.clone();
AllowedArea.java,DBox constrainedBox = geost.getShape(currentShape).boundingBox();,if (geost != null ) DBox constrainedBox = geost.getShape(currentShape).boundingBox();
BoxDisplay.java,color = color.brighter();,if (color != null ) color = color.brighter();
BoxDisplay.java,color = new Color(o.hashCode());,if (Color(o != null ) color = new Color(o.hashCode());
BoxDisplay.java,Graphics g = bufferImage.getGraphics();,if (bufferImage != null ) Graphics g = bufferImage.getGraphics();
BoxDisplay.java,Graphics g = bufferImage.getGraphics();,if (bufferImage != null ) Graphics g = bufferImage.getGraphics();
BoxDisplay.java,int width = this.getContentPane().getWidth();,if (this != null ) int width = this.getContentPane().getWidth();
BoxDisplay.java,Shape shape = geost.getShape(o.shapeID.min());,if (geost != null ) Shape shape = geost.getShape(o.shapeID.min());
BoxDisplay.java,Shape shape = geost.getShape(o.shapeID.min());,if (geost != null ) Shape shape = geost.getShape(o.shapeID.min());
BoxDisplay.java,Graphics g = bufferImage.getGraphics();,if (bufferImage != null ) Graphics g = bufferImage.getGraphics();
BoxDisplay.java,Graphics g = bufferImage.getGraphics();,if (bufferImage != null ) Graphics g = bufferImage.getGraphics();
BoxDisplay.java,Graphics g = bufferImage.getGraphics();,if (bufferImage != null ) Graphics g = bufferImage.getGraphics();
DBox.java,int size = freeBoxes.size();,if (freeBoxes != null ) int size = freeBoxes.size();
Geost.java,this.objects = objects.clone();,if (objects != null ) this.objects = objects.clone();
Geost.java,this.externalConstraints = constraints.clone();,if (constraints != null ) this.externalConstraints = constraints.clone();
Geost.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
Geost.java,ValueEnumeration shapeIDVals = o.shapeID.domain.valueEnumeration();,if (o != null ) ValueEnumeration shapeIDVals = o.shapeID.domain.valueEnumeration();
Geost.java,int sid = shapeIDVals.nextElement();,if (shapeIDVals != null ) int sid = shapeIDVals.nextElement();
Geost.java,ValueEnumeration vals = o.shapeID.domain.valueEnumeration();,if (o != null ) ValueEnumeration vals = o.shapeID.domain.valueEnumeration();
Geost.java,constraintCount += ics.size();,if (ics != null ) constraintCount += ics.size();
Geost.java,GeostObject[] constraintScope = ec.getObjectScope();,if (ec != null ) GeostObject[] constraintScope = ec.getObjectScope();
Geost.java,int prevSize = scope.size();,if (scope != null ) int prevSize = scope.size();
Geost.java,c[i] = o.coords[i].min();,if (o != null ) c[i] = o.coords[i].min();
Geost.java,c[dimension] = o.start.min();,if (o != null ) c[dimension] = o.start.min();
Geost.java,c[i] = o.coords[i].max();,if (o != null ) c[i] = o.coords[i].max();
Geost.java,c[dimension] = o.end.max();,if (o != null ) c[dimension] = o.end.max();
Geost.java,GeostObject o = objectQueue.removeFirst();,if (objectQueue != null ) GeostObject o = objectQueue.removeFirst();
Geost.java,o = objectQueue.removeFirst();,if (objectQueue != null ) o = objectQueue.removeFirst();
Geost.java,int[] ordering = order.masterOrdering();,if (order != null ) int[] ordering = order.masterOrdering();
Geost.java,final ValueEnumeration vals = o.shapeID.domain.valueEnumeration();,if (o != null ) final ValueEnumeration vals = o.shapeID.domain.valueEnumeration();
Geost.java,int sid = vals.nextElement();,if (vals != null ) int sid = vals.nextElement();
Geost.java,ValueEnumeration sids = o.shapeID.domain.valueEnumeration();,if (o != null ) ValueEnumeration sids = o.shapeID.domain.valueEnumeration();
Geost.java,removeLimit = lastLevelLastVar.value();,if (lastLevelLastVar != null ) removeLimit = lastLevelLastVar.value();
Geost.java,int lowerBound = setStart.value();,if (setStart != null ) int lowerBound = setStart.value();
GeostObject.java,bestShapeID[i] = shapeID.min();,if (shapeID != null ) bestShapeID[i] = shapeID.min();
GeostObject.java,return groundCount == variables.size();,if (variables != null ) return groundCount == variables.size();
ObstacleObject.java,shapeId = obstacle.shapeID.value();,if (obstacle != null ) shapeId = obstacle.shapeID.value();
ObstacleObjectFrame.java,ValueEnumeration vals = obstacle.shapeID.domain.valueEnumeration();,if (obstacle != null ) ValueEnumeration vals = obstacle.shapeID.domain.valueEnumeration();
ObstacleObjectFrame.java,int sid = vals.nextElement();,if (vals != null ) int sid = vals.nextElement();
ObstacleObjectFrame.java,DBox shapeBoundingBox = shape.boundingBox();,if (shape != null ) DBox shapeBoundingBox = shape.boundingBox();
ObstacleObjectFrame.java,frameArea = domain.area();,if (domain != null ) frameArea = domain.area();
ObstacleObjectFrame.java,int sid = vals.nextElement();,if (vals != null ) int sid = vals.nextElement();
ObstacleObjectFrame.java,ListIterator<DBox> iterator = frame.listIterator();,if (frame != null ) ListIterator<DBox> iterator = frame.listIterator();
ObstacleObjectFrame.java,DBox piece = iterator.next();,if (iterator != null ) DBox piece = iterator.next();
ObstacleObjectFrame.java,frameArea += frameComponent.area();,if (frameComponent != null ) frameArea += frameComponent.area();
ObstacleObjectFrame.java,final ValueEnumeration vals = obstacle.shapeID.domain.valueEnumeration();,if (obstacle != null ) final ValueEnumeration vals = obstacle.shapeID.domain.valueEnumeration();
ObstacleObjectFrame.java,int sid = vals.nextElement();,if (vals != null ) int sid = vals.nextElement();
ObstacleObjectFrame.java,int up = obstacle.end.max();,if (obstacle != null ) int up = obstacle.end.max();
ObstacleObjectFrame.java,int low = obstacle.start.min();,if (obstacle != null ) int low = obstacle.start.min();
ObstacleObjectFrame.java,timeSizeMax = obstacle.end.min();,if (obstacle != null ) timeSizeMax = obstacle.end.min();
Shape.java,Iterator<DBox> i = boxes.iterator();,if (boxes != null ) Iterator<DBox> i = boxes.iterator();
Shape.java,Collection<DBox> rescaledBoxes = new ArrayList<DBox>(boxes.size());,if (ArrayList<DBox>(boxes != null ) Collection<DBox> rescaledBoxes = new ArrayList<DBox>(boxes.size());
Shape.java,holeArea += (hole.area());,if ((hole != null ) holeArea += (hole.area());
Knapsack.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Knapsack.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Knapsack.java,Set<IntVar> qs = itemPar.keySet();,if (itemPar != null ) Set<IntVar> qs = itemPar.keySet();
Knapsack.java,tree.criticalLeaf.positionInTheTree = positionOfCriticalItem.value();,if (positionOfCriticalItem != null ) tree.criticalLeaf.positionInTheTree = positionOfCriticalItem.value();
Knapsack.java,positionOfAlreadyUpdated = list.size();,if (list != null ) positionOfAlreadyUpdated = list.size();
Knapsack.java,TreeLeaf leaf = tree.getLast();,if (tree != null ) TreeLeaf leaf = tree.getLast();
Knapsack.java,IntVar quantity = leaf.getVariable();,if (leaf != null ) IntVar quantity = leaf.getVariable();
Knapsack.java,TreeLeaf leaf = tree.getFirst();,if (tree != null ) TreeLeaf leaf = tree.getFirst();
Knapsack.java,IntVar quantity = leaf.getVariable();,if (leaf != null ) IntVar quantity = leaf.getVariable();
Knapsack.java,var = item.getVariable();,if (item != null ) var = item.getVariable();
Knapsack.java,final boolean maxBoundHasChanged = leafForV.hasMaxChanged();,if (leafForV != null ) final boolean maxBoundHasChanged = leafForV.hasMaxChanged();
Knapsack.java,final boolean minBoundHasChanged = leafForV.hasMinChanged();,if (leafForV != null ) final boolean minBoundHasChanged = leafForV.hasMinChanged();
Knapsack.java,overallProfit += leaf.getPSum();,if (leaf != null ) overallProfit += leaf.getPSum();
Knapsack.java,overallCapacity += leaf.getWSum();,if (leaf != null ) overallCapacity += leaf.getWSum();
Knapsack.java,"maxLeafCapacity = Math.max(maxLeafCapacity, leaf.getWMax());","if (leaf != null ) maxLeafCapacity = Math.max(maxLeafCapacity, leaf.getWMax());"
Tree.java,IntVar v = item.getVariable();,if (item != null ) IntVar v = item.getVariable();
Tree.java,usedCapacity += current.left.getWSum();,if (current != null ) usedCapacity += current.left.getWSum();
Tree.java,obtainedProfit += current.left.getPSum();,if (current != null ) obtainedProfit += current.left.getPSum();
Tree.java,criticalLeftLeaf = getCriticalPosition(capacity - root.getWMax());,if (root != null ) criticalLeftLeaf = getCriticalPosition(capacity - root.getWMax());
Tree.java,criticalRightLeaf = getCriticalPosition(capacity + root.getWMax());,if (root != null ) criticalRightLeaf = getCriticalPosition(capacity + root.getWMax());
Tree.java,usedCapacity += current.left.getWSum();,if (current != null ) usedCapacity += current.left.getWSum();
Tree.java,currentWeight += currentNode.right.getWSum();,if (currentNode != null ) currentWeight += currentNode.right.getWSum();
Tree.java,currentProfit += currentNode.right.getPSum();,if (currentNode != null ) currentProfit += currentNode.right.getPSum();
Tree.java,currentWeight += currentNode.getWSum();,if (currentNode != null ) currentWeight += currentNode.getWSum();
Tree.java,currentProfit += currentNode.getPSum();,if (currentNode != null ) currentProfit += currentNode.getPSum();
Tree.java,currentWeight += currentNode.getWSum();,if (currentNode != null ) currentWeight += currentNode.getWSum();
Tree.java,currentProfit += currentNode.getPSum();,if (currentNode != null ) currentProfit += currentNode.getPSum();
Tree.java,currentWeight += currentNode.left.getWSum();,if (currentNode != null ) currentWeight += currentNode.left.getWSum();
Tree.java,currentProfit += currentNode.left.getPSum();,if (currentNode != null ) currentProfit += currentNode.left.getPSum();
Tree.java,currentWeight += currentNode.getWSum();,if (currentNode != null ) currentWeight += currentNode.getWSum();
Tree.java,currentProfit += currentNode.getPSum();,if (currentNode != null ) currentProfit += currentNode.getPSum();
Tree.java,currentWeight += currentNode.getWSum();,if (currentNode != null ) currentWeight += currentNode.getWSum();
Tree.java,currentProfit += currentNode.getPSum();,if (currentNode != null ) currentProfit += currentNode.getPSum();
Tree.java,obtainedProfit += current.left.getPSum();,if (current != null ) obtainedProfit += current.left.getPSum();
Tree.java,usedCapacity += current.right.getWSum();,if (current != null ) usedCapacity += current.right.getWSum();
TreeLeaf.java,this.previousMaxQ = quantity.max();,if (quantity != null ) this.previousMaxQ = quantity.max();
TreeLeaf.java,this.previousMinQ = quantity.min();,if (quantity != null ) this.previousMinQ = quantity.min();
TreeLeaf.java,slice = quantity.min();,if (quantity != null ) slice = quantity.min();
TreeNode.java,this.wSum = left.getWSum() + right.getWSum();,if (right != null ) this.wSum = left.getWSum() + right.getWSum();
TreeNode.java,this.pSum = left.getPSum() + right.getPSum();,if (right != null ) this.pSum = left.getPSum() + right.getPSum();
TreeNode.java,pSum = left.getPSum() + right.getPSum();,if (right != null ) pSum = left.getPSum() + right.getPSum();
TreeNode.java,wSum = left.getWSum() + right.getWSum();,if (right != null ) wSum = left.getWSum() + right.getWSum();
TreeNode.java,pSum = left.getPSum() + right.getPSum();,if (right != null ) pSum = left.getPSum() + right.getPSum();
TreeNode.java,wSum = left.getWSum() + right.getWSum();,if (right != null ) wSum = left.getWSum() + right.getWSum();
ArcCompanion.java,updated = updateSVar(network.getStoreLevel());,if (updateSVar(network != null ) updated = updateSVar(network.getStoreLevel());
ArcCompanion.java,int newCost = wVar.min();,if (wVar != null ) int newCost = wVar.min();
ArcCompanion.java,int newCost = wVar.min();,if (wVar != null ) int newCost = wVar.min();
ArcCompanion.java,Domain arcDomainC = structure.domains[arcID].complement();,if (structure != null ) Domain arcDomainC = structure.domains[arcID].complement();
Arithmetic.java,int size = Arithmetic.this.eqns.size();,if (Arithmetic != null ) int size = Arithmetic.this.eqns.size();
Assert.java,int reduced = arc.reducedCost();,if (arc != null ) int reduced = arc.reducedCost();
DomainStructure.java,int size = vardom.getSize();,if (vardom != null ) int size = vardom.getSize();
DomainStructure.java,int level = network.getStoreLevel();,if (network != null ) int level = network.getStoreLevel();
DomainStructure.java,int level = network.getStoreLevel();,if (network != null ) int level = network.getStoreLevel();
Network.java,costOffset -= arc.longCost();,if (arc != null ) costOffset -= arc.longCost();
Network.java,Node tail = arc.tail();,if (arc != null ) Node tail = arc.tail();
Network.java,costOffset += arc.longCost();,if (arc != null ) costOffset += arc.longCost();
Network.java,int size = deletedSize.value();,if (deletedSize != null ) int size = deletedSize.value();
Network.java,size = modifiedSize.value();,if (modifiedSize != null ) size = modifiedSize.value();
Network.java,Iterator<Node> it = infeasibleNodes.iterator();,if (infeasibleNodes != null ) Iterator<Node> it = infeasibleNodes.iterator();
Network.java,Node node = it.next();,if (it != null ) Node node = it.next();
NetworkBuilder.java,int weight = wVar.min();,if (wVar != null ) int weight = wVar.min();
NetworkBuilder.java,int n = vars.size();,if (vars != null ) int n = vars.size();
NetworkFlow.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
NetworkFlow.java,this.numberArgs = (short) map.size();,if (map != null ) this.numberArgs = (short) map.size();
NetworkFlow.java,int costLimit = costVariable.max() - costVariable.min();,if (costVariable != null ) int costLimit = costVariable.max() - costVariable.min();
Pruning.java,ArcCompanion companion = queue.poll();,if (queue != null ) ArcCompanion companion = queue.poll();
Pruning.java,this.numActiveArcs = queue.size();,if (queue != null ) this.numActiveArcs = queue.size();
Pruning.java,sizeBefore = xVar.domain.getSize();,if (xVar != null ) sizeBefore = xVar.domain.getSize();
Pruning.java,int sizeAfter = xVar.domain.getSize();,if (xVar != null ) int sizeAfter = xVar.domain.getSize();
Pruning.java,sizeBefore = xVar.domain.getSize();,if (xVar != null ) sizeBefore = xVar.domain.getSize();
Pruning.java,int sizeAfter = xVar.domain.getSize();,if (xVar != null ) int sizeAfter = xVar.domain.getSize();
Pruning.java,sizeBefore = nVar.domain.getSize();,if (nVar != null ) sizeBefore = nVar.domain.getSize();
Pruning.java,int sizeAfter = nVar.domain.getSize();,if (nVar != null ) int sizeAfter = nVar.domain.getSize();
Pruning.java,sizeBefore = nVar.domain.getSize();,if (nVar != null ) sizeBefore = nVar.domain.getSize();
Pruning.java,int sizeAfter = nVar.domain.getSize();,if (nVar != null ) int sizeAfter = nVar.domain.getSize();
Pruning.java,sizeBefore = wVar.domain.getSize();,if (wVar != null ) sizeBefore = wVar.domain.getSize();
Pruning.java,int sizeAfter = wVar.domain.getSize();,if (wVar != null ) int sizeAfter = wVar.domain.getSize();
Pruning.java,sizeBefore = sVar.domain.getSize();,if (sVar != null ) sizeBefore = sVar.domain.getSize();
Pruning.java,int sizeAfter = sVar.domain.getSize();,if (sVar != null ) int sizeAfter = sVar.domain.getSize();
Pruning.java,companion = strategy.next();,if (strategy != null ) companion = strategy.next();
Pruning.java,companion = strategy.next();,if (strategy != null ) companion = strategy.next();
Pruning.java,Node sink = arc.tail();,if (arc != null ) Node sink = arc.tail();
Pruning.java,int unitCost = arc.reducedCost(); // + arc.cost;,if (arc != null ) int unitCost = arc.reducedCost(); // + arc.cost;
Pruning.java,Domain arcDomainC = structure.domains[arcID].complement();,if (structure != null ) Domain arcDomainC = structure.domains[arcID].complement();
Danzig.java,int reducedCost = arc.reducedCost();,if (arc != null ) int reducedCost = arc.reducedCost();
NetworkSimplex.java,Iterator<Node> it = infeasibleNodes.iterator();,if (infeasibleNodes != null ) Iterator<Node> it = infeasibleNodes.iterator();
NetworkSimplex.java,Node node = it.next();,if (it != null ) Node node = it.next();
NetworkSimplex.java,it = infeasibleNodes.iterator();,if (infeasibleNodes != null ) it = infeasibleNodes.iterator();
NetworkSimplex.java,Node node = it.next();,if (it != null ) Node node = it.next();
NetworkSimplex.java,Node k = entering.tail();,if (entering != null ) Node k = entering.tail();
NetworkSimplex.java,Node node = entering.tail();,if (entering != null ) Node node = entering.tail();
NetworkSimplex.java,tree = leaving.tail();,if (leaving != null ) tree = leaving.tail();
NetworkSimplex.java,int reducedCost = arc.reducedCost();,if (arc != null ) int reducedCost = arc.reducedCost();
NetworkSimplex.java,cost += arc.longCost();,if (arc != null ) cost += arc.longCost();
NetworkSimplex.java,cost += node.toParent.longCost();,if (node != null ) cost += node.toParent.longCost();
RegStateDom.java,int v = enumer.nextElement();,if (enumer != null ) int v = enumer.nextElement();
Regular.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Regular.java,stateNumber = dfa.allStates.size();,if (dfa != null ) stateNumber = dfa.allStates.size();
Regular.java,int preThisLevelStateNb = this.activeLevels[varIndex].value();,if (this != null ) int preThisLevelStateNb = this.activeLevels[varIndex].value();
Regular.java,int preNextLevelStateNb = this.activeLevels[nextVar].value();,if (this != null ) int preNextLevelStateNb = this.activeLevels[nextVar].value();
Regular.java,int currentLimit = this.activeLevels[level].value();,if (this != null ) int currentLimit = this.activeLevels[level].value();
Regular.java,int lim = activeLevels[level].value();,if (activeLevels[level] != null ) int lim = activeLevels[level].value();
Regular.java,leftPosition = leftChange.value();,if (leftChange != null ) leftPosition = leftChange.value();
Regular.java,rightPosition = rightChange.value();,if (rightChange != null ) rightPosition = rightChange.value();
Regular.java,lastNumberOfActiveStates[l] = activeLevels[l].value();,if (activeLevels[l] != null ) lastNumberOfActiveStates[l] = activeLevels[l].value();
Regular.java,int checkToIndex = touchedIndex.value();,if (touchedIndex != null ) int checkToIndex = touchedIndex.value();
Regular.java,stateNb = this.activeLevels[l].value();,if (this != null ) stateNb = this.activeLevels[l].value();
Regular.java,ValueEnumeration enumer = list[level].domain.valueEnumeration();,if (list[level] != null ) ValueEnumeration enumer = list[level].domain.valueEnumeration();
Regular.java,v = enumer.nextElement();,if (enumer != null ) v = enumer.nextElement();
Regular.java,int leftEnd = leftChange.value();,if (leftChange != null ) int leftEnd = leftChange.value();
Regular.java,int rightEnd = rightChange.value();,if (rightChange != null ) int rightEnd = rightChange.value();
Regular.java,ValueEnumeration enumer = this.list[level].domain.valueEnumeration();,if (this != null ) ValueEnumeration enumer = this.list[level].domain.valueEnumeration();
Regular.java,v = enumer.nextElement();,if (enumer != null ) v = enumer.nextElement();
BoundDomain.java,min = domain.min();,if (domain != null ) min = domain.min();
BoundDomain.java,max = domain.max();,if (domain != null ) max = domain.max();
BoundDomain.java,min = domain.min();,if (domain != null ) min = domain.min();
BoundDomain.java,max = domain.max();,if (domain != null ) max = domain.max();
BoundDomain.java,int inputMin = dom.min();,if (dom != null ) int inputMin = dom.min();
BoundDomain.java,int inputMax = dom.max();,if (dom != null ) int inputMax = dom.max();
BoundDomain.java,this.min = boundDomain.min();,if (boundDomain != null ) this.min = boundDomain.min();
BoundDomain.java,this.max = boundDomain.max();,if (boundDomain != null ) this.max = boundDomain.max();
BoundDomain.java,int inputMin = domain.min();,if (domain != null ) int inputMin = domain.min();
BoundDomain.java,int inputMax = domain.max();,if (domain != null ) int inputMax = domain.max();
BoundDomain.java,int min = domain.min();,if (domain != null ) int min = domain.min();
BoundDomain.java,int max = domain.max();,if (domain != null ) int max = domain.max();
BoundDomain.java,IntervalEnumeration enumer = domain.intervalEnumeration();,if (domain != null ) IntervalEnumeration enumer = domain.intervalEnumeration();
BoundDomain.java,Interval next = enumer.nextElement();,if (enumer != null ) Interval next = enumer.nextElement();
BoundDomainValueEnumeration.java,min = dom.min();,if (dom != null ) min = dom.min();
BoundDomainValueEnumeration.java,max = dom.max();,if (dom != null ) max = dom.max();
BoundDomainValueEnumeration.java,min = domain.min();,if (domain != null ) min = domain.min();
BoundDomainValueEnumeration.java,max = domain.max();,if (domain != null ) max = domain.max();
IntDomain.java,IntervalEnumeration enumer = domain.intervalEnumeration();,if (domain != null ) IntervalEnumeration enumer = domain.intervalEnumeration();
IntDomain.java,ValueEnumeration enumer = domain.valueEnumeration();,if (domain != null ) ValueEnumeration enumer = domain.valueEnumeration();
IntDomain.java,IntervalEnumeration enumer = domain.intervalEnumeration();,if (domain != null ) IntervalEnumeration enumer = domain.intervalEnumeration();
IntDomain.java,Interval next = enumer.nextElement();,if (enumer != null ) Interval next = enumer.nextElement();
IntDomain.java,ValueEnumeration enumer = domain.valueEnumeration();,if (domain != null ) ValueEnumeration enumer = domain.valueEnumeration();
IntDomain.java,IntervalEnumeration enumer = domain.intervalEnumeration();,if (domain != null ) IntervalEnumeration enumer = domain.intervalEnumeration();
IntDomain.java,Interval next = enumer.nextElement();,if (enumer != null ) Interval next = enumer.nextElement();
IntDomain.java,ValueEnumeration enumer = domain.valueEnumeration();,if (domain != null ) ValueEnumeration enumer = domain.valueEnumeration();
IntDomain.java,IntervalEnumeration enumer = domain.intervalEnumeration();,if (domain != null ) IntervalEnumeration enumer = domain.intervalEnumeration();
IntDomain.java,Interval first = enumer.nextElement();,if (enumer != null ) Interval first = enumer.nextElement();
IntDomain.java,Interval next = enumer.nextElement();,if (enumer != null ) Interval next = enumer.nextElement();
IntDomain.java,ValueEnumeration enumer = domain.valueEnumeration();,if (domain != null ) ValueEnumeration enumer = domain.valueEnumeration();
IntDomain.java,int first = enumer.nextElement();,if (enumer != null ) int first = enumer.nextElement();
IntDomain.java,int next = enumer.nextElement();,if (enumer != null ) int next = enumer.nextElement();
IntDomain.java,IntDomain result = this.cloneLight();,if (this != null ) IntDomain result = this.cloneLight();
IntDomain.java,IntervalEnumeration enumer = domain.intervalEnumeration();,if (domain != null ) IntervalEnumeration enumer = domain.intervalEnumeration();
IntDomain.java,Interval next = enumer.nextElement();,if (enumer != null ) Interval next = enumer.nextElement();
IntDomain.java,ValueEnumeration enumer = domain.valueEnumeration();,if (domain != null ) ValueEnumeration enumer = domain.valueEnumeration();
IntDomain.java,int next = enumer.nextElement();,if (enumer != null ) int next = enumer.nextElement();
IntDomain.java,IntDomain result = this.cloneLight();,if (this != null ) IntDomain result = this.cloneLight();
IntDomain.java,IntervalEnumeration enumer = domain.intervalEnumeration();,if (domain != null ) IntervalEnumeration enumer = domain.intervalEnumeration();
IntDomain.java,Interval next = enumer.nextElement();,if (enumer != null ) Interval next = enumer.nextElement();
IntDomain.java,ValueEnumeration enumer = domain.valueEnumeration();,if (domain != null ) ValueEnumeration enumer = domain.valueEnumeration();
IntDomain.java,int next = enumer.nextElement();,if (enumer != null ) int next = enumer.nextElement();
IntDomain.java,IntDomain result = this.cloneLight();,if (this != null ) IntDomain result = this.cloneLight();
IntDomain.java,IntDomain result = this.cloneLight();,if (this != null ) IntDomain result = this.cloneLight();
IntDomain.java,IntDomain result = this.cloneLight();,if (this != null ) IntDomain result = this.cloneLight();
IntDomain.java,IntDomain result = this.cloneLight();,if (this != null ) IntDomain result = this.cloneLight();
IntDomain.java,IntDomain result = this.cloneLight();,if (this != null ) IntDomain result = this.cloneLight();
IntDomain.java,ValueEnumeration thisEnumer = this.valueEnumeration();,if (this != null ) ValueEnumeration thisEnumer = this.valueEnumeration();
IntDomain.java,ValueEnumeration paramEnumer = domain.valueEnumeration();,if (domain != null ) ValueEnumeration paramEnumer = domain.valueEnumeration();
IntDomain.java,i = thisEnumer.nextElement();,if (thisEnumer != null ) i = thisEnumer.nextElement();
IntDomain.java,j = paramEnumer.nextElement();,if (paramEnumer != null ) j = paramEnumer.nextElement();
IntDomain.java,ValueEnumeration enumer = this.valueEnumeration();,if (this != null ) ValueEnumeration enumer = this.valueEnumeration();
IntervalDomain.java,object.size = intervals.size();,if (intervals != null ) object.size = intervals.size();
IntervalDomain.java,ValueEnumeration enumer = domain.valueEnumeration();,if (domain != null ) ValueEnumeration enumer = domain.valueEnumeration();
IntervalDomain.java,int next = enumer.nextElement();,if (enumer != null ) int next = enumer.nextElement();
IntervalDomain.java,IntervalEnumeration enumer = domain.intervalEnumeration();,if (domain != null ) IntervalEnumeration enumer = domain.intervalEnumeration();
IntervalDomain.java,Interval next = enumer.nextElement();,if (enumer != null ) Interval next = enumer.nextElement();
IntervalDomain.java,ValueEnumeration enumer = input.valueEnumeration();,if (input != null ) ValueEnumeration enumer = input.valueEnumeration();
IntervalDomain.java,int next = enumer.nextElement();,if (enumer != null ) int next = enumer.nextElement();
IntervalDomain.java,ValueEnumeration enumer = domain.valueEnumeration();,if (domain != null ) ValueEnumeration enumer = domain.valueEnumeration();
IntervalDomain.java,IntervalEnumeration enumer = domain.intervalEnumeration();,if (domain != null ) IntervalEnumeration enumer = domain.intervalEnumeration();
IntervalDomain.java,Interval next = enumer.nextElement();,if (enumer != null ) Interval next = enumer.nextElement();
IntervalDomain.java,int min = domain.min();,if (domain != null ) int min = domain.min();
IntervalDomain.java,ValueEnumeration enumer = domain.valueEnumeration();,if (domain != null ) ValueEnumeration enumer = domain.valueEnumeration();
IntervalDomain.java,int min = domain.min();,if (domain != null ) int min = domain.min();
IntervalDomain.java,int max = domain.max();,if (domain != null ) int max = domain.max();
IntervalDomain.java,temp = domain.getClass().newInstance();,if (domain != null ) temp = domain.getClass().newInstance();
IntervalDomain.java,ValueEnumeration enumer = domain.valueEnumeration();,if (domain != null ) ValueEnumeration enumer = domain.valueEnumeration();
IntervalDomain.java,int next = enumer.nextElement();,if (enumer != null ) int next = enumer.nextElement();
IntervalDomain.java,ValueEnumeration enumer = domain.valueEnumeration();,if (domain != null ) ValueEnumeration enumer = domain.valueEnumeration();
IntervalDomain.java,int next = enumer.nextElement();,if (enumer != null ) int next = enumer.nextElement();
IntervalDomain.java,IntervalEnumeration enumer = domain.intervalEnumeration();,if (domain != null ) IntervalEnumeration enumer = domain.intervalEnumeration();
IntervalDomain.java,int min = domain.min();,if (domain != null ) int min = domain.min();
IntervalDomain.java,int max = domain.max();,if (domain != null ) int max = domain.max();
IntervalDomain.java,IntDomain result = this.cloneLight();,if (this != null ) IntDomain result = this.cloneLight();
IntervalDomain.java,ValueEnumeration enumer = domain.valueEnumeration();,if (domain != null ) ValueEnumeration enumer = domain.valueEnumeration();
IntervalDomain.java,int next = enumer.nextElement();,if (enumer != null ) int next = enumer.nextElement();
IntervalDomain.java,IntDomain result = intervalDomain.cloneLight();,if (intervalDomain != null ) IntDomain result = intervalDomain.cloneLight();
IntervalDomain.java,int min = domain.min();,if (domain != null ) int min = domain.min();
IntervalDomain.java,int max = domain.max();,if (domain != null ) int max = domain.max();
IntervalDomain.java,IntervalDomain result = this.cloneLight();,if (this != null ) IntervalDomain result = this.cloneLight();
IntervalDomain.java,ValueEnumeration enumer = domain.valueEnumeration();,if (domain != null ) ValueEnumeration enumer = domain.valueEnumeration();
IntervalDomain.java,int next = enumer.nextElement();,if (enumer != null ) int next = enumer.nextElement();
IntervalDomain.java,ValueEnumeration enumer = domain.valueEnumeration();,if (domain != null ) ValueEnumeration enumer = domain.valueEnumeration();
IntervalDomain.java,int next = enumer.nextElement();,if (enumer != null ) int next = enumer.nextElement();
IntervalDomain.java,int inputSize = domain.noIntervals();,if (domain != null ) int inputSize = domain.noIntervals();
IntervalDomain.java,int inputSize = domain.noIntervals();,if (domain != null ) int inputSize = domain.noIntervals();
IntervalDomain.java,ValueEnumeration enumer = domain.valueEnumeration();,if (domain != null ) ValueEnumeration enumer = domain.valueEnumeration();
IntervalDomain.java,int inputSize = domain.noIntervals();,if (domain != null ) int inputSize = domain.noIntervals();
IntervalDomain.java,int inputSize = domain.noIntervals();,if (domain != null ) int inputSize = domain.noIntervals();
IntervalDomain.java,int min = domain.min();,if (domain != null ) int min = domain.min();
IntervalDomain.java,int max = domain.max();,if (domain != null ) int max = domain.max();
IntervalDomain.java,ValueEnumeration enumer = domain.valueEnumeration();,if (domain != null ) ValueEnumeration enumer = domain.valueEnumeration();
IntervalDomain.java,int next = enumer.nextElement();,if (enumer != null ) int next = enumer.nextElement();
MutableDomainValue.java,MutableDomainValue val = new MutableDomainValue(domain.clone());,if (MutableDomainValue(domain != null ) MutableDomainValue val = new MutableDomainValue(domain.clone());
SmallDenseDomain.java,IntDomain intervalBasedRepresentation = this.toIntervalDomain();,if (this != null ) IntDomain intervalBasedRepresentation = this.toIntervalDomain();
SmallDenseDomain.java,IntDomain result = this.cloneLight();,if (this != null ) IntDomain result = this.cloneLight();
SmallDenseDomain.java,ValueEnumeration enumer = domain.valueEnumeration();,if (domain != null ) ValueEnumeration enumer = domain.valueEnumeration();
SmallDenseDomain.java,int next = enumer.nextElement();,if (enumer != null ) int next = enumer.nextElement();
SmallDenseDomain.java,IntervalEnumeration enumer = domain.intervalEnumeration();,if (domain != null ) IntervalEnumeration enumer = domain.intervalEnumeration();
SmallDenseDomain.java,IntDomain result = this.cloneLight();,if (this != null ) IntDomain result = this.cloneLight();
SmallDenseDomain.java,int noIntervals = this.noIntervals();,if (this != null ) int noIntervals = this.noIntervals();
Store.java,count += watchedConstraints.get(v).size();,if (watchedConstraints != null ) count += watchedConstraints.get(v).size();
Store.java,Domain vDom = var.dom();,if (var != null ) Domain vDom = var.dom();
Store.java,Set<String> ids = variablesHashMap.keySet();,if (variablesHashMap != null ) Set<String> ids = variablesHashMap.keySet();
Store.java,Domain d = variablesHashMap.get(s).dom();,if (variablesHashMap != null ) Domain d = variablesHashMap.get(s).dom();
XMLSaveSupport.java,SAXTransformerFactory tf = (SAXTransformerFactory) SAXTransformerFactory.newInstance();,if (SAXTransformerFactory != null ) SAXTransformerFactory tf = (SAXTransformerFactory) SAXTransformerFactory.newInstance();
XMLSaveSupport.java,TransformerHandler hd = tf.newTransformerHandler();,if (tf != null ) TransformerHandler hd = tf.newTransformerHandler();
XMLSaveSupport.java,Transformer serializer = hd.getTransformer();,if (hd != null ) Transformer serializer = hd.getTransformer();
XMLSaveSupport.java,Object[] sortedNames = store.variablesHashMap.keySet().toArray();,if (store != null ) Object[] sortedNames = store.variablesHashMap.keySet().toArray();
XMLSaveSupport.java,sortedNames = constraints.keySet().toArray();,if (constraints != null ) sortedNames = constraints.keySet().toArray();
XMLSaveSupport.java,Class c = object.getClass();,if (object != null ) Class c = object.getClass();
XMLSaveSupport.java,String characters = value.toString();,if (value != null ) String characters = value.toString();
XMLSaveSupport.java,Iterator iterator = collection.iterator();,if (collection != null ) Iterator iterator = collection.iterator();
XMLSaveSupport.java,Object ithObject = iterator.next();,if (iterator != null ) Object ithObject = iterator.next();
CPvizGardner.java,Thread tread = java.lang.Thread.currentThread();,if (java != null ) Thread tread = java.lang.Thread.currentThread();
CPvizGardner.java,long startCPU = b.getThreadCpuTime(tread.getId());,if (b != null ) long startCPU = b.getThreadCpuTime(tread.getId());
CPvizGardner.java,long startUser = b.getThreadUserTime(tread.getId());,if (b != null ) long startUser = b.getThreadUserTime(tread.getId());
CPvizGardner.java,boolean Result = store.consistency();,if (store != null ) boolean Result = store.consistency();
Cryptogram.java,int noWords = words.get(currentLine).size();,if (words != null ) int noWords = words.get(currentLine).size();
ExampleFD.java,long begin = System.currentTimeMillis();,if (System != null ) long begin = System.currentTimeMillis();
ExampleFD.java,long end = System.currentTimeMillis();,if (System != null ) long end = System.currentTimeMillis();
ExampleFD.java,long begin = System.currentTimeMillis();,if (System != null ) long begin = System.currentTimeMillis();
ExampleFD.java,long end = System.currentTimeMillis();,if (System != null ) long end = System.currentTimeMillis();
ExampleFD.java,nodes += search.getNodes();,if (search != null ) nodes += search.getNodes();
ExampleFD.java,decisions += search.getDecisions();,if (search != null ) decisions += search.getDecisions();
ExampleFD.java,wrongDecisions += search.getWrongDecisions();,if (search != null ) wrongDecisions += search.getWrongDecisions();
ExampleFD.java,backtracks += search.getBacktracks();,if (search != null ) backtracks += search.getBacktracks();
ExampleFD.java,long begin = System.currentTimeMillis();,if (System != null ) long begin = System.currentTimeMillis();
ExampleFD.java,long end = System.currentTimeMillis();,if (System != null ) long end = System.currentTimeMillis();
ExampleFD.java,long begin = System.currentTimeMillis();,if (System != null ) long begin = System.currentTimeMillis();
ExampleFD.java,long end = System.currentTimeMillis();,if (System != null ) long end = System.currentTimeMillis();
ExampleFD.java,long begin = System.currentTimeMillis();,if (System != null ) long begin = System.currentTimeMillis();
ExampleFD.java,long end = System.currentTimeMillis();,if (System != null ) long end = System.currentTimeMillis();
ExampleFD.java,long begin = System.currentTimeMillis();,if (System != null ) long begin = System.currentTimeMillis();
ExampleFD.java,long end = System.currentTimeMillis();,if (System != null ) long end = System.currentTimeMillis();
GeostExample.java,boolean result = store.consistency();,if (store != null ) boolean result = store.consistency();
MineSweeper.java,str = str.trim();,if (str != null ) str = str.trim();
NonTransitiveDice.java,boolean result = example.searchSpecial();,if (example != null ) boolean result = example.searchSpecial();
PerfectSquare.java,boolean result = store.consistency();,if (store != null ) boolean result = store.consistency();
PerfectSquare.java,xc = varsX[i].value();,if (varsX[i] != null ) xc = varsX[i].value();
PerfectSquare.java,yc = varsY[i].value();    // slot y coordinate,if (coordinate != null ) yc = varsY[i].value();    // slot y coordinate
PerfectSquare.java,sizex = xl[bnr].value(); // x size of block,if (block != null ) sizex = xl[bnr].value(); // x size of block
PerfectSquare.java,sizey = yl[bnr].value(); // y size of block,if (block != null ) sizey = yl[bnr].value(); // y size of block
CarSequencing.java,int value = enumer.nextElement();,if (enumer != null ) int value = enumer.nextElement();
CarSequencing.java,str = str.trim();,if (str != null ) str = str.trim();
CrossWord.java,str = str.trim();,if (str != null ) str = str.trim();
FilterBenchmark.java,result = store.consistency();,if (store != null ) result = store.consistency();
FilterBenchmark.java,result = store.consistency();,if (store != null ) result = store.consistency();
FilterBenchmark.java,result = store.consistency();,if (store != null ) result = store.consistency();
FilterBenchmark.java,result = store.consistency();,if (store != null ) result = store.consistency();
FilterBenchmark.java,result = store.consistency();,if (store != null ) result = store.consistency();
FilterBenchmark.java,result = store.consistency();,if (store != null ) result = store.consistency();
FilterBenchmark.java,result = store.consistency();,if (store != null ) result = store.consistency();
FilterBenchmark.java,result = store.consistency();,if (store != null ) result = store.consistency();
FilterBenchmark.java,int[] delays = filter.delays();,if (filter != null ) int[] delays = filter.delays();
FilterBenchmark.java,int[] lastOp = filter.lastOp();,if (filter != null ) int[] lastOp = filter.lastOp();
FilterBenchmark.java,D[i] = filter.addDel();,if (filter != null ) D[i] = filter.addDel();
FilterBenchmark.java,D[i] = filter.mulDel();,if (filter != null ) D[i] = filter.mulDel();
FilterBenchmark.java,Ns = filter.names();,if (filter != null ) Ns = filter.names();
FilterBenchmark.java,int[] delays = filter.delays();,if (filter != null ) int[] delays = filter.delays();
FilterBenchmark.java,int[] lastOp = filter.lastOp();,if (filter != null ) int[] lastOp = filter.lastOp();
FilterBenchmark.java,D[i] = filter.addDel();,if (filter != null ) D[i] = filter.addDel();
FilterBenchmark.java,D[i] = filter.mulDel();,if (filter != null ) D[i] = filter.mulDel();
FilterBenchmark.java,Ns = filter.names();,if (filter != null ) Ns = filter.names();
FilterBenchmark.java,int[] delays = filter.delays();,if (filter != null ) int[] delays = filter.delays();
FilterBenchmark.java,int[] lastOp = filter.lastOp();,if (filter != null ) int[] lastOp = filter.lastOp();
FilterBenchmark.java,D[i] = filter.addDel();,if (filter != null ) D[i] = filter.addDel();
FilterBenchmark.java,D[i] = filter.mulDel();,if (filter != null ) D[i] = filter.mulDel();
FilterBenchmark.java,Ns = filter.names();,if (filter != null ) Ns = filter.names();
FilterBenchmark.java,int[] delays = filter.delays();,if (filter != null ) int[] delays = filter.delays();
FilterBenchmark.java,int[] lastOp = filter.lastOp();,if (filter != null ) int[] lastOp = filter.lastOp();
FilterBenchmark.java,D[i] = filter.addDel();,if (filter != null ) D[i] = filter.addDel();
FilterBenchmark.java,D[i] = filter.mulDel();,if (filter != null ) D[i] = filter.mulDel();
FilterBenchmark.java,Ns = filter.namesPipeline();,if (filter != null ) Ns = filter.namesPipeline();
MUCA.java,String line = br.readLine();,if (br != null ) String line = br.readLine();
MUCA.java,line = br.readLine();,if (br != null ) line = br.readLine();
MUCA.java,line = br.readLine();,if (br != null ) line = br.readLine();
MUCA.java,in = Integer.valueOf(tk.nextToken());,if (Integer != null ) in = Integer.valueOf(tk.nextToken());
MUCA.java,out = Integer.valueOf(tk.nextToken());,if (Integer != null ) out = Integer.valueOf(tk.nextToken());
MUCA.java,line = br.readLine();,if (br != null ) line = br.readLine();
MUCA.java,line = br.readLine();,if (br != null ) line = br.readLine();
MUCA.java,line = br.readLine();,if (br != null ) line = br.readLine();
Nonogram.java,str = in.readLine();,if (in != null ) str = in.readLine();
QCP.java,long begin = System.currentTimeMillis();,if (System != null ) long begin = System.currentTimeMillis();
QCP.java,long end = System.currentTimeMillis();,if (System != null ) long end = System.currentTimeMillis();
FlatzincSGMPCS.java,Store store = fl.getStore();,if (fl != null ) Store store = fl.getStore();
FlatzincSGMPCS.java,int timeOut = fl.getOptions().getTimeOut();,if (fl != null ) int timeOut = fl.getOptions().getTimeOut();
FlatzincSGMPCS.java,IntVar cost = (IntVar)fl.getCost();,if ((IntVar)fl != null ) IntVar cost = (IntVar)fl.getCost();
FlatzincSGMPCS.java,boolean Result = label.search();,if (label != null ) boolean Result = label.search();
FlatzincSGMPCS.java,int[] sol = label.lastSolution();,if (label != null ) int[] sol = label.lastSolution();
FlatzincSolver.java,Store store = fl.getStore();,if (fl != null ) Store store = fl.getStore();
FlatzincSolver.java,DepthFirstSearch<Var> label = fl.getDFS();,if (fl != null ) DepthFirstSearch<Var> label = fl.getDFS();
FlatzincSolver.java,SelectChoicePoint<Var> select = fl.getSelectChoicePoint();,if (fl != null ) SelectChoicePoint<Var> select = fl.getSelectChoicePoint();
FlatzincSolver.java,Var cost = fl.getCost();,if (fl != null ) Var cost = fl.getCost();
FloatMinimize.java,Store store = fl.getStore();,if (fl != null ) Store store = fl.getStore();
FloatMinimize.java,boolean result = min.minimize();,if (min != null ) boolean result = min.minimize();
FloatMinimize.java,FloatInterval[] values = min.getFinalVarValues();,if (min != null ) FloatInterval[] values = min.getFinalVarValues();
Rosenbrock.java,boolean result = min.minimize();,if (min != null ) boolean result = min.minimize();
SixHumpCamelFunction.java,boolean result = min.minimize();,if (min != null ) boolean result = min.minimize();
Gardner.java,Thread tread = java.lang.Thread.currentThread();,if (java != null ) Thread tread = java.lang.Thread.currentThread();
Gardner.java,long startCPU = b.getThreadCpuTime(tread.getId());,if (b != null ) long startCPU = b.getThreadCpuTime(tread.getId());
Gardner.java,long startUser = b.getThreadUserTime(tread.getId());,if (b != null ) long startUser = b.getThreadUserTime(tread.getId());
Gardner.java,boolean result = store.consistency();,if (store != null ) boolean result = store.consistency();
SocialGolfer.java,Thread tread = java.lang.Thread.currentThread();,if (java != null ) Thread tread = java.lang.Thread.currentThread();
SocialGolfer.java,long startCPU = b.getThreadCpuTime(tread.getId());,if (b != null ) long startCPU = b.getThreadCpuTime(tread.getId());
SocialGolfer.java,long startUser = b.getThreadUserTime(tread.getId());,if (b != null ) long startUser = b.getThreadUserTime(tread.getId());
SocialGolfer.java,boolean result = store.consistency();,if (store != null ) boolean result = store.consistency();
Steiner.java,boolean result = store.consistency();,if (store != null ) boolean result = store.consistency();
AbsPeqR.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
CosPeqR.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
CosPeqR.java,min = normP.min();,if (normP != null ) min = normP.min();
CosPeqR.java,max = normP.max();,if (normP != null ) max = normP.max();
CosPeqR_decomposed.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
CosPeqR_decomposed.java,sat = sat && c.satisfied();,if (c != null ) sat = sat && c.satisfied();
ElementFloat.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
ElementFloat.java,IntDomain indexDom = index.dom().cloneLight();,if (index != null ) IntDomain indexDom = index.dom().cloneLight();
ElementFloat.java,double v = value.min();,if (value != null ) double v = value.min();
EquationSystem.java,FloatInterval[] xs = newton.solve();,if (newton != null ) FloatInterval[] xs = newton.solve();
ExpPeqR.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
IntervalGaussSeidel.java,double vMin = Math.abs(v.min());,if (Math != null ) double vMin = Math.abs(v.min());
IntervalGaussSeidel.java,double vMax = Math.abs(v.max());,if (Math != null ) double vMax = Math.abs(v.max());
IntervalGaussSeidel.java,double vMin = Math.abs(v.min());,if (Math != null ) double vMin = Math.abs(v.min());
IntervalGaussSeidel.java,double vMax = Math.abs(v.max());,if (Math != null ) double vMax = Math.abs(v.max());
Max.java,double maxMax = max.max();,if (max != null ) double maxMax = max.max();
Max.java,vDom = var.dom();,if (var != null ) vDom = var.dom();
Max.java,boolean sat = max.singleton();,if (max != null ) boolean sat = max.singleton();
Max.java,double MAX = max.min();,if (max != null ) double MAX = max.min();
Min.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
Min.java,double minMin = min.min();,if (min != null ) double minMin = min.min();
Min.java,vDom = var.dom();,if (var != null ) vDom = var.dom();
Min.java,double minValue = min.max();,if (min != null ) double minValue = min.max();
MultivariateIntervalNewton.java,FloatInterval[] v = igs.solve();,if (igs != null ) FloatInterval[] v = igs.solve();
PeqC.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
PeqQ.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
PgtC.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
PgtQ.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
PgteqC.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
PgteqQ.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
PltC.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
PltQ.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
PlteqC.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
PlteqQ.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
PmulQeqR.java,pMin = Math.sqrt(r.min());,if (Math != null ) pMin = Math.sqrt(r.min());
PmulQeqR.java,pMax = Math.sqrt(r.max());,if (Math != null ) pMax = Math.sqrt(r.max());
PneqC.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
PneqQ.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
PplusCeqR.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
PplusQeqR.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
SinPeqR.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
SinPeqR.java,min = normP.min();,if (normP != null ) min = normP.min();
SinPeqR.java,max = normP.max();,if (normP != null ) max = normP.max();
TanPeqR.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
TanPeqR.java,min = normP.min();,if (normP != null ) min = normP.min();
TanPeqR.java,max = normP.max();,if (normP != null ) max = normP.max();
XeqP.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
BNode.java,double lb = node.lb();,if (node != null ) double lb = node.lb();
BNode.java,double ub = node.ub();,if (node != null ) double ub = node.ub();
Linear.java,FloatVar v = variableQueue.removeFirst();,if (variableQueue != null ) FloatVar v = variableQueue.removeFirst();
Linear.java,FloatVar v = fdvs.removeFirst();,if (fdvs != null ) FloatVar v = fdvs.removeFirst();
VarWeightNode.java,double min = mul.min();,if (mul != null ) double min = mul.min();
VarWeightNode.java,double max = mul.max();,if (mul != null ) double max = mul.max();
VarWeightNode.java,double min = mul.min();,if (mul != null ) double min = mul.min();
VarWeightNode.java,double max = mul.max();,if (mul != null ) double max = mul.max();
FloatDomain.java,FloatIntervalEnumeration enumer = domain.floatIntervalEnumeration();,if (domain != null ) FloatIntervalEnumeration enumer = domain.floatIntervalEnumeration();
FloatDomain.java,FloatIntervalEnumeration enumer = domain.floatIntervalEnumeration();,if (domain != null ) FloatIntervalEnumeration enumer = domain.floatIntervalEnumeration();
FloatDomain.java,FloatInterval next = enumer.nextElement();,if (enumer != null ) FloatInterval next = enumer.nextElement();
FloatDomain.java,FloatIntervalEnumeration enumer = domain.floatIntervalEnumeration();,if (domain != null ) FloatIntervalEnumeration enumer = domain.floatIntervalEnumeration();
FloatDomain.java,FloatInterval next = enumer.nextElement();,if (enumer != null ) FloatInterval next = enumer.nextElement();
FloatDomain.java,FloatIntervalEnumeration enumer = domain.floatIntervalEnumeration();,if (domain != null ) FloatIntervalEnumeration enumer = domain.floatIntervalEnumeration();
FloatDomain.java,FloatInterval first = enumer.nextElement();,if (enumer != null ) FloatInterval first = enumer.nextElement();
FloatDomain.java,FloatInterval next = enumer.nextElement();,if (enumer != null ) FloatInterval next = enumer.nextElement();
FloatDomain.java,FloatDomain result = this.cloneLight();,if (this != null ) FloatDomain result = this.cloneLight();
FloatDomain.java,FloatIntervalEnumeration enumer = domain.floatIntervalEnumeration();,if (domain != null ) FloatIntervalEnumeration enumer = domain.floatIntervalEnumeration();
FloatDomain.java,FloatInterval next = enumer.nextElement();,if (enumer != null ) FloatInterval next = enumer.nextElement();
FloatDomain.java,FloatDomain result = this.cloneLight();,if (this != null ) FloatDomain result = this.cloneLight();
FloatDomain.java,FloatIntervalEnumeration enumer = domain.floatIntervalEnumeration();,if (domain != null ) FloatIntervalEnumeration enumer = domain.floatIntervalEnumeration();
FloatDomain.java,FloatInterval next = enumer.nextElement();,if (enumer != null ) FloatInterval next = enumer.nextElement();
FloatDomain.java,ValueEnumeration thisEnumer = this.valueEnumeration();,if (this != null ) ValueEnumeration thisEnumer = this.valueEnumeration();
FloatDomain.java,ValueEnumeration paramEnumer = domain.valueEnumeration();,if (domain != null ) ValueEnumeration paramEnumer = domain.valueEnumeration();
FloatDomain.java,i = thisEnumer.nextElement();,if (thisEnumer != null ) i = thisEnumer.nextElement();
FloatDomain.java,j = paramEnumer.nextElement();,if (paramEnumer != null ) j = paramEnumer.nextElement();
FloatDomain.java,FloatDomain result = this.cloneLight();,if (this != null ) FloatDomain result = this.cloneLight();
FloatDomain.java,FloatDomain result = this.cloneLight();,if (this != null ) FloatDomain result = this.cloneLight();
FloatDomain.java,ValueEnumeration enumer = this.valueEnumeration();,if (this != null ) ValueEnumeration enumer = this.valueEnumeration();
FloatIntervalDomain.java,object.size = intervals.size();,if (intervals != null ) object.size = intervals.size();
FloatIntervalDomain.java,FloatDomain result = intervalDomain.cloneLight();,if (intervalDomain != null ) FloatDomain result = intervalDomain.cloneLight();
FloatIntervalDomain.java,FloatIntervalDomain result = this.cloneLight();,if (this != null ) FloatIntervalDomain result = this.cloneLight();
FloatIntervalDomain.java,FloatIntervalDomain result = this.cloneLight();,if (this != null ) FloatIntervalDomain result = this.cloneLight();
FloatIntervalDomain.java,FloatIntervalDomain result = this.cloneLight();,if (this != null ) FloatIntervalDomain result = this.cloneLight();
LargestMaxFloat.java,double right = var.dom().max();,if (var != null ) double right = var.dom().max();
LargestMaxFloat.java,double left = leftVar.dom().max();,if (leftVar != null ) double left = leftVar.dom().max();
LargestMaxFloat.java,double right = rightVar.dom().max();,if (rightVar != null ) double right = rightVar.dom().max();
LargestMinFloat.java,double right = var.dom().min();,if (var != null ) double right = var.dom().min();
LargestMinFloat.java,double left = leftVar.dom().min();,if (leftVar != null ) double left = leftVar.dom().min();
LargestMinFloat.java,double right = rightVar.dom().min();,if (rightVar != null ) double right = rightVar.dom().min();
MaxRegretFloat.java,double rmin = var.min();,if (var != null ) double rmin = var.min();
MaxRegretFloat.java,double lmin = left.min();,if (left != null ) double lmin = left.min();
MaxRegretFloat.java,double rmin = right.min();,if (right != null ) double rmin = right.min();
Optimize.java,boolean result = store.consistency();,if (store != null ) boolean result = store.consistency();
Optimize.java,costValue = cost.max();,if (cost != null ) costValue = cost.max();
SmallestMaxFloat.java,double right = var.dom().max();,if (var != null ) double right = var.dom().max();
SmallestMaxFloat.java,double left = leftVar.dom().max();,if (leftVar != null ) double left = leftVar.dom().max();
SmallestMaxFloat.java,double right = rightVar.dom().max();,if (rightVar != null ) double right = rightVar.dom().max();
SmallestMinFloat.java,double right = var.dom().min();,if (var != null ) double right = var.dom().min();
SmallestMinFloat.java,double left = leftVar.dom().min();,if (leftVar != null ) double left = leftVar.dom().min();
SmallestMinFloat.java,double right = rightVar.dom().min();,if (rightVar != null ) double right = rightVar.dom().min();
SplitSelectFloat.java,int i = currentIndex.value();,if (currentIndex != null ) int i = currentIndex.value();
ASTPrint.java,int count = node.jjtGetNumChildren();,if (node != null ) int count = node.jjtGetNumChildren();
ASTVariableExpr.java,s = arrAccess.toString();,if (arrAccess != null ) s = arrAccess.toString();
Constraints.java,this.debug = opt.debug();,if (opt != null ) this.debug = opt.debug();
Constraints.java,int n = astTree.jjtGetNumChildren();,if (astTree != null ) int n = astTree.jjtGetNumChildren();
Constraints.java,int k = node.jjtGetNumChildren();,if (node != null ) int k = node.jjtGetNumChildren();
Constraints.java,int numberChildren = constraintWithAnnotations.jjtGetNumChildren();,if (constraintWithAnnotations != null ) int numberChildren = constraintWithAnnotations.jjtGetNumChildren();
FlatzincLoader.java,parser = new Parser(opt.getFile());,if (Parser(opt != null ) parser = new Parser(opt.getFile());
Fz2jacop.java,Thread tread = java.lang.Thread.currentThread();,if (java != null ) Thread tread = java.lang.Thread.currentThread();
Fz2jacop.java,long startCPU = b.getThreadCpuTime(tread.getId());,if (b != null ) long startCPU = b.getThreadCpuTime(tread.getId());
Fz2jacop.java,Parser parser = new Parser(opt.getFile());,if (Parser(opt != null ) Parser parser = new Parser(opt.getFile());
Options.java,precision = FloatDomain.precision();,if (FloatDomain != null ) precision = FloatDomain.precision();
SearchItem.java,int count = ann.jjtGetNumChildren();,if (ann != null ) int count = ann.jjtGetNumChildren();
SearchItem.java,int count = node.jjtGetNumChildren();,if (node != null ) int count = node.jjtGetNumChildren();
SearchItem.java,int count = node.jjtGetNumChildren();,if (node != null ) int count = node.jjtGetNumChildren();
SearchItem.java,int count = node.jjtGetNumChildren();,if (node != null ) int count = node.jjtGetNumChildren();
SearchItem.java,int count = node.jjtGetNumChildren();,if (node != null ) int count = node.jjtGetNumChildren();
Solve.java,int n = astTree.jjtGetNumChildren();,if (astTree != null ) int n = astTree.jjtGetNumChildren();
Solve.java,initNumberConstraints = store.numberConstraints();,if (store != null ) initNumberConstraints = store.numberConstraints();
Solve.java,int count = node.jjtGetNumChildren();,if (node != null ) int count = node.jjtGetNumChildren();
Solve.java,solveKind = getKind(kind.getKind());,if (getKind(kind != null ) solveKind = getKind(kind.getKind());
Solve.java,solveKind = getKind(kind.getKind());,if (getKind(kind != null ) solveKind = getKind(kind.getKind());
Solve.java,solveKind = getKind(kind.getKind());,if (getKind(kind != null ) solveKind = getKind(kind.getKind());
Solve.java,solveKind = getKind(kind.getKind());,if (getKind(kind != null ) solveKind = getKind(kind.getKind());
Solve.java,solveKind = getKind(kind.getKind());,if (getKind(kind != null ) solveKind = getKind(kind.getKind());
Solve.java,int to = options.getTimeOut();,if (options != null ) int to = options.getTimeOut();
Solve.java,int to = options.getTimeOut();,if (options != null ) int to = options.getTimeOut();
Solve.java,int to = options.getTimeOut();,if (options != null ) int to = options.getTimeOut();
Solve.java,int to = options.getTimeOut();,if (options != null ) int to = options.getTimeOut();
Solve.java,tread = java.lang.Thread.currentThread();,if (java != null ) tread = java.lang.Thread.currentThread();
Solve.java,startCPU = b.getThreadCpuTime(tread.getId());,if (b != null ) startCPU = b.getThreadCpuTime(tread.getId());
Solve.java,nodes = label.getNodes();,if (label != null ) nodes = label.getNodes();
Solve.java,decisions = label.getDecisions();,if (label != null ) decisions = label.getDecisions();
Solve.java,wrong = label.getWrongDecisions();,if (label != null ) wrong = label.getWrongDecisions();
Solve.java,backtracks = label.getBacktracks();,if (label != null ) backtracks = label.getBacktracks();
Solve.java,depth = label.getMaximumDepth();,if (label != null ) depth = label.getMaximumDepth();
Solve.java,solutions = label.getSolutionListener().solutionsNo();,if (label != null ) solutions = label.getSolutionListener().solutionsNo();
Solve.java,solutions = l.getSolutionListener().solutionsNo();,if (l != null ) solutions = l.getSolutionListener().solutionsNo();
Solve.java,int to = options.getTimeOut();,if (options != null ) int to = options.getTimeOut();
Solve.java,int to = options.getTimeOut();,if (options != null ) int to = options.getTimeOut();
Solve.java,int to = options.getTimeOut();,if (options != null ) int to = options.getTimeOut();
Solve.java,int to = options.getTimeOut();,if (options != null ) int to = options.getTimeOut();
Solve.java,tread = java.lang.Thread.currentThread();,if (java != null ) tread = java.lang.Thread.currentThread();
Solve.java,startCPU = b.getThreadCpuTime(tread.getId());,if (b != null ) startCPU = b.getThreadCpuTime(tread.getId());
Solve.java,int to = options.getTimeOut();,if (options != null ) int to = options.getTimeOut();
Solve.java,int ns = options.getNumberSolutions();,if (options != null ) int ns = options.getNumberSolutions();
Solve.java,nodes += label.getNodes();,if (label != null ) nodes += label.getNodes();
Solve.java,decisions += label.getDecisions();,if (label != null ) decisions += label.getDecisions();
Solve.java,wrong += label.getWrongDecisions();,if (label != null ) wrong += label.getWrongDecisions();
Solve.java,backtracks += label.getBacktracks();,if (label != null ) backtracks += label.getBacktracks();
Solve.java,depth += label.getMaximumDepth();,if (label != null ) depth += label.getMaximumDepth();
Solve.java,solutions = label.getSolutionListener().solutionsNo();,if (label != null ) solutions = label.getSolutionListener().solutionsNo();
Solve.java,setVar += v.dom().toString();,if (v != null ) setVar += v.dom().toString();
Solve.java,IntVar cost = dictionary.getVariable(node.getIdent());,if (dictionary != null ) IntVar cost = dictionary.getVariable(node.getIdent());
Solve.java,Integer costInt = dictionary.checkInt(node.getIdent());,if (dictionary != null ) Integer costInt = dictionary.checkInt(node.getIdent());
Solve.java,IntVar[] a = dictionary.getVariableArray(node.getIdent());,if (dictionary != null ) IntVar[] a = dictionary.getVariableArray(node.getIdent());
Solve.java,int[] costInt = dictionary.getIntArray(node.getIdent());,if (dictionary != null ) int[] costInt = dictionary.getIntArray(node.getIdent());
Solve.java,FloatVar cost = dictionary.getFloatVariable(node.getIdent());,if (dictionary != null ) FloatVar cost = dictionary.getFloatVariable(node.getIdent());
Solve.java,Double costFloat = dictionary.checkFloat(node.getIdent());,if (dictionary != null ) Double costFloat = dictionary.checkFloat(node.getIdent());
Solve.java,FloatVar[] a = dictionary.getVariableFloatArray(node.getIdent());,if (dictionary != null ) FloatVar[] a = dictionary.getVariableFloatArray(node.getIdent());
Solve.java,double[] costFloat = dictionary.getFloatArray(node.getIdent());,if (dictionary != null ) double[] costFloat = dictionary.getFloatArray(node.getIdent());
VariablesParameters.java,int count = node.jjtGetNumChildren();,if (node != null ) int count = node.jjtGetNumChildren();
VariablesParameters.java,int count = node.jjtGetNumChildren();,if (node != null ) int count = node.jjtGetNumChildren();
VariablesParameters.java,int no = child.jjtGetNumChildren();,if (child != null ) int no = child.jjtGetNumChildren();
VariablesParameters.java,int number = grandchild.jjtGetNumChildren();,if (grandchild != null ) int number = grandchild.jjtGetNumChildren();
VariablesParameters.java,int numberSL = arrayLiteral.jjtGetNumChildren();,if (arrayLiteral != null ) int numberSL = arrayLiteral.jjtGetNumChildren();
VariablesParameters.java,int count = child.jjtGetNumChildren();,if (child != null ) int count = child.jjtGetNumChildren();
VariablesParameters.java,int count = child.jjtGetNumChildren();,if (child != null ) int count = child.jjtGetNumChildren();
VariablesParameters.java,int count = child.jjtGetNumChildren();,if (child != null ) int count = child.jjtGetNumChildren();
VariablesParameters.java,int count = child.jjtGetNumChildren();,if (child != null ) int count = child.jjtGetNumChildren();
VariablesParameters.java,int count = child.jjtGetNumChildren();,if (child != null ) int count = child.jjtGetNumChildren();
VariablesParameters.java,int count = child.jjtGetNumChildren();,if (child != null ) int count = child.jjtGetNumChildren();
VariablesParameters.java,int count = child.jjtGetNumChildren();,if (child != null ) int count = child.jjtGetNumChildren();
GlobalConstraints.java,min = r[i].min();,if (r[i] != null ) min = r[i].min();
GlobalConstraints.java,nextMin = r[i].min();,if (r[i] != null ) nextMin = r[i].min();
Support.java,this.debug = Options.debug();,if (Options != null ) this.debug = Options.debug();
Support.java,int[] intTable = dictionary.getIntArray(node.getIdent());,if (dictionary != null ) int[] intTable = dictionary.getIntArray(node.getIdent());
Support.java,int count = node.jjtGetNumChildren();,if (node != null ) int count = node.jjtGetNumChildren();
Support.java,int val = node.getInt();,if (node != null ) int val = node.getInt();
Support.java,int val = node.getInt();,if (node != null ) int val = node.getInt();
Support.java,int bInt = dictionary.getInt(node.getIdent());,if (dictionary != null ) int bInt = dictionary.getInt(node.getIdent());
Support.java,double val = node.getFloat();,if (node != null ) double val = node.getFloat();
Support.java,double bFloat = dictionary.getFloat(node.getIdent());,if (dictionary != null ) double bFloat = dictionary.getFloat(node.getIdent());
Support.java,int count = child.jjtGetNumChildren();,if (child != null ) int count = child.jjtGetNumChildren();
Support.java,double[] floatTable = dictionary.getFloatArray(node.getIdent());,if (dictionary != null ) double[] floatTable = dictionary.getFloatArray(node.getIdent());
Support.java,int count = node.jjtGetNumChildren();,if (node != null ) int count = node.jjtGetNumChildren();
Support.java,int count = node.jjtGetNumChildren();,if (node != null ) int count = node.jjtGetNumChildren();
Support.java,int count = node.jjtGetNumChildren();,if (node != null ) int count = node.jjtGetNumChildren();
Support.java,int count = node.jjtGetNumChildren();,if (node != null ) int count = node.jjtGetNumChildren();
Support.java,int count = child.jjtGetNumChildren();,if (child != null ) int count = child.jjtGetNumChildren();
Support.java,int l = varSet.size();,if (varSet != null ) int l = varSet.size();
Support.java,Set<IntVar> vs = dictionary.aliasTable.keySet();,if (dictionary != null ) Set<IntVar> vs = dictionary.aliasTable.keySet();
Config.java,public long seed = System.currentTimeMillis();,if (System != null ) public long seed = System.currentTimeMillis();
Core.java,int[] newClause = clause.toArray();,if (clause != null ) int[] newClause = clause.toArray();
Core.java,int literalToPropagate = toPropagate.pop();,if (toPropagate != null ) int literalToPropagate = toPropagate.pop();
RunSolver.java,Config config = Config.defaultConfig();,if (Config != null ) Config config = Config.defaultConfig();
Trail.java,int var = assertionStack.peek();,if (assertionStack != null ) int var = assertionStack.peek();
Trail.java,int n = assertionStack.size();,if (assertionStack != null ) int n = assertionStack.size();
DatabasesStore.java,sum += databases[i].size();,if (databases[i] != null ) sum += databases[i].size();
DatabasesStore.java,int noOfVariables = core.getMaxVariable();,if (core != null ) int noOfVariables = core.getMaxVariable();
DatabasesStore.java,noOfClauses += databases[i].size();,if (databases[i] != null ) noOfClauses += databases[i].size();
MapClause.java,int[] answer = pool.getNew(literals.size());,if (pool != null ) int[] answer = pool.getNew(literals.size());
MapClause.java,assert array.length == literals.size();,if (literals != null ) assert array.length == literals.size();
MapClause.java,it = literals.keySet().iterator();,if (literals != null ) it = literals.keySet().iterator();
MapClause.java,int e = it.next();,if (it != null ) int e = it.next();
DebugModule.java,int numOfSetVar = core.trail.size();,if (core != null ) int numOfSetVar = core.trail.size();
HeuristicAssertionModule.java,int var = activity.getLiteralToAssert();,if (activity != null ) int var = activity.getLiteralToAssert();
HeuristicAssertionModule.java,int maxVariable = core.getMaxVariable();,if (core != null ) int maxVariable = core.getMaxVariable();
HeuristicForgetModule.java,Iterator<Integer> clauseIterator = learntClauses[lbd].iterator();,if (learntClauses[lbd] != null ) Iterator<Integer> clauseIterator = learntClauses[lbd].iterator();
HeuristicForgetModule.java,int clauseId = clauseIterator.next();,if (clauseIterator != null ) int clauseId = clauseIterator.next();
HeuristicForgetModule.java,answer += learntClauses[i].size();,if (learntClauses[i] != null ) answer += learntClauses[i].size();
SearchModule.java,int bjLevel = core.getLevelToBackjump();,if (core != null ) int bjLevel = core.getLevelToBackjump();
SearchModule.java,int nextLiteral = assertionH.findNextVar();,if (assertionH != null ) int nextLiteral = assertionH.findNextVar();
CnfParser.java,c = stream.read();,if (stream != null ) c = stream.read();
CnfParser.java,c = stream.read();,if (stream != null ) c = stream.read();
CnfParser.java,c = stream.read();,if (stream != null ) c = stream.read();
CnfParser.java,c = stream.read();,if (stream != null ) c = stream.read();
CnfParser.java,c = stream.read();,if (stream != null ) c = stream.read();
CnfParser.java,c = stream.read();,if (stream != null ) c = stream.read();
CnfParser.java,c = stream.read();,if (stream != null ) c = stream.read();
CnfParser.java,c = stream.read();,if (stream != null ) c = stream.read();
CnfParser.java,c = stream.read();,if (stream != null ) c = stream.read();
CnfParser.java,c = stream.read();,if (stream != null ) c = stream.read();
CnfParser.java,c = stream.read();,if (stream != null ) c = stream.read();
SatChangesListener.java,countPos = intVarsToUpdate.cardinality();,if (intVarsToUpdate != null ) countPos = intVarsToUpdate.cardinality();
SatWrapper.java,int[] clause = modelClausesToAdd.pop();,if (modelClausesToAdd != null ) int[] clause = modelClausesToAdd.pop();
SatWrapper.java,int literal = toAssertLiterals.pop();,if (toAssertLiterals != null ) int literal = toAssertLiterals.pop();
SatWrapper.java,int lower = v.domain.min();,if (v != null ) int lower = v.domain.min();
SatWrapper.java,int upper = v.domain.max();,if (v != null ) int upper = v.domain.max();
SatWrapper.java,int lit = assertionModule.findNextVar();,if (assertionModule != null ) int lit = assertionModule.findNextVar();
SatWrapper.java,int[] toAdd = pool.getNew(clause.size());,if (pool != null ) int[] toAdd = pool.getNew(clause.size());
SatWrapper.java,Config config = Config.defaultConfig();,if (Config != null ) Config config = Config.defaultConfig();
WrapperDebugModule.java,int numOfSetVar = core.trail.size();,if (core != null ) int numOfSetVar = core.trail.size();
DomainClausesDatabase.java,int clauseIndex = trail.size(); // TODO: faster?,if (faster? != null ) int clauseIndex = trail.size(); // TODO: faster?
DomainTranslator.java,int v = variable.domain.value();,if (variable != null ) int v = variable.domain.value();
LazyCpVarDomain.java,minNode.variable = wrapper.core.getFreshVariable();,if (wrapper != null ) minNode.variable = wrapper.core.getFreshVariable();
LazyCpVarDomain.java,maxNode.variable = wrapper.core.getFreshVariable();,if (wrapper != null ) maxNode.variable = wrapper.core.getFreshVariable();
DepthFirstSearch.java,T[] vars = solutionListener.getVariables();,if (solutionListener != null ) T[] vars = solutionListener.getVariables();
DepthFirstSearch.java,consistent = store.consistency();,if (store != null ) consistent = store.consistency();
DepthFirstSearch.java,val = heuristic.getChoiceValue();,if (heuristic != null ) val = heuristic.getChoiceValue();
DepthFirstSearch.java,childResult = childSearches[currentChildSearch].labeling();,if (childSearches[currentChildSearch] != null ) childResult = childSearches[currentChildSearch].labeling();
DepthFirstSearch.java,int childCostValue = childSearches[currentChildSearch].getCostValue();,if (childSearches[currentChildSearch] != null ) int childCostValue = childSearches[currentChildSearch].getCostValue();
DepthFirstSearch.java,double childCostValue = childSearches[currentChildSearch].getCostValueFloat();,if (childSearches[currentChildSearch] != null ) double childCostValue = childSearches[currentChildSearch].getCostValueFloat();
DepthFirstSearch.java,int childCostValue = childSearches[currentChildSearch].getCostValue();,if (childSearches[currentChildSearch] != null ) int childCostValue = childSearches[currentChildSearch].getCostValue();
DepthFirstSearch.java,double childCostValue = childSearches[currentChildSearch].getCostValueFloat();,if (childSearches[currentChildSearch] != null ) double childCostValue = childSearches[currentChildSearch].getCostValueFloat();
DepthFirstSearch.java,consistent = label(heuristic.getIndex());,if (label(heuristic != null ) consistent = label(heuristic.getIndex());
DepthFirstSearch.java,int solutionNoBeforeSearch = solutionListener.solutionsNo();,if (solutionListener != null ) int solutionNoBeforeSearch = solutionListener.solutionsNo();
DepthFirstSearch.java,boolean result = store.consistency();,if (store != null ) boolean result = store.consistency();
DepthFirstSearch.java,int solutionNoBeforeSearch = solutionListener.solutionsNo();,if (solutionListener != null ) int solutionNoBeforeSearch = solutionListener.solutionsNo();
DepthFirstSearch.java,boolean result = store.consistency();,if (store != null ) boolean result = store.consistency();
DepthFirstSearch.java,int solutionNoBeforeSearch = solutionListener.solutionsNo();,if (solutionListener != null ) int solutionNoBeforeSearch = solutionListener.solutionsNo();
DepthFirstSearch.java,boolean result = store.consistency();,if (store != null ) boolean result = store.consistency();
FailConstraintsStatistics.java,Integer k = failConstraintsIdStatistics.get(currentConstraint.id());,if (failConstraintsIdStatistics != null ) Integer k = failConstraintsIdStatistics.get(currentConstraint.id());
IndomainMedian.java,int position = var.getSize();,if (var != null ) int position = var.getSize();
IndomainMedian.java,IntDomain dom = var.dom();,if (var != null ) IntDomain dom = var.dom();
IndomainMedian.java,ValueEnumeration enumer = dom.valueEnumeration();,if (dom != null ) ValueEnumeration enumer = dom.valueEnumeration();
IndomainMedian.java,IntervalEnumeration enumer = dom.intervalEnumeration();,if (dom != null ) IntervalEnumeration enumer = dom.intervalEnumeration();
IndomainMedian.java,Interval next = enumer.nextElement();,if (enumer != null ) Interval next = enumer.nextElement();
IndomainMiddle.java,IntDomain dom = var.dom();,if (var != null ) IntDomain dom = var.dom();
IndomainRandom.java,int min = dom.min();,if (dom != null ) int min = dom.min();
IndomainRandom.java,int size = dom.getSize();,if (dom != null ) int size = dom.getSize();
IndomainRandom.java,int domainSize = dom.noIntervals();,if (dom != null ) int domainSize = dom.noIntervals();
LargestDomain.java,int right = var.getSize();,if (var != null ) int right = var.getSize();
LargestDomain.java,int left = leftVar.getSize();,if (leftVar != null ) int left = leftVar.getSize();
LargestDomain.java,int right = rightVar.getSize();,if (rightVar != null ) int right = rightVar.getSize();
LargestMax.java,int right = var.dom().max();,if (var != null ) int right = var.dom().max();
LargestMax.java,int left = leftVar.dom().max();,if (leftVar != null ) int left = leftVar.dom().max();
LargestMax.java,int right = rightVar.dom().max();,if (rightVar != null ) int right = rightVar.dom().max();
LargestMin.java,int right = var.dom().min();,if (var != null ) int right = var.dom().min();
LargestMin.java,int left = leftVar.dom().min();,if (leftVar != null ) int left = leftVar.dom().min();
LargestMin.java,int right = rightVar.dom().min();,if (rightVar != null ) int right = rightVar.dom().min();
MaxRegret.java,ValueEnumeration rEnum = var.domain.valueEnumeration();,if (var != null ) ValueEnumeration rEnum = var.domain.valueEnumeration();
MaxRegret.java,int rmin = rEnum.nextElement();,if (rEnum != null ) int rmin = rEnum.nextElement();
MaxRegret.java,rminNext = rEnum.nextElement();,if (rEnum != null ) rminNext = rEnum.nextElement();
MaxRegret.java,ValueEnumeration lEnum = left.domain.valueEnumeration();,if (left != null ) ValueEnumeration lEnum = left.domain.valueEnumeration();
MaxRegret.java,int lmin = lEnum.nextElement();,if (lEnum != null ) int lmin = lEnum.nextElement();
MaxRegret.java,lminNext = lEnum.nextElement();,if (lEnum != null ) lminNext = lEnum.nextElement();
MaxRegret.java,ValueEnumeration rEnum = right.domain.valueEnumeration();,if (right != null ) ValueEnumeration rEnum = right.domain.valueEnumeration();
MaxRegret.java,int rmin = rEnum.nextElement();,if (rEnum != null ) int rmin = rEnum.nextElement();
MaxRegret.java,rminNext = rEnum.nextElement();,if (rEnum != null ) rminNext = rEnum.nextElement();
MaxRegret.java,ValueEnumeration oEnum = o.domain.valueEnumeration();,if (o != null ) ValueEnumeration oEnum = o.domain.valueEnumeration();
MaxRegret.java,int omin = oEnum.nextElement();,if (oEnum != null ) int omin = oEnum.nextElement();
MaxRegret.java,ominNext = oEnum.nextElement();,if (oEnum != null ) ominNext = oEnum.nextElement();
MostConstrainedDynamic.java,int right = var.sizeConstraints();,if (var != null ) int right = var.sizeConstraints();
MostConstrainedDynamic.java,int left = leftVar.sizeConstraints();,if (leftVar != null ) int left = leftVar.sizeConstraints();
MostConstrainedDynamic.java,int right = rightVar.sizeConstraints();,if (rightVar != null ) int right = rightVar.sizeConstraints();
MostConstrainedStatic.java,int right = var.sizeConstraintsOriginal();,if (var != null ) int right = var.sizeConstraintsOriginal();
MostConstrainedStatic.java,int left = leftVar.sizeConstraintsOriginal();,if (leftVar != null ) int left = leftVar.sizeConstraintsOriginal();
MostConstrainedStatic.java,int right = rightVar.sizeConstraintsOriginal();,if (rightVar != null ) int right = rightVar.sizeConstraintsOriginal();
NoGoodsCollector.java,StringBuffer sb = new StringBuffer(noGoodsVariables.toString());,if (StringBuffer(noGoodsVariables != null ) StringBuffer sb = new StringBuffer(noGoodsVariables.toString());
Shaving.java,int last = shavable.size();,if (shavable != null ) int last = shavable.size();
Shaving.java,boolean result = store.consistency();,if (store != null ) boolean result = store.consistency();
Shaving.java,IntVar shaveVar = (T)g.getGuideVariable();,if ((T)g != null ) IntVar shaveVar = (T)g.getGuideVariable();
Shaving.java,boolean result = store.consistency();,if (store != null ) boolean result = store.consistency();
SimpleMatrixSelect.java,int finalIndex = searchVariables.size();,if (searchVariables != null ) int finalIndex = searchVariables.size();
SimpleSolutionListener.java,currentSolution[i] = vars[i].dom();,if (vars[i] != null ) currentSolution[i] = vars[i].dom();
SimpleSolutionListener.java,T current = itr.next();,if (itr != null ) T current = itr.next();
SimpleSolutionListener.java,boolean result = store.consistency();,if (store != null ) boolean result = store.consistency();
SmallestDomain.java,int right = var.getSize();,if (var != null ) int right = var.getSize();
SmallestDomain.java,int left = leftVar.getSize();,if (leftVar != null ) int left = leftVar.getSize();
SmallestDomain.java,int right = rightVar.getSize();,if (rightVar != null ) int right = rightVar.getSize();
SmallestMax.java,int right = var.dom().max();,if (var != null ) int right = var.dom().max();
SmallestMax.java,int left = leftVar.dom().max();,if (leftVar != null ) int left = leftVar.dom().max();
SmallestMax.java,int right = rightVar.dom().max();,if (rightVar != null ) int right = rightVar.dom().max();
SmallestMin.java,int right = var.dom().min();,if (var != null ) int right = var.dom().min();
SmallestMin.java,int left = leftVar.dom().min();,if (leftVar != null ) int left = leftVar.dom().min();
SmallestMin.java,int right = rightVar.dom().min();,if (rightVar != null ) int right = rightVar.dom().min();
SplitSelect.java,int value = super.getChoiceValue();,if (super != null ) int value = super.getChoiceValue();
TraceGenerator.java,ConsistencyListener current = search.getConsistencyListener();,if (search != null ) ConsistencyListener current = search.getConsistencyListener();
TraceGenerator.java,ExitChildListener<T> current = search.getExitChildListener();,if (search != null ) ExitChildListener<T> current = search.getExitChildListener();
TraceGenerator.java,ExitListener current = search.getExitListener();,if (search != null ) ExitListener current = search.getExitListener();
TraceGenerator.java,currentSearchNode.dom = selectedVar.dom().cloneLight();,if (selectedVar != null ) currentSearchNode.dom = selectedVar.dom().cloneLight();
TraceGenerator.java,selectedValue = select.getChoiceValue();,if (select != null ) selectedValue = select.getChoiceValue();
TraceGenerator.java,SearchNode sn =  searchStack.peek();,if (searchStack != null ) SearchNode sn =  searchStack.peek();
TraceGenerator.java,SearchNode sn =  searchStack.peek();,if (searchStack != null ) SearchNode sn =  searchStack.peek();
TraceGenerator.java,currentSearchNode = searchStack.pop();,if (searchStack != null ) currentSearchNode = searchStack.pop();
TraceGenerator.java,currentSearchNode = searchStack.pop();,if (searchStack != null ) currentSearchNode = searchStack.pop();
TraceGenerator.java,currentSearchNode = searchStack.pop();,if (searchStack != null ) currentSearchNode = searchStack.pop();
TraceGenerator.java,currentSearchNode = searchStack.pop();,if (searchStack != null ) currentSearchNode = searchStack.pop();
TraceGenerator.java,SAXTransformerFactory tf = (SAXTransformerFactory) SAXTransformerFactory.newInstance();,if (SAXTransformerFactory != null ) SAXTransformerFactory tf = (SAXTransformerFactory) SAXTransformerFactory.newInstance();
TraceGenerator.java,hdTree = tf.newTransformerHandler();,if (tf != null ) hdTree = tf.newTransformerHandler();
TraceGenerator.java,Transformer serializer = hdTree.getTransformer();,if (hdTree != null ) Transformer serializer = hdTree.getTransformer();
TraceGenerator.java,char[] comm = ourText.toCharArray();,if (ourText != null ) char[] comm = ourText.toCharArray();
TraceGenerator.java,SAXTransformerFactory tf = (SAXTransformerFactory) SAXTransformerFactory.newInstance();,if (SAXTransformerFactory != null ) SAXTransformerFactory tf = (SAXTransformerFactory) SAXTransformerFactory.newInstance();
TraceGenerator.java,hdVis = tf.newTransformerHandler();,if (tf != null ) hdVis = tf.newTransformerHandler();
TraceGenerator.java,Transformer serializer = hdVis.getTransformer();,if (hdVis != null ) Transformer serializer = hdVis.getTransformer();
TraceGenerator.java,char[] comm = ourText.toCharArray();,if (ourText != null ) char[] comm = ourText.toCharArray();
TraceGenerator.java,Interval next = enumer.nextElement();,if (enumer != null ) Interval next = enumer.nextElement();
TransformExtensional.java,searchResult &= !search.getSolutionListener().solutionLimitReached();,if (!search != null ) searchResult &= !search.getSolutionListener().solutionLimitReached();
TransformExtensional.java,IntVar[] vars = search.getSolutionListener().getVariables();,if (search != null ) IntVar[] vars = search.getSolutionListener().getVariables();
SGMPCSearch.java,searchStartTime = System.currentTimeMillis();,if (System != null ) searchStartTime = System.currentTimeMillis();
SGMPCSearch.java,long currentTime = System.currentTimeMillis();,if (System != null ) long currentTime = System.currentTimeMillis();
SGMPCSearch.java,solution = search.getSolution();,if (search != null ) solution = search.getSolution();
SGMPCSearch.java,searchCost = search.getCurrentCost();,if (search != null ) searchCost = search.getCurrentCost();
SGMPCSearch.java,solution = search.getSolution();,if (search != null ) solution = search.getSolution();
SGMPCSearch.java,searchCost = search.getCurrentCost();,if (search != null ) searchCost = search.getCurrentCost();
SGMPCSearch.java,long currentTime = System.currentTimeMillis();,if (System != null ) long currentTime = System.currentTimeMillis();
SimpleImprovementSearch.java,Domain[] domSolution = label.getSolution();,if (label != null ) Domain[] domSolution = label.getSolution();
SimpleImprovementSearch.java,Domain[] domSolution = label.getSolution();,if (label != null ) Domain[] domSolution = label.getSolution();
SimpleImprovementSearch.java,searchCost = cost.value();,if (cost != null ) searchCost = cost.value();
AdiffBeqC.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
AdiffBeqC.java,int aMinCard = a.domain.card().min();,if (a != null ) int aMinCard = a.domain.card().min();
AdiffBeqC.java,int max = b.domain.card().min();,if (b != null ) int max = b.domain.card().min();
AdisjointB.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
AdisjointB.java,int elementsReservedForB = b.domain.card().min();,if (b != null ) int elementsReservedForB = b.domain.card().min();
AdisjointB.java,elementsReservedForB -= b.domain.glb().getSize();,if (b != null ) elementsReservedForB -= b.domain.glb().getSize();
AdisjointB.java,int elementsReservedForA = a.domain.card().min();,if (a != null ) int elementsReservedForA = a.domain.card().min();
AdisjointB.java,elementsReservedForA -= a.domain.glb().getSize();,if (a != null ) elementsReservedForA -= a.domain.glb().getSize();
AeqB.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
AeqS.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
AeqS.java,this.sizeOfB = set.getSize();,if (set != null ) this.sizeOfB = set.getSize();
AinB.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
AinS.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
AintersectBeqC.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
AunionBeqC.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
CardA.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
CardAeqX.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
EinA.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
ElementSet.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
ElementSet.java,IntDomain newValueGLB = valueDom.lub().cloneLight();,if (valueDom != null ) IntDomain newValueGLB = valueDom.lub().cloneLight();
ElementSet.java,ValueEnumeration enumer = indexDom.valueEnumeration();,if (indexDom != null ) ValueEnumeration enumer = indexDom.valueEnumeration();
Lex.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Lex.java,int minA = a.domain.lub().min();,if (a != null ) int minA = a.domain.lub().min();
Lex.java,int maxB = b.domain.lub().max();,if (b != null ) int maxB = b.domain.lub().max();
Lex.java,ValueEnumeration enumerGLBofB = b.domain.glb().valueEnumeration();,if (b != null ) ValueEnumeration enumerGLBofB = b.domain.glb().valueEnumeration();
Lex.java,ValueEnumeration enumerLUBofA = a.domain.lub().valueEnumeration();,if (a != null ) ValueEnumeration enumerLUBofA = a.domain.lub().valueEnumeration();
Lex.java,int nextElinGLBofB = enumerGLBofB.nextElement();,if (enumerGLBofB != null ) int nextElinGLBofB = enumerGLBofB.nextElement();
Lex.java,int nextElinLUBofA = enumerLUBofA.nextElement();,if (enumerLUBofA != null ) int nextElinLUBofA = enumerLUBofA.nextElement();
Lex.java,nextElinLUBofA = enumerLUBofA.nextElement();,if (enumerLUBofA != null ) nextElinLUBofA = enumerLUBofA.nextElement();
Lex.java,nextElinGLBofB = enumerGLBofB.nextElement();,if (enumerGLBofB != null ) nextElinGLBofB = enumerGLBofB.nextElement();
Lex.java,nextElinLUBofA = enumerLUBofA.nextElement();,if (enumerLUBofA != null ) nextElinLUBofA = enumerLUBofA.nextElement();
Lex.java,ValueEnumeration enumerGLBofA = a.domain.glb().valueEnumeration();,if (a != null ) ValueEnumeration enumerGLBofA = a.domain.glb().valueEnumeration();
Lex.java,ValueEnumeration enumerGLBofB = b.domain.glb().valueEnumeration();,if (b != null ) ValueEnumeration enumerGLBofB = b.domain.glb().valueEnumeration();
Lex.java,ValueEnumeration enumerLUBofA = a.domain.lub().valueEnumeration();,if (a != null ) ValueEnumeration enumerLUBofA = a.domain.lub().valueEnumeration();
Lex.java,int nextElinGLBofA = enumerGLBofA.nextElement();,if (enumerGLBofA != null ) int nextElinGLBofA = enumerGLBofA.nextElement();
Lex.java,int nextElinGLBofB = enumerGLBofB.nextElement();,if (enumerGLBofB != null ) int nextElinGLBofB = enumerGLBofB.nextElement();
Lex.java,int nextElinLUBofA = enumerLUBofA.nextElement();,if (enumerLUBofA != null ) int nextElinLUBofA = enumerLUBofA.nextElement();
Lex.java,nextElinLUBofA = enumerLUBofA.nextElement();,if (enumerLUBofA != null ) nextElinLUBofA = enumerLUBofA.nextElement();
Lex.java,nextElinLUBofA = enumerLUBofA.nextElement();,if (enumerLUBofA != null ) nextElinLUBofA = enumerLUBofA.nextElement();
Lex.java,nextElinLUBofA = enumerLUBofA.nextElement();,if (enumerLUBofA != null ) nextElinLUBofA = enumerLUBofA.nextElement();
Lex.java,nextElinGLBofA = enumerGLBofA.nextElement();,if (enumerGLBofA != null ) nextElinGLBofA = enumerGLBofA.nextElement();
Lex.java,nextElinGLBofB = enumerGLBofB.nextElement();,if (enumerGLBofB != null ) nextElinGLBofB = enumerGLBofB.nextElement();
Lex.java,nextElinLUBofA = enumerLUBofA.nextElement();,if (enumerLUBofA != null ) nextElinLUBofA = enumerLUBofA.nextElement();
Lex.java,nextElinLUBofA = enumerLUBofA.nextElement();,if (enumerLUBofA != null ) nextElinLUBofA = enumerLUBofA.nextElement();
Lex.java,nextElinGLBofB = b.domain.lub().max();,if (b != null ) nextElinGLBofB = b.domain.lub().max();
Lex.java,nextElinGLBofB = enumerGLBofB.nextElement();,if (enumerGLBofB != null ) nextElinGLBofB = enumerGLBofB.nextElement();
Lex.java,nextElinLUBofA = enumerLUBofA.nextElement();,if (enumerLUBofA != null ) nextElinLUBofA = enumerLUBofA.nextElement();
Lex.java,nextElinGLBofB = enumerGLBofB.nextElement();,if (enumerGLBofB != null ) nextElinGLBofB = enumerGLBofB.nextElement();
Lex.java,nextElinLUBofA = enumerLUBofA.nextElement();,if (enumerLUBofA != null ) nextElinLUBofA = enumerLUBofA.nextElement();
Lex.java,nextElinGLBofB = enumerGLBofB.nextElement();,if (enumerGLBofB != null ) nextElinGLBofB = enumerGLBofB.nextElement();
Lex.java,nextElinLUBofA = enumerLUBofA.nextElement();,if (enumerLUBofA != null ) nextElinLUBofA = enumerLUBofA.nextElement();
Match.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
Match.java,ValueEnumeration ve = a.domain.glb().valueEnumeration();,if (a != null ) ValueEnumeration ve = a.domain.glb().valueEnumeration();
Match.java,el = ve.nextElement();,if (ve != null ) el = ve.nextElement();
Match.java,ValueEnumeration ve = a.domain.lub().valueEnumeration();,if (a != null ) ValueEnumeration ve = a.domain.lub().valueEnumeration();
Match.java,el = ve.nextElement();,if (ve != null ) el = ve.nextElement();
Match.java,IntDomain glbA = a.domain.glb();,if (a != null ) IntDomain glbA = a.domain.glb();
Match.java,IntDomain lubA = a.domain.lub();,if (a != null ) IntDomain lubA = a.domain.lub();
Match.java,int sizeOfaGLB = glbA.getSize();,if (glbA != null ) int sizeOfaGLB = glbA.getSize();
Match.java,int sizeOfaLUB = lubA.getSize();,if (lubA != null ) int sizeOfaLUB = lubA.getSize();
Match.java,ValueEnumeration ve = a.domain.glb().valueEnumeration();,if (a != null ) ValueEnumeration ve = a.domain.glb().valueEnumeration();
SinA.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
SumWeightedSet.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
SumWeightedSet.java,ValueEnumeration enumer = a.domain.lub().valueEnumeration();,if (a != null ) ValueEnumeration enumer = a.domain.lub().valueEnumeration();
SumWeightedSet.java,IntDomain glbA = a.domain.glb();,if (a != null ) IntDomain glbA = a.domain.glb();
SumWeightedSet.java,IntDomain lubA = a.domain.lub();,if (a != null ) IntDomain lubA = a.domain.lub();
SumWeightedSet.java,ValueEnumeration enumer = glbA.valueEnumeration();,if (glbA != null ) ValueEnumeration enumer = glbA.valueEnumeration();
SumWeightedSet.java,glbSum += elementWeights.get(enumer.nextElement());,if (elementWeights != null ) glbSum += elementWeights.get(enumer.nextElement());
SumWeightedSet.java,enumer = potentialEl.valueEnumeration();,if (potentialEl != null ) enumer = potentialEl.valueEnumeration();
SumWeightedSet.java,enumer = potentialEl.valueEnumeration();,if (potentialEl != null ) enumer = potentialEl.valueEnumeration();
SumWeightedSet.java,el = enumer.nextElement();,if (enumer != null ) el = enumer.nextElement();
SumWeightedSet.java,enumer = potentialEl.valueEnumeration();,if (potentialEl != null ) enumer = potentialEl.valueEnumeration();
SumWeightedSet.java,el = enumer.nextElement();,if (enumer != null ) el = enumer.nextElement();
SumWeightedSet.java,enumer = potentialEl.valueEnumeration();,if (potentialEl != null ) enumer = potentialEl.valueEnumeration();
SumWeightedSet.java,el = enumer.nextElement();,if (enumer != null ) el = enumer.nextElement();
SumWeightedSet.java,ValueEnumeration enumer = a.domain.glb().valueEnumeration();,if (a != null ) ValueEnumeration enumer = a.domain.glb().valueEnumeration();
SumWeightedSet.java,sum += elementWeights.get(enumer.nextElement());,if (elementWeights != null ) sum += elementWeights.get(enumer.nextElement());
XeqA.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
XinA.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
BoundSetDomain.java,this.glb = glb.cloneLight();,if (glb != null ) this.glb = glb.cloneLight();
BoundSetDomain.java,this.lub = lub.cloneLight();,if (lub != null ) this.lub = lub.cloneLight();
BoundSetDomain.java,this.cardinality = cardinality.cloneLight();,if (cardinality != null ) this.cardinality = cardinality.cloneLight();
BoundSetDomain.java,this.glb = glb.cloneLight();,if (glb != null ) this.glb = glb.cloneLight();
BoundSetDomain.java,this.lub = lub.cloneLight();,if (lub != null ) this.lub = lub.cloneLight();
BoundSetDomain.java,lub = lub.union(domain.lub());,if (lub != null ) lub = lub.union(domain.lub());
BoundSetDomain.java,glb = glb.intersect(domain.glb());,if (glb != null ) glb = glb.intersect(domain.glb());
BoundSetDomain.java,IntDomain resultGLB = glb.cloneLight();,if (glb != null ) IntDomain resultGLB = glb.cloneLight();
BoundSetDomain.java,IntDomain resultLUB = lub.cloneLight();,if (lub != null ) IntDomain resultLUB = lub.cloneLight();
BoundSetDomain.java,this.glb = domain.glb();,if (domain != null ) this.glb = domain.glb();
BoundSetDomain.java,this.lub = domain.lub();,if (domain != null ) this.lub = domain.lub();
BoundSetDomain.java,SetDomain domain = this.cloneLight();,if (this != null ) SetDomain domain = this.cloneLight();
BoundSetDomain.java,IntDomain glbResult = glb.intersect(domain.glb());,if (glb != null ) IntDomain glbResult = glb.intersect(domain.glb());
BoundSetDomain.java,IntDomain lubResult = lub.union(domain.lub());,if (lub != null ) IntDomain lubResult = lub.union(domain.lub());
BoundSetDomain.java,result.lub = lub.cloneLight();,if (lub != null ) result.lub = lub.cloneLight();
BoundSetDomain.java,result.glb = glb.cloneLight();,if (glb != null ) result.glb = glb.cloneLight();
BoundSetDomain.java,result.glb = glb.cloneLight();,if (glb != null ) result.glb = glb.cloneLight();
BoundSetDomain.java,result.lub = lub.cloneLight();,if (lub != null ) result.lub = lub.cloneLight();
BoundSetDomain.java,result.lub = lub.cloneLight();,if (lub != null ) result.lub = lub.cloneLight();
BoundSetDomain.java,result.glb = glb.cloneLight();,if (glb != null ) result.glb = glb.cloneLight();
BoundSetDomain.java,IntDomain cardinality = var.domain.card();,if (var != null ) IntDomain cardinality = var.domain.card();
SetDomain.java,SetDomain result = this.cloneLight();,if (this != null ) SetDomain result = this.cloneLight();
SetDomain.java,SetDomain result = this.cloneLight();,if (this != null ) SetDomain result = this.cloneLight();
SetDomain.java,SetDomain result = this.cloneLight();,if (this != null ) SetDomain result = this.cloneLight();
SetDomain.java,SetDomain result = this.cloneLight();,if (this != null ) SetDomain result = this.cloneLight();
SetDomainValueEnumeration.java,min = dom.glb();,if (dom != null ) min = dom.glb();
SetDomainValueEnumeration.java,current = dom.glb();,if (dom != null ) current = dom.glb();
SetDomainValueEnumeration.java,max = dom.lub();,if (dom != null ) max = dom.lub();
SetDomainValueEnumeration.java,maxLevel = max.getSize() - min.getSize();,if (min != null ) maxLevel = max.getSize() - min.getSize();
SetDomainValueEnumeration.java,min = domain.glb();,if (domain != null ) min = domain.glb();
SetDomainValueEnumeration.java,current = domain.glb();,if (domain != null ) current = domain.glb();
SetDomainValueEnumeration.java,max = domain.lub();,if (domain != null ) max = domain.lub();
SetDomainValueEnumeration.java,maxLevel = max.getSize() - min.getSize();,if (min != null ) maxLevel = max.getSize() - min.getSize();
SetDomainValueEnumeration.java,IntDomain ret = this.min.cloneLight();,if (this != null ) IntDomain ret = this.min.cloneLight();
SetDomainValueEnumeration.java,v = ve.nextElement();,if (ve != null ) v = ve.nextElement();
IndomainSetRandom.java,int no = seed.nextInt(difference.getSize());,if (seed != null ) int no = seed.nextInt(difference.getSize());
MaxCardDiff.java,SetDomain dom = var.dom();,if (var != null ) SetDomain dom = var.dom();
MaxCardDiff.java,SetDomain leftDom = leftVar.dom();,if (leftVar != null ) SetDomain leftDom = leftVar.dom();
MaxCardDiff.java,SetDomain rightDom = rightVar.dom();,if (rightVar != null ) SetDomain rightDom = rightVar.dom();
MaxCardDiff.java,SetDomain dom = var.dom();,if (var != null ) SetDomain dom = var.dom();
MaxGlbCard.java,int left = leftVar.domain.glb().getSize();,if (leftVar != null ) int left = leftVar.domain.glb().getSize();
MaxGlbCard.java,int right = rightVar.domain.glb().getSize();,if (rightVar != null ) int right = rightVar.domain.glb().getSize();
MaxLubCard.java,SetDomain SD = (SetDomain) var.dom();,if (var != null ) SetDomain SD = (SetDomain) var.dom();
MaxLubCard.java,int right = SD.lub().getSize();,if (SD != null ) int right = SD.lub().getSize();
MaxLubCard.java,SetDomain leftSD = (SetDomain) leftVar.dom();,if (leftVar != null ) SetDomain leftSD = (SetDomain) leftVar.dom();
MaxLubCard.java,SetDomain rightSD = (SetDomain) rightVar.dom();,if (rightVar != null ) SetDomain rightSD = (SetDomain) rightVar.dom();
MaxLubCard.java,int left = leftSD.lub().getSize();,if (leftSD != null ) int left = leftSD.lub().getSize();
MaxLubCard.java,int right = rightSD.lub().getSize();,if (rightSD != null ) int right = rightSD.lub().getSize();
MaxLubCard.java,SetDomain SD = (SetDomain) var.dom();,if (var != null ) SetDomain SD = (SetDomain) var.dom();
MinCardDiff.java,SetDomain SD = (SetDomain) var.dom();,if (var != null ) SetDomain SD = (SetDomain) var.dom();
MinCardDiff.java,SetDomain leftSD = (SetDomain) leftVar.dom();,if (leftVar != null ) SetDomain leftSD = (SetDomain) leftVar.dom();
MinCardDiff.java,SetDomain rightSD = (SetDomain) rightVar.dom();,if (rightVar != null ) SetDomain rightSD = (SetDomain) rightVar.dom();
MinCardDiff.java,SetDomain SD = (SetDomain) var.dom();,if (var != null ) SetDomain SD = (SetDomain) var.dom();
MinGlbCard.java,SetDomain SD = var.dom();,if (var != null ) SetDomain SD = var.dom();
MinGlbCard.java,int right = SD.glb().getSize();,if (SD != null ) int right = SD.glb().getSize();
MinGlbCard.java,SetDomain leftSD = leftVar.dom();,if (leftVar != null ) SetDomain leftSD = leftVar.dom();
MinGlbCard.java,SetDomain rightSD = rightVar.dom();,if (rightVar != null ) SetDomain rightSD = rightVar.dom();
MinGlbCard.java,int left = leftSD.glb().getSize();,if (leftSD != null ) int left = leftSD.glb().getSize();
MinGlbCard.java,int right = rightSD.glb().getSize();,if (rightSD != null ) int right = rightSD.glb().getSize();
MinGlbCard.java,SetDomain SD = (SetDomain) var.dom();,if (var != null ) SetDomain SD = (SetDomain) var.dom();
MinLubCard.java,SetDomain SD = var.dom();,if (var != null ) SetDomain SD = var.dom();
MinLubCard.java,int right = SD.lub().getSize();,if (SD != null ) int right = SD.lub().getSize();
MinLubCard.java,SetDomain leftSD = (SetDomain) leftVar.dom();,if (leftVar != null ) SetDomain leftSD = (SetDomain) leftVar.dom();
MinLubCard.java,SetDomain rightSD = (SetDomain) rightVar.dom();,if (rightVar != null ) SetDomain rightSD = (SetDomain) rightVar.dom();
MinLubCard.java,int left = leftSD.lub().getSize();,if (leftSD != null ) int left = leftSD.lub().getSize();
MinLubCard.java,int right = rightSD.lub().getSize();,if (rightSD != null ) int right = rightSD.lub().getSize();
MinLubCard.java,SetDomain SD = (SetDomain) var.dom();,if (var != null ) SetDomain SD = (SetDomain) var.dom();
PrintSchedule.java,m = r[i].min();,if (r[i] != null ) m = r[i].min();
PrintSchedule.java,m = r[i].min();,if (r[i] != null ) m = r[i].min();
PrintSchedule.java,int sp = result.length();,if (result != null ) int sp = result.length();
IndexDomainView.java,for(ValueEnumeration enumer = var.domain.valueEnumeration(); enumer.hasMoreElements();) {,if ({ != null ) for(ValueEnumeration enumer = var.domain.valueEnumeration(); enumer.hasMoreElements();) {
IndexDomainView.java,for(ValueEnumeration enumer = var.domain.valueEnumeration(); enumer.hasMoreElements();) {,if ({ != null ) for(ValueEnumeration enumer = var.domain.valueEnumeration(); enumer.hasMoreElements();) {
IndexDomainView.java,int value = enumer.nextElement();,if (enumer != null ) int value = enumer.nextElement();
MDD.java,domainLimits[i] = vars[i].domain.getSize();,if (vars[i] != null ) domainLimits[i] = vars[i].domain.getSize();
MDD.java,domainLimits[i] = vars[i].domain.getSize();,if (vars[i] != null ) domainLimits[i] = vars[i].domain.getSize();
MDD.java,domainLimits[i] = vars[i].domain.getSize();,if (vars[i] != null ) domainLimits[i] = vars[i].domain.getSize();
MDD.java,range[shiftPosition] = firstEntry.getKey();,if (firstEntry != null ) range[shiftPosition] = firstEntry.getKey();
MDD.java,previousShift = firstEntry.getValue();,if (firstEntry != null ) previousShift = firstEntry.getValue();
FSM.java,int stateNumber = this.allStates.size();,if (this != null ) int stateNumber = this.allStates.size();
FSM.java,int stateNumber = this.allStates.size();,if (this != null ) int stateNumber = this.allStates.size();
FSM.java,int stateNumber = this.allStates.size();,if (this != null ) int stateNumber = this.allStates.size();
FSM.java,int nextElement = enumer.nextElement();,if (enumer != null ) int nextElement = enumer.nextElement();
RegularExpressionParser.java,c = new Literal(lexer.getString());,if (Literal(lexer != null ) c = new Literal(lexer.getString());
RegularExpressionParser.java,tmp = tmp.union(e.parseToFSM());,if (tmp != null ) tmp = tmp.union(e.parseToFSM());
ExampleBasedTest.java,int optimalCost = example.cost.value();,if (example != null ) int optimalCost = example.cost.value();
AndBoolVector.java,this.l = varSet.size();,if (varSet != null ) this.l = varSet.size();
AndBoolVector.java,int start = position.value();,if (position != null ) int start = position.value();
AndBoolVector.java,int start = position.value();,if (position != null ) int start = position.value();
AndBoolVector.java,int start = position.value();,if (position != null ) int start = position.value();
AndBoolVector.java,int start = position.value();,if (position != null ) int start = position.value();
LexOrder.java,int i = index.removeFirst();,if (index != null ) int i = index.removeFirst();
LinearInt.java,IntDomain xd = x[i].dom();,if (x[i] != null ) IntDomain xd = x[i].dom();
LinearInt.java,IntDomain xd = x[i].dom();,if (x[i] != null ) IntDomain xd = x[i].dom();
OrBoolVector.java,this.l = varSet.size();,if (varSet != null ) this.l = varSet.size();
OrBoolVector.java,int start = position.value();,if (position != null ) int start = position.value();
OrBoolVector.java,int start = position.value();,if (position != null ) int start = position.value();
OrBoolVector.java,int start = position.value();,if (position != null ) int start = position.value();
OrBoolVector.java,int start = position.value();,if (position != null ) int start = position.value();
MinizincBasedTestsHelper.java,String result = baos.toString();,if (baos != null ) String result = baos.toString();
Store.java,size = changed[currentQueue].size();,if (changed[currentQueue] != null ) size = changed[currentQueue].size();
Store.java,c = changed[currentQueue].removeFirst();,if (changed[currentQueue] != null ) c = changed[currentQueue].removeFirst();
Diffn.java,int lMin = rr.length(oDim).min();,if (rr != null ) int lMin = rr.length(oDim).min();
QueueForwardTest.java,String result = baos.toString();,if (baos != null ) String result = baos.toString();
QueueForwardTest.java,String textLine = bufferedReader.readLine();,if (bufferedReader != null ) String textLine = bufferedReader.readLine();
QueueForwardTest.java,textLine = bufferedReader.readLine();,if (bufferedReader != null ) textLine = bufferedReader.readLine();
QueueForwardTest.java,String result = baos.toString();,if (baos != null ) String result = baos.toString();
QueueForwardTest.java,String result = baos.toString();,if (baos != null ) String result = baos.toString();
QueueForwardTest.java,String result = baos.toString();,if (baos != null ) String result = baos.toString();
MinizincBasedTestAbove1Hours.java,String result = baos.toString();,if (baos != null ) String result = baos.toString();
MinizincBasedTestUpTo10Minutes.java,String result = baos.toString();,if (baos != null ) String result = baos.toString();
MinizincBasedTestUpTo1Hours.java,String result = baos.toString();,if (baos != null ) String result = baos.toString();
MinizincBasedTestUpTo1Minutes.java,String result = baos.toString();,if (baos != null ) String result = baos.toString();
MinizincBasedTestUpTo5Minutes.java,String result = baos.toString();,if (baos != null ) String result = baos.toString();
MinizincBasedTestUpTo30Seconds.java,String result = baos.toString();,if (baos != null ) String result = baos.toString();
MinizincBasedTestUpTo5Seconds.java,String result = baos.toString();,if (baos != null ) String result = baos.toString();
CumulativeBasic.java,profileValue -= t.res.min();,if (t != null ) profileValue -= t.res.min();
SmallDenseDomainTestComplement.java,Class<SmallDenseDomainTestComplement> cls = (Class<SmallDenseDomainTestComplement>) this.getClass();,if (this != null ) Class<SmallDenseDomainTestComplement> cls = (Class<SmallDenseDomainTestComplement>) this.getClass();
SmallDenseDomainTestContains.java,Class<SmallDenseDomainTestContains> cls = (Class<SmallDenseDomainTestContains>) this.getClass();,if (this != null ) Class<SmallDenseDomainTestContains> cls = (Class<SmallDenseDomainTestContains>) this.getClass();
SmallDenseDomainTestGetElementAt.java,Class<SmallDenseDomainTestGetElementAt> cls = (Class<SmallDenseDomainTestGetElementAt>) this.getClass();,if (this != null ) Class<SmallDenseDomainTestGetElementAt> cls = (Class<SmallDenseDomainTestGetElementAt>) this.getClass();
SmallDenseDomainTestIntersect.java,Class<SmallDenseDomainTestIntersect> cls = (Class<SmallDenseDomainTestIntersect>) this.getClass();,if (this != null ) Class<SmallDenseDomainTestIntersect> cls = (Class<SmallDenseDomainTestIntersect>) this.getClass();
SmallDenseDomainTestIntersectAdapt.java,Class<SmallDenseDomainTestIntersectAdapt> cls = (Class<SmallDenseDomainTestIntersectAdapt>) this.getClass();,if (this != null ) Class<SmallDenseDomainTestIntersectAdapt> cls = (Class<SmallDenseDomainTestIntersectAdapt>) this.getClass();
SmallDenseDomainTestIsIntersecting.java,Class<SmallDenseDomainTestIsIntersecting> cls = (Class<SmallDenseDomainTestIsIntersecting>) this.getClass();,if (this != null ) Class<SmallDenseDomainTestIsIntersecting> cls = (Class<SmallDenseDomainTestIsIntersecting>) this.getClass();
SmallDenseDomainTestSubtract.java,Class<SmallDenseDomainTestSubtract> cls = (Class<SmallDenseDomainTestSubtract>) this.getClass();,if (this != null ) Class<SmallDenseDomainTestSubtract> cls = (Class<SmallDenseDomainTestSubtract>) this.getClass();
CumulativeBasic.java,resourceUB[ti] = t.res.max();,if (t != null ) resourceUB[ti] = t.res.max();
CumulativeBasic.java,resourceUB[ti] = t.res.max();,if (t != null ) resourceUB[ti] = t.res.max();
CumulativeBasic.java,profileValue -= t.res.min();,if (t != null ) profileValue -= t.res.min();
GlobalConstraints.java,min = r[i].min();,if (r[i] != null ) min = r[i].min();
GlobalConstraints.java,nextMin = r[i].min();,if (r[i] != null ) nextMin = r[i].min();
Cumulative.java,int capacity = t[i].res.min();,if (t[i] != null ) int capacity = t[i].res.min();
CumulativeUnary.java,int l = nonZeroTasks.size();,if (nonZeroTasks != null ) int l = nonZeroTasks.size();
Constraints.java,this.debug = opt.debug();,if (opt != null ) this.debug = opt.debug();
Constraints.java,int n = astTree.jjtGetNumChildren();,if (astTree != null ) int n = astTree.jjtGetNumChildren();
Constraints.java,int k = node.jjtGetNumChildren();,if (node != null ) int k = node.jjtGetNumChildren();
Constraints.java,int numberChildren = constraintWithAnnotations.jjtGetNumChildren();,if (constraintWithAnnotations != null ) int numberChildren = constraintWithAnnotations.jjtGetNumChildren();
Constraints.java,min = r[i].min();,if (r[i] != null ) min = r[i].min();
Constraints.java,nextMin = r[i].min();,if (r[i] != null ) nextMin = r[i].min();
Constraints.java,int[] intTable = dictionary.getIntArray(node.getIdent());,if (dictionary != null ) int[] intTable = dictionary.getIntArray(node.getIdent());
Constraints.java,double[] floatTable = dictionary.getFloatArray(node.getIdent());,if (dictionary != null ) double[] floatTable = dictionary.getFloatArray(node.getIdent());
Constraints.java,int count = node.jjtGetNumChildren();,if (node != null ) int count = node.jjtGetNumChildren();
Constraints.java,int count = child.jjtGetNumChildren();,if (child != null ) int count = child.jjtGetNumChildren();
Constraints.java,int count = node.jjtGetNumChildren();,if (node != null ) int count = node.jjtGetNumChildren();
Constraints.java,int count = node.jjtGetNumChildren();,if (node != null ) int count = node.jjtGetNumChildren();
Constraints.java,int val = node.getInt();,if (node != null ) int val = node.getInt();
Constraints.java,int val = node.getInt();,if (node != null ) int val = node.getInt();
Constraints.java,int bInt = dictionary.getInt(node.getIdent());,if (dictionary != null ) int bInt = dictionary.getInt(node.getIdent());
Constraints.java,double val = node.getFloat();,if (node != null ) double val = node.getFloat();
Constraints.java,double bFloat = dictionary.getFloat(node.getIdent());,if (dictionary != null ) double bFloat = dictionary.getFloat(node.getIdent());
Constraints.java,int count = child.jjtGetNumChildren();,if (child != null ) int count = child.jjtGetNumChildren();
Constraints.java,int count = node.jjtGetNumChildren();,if (node != null ) int count = node.jjtGetNumChildren();
Constraints.java,int count = node.jjtGetNumChildren();,if (node != null ) int count = node.jjtGetNumChildren();
Constraints.java,Set<IntVar> vs = dictionary.aliasTable.keySet();,if (dictionary != null ) Set<IntVar> vs = dictionary.aliasTable.keySet();
Constraints.java,int l = varSet.size();,if (varSet != null ) int l = varSet.size();
Values.java,int uLength = graph.size();,if (graph != null ) int uLength = graph.size();
Values.java,int vLength = values.size();,if (values != null ) int vLength = values.size();
Values.java,int top = stack.peek();,if (stack != null ) int top = stack.peek();
Values.java,Iterator<Integer> nextNode = g[top].iterator();,if (g[top] != null ) Iterator<Integer> nextNode = g[top].iterator();
Values.java,int first = (Integer) nextNode.next();,if (nextNode != null ) int first = (Integer) nextNode.next();
Values.java,int v = stack.pop();,if (stack != null ) int v = stack.pop();
Values.java,u = stack.pop();,if (stack != null ) u = stack.pop();
Constraints.java,min = r[i].min();,if (r[i] != null ) min = r[i].min();
Constraints.java,nextMin = r[i].min();,if (r[i] != null ) nextMin = r[i].min();
CumulativeBasic.java,minProfile = cumulativeProfiles.minProfile();,if (cumulativeProfiles != null ) minProfile = cumulativeProfiles.minProfile();
CumulativeBasic.java,maxProfile = cumulativeProfiles.maxProfile();,if (cumulativeProfiles != null ) maxProfile = cumulativeProfiles.maxProfile();
CumulativeBasic.java,int rs = right.min - Start.min();,if (Start != null ) int rs = right.min - Start.min();
CumulativeBasic.java,offset = Resources.min();,if (Resources != null ) offset = Resources.min();
CumulativeBasic.java,int ps = p.min - Start.min();,if (Start != null ) int ps = p.min - Start.min();
CumulativeBasic.java,A = minUse.start();,if (minUse != null ) A = minUse.start();
CumulativeBasic.java,B = minUse.stop();,if (minUse != null ) B = minUse.stop();
CumulativeBasic.java,IntDomain tStartDom = t.start.dom();,if (t != null ) IntDomain tStartDom = t.start.dom();
CumulativeBasic.java,IntDomain sDom = task.start.dom();,if (task != null ) IntDomain sDom = task.start.dom();
CumulativeBasic.java,lst = sDom.max();,if (sDom != null ) lst = sDom.max();
CumulativeBasic.java,int limitMax = limit.max();,if (limit != null ) int limitMax = limit.max();
Profiles.java,tDurMin = t.dur.min();,if (t != null ) tDurMin = t.dur.min();
Profiles.java,tResMin = t.res.min();,if (t != null ) tResMin = t.res.min();
Profiles.java,value = t.res.max();,if (t != null ) value = t.res.max();
Profiles.java,IntDomain sDom = task.start.dom();,if (task != null ) IntDomain sDom = task.start.dom();
Profiles.java,lst = sDom.max();,if (sDom != null ) lst = sDom.max();
ExampleBasedTest.java,int optimalCost = example.cost.value();,if (example != null ) int optimalCost = example.cost.value();
ExampleBasedTest.java,int optimalCost = example.cost.value();,if (example != null ) int optimalCost = example.cost.value();
FailConstraintsStatistics.java,Integer n = failConstraintsStatistics.get(currentConstraint.getClass());,if (failConstraintsStatistics != null ) Integer n = failConstraintsStatistics.get(currentConstraint.getClass());
Store.java,Integer n = failConstraintsStatistics.get(currentConstraint.getClass());,if (failConstraintsStatistics != null ) Integer n = failConstraintsStatistics.get(currentConstraint.getClass());
Store.java,Integer k = failConstraintsIdStatistics.get(currentConstraint.id());,if (failConstraintsIdStatistics != null ) Integer k = failConstraintsIdStatistics.get(currentConstraint.id());
Solve.java,int n = astTree.jjtGetNumChildren();,if (astTree != null ) int n = astTree.jjtGetNumChildren();
LexOrder.java,int i = iVal.intValue();,if (iVal != null ) int i = iVal.intValue();
Constraints.java,int numberChildren = constraintWithAnnotations.jjtGetNumChildren();,if (constraintWithAnnotations != null ) int numberChildren = constraintWithAnnotations.jjtGetNumChildren();
ElementIntegerFast.java,short sort = order.value();,if (order != null ) short sort = order.value();
ElementIntegerFast.java,int minIndex = index.min();,if (index != null ) int minIndex = index.min();
ElementIntegerFast.java,int maxIndex = index.max();,if (index != null ) int maxIndex = index.max();
SumBool.java,GroundParameters gp = grounded.value();,if (grounded != null ) GroundParameters gp = grounded.value();
SumBool.java,int lb = xd.min();,if (xd != null ) int lb = xd.min();
SumBool.java,int ub = xd.max();,if (xd != null ) int ub = xd.max();
AndBool.java,int start = position.value();,if (position != null ) int start = position.value();
AndBool.java,int start = position.value();,if (position != null ) int start = position.value();
AndBool.java,int start = position.value();,if (position != null ) int start = position.value();
AndBool.java,int start = position.value();,if (position != null ) int start = position.value();
OrBool.java,int start = position.value();,if (position != null ) int start = position.value();
OrBool.java,int start = position.value();,if (position != null ) int start = position.value();
OrBool.java,int start = position.value();,if (position != null ) int start = position.value();
OrBool.java,int start = position.value();,if (position != null ) int start = position.value();
SumBool.java,int sumValue = sum.value();,if (sum != null ) int sumValue = sum.value();
SumBool.java,min += xd.min();,if (xd != null ) min += xd.min();
SumBool.java,max += xd.max();,if (xd != null ) max += xd.max();
DefaultSearchVars.java,int varSize = dictionary.defaultSearchSetVariables.size();,if (dictionary != null ) int varSize = dictionary.defaultSearchSetVariables.size();
DefaultSearchVars.java,varSize = dictionary.defaultSearchFloatVariables.size();,if (dictionary != null ) varSize = dictionary.defaultSearchFloatVariables.size();
Solve.java,int varSize = dictionary.defaultSearchSetVariables.size();,if (dictionary != null ) int varSize = dictionary.defaultSearchSetVariables.size();
Solve.java,varSize = dictionary.defaultSearchFloatVariables.size();,if (dictionary != null ) varSize = dictionary.defaultSearchFloatVariables.size();
SumInt.java,min = x[i].min();,if (x[i] != null ) min = x[i].min();
SumInt.java,max = x[i].max();,if (x[i] != null ) max = x[i].max();
SumInt.java,int sMax = sum.max();,if (sum != null ) int sMax = sum.max();
SumInt.java,min = x[i].min();,if (x[i] != null ) min = x[i].min();
SumInt.java,int newMax = x[i].max();,if (x[i] != null ) int newMax = x[i].max();
SumInt.java,int sMin = sum.min();,if (sum != null ) int sMin = sum.min();
SumInt.java,max = x[i].max();,if (x[i] != null ) max = x[i].max();
SumInt.java,int nmin = x[i].min();,if (x[i] != null ) int nmin = x[i].min();
SumInt.java,sMax += x[i].max();,if (x[i] != null ) sMax += x[i].max();
SumInt.java,sMin += x[i].min();,if (x[i] != null ) sMin += x[i].min();
AndBool.java,int start = position.value();,if (position != null ) int start = position.value();
AndBool.java,int start = position.value();,if (position != null ) int start = position.value();
AndBool.java,int start = position.value();,if (position != null ) int start = position.value();
AndBool.java,int start = position.value();,if (position != null ) int start = position.value();
OrBool.java,int start = position.value();,if (position != null ) int start = position.value();
OrBool.java,int start = position.value();,if (position != null ) int start = position.value();
OrBool.java,int start = position.value();,if (position != null ) int start = position.value();
OrBool.java,int start = position.value();,if (position != null ) int start = position.value();
ElementFloat.java,FloatDomain valDom = value.dom();,if (value != null ) FloatDomain valDom = value.dom();
ElementInteger.java,IntDomain valDom = value.dom();,if (value != null ) IntDomain valDom = value.dom();
ElementInteger.java,IntDomain i = mappingValuesToIndex.get(e.nextElement());,if (mappingValuesToIndex != null ) IntDomain i = mappingValuesToIndex.get(e.nextElement());
LexOrder.java,single = v[i].singleton();,if (v[i] != null ) single = v[i].singleton();
BoundDomain.java,BoundDomain result = this.cloneLight();,if (this != null ) BoundDomain result = this.cloneLight();
BoundDomain.java,BoundDomain result = this.cloneLight();,if (this != null ) BoundDomain result = this.cloneLight();
BoundDomain.java,BoundDomain result = this.cloneLight();,if (this != null ) BoundDomain result = this.cloneLight();
BoundDomain.java,BoundDomain result = this.cloneLight();,if (this != null ) BoundDomain result = this.cloneLight();
IntervalDomain.java,IntervalDomain result = this.cloneLight();,if (this != null ) IntervalDomain result = this.cloneLight();
IntervalDomain.java,IntervalDomain result = this.cloneLight();,if (this != null ) IntervalDomain result = this.cloneLight();
IntervalDomain.java,IntervalDomain result = this.cloneLight();,if (this != null ) IntervalDomain result = this.cloneLight();
IntervalDomain.java,IntervalDomain result = this.cloneLight();,if (this != null ) IntervalDomain result = this.cloneLight();
IntervalDomain.java,IntervalDomain result = this.cloneLight();,if (this != null ) IntervalDomain result = this.cloneLight();
SmallDenseDomain.java,SmallDenseDomain result = this.cloneLight();,if (this != null ) SmallDenseDomain result = this.cloneLight();
SmallDenseDomain.java,SmallDenseDomain result = this.cloneLight();,if (this != null ) SmallDenseDomain result = this.cloneLight();
SmallDenseDomain.java,SmallDenseDomain result = this.cloneLight();,if (this != null ) SmallDenseDomain result = this.cloneLight();
SmallDenseDomain.java,SmallDenseDomain result = this.cloneLight();,if (this != null ) SmallDenseDomain result = this.cloneLight();
FloatIntervalDomain.java,FloatIntervalDomain result = this.cloneLight();,if (this != null ) FloatIntervalDomain result = this.cloneLight();
FloatIntervalDomain.java,FloatIntervalDomain result = this.cloneLight();,if (this != null ) FloatIntervalDomain result = this.cloneLight();
ArgMax.java,int MAX = list[maxIndex.value()].value();,if (list[maxIndex != null ) int MAX = list[maxIndex.value()].value();
ArgMin.java,int MIN = list[minIndex.value()].value();,if (list[minIndex != null ) int MIN = list[minIndex.value()].value();
Diff2.java,IntDomain rOrigin = r.origin[i].dom();,if (r != null ) IntDomain rOrigin = r.origin[i].dom();
Diff2.java,IntDomain rLength = r.length[i].dom();,if (r != null ) IntDomain rLength = r.length[i].dom();
LinearFloat.java,FloatDomain listDom = list[i].dom();,if (list[i] != null ) FloatDomain listDom = list[i].dom();
LinearFloat.java,lMinArray[i] = mul.min();,if (mul != null ) lMinArray[i] = mul.min();
LinearFloat.java,lMaxArray[i] = mul.max();,if (mul != null ) lMaxArray[i] = mul.max();
LinearFloat.java,FloatDomain listDom = list[i].dom();,if (list[i] != null ) FloatDomain listDom = list[i].dom();
SGMPCSearch.java,int[] solution = search.getSolution();,if (search != null ) int[] solution = search.getSolution();
SGMPCSearch.java,int[] solution = search.getSolution();,if (search != null ) int[] solution = search.getSolution();
SGMPCSearch.java,Domain[] domSolution = label.getSolution();,if (label != null ) Domain[] domSolution = label.getSolution();
SGMPCSearch.java,Domain[] domSolution = label.getSolution();,if (label != null ) Domain[] domSolution = label.getSolution();
SGMPCSearch.java,searchCost = cost.value();,if (cost != null ) searchCost = cost.value();
MultivariateIntervalNewton.java,FloatInterval[] v = igs.solve();,if (igs != null ) FloatInterval[] v = igs.solve();
DepthFirstSearch.java,T[] vars = solutionListener.getVariables();,if (solutionListener != null ) T[] vars = solutionListener.getVariables();
DepthFirstSearch.java,Var current = itr.next();,if (itr != null ) Var current = itr.next();
DepthFirstSearch.java,consistent = store.consistency();,if (store != null ) consistent = store.consistency();
DepthFirstSearch.java,val = heuristic.getChoiceValue();,if (heuristic != null ) val = heuristic.getChoiceValue();
DepthFirstSearch.java,childResult = childSearches[currentChildSearch].labeling();,if (childSearches[currentChildSearch] != null ) childResult = childSearches[currentChildSearch].labeling();
DepthFirstSearch.java,int childCostValue = childSearches[currentChildSearch].getCostValue();,if (childSearches[currentChildSearch] != null ) int childCostValue = childSearches[currentChildSearch].getCostValue();
DepthFirstSearch.java,int childCostValue = childSearches[currentChildSearch].getCostValue();,if (childSearches[currentChildSearch] != null ) int childCostValue = childSearches[currentChildSearch].getCostValue();
DepthFirstSearch.java,costValue = costVariable.dom().min();,if (costVariable != null ) costValue = costVariable.dom().min();
DepthFirstSearch.java,consistent = label(heuristic.getIndex());,if (label(heuristic != null ) consistent = label(heuristic.getIndex());
DepthFirstSearch.java,int solutionNoBeforeSearch = solutionListener.solutionsNo();,if (solutionListener != null ) int solutionNoBeforeSearch = solutionListener.solutionsNo();
DepthFirstSearch.java,boolean result = store.consistency();,if (store != null ) boolean result = store.consistency();
DepthFirstSearch.java,int solutionNoBeforeSearch = solutionListener.solutionsNo();,if (solutionListener != null ) int solutionNoBeforeSearch = solutionListener.solutionsNo();
DepthFirstSearch.java,boolean result = store.consistency();,if (store != null ) boolean result = store.consistency();
DepthFirstSearch.java,int solutionNoBeforeSearch = solutionListener.solutionsNo();,if (solutionListener != null ) int solutionNoBeforeSearch = solutionListener.solutionsNo();
DepthFirstSearch.java,boolean result = store.consistency();,if (store != null ) boolean result = store.consistency();
CosPeqR.java,sat = sat && c.satisfied();,if (c != null ) sat = sat && c.satisfied();
IndomainMiddle.java,IntDomain dom = var.dom();,if (var != null ) IntDomain dom = var.dom();
IndomainMiddle.java,ValueEnumeration enumer = dom.valueEnumeration();,if (dom != null ) ValueEnumeration enumer = dom.valueEnumeration();
Sum.java,lowers[i] = list[i].domain.min();,if (list[i] != null ) lowers[i] = list[i].domain.min();
Sum.java,uppers[i] = list[i].domain.max();,if (list[i] != null ) uppers[i] = list[i].domain.max();
Config.java,public long seed = System.currentTimeMillis();,if (System != null ) public long seed = System.currentTimeMillis();
Core.java,int[] newClause = clause.toArray();,if (clause != null ) int[] newClause = clause.toArray();
Core.java,int literalToPropagate = toPropagate.pop();,if (toPropagate != null ) int literalToPropagate = toPropagate.pop();
RunSolver.java,Config config = Config.defaultConfig();,if (Config != null ) Config config = Config.defaultConfig();
Trail.java,int var = assertionStack.peek();,if (assertionStack != null ) int var = assertionStack.peek();
Trail.java,int n = assertionStack.size();,if (assertionStack != null ) int n = assertionStack.size();
DatabasesStore.java,sum += databases[i].size();,if (databases[i] != null ) sum += databases[i].size();
DatabasesStore.java,int noOfVariables = core.getMaxVariable();,if (core != null ) int noOfVariables = core.getMaxVariable();
DatabasesStore.java,noOfClauses += databases[i].size();,if (databases[i] != null ) noOfClauses += databases[i].size();
MapClause.java,int[] answer = pool.getNew(literals.size());,if (pool != null ) int[] answer = pool.getNew(literals.size());
MapClause.java,assert array.length == literals.size();,if (literals != null ) assert array.length == literals.size();
MapClause.java,it = literals.keySet().iterator();,if (literals != null ) it = literals.keySet().iterator();
MapClause.java,int e = it.next();,if (it != null ) int e = it.next();
DebugModule.java,int numOfSetVar = core.trail.size();,if (core != null ) int numOfSetVar = core.trail.size();
HeuristicAssertionModule.java,int var = activity.getLiteralToAssert();,if (activity != null ) int var = activity.getLiteralToAssert();
HeuristicAssertionModule.java,int maxVariable = core.getMaxVariable();,if (core != null ) int maxVariable = core.getMaxVariable();
HeuristicForgetModule.java,Iterator<Integer> clauseIterator = learntClauses[lbd].iterator();,if (learntClauses[lbd] != null ) Iterator<Integer> clauseIterator = learntClauses[lbd].iterator();
HeuristicForgetModule.java,int clauseId = clauseIterator.next();,if (clauseIterator != null ) int clauseId = clauseIterator.next();
HeuristicForgetModule.java,answer += learntClauses[i].size();,if (learntClauses[i] != null ) answer += learntClauses[i].size();
SearchModule.java,int bjLevel = core.getLevelToBackjump();,if (core != null ) int bjLevel = core.getLevelToBackjump();
SearchModule.java,int nextLiteral = assertionH.findNextVar();,if (assertionH != null ) int nextLiteral = assertionH.findNextVar();
CnfParser.java,c = stream.read();,if (stream != null ) c = stream.read();
CnfParser.java,c = stream.read();,if (stream != null ) c = stream.read();
CnfParser.java,c = stream.read();,if (stream != null ) c = stream.read();
CnfParser.java,c = stream.read();,if (stream != null ) c = stream.read();
CnfParser.java,c = stream.read();,if (stream != null ) c = stream.read();
CnfParser.java,c = stream.read();,if (stream != null ) c = stream.read();
CnfParser.java,c = stream.read();,if (stream != null ) c = stream.read();
CnfParser.java,c = stream.read();,if (stream != null ) c = stream.read();
CnfParser.java,c = stream.read();,if (stream != null ) c = stream.read();
CnfParser.java,c = stream.read();,if (stream != null ) c = stream.read();
CnfParser.java,c = stream.read();,if (stream != null ) c = stream.read();
SatChangesListener.java,countPos = intVarsToUpdate.cardinality();,if (intVarsToUpdate != null ) countPos = intVarsToUpdate.cardinality();
SatWrapper.java,int[] clause = modelClausesToAdd.pop();,if (modelClausesToAdd != null ) int[] clause = modelClausesToAdd.pop();
SatWrapper.java,int literal = toAssertLiterals.pop();,if (toAssertLiterals != null ) int literal = toAssertLiterals.pop();
SatWrapper.java,int lower = v.domain.min();,if (v != null ) int lower = v.domain.min();
SatWrapper.java,int upper = v.domain.max();,if (v != null ) int upper = v.domain.max();
SatWrapper.java,int lit = assertionModule.findNextVar();,if (assertionModule != null ) int lit = assertionModule.findNextVar();
SatWrapper.java,int[] toAdd = pool.getNew(clause.size());,if (pool != null ) int[] toAdd = pool.getNew(clause.size());
SatWrapper.java,Config config = Config.defaultConfig();,if (Config != null ) Config config = Config.defaultConfig();
WrapperDebugModule.java,int numOfSetVar = core.trail.size();,if (core != null ) int numOfSetVar = core.trail.size();
NonTransitiveDice.java,boolean result = example.searchSpecial();,if (example != null ) boolean result = example.searchSpecial();
SemiSatNonTransitiveDice.java,boolean result = example.searchSpecial();,if (example != null ) boolean result = example.searchSpecial();
DomainClausesDatabase.java,int clauseIndex = trail.size(); // TODO: faster?,if (faster? != null ) int clauseIndex = trail.size(); // TODO: faster?
DomainTranslator.java,int v = variable.domain.value();,if (variable != null ) int v = variable.domain.value();
LazyCpVarDomain.java,minNode.variable = wrapper.core.getFreshVariable();,if (wrapper != null ) minNode.variable = wrapper.core.getFreshVariable();
LazyCpVarDomain.java,maxNode.variable = wrapper.core.getFreshVariable();,if (wrapper != null ) maxNode.variable = wrapper.core.getFreshVariable();
SopSeqS.java,ArrayList<Link> subLinks = (ArrayList<Link>)links.clone();,if ((ArrayList<Link>)links != null ) ArrayList<Link> subLinks = (ArrayList<Link>)links.clone();
SopSeqS.java,ArrayList<Link> subLinks = (ArrayList<Link>)links.clone();,if ((ArrayList<Link>)links != null ) ArrayList<Link> subLinks = (ArrayList<Link>)links.clone();
SopX.java,IntDomain XdomCopy = X.dom().cloneLight();,if (X != null ) IntDomain XdomCopy = X.dom().cloneLight();
SopX.java,IntDomain XdomCopy = X.dom().cloneLight();,if (X != null ) IntDomain XdomCopy = X.dom().cloneLight();
SopXeqS.java,IntDomain XdomCopy = X.dom().cloneLight();,if (X != null ) IntDomain XdomCopy = X.dom().cloneLight();
SopXeqS.java,SlhsDomCopy[i] = Slhs.dom().cloneLight();,if (Slhs != null ) SlhsDomCopy[i] = Slhs.dom().cloneLight();
SopXeqS.java,SrhsDomCopy[i] = Srhs.dom().cloneLight();,if (Srhs != null ) SrhsDomCopy[i] = Srhs.dom().cloneLight();
SopXeqS.java,DiscreteStochasticDomain SlhsResult = Slhs.dom().cloneLight();,if (Slhs != null ) DiscreteStochasticDomain SlhsResult = Slhs.dom().cloneLight();
SopXeqS.java,DiscreteStochasticDomain SrhsResult = Srhs.dom().cloneLight();,if (Srhs != null ) DiscreteStochasticDomain SrhsResult = Srhs.dom().cloneLight();
DiscreteStochasticDomain.java,int lXdom = Xdom.getSize();,if (Xdom != null ) int lXdom = Xdom.getSize();
DiscreteStochasticDomain.java,b[i] = B[i].intValue();,if (B[i] != null ) b[i] = B[i].intValue();
DiscreteStochasticDomain.java,DiscreteStochasticDomain result = this.cloneLight();,if (this != null ) DiscreteStochasticDomain result = this.cloneLight();
DiscreteStochasticDomain.java,DiscreteStochasticDomain result = this.cloneLight();,if (this != null ) DiscreteStochasticDomain result = this.cloneLight();
DiscreteStochasticDomain.java,DiscreteStochasticDomain result = this.cloneLight();,if (this != null ) DiscreteStochasticDomain result = this.cloneLight();
DiscreteStochasticDomain.java,DiscreteStochasticDomain result = this.cloneLight();,if (this != null ) DiscreteStochasticDomain result = this.cloneLight();
StochasticVar.java,size += list[i].getSize();,if (list[i] != null ) size += list[i].getSize();
XMLSaveSupport.java,SAXTransformerFactory tf = (SAXTransformerFactory) SAXTransformerFactory.newInstance();,if (SAXTransformerFactory != null ) SAXTransformerFactory tf = (SAXTransformerFactory) SAXTransformerFactory.newInstance();
XMLSaveSupport.java,TransformerHandler hd = tf.newTransformerHandler();,if (tf != null ) TransformerHandler hd = tf.newTransformerHandler();
XMLSaveSupport.java,Transformer serializer = hd.getTransformer();,if (hd != null ) Transformer serializer = hd.getTransformer();
XMLSaveSupport.java,Object[] sortedNames = store.variablesHashMap.keySet().toArray();,if (store != null ) Object[] sortedNames = store.variablesHashMap.keySet().toArray();
XMLSaveSupport.java,sortedNames = constraints.keySet().toArray();,if (constraints != null ) sortedNames = constraints.keySet().toArray();
XMLSaveSupport.java,Class c = object.getClass();,if (object != null ) Class c = object.getClass();
XMLSaveSupport.java,String characters = value.toString();,if (value != null ) String characters = value.toString();
XMLSaveSupport.java,Iterator iterator = collection.iterator();,if (collection != null ) Iterator iterator = collection.iterator();
XMLSaveSupport.java,Object ithObject = iterator.next();,if (iterator != null ) Object ithObject = iterator.next();
ElementVariable.java,IntDomain temp = value.domain.cloneLight();,if (value != null ) IntDomain temp = value.domain.cloneLight();
ElementVariable.java,checkTrigger = nextValueDomain.getSize();,if (nextValueDomain != null ) checkTrigger = nextValueDomain.getSize();
ElementVariable.java,Iterator<IntVar> itr = variableQueue.iterator();,if (variableQueue != null ) Iterator<IntVar> itr = variableQueue.iterator();
ElementVariable.java,IntVar changedVar = itr.next();,if (itr != null ) IntVar changedVar = itr.next();
ElementVariable.java,int lostSupport = enumer.nextElement();,if (enumer != null ) int lostSupport = enumer.nextElement();
ElementVariable.java,int min = el.min();,if (el != null ) int min = el.min();
ElementVariable.java,int max = el.max();,if (el != null ) int max = el.max();
Solve.java,Thread tread = java.lang.Thread.currentThread();,if (java != null ) Thread tread = java.lang.Thread.currentThread();
Solve.java,long startCPU = b.getThreadCpuTime(tread.getId());,if (b != null ) long startCPU = b.getThreadCpuTime(tread.getId());
Solve.java,Thread tread = java.lang.Thread.currentThread();,if (java != null ) Thread tread = java.lang.Thread.currentThread();
Solve.java,long startCPU = b.getThreadCpuTime(tread.getId());,if (b != null ) long startCPU = b.getThreadCpuTime(tread.getId());
VariablesParameters.java,int count = node.jjtGetNumChildren();,if (node != null ) int count = node.jjtGetNumChildren();
VariablesParameters.java,int count = node.jjtGetNumChildren();,if (node != null ) int count = node.jjtGetNumChildren();
VariablesParameters.java,int no = child.jjtGetNumChildren();,if (child != null ) int no = child.jjtGetNumChildren();
VariablesParameters.java,int number = grandchild.jjtGetNumChildren();,if (grandchild != null ) int number = grandchild.jjtGetNumChildren();
VariablesParameters.java,int numberSL = arrayLiteral.jjtGetNumChildren();,if (arrayLiteral != null ) int numberSL = arrayLiteral.jjtGetNumChildren();
VariablesParameters.java,int count = child.jjtGetNumChildren();,if (child != null ) int count = child.jjtGetNumChildren();
VariablesParameters.java,int count = child.jjtGetNumChildren();,if (child != null ) int count = child.jjtGetNumChildren();
VariablesParameters.java,int count = child.jjtGetNumChildren();,if (child != null ) int count = child.jjtGetNumChildren();
VariablesParameters.java,int count = child.jjtGetNumChildren();,if (child != null ) int count = child.jjtGetNumChildren();
VariablesParameters.java,int count = child.jjtGetNumChildren();,if (child != null ) int count = child.jjtGetNumChildren();
VariablesParameters.java,int count = node.jjtGetNumChildren();,if (node != null ) int count = node.jjtGetNumChildren();
VariablesParameters.java,int count = node.jjtGetNumChildren();,if (node != null ) int count = node.jjtGetNumChildren();
VariablesParameters.java,int no = child.jjtGetNumChildren();,if (child != null ) int no = child.jjtGetNumChildren();
VariablesParameters.java,int number = grandchild.jjtGetNumChildren();,if (grandchild != null ) int number = grandchild.jjtGetNumChildren();
VariablesParameters.java,int numberSL = arrayLiteral.jjtGetNumChildren();,if (arrayLiteral != null ) int numberSL = arrayLiteral.jjtGetNumChildren();
VariablesParameters.java,int count = child.jjtGetNumChildren();,if (child != null ) int count = child.jjtGetNumChildren();
VariablesParameters.java,int count = child.jjtGetNumChildren();,if (child != null ) int count = child.jjtGetNumChildren();
VariablesParameters.java,int count = child.jjtGetNumChildren();,if (child != null ) int count = child.jjtGetNumChildren();
VariablesParameters.java,int count = child.jjtGetNumChildren();,if (child != null ) int count = child.jjtGetNumChildren();
VariablesParameters.java,int count = child.jjtGetNumChildren();,if (child != null ) int count = child.jjtGetNumChildren();
SumWeightDom.java,int pointer = nextGroundedPosition.value();,if (nextGroundedPosition != null ) int pointer = nextGroundedPosition.value();
CsvReaderExample.java,FileInputStream fin = new FileInputStream(raf.getFD());,if (FileInputStream(raf != null ) FileInputStream fin = new FileInputStream(raf.getFD());
CsvReaderTest.java,final CsvRow row = it.next();,if (it != null ) final CsvRow row = it.next();
CsvReaderTest.java,CsvRow row = it.next();,if (it != null ) CsvRow row = it.next();
CsvReaderTest.java,row = it.next();,if (it != null ) row = it.next();
InfiniteDataReader.java,this.data = data.toCharArray();,if (data != null ) this.data = data.toCharArray();
CsvParser.java,lineNo += line.getLines();,if (line != null ) lineNo += line.getLines();
CsvRow.java,final String key = header.getKey();,if (header != null ) final String key = header.getKey();
RowReader.java,final Line localLine = line.reset();,if (line != null ) final Line localLine = line.reset();
CsvWriter.java,this.lineDelimiter = lineDelimiter.clone();,if (lineDelimiter != null ) this.lineDelimiter = lineDelimiter.clone();
CsvReaderTest.java,final CsvRow csvRow = csv.nextRow();,if (csv != null ) final CsvRow csvRow = csv.nextRow();
CsvReaderTest.java,CsvRow row = csv.nextRow();,if (csv != null ) CsvRow row = csv.nextRow();
CsvReaderTest.java,row = csv.nextRow();,if (csv != null ) row = csv.nextRow();
CsvReaderTest.java,final CsvRow csvRow = csvParser.nextRow();,if (csvParser != null ) final CsvRow csvRow = csvParser.nextRow();
ReusableStringBuilderTest.java,final String s = sb.toStringAndReset();,if (sb != null ) final String s = sb.toStringAndReset();
ReusableStringBuilderTest.java,String s = sb.toStringAndReset();,if (sb != null ) String s = sb.toStringAndReset();
ReusableStringBuilderTest.java,s = sb.toStringAndReset();,if (sb != null ) s = sb.toStringAndReset();
ReusableStringBuilderTest.java,String s = sb.toStringAndReset();,if (sb != null ) String s = sb.toStringAndReset();
ReusableStringBuilderTest.java,s = sb.toStringAndReset();,if (sb != null ) s = sb.toStringAndReset();
CsvParser.java,final int fieldCount = currentFields.size();,if (currentFields != null ) final int fieldCount = currentFields.size();
ReusableStringBuilderTest.java,String s = sb.toStringAndReset();,if (sb != null ) String s = sb.toStringAndReset();
CsvParser.java,value = value.trim();,if (value != null ) value = value.trim();
CsvParser.java,name = name.trim();,if (name != null ) name = name.trim();
CsvParser.java,CsvSchema newSchema = builder.build();,if (builder != null ) CsvSchema newSchema = builder.build();
CsvParser.java,int size = newSchema.size();,if (newSchema != null ) int size = newSchema.size();
NumberInput.java,int length = str.length();,if (str != null ) int length = str.length();
NumberInput.java,int length = str.length();,if (str != null ) int length = str.length();
CsvParser.java,next = next.trim();,if (next != null ) next = next.trim();
CsvParser.java,int sep = column.getArrayElementSeparator();,if (column != null ) int sep = column.getArrayElementSeparator();
CsvEncoder.java,int len = text.length();,if (text != null ) int len = text.length();
CsvMapper.java,JavaType nextType = m.getType(beanDesc.bindingsForBeanType());,if (m != null ) JavaType nextType = m.getType(beanDesc.bindingsForBeanType());
ReadSequencesTest.java,assertNotNull(entry = it.nextValue());,if (it != null ) assertNotNull(entry = it.nextValue());
ReadSequencesTest.java,assertNotNull(entry = it.nextValue());,if (it != null ) assertNotNull(entry = it.nextValue());
ReadSequencesTest.java,assertNotNull(entry = it.nextValue());,if (it != null ) assertNotNull(entry = it.nextValue());
ReadSequencesTest.java,entry = it.nextValue();,if (it != null ) entry = it.nextValue();
ReadSequencesTest.java,entry = it.nextValue();,if (it != null ) entry = it.nextValue();
ReadSequencesTest.java,entry = it.nextValue();,if (it != null ) entry = it.nextValue();
ReadSequencesTest.java,entry = it.nextValue();,if (it != null ) entry = it.nextValue();
ReadSequencesTest.java,entry = it.nextValue();,if (it != null ) entry = it.nextValue();
CommentsTest.java,row = it.nextValue();,if (it != null ) row = it.nextValue();
CommentsTest.java,row = it.nextValue();,if (it != null ) row = it.nextValue();
CommentsTest.java,row = it.nextValue();,if (it != null ) row = it.nextValue();
CommentsTest.java,row = it.nextValue();,if (it != null ) row = it.nextValue();
NumberInput.java,int cmpLen = cmpStr.length();,if (cmpStr != null ) int cmpLen = cmpStr.length();
NumberInput.java,int actualLen = numberStr.length();,if (numberStr != null ) int actualLen = numberStr.length();
NumberInput.java,input = input.trim();,if (input != null ) input = input.trim();
NumberInput.java,int len = input.length();,if (input != null ) int len = input.length();
NumberInput.java,len = input.length();,if (input != null ) len = input.length();
NumberInput.java,input = input.trim();,if (input != null ) input = input.trim();
NumberInput.java,int len = input.length();,if (input != null ) int len = input.length();
NumberInput.java,len = input.length();,if (input != null ) len = input.length();
NumberInput.java,input = input.trim();,if (input != null ) input = input.trim();
NumberInput.java,int len = input.length();,if (input != null ) int len = input.length();
TestWriter.java,final CsvSchema schema = csvSchemaBuilder.build();,if (csvSchemaBuilder != null ) final CsvSchema schema = csvSchemaBuilder.build();
TestWriter.java,final CsvSchema schema = csvSchemaBuilder.build();,if (csvSchemaBuilder != null ) final CsvSchema schema = csvSchemaBuilder.build();
TestWriter.java,final CsvSchema schema = csvSchemaBuilder.build();,if (csvSchemaBuilder != null ) final CsvSchema schema = csvSchemaBuilder.build();
TestWriter.java,final CsvSchema schema = csvSchemaBuilder.build();,if (csvSchemaBuilder != null ) final CsvSchema schema = csvSchemaBuilder.build();
CsvMapper.java,CsvSchema result = builder.build();,if (builder != null ) CsvSchema result = builder.build();
TestVersions.java,final Version v = vers.version();,if (vers != null ) final Version v = vers.version();
TestParserWithHeader.java,CsvSchema schema = (CsvSchema) parser.getSchema();,if (parser != null ) CsvSchema schema = (CsvSchema) parser.getSchema();
ManualPerfComparison.java,size = bogus.length();,if (bogus != null ) size = bogus.length();
ManualPerfComparison.java,size = bogus.length();,if (bogus != null ) size = bogus.length();
CsvMapper.java,CsvSchema.Builder builder = CsvSchema.builder();,if (CsvSchema != null ) CsvSchema.Builder builder = CsvSchema.builder();
CsvMapper.java,CsvSchema result = builder.build();,if (builder != null ) CsvSchema result = builder.build();
CsvGenerator.java,int len = text.length();,if (text != null ) int len = text.length();
AbstractParser.java,this.commentLineCheck = settings.isCommentLineCheckEnabled();,if (settings != null ) this.commentLineCheck = settings.isCommentLineCheckEnabled();
FixedWidthParser.java,ch = input.nextChar();,if (input != null ) ch = input.nextChar();
FixedWidthParser.java,ch = input.nextChar();,if (input != null ) ch = input.nextChar();
ParserOutput.java,this.headers = NormalizedString.toIdentifierGroupArray(parser.settings.getHeaders());,if (NormalizedString != null ) this.headers = NormalizedString.toIdentifierGroupArray(parser.settings.getHeaders());
AbstractWriter.java,this.headers = settings.getHeaders();,if (settings != null ) this.headers = settings.getHeaders();
ArgumentUtils.java,LinkedHashSet<String> normalized = new LinkedHashSet<String>(strings.size());,if (LinkedHashSet<String>(strings != null ) LinkedHashSet<String> normalized = new LinkedHashSet<String>(strings.size());
ColumnMap.java,String[] headers = context.headers();,if (context != null ) String[] headers = context.headers();
ColumnMap.java,normalizedColumnMap = Collections.emptyMap();,if (Collections != null ) normalizedColumnMap = Collections.emptyMap();
ColumnMap.java,String[] headers = context.headers();,if (context != null ) String[] headers = context.headers();
ParserOutput.java,this.headers = settings.getHeaders();,if (settings != null ) this.headers = settings.getHeaders();
ParserOutput.java,headers = parsedHeaders.clone();,if (parsedHeaders != null ) headers = parsedHeaders.clone();
ParserOutput.java,this.headers = parser.settings.getHeaders();,if (parser != null ) this.headers = parser.settings.getHeaders();
ExcludeFieldNameSelector.java,Set<String> chosenFields = new HashSet<String>(this.get());,if (HashSet<String>(this != null ) Set<String> chosenFields = new HashSet<String>(this.get());
FieldNameSelector.java,List<String> selection = this.get();,if (this != null ) List<String> selection = this.get();
AbstractInputValueSwitch.java,String[] headers = context.headers();,if (context != null ) String[] headers = context.headers();
BeanConversionProcessor.java,String name = mapping.getFieldName();,if (mapping != null ) String name = mapping.getFieldName();
BeanConversionProcessor.java,headers[i] = mapping.getFieldName();,if (mapping != null ) headers[i] = mapping.getFieldName();
RecordMetaDataImpl.java,String[] headers = context.headers();,if (context != null ) String[] headers = context.headers();
RecordMetaDataImpl.java,String[] headers = context.headers();,if (context != null ) String[] headers = context.headers();
CsvParser.java,ignoreTrailingWhitespace = settings.getIgnoreTrailingWhitespaces();,if (settings != null ) ignoreTrailingWhitespace = settings.getIgnoreTrailingWhitespaces();
CsvParser.java,ignoreLeadingWhitespace = settings.getIgnoreLeadingWhitespaces();,if (settings != null ) ignoreLeadingWhitespace = settings.getIgnoreLeadingWhitespaces();
CsvWriter.java,this.ignoreLeading = settings.getIgnoreLeadingWhitespaces();,if (settings != null ) this.ignoreLeading = settings.getIgnoreLeadingWhitespaces();
CsvWriter.java,this.ignoreTrailing = settings.getIgnoreTrailingWhitespaces();,if (settings != null ) this.ignoreTrailing = settings.getIgnoreTrailingWhitespaces();
FixedWidthFields.java,String[] headers = fieldLengths.getFieldNames();,if (fieldLengths != null ) String[] headers = fieldLengths.getFieldNames();
FixedWidthParser.java,ignoreLeadingWhitespace = settings.getIgnoreLeadingWhitespaces();,if (settings != null ) ignoreLeadingWhitespace = settings.getIgnoreLeadingWhitespaces();
FixedWidthParser.java,ignoreTrailingWhitespace = settings.getIgnoreTrailingWhitespaces();,if (settings != null ) ignoreTrailingWhitespace = settings.getIgnoreTrailingWhitespaces();
FixedWidthParserSettings.java,String[] names = fieldLengths.getFieldNames();,if (fieldLengths != null ) String[] names = fieldLengths.getFieldNames();
FixedWidthWriter.java,this.ignoreLeading = settings.getIgnoreLeadingWhitespaces();,if (settings != null ) this.ignoreLeading = settings.getIgnoreLeadingWhitespaces();
FixedWidthWriter.java,this.ignoreTrailing = settings.getIgnoreTrailingWhitespaces();,if (settings != null ) this.ignoreTrailing = settings.getIgnoreTrailingWhitespaces();
FixedWidthWriterSettings.java,String[] names = fieldLengths.getFieldNames();,if (fieldLengths != null ) String[] names = fieldLengths.getFieldNames();
TsvParser.java,ignoreTrailingWhitespace = settings.getIgnoreTrailingWhitespaces();,if (settings != null ) ignoreTrailingWhitespace = settings.getIgnoreTrailingWhitespaces();
TsvParser.java,ignoreLeadingWhitespace = settings.getIgnoreLeadingWhitespaces();,if (settings != null ) ignoreLeadingWhitespace = settings.getIgnoreLeadingWhitespaces();
TsvWriter.java,this.ignoreLeading = settings.getIgnoreLeadingWhitespaces();,if (settings != null ) this.ignoreLeading = settings.getIgnoreLeadingWhitespaces();
TsvWriter.java,this.ignoreTrailing = settings.getIgnoreTrailingWhitespaces();,if (settings != null ) this.ignoreTrailing = settings.getIgnoreTrailingWhitespaces();
BeanConversionProcessor.java,this.columnMapper = (ColumnMapping) columnMapper.clone();,if (columnMapper != null ) this.columnMapper = (ColumnMapping) columnMapper.clone();
MethodDescriptor.java,int result = name.hashCode();,if (name != null ) int result = name.hashCode();
AnnotationHelper.java,Annotation[] annotations = method.getDeclaredAnnotations();,if (method != null ) Annotation[] annotations = method.getDeclaredAnnotations();
Github_287.java,ColumnMapper mapper = processor.getColumnMapper();,if (processor != null ) ColumnMapper mapper = processor.getColumnMapper();
AnnotationHelper.java,languageCode = appender.getAndReset();,if (appender != null ) languageCode = appender.getAndReset();
AnnotationHelper.java,countryCode = appender.getAndReset();,if (appender != null ) countryCode = appender.getAndReset();
AnnotationHelper.java,variant = appender.getAndReset();,if (appender != null ) variant = appender.getAndReset();
Lookup.java,this.lengths = config.getFieldLengths();,if (config != null ) this.lengths = config.getFieldLengths();
CsvWriter.java,this.separator = format.getDelimiter();,if (format != null ) this.separator = format.getDelimiter();
CsvFormatDetector.java,suggestedDelimiter = settings.getFormat().getDelimiter();,if (settings != null ) suggestedDelimiter = settings.getFormat().getDelimiter();
CsvParser.java,delimiter = format.getDelimiter();,if (format != null ) delimiter = format.getDelimiter();
CsvParser.java,newLine = format.getNormalizedNewline();,if (format != null ) newLine = format.getNormalizedNewline();
BeanConversionProcessor.java,AnnotatedParameter[] params = constructorMapping.getAnnotatedParameters();,if (constructorMapping != null ) AnnotatedParameter[] params = constructorMapping.getAnnotatedParameters();
BeanConversionProcessor.java,Iterator<FieldMapping> it = parsedFields.iterator();,if (parsedFields != null ) Iterator<FieldMapping> it = parsedFields.iterator();
BeanConversionProcessor.java,FieldMapping mapping = it.next();,if (it != null ) FieldMapping mapping = it.next();
BeanConversionProcessor.java,instance = beanClass.newInstance();,if (beanClass != null ) instance = beanClass.newInstance();
DataProcessingException.java,String details = super.getDetails();,if (super != null ) String details = super.getDetails();
AbstractRoutines.java,out.rows = context.currentRecord();,if (context != null ) out.rows = context.currentRecord();
AnnotationHelper.java,String element = enumOptions.customElement().trim();,if (enumOptions != null ) String element = enumOptions.customElement().trim();
AnnotationHelper.java,String[] falseStrings = boolString.falseStrings();,if (boolString != null ) String[] falseStrings = boolString.falseStrings();
AnnotationHelper.java,String[] trueStrings = boolString.trueStrings();,if (boolString != null ) String[] trueStrings = boolString.trueStrings();
AnnotationHelper.java,String[] formats = format.formats();,if (format != null ) String[] formats = format.formats();
AnnotationHelper.java,String[] options = format.options();,if (format != null ) String[] options = format.options();
AnnotationHelper.java,String[] args = convert.args();,if (convert != null ) String[] args = convert.args();
AnnotationHelper.java,Class conversionClass = convert.conversionClass();,if (convert != null ) Class conversionClass = convert.conversionClass();
AnnotationHelper.java,Class nestedBeanType = nested.type();,if (nested != null ) Class nestedBeanType = nested.type();
AnnotationHelper.java,String[] args = nested.args();,if (nested != null ) String[] args = nested.args();
AnnotationHelper.java,Class sourceValueType = method.getReturnType();,if (method != null ) Class sourceValueType = method.getReturnType();
FieldMapping.java,index = parsed.index();,if (parsed != null ) index = parsed.index();
FieldMapping.java,String[] fields = parsed.field();,if (parsed != null ) String[] fields = parsed.field();
TransformedHeader.java,index = annotation.index();,if (annotation != null ) index = annotation.index();
BeanConversionProcessor.java,Class nestedType = nested.type();,if (nested != null ) Class nestedType = nested.type();
BeanConversionProcessor.java,String[] args = nested.args();,if (nested != null ) String[] args = nested.args();
FixedWidthFields.java,int length = fw.value();,if (fw != null ) int length = fw.value();
FixedWidthFields.java,int from = fw.from();,if (fw != null ) int from = fw.from();
FixedWidthFields.java,int to = fw.to();,if (fw != null ) int to = fw.to();
ContentCleaner.java,result = out.getAndReset();,if (out != null ) result = out.getAndReset();
AnnotationHelperTest.java,Constructor<AnnotationHelper> c = AnnotationHelper.class.getDeclaredConstructor();,if (AnnotationHelper != null ) Constructor<AnnotationHelper> c = AnnotationHelper.class.getDeclaredConstructor();
BeanConversionProcessor.java,"int index = ArgumentUtils.indexOf(headers, mapping.getFieldName());","if (mapping != null ) int index = ArgumentUtils.indexOf(headers, mapping.getFieldName());"
AbstractParser.java,String[] out = firstRecord.getValues();,if (firstRecord != null ) String[] out = firstRecord.getValues();
CsvParser.java,CsvFormat format = settings.getFormat();,if (settings != null ) CsvFormat format = settings.getFormat();
CsvParser.java,delimiter = format.getDelimiter();,if (format != null ) delimiter = format.getDelimiter();
CsvParser.java,quote = format.getQuote();,if (format != null ) quote = format.getQuote();
CsvParser.java,quoteEscape = format.getQuoteEscape();,if (format != null ) quoteEscape = format.getQuoteEscape();
CsvParser.java,escapeEscape = format.getCharToEscapeQuoteEscaping();,if (format != null ) escapeEscape = format.getCharToEscapeQuoteEscaping();
CsvParser.java,newLine = format.getNormalizedNewline();,if (format != null ) newLine = format.getNormalizedNewline();
CsvFormatDetector.java,suggestedDelimiter = settings.getFormat().getDelimiter();,if (settings != null ) suggestedDelimiter = settings.getFormat().getDelimiter();
ConcurrentCharInputReader.java,CharBucket currentBucket = bucketLoader.nextBucket();,if (bucketLoader != null ) CharBucket currentBucket = bucketLoader.nextBucket();
ConcurrentCharLoader.java,Entry<CharBucket> bucket = instances.allocate();,if (instances != null ) Entry<CharBucket> bucket = instances.allocate();
AnnotationHelper.java,String[] options = format.options();,if (format != null ) String[] options = format.options();
TrimConversion.java,input = input.trim();,if (input != null ) input = input.trim();
ParserOutput.java,headers = parsedHeaders.clone();,if (parsedHeaders != null ) headers = parsedHeaders.clone();
AnnotationHelper.java,Field field = header.getField();,if (header != null ) Field field = header.getField();
AnnotationHelper.java,Class nestedBeanType = nested.type();,if (nested != null ) Class nestedBeanType = nested.type();
AnnotationHelper.java,nestedBeanType = field.getType();,if (field != null ) nestedBeanType = field.getType();
AnnotationHelper.java,String[] args = nested.args();,if (nested != null ) String[] args = nested.args();
AnnotationHelper.java,List<TransformedHeader> nestedFields = nestedReplacements.remove(field.getField());,if (nestedReplacements != null ) List<TransformedHeader> nestedFields = nestedReplacements.remove(field.getField());
FieldMapping.java,typeToSet = field.getType();,if (field != null ) typeToSet = field.getType();
FieldMapping.java,parentClass = field.getDeclaringClass();,if (field != null ) parentClass = field.getDeclaringClass();
FieldMapping.java,name = field.getName();,if (field != null ) name = field.getName();
FieldMapping.java,int result = field.hashCode();,if (field != null ) int result = field.hashCode();
FieldMapping.java,targetType = field.getType();,if (field != null ) targetType = field.getType();
TransformedHeader.java,name = field.getName();,if (field != null ) name = field.getName();
TransformedHeader.java,int index = annotation.index();,if (annotation != null ) int index = annotation.index();
BeanConversionProcessor.java,nestedType = field.getType();,if (field != null ) nestedType = field.getType();
FieldMapping.java,name = parsed.field();,if (parsed != null ) name = parsed.field();
TransformedHeader.java,name = annotation.field();,if (annotation != null ) name = annotation.field();
AnnotationHelper.java,List<TransformedField> nestedFields = nestedReplacements.remove(field.getField());,if (nestedReplacements != null ) List<TransformedField> nestedFields = nestedReplacements.remove(field.getField());
FixedWidthParser.java,lengths = settings.getFieldLengths();,if (settings != null ) lengths = settings.getFieldLengths();
FixedWidthWriter.java,this.fieldLengths = settings.getFieldLengths();,if (settings != null ) this.fieldLengths = settings.getFieldLengths();
RecordMetaDataImpl.java,String[] headers = context.headers();,if (context != null ) String[] headers = context.headers();
RecordMetaDataImpl.java,int[] indexes = context.extractedFieldIndexes();,if (context != null ) int[] indexes = context.extractedFieldIndexes();
RoutineExamples.java,Statement statement = connection.createStatement();,if (connection != null ) Statement statement = connection.createStatement();
CsvParser.java,ch = input.nextChar();,if (input != null ) ch = input.nextChar();
FixedWidthWriter.java,end = value.length();,if (value != null ) end = value.length();
FieldMapping.java,declaringClass = writeMethod.getDeclaringClass();,if (writeMethod != null ) declaringClass = writeMethod.getDeclaringClass();
FieldMapping.java,declaringClass = field.getDeclaringClass();,if (field != null ) declaringClass = field.getDeclaringClass();
AnnotationHelper.java,Set<Field> fields = getAllFields(beanClass).keySet();,if (getAllFields(beanClass) != null ) Set<Field> fields = getAllFields(beanClass).keySet();
AnnotationHelper.java,name = field.getName();,if (field != null ) name = field.getName();
AnnotationHelper.java,name = annotation.field();,if (annotation != null ) name = annotation.field();
CommonParserSettings.java,headersFromBean = headerAnnotation.sequence();,if (headerAnnotation != null ) headersFromBean = headerAnnotation.sequence();
CommonParserSettings.java,extractHeaders = headerAnnotation.extract();,if (headerAnnotation != null ) extractHeaders = headerAnnotation.extract();
CommonWriterSettings.java,headersFromBean = headerAnnotation.sequence();,if (headerAnnotation != null ) headersFromBean = headerAnnotation.sequence();
CommonWriterSettings.java,writeHeaders = headerAnnotation.write();,if (headerAnnotation != null ) writeHeaders = headerAnnotation.write();
AbstractParser.java,input = settings.newCharInputReader();,if (settings != null ) input = settings.newCharInputReader();
FixedWidthParser.java,ch = input.nextChar();,if (input != null ) ch = input.nextChar();
CsvDimensionExample.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
DefaultConversionProcessor.java,String[] contextHeaders = context.headers();,if (context != null ) String[] contextHeaders = context.headers();
DefaultConversionProcessor.java,this.fieldIndexes = context.extractedFieldIndexes();,if (context != null ) this.fieldIndexes = context.extractedFieldIndexes();
DefaultConversionProcessor.java,this.fieldsReordered = context.columnsReordered();,if (context != null ) this.fieldsReordered = context.columnsReordered();
AnnotationHelper.java,Field[] declared = beanClass.getDeclaredFields();,if (beanClass != null ) Field[] declared = beanClass.getDeclaredFields();
AbstractEntityParserSettings.java,String entityName = selection.getEntityName();,if (selection != null ) String entityName = selection.getEntityName();
ConcurrentRowProcessorTest.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
AnnotationHelper.java,Field[] declared = clazz.getDeclaredFields();,if (clazz != null ) Field[] declared = clazz.getDeclaredFields();
AnnotationHelper.java,clazz = clazz.getSuperclass();,if (clazz != null ) clazz = clazz.getSuperclass();
AnnotationHelper.java,Annotation[] declaredAnnotations = annotatedElement.getDeclaredAnnotations();,if (annotatedElement != null ) Annotation[] declaredAnnotations = annotatedElement.getDeclaredAnnotations();
AnnotationHelper.java,Annotation[] declaredAnnotations = annotatedElement.getDeclaredAnnotations();,if (annotatedElement != null ) Annotation[] declaredAnnotations = annotatedElement.getDeclaredAnnotations();
AnnotationHelper.java,Class annType = annotation.annotationType();,if (annotation != null ) Class annType = annotation.annotationType();
AnnotationHelper.java,String element = enumOptions.customElement().trim();,if (enumOptions != null ) String element = enumOptions.customElement().trim();
AnnotationHelper.java,String[] falseStrings = boolString.falseStrings();,if (boolString != null ) String[] falseStrings = boolString.falseStrings();
AnnotationHelper.java,String[] trueStrings = boolString.trueStrings();,if (boolString != null ) String[] trueStrings = boolString.trueStrings();
AnnotationHelper.java,String[] formats = format.formats();,if (format != null ) String[] formats = format.formats();
AnnotationHelper.java,calendarIfNull = Calendar.getInstance();,if (Calendar != null ) calendarIfNull = Calendar.getInstance();
AnnotationHelper.java,String[] options = format.options();,if (format != null ) String[] options = format.options();
AnnotationHelper.java,String[] args = convert.args();,if (convert != null ) String[] args = convert.args();
AnnotationHelper.java,Class conversionClass = convert.conversionClass();,if (convert != null ) Class conversionClass = convert.conversionClass();
AnnotationHelper.java,conversion = Conversions.toBoolean();,if (Conversions != null ) conversion = Conversions.toBoolean();
AnnotationHelper.java,conversion = Conversions.toChar();,if (Conversions != null ) conversion = Conversions.toChar();
AnnotationHelper.java,conversion = Conversions.toByte();,if (Conversions != null ) conversion = Conversions.toByte();
AnnotationHelper.java,conversion = Conversions.toShort();,if (Conversions != null ) conversion = Conversions.toShort();
AnnotationHelper.java,conversion = Conversions.toInteger();,if (Conversions != null ) conversion = Conversions.toInteger();
AnnotationHelper.java,conversion = Conversions.toLong();,if (Conversions != null ) conversion = Conversions.toLong();
AnnotationHelper.java,conversion = Conversions.toFloat();,if (Conversions != null ) conversion = Conversions.toFloat();
AnnotationHelper.java,conversion = Conversions.toDouble();,if (Conversions != null ) conversion = Conversions.toDouble();
AnnotationHelper.java,conversion = Conversions.toBigInteger();,if (Conversions != null ) conversion = Conversions.toBigInteger();
AnnotationHelper.java,conversion = Conversions.toBigDecimal();,if (Conversions != null ) conversion = Conversions.toBigDecimal();
AnnotationHelper.java,String name = property.getName();,if (property != null ) String name = property.getName();
AnnotationHelper.java,value = values.remove(prop.getName());,if (values != null ) value = values.remove(prop.getName());
AnnotationHelper.java,Method writeMethod = property.getWriteMethod();,if (property != null ) Method writeMethod = property.getWriteMethod();
AnnotationHelper.java,Method writeMethod = property.getWriteMethod();,if (property != null ) Method writeMethod = property.getWriteMethod();
AnnotationHelper.java,Field[] declared = beanClass.getDeclaredFields();,if (beanClass != null ) Field[] declared = beanClass.getDeclaredFields();
AnnotationHelper.java,name = field.getName();,if (field != null ) name = field.getName();
AnnotationHelper.java,name = annotation.field();,if (annotation != null ) name = annotation.field();
AnnotationHelper.java,parent = parent.getSuperclass();,if (parent != null ) parent = parent.getSuperclass();
AnnotationHelper.java,String name = property.getName();,if (property != null ) String name = property.getName();
AnnotationHelper.java,Class annType = annotation.annotationType();,if (annotation != null ) Class annType = annotation.annotationType();
AnnotationHelper.java,String element = enumOptions.customElement().trim();,if (enumOptions != null ) String element = enumOptions.customElement().trim();
AnnotationHelper.java,String[] falseStrings = boolString.falseStrings();,if (boolString != null ) String[] falseStrings = boolString.falseStrings();
AnnotationHelper.java,String[] trueStrings = boolString.trueStrings();,if (boolString != null ) String[] trueStrings = boolString.trueStrings();
AnnotationHelper.java,String[] formats = format.formats();,if (format != null ) String[] formats = format.formats();
AnnotationHelper.java,calendarIfNull = Calendar.getInstance();,if (Calendar != null ) calendarIfNull = Calendar.getInstance();
AnnotationHelper.java,String[] options = format.options();,if (format != null ) String[] options = format.options();
AnnotationHelper.java,String[] args = convert.args();,if (convert != null ) String[] args = convert.args();
AnnotationHelper.java,Class conversionClass = convert.conversionClass();,if (convert != null ) Class conversionClass = convert.conversionClass();
AnnotationHelper.java,conversion = Conversions.toBoolean();,if (Conversions != null ) conversion = Conversions.toBoolean();
AnnotationHelper.java,conversion = Conversions.toChar();,if (Conversions != null ) conversion = Conversions.toChar();
AnnotationHelper.java,conversion = Conversions.toByte();,if (Conversions != null ) conversion = Conversions.toByte();
AnnotationHelper.java,conversion = Conversions.toShort();,if (Conversions != null ) conversion = Conversions.toShort();
AnnotationHelper.java,conversion = Conversions.toInteger();,if (Conversions != null ) conversion = Conversions.toInteger();
AnnotationHelper.java,conversion = Conversions.toLong();,if (Conversions != null ) conversion = Conversions.toLong();
AnnotationHelper.java,conversion = Conversions.toFloat();,if (Conversions != null ) conversion = Conversions.toFloat();
AnnotationHelper.java,conversion = Conversions.toDouble();,if (Conversions != null ) conversion = Conversions.toDouble();
AnnotationHelper.java,conversion = Conversions.toBigInteger();,if (Conversions != null ) conversion = Conversions.toBigInteger();
AnnotationHelper.java,conversion = Conversions.toBigDecimal();,if (Conversions != null ) conversion = Conversions.toBigDecimal();
AnnotationHelper.java,String name = property.getName();,if (property != null ) String name = property.getName();
AnnotationHelper.java,value = values.remove(prop.getName());,if (values != null ) value = values.remove(prop.getName());
AnnotationHelper.java,Method writeMethod = property.getWriteMethod();,if (property != null ) Method writeMethod = property.getWriteMethod();
AnnotationHelper.java,Method writeMethod = property.getWriteMethod();,if (property != null ) Method writeMethod = property.getWriteMethod();
AnnotationHelper.java,Field[] declared = beanClass.getDeclaredFields();,if (beanClass != null ) Field[] declared = beanClass.getDeclaredFields();
AnnotationHelper.java,name = field.getName();,if (field != null ) name = field.getName();
AnnotationHelper.java,name = annotation.field();,if (annotation != null ) name = annotation.field();
AnnotationHelper.java,parent = parent.getSuperclass();,if (parent != null ) parent = parent.getSuperclass();
AnnotationHelper.java,String name = property.getName();,if (property != null ) String name = property.getName();
AnnotationHelper.java,Field[] declared = clazz.getDeclaredFields();,if (clazz != null ) Field[] declared = clazz.getDeclaredFields();
AnnotationHelper.java,clazz = clazz.getSuperclass();,if (clazz != null ) clazz = clazz.getSuperclass();
AbstractBeanConversionProcessor.java,Annotation[] annotations = field.getAnnotations();,if (field != null ) Annotation[] annotations = field.getAnnotations();
AbstractParser.java,this.errorHandler = settings.getRowProcessorErrorHandler();,if (settings != null ) this.errorHandler = settings.getRowProcessorErrorHandler();
AbstractWriter.java,conversionProcessor.errorHandler = settings.getRowProcessorErrorHandler();,if (settings != null ) conversionProcessor.errorHandler = settings.getRowProcessorErrorHandler();
AbstractParser.java,this.processor = settings.getRowProcessor();,if (settings != null ) this.processor = settings.getRowProcessor();
BeanListProcessor.java,headers = context.headers();,if (context != null ) headers = context.headers();
InputValueSwitch.java,String[] headers = context.headers();,if (context != null ) String[] headers = context.headers();
MasterDetailListProcessor.java,headers = context.headers();,if (context != null ) headers = context.headers();
MultiBeanListProcessor.java,headers = context.headers();,if (context != null ) headers = context.headers();
MultiBeanRowProcessor.java,record = context.currentRecord();,if (context != null ) record = context.currentRecord();
ObjectRowListProcessor.java,this.headers = context.headers();,if (context != null ) this.headers = context.headers();
RowListProcessor.java,headers = context.headers();,if (context != null ) headers = context.headers();
DefaultParsingContext.java,extractedIndexes = output.getSelectedIndexes();,if (output != null ) extractedIndexes = output.getSelectedIndexes();
DefaultParsingContext.java,columnMap = Collections.emptyMap();,if (Collections != null ) columnMap = Collections.emptyMap();
DefaultParsingContext.java,normalizedColumnMap = Collections.emptyMap();,if (Collections != null ) normalizedColumnMap = Collections.emptyMap();
DefaultParsingContext.java,lastOrdinal = constants[i].ordinal();,if (constants[i] != null ) lastOrdinal = constants[i].ordinal();
DefaultParsingContext.java,FieldSelector selector = parser.settings.getFieldSelector();,if (parser != null ) FieldSelector selector = parser.settings.getFieldSelector();
DefaultParsingContext.java,String name = constant.toString();,if (constant != null ) String name = constant.toString();
ParserOutput.java,this.appender = settings.newCharAppender();,if (settings != null ) this.appender = settings.newCharAppender();
ParserOutput.java,this.appender = settings.newCharAppender();,if (settings != null ) this.appender = settings.newCharAppender();
AbstractParser.java,lastComment = input.readComment();,if (input != null ) lastComment = input.readComment();
CsvParser.java,"ch = input.appendUntilDelimiter(ch, NoopCharAppender.getInstance());","if (NoopCharAppender != null ) ch = input.appendUntilDelimiter(ch, NoopCharAppender.getInstance());"
FixedWidthParser.java,ch = input.nextChar();,if (input != null ) ch = input.nextChar();
FixedWidthParser.java,ch = input.nextChar();,if (input != null ) ch = input.nextChar();
FixedWidthParser.java,ch = input.nextChar();,if (input != null ) ch = input.nextChar();
FixedWidthParser.java,ch = input.nextChar();,if (input != null ) ch = input.nextChar();
AbstractParser.java,row = output.rowParsed();,if (output != null ) row = output.rowParsed();
AbstractParser.java,row = output.rowParsed();,if (output != null ) row = output.rowParsed();
CsvParser.java,ch = input.nextChar();,if (input != null ) ch = input.nextChar();
CsvParser.java,ch = input.nextChar();,if (input != null ) ch = input.nextChar();
TsvParser.java,ch = input.nextChar();,if (input != null ) ch = input.nextChar();
TsvParser.java,ch = input.nextChar();,if (input != null ) ch = input.nextChar();
TsvParser.java,ch = input.nextChar();,if (input != null ) ch = input.nextChar();
TsvParser.java,ch = input.nextChar();,if (input != null ) ch = input.nextChar();
WriterCharAppender.java,final int length = string.length();,if (string != null ) final int length = string.length();
WriterCharAppender.java,final int length = string.length();,if (string != null ) final int length = string.length();
CsvWriter.java,final int length = nextElement.length();,if (nextElement != null ) final int length = nextElement.length();
CsvParser.java,ch = input.nextChar();,if (input != null ) ch = input.nextChar();
CsvParser.java,ch = input.nextChar();,if (input != null ) ch = input.nextChar();
CsvParser.java,ch = input.nextChar();,if (input != null ) ch = input.nextChar();
CsvParser.java,ch = input.nextChar();,if (input != null ) ch = input.nextChar();
CsvParser.java,ch = input.nextChar();,if (input != null ) ch = input.nextChar();
CsvParser.java,ch = input.nextChar();,if (input != null ) ch = input.nextChar();
TsvParser.java,ch = input.nextChar();,if (input != null ) ch = input.nextChar();
TsvParser.java,ch = input.nextChar();,if (input != null ) ch = input.nextChar();
TsvParser.java,ch = input.nextChar();,if (input != null ) ch = input.nextChar();
CsvParser.java,ch = input.nextChar();,if (input != null ) ch = input.nextChar();
RoutineExamples.java,Statement statement = connection.createStatement();,if (connection != null ) Statement statement = connection.createStatement();
FixedWidthFieldLengths.java,String fieldName = entry.getKey();,if (entry != null ) String fieldName = entry.getKey();
FixedWidthFieldLengths.java,Integer fieldLength = entry.getValue();,if (entry != null ) Integer fieldLength = entry.getValue();
FixedWidthFieldLengths.java,out[i] = format.getPadding();,if (format != null ) out[i] = format.getPadding();
FixedWidthParser.java,ch = input.nextChar();,if (input != null ) ch = input.nextChar();
FixedWidthParser.java,ch = input.nextChar();,if (input != null ) ch = input.nextChar();
FixedWidthParser.java,ch = input.nextChar();,if (input != null ) ch = input.nextChar();
FixedWidthParser.java,ch = input.nextChar();,if (input != null ) ch = input.nextChar();
AbstractWriter.java,String header = headerMapping.get(e.getKey());,if (headerMapping != null ) String header = headerMapping.get(e.getKey());
AbstractWriter.java,int maxColumns = settings.getMaxColumns();,if (settings != null ) int maxColumns = settings.getMaxColumns();
AbstractWriter.java,this.maxColumns = settings.getMaxColumns();,if (settings != null ) this.maxColumns = settings.getMaxColumns();
BeanWriterProcessor.java,String name = mapping.getFieldName();,if (mapping != null ) String name = mapping.getFieldName();
AbstractRoutines.java,RowWriterProcessor writerProcessor = writerSettings.getRowWriterProcessor();,if (writerSettings != null ) RowWriterProcessor writerProcessor = writerSettings.getRowWriterProcessor();
AbstractRoutines.java,RowProcessor parserProcessor = parserSettings.getRowProcessor();,if (parserSettings != null ) RowProcessor parserProcessor = parserSettings.getRowProcessor();
AbstractRoutines.java,RowProcessor parserProcessor = parserSettings.getRowProcessor();,if (parserSettings != null ) RowProcessor parserProcessor = parserSettings.getRowProcessor();
AbstractRoutines.java,Class parserClass = beanProcessor.getBeanClass();,if (beanProcessor != null ) Class parserClass = beanProcessor.getBeanClass();
RecordMetaDataImpl.java,int[] extractedIndexes = context.extractedFieldIndexes();,if (context != null ) int[] extractedIndexes = context.extractedFieldIndexes();
RecordMetaDataImpl.java,boolean columnsReordered = context.columnsReordered();,if (context != null ) boolean columnsReordered = context.columnsReordered();
RecordMetaDataImpl.java,lastOrdinal = constants[i].ordinal();,if (constants[i] != null ) lastOrdinal = constants[i].ordinal();
RecordMetaDataImpl.java,String name = constant.toString();,if (constant != null ) String name = constant.toString();
BeanConversionProcessor.java,String name = property.getName();,if (property != null ) String name = property.getName();
BeanConversionProcessor.java,Field[] declared = clazz.getDeclaredFields();,if (clazz != null ) Field[] declared = clazz.getDeclaredFields();
BeanConversionProcessor.java,clazz = clazz.getSuperclass();,if (clazz != null ) clazz = clazz.getSuperclass();
ConversionProcessor.java,this.fieldIndexes = context.extractedFieldIndexes();,if (context != null ) this.fieldIndexes = context.extractedFieldIndexes();
ConversionProcessor.java,this.fieldsReordered = context.columnsReordered();,if (context != null ) this.fieldsReordered = context.columnsReordered();
ConversionProcessor.java,Conversion[] conversionSequence = conversionsByType.get(input.getClass());,if (conversionsByType != null ) Conversion[] conversionSequence = conversionsByType.get(input.getClass());
AbstractWriter.java,List<String> out = new ArrayList<String>(rows.size());,if (ArrayList<String>(rows != null ) List<String> out = new ArrayList<String>(rows.size());
AbstractWriter.java,List<String> out = new ArrayList<String>(rows.size());,if (ArrayList<String>(rows != null ) List<String> out = new ArrayList<String>(rows.size());
AbstractWriter.java,String header = headerMapping.get(e.getKey());,if (headerMapping != null ) String header = headerMapping.get(e.getKey());
AbstractWriter.java,keys[length] = rowEntry.getKey();,if (rowEntry != null ) keys[length] = rowEntry.getKey();
FieldNameSelector.java,List<String> var = this.get();,if (this != null ) List<String> var = this.get();
ArgumentUtils.java,HashSet<String> normalized = new HashSet<String>(strings.size());,if (HashSet<String>(strings != null ) HashSet<String> normalized = new HashSet<String>(strings.size());
AnnotationHelper.java,Class fieldType = field.getType();,if (field != null ) Class fieldType = field.getType();
AnnotationHelper.java,Class fieldType = field.getType();,if (field != null ) Class fieldType = field.getType();
RowObjectExample.java,List<Row> rows = rowProcessor.getRows();,if (rowProcessor != null ) List<Row> rows = rowProcessor.getRows();
BeanConversionProcessor.java,componentType = field.getType().getComponentType();,if (field != null ) componentType = field.getType().getComponentType();
BeanConversionProcessor.java,instanceToCreate = field.getType();,if (field != null ) instanceToCreate = field.getType();
BeanConversionProcessor.java,instanceToCreate = nested.instanceOf();,if (nested != null ) instanceToCreate = nested.instanceOf();
BeanConversionProcessor.java,String keyField = nested.keyField().trim();,if (nested != null ) String keyField = nested.keyField().trim();
BeanConversionProcessor.java,keyIndex = nested.keyIndex();,if (nested != null ) keyIndex = nested.keyIndex();
BeanConversionProcessor.java,String identityValue = nested.identityValue().trim();,if (nested != null ) String identityValue = nested.identityValue().trim();
BeanConversionProcessor.java,identityValue = componentType.getSimpleName();,if (componentType != null ) identityValue = componentType.getSimpleName();
BeanConversionProcessor.java,identityValue = instanceToCreate.getSimpleName();,if (instanceToCreate != null ) identityValue = instanceToCreate.getSimpleName();
BeanConversionProcessor.java,identityValue = field.getType().getSimpleName();,if (field != null ) identityValue = field.getType().getSimpleName();
BeanConversionProcessor.java,String identityField = nested.identityField().trim();,if (nested != null ) String identityField = nested.identityField().trim();
BeanConversionProcessor.java,identityIndex = nested.identityIndex();,if (nested != null ) identityIndex = nested.identityIndex();
BeanConversionProcessor.java,tempCollection = (Collection) collectionType.newInstance();,if (collectionType != null ) tempCollection = (Collection) collectionType.newInstance();
BeanConversionProcessor.java,tempMap = (Map) mapType.newInstance();,if (mapType != null ) tempMap = (Map) mapType.newInstance();
BeanConversionProcessor.java,Object candidateParent = nestingPath.peek();,if (nestingPath != null ) Object candidateParent = nestingPath.peek();
Github_13.java,List<Client> rows = clientProcessor.getBeans();,if (clientProcessor != null ) List<Client> rows = clientProcessor.getBeans();
Row.java,this.values = row.clone();,if (row != null ) this.values = row.clone();
RowObjectExample.java,List<Row> rows = rowProcessor.getRowObjects();,if (rowProcessor != null ) List<Row> rows = rowProcessor.getRowObjects();
CsvParser.java,dontEscapeUnquotedValues = !settings.isEscapeUnquotedValues();,if (!settings != null ) dontEscapeUnquotedValues = !settings.isEscapeUnquotedValues();
CsvWriter.java,this.quotechar = format.getQuote();,if (format != null ) this.quotechar = format.getQuote();
CsvWriter.java,this.escapechar = format.getQuoteEscape();,if (format != null ) this.escapechar = format.getQuoteEscape();
FieldMapping.java,index = parsed.index();,if (parsed != null ) index = parsed.index();
FieldMapping.java,String name = parsed.field();,if (parsed != null ) String name = parsed.field();
AbstractParser.java,this.rowSpecificProcessors = settings.getRowSpecificProcessors();,if (settings != null ) this.rowSpecificProcessors = settings.getRowSpecificProcessors();
CsvFormatDetector.java,char nl = settings.getFormat().getNormalizedNewline();,if (settings != null ) char nl = settings.getFormat().getNormalizedNewline();
AbstractWriter.java,this.isHeaderWritingEnabled = settings.isHeaderWritingEnabled();,if (settings != null ) this.isHeaderWritingEnabled = settings.isHeaderWritingEnabled();
AbstractWriter.java,conversionProcessor.errorHandler = settings.getRowProcessorErrorHandler();,if (settings != null ) conversionProcessor.errorHandler = settings.getRowProcessorErrorHandler();
CsvParser.java,escapeUnquotedValues = settings.isEscapeUnquotedValues();,if (settings != null ) escapeUnquotedValues = settings.isEscapeUnquotedValues();
BeanConversionProcessor.java,Field[] declared = beanClass.getDeclaredFields();,if (beanClass != null ) Field[] declared = beanClass.getDeclaredFields();
TextParsingException.java,this.lineIndex = context.currentLine();,if (context != null ) this.lineIndex = context.currentLine();
TextParsingException.java,this.charIndex = context.currentChar();,if (context != null ) this.charIndex = context.currentChar();
TextParsingException.java,this.content = context.currentParsedContent();,if (context != null ) this.content = context.currentParsedContent();
TextParsingException.java,String msg = super.getMessage();,if (super != null ) String msg = super.getMessage();
TextWritingException.java,String msg = super.getMessage();,if (super != null ) String msg = super.getMessage();
AbstractParser.java,ch = input.nextChar();,if (input != null ) ch = input.nextChar();
AbstractParser.java,String[] row = output.rowParsed();,if (output != null ) String[] row = output.rowParsed();
AnnotationHelper.java,String[] falseStrings = addNull(boolString.falseStrings());,if (addNull(boolString != null ) String[] falseStrings = addNull(boolString.falseStrings());
AnnotationHelper.java,String[] trueStrings = addNull(boolString.trueStrings());,if (addNull(boolString != null ) String[] trueStrings = addNull(boolString.trueStrings());
ConcurrentCharInputReader.java,currentBucket = bucketLoader.nextBucket();,if (bucketLoader != null ) currentBucket = bucketLoader.nextBucket();
AbstractParser.java,this.input = settings.newCharInputReader();,if (settings != null ) this.input = settings.newCharInputReader();
Example.java,StackTraceElement[] stack = Thread.currentThread().getStackTrace();,if (Thread != null ) StackTraceElement[] stack = Thread.currentThread().getStackTrace();
Example.java,String className = element.getClassName();,if (element != null ) String className = element.getClassName();
Example.java,String method = element.getMethodName();,if (element != null ) String method = element.getMethodName();
ColumnSplitter.java,long records = context.currentRecord();,if (context != null ) long records = context.currentRecord();
CsvParser.java,ch = input.nextChar();,if (input != null ) ch = input.nextChar();
CsvParser.java,ch = input.nextChar();,if (input != null ) ch = input.nextChar();
AbstractParser.java,String[] row = output.rowParsed();,if (output != null ) String[] row = output.rowParsed();
AbstractParser.java,String[] row = output.rowParsed();,if (output != null ) String[] row = output.rowParsed();
AbstractParser.java,String[] row = output.rowParsed();,if (output != null ) String[] row = output.rowParsed();
AbstractParser.java,ch = input.nextChar();,if (input != null ) ch = input.nextChar();
AbstractParser.java,String[] row = output.rowParsed();,if (output != null ) String[] row = output.rowParsed();
AbstractParser.java,String[] row = output.rowParsed();,if (output != null ) String[] row = output.rowParsed();
AbstractParser.java,ch = input.nextChar();,if (input != null ) ch = input.nextChar();
AbstractParser.java,String[] row = output.rowParsed();,if (output != null ) String[] row = output.rowParsed();
DocumentationBuilder.java,classEnd = content.length();,if (content != null ) classEnd = content.length();
DocumentationBuilder.java,path = path.trim();,if (path != null ) path = path.trim();
DocumentationBuilder.java,ClassLoader classLoader = DocumentationBuilder.class.getClassLoader();,if (DocumentationBuilder != null ) ClassLoader classLoader = DocumentationBuilder.class.getClassLoader();
DocumentationBuilder.java,StringBuilder out = new StringBuilder(content.length());,if (StringBuilder(content != null ) StringBuilder out = new StringBuilder(content.length());
DocumentationBuilder.java,startIndex += LINK.length();,if (LINK != null ) startIndex += LINK.length();
DocumentationBuilder.java,String absolutePath = fileInDir.getAbsolutePath();,if (fileInDir != null ) String absolutePath = fileInDir.getAbsolutePath();
DocumentationBuilder.java,int rows = Integer.parseInt(rowsToRead.trim());,if (Integer != null ) int rows = Integer.parseInt(rowsToRead.trim());
BigArrayImpl.java,long currentIndex = this.arrayHeadIndex.get();,if (this != null ) long currentIndex = this.arrayHeadIndex.get();
BigArrayImpl.java,return nextIndex == this.arrayTailIndex.get();,if (this != null ) return nextIndex == this.arrayTailIndex.get();
BigArrayImpl.java,long dataPageIndex = indexItemBuffer.getLong();,if (indexItemBuffer != null ) long dataPageIndex = indexItemBuffer.getLong();
BigQueueImpl.java,dequeueFuture = SettableFuture.create();,if (SettableFuture != null ) dequeueFuture = SettableFuture.create();
BigQueueImpl.java,peekFuture = SettableFuture.create();,if (SettableFuture != null ) peekFuture = SettableFuture.create();
BigQueueUnitTest.java,ListenableFuture<IBigQueue> future = bigQueue.queueReadyForDequeue();,if (bigQueue != null ) ListenableFuture<IBigQueue> future = bigQueue.queueReadyForDequeue();
BigQueueUnitTest.java,ListenableFuture<IBigQueue> future = bigQueue.queueReadyForDequeue();,if (bigQueue != null ) ListenableFuture<IBigQueue> future = bigQueue.queueReadyForDequeue();
BigQueueUnitTest.java,ListenableFuture<IBigQueue> future = bigQueue.queueReadyForDequeue();,if (bigQueue != null ) ListenableFuture<IBigQueue> future = bigQueue.queueReadyForDequeue();
BigQueueUnitTest.java,future = bigQueue.queueReadyForDequeue();,if (bigQueue != null ) future = bigQueue.queueReadyForDequeue();
BigQueueUnitTest.java,ListenableFuture<IBigQueue> future = bigQueue.queueReadyForDequeue();,if (bigQueue != null ) ListenableFuture<IBigQueue> future = bigQueue.queueReadyForDequeue();
BigQueueUnitTest.java,ListenableFuture<IBigQueue> future = bigQueue.queueReadyForDequeue();,if (bigQueue != null ) ListenableFuture<IBigQueue> future = bigQueue.queueReadyForDequeue();
BigQueueUnitTest.java,ListenableFuture<IBigQueue> future = bigQueue.queueReadyForDequeue();,if (bigQueue != null ) ListenableFuture<IBigQueue> future = bigQueue.queueReadyForDequeue();
BigQueueUnitTest.java,future = bigQueue.queueReadyForDequeue();,if (bigQueue != null ) future = bigQueue.queueReadyForDequeue();
BigQueueUnitTest.java,ListenableFuture<IBigQueue> future = spyBigQueue.queueReadyForDequeue();,if (spyBigQueue != null ) ListenableFuture<IBigQueue> future = spyBigQueue.queueReadyForDequeue();
BigQueueImpl.java,dequeueFuture = SettableFuture.create();,if (SettableFuture != null ) dequeueFuture = SettableFuture.create();
BigQueueImpl.java,dequeueFuture = SettableFuture.create();,if (SettableFuture != null ) dequeueFuture = SettableFuture.create();
BigQueueImpl.java,dequeueFuture = SettableFuture.create();,if (SettableFuture != null ) dequeueFuture = SettableFuture.create();
BigQueueImpl.java,long front = queueFrontIndexBuffer.getLong();,if (queueFrontIndexBuffer != null ) long front = queueFrontIndexBuffer.getLong();
BigQueueImpl.java,queueFrontIndex = this.queueFrontIndex.get();,if (this != null ) queueFrontIndex = this.queueFrontIndex.get();
BigQueueImpl.java,long beforeIndex = this.queueFrontIndex.get();,if (this != null ) long beforeIndex = this.queueFrontIndex.get();
BigQueueImpl.java,long qFront = this.queueFrontIndex.get();,if (this != null ) long qFront = this.queueFrontIndex.get();
BigQueueImpl.java,long qRear = this.innerArray.getHeadIndex();,if (this != null ) long qRear = this.innerArray.getHeadIndex();
BigQueueImpl.java,long index = this.queueFrontIndex.get();,if (this != null ) long index = this.queueFrontIndex.get();
FanOutQueueImpl.java,byte[] data = innerArray.get(qf.index.get());,if (innerArray != null ) byte[] data = innerArray.get(qf.index.get());
FanOutQueueImpl.java,byte[] data = innerArray.get(qf.index.get());,if (innerArray != null ) byte[] data = innerArray.get(qf.index.get());
FanOutQueueImpl.java,long qFront = qf.index.get();,if (qf != null ) long qFront = qf.index.get();
FanOutQueueImpl.java,long qRear = innerArray.getHeadIndex();,if (innerArray != null ) long qRear = innerArray.getHeadIndex();
FanOutQueueTest.java,long begin = System.currentTimeMillis();,if (System != null ) long begin = System.currentTimeMillis();
BigArrayImpl.java,long tailIndex = this.arrayTailIndex.get();,if (this != null ) long tailIndex = this.arrayTailIndex.get();
BigArrayImpl.java,long headIndex = this.arrayHeadIndex.get();,if (this != null ) long headIndex = this.arrayHeadIndex.get();
BigArrayUnitTest.java,long begin = System.currentTimeMillis();,if (System != null ) long begin = System.currentTimeMillis();
BigArrayUnitTest.java,long end = System.currentTimeMillis();,if (System != null ) long end = System.currentTimeMillis();
BigQueueServiceImpl.java,data = bigQueue.dequeue();,if (bigQueue != null ) data = bigQueue.dequeue();
BigQueueServiceImpl.java,data = bigQueue.peek();,if (bigQueue != null ) data = bigQueue.peek();
BigQueueClientDemo.java,QueueResponse resp = client.peek();,if (client != null ) QueueResponse resp = client.peek();
BigQueueClientDemo.java,resp = client.dequeue();,if (client != null ) resp = client.dequeue();
BigQueueServiceImpl.java,data = bigQueue.dequeue();,if (bigQueue != null ) data = bigQueue.dequeue();
BigQueueServiceImpl.java,data = bigQueue.peek();,if (bigQueue != null ) data = bigQueue.peek();
HyperMinHashSerDe.java,registers[i] = inputBuffer.getLong();,if (inputBuffer != null ) registers[i] = inputBuffer.getLong();
BetaMinHashWritable.java,registers[i] = dataInput.readShort();,if (dataInput != null ) registers[i] = dataInput.readShort();
TestBetaMinHash.java,long exact = unique.size();,if (unique != null ) long exact = unique.size();
TestBetaMinHash.java,long res = sk.cardinality();,if (sk != null ) long res = sk.cardinality();
TestBetaMinHash.java,long exact = unique.size();,if (unique != null ) long exact = unique.size();
TestBetaMinHash.java,long res = msk.cardinality();,if (msk != null ) long res = msk.cardinality();
TestBetaMinHash.java,long res = sk.cardinality();,if (sk != null ) long res = sk.cardinality();
DemoBetaMinHash.java,int c = ai.incrementAndGet();,if (ai != null ) int c = ai.incrementAndGet();
TreePMap.java,final K key = entry.getKey();,if (entry != null ) final K key = entry.getKey();
TreePMap.java,final V value = entry.getValue();,if (entry != null ) final V value = entry.getValue();
Benchmarks.java,ConsPStack list = ConsPStack.empty();,if (ConsPStack != null ) ConsPStack list = ConsPStack.empty();
Benchmarks.java,TreePVector vector = TreePVector.empty();,if (TreePVector != null ) TreePVector vector = TreePVector.empty();
Benchmarks.java,PMap map = HashTreePMap.empty();,if (HashTreePMap != null ) PMap map = HashTreePMap.empty();
Benchmarks.java,PMap map = IntTreePMap.empty();,if (IntTreePMap != null ) PMap map = IntTreePMap.empty();
AmortizedPQueue.java,E e = queue.peek();,if (queue != null ) E e = queue.peek();
AmortizedPQueue.java,queue = queue.minus();,if (queue != null ) queue = queue.minus();
AmortizedPQueue.java,int fsize = front.size();,if (front != null ) int fsize = front.size();
AmortizedPQueue.java,int i = queue.peek();,if (queue != null ) int i = queue.peek();
AmortizedPQueue.java,queue = queue.minus();,if (queue != null ) queue = queue.minus();
HashPMap.java,if(entries==null) return ConsPStack.empty();,if (ConsPStack != null ) if(entries==null) return ConsPStack.empty();
MapPBag.java,e = entry.getKey();,if (entry != null ) e = entry.getKey();
MapPBag.java,n = entry.getValue();,if (entry != null ) n = entry.getValue();
ConsPStackTest.java,PStack<Integer> pstack = ConsPStack.empty();,if (ConsPStack != null ) PStack<Integer> pstack = ConsPStack.empty();
ConsPStackTest.java,int k = r.nextInt(pstack.size());,if (r != null ) int k = r.nextInt(pstack.size());
ConsPStackTest.java,PStack<Integer> s = ConsPStack.empty();,if (ConsPStack != null ) PStack<Integer> s = ConsPStack.empty();
HashPMapTest.java,int j = r.nextInt(pmap.size());,if (r != null ) int j = r.nextInt(pmap.size());
IntTreePMapTest.java,int j = r.nextInt(pmap.size());,if (r != null ) int j = r.nextInt(pmap.size());
OrderedPSetTest.java,POrderedSet<Integer> s = Empty.orderedSet();,if (Empty != null ) POrderedSet<Integer> s = Empty.orderedSet();
OrderedPSetTest.java,POrderedSet<Integer> s = Empty.orderedSet();,if (Empty != null ) POrderedSet<Integer> s = Empty.orderedSet();
OrderedPSetTest.java,PSet<Integer> s = Empty.set();,if (Empty != null ) PSet<Integer> s = Empty.set();
OrderedPSetTest.java,POrderedSet<Integer> os = Empty.orderedSet();,if (Empty != null ) POrderedSet<Integer> os = Empty.orderedSet();
SerializationTest.java,Object[] deserializedElements = deserializedPQueue.toArray();,if (deserializedPQueue != null ) Object[] deserializedElements = deserializedPQueue.toArray();
SerializationTest.java,Object deserializedObject = objectInputStream.readObject();,if (objectInputStream != null ) Object deserializedObject = objectInputStream.readObject();
TreePVectorTest.java,PVector<Integer> pvec = TreePVector.empty();,if (TreePVector != null ) PVector<Integer> pvec = TreePVector.empty();
TreePVectorTest.java,int k = r.nextInt(pvec.size());,if (r != null ) int k = r.nextInt(pvec.size());
TreePVectorTest.java,PVector<Integer> v = TreePVector.empty();,if (TreePVector != null ) PVector<Integer> v = TreePVector.empty();
UtilityTest.java,PStack<String> stack = ConsPStack.empty();,if (ConsPStack != null ) PStack<String> stack = ConsPStack.empty();
UtilityTest.java,"pseq = pseq.plus(j, r.nextInt());","if (r != null ) pseq = pseq.plus(j, r.nextInt());"
UtilityTest.java,"pseq = pseq.with(j, r.nextInt());","if (r != null ) pseq = pseq.with(j, r.nextInt());"
UtilityTest.java,pseq = pseq.plus(r.nextInt());,if (pseq != null ) pseq = pseq.plus(r.nextInt());
UtilityTest.java,PStack<E> rev = ConsPStack.empty();,if (ConsPStack != null ) PStack<E> rev = ConsPStack.empty();
SimpleImmutableEntry.java,this.key   = entry.getKey();,if (entry != null ) this.key   = entry.getKey();
SimpleImmutableEntry.java,this.value = entry.getValue();,if (entry != null ) this.value = entry.getValue();
Benchmarks.java,PStack consPStack = ConsPStack.empty();,if (ConsPStack != null ) PStack consPStack = ConsPStack.empty();
Benchmarks.java,PVector treePVector = TreePVector.empty();,if (TreePVector != null ) PVector treePVector = TreePVector.empty();
Benchmarks.java,PSet hashTreePSet = HashTreePSet.empty();,if (HashTreePSet != null ) PSet hashTreePSet = HashTreePSet.empty();
Benchmarks.java,PBag hashTreePBag = HashTreePBag.empty();,if (HashTreePBag != null ) PBag hashTreePBag = HashTreePBag.empty();
Benchmarks.java,PMap hashTreePMap = HashTreePMap.empty();,if (HashTreePMap != null ) PMap hashTreePMap = HashTreePMap.empty();
Benchmarks.java,PMap intTreePMap = IntTreePMap.empty();,if (IntTreePMap != null ) PMap intTreePMap = IntTreePMap.empty();
UtilityTest.java,PStack<String> stack = ConsPStack.empty();,if (ConsPStack != null ) PStack<String> stack = ConsPStack.empty();
UtilityTest.java,PStack<E> rev = ConsPStack.empty();,if (ConsPStack != null ) PStack<E> rev = ConsPStack.empty();
ConsPStack.java,"hashCode = super.hashCode(); // AbstractList.hashCode(), uses iterator()","if (iterator() != null ) hashCode = super.hashCode(); // AbstractList.hashCode(), uses iterator()"
HashPMap.java,hash += entry.hashCode();,if (entry != null ) hash += entry.hashCode();
IntTreePMap.java,"hashCode = super.hashCode(); // AbstractMap.hashCode(), uses entrySet()","if (entrySet() != null ) hashCode = super.hashCode(); // AbstractMap.hashCode(), uses entrySet()"
TreePVector.java,"hashCode = super.hashCode(); // AbstractList.hashCode(), uses iterator()","if (iterator() != null ) hashCode = super.hashCode(); // AbstractList.hashCode(), uses iterator()"
TreePMap.java,final K key = entry.getKey();,if (entry != null ) final K key = entry.getKey();
TreePMap.java,final V value = entry.getValue();,if (entry != null ) final V value = entry.getValue();
Benchmarks.java,ConsPStack list = ConsPStack.empty();,if (ConsPStack != null ) ConsPStack list = ConsPStack.empty();
Benchmarks.java,TreePVector vector = TreePVector.empty();,if (TreePVector != null ) TreePVector vector = TreePVector.empty();
Benchmarks.java,PMap map = HashTreePMap.empty();,if (HashTreePMap != null ) PMap map = HashTreePMap.empty();
Benchmarks.java,PMap map = IntTreePMap.empty();,if (IntTreePMap != null ) PMap map = IntTreePMap.empty();
AmortizedPQueue.java,E e = queue.peek();,if (queue != null ) E e = queue.peek();
AmortizedPQueue.java,queue = queue.minus();,if (queue != null ) queue = queue.minus();
AmortizedPQueue.java,int fsize = front.size();,if (front != null ) int fsize = front.size();
AmortizedPQueue.java,int i = queue.peek();,if (queue != null ) int i = queue.peek();
AmortizedPQueue.java,queue = queue.minus();,if (queue != null ) queue = queue.minus();
HashPMap.java,if(entries==null) return ConsPStack.empty();,if (ConsPStack != null ) if(entries==null) return ConsPStack.empty();
MapPBag.java,e = entry.getKey();,if (entry != null ) e = entry.getKey();
MapPBag.java,n = entry.getValue();,if (entry != null ) n = entry.getValue();
ConsPStackTest.java,PStack<Integer> pstack = ConsPStack.empty();,if (ConsPStack != null ) PStack<Integer> pstack = ConsPStack.empty();
ConsPStackTest.java,int k = r.nextInt(pstack.size());,if (r != null ) int k = r.nextInt(pstack.size());
ConsPStackTest.java,PStack<Integer> s = ConsPStack.empty();,if (ConsPStack != null ) PStack<Integer> s = ConsPStack.empty();
HashPMapTest.java,int j = r.nextInt(pmap.size());,if (r != null ) int j = r.nextInt(pmap.size());
IntTreePMapTest.java,int j = r.nextInt(pmap.size());,if (r != null ) int j = r.nextInt(pmap.size());
OrderedPSetTest.java,POrderedSet<Integer> s = Empty.orderedSet();,if (Empty != null ) POrderedSet<Integer> s = Empty.orderedSet();
OrderedPSetTest.java,POrderedSet<Integer> s = Empty.orderedSet();,if (Empty != null ) POrderedSet<Integer> s = Empty.orderedSet();
OrderedPSetTest.java,PSet<Integer> s = Empty.set();,if (Empty != null ) PSet<Integer> s = Empty.set();
OrderedPSetTest.java,POrderedSet<Integer> os = Empty.orderedSet();,if (Empty != null ) POrderedSet<Integer> os = Empty.orderedSet();
SerializationTest.java,Object[] deserializedElements = deserializedPQueue.toArray();,if (deserializedPQueue != null ) Object[] deserializedElements = deserializedPQueue.toArray();
SerializationTest.java,Object deserializedObject = objectInputStream.readObject();,if (objectInputStream != null ) Object deserializedObject = objectInputStream.readObject();
TreePVectorTest.java,PVector<Integer> pvec = TreePVector.empty();,if (TreePVector != null ) PVector<Integer> pvec = TreePVector.empty();
TreePVectorTest.java,int k = r.nextInt(pvec.size());,if (r != null ) int k = r.nextInt(pvec.size());
TreePVectorTest.java,PVector<Integer> v = TreePVector.empty();,if (TreePVector != null ) PVector<Integer> v = TreePVector.empty();
UtilityTest.java,PStack<String> stack = ConsPStack.empty();,if (ConsPStack != null ) PStack<String> stack = ConsPStack.empty();
UtilityTest.java,"pseq = pseq.plus(j, r.nextInt());","if (r != null ) pseq = pseq.plus(j, r.nextInt());"
UtilityTest.java,"pseq = pseq.with(j, r.nextInt());","if (r != null ) pseq = pseq.with(j, r.nextInt());"
UtilityTest.java,pseq = pseq.plus(r.nextInt());,if (pseq != null ) pseq = pseq.plus(r.nextInt());
UtilityTest.java,PStack<E> rev = ConsPStack.empty();,if (ConsPStack != null ) PStack<E> rev = ConsPStack.empty();
SimpleImmutableEntry.java,this.key   = entry.getKey();,if (entry != null ) this.key   = entry.getKey();
SimpleImmutableEntry.java,this.value = entry.getValue();,if (entry != null ) this.value = entry.getValue();
Benchmarks.java,PStack consPStack = ConsPStack.empty();,if (ConsPStack != null ) PStack consPStack = ConsPStack.empty();
Benchmarks.java,PVector treePVector = TreePVector.empty();,if (TreePVector != null ) PVector treePVector = TreePVector.empty();
Benchmarks.java,PSet hashTreePSet = HashTreePSet.empty();,if (HashTreePSet != null ) PSet hashTreePSet = HashTreePSet.empty();
Benchmarks.java,PBag hashTreePBag = HashTreePBag.empty();,if (HashTreePBag != null ) PBag hashTreePBag = HashTreePBag.empty();
Benchmarks.java,PMap hashTreePMap = HashTreePMap.empty();,if (HashTreePMap != null ) PMap hashTreePMap = HashTreePMap.empty();
Benchmarks.java,PMap intTreePMap = IntTreePMap.empty();,if (IntTreePMap != null ) PMap intTreePMap = IntTreePMap.empty();
UtilityTest.java,PStack<String> stack = ConsPStack.empty();,if (ConsPStack != null ) PStack<String> stack = ConsPStack.empty();
UtilityTest.java,PStack<E> rev = ConsPStack.empty();,if (ConsPStack != null ) PStack<E> rev = ConsPStack.empty();
ConsPStack.java,"hashCode = super.hashCode(); // AbstractList.hashCode(), uses iterator()","if (iterator() != null ) hashCode = super.hashCode(); // AbstractList.hashCode(), uses iterator()"
HashPMap.java,hash += entry.hashCode();,if (entry != null ) hash += entry.hashCode();
IntTreePMap.java,"hashCode = super.hashCode(); // AbstractMap.hashCode(), uses entrySet()","if (entrySet() != null ) hashCode = super.hashCode(); // AbstractMap.hashCode(), uses entrySet()"
TreePVector.java,"hashCode = super.hashCode(); // AbstractList.hashCode(), uses iterator()","if (iterator() != null ) hashCode = super.hashCode(); // AbstractList.hashCode(), uses iterator()"
ProtoCaliperBenchmark.java,ExtensionRegistry extensions = ExtensionRegistry.newInstance();,if (ExtensionRegistry != null ) ExtensionRegistry extensions = ExtensionRegistry.newInstance();
ProtoCaliperBenchmark.java,ExtensionRegistry extensions = ExtensionRegistry.newInstance();,if (ExtensionRegistry != null ) ExtensionRegistry extensions = ExtensionRegistry.newInstance();
ProtoCaliperBenchmark.java,defaultMessage = benchmarkMessageType.getDefaultInstance();,if (benchmarkMessageType != null ) defaultMessage = benchmarkMessageType.getDefaultInstance();
ProtoCaliperBenchmark.java,extensions = benchmarkMessageType.getExtensionRegistry();,if (benchmarkMessageType != null ) extensions = benchmarkMessageType.getExtensionRegistry();
ProtoCaliperBenchmark.java,byte[] singleInputData = benchmarkDataset.getPayload(i).toByteArray();,if (benchmarkDataset != null ) byte[] singleInputData = benchmarkDataset.getPayload(i).toByteArray();
ProtoCaliperBenchmark.java,ExtensionRegistry extensions = ExtensionRegistry.newInstance();,if (ExtensionRegistry != null ) ExtensionRegistry extensions = ExtensionRegistry.newInstance();
ProtoCaliperBenchmark.java,ExtensionRegistry extensions = ExtensionRegistry.newInstance();,if (ExtensionRegistry != null ) ExtensionRegistry extensions = ExtensionRegistry.newInstance();
ProtoCaliperBenchmark.java,defaultMessage = benchmarkMessageType.getDefaultInstance();,if (benchmarkMessageType != null ) defaultMessage = benchmarkMessageType.getDefaultInstance();
ProtoCaliperBenchmark.java,extensions = benchmarkMessageType.getExtensionRegistry();,if (benchmarkMessageType != null ) extensions = benchmarkMessageType.getExtensionRegistry();
ProtoCaliperBenchmark.java,byte[] singleInputData = benchmarkDataset.getPayload(i).toByteArray();,if (benchmarkDataset != null ) byte[] singleInputData = benchmarkDataset.getPayload(i).toByteArray();
RubyDescriptor.java,"RubyClass klass = RubyClass.newClass(runtime, runtime.getObject());","if (runtime != null ) RubyClass klass = RubyClass.newClass(runtime, runtime.getObject());"
RubyDescriptorPool.java,byte[] bin = data.convertToString().getBytes();,if (data != null ) byte[] bin = data.convertToString().getBytes();
RubyDescriptorPool.java,String packageName = fd.getPackage();,if (fd != null ) String packageName = fd.getPackage();
RubyDescriptorPool.java,String fullName = parentPath + descriptor.getName();,if (descriptor != null ) String fullName = parentPath + descriptor.getName();
RubyEnumDescriptor.java,enumValue = descriptor.findValueByName(value.asJavaString());,if (descriptor != null ) enumValue = descriptor.findValueByName(value.asJavaString());
RubyEnumDescriptor.java,EnumValueDescriptor value = descriptor.findValueByName(name.asJavaString());,if (descriptor != null ) EnumValueDescriptor value = descriptor.findValueByName(name.asJavaString());
RubyEnumDescriptor.java,String name = value.getName();,if (value != null ) String name = value.getName();
RubyFieldDescriptor.java,this.name = context.runtime.newString(descriptor.getName());,if (context != null ) this.name = context.runtime.newString(descriptor.getName());
RubyFieldDescriptor.java,FieldDescriptor.Type fdType = descriptor.getType();,if (descriptor != null ) FieldDescriptor.Type fdType = descriptor.getType();
RubyFileDescriptor.java,rfd.fileDescriptor = descriptor.getFile();,if (descriptor != null ) rfd.fileDescriptor = descriptor.getFile();
RubyFileDescriptor.java,String name = fileDescriptor.getName();,if (fileDescriptor != null ) String name = fileDescriptor.getName();
RubyMap.java,this.valueTypeClass = context.runtime.getNilClass();,if (context != null ) this.valueTypeClass = context.runtime.getNilClass();
RubyMessage.java,OneofDescriptor oneof = fieldDescriptor.getContainingOneof();,if (fieldDescriptor != null ) OneofDescriptor oneof = fieldDescriptor.getContainingOneof();
RubyMessage.java,ThreadContext context = getRuntime().getCurrentContext();,if (getRuntime() != null ) ThreadContext context = getRuntime().getCurrentContext();
RubyMessage.java,String cname = metaClass.getName();,if (metaClass != null ) String cname = metaClass.getName();
RubyMessage.java,OneofDescriptor ood = rubyOneofDescriptor.getDescriptor();,if (rubyOneofDescriptor != null ) OneofDescriptor ood = rubyOneofDescriptor.getDescriptor();
RubyMessage.java,EnumDescriptor enumDescriptor = fieldDescriptor.getEnumType();,if (fieldDescriptor != null ) EnumDescriptor enumDescriptor = fieldDescriptor.getEnumType();
RubyMessage.java,RubyArray retValues = runtime.newArray(values.getLength());,if (runtime != null ) RubyArray retValues = runtime.newArray(values.getLength());
RubyMessage.java,String val = values.eltInternal(i).toString();,if (values != null ) String val = values.eltInternal(i).toString();
RubyMessage.java,byte[] bin = data.convertToString().getBytes();,if (data != null ) byte[] bin = data.convertToString().getBytes();
RubyMessage.java,EnumDescriptor ed = fd.getEnumType();,if (fd != null ) EnumDescriptor ed = fd.getEnumType();
RubyMessage.java,JsonFormat.Printer printer = JsonFormat.printer().omittingInsignificantWhitespace();,if (JsonFormat != null ) JsonFormat.Printer printer = JsonFormat.printer().omittingInsignificantWhitespace();
RubyMessage.java,printer = printer.includingDefaultValueFields();,if (printer != null ) printer = printer.includingDefaultValueFields();
RubyMessage.java,printer = printer.preservingProtoFieldNames();,if (printer != null ) printer = printer.preservingProtoFieldNames();
RubyMessage.java,JsonFormat.Parser parser = JsonFormat.parser();,if (JsonFormat != null ) JsonFormat.Parser parser = JsonFormat.parser();
RubyMessage.java,parser = parser.ignoringUnknownFields();,if (parser != null ) parser = parser.ignoringUnknownFields();
RubyMessage.java,RubyArray ary = value.convertToArray();,if (value != null ) RubyArray ary = value.convertToArray();
RubyMessage.java,OneofDescriptor ood = fieldDescriptor.getContainingOneof();,if (fieldDescriptor != null ) OneofDescriptor ood = fieldDescriptor.getContainingOneof();
RubyMessage.java,String nameStr = fieldName.asJavaString();,if (fieldName != null ) String nameStr = fieldName.asJavaString();
RubyMessage.java,val = value.isTrue();,if (value != null ) val = value.isTrue();
RubyMessage.java,val = value.asJavaString();,if (value != null ) val = value.asJavaString();
RubyMessage.java,EnumDescriptor enumDescriptor = fieldDescriptor.getEnumType();,if (fieldDescriptor != null ) EnumDescriptor enumDescriptor = fieldDescriptor.getEnumType();
RubyMessage.java,val = enumDescriptor.findValueByName(value.asJavaString());,if (enumDescriptor != null ) val = enumDescriptor.findValueByName(value.asJavaString());
RubyMessage.java,IRubyObject typeClass = context.runtime.getNilClass();,if (context != null ) IRubyObject typeClass = context.runtime.getNilClass();
RubyMessage.java,FieldDescriptor.Type type = fieldDescriptor.getType();,if (fieldDescriptor != null ) FieldDescriptor.Type type = fieldDescriptor.getType();
RubyMessage.java,OneofDescriptor oneofDescriptor = fieldDescriptor.getContainingOneof();,if (fieldDescriptor != null ) OneofDescriptor oneofDescriptor = fieldDescriptor.getContainingOneof();
RubyMessage.java,FieldDescriptor.Type fieldType = fieldDescriptor.getType();,if (fieldDescriptor != null ) FieldDescriptor.Type fieldType = fieldDescriptor.getType();
RubyMessage.java,OneofDescriptor oneofDescriptor = fieldDescriptor.getContainingOneof();,if (fieldDescriptor != null ) OneofDescriptor oneofDescriptor = fieldDescriptor.getContainingOneof();
RubyMessage.java,IRubyObject typeClass = context.runtime.getObject();,if (context != null ) IRubyObject typeClass = context.runtime.getObject();
RubyMessage.java,RubyArray arr = value.convertToArray();,if (value != null ) RubyArray arr = value.convertToArray();
RubyMessage.java,FieldDescriptor.Type fieldType = fieldDescriptor.getType();,if (fieldDescriptor != null ) FieldDescriptor.Type fieldType = fieldDescriptor.getType();
RubyOneofDescriptor.java,this.name = context.runtime.newString(descriptor.getName());,if (context != null ) this.name = context.runtime.newString(descriptor.getName());
RubyRepeatedField.java,this.storage = runtime.newArray();,if (runtime != null ) this.storage = runtime.newArray();
RubyRepeatedField.java,this.storage = runtime.newArray();,if (runtime != null ) this.storage = runtime.newArray();
RubyRepeatedField.java,RubyArray arr = ary.convertToArray();,if (ary != null ) RubyArray arr = ary.convertToArray();
RubyRepeatedField.java,beg += this.storage.size();,if (this != null ) beg += this.storage.size();
RubyRepeatedField.java,IRubyObject ret = this.storage.last();,if (this != null ) IRubyObject ret = this.storage.last();
RubyRepeatedField.java,int hashCode = this.storage.hashCode();,if (this != null ) int hashCode = this.storage.hashCode();
RubyRepeatedField.java,SentinelOuterClass.Sentinel sentinel = SentinelOuterClass.Sentinel.getDefaultInstance();,if (SentinelOuterClass != null ) SentinelOuterClass.Sentinel sentinel = SentinelOuterClass.Sentinel.getDefaultInstance();
RubyRepeatedField.java,value = sentinel.getDefaultFloat();,if (sentinel != null ) value = sentinel.getDefaultFloat();
RubyRepeatedField.java,value = sentinel.getDefaultDouble();,if (sentinel != null ) value = sentinel.getDefaultDouble();
RubyRepeatedField.java,value = sentinel.getDefaultBool();,if (sentinel != null ) value = sentinel.getDefaultBool();
RubyRepeatedField.java,value = sentinel.getDefaultBytes();,if (sentinel != null ) value = sentinel.getDefaultBytes();
RubyRepeatedField.java,value = sentinel.getDefaultString();,if (sentinel != null ) value = sentinel.getDefaultString();
RubyRepeatedField.java,int arrSize = this.storage.size();,if (this != null ) int arrSize = this.storage.size();
Utils.java,String className = typeClass.getName();,if (typeClass != null ) String className = typeClass.getName();
Utils.java,IRubyObject wrapped = runtime.newString(value.toString());,if (runtime != null ) IRubyObject wrapped = runtime.newString(value.toString());
RubyDescriptor.java,"RubyClass klass = RubyClass.newClass(runtime, runtime.getObject());","if (runtime != null ) RubyClass klass = RubyClass.newClass(runtime, runtime.getObject());"
RubyDescriptorPool.java,byte[] bin = data.convertToString().getBytes();,if (data != null ) byte[] bin = data.convertToString().getBytes();
RubyDescriptorPool.java,String packageName = fd.getPackage();,if (fd != null ) String packageName = fd.getPackage();
RubyDescriptorPool.java,String fullName = parentPath + descriptor.getName();,if (descriptor != null ) String fullName = parentPath + descriptor.getName();
RubyEnumDescriptor.java,enumValue = descriptor.findValueByName(value.asJavaString());,if (descriptor != null ) enumValue = descriptor.findValueByName(value.asJavaString());
RubyEnumDescriptor.java,EnumValueDescriptor value = descriptor.findValueByName(name.asJavaString());,if (descriptor != null ) EnumValueDescriptor value = descriptor.findValueByName(name.asJavaString());
RubyEnumDescriptor.java,String name = value.getName();,if (value != null ) String name = value.getName();
RubyFieldDescriptor.java,this.name = context.runtime.newString(descriptor.getName());,if (context != null ) this.name = context.runtime.newString(descriptor.getName());
RubyFieldDescriptor.java,FieldDescriptor.Type fdType = descriptor.getType();,if (descriptor != null ) FieldDescriptor.Type fdType = descriptor.getType();
RubyFileDescriptor.java,rfd.fileDescriptor = descriptor.getFile();,if (descriptor != null ) rfd.fileDescriptor = descriptor.getFile();
RubyFileDescriptor.java,String name = fileDescriptor.getName();,if (fileDescriptor != null ) String name = fileDescriptor.getName();
RubyMap.java,this.valueTypeClass = context.runtime.getNilClass();,if (context != null ) this.valueTypeClass = context.runtime.getNilClass();
RubyMessage.java,OneofDescriptor oneof = fieldDescriptor.getContainingOneof();,if (fieldDescriptor != null ) OneofDescriptor oneof = fieldDescriptor.getContainingOneof();
RubyMessage.java,ThreadContext context = getRuntime().getCurrentContext();,if (getRuntime() != null ) ThreadContext context = getRuntime().getCurrentContext();
RubyMessage.java,String cname = metaClass.getName();,if (metaClass != null ) String cname = metaClass.getName();
RubyMessage.java,OneofDescriptor ood = rubyOneofDescriptor.getDescriptor();,if (rubyOneofDescriptor != null ) OneofDescriptor ood = rubyOneofDescriptor.getDescriptor();
RubyMessage.java,EnumDescriptor enumDescriptor = fieldDescriptor.getEnumType();,if (fieldDescriptor != null ) EnumDescriptor enumDescriptor = fieldDescriptor.getEnumType();
RubyMessage.java,RubyArray retValues = runtime.newArray(values.getLength());,if (runtime != null ) RubyArray retValues = runtime.newArray(values.getLength());
RubyMessage.java,String val = values.eltInternal(i).toString();,if (values != null ) String val = values.eltInternal(i).toString();
RubyMessage.java,byte[] bin = data.convertToString().getBytes();,if (data != null ) byte[] bin = data.convertToString().getBytes();
RubyMessage.java,EnumDescriptor ed = fd.getEnumType();,if (fd != null ) EnumDescriptor ed = fd.getEnumType();
RubyMessage.java,JsonFormat.Printer printer = JsonFormat.printer().omittingInsignificantWhitespace();,if (JsonFormat != null ) JsonFormat.Printer printer = JsonFormat.printer().omittingInsignificantWhitespace();
RubyMessage.java,printer = printer.includingDefaultValueFields();,if (printer != null ) printer = printer.includingDefaultValueFields();
RubyMessage.java,printer = printer.preservingProtoFieldNames();,if (printer != null ) printer = printer.preservingProtoFieldNames();
RubyMessage.java,JsonFormat.Parser parser = JsonFormat.parser();,if (JsonFormat != null ) JsonFormat.Parser parser = JsonFormat.parser();
RubyMessage.java,parser = parser.ignoringUnknownFields();,if (parser != null ) parser = parser.ignoringUnknownFields();
RubyMessage.java,RubyArray ary = value.convertToArray();,if (value != null ) RubyArray ary = value.convertToArray();
RubyMessage.java,OneofDescriptor ood = fieldDescriptor.getContainingOneof();,if (fieldDescriptor != null ) OneofDescriptor ood = fieldDescriptor.getContainingOneof();
RubyMessage.java,String nameStr = fieldName.asJavaString();,if (fieldName != null ) String nameStr = fieldName.asJavaString();
RubyMessage.java,val = value.isTrue();,if (value != null ) val = value.isTrue();
RubyMessage.java,val = value.asJavaString();,if (value != null ) val = value.asJavaString();
RubyMessage.java,EnumDescriptor enumDescriptor = fieldDescriptor.getEnumType();,if (fieldDescriptor != null ) EnumDescriptor enumDescriptor = fieldDescriptor.getEnumType();
RubyMessage.java,val = enumDescriptor.findValueByName(value.asJavaString());,if (enumDescriptor != null ) val = enumDescriptor.findValueByName(value.asJavaString());
RubyMessage.java,IRubyObject typeClass = context.runtime.getNilClass();,if (context != null ) IRubyObject typeClass = context.runtime.getNilClass();
RubyMessage.java,FieldDescriptor.Type type = fieldDescriptor.getType();,if (fieldDescriptor != null ) FieldDescriptor.Type type = fieldDescriptor.getType();
RubyMessage.java,OneofDescriptor oneofDescriptor = fieldDescriptor.getContainingOneof();,if (fieldDescriptor != null ) OneofDescriptor oneofDescriptor = fieldDescriptor.getContainingOneof();
RubyMessage.java,FieldDescriptor.Type fieldType = fieldDescriptor.getType();,if (fieldDescriptor != null ) FieldDescriptor.Type fieldType = fieldDescriptor.getType();
RubyMessage.java,OneofDescriptor oneofDescriptor = fieldDescriptor.getContainingOneof();,if (fieldDescriptor != null ) OneofDescriptor oneofDescriptor = fieldDescriptor.getContainingOneof();
RubyMessage.java,IRubyObject typeClass = context.runtime.getObject();,if (context != null ) IRubyObject typeClass = context.runtime.getObject();
RubyMessage.java,RubyArray arr = value.convertToArray();,if (value != null ) RubyArray arr = value.convertToArray();
RubyMessage.java,FieldDescriptor.Type fieldType = fieldDescriptor.getType();,if (fieldDescriptor != null ) FieldDescriptor.Type fieldType = fieldDescriptor.getType();
RubyOneofDescriptor.java,this.name = context.runtime.newString(descriptor.getName());,if (context != null ) this.name = context.runtime.newString(descriptor.getName());
RubyRepeatedField.java,this.storage = runtime.newArray();,if (runtime != null ) this.storage = runtime.newArray();
RubyRepeatedField.java,this.storage = runtime.newArray();,if (runtime != null ) this.storage = runtime.newArray();
RubyRepeatedField.java,RubyArray arr = ary.convertToArray();,if (ary != null ) RubyArray arr = ary.convertToArray();
RubyRepeatedField.java,beg += this.storage.size();,if (this != null ) beg += this.storage.size();
RubyRepeatedField.java,IRubyObject ret = this.storage.last();,if (this != null ) IRubyObject ret = this.storage.last();
RubyRepeatedField.java,int hashCode = this.storage.hashCode();,if (this != null ) int hashCode = this.storage.hashCode();
RubyRepeatedField.java,SentinelOuterClass.Sentinel sentinel = SentinelOuterClass.Sentinel.getDefaultInstance();,if (SentinelOuterClass != null ) SentinelOuterClass.Sentinel sentinel = SentinelOuterClass.Sentinel.getDefaultInstance();
RubyRepeatedField.java,value = sentinel.getDefaultFloat();,if (sentinel != null ) value = sentinel.getDefaultFloat();
RubyRepeatedField.java,value = sentinel.getDefaultDouble();,if (sentinel != null ) value = sentinel.getDefaultDouble();
RubyRepeatedField.java,value = sentinel.getDefaultBool();,if (sentinel != null ) value = sentinel.getDefaultBool();
RubyRepeatedField.java,value = sentinel.getDefaultBytes();,if (sentinel != null ) value = sentinel.getDefaultBytes();
RubyRepeatedField.java,value = sentinel.getDefaultString();,if (sentinel != null ) value = sentinel.getDefaultString();
RubyRepeatedField.java,int arrSize = this.storage.size();,if (this != null ) int arrSize = this.storage.size();
Utils.java,String className = typeClass.getName();,if (typeClass != null ) String className = typeClass.getName();
Utils.java,IRubyObject wrapped = runtime.newString(value.toString());,if (runtime != null ) IRubyObject wrapped = runtime.newString(value.toString());
ServiceTest.java,control = EasyMock.createStrictControl();,if (EasyMock != null ) control = EasyMock.createStrictControl();
ServiceTest.java,FooRequest fooRequest = FooRequest.newBuilder().build();,if (FooRequest != null ) FooRequest fooRequest = FooRequest.newBuilder().build();
ServiceTest.java,BarRequest barRequest = BarRequest.newBuilder().build();,if (BarRequest != null ) BarRequest barRequest = BarRequest.newBuilder().build();
ServiceTest.java,FooRequest fooRequest = FooRequest.newBuilder().build();,if (FooRequest != null ) FooRequest fooRequest = FooRequest.newBuilder().build();
ServiceTest.java,BarRequest barRequest = BarRequest.newBuilder().build();,if (BarRequest != null ) BarRequest barRequest = BarRequest.newBuilder().build();
ServiceTest.java,FooRequest fooRequest = FooRequest.newBuilder().build();,if (FooRequest != null ) FooRequest fooRequest = FooRequest.newBuilder().build();
ServiceTest.java,BarRequest barRequest = BarRequest.newBuilder().build();,if (BarRequest != null ) BarRequest barRequest = BarRequest.newBuilder().build();
ServiceTest.java,FooResponse fooResponse = FooResponse.newBuilder().build();,if (FooResponse != null ) FooResponse fooResponse = FooResponse.newBuilder().build();
ServiceTest.java,BarResponse barResponse = BarResponse.newBuilder().build();,if (BarResponse != null ) BarResponse barResponse = BarResponse.newBuilder().build();
ServiceTest.java,MessageWithNoOuter request = MessageWithNoOuter.getDefaultInstance();,if (MessageWithNoOuter != null ) MessageWithNoOuter request = MessageWithNoOuter.getDefaultInstance();
ServiceTest.java,MessageWithNoOuter request = MessageWithNoOuter.getDefaultInstance();,if (MessageWithNoOuter != null ) MessageWithNoOuter request = MessageWithNoOuter.getDefaultInstance();
DescriptorMessageInfoFactory.java,String camelCase = snakeCaseToCamelCase(desc.getName());,if (snakeCaseToCamelCase(desc != null ) String camelCase = snakeCaseToCamelCase(desc.getName());
Proto3MessageLiteInfoFactory.java,StructuralMessageInfo.Builder builder = StructuralMessageInfo.newBuilder();,if (StructuralMessageInfo != null ) StructuralMessageInfo.Builder builder = StructuralMessageInfo.newBuilder();
Proto2MessageLiteInfoFactory.java,StructuralMessageInfo.Builder builder = StructuralMessageInfo.newBuilder();,if (StructuralMessageInfo != null ) StructuralMessageInfo.Builder builder = StructuralMessageInfo.newBuilder();
UnknownFieldSet.java,lastField = Field.newBuilder();,if (Field != null ) lastField = Field.newBuilder();
UnknownFieldSet.java,fields = Collections.emptyMap();,if (Collections != null ) fields = Collections.emptyMap();
UnknownFieldSet.java,final int tag = input.readTag();,if (input != null ) final int tag = input.readTag();
UnknownFieldSet.java,final CodedInputStream input = data.newCodedInput();,if (data != null ) final CodedInputStream input = data.newCodedInput();
UnknownFieldSet.java,final int firstByte = input.read();,if (input != null ) final int firstByte = input.read();
UnknownFieldSet.java,result.varint = Collections.emptyList();,if (Collections != null ) result.varint = Collections.emptyList();
UnknownFieldSet.java,result.lengthDelimited = Collections.emptyList();,if (Collections != null ) result.lengthDelimited = Collections.emptyList();
UnknownFieldSet.java,result.group = Collections.emptyList();,if (Collections != null ) result.group = Collections.emptyList();
UnknownFieldSet.java,lastField = Field.newBuilder();,if (Field != null ) lastField = Field.newBuilder();
UnknownFieldSet.java,fields = Collections.emptyMap();,if (Collections != null ) fields = Collections.emptyMap();
UnknownFieldSet.java,final int tag = input.readTag();,if (input != null ) final int tag = input.readTag();
UnknownFieldSet.java,final CodedInputStream input = data.newCodedInput();,if (data != null ) final CodedInputStream input = data.newCodedInput();
UnknownFieldSet.java,final int firstByte = input.read();,if (input != null ) final int firstByte = input.read();
UnknownFieldSet.java,result.varint = Collections.emptyList();,if (Collections != null ) result.varint = Collections.emptyList();
UnknownFieldSet.java,result.lengthDelimited = Collections.emptyList();,if (Collections != null ) result.lengthDelimited = Collections.emptyList();
UnknownFieldSet.java,result.group = Collections.emptyList();,if (Collections != null ) result.group = Collections.emptyList();
Utf8Utils.java,strings[i] = sb.toString();,if (sb != null ) strings[i] = sb.toString();
Proto2MessageInfoFactory.java,StructuralMessageInfo.Builder builder = StructuralMessageInfo.newBuilder();,if (StructuralMessageInfo != null ) StructuralMessageInfo.Builder builder = StructuralMessageInfo.newBuilder();
Proto3MessageInfoFactory.java,StructuralMessageInfo.Builder builder = StructuralMessageInfo.newBuilder();,if (StructuralMessageInfo != null ) StructuralMessageInfo.Builder builder = StructuralMessageInfo.newBuilder();
RubyEnumBuilderContext.java,this.builder = this.fileBuilderContext.getNewEnumBuilder();,if (this != null ) this.builder = this.fileBuilderContext.getNewEnumBuilder();
RubyFileBuilderContext.java,this.builder = FileDescriptorProto.newBuilder();,if (FileDescriptorProto != null ) this.builder = FileDescriptorProto.newBuilder();
RubyFileBuilderContext.java,String syntaxStr = syntax.asJavaString();,if (syntax != null ) String syntaxStr = syntax.asJavaString();
RubyFileBuilderContext.java,int packageNameLength = packageName.length();,if (packageName != null ) int packageNameLength = packageName.length();
RubyFileBuilderContext.java,String name = enumBuilder.getName();,if (enumBuilder != null ) String name = enumBuilder.getName();
RubyFileBuilderContext.java,DescriptorProto.Builder messageBuilder = entry.getValue();,if (entry != null ) DescriptorProto.Builder messageBuilder = entry.getValue();
RubyFileBuilderContext.java,String typeName = field.getTypeName();,if (field != null ) String typeName = field.getTypeName();
RubyFileBuilderContext.java,int defaultValue = Integer.parseInt(field.getDefaultValue());,if (Integer != null ) int defaultValue = Integer.parseInt(field.getDefaultValue());
RubyFileBuilderContext.java,String name = messageBuilder.getName();,if (messageBuilder != null ) String name = messageBuilder.getName();
RubyFileBuilderContext.java,String name = message.getName();,if (message != null ) String name = message.getName();
RubyFileBuilderContext.java,int nameLength = name.length();,if (name != null ) int nameLength = name.length();
RubyFileBuilderContext.java,String name = item.getName();,if (item != null ) String name = item.getName();
RubyFileBuilderContext.java,int nameLength = name.length();,if (name != null ) int nameLength = name.length();
RubyMessage.java,String fieldName = fieldDescriptor.getName();,if (fieldDescriptor != null ) String fieldName = fieldDescriptor.getName();
RubyMessageBuilderContext.java,this.builder = this.fileBuilderContext.getNewMessageBuilder();,if (this != null ) this.builder = this.fileBuilderContext.getNewMessageBuilder();
RubyMessageBuilderContext.java,DescriptorProto.Builder mapEntryBuilder = fileBuilderContext.getNewMessageBuilder();,if (fileBuilderContext != null ) DescriptorProto.Builder mapEntryBuilder = fileBuilderContext.getNewMessageBuilder();
Utils.java,FieldDescriptorProto.Builder builder = FieldDescriptorProto.newBuilder();,if (FieldDescriptorProto != null ) FieldDescriptorProto.Builder builder = FieldDescriptorProto.newBuilder();
FieldMaskUtil.java,Message.Builder destination = source.newBuilderForType();,if (source != null ) Message.Builder destination = source.newBuilderForType();
RawMessageInfo.java,char[] infoChars = info.toCharArray();,if (info != null ) char[] infoChars = info.toCharArray();
AbstractMessageTest.java,message = TestOptimizedForSize.parseFrom(message.toByteString());,if (TestOptimizedForSize != null ) message = TestOptimizedForSize.parseFrom(message.toByteString());
AbstractMessageTest.java,TestAllTypes b = TestAllTypes.newBuilder().build();,if (TestAllTypes != null ) TestAllTypes b = TestAllTypes.newBuilder().build();
ExtensionRegistryFactoryTest.java,ClassLoader testClassLoader = ExtensionRegistryFactoryTest.class.getClassLoader();,if (ExtensionRegistryFactoryTest != null ) ClassLoader testClassLoader = ExtensionRegistryFactoryTest.class.getClassLoader();
LazyFieldLiteTest.java,TestAllExtensions emptyMessage = TestAllExtensions.newBuilder().build();,if (TestAllExtensions != null ) TestAllExtensions emptyMessage = TestAllExtensions.newBuilder().build();
LazyMessageLiteTest.java,outer = LazyMessageLite.parseFrom(outer.toByteArray());,if (LazyMessageLite != null ) outer = LazyMessageLite.parseFrom(outer.toByteArray());
MapForProto2Test.java,ByteString data = builder.build().toByteString();,if (builder != null ) ByteString data = builder.build().toByteString();
MapLiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapLiteTest.java,message = TestMap.parseFrom(message.toByteString());,if (TestMap != null ) message = TestMap.parseFrom(message.toByteString());
MapTest.java,message = TestMap.parseFrom(message.toByteString());,if (TestMap != null ) message = TestMap.parseFrom(message.toByteString());
WrappersLiteOfMethodTest.java,assertTrue(true == message.getFieldBool().getValue());,if (message != null ) assertTrue(true == message.getFieldBool().getValue());
WrappersOfMethodTest.java,assertTrue(true == message.getFieldBool().getValue());,if (message != null ) assertTrue(true == message.getFieldBool().getValue());
AbstractMessageTest.java,TestAllTypes message = TestUtil.getAllSet();,if (TestUtil != null ) TestAllTypes message = TestUtil.getAllSet();
AbstractMessageTest.java,Message abstractMessage = new AbstractMessageWrapper(TestUtil.getAllSet());,if (AbstractMessageWrapper(TestUtil != null ) Message abstractMessage = new AbstractMessageWrapper(TestUtil.getAllSet());
AbstractMessageTest.java,Message abstractMessage = new AbstractMessageWrapper(TestUtil.getAllSet());,if (AbstractMessageWrapper(TestUtil != null ) Message abstractMessage = new AbstractMessageWrapper(TestUtil.getAllSet());
AbstractMessageTest.java,TestRequiredForeign.Builder builder = TestRequiredForeign.newBuilder();,if (TestRequiredForeign != null ) TestRequiredForeign.Builder builder = TestRequiredForeign.newBuilder();
AbstractMessageTest.java,ByteString bytes = builder.buildPartial().toByteString();,if (builder != null ) ByteString bytes = builder.buildPartial().toByteString();
AbstractMessageTest.java,message = TestOptimizedForSize.parseFrom(message.toByteString());,if (TestOptimizedForSize != null ) message = TestOptimizedForSize.parseFrom(message.toByteString());
AbstractMessageTest.java,TestRequired.Builder builder = TestRequired.newBuilder();,if (TestRequired != null ) TestRequired.Builder builder = TestRequired.newBuilder();
AbstractMessageTest.java,TestRequiredForeign.Builder builder = TestRequiredForeign.newBuilder();,if (TestRequiredForeign != null ) TestRequiredForeign.Builder builder = TestRequiredForeign.newBuilder();
AbstractMessageTest.java,TestAllTypes a = TestUtil.getAllSet();,if (TestUtil != null ) TestAllTypes a = TestUtil.getAllSet();
AbstractMessageTest.java,TestAllTypes b = TestAllTypes.newBuilder().build();,if (TestAllTypes != null ) TestAllTypes b = TestAllTypes.newBuilder().build();
AbstractMessageTest.java,TestAllExtensions e = TestUtil.getAllExtensionsSet();,if (TestUtil != null ) TestAllExtensions e = TestUtil.getAllExtensionsSet();
AbstractMessageTest.java,DynamicMessage dynamic = DynamicMessage.newBuilder(message).build();,if (DynamicMessage != null ) DynamicMessage dynamic = DynamicMessage.newBuilder(message).build();
ByteStringTest.java,byte[] originalValue = byteString.toByteArray();,if (byteString != null ) byte[] originalValue = byteString.toByteArray();
ByteStringTest.java,byte[] newValue = byteString.toByteArray();,if (byteString != null ) byte[] newValue = byteString.toByteArray();
ByteStringTest.java,ByteString byteString = output.toByteString();,if (output != null ) ByteString byteString = output.toByteString();
ByteStringTest.java,ByteString byteString = output.toByteString();,if (output != null ) ByteString byteString = output.toByteString();
ByteStringTest.java,ByteString byteString = output.toByteString();,if (output != null ) ByteString byteString = output.toByteString();
ByteStringTest.java,ByteString byteString = output.toByteString();,if (output != null ) ByteString byteString = output.toByteString();
ByteStringTest.java,ByteString byteString = ByteString.newOutput().toByteString();,if (ByteString != null ) ByteString byteString = ByteString.newOutput().toByteString();
ByteStringTest.java,ByteString byteString = os.toByteString();,if (os != null ) ByteString byteString = os.toByteString();
ByteStringTest.java,byte[] oldValue = byteString.toByteArray();,if (byteString != null ) byte[] oldValue = byteString.toByteArray();
ByteStringTest.java,byte[] newValue = byteString.toByteArray();,if (byteString != null ) byte[] newValue = byteString.toByteArray();
ByteStringTest.java,byte[] substringBytes = compositeSubstring.toByteArray();,if (compositeSubstring != null ) byte[] substringBytes = compositeSubstring.toByteArray();
ByteStringTest.java,Iterator<ByteString> iter = pieces.iterator();,if (pieces != null ) Iterator<ByteString> iter = pieces.iterator();
ByteStringTest.java,ByteString concatenatedString = iter.next();,if (iter != null ) ByteString concatenatedString = iter.next();
ByteStringTest.java,concatenatedString = concatenatedString.concat(iter.next());,if (concatenatedString != null ) concatenatedString = concatenatedString.concat(iter.next());
CodedInputStreamTest.java,TestAllTypes message = TestUtil.getAllSet();,if (TestUtil != null ) TestAllTypes message = TestUtil.getAllSet();
CodedInputStreamTest.java,byte[] rawBytes = message.toByteArray();,if (message != null ) byte[] rawBytes = message.toByteArray();
CodedInputStreamTest.java,TestAllTypes message = TestUtil.getAllSet();,if (TestUtil != null ) TestAllTypes message = TestUtil.getAllSet();
CodedInputStreamTest.java,byte[] rawBytes = message.toByteArray();,if (message != null ) byte[] rawBytes = message.toByteArray();
CodedInputStreamTest.java,UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();,if (UnknownFieldSet != null ) UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
CodedInputStreamTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
CodedInputStreamTest.java,TestAllTypes message = builder.build();,if (builder != null ) TestAllTypes message = builder.build();
CodedInputStreamTest.java,ByteString.Output rawOutput = ByteString.newOutput();,if (ByteString != null ) ByteString.Output rawOutput = ByteString.newOutput();
CodedInputStreamTest.java,CodedInputStream input = rawOutput.toByteString().newCodedInput();,if (rawOutput != null ) CodedInputStream input = rawOutput.toByteString().newCodedInput();
CodedInputStreamTest.java,ByteString.Output rawOutput = ByteString.newOutput();,if (ByteString != null ) ByteString.Output rawOutput = ByteString.newOutput();
CodedInputStreamTest.java,CodedInputStream input = rawOutput.toByteString().newCodedInput();,if (rawOutput != null ) CodedInputStream input = rawOutput.toByteString().newCodedInput();
CodedInputStreamTest.java,String text = input.readString();,if (input != null ) String text = input.readString();
CodedOutputStreamTest.java,TestAllTypes message = TestUtil.getAllSet();,if (TestUtil != null ) TestAllTypes message = TestUtil.getAllSet();
CodedOutputStreamTest.java,byte[] rawBytes = message.toByteArray();,if (message != null ) byte[] rawBytes = message.toByteArray();
CodedOutputStreamTest.java,TestPackedTypes message = TestUtil.getPackedSet();,if (TestUtil != null ) TestPackedTypes message = TestUtil.getPackedSet();
CodedOutputStreamTest.java,byte[] rawBytes = message.toByteArray();,if (message != null ) byte[] rawBytes = message.toByteArray();
CodedOutputStreamTest.java,byte[] rawBytes = message.toByteArray();,if (message != null ) byte[] rawBytes = message.toByteArray();
DescriptorsTest.java,FieldDescriptorProto.Type protoType = type.toProto();,if (type != null ) FieldDescriptorProto.Type protoType = type.toProto();
DescriptorsTest.java,FileDescriptor file = UnittestProto.getDescriptor();,if (UnittestProto != null ) FileDescriptor file = UnittestProto.getDescriptor();
DescriptorsTest.java,Descriptor messageType = TestAllTypes.getDescriptor();,if (TestAllTypes != null ) Descriptor messageType = TestAllTypes.getDescriptor();
DescriptorsTest.java,EnumDescriptor enumType = ForeignEnum.getDescriptor();,if (ForeignEnum != null ) EnumDescriptor enumType = ForeignEnum.getDescriptor();
DescriptorsTest.java,ServiceDescriptor service = TestService.getDescriptor();,if (TestService != null ) ServiceDescriptor service = TestService.getDescriptor();
DescriptorsTest.java,Descriptor messageType = TestAllTypes.getDescriptor();,if (TestAllTypes != null ) Descriptor messageType = TestAllTypes.getDescriptor();
DescriptorsTest.java,Descriptor nestedType = TestAllTypes.NestedMessage.getDescriptor();,if (TestAllTypes != null ) Descriptor nestedType = TestAllTypes.NestedMessage.getDescriptor();
DescriptorsTest.java,EnumDescriptor enumType = TestAllTypes.NestedEnum.getDescriptor();,if (TestAllTypes != null ) EnumDescriptor enumType = TestAllTypes.NestedEnum.getDescriptor();
DescriptorsTest.java,Descriptor messageType = TestAllTypes.getDescriptor();,if (TestAllTypes != null ) Descriptor messageType = TestAllTypes.getDescriptor();
DescriptorsTest.java,FieldDescriptor nestedExtension = TestRequired.single.getDescriptor();,if (TestRequired != null ) FieldDescriptor nestedExtension = TestRequired.single.getDescriptor();
DescriptorsTest.java,Descriptor d = TestAllTypes.getDescriptor();,if (TestAllTypes != null ) Descriptor d = TestAllTypes.getDescriptor();
DescriptorsTest.java,d = TestExtremeDefaultValues.getDescriptor();,if (TestExtremeDefaultValues != null ) d = TestExtremeDefaultValues.getDescriptor();
DescriptorsTest.java,EnumDescriptor enumType = ForeignEnum.getDescriptor();,if (ForeignEnum != null ) EnumDescriptor enumType = ForeignEnum.getDescriptor();
DescriptorsTest.java,EnumDescriptor nestedType = TestAllTypes.NestedEnum.getDescriptor();,if (TestAllTypes != null ) EnumDescriptor nestedType = TestAllTypes.NestedEnum.getDescriptor();
DescriptorsTest.java,ServiceDescriptor service = TestService.getDescriptor();,if (TestService != null ) ServiceDescriptor service = TestService.getDescriptor();
DescriptorsTest.java,List<Descriptor> msglist = file.getMessageTypes();,if (file != null ) List<Descriptor> msglist = file.getMessageTypes();
DescriptorsTest.java,List<FieldDescriptor> fieldlist = desc.getFields();,if (desc != null ) List<FieldDescriptor> fieldlist = desc.getFields();
DescriptorsTest.java,List<Descriptor> msglist = barFile.getMessageTypes();,if (barFile != null ) List<Descriptor> msglist = barFile.getMessageTypes();
DescriptorsTest.java,List<FieldDescriptor> fieldlist = desc.getFields();,if (desc != null ) List<FieldDescriptor> fieldlist = desc.getFields();
DynamicMessageTest.java,Message message = builder.build();,if (builder != null ) Message message = builder.build();
DynamicMessageTest.java,Message firstMessage = builder.build();,if (builder != null ) Message firstMessage = builder.build();
DynamicMessageTest.java,Message message = builder.build();,if (builder != null ) Message message = builder.build();
DynamicMessageTest.java,message = builder.build();,if (builder != null ) message = builder.build();
DynamicMessageTest.java,Message message = builder.build();,if (builder != null ) Message message = builder.build();
DynamicMessageTest.java,Message.Builder newBuilder = builder.clone();,if (builder != null ) Message.Builder newBuilder = builder.clone();
DynamicMessageTest.java,Message message = builder.build();,if (builder != null ) Message message = builder.build();
DynamicMessageTest.java,Message message = builder.build();,if (builder != null ) Message message = builder.build();
DynamicMessageTest.java,TestAllTypes message = TestUtil.getAllSet();,if (TestUtil != null ) TestAllTypes message = TestUtil.getAllSet();
DynamicMessageTest.java,Message dynamicMessage = dynamicBuilder.build();,if (dynamicBuilder != null ) Message dynamicMessage = dynamicBuilder.build();
DynamicMessageTest.java,Message message = builder.build();,if (builder != null ) Message message = builder.build();
DynamicMessageTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
DynamicMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
DynamicMessageTest.java,TestAllTypes message = builder.build();,if (builder != null ) TestAllTypes message = builder.build();
DynamicMessageTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
DynamicMessageTest.java,ByteString rawBytes = TestUtil.getAllExtensionsSet().toByteString();,if (TestUtil != null ) ByteString rawBytes = TestUtil.getAllExtensionsSet().toByteString();
DynamicMessageTest.java,Message message = builder.build();,if (builder != null ) Message message = builder.build();
DynamicMessageTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
DynamicMessageTest.java,TestPackedTypes.Builder builder = TestPackedTypes.newBuilder();,if (TestPackedTypes != null ) TestPackedTypes.Builder builder = TestPackedTypes.newBuilder();
DynamicMessageTest.java,TestPackedTypes message = builder.build();,if (builder != null ) TestPackedTypes message = builder.build();
DynamicMessageTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
DynamicMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
DynamicMessageTest.java,TestAllTypes message = builder.build();,if (builder != null ) TestAllTypes message = builder.build();
DynamicMessageTest.java,DynamicMessage copy = DynamicMessage.newBuilder(message).build();,if (DynamicMessage != null ) DynamicMessage copy = DynamicMessage.newBuilder(message).build();
DynamicMessageTest.java,DynamicMessage message = builder.build();,if (builder != null ) DynamicMessage message = builder.build();
DynamicMessageTest.java,DynamicMessage derived = message.toBuilder().build();,if (message != null ) DynamicMessage derived = message.toBuilder().build();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,TestAllTypes message = builder.build();,if (builder != null ) TestAllTypes message = builder.build();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,TestAllTypes value = builder.build();,if (builder != null ) TestAllTypes value = builder.build();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,TestAllTypes message = builder.build();,if (builder != null ) TestAllTypes message = builder.build();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,TestAllTypes message = builder.build();,if (builder != null ) TestAllTypes message = builder.build();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,TestAllTypes message = builder.build();,if (builder != null ) TestAllTypes message = builder.build();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,TestAllTypes message = builder.build();,if (builder != null ) TestAllTypes message = builder.build();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,TestAllTypes message = builder.build();,if (builder != null ) TestAllTypes message = builder.build();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,TestUnpackedTypes.Builder builder = TestUnpackedTypes.newBuilder();,if (TestUnpackedTypes != null ) TestUnpackedTypes.Builder builder = TestUnpackedTypes.newBuilder();
GeneratedMessageTest.java,TestPackedTypes.Builder builder = TestPackedTypes.newBuilder();,if (TestPackedTypes != null ) TestPackedTypes.Builder builder = TestPackedTypes.newBuilder();
GeneratedMessageTest.java,TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();,if (TestAllExtensions != null ) TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();
GeneratedMessageTest.java,TestAllExtensions message = builder.build();,if (builder != null ) TestAllExtensions message = builder.build();
GeneratedMessageTest.java,TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();,if (TestAllExtensions != null ) TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();
GeneratedMessageTest.java,TestAllExtensions message = builder.build();,if (builder != null ) TestAllExtensions message = builder.build();
GeneratedMessageTest.java,TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();,if (TestAllExtensions != null ) TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();
GeneratedMessageTest.java,TestAllExtensions message = builder.build();,if (builder != null ) TestAllExtensions message = builder.build();
GeneratedMessageTest.java,TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();,if (TestAllExtensions != null ) TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();
GeneratedMessageTest.java,TestAllExtensions message = builder.build();,if (builder != null ) TestAllExtensions message = builder.build();
GeneratedMessageTest.java,TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();,if (TestAllExtensions != null ) TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();
GeneratedMessageTest.java,TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();,if (TestAllExtensions != null ) TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();
GeneratedMessageTest.java,TestAllExtensions message = builder.build();,if (builder != null ) TestAllExtensions message = builder.build();
GeneratedMessageTest.java,TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();,if (TestAllExtensions != null ) TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();
GeneratedMessageTest.java,TestAllExtensions original = TestUtil.getAllExtensionsSet();,if (TestUtil != null ) TestAllExtensions original = TestUtil.getAllExtensionsSet();
GeneratedMessageTest.java,TestAllExtensions copy = TestAllExtensions.newBuilder(original).build();,if (TestAllExtensions != null ) TestAllExtensions copy = TestAllExtensions.newBuilder(original).build();
GeneratedMessageTest.java,TestOptimizedForSize.Builder builder = TestOptimizedForSize.newBuilder();,if (TestOptimizedForSize != null ) TestOptimizedForSize.Builder builder = TestOptimizedForSize.newBuilder();
GeneratedMessageTest.java,builder = TestOptimizedForSize.newBuilder();,if (TestOptimizedForSize != null ) builder = TestOptimizedForSize.newBuilder();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,TestAllTypes message = builder.build();,if (builder != null ) TestAllTypes message = builder.build();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,TestAllTypes expected = builder.build();,if (builder != null ) TestAllTypes expected = builder.build();
GeneratedMessageTest.java,ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray());,if (ByteArrayInputStream(baos != null ) ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray());
GeneratedMessageTest.java,TestAllTypes actual = (TestAllTypes) in.readObject();,if (in != null ) TestAllTypes actual = (TestAllTypes) in.readObject();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,TestAllTypes expected = builder.buildPartial();,if (builder != null ) TestAllTypes expected = builder.buildPartial();
GeneratedMessageTest.java,ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray());,if (ByteArrayInputStream(baos != null ) ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray());
GeneratedMessageTest.java,TestAllTypes actual = (TestAllTypes) in.readObject();,if (in != null ) TestAllTypes actual = (TestAllTypes) in.readObject();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,TestAllTypes message = builder.buildPartial();,if (builder != null ) TestAllTypes message = builder.buildPartial();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,Descriptor descriptor = TestAllTypes.getDescriptor();,if (TestAllTypes != null ) Descriptor descriptor = TestAllTypes.getDescriptor();
GeneratedMessageTest.java,Descriptor descriptor = TestAllTypes.getDescriptor();,if (TestAllTypes != null ) Descriptor descriptor = TestAllTypes.getDescriptor();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,Descriptor descriptor = TestAllTypes.getDescriptor();,if (TestAllTypes != null ) Descriptor descriptor = TestAllTypes.getDescriptor();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
LazyStringEndToEndTest.java,ByteString optional = proto.getOptionalStringBytes();,if (proto != null ) ByteString optional = proto.getOptionalStringBytes();
LiteralByteStringTest.java,String actualClassName = object.getClass().getName();,if (object != null ) String actualClassName = object.getClass().getName();
LiteralByteStringTest.java,ByteString.ByteIterator iter = stringUnderTest.iterator();,if (stringUnderTest != null ) ByteString.ByteIterator iter = stringUnderTest.iterator();
LiteralByteStringTest.java,ByteBuffer byteBuffer = stringUnderTest.asReadOnlyByteBuffer();,if (stringUnderTest != null ) ByteBuffer byteBuffer = stringUnderTest.asReadOnlyByteBuffer();
LiteralByteStringTest.java,List<ByteBuffer> byteBuffers = stringUnderTest.asReadOnlyByteBufferList();,if (stringUnderTest != null ) List<ByteBuffer> byteBuffers = stringUnderTest.asReadOnlyByteBufferList();
LiteralByteStringTest.java,int thisLength = byteBuffer.remaining();,if (byteBuffer != null ) int thisLength = byteBuffer.remaining();
LiteralByteStringTest.java,byte[] roundTripBytes = stringUnderTest.toByteArray();,if (stringUnderTest != null ) byte[] roundTripBytes = stringUnderTest.toByteArray();
LiteralByteStringTest.java,byte[] roundTripBytes = bos.toByteArray();,if (bos != null ) byte[] roundTripBytes = bos.toByteArray();
LiteralByteStringTest.java,byte[] newBytes = stringUnderTest.toByteArray();,if (stringUnderTest != null ) byte[] newBytes = stringUnderTest.toByteArray();
LiteralByteStringTest.java,ByteString.Output output = ByteString.newOutput();,if (ByteString != null ) ByteString.Output output = ByteString.newOutput();
LiteralByteStringTest.java,int hash = stringUnderTest.hashCode();,if (stringUnderTest != null ) int hash = stringUnderTest.hashCode();
LiteralByteStringTest.java,InputStream input = stringUnderTest.newInput();,if (stringUnderTest != null ) InputStream input = stringUnderTest.newInput();
LiteralByteStringTest.java,stillEqual = (expectedInt == input.read());,if (input != null ) stillEqual = (expectedInt == input.read());
LiteralByteStringTest.java,InputStream input = stringUnderTest.newInput();,if (stringUnderTest != null ) InputStream input = stringUnderTest.newInput();
LiteralByteStringTest.java,int stringSize = stringUnderTest.size();,if (stringUnderTest != null ) int stringSize = stringUnderTest.size();
LiteralByteStringTest.java,CodedInputStream cis = stringUnderTest.newCodedInput();,if (stringUnderTest != null ) CodedInputStream cis = stringUnderTest.newCodedInput();
MessageTest.java,TestRequired.Builder builder = TestRequired.newBuilder();,if (TestRequired != null ) TestRequired.Builder builder = TestRequired.newBuilder();
MessageTest.java,TestRequiredForeign.Builder builder = TestRequiredForeign.newBuilder();,if (TestRequiredForeign != null ) TestRequiredForeign.Builder builder = TestRequiredForeign.newBuilder();
MessageTest.java,TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();,if (TestAllExtensions != null ) TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();
MessageTest.java,Descriptors.Descriptor descriptor = TestRequired.getDescriptor();,if (TestRequired != null ) Descriptors.Descriptor descriptor = TestRequired.getDescriptor();
MessageTest.java,Descriptors.Descriptor descriptor = TestRequiredForeign.getDescriptor();,if (TestRequiredForeign != null ) Descriptors.Descriptor descriptor = TestRequiredForeign.getDescriptor();
MessageTest.java,TestRequired message = TestRequired.newBuilder().buildPartial();,if (TestRequired != null ) TestRequired message = TestRequired.newBuilder().buildPartial();
MessageTest.java,Descriptors.Descriptor descriptor = TestRequired.getDescriptor();,if (TestRequired != null ) Descriptors.Descriptor descriptor = TestRequired.getDescriptor();
MessageTest.java,Descriptors.Descriptor descriptor = TestRequired.getDescriptor();,if (TestRequired != null ) Descriptors.Descriptor descriptor = TestRequired.getDescriptor();
MessageTest.java,Descriptors.Descriptor descriptor = TestRequired.getDescriptor();,if (TestRequired != null ) Descriptors.Descriptor descriptor = TestRequired.getDescriptor();
NestedBuildersTest.java,Vehicle.Builder vehicleBuilder = Vehicle.newBuilder();,if (Vehicle != null ) Vehicle.Builder vehicleBuilder = Vehicle.newBuilder();
NestedBuildersTest.java,Vehicle vehicle = vehicleBuilder.build();,if (vehicleBuilder != null ) Vehicle vehicle = vehicleBuilder.build();
NestedBuildersTest.java,vehicle = vehicleBuilder.build();,if (vehicleBuilder != null ) vehicle = vehicleBuilder.build();
NestedBuildersTest.java,Vehicle.Builder vehicleBuilder = Vehicle.newBuilder();,if (Vehicle != null ) Vehicle.Builder vehicleBuilder = Vehicle.newBuilder();
NestedBuildersTest.java,List<Wheel> wheels = new ArrayList<Wheel>(vehicleBuilder.getWheelList());,if (ArrayList<Wheel>(vehicleBuilder != null ) List<Wheel> wheels = new ArrayList<Wheel>(vehicleBuilder.getWheelList());
NestedBuildersTest.java,Vehicle.Builder vehicleBuilder = Vehicle.newBuilder();,if (Vehicle != null ) Vehicle.Builder vehicleBuilder = Vehicle.newBuilder();
NestedBuildersTest.java,Vehicle.Builder vehicleBuilder = Vehicle.newBuilder();,if (Vehicle != null ) Vehicle.Builder vehicleBuilder = Vehicle.newBuilder();
NestedBuildersTest.java,Vehicle.Builder vehicleBuilder = Vehicle.newBuilder();,if (Vehicle != null ) Vehicle.Builder vehicleBuilder = Vehicle.newBuilder();
NestedBuildersTest.java,Vehicle vehicle = vehicleBuilder.buildPartial();,if (vehicleBuilder != null ) Vehicle vehicle = vehicleBuilder.buildPartial();
ParserTest.java,byte[] data = partialMessage.toByteArray();,if (partialMessage != null ) byte[] data = partialMessage.toByteArray();
ParserTest.java,TestAllTypes normalMessage = TestUtil.getAllSet();,if (TestUtil != null ) TestAllTypes normalMessage = TestUtil.getAllSet();
ParserTest.java,InputStream input = new ByteArrayInputStream(output.toByteArray());,if (ByteArrayInputStream(output != null ) InputStream input = new ByteArrayInputStream(output.toByteArray());
ParserTest.java,TestOptimizedForSize.Builder builder = TestOptimizedForSize.newBuilder();,if (TestOptimizedForSize != null ) TestOptimizedForSize.Builder builder = TestOptimizedForSize.newBuilder();
ParserTest.java,TestOptimizedForSize message = builder.build();,if (builder != null ) TestOptimizedForSize message = builder.build();
ParserTest.java,ExtensionRegistry registry = ExtensionRegistry.newInstance();,if (ExtensionRegistry != null ) ExtensionRegistry registry = ExtensionRegistry.newInstance();
ParserTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
ParserTest.java,ExtensionRegistry registry = ExtensionRegistry.newInstance();,if (ExtensionRegistry != null ) ExtensionRegistry registry = ExtensionRegistry.newInstance();
RopeByteStringSubstringTest.java,Iterator<ByteString> iter = ByteStringTest.makeConcretePieces(sourceBytes).iterator();,if (ByteStringTest != null ) Iterator<ByteString> iter = ByteStringTest.makeConcretePieces(sourceBytes).iterator();
RopeByteStringSubstringTest.java,ByteString sourceString = iter.next();,if (iter != null ) ByteString sourceString = iter.next();
RopeByteStringSubstringTest.java,sourceString = sourceString.concat(iter.next());,if (sourceString != null ) sourceString = sourceString.concat(iter.next());
RopeByteStringTest.java,Iterator<ByteString> iter = ByteStringTest.makeConcretePieces(referenceBytes).iterator();,if (ByteStringTest != null ) Iterator<ByteString> iter = ByteStringTest.makeConcretePieces(referenceBytes).iterator();
RopeByteStringTest.java,stringUnderTest = iter.next();,if (iter != null ) stringUnderTest = iter.next();
RopeByteStringTest.java,stringUnderTest = stringUnderTest.concat(iter.next());,if (stringUnderTest != null ) stringUnderTest = stringUnderTest.concat(iter.next());
ServiceTest.java,control = EasyMock.createStrictControl();,if (EasyMock != null ) control = EasyMock.createStrictControl();
ServiceTest.java,FooRequest fooRequest = FooRequest.newBuilder().build();,if (FooRequest != null ) FooRequest fooRequest = FooRequest.newBuilder().build();
ServiceTest.java,BarRequest barRequest = BarRequest.newBuilder().build();,if (BarRequest != null ) BarRequest barRequest = BarRequest.newBuilder().build();
ServiceTest.java,FooRequest fooRequest = FooRequest.newBuilder().build();,if (FooRequest != null ) FooRequest fooRequest = FooRequest.newBuilder().build();
ServiceTest.java,BarRequest barRequest = BarRequest.newBuilder().build();,if (BarRequest != null ) BarRequest barRequest = BarRequest.newBuilder().build();
ServiceTest.java,FooRequest fooRequest = FooRequest.newBuilder().build();,if (FooRequest != null ) FooRequest fooRequest = FooRequest.newBuilder().build();
ServiceTest.java,BarRequest barRequest = BarRequest.newBuilder().build();,if (BarRequest != null ) BarRequest barRequest = BarRequest.newBuilder().build();
ServiceTest.java,FooResponse fooResponse = FooResponse.newBuilder().build();,if (FooResponse != null ) FooResponse fooResponse = FooResponse.newBuilder().build();
ServiceTest.java,BarResponse barResponse = BarResponse.newBuilder().build();,if (BarResponse != null ) BarResponse barResponse = BarResponse.newBuilder().build();
ServiceTest.java,MessageWithNoOuter request = MessageWithNoOuter.getDefaultInstance();,if (MessageWithNoOuter != null ) MessageWithNoOuter request = MessageWithNoOuter.getDefaultInstance();
ServiceTest.java,MessageWithNoOuter request = MessageWithNoOuter.getDefaultInstance();,if (MessageWithNoOuter != null ) MessageWithNoOuter request = MessageWithNoOuter.getDefaultInstance();
ServiceTest.java,TestAllTypes expectedResponse = TestAllTypes.getDefaultInstance();,if (TestAllTypes != null ) TestAllTypes expectedResponse = TestAllTypes.getDefaultInstance();
ServiceTest.java,String fullName = innerClass.getName();,if (innerClass != null ) String fullName = innerClass.getName();
ServiceTest.java,FileDescriptor file = UnittestNoGenericServices.getDescriptor();,if (UnittestNoGenericServices != null ) FileDescriptor file = UnittestNoGenericServices.getDescriptor();
TestUtil.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TestUtil.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TestUtil.java,TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();,if (TestAllExtensions != null ) TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();
TestUtil.java,TestPackedTypes.Builder builder = TestPackedTypes.newBuilder();,if (TestPackedTypes != null ) TestPackedTypes.Builder builder = TestPackedTypes.newBuilder();
TestUtil.java,TestUnpackedTypes.Builder builder = TestUnpackedTypes.newBuilder();,if (TestUnpackedTypes != null ) TestUnpackedTypes.Builder builder = TestUnpackedTypes.newBuilder();
TestUtil.java,TestPackedExtensions.Builder builder = TestPackedExtensions.newBuilder();,if (TestPackedExtensions != null ) TestPackedExtensions.Builder builder = TestPackedExtensions.newBuilder();
TestUtil.java,ExtensionRegistry registry = ExtensionRegistry.newInstance();,if (ExtensionRegistry != null ) ExtensionRegistry registry = ExtensionRegistry.newInstance();
TestUtil.java,this.file = baseDescriptor.getFile();,if (baseDescriptor != null ) this.file = baseDescriptor.getFile();
TestUtil.java,ancestor = ancestor.getCanonicalFile();,if (ancestor != null ) ancestor = ancestor.getCanonicalFile();
TestUtil.java,ancestor = ancestor.getParentFile();,if (ancestor != null ) ancestor = ancestor.getParentFile();
TextFormatTest.java,String javaText = TextFormat.printToString(TestUtil.getAllSet());,if (TextFormat != null ) String javaText = TextFormat.printToString(TestUtil.getAllSet());
TextFormatTest.java,String javaText = TextFormat.printToString(TestUtil.getAllSetBuilder());,if (TextFormat != null ) String javaText = TextFormat.printToString(TestUtil.getAllSetBuilder());
TextFormatTest.java,String javaText = TextFormat.printToString(TestUtil.getAllExtensionsSet());,if (TextFormat != null ) String javaText = TextFormat.printToString(TestUtil.getAllExtensionsSet());
TextFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TextFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TextFormatTest.java,TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();,if (TestAllExtensions != null ) TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();
TextFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TextFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TextFormatTest.java,ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();,if (ExtensionRegistry != null ) ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();
TextFormatTest.java,TestMessageSet.Builder builder = TestMessageSet.newBuilder();,if (TestMessageSet != null ) TestMessageSet.Builder builder = TestMessageSet.newBuilder();
TextFormatTest.java,TestMessageSet messageSet = builder.build();,if (builder != null ) TestMessageSet messageSet = builder.build();
TextFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TextFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TextFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TextFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TextFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TextFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TextFormatTest.java,TestAllTypes.Builder badBuilder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder badBuilder = TestAllTypes.newBuilder();
TextFormatTest.java,TestAllTypes.Builder badBuilder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder badBuilder = TestAllTypes.newBuilder();
TextFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TextFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
UnknownFieldSetTest.java,descriptor = TestAllTypes.getDescriptor();,if (TestAllTypes != null ) descriptor = TestAllTypes.getDescriptor();
UnknownFieldSetTest.java,allFields = TestUtil.getAllSet();,if (TestUtil != null ) allFields = TestUtil.getAllSet();
UnknownFieldSetTest.java,allFieldsData = allFields.toByteString();,if (allFields != null ) allFieldsData = allFields.toByteString();
UnknownFieldSetTest.java,unknownFields = emptyMessage.getUnknownFields();,if (emptyMessage != null ) unknownFields = emptyMessage.getUnknownFields();
UnknownFieldSetTest.java,UnknownFieldSet.Builder bizarroFields = UnknownFieldSet.newBuilder();,if (UnknownFieldSet != null ) UnknownFieldSet.Builder bizarroFields = UnknownFieldSet.newBuilder();
UnknownFieldSetTest.java,ByteString data = emptyMessage.toByteString();,if (emptyMessage != null ) ByteString data = emptyMessage.toByteString();
UnknownFieldSetTest.java,ByteString data = fields.toByteString();,if (fields != null ) ByteString data = fields.toByteString();
UnknownFieldSetTest.java,UnknownFieldSet copy = UnknownFieldSet.newBuilder(set).build();,if (UnknownFieldSet != null ) UnknownFieldSet copy = UnknownFieldSet.newBuilder(set).build();
UnmodifiableLazyStringListTest.java,Iterator<String> iter = list.iterator();,if (list != null ) Iterator<String> iter = list.iterator();
UnmodifiableLazyStringListTest.java,ListIterator<String> iter = list.listIterator();,if (list != null ) ListIterator<String> iter = list.listIterator();
WireFormatTest.java,TestAllTypes message = TestUtil.getAllSet();,if (TestUtil != null ) TestAllTypes message = TestUtil.getAllSet();
WireFormatTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatTest.java,TestPackedTypes message = TestUtil.getPackedSet();,if (TestUtil != null ) TestPackedTypes message = TestUtil.getPackedSet();
WireFormatTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatTest.java,TestAllExtensions message = TestUtil.getAllExtensionsSet();,if (TestUtil != null ) TestAllExtensions message = TestUtil.getAllExtensionsSet();
WireFormatTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatTest.java,TestPackedExtensions message = TestUtil.getPackedExtensionsSet();,if (TestUtil != null ) TestPackedExtensions message = TestUtil.getPackedExtensionsSet();
WireFormatTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatTest.java,TestPackedTypes message = TestUtil.getPackedSet();,if (TestUtil != null ) TestPackedTypes message = TestUtil.getPackedSet();
WireFormatTest.java,TestAllTypes message = TestUtil.getAllSet();,if (TestUtil != null ) TestAllTypes message = TestUtil.getAllSet();
WireFormatTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatTest.java,ExtensionRegistry registry = TestUtil.getExtensionRegistry();,if (TestUtil != null ) ExtensionRegistry registry = TestUtil.getExtensionRegistry();
WireFormatTest.java,TestPackedExtensions message = TestUtil.getPackedExtensionsSet();,if (TestUtil != null ) TestPackedExtensions message = TestUtil.getPackedExtensionsSet();
WireFormatTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatTest.java,ExtensionRegistry registry = TestUtil.getExtensionRegistry();,if (TestUtil != null ) ExtensionRegistry registry = TestUtil.getExtensionRegistry();
WireFormatTest.java,ByteArrayInputStream input = new ByteArrayInputStream(output.toByteArray());,if (ByteArrayInputStream(output != null ) ByteArrayInputStream input = new ByteArrayInputStream(output.toByteArray());
WireFormatTest.java,CodedInputStream input = data.newCodedInput();,if (data != null ) CodedInputStream input = data.newCodedInput();
WireFormatTest.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
WireFormatTest.java,Descriptors.Descriptor descriptor = TestFieldOrderings.getDescriptor();,if (TestFieldOrderings != null ) Descriptors.Descriptor descriptor = TestFieldOrderings.getDescriptor();
WireFormatTest.java,ExtensionRegistry result = ExtensionRegistry.newInstance();,if (ExtensionRegistry != null ) ExtensionRegistry result = ExtensionRegistry.newInstance();
WireFormatTest.java,Descriptors.Descriptor descriptor = TestFieldOrderings.getDescriptor();,if (TestFieldOrderings != null ) Descriptors.Descriptor descriptor = TestFieldOrderings.getDescriptor();
WireFormatTest.java,ByteString data = messageSet.toByteString();,if (messageSet != null ) ByteString data = messageSet.toByteString();
WireFormatTest.java,ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();,if (ExtensionRegistry != null ) ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();
WireFormatTest.java,ByteString data = raw.toByteString();,if (raw != null ) ByteString data = raw.toByteString();
WireFormatTest.java,UnknownFieldSet unknownFields = messageSet.getUnknownFields();,if (messageSet != null ) UnknownFieldSet unknownFields = messageSet.getUnknownFields();
WireFormatTest.java,ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();,if (ExtensionRegistry != null ) ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();
WireFormatTest.java,ByteString data = raw.toByteString();,if (raw != null ) ByteString data = raw.toByteString();
WireFormatTest.java,ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();,if (ExtensionRegistry != null ) ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();
WireFormatTest.java,ByteString data = raw.toByteString();,if (raw != null ) ByteString data = raw.toByteString();
ConformanceJava.java,ByteBuffer buffer = ByteBuffer.allocate(bytes.size());,if (ByteBuffer != null ) ByteBuffer buffer = ByteBuffer.allocate(bytes.size());
ConformanceJava.java,ByteBuffer buffer = ByteBuffer.allocateDirect(bytes.size());,if (ByteBuffer != null ) ByteBuffer buffer = ByteBuffer.allocateDirect(bytes.size());
ConformanceJava.java,ByteBuffer buffer = ByteBuffer.allocateDirect(bytes.size());,if (ByteBuffer != null ) ByteBuffer buffer = ByteBuffer.allocateDirect(bytes.size());
ConformanceJava.java,ExtensionRegistry extensions = ExtensionRegistry.newInstance();,if (ExtensionRegistry != null ) ExtensionRegistry extensions = ExtensionRegistry.newInstance();
ConformanceJava.java,ExtensionRegistry extensions = ExtensionRegistry.newInstance();,if (ExtensionRegistry != null ) ExtensionRegistry extensions = ExtensionRegistry.newInstance();
ConformanceJava.java,parser = parser.ignoringUnknownFields();,if (parser != null ) parser = parser.ignoringUnknownFields();
ConformanceJava.java,testMessage = builder.build();,if (builder != null ) testMessage = builder.build();
ConformanceJava.java,testMessage = builder.build();,if (builder != null ) testMessage = builder.build();
ConformanceJava.java,testMessage = builder.build();,if (builder != null ) testMessage = builder.build();
ConformanceJava.java,testMessage = builder.build();,if (builder != null ) testMessage = builder.build();
ConformanceJava.java,ByteString MessageString = testMessage.toByteString();,if (testMessage != null ) ByteString MessageString = testMessage.toByteString();
ConformanceJavaLite.java,testMessage = Conformance.TestAllTypes.parseFrom(request.getProtobufPayload());,if (Conformance != null ) testMessage = Conformance.TestAllTypes.parseFrom(request.getProtobufPayload());
AbstractMessageLite.java,final CodedInputStream input = data.newCodedInput();,if (data != null ) final CodedInputStream input = data.newCodedInput();
AbstractMessageLite.java,final CodedInputStream input = data.newCodedInput();,if (data != null ) final CodedInputStream input = data.newCodedInput();
AbstractMessageLite.java,final int result = super.read();,if (super != null ) final int result = super.read();
AbstractMessageLite.java,final int firstByte = input.read();,if (input != null ) final int firstByte = input.read();
AbstractMessageLite.java,int begin = list.size();,if (list != null ) int begin = list.size();
AbstractMessageLite.java,int begin = list.size();,if (list != null ) int begin = list.size();
AbstractParser.java,CodedInputStream input = data.newCodedInput();,if (data != null ) CodedInputStream input = data.newCodedInput();
AbstractParser.java,int firstByte = input.read();,if (input != null ) int firstByte = input.read();
ArrayDecoders.java,this.extensionRegistry = ExtensionRegistryLite.getEmptyRegistry();,if (ExtensionRegistryLite != null ) this.extensionRegistry = ExtensionRegistryLite.getEmptyRegistry();
ArrayDecoders.java,Object result = schema.newInstance();,if (schema != null ) Object result = schema.newInstance();
ArrayDecoders.java,Object result = messageSchema.newInstance();,if (messageSchema != null ) Object result = messageSchema.newInstance();
ArrayDecoders.java,unknownFields = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) unknownFields = UnknownFieldSetLite.newInstance();
ArrayDecoders.java,final UnknownFieldSetLite child = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) final UnknownFieldSetLite child = UnknownFieldSetLite.newInstance();
BinaryReader.java,buffer = bytebuf.array();,if (bytebuf != null ) buffer = bytebuf.array();
BinaryReader.java,initialPos = pos = bytebuf.arrayOffset() + bytebuf.position();,if (bytebuf != null ) initialPos = pos = bytebuf.arrayOffset() + bytebuf.position();
BinaryReader.java,limit = bytebuf.arrayOffset() + bytebuf.limit();,if (bytebuf != null ) limit = bytebuf.arrayOffset() + bytebuf.limit();
BinaryReader.java,T message = schema.newInstance();,if (schema != null ) T message = schema.newInstance();
BinaryReader.java,T message = schema.newInstance();,if (schema != null ) T message = schema.newInstance();
BinaryWriter.java,this.buffer = allocatedBuffer.array();,if (allocatedBuffer != null ) this.buffer = allocatedBuffer.array();
BinaryWriter.java,int arrayOffset = allocatedBuffer.arrayOffset();,if (allocatedBuffer != null ) int arrayOffset = allocatedBuffer.arrayOffset();
BinaryWriter.java,this.limit = arrayOffset + allocatedBuffer.limit();,if (allocatedBuffer != null ) this.limit = arrayOffset + allocatedBuffer.limit();
BinaryWriter.java,this.offset = arrayOffset + allocatedBuffer.position();,if (allocatedBuffer != null ) this.offset = arrayOffset + allocatedBuffer.position();
BinaryWriter.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
BinaryWriter.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
BinaryWriter.java,this.buffer = allocatedBuffer.array();,if (allocatedBuffer != null ) this.buffer = allocatedBuffer.array();
BinaryWriter.java,int arrayOffset = allocatedBuffer.arrayOffset();,if (allocatedBuffer != null ) int arrayOffset = allocatedBuffer.arrayOffset();
BinaryWriter.java,this.limit = arrayOffset + allocatedBuffer.limit();,if (allocatedBuffer != null ) this.limit = arrayOffset + allocatedBuffer.limit();
BinaryWriter.java,this.offset = arrayOffset + allocatedBuffer.position();,if (allocatedBuffer != null ) this.offset = arrayOffset + allocatedBuffer.position();
BinaryWriter.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
BinaryWriter.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
BinaryWriter.java,ByteBuffer nioBuffer = allocatedBuffer.nioBuffer();,if (allocatedBuffer != null ) ByteBuffer nioBuffer = allocatedBuffer.nioBuffer();
BinaryWriter.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
BinaryWriter.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
BinaryWriter.java,ByteBuffer nioBuffer = allocatedBuffer.nioBuffer();,if (allocatedBuffer != null ) ByteBuffer nioBuffer = allocatedBuffer.nioBuffer();
BinaryWriter.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
BinaryWriter.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
ByteBufferWriter.java,final int initialPos = buffer.position();,if (buffer != null ) final int initialPos = buffer.position();
ByteString.java,ByteIterator formerBytes = former.iterator();,if (former != null ) ByteIterator formerBytes = former.iterator();
ByteString.java,ByteIterator latterBytes = latter.iterator();,if (latter != null ) ByteIterator latterBytes = latter.iterator();
ByteString.java,final int offset = buffer.arrayOffset();,if (buffer != null ) final int offset = buffer.arrayOffset();
ByteString.java,result = iterator.next();,if (iterator != null ) result = iterator.next();
ByteString.java,int thatHash = otherAsLiteral.peekCachedHashCode();,if (otherAsLiteral != null ) int thatHash = otherAsLiteral.peekCachedHashCode();
CodedInputStream.java,totalSize += buf.remaining();,if (buf != null ) totalSize += buf.remaining();
CodedInputStream.java,final int b = input.read();,if (input != null ) final int b = input.read();
CodedInputStream.java,final int b = input.read();,if (input != null ) final int b = input.read();
CodedInputStream.java,final int firstByte = input.read();,if (input != null ) final int firstByte = input.read();
CodedInputStream.java,limit = address + buffer.limit();,if (buffer != null ) limit = address + buffer.limit();
CodedInputStream.java,pos = address + buffer.position();,if (buffer != null ) pos = address + buffer.position();
CodedInputStream.java,int prevPos = buffer.position();,if (buffer != null ) int prevPos = buffer.position();
CodedInputStream.java,int prevLimit = buffer.limit();,if (buffer != null ) int prevLimit = buffer.limit();
CodedInputStream.java,iterator = input.iterator();,if (input != null ) iterator = input.iterator();
CodedInputStream.java,currentByteBuffer = iterator.next();,if (iterator != null ) currentByteBuffer = iterator.next();
CodedInputStream.java,currentByteBufferPos = currentByteBuffer.position();,if (currentByteBuffer != null ) currentByteBufferPos = currentByteBuffer.position();
CodedInputStream.java,currentByteBufferLimit = currentByteBuffer.limit();,if (currentByteBuffer != null ) currentByteBufferLimit = currentByteBuffer.limit();
CodedInputStream.java,int prevPos = currentByteBuffer.position();,if (currentByteBuffer != null ) int prevPos = currentByteBuffer.position();
CodedInputStream.java,int prevLimit = currentByteBuffer.limit();,if (currentByteBuffer != null ) int prevLimit = currentByteBuffer.limit();
CodedInputStreamReader.java,tag = input.readTag();,if (input != null ) tag = input.readTag();
CodedInputStreamReader.java,T message = schema.newInstance();,if (schema != null ) T message = schema.newInstance();
CodedInputStreamReader.java,T message = schema.newInstance();,if (schema != null ) T message = schema.newInstance();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedOutputStream.java,ByteBuffer duplicated = value.duplicate();,if (value != null ) ByteBuffer duplicated = value.duplicate();
CodedOutputStream.java,final int length = value.remaining();,if (value != null ) final int length = value.remaining();
CodedOutputStream.java,this.initialPosition = byteBuffer.position();,if (byteBuffer != null ) this.initialPosition = byteBuffer.position();
CodedOutputStream.java,initialPosition = buffer.position();,if (buffer != null ) initialPosition = buffer.position();
CodedOutputStream.java,ByteBuffer duplicated = value.duplicate();,if (value != null ) ByteBuffer duplicated = value.duplicate();
CodedOutputStream.java,final int startPos = buffer.position();,if (buffer != null ) final int startPos = buffer.position();
CodedOutputStream.java,int endOfBytes = buffer.position();,if (buffer != null ) int endOfBytes = buffer.position();
CodedOutputStream.java,initialPosition = address + buffer.position();,if (buffer != null ) initialPosition = address + buffer.position();
CodedOutputStream.java,limit = address + buffer.limit();,if (buffer != null ) limit = address + buffer.limit();
CodedOutputStream.java,ByteBuffer duplicated = value.duplicate();,if (value != null ) ByteBuffer duplicated = value.duplicate();
CodedOutputStream.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
CodedOutputStream.java,ByteBuffer duplicated = value.duplicate();,if (value != null ) ByteBuffer duplicated = value.duplicate();
CodedOutputStream.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
CodedOutputStream.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
CodedOutputStream.java,ByteBuffer duplicated = value.duplicate();,if (value != null ) ByteBuffer duplicated = value.duplicate();
CodedOutputStream.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
ExtensionRegistryLite.java,this.extensionsByNumber = Collections.emptyMap();,if (Collections != null ) this.extensionsByNumber = Collections.emptyMap();
ExtensionRegistryLite.java,this.extensionsByNumber = Collections.emptyMap();,if (Collections != null ) this.extensionsByNumber = Collections.emptyMap();
ExtensionSchemaLite.java,int fieldNumber = extension.getNumber();,if (extension != null ) int fieldNumber = extension.getNumber();
ExtensionSchemaLite.java,value = reader.readDouble();,if (reader != null ) value = reader.readDouble();
ExtensionSchemaLite.java,value = reader.readFloat();,if (reader != null ) value = reader.readFloat();
ExtensionSchemaLite.java,value = reader.readBool();,if (reader != null ) value = reader.readBool();
ExtensionSchemaLite.java,value = reader.readBytes();,if (reader != null ) value = reader.readBytes();
ExtensionSchemaLite.java,value = reader.readString();,if (reader != null ) value = reader.readString();
FieldSet.java,FieldSet<T> clone = FieldSet.newFieldSet();,if (FieldSet != null ) FieldSet<T> clone = FieldSet.newFieldSet();
FieldSet.java,T key = entry.getKey();,if (entry != null ) T key = entry.getKey();
FieldSet.java,Object value = entry.getValue();,if (entry != null ) Object value = entry.getValue();
FieldSet.java,final T descriptor = entry.getKey();,if (entry != null ) final T descriptor = entry.getKey();
FieldSet.java,Object value = entry.getValue();,if (entry != null ) Object value = entry.getValue();
FieldSet.java,final T descriptor = entry.getKey();,if (entry != null ) final T descriptor = entry.getKey();
FieldSet.java,Object otherValue = entry.getValue();,if (entry != null ) Object otherValue = entry.getValue();
FieldSet.java,final T descriptor = entry.getKey();,if (entry != null ) final T descriptor = entry.getKey();
FieldSet.java,Object value = entry.getValue();,if (entry != null ) Object value = entry.getValue();
FieldSet.java,WireFormat.FieldType type = descriptor.getLiteType();,if (descriptor != null ) WireFormat.FieldType type = descriptor.getLiteType();
FieldSet.java,int number = descriptor.getNumber();,if (descriptor != null ) int number = descriptor.getNumber();
FieldSet.java,"size += computeFieldSize(entry.getKey(), entry.getValue());","if (entry != null ) size += computeFieldSize(entry.getKey(), entry.getValue());"
FieldSet.java,"size += computeFieldSize(entry.getKey(), entry.getValue());","if (entry != null ) size += computeFieldSize(entry.getKey(), entry.getValue());"
FieldSet.java,final T descriptor = entry.getKey();,if (entry != null ) final T descriptor = entry.getKey();
FieldSet.java,Object value = entry.getValue();,if (entry != null ) Object value = entry.getValue();
FieldSet.java,WireFormat.FieldType type = descriptor.getLiteType();,if (descriptor != null ) WireFormat.FieldType type = descriptor.getLiteType();
FieldSet.java,int number = descriptor.getNumber();,if (descriptor != null ) int number = descriptor.getNumber();
FieldSet.java,final T descriptor = entry.getKey();,if (entry != null ) final T descriptor = entry.getKey();
FieldSet.java,Object otherValue = entry.getValue();,if (entry != null ) Object otherValue = entry.getValue();
FieldType.java,elementType = javaType.getBoxedType();,if (javaType != null ) elementType = javaType.getBoxedType();
FieldType.java,elementType = javaType.getBoxedType();,if (javaType != null ) elementType = javaType.getBoxedType();
FieldType.java,Type genericType = field.getGenericType();,if (field != null ) Type genericType = field.getGenericType();
FieldType.java,Type[] genericInterfaces = clazz.getGenericInterfaces();,if (clazz != null ) Type[] genericInterfaces = clazz.getGenericInterfaces();
FieldType.java,Type type = clazz.getGenericSuperclass();,if (clazz != null ) Type type = clazz.getGenericSuperclass();
FieldType.java,Type[] superArgs = parameterizedType.getActualTypeArguments();,if (parameterizedType != null ) Type[] superArgs = parameterizedType.getActualTypeArguments();
FieldType.java,clazz = clazz.getSuperclass();,if (clazz != null ) clazz = clazz.getSuperclass();
GeneratedMessageLite.java,protected UnknownFieldSetLite unknownFields = UnknownFieldSetLite.getDefaultInstance();,if (UnknownFieldSetLite != null ) protected UnknownFieldSetLite unknownFields = UnknownFieldSetLite.getDefaultInstance();
GeneratedMessageLite.java,unknownFields = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) unknownFields = UnknownFieldSetLite.newInstance();
GeneratedMessageLite.java,extensions = extensions.clone();,if (extensions != null ) extensions = extensions.clone();
GeneratedMessageLite.java,int rawValue = input.readEnum();,if (input != null ) int rawValue = input.readEnum();
GeneratedMessageLite.java,subBuilder = existingValue.toBuilder();,if (existingValue != null ) subBuilder = existingValue.toBuilder();
GeneratedMessageLite.java,subBuilder = extension.getMessageDefaultInstance().newBuilderForType();,if (extension != null ) subBuilder = extension.getMessageDefaultInstance().newBuilderForType();
GeneratedMessageLite.java,value = subBuilder.build();,if (subBuilder != null ) value = subBuilder.build();
GeneratedMessageLite.java,int rawValue = input.readEnum();,if (input != null ) int rawValue = input.readEnum();
GeneratedMessageLite.java,final int tag = input.readTag();,if (input != null ) final int tag = input.readTag();
GeneratedMessageLite.java,rawBytes = input.readBytes();,if (input != null ) rawBytes = input.readBytes();
GeneratedMessageLite.java,subBuilder = existingValue.toBuilder();,if (existingValue != null ) subBuilder = existingValue.toBuilder();
GeneratedMessageLite.java,subBuilder = extension.getMessageDefaultInstance().newBuilderForType();,if (extension != null ) subBuilder = extension.getMessageDefaultInstance().newBuilderForType();
GeneratedMessageLite.java,MessageLite value = subBuilder.build();,if (subBuilder != null ) MessageLite value = subBuilder.build();
GeneratedMessageLite.java,extensions = extensions.clone();,if (extensions != null ) extensions = extensions.clone();
GeneratedMessageLite.java,next = iter.next();,if (iter != null ) next = iter.next();
GeneratedMessageLite.java,ExtensionDescriptor extension = next.getKey();,if (next != null ) ExtensionDescriptor extension = next.getKey();
GeneratedMessageLite.java,next = iter.next();,if (iter != null ) next = iter.next();
GeneratedMessageLite.java,instance.extensions = instance.extensions.clone();,if (instance != null ) instance.extensions = instance.extensions.clone();
GeneratedMessageLite.java,extensions = extensions.clone();,if (extensions != null ) extensions = extensions.clone();
GeneratedMessageLite.java,Type emptyList = (Type) Collections.emptyList();,if (Collections != null ) Type emptyList = (Type) Collections.emptyList();
GeneratedMessageLite.java,messageClass = regularForm.getClass();,if (regularForm != null ) messageClass = regularForm.getClass();
GeneratedMessageLite.java,messageClassName = messageClass.getName();,if (messageClass != null ) messageClassName = messageClass.getName();
GeneratedMessageLite.java,asBytes = regularForm.toByteArray();,if (regularForm != null ) asBytes = regularForm.toByteArray();
GeneratedMessageLite.java,int size = list.size();,if (list != null ) int size = list.size();
GeneratedMessageLite.java,int size = list.size();,if (list != null ) int size = list.size();
GeneratedMessageLite.java,int size = list.size();,if (list != null ) int size = list.size();
GeneratedMessageLite.java,int size = list.size();,if (list != null ) int size = list.size();
GeneratedMessageLite.java,int size = list.size();,if (list != null ) int size = list.size();
GeneratedMessageLite.java,int size = list.size();,if (list != null ) int size = list.size();
GeneratedMessageLite.java,CodedInputStream input = data.newCodedInput();,if (data != null ) CodedInputStream input = data.newCodedInput();
GeneratedMessageLite.java,int firstByte = input.read();,if (input != null ) int firstByte = input.read();
Internal.java,ByteBuffer temp = source.duplicate();,if (source != null ) ByteBuffer temp = source.duplicate();
Internal.java,ByteBuffer result = ByteBuffer.allocate(temp.capacity());,if (ByteBuffer != null ) ByteBuffer result = ByteBuffer.allocate(temp.capacity());
Internal.java,final ByteBuffer duplicated = bytes.duplicate();,if (bytes != null ) final ByteBuffer duplicated = bytes.duplicate();
Internal.java,int h = bytes.capacity();,if (bytes != null ) int h = bytes.capacity();
IterableByteBufferInputStream.java,iterator = data.iterator();,if (data != null ) iterator = data.iterator();
IterableByteBufferInputStream.java,currentByteBuffer = iterator.next();,if (iterator != null ) currentByteBuffer = iterator.next();
IterableByteBufferInputStream.java,currentByteBufferPos = currentByteBuffer.position();,if (currentByteBuffer != null ) currentByteBufferPos = currentByteBuffer.position();
IterableByteBufferInputStream.java,currentArray = currentByteBuffer.array();,if (currentByteBuffer != null ) currentArray = currentByteBuffer.array();
IterableByteBufferInputStream.java,currentArrayOffset = currentByteBuffer.arrayOffset();,if (currentByteBuffer != null ) currentArrayOffset = currentByteBuffer.arrayOffset();
IterableByteBufferInputStream.java,int prevPos = currentByteBuffer.position();,if (currentByteBuffer != null ) int prevPos = currentByteBuffer.position();
LazyField.java,LazyField field = entry.getValue();,if (entry != null ) LazyField field = entry.getValue();
LazyFieldLite.java,memoizedBytes = value.toByteString();,if (value != null ) memoizedBytes = value.toByteString();
LazyStringArrayList.java,list = new ArrayList<Object>(from.size());,if (ArrayList<Object>(from != null ) list = new ArrayList<Object>(from.size());
ListFieldSchema.java,int size = mine.size();,if (mine != null ) int size = mine.size();
ListFieldSchema.java,int otherSize = other.size();,if (other != null ) int otherSize = other.size();
ListFieldSchema.java,int size = list.size();,if (list != null ) int size = list.size();
ListFieldSchema.java,int size = mine.size();,if (mine != null ) int size = mine.size();
ListFieldSchema.java,int otherSize = other.size();,if (other != null ) int otherSize = other.size();
MapEntryLite.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
MapEntryLite.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
MapFieldSchemaLite.java,mine = mine.mutableCopy();,if (mine != null ) mine = mine.mutableCopy();
MessageSchema.java,String info = messageInfo.getStringInfo();,if (messageInfo != null ) String info = messageInfo.getStringInfo();
MessageSchema.java,final int length = info.length();,if (info != null ) final int length = info.length();
MessageSchema.java,FieldInfo[] fis = messageInfo.getFields();,if (messageInfo != null ) FieldInfo[] fis = messageInfo.getFields();
MessageSchema.java,int[] checkInitialized = messageInfo.getCheckInitialized();,if (messageInfo != null ) int[] checkInitialized = messageInfo.getCheckInitialized();
MessageSchema.java,final int fieldNumber = fi.getFieldNumber();,if (fi != null ) final int fieldNumber = fi.getFieldNumber();
MessageSchema.java,OneofInfo oneof = fi.getOneof();,if (fi != null ) OneofInfo oneof = fi.getOneof();
MessageSchema.java,FieldType type = fi.getType();,if (fi != null ) FieldType type = fi.getType();
MessageSchema.java,typeId = type.id();,if (type != null ) typeId = type.id();
MessageSchema.java,Field presenceField = fi.getPresenceField();,if (fi != null ) Field presenceField = fi.getPresenceField();
MessageSchema.java,presenceMaskShift = Integer.numberOfTrailingZeros(fi.getPresenceMask());,if (Integer != null ) presenceMaskShift = Integer.numberOfTrailingZeros(fi.getPresenceMask());
MessageSchema.java,buffer[bufferIndex] = fi.getFieldNumber();,if (fi != null ) buffer[bufferIndex] = fi.getFieldNumber();
MessageSchema.java,Object messageFieldClass = fi.getMessageFieldClass();,if (fi != null ) Object messageFieldClass = fi.getMessageFieldClass();
MessageSchema.java,protoHash = submessage.hashCode();,if (submessage != null ) protoHash = submessage.hashCode();
MessageSchema.java,protoHash = submessage.hashCode();,if (submessage != null ) protoHash = submessage.hashCode();
MessageSchema.java,size += extensionSchema.getExtensions(message).getSerializedSize();,if (extensionSchema != null ) size += extensionSchema.getExtensions(message).getSerializedSize();
MessageSchema.java,extensionIterator = extensions.iterator();,if (extensions != null ) extensionIterator = extensions.iterator();
MessageSchema.java,nextExtension = extensionIterator.next();,if (extensionIterator != null ) nextExtension = extensionIterator.next();
MessageSchema.java,extensionIterator = extensions.iterator();,if (extensions != null ) extensionIterator = extensions.iterator();
MessageSchema.java,nextExtension = extensionIterator.next();,if (extensionIterator != null ) nextExtension = extensionIterator.next();
MessageSchema.java,extensionIterator = extensions.descendingIterator();,if (extensions != null ) extensionIterator = extensions.descendingIterator();
MessageSchema.java,nextExtension = extensionIterator.next();,if (extensionIterator != null ) nextExtension = extensionIterator.next();
MessageSchema.java,final int number = reader.getFieldNumber();,if (reader != null ) final int number = reader.getFieldNumber();
MessageSchema.java,int enumValue = reader.readEnum();,if (reader != null ) int enumValue = reader.readEnum();
MessageSchema.java,int enumValue = reader.readEnum();,if (reader != null ) int enumValue = reader.readEnum();
MessageSchema.java,unknownFields = unknownFieldSchema.newBuilder();,if (unknownFieldSchema != null ) unknownFields = unknownFieldSchema.newBuilder();
MessageSchema.java,unknownFields = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) unknownFields = UnknownFieldSetLite.newInstance();
MessageSchema.java,final int size = list.size();,if (list != null ) final int size = list.size();
MessageSchema.java,final int size = list.size();,if (list != null ) final int size = list.size();
MessageSchema.java,final int size = list.size();,if (list != null ) final int size = list.size();
MessageSchema.java,unknownFields = unknownFieldSchema.newBuilder();,if (unknownFieldSchema != null ) unknownFields = unknownFieldSchema.newBuilder();
MessageSchema.java,CodedOutputStream codedOutput = codedBuilder.getCodedOutput();,if (codedBuilder != null ) CodedOutputStream codedOutput = codedBuilder.getCodedOutput();
MessageSetSchema.java,int hashCode = unknownFieldSchema.getFromMessage(message).hashCode();,if (unknownFieldSchema != null ) int hashCode = unknownFieldSchema.getFromMessage(message).hashCode();
MessageSetSchema.java,unknownFields = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) unknownFields = UnknownFieldSetLite.newInstance();
MessageSetSchema.java,final int number = reader.getFieldNumber();,if (reader != null ) final int number = reader.getFieldNumber();
MessageSetSchema.java,int startTag = reader.getTag();,if (reader != null ) int startTag = reader.getTag();
MessageSetSchema.java,final int number = reader.getFieldNumber();,if (reader != null ) final int number = reader.getFieldNumber();
MessageSetSchema.java,final int tag = reader.getTag();,if (reader != null ) final int tag = reader.getTag();
MessageSetSchema.java,rawBytes = reader.readBytes();,if (reader != null ) rawBytes = reader.readBytes();
MessageSetSchema.java,size += extensionSchema.getExtensions(message).getMessageSetSerializedSize();,if (extensionSchema != null ) size += extensionSchema.getExtensions(message).getMessageSetSerializedSize();
NioByteString.java,ByteBuffer slice = buffer.slice();,if (buffer != null ) ByteBuffer slice = buffer.slice();
NioByteString.java,bytes = buffer.array();,if (buffer != null ) bytes = buffer.array();
NioByteString.java,offset = buffer.arrayOffset() + buffer.position();,if (buffer != null ) offset = buffer.arrayOffset() + buffer.position();
NioByteString.java,length = buffer.remaining();,if (buffer != null ) length = buffer.remaining();
NioByteString.java,"len = Math.min(len, buf.remaining());","if (buf != null ) len = Math.min(len, buf.remaining());"
NioByteString.java,ByteBuffer slice = buffer.slice();,if (buffer != null ) ByteBuffer slice = buffer.slice();
ProtobufLists.java,int size = list.size();,if (list != null ) int size = list.size();
RawMessageInfo.java,char[] infoChars = info.toCharArray();,if (info != null ) char[] infoChars = info.toCharArray();
RopeByteString.java,leftLength = left.size();,if (left != null ) leftLength = left.size();
RopeByteString.java,totalLength = leftLength + right.size();,if (right != null ) totalLength = leftLength + right.size();
RopeByteString.java,final int newLength = left.size() + right.size();,if (right != null ) final int newLength = left.size() + right.size();
RopeByteString.java,int leftSize = left.size();,if (left != null ) int leftSize = left.size();
RopeByteString.java,int rightSize = right.size();,if (right != null ) int rightSize = right.size();
RopeByteString.java,byte b = current.nextByte();,if (current != null ) byte b = current.nextByte();
RopeByteString.java,LeafByteString byteString = pieces.next();,if (pieces != null ) LeafByteString byteString = pieces.next();
RopeByteString.java,int thatHash = otherByteString.peekCachedHashCode();,if (otherByteString != null ) int thatHash = otherByteString.peekCachedHashCode();
RopeByteString.java,LeafByteString thisString = thisIter.next();,if (thisIter != null ) LeafByteString thisString = thisIter.next();
RopeByteString.java,LeafByteString thatString = thatIter.next();,if (thatIter != null ) LeafByteString thatString = thatIter.next();
RopeByteString.java,thisString = thisIter.next();,if (thisIter != null ) thisString = thisIter.next();
RopeByteString.java,thatString = thatIter.next();,if (thatIter != null ) thatString = thatIter.next();
RopeByteString.java,ByteString partialString = prefixesStack.pop();,if (prefixesStack != null ) ByteString partialString = prefixesStack.pop();
RopeByteString.java,ByteString newLeft = prefixesStack.pop();,if (prefixesStack != null ) ByteString newLeft = prefixesStack.pop();
RopeByteString.java,int depthBin = getDepthBinForLength(byteString.size());,if (getDepthBinForLength(byteString != null ) int depthBin = getDepthBinForLength(byteString.size());
RopeByteString.java,ByteString newTree = prefixesStack.pop();,if (prefixesStack != null ) ByteString newTree = prefixesStack.pop();
RopeByteString.java,ByteString left = prefixesStack.pop();,if (prefixesStack != null ) ByteString left = prefixesStack.pop();
RopeByteString.java,depthBin = getDepthBinForLength(newTree.size());,if (getDepthBinForLength(newTree != null ) depthBin = getDepthBinForLength(newTree.size());
RopeByteString.java,ByteString left = prefixesStack.pop();,if (prefixesStack != null ) ByteString left = prefixesStack.pop();
RopeByteString.java,breadCrumbs = new ArrayDeque<>(rbs.getTreeDepth());,if (ArrayDeque<>(rbs != null ) breadCrumbs = new ArrayDeque<>(rbs.getTreeDepth());
RopeByteString.java,currentPiece = pieceIterator.next();,if (pieceIterator != null ) currentPiece = pieceIterator.next();
RopeByteString.java,currentPieceSize = currentPiece.size();,if (currentPiece != null ) currentPieceSize = currentPiece.size();
RopeByteString.java,currentPiece = pieceIterator.next();,if (pieceIterator != null ) currentPiece = pieceIterator.next();
RopeByteString.java,currentPieceSize = currentPiece.size();,if (currentPiece != null ) currentPieceSize = currentPiece.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,Field[] fields = holder.getDeclaredFields();,if (holder != null ) Field[] fields = holder.getDeclaredFields();
SchemaUtil.java,int size = enumList.size();,if (enumList != null ) int size = enumList.size();
SchemaUtil.java,int enumValue = it.next();,if (it != null ) int enumValue = it.next();
SchemaUtil.java,int size = enumList.size();,if (enumList != null ) int size = enumList.size();
SchemaUtil.java,int enumValue = it.next();,if (it != null ) int enumValue = it.next();
SchemaUtil.java,unknownFields = unknownFieldSchema.newBuilder();,if (unknownFieldSchema != null ) unknownFields = unknownFieldSchema.newBuilder();
SmallSortedMap.java,final List value = (List) entry.getValue();,if (entry != null ) final List value = (List) entry.getValue();
SmallSortedMap.java,final List value = (List) entry.getValue();,if (entry != null ) final List value = (List) entry.getValue();
SmallSortedMap.java,this.entryList = Collections.emptyList();,if (Collections != null ) this.entryList = Collections.emptyList();
SmallSortedMap.java,this.overflowEntries = Collections.emptyMap();,if (Collections != null ) this.overflowEntries = Collections.emptyMap();
SmallSortedMap.java,this.overflowEntriesDescending = Collections.emptyMap();,if (Collections != null ) this.overflowEntriesDescending = Collections.emptyMap();
SmallSortedMap.java,final V removed = entryList.remove(index).getValue();,if (entryList != null ) final V removed = entryList.remove(index).getValue();
SmallSortedMap.java,final V existing = get(entry.getKey());,if (get(entry != null ) final V existing = get(entry.getKey());
SmallSortedMap.java,final V value = entry.getValue();,if (entry != null ) final V value = entry.getValue();
SmallSortedMap.java,lazyOverflowIterator = overflowEntries.entrySet().iterator();,if (overflowEntries != null ) lazyOverflowIterator = overflowEntries.entrySet().iterator();
SmallSortedMap.java,private int pos = entryList.size();,if (entryList != null ) private int pos = entryList.size();
SmallSortedMap.java,lazyOverflowIterator = overflowEntriesDescending.entrySet().iterator();,if (overflowEntriesDescending != null ) lazyOverflowIterator = overflowEntriesDescending.entrySet().iterator();
SmallSortedMap.java,h += entryList.get(i).hashCode();,if (entryList != null ) h += entryList.get(i).hashCode();
SmallSortedMap.java,h += overflowEntries.hashCode();,if (overflowEntries != null ) h += overflowEntries.hashCode();
TextFormatEscaper.java,final StringBuilder builder = new StringBuilder(input.size());,if (StringBuilder(input != null ) final StringBuilder builder = new StringBuilder(input.size());
UnknownFieldSchema.java,int tag = reader.getTag();,if (reader != null ) int tag = reader.getTag();
UnknownFieldSetLite.java,final int tag = input.readTag();,if (input != null ) final int tag = input.readTag();
UnknownFieldSetLiteSchema.java,unknownFields = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) unknownFields = UnknownFieldSetLite.newInstance();
UnmodifiableLazyStringList.java,Iterator<String> iter = list.iterator();,if (list != null ) Iterator<String> iter = list.iterator();
Utf8.java,final int offset = buffer.arrayOffset();,if (buffer != null ) final int offset = buffer.arrayOffset();
Utf8.java,final int offset = buffer.arrayOffset();,if (buffer != null ) final int offset = buffer.arrayOffset();
Utf8.java,final int offset = out.arrayOffset();,if (out != null ) final int offset = out.arrayOffset();
Utf8.java,final int inLength = in.length();,if (in != null ) final int inLength = in.length();
Utf8.java,int outIx = out.position();,if (out != null ) int outIx = out.position();
Utf8.java,final int inLimit = in.length();,if (in != null ) final int inLimit = in.length();
Utf8.java,long outIx = address + out.position();,if (out != null ) long outIx = address + out.position();
Utf8.java,final long outLimit = address + out.limit();,if (out != null ) final long outLimit = address + out.limit();
Utf8.java,final int inLimit = in.length();,if (in != null ) final int inLimit = in.length();
TestUtil.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TestUtil.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TestUtil.java,TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();,if (TestAllExtensions != null ) TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();
TestUtil.java,TestPackedTypes.Builder builder = TestPackedTypes.newBuilder();,if (TestPackedTypes != null ) TestPackedTypes.Builder builder = TestPackedTypes.newBuilder();
TestUtil.java,TestUnpackedTypes.Builder builder = TestUnpackedTypes.newBuilder();,if (TestUnpackedTypes != null ) TestUnpackedTypes.Builder builder = TestUnpackedTypes.newBuilder();
TestUtil.java,TestPackedExtensions.Builder builder = TestPackedExtensions.newBuilder();,if (TestPackedExtensions != null ) TestPackedExtensions.Builder builder = TestPackedExtensions.newBuilder();
TestUtil.java,ExtensionRegistryLite registry = ExtensionRegistryLite.newInstance();,if (ExtensionRegistryLite != null ) ExtensionRegistryLite registry = ExtensionRegistryLite.newInstance();
TestUtilLite.java,TestAllTypesLite.Builder builder = TestAllTypesLite.newBuilder();,if (TestAllTypesLite != null ) TestAllTypesLite.Builder builder = TestAllTypesLite.newBuilder();
TestUtilLite.java,TestAllExtensionsLite.Builder builder = TestAllExtensionsLite.newBuilder();,if (TestAllExtensionsLite != null ) TestAllExtensionsLite.Builder builder = TestAllExtensionsLite.newBuilder();
TestUtilLite.java,TestPackedExtensionsLite.Builder builder = TestPackedExtensionsLite.newBuilder();,if (TestPackedExtensionsLite != null ) TestPackedExtensionsLite.Builder builder = TestPackedExtensionsLite.newBuilder();
TestUtilLite.java,ExtensionRegistryLite registry = ExtensionRegistryLite.newInstance();,if (ExtensionRegistryLite != null ) ExtensionRegistryLite registry = ExtensionRegistryLite.newInstance();
AbstractMessageLite.java,final CodedInputStream input = data.newCodedInput();,if (data != null ) final CodedInputStream input = data.newCodedInput();
AbstractMessageLite.java,final CodedInputStream input = data.newCodedInput();,if (data != null ) final CodedInputStream input = data.newCodedInput();
AbstractMessageLite.java,final int result = super.read();,if (super != null ) final int result = super.read();
AbstractMessageLite.java,final int firstByte = input.read();,if (input != null ) final int firstByte = input.read();
AbstractMessageLite.java,int begin = list.size();,if (list != null ) int begin = list.size();
AbstractMessageLite.java,int begin = list.size();,if (list != null ) int begin = list.size();
AbstractParser.java,CodedInputStream input = data.newCodedInput();,if (data != null ) CodedInputStream input = data.newCodedInput();
AbstractParser.java,int firstByte = input.read();,if (input != null ) int firstByte = input.read();
ArrayDecoders.java,this.extensionRegistry = ExtensionRegistryLite.getEmptyRegistry();,if (ExtensionRegistryLite != null ) this.extensionRegistry = ExtensionRegistryLite.getEmptyRegistry();
ArrayDecoders.java,Object result = schema.newInstance();,if (schema != null ) Object result = schema.newInstance();
ArrayDecoders.java,Object result = messageSchema.newInstance();,if (messageSchema != null ) Object result = messageSchema.newInstance();
ArrayDecoders.java,unknownFields = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) unknownFields = UnknownFieldSetLite.newInstance();
ArrayDecoders.java,final UnknownFieldSetLite child = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) final UnknownFieldSetLite child = UnknownFieldSetLite.newInstance();
BinaryReader.java,buffer = bytebuf.array();,if (bytebuf != null ) buffer = bytebuf.array();
BinaryReader.java,initialPos = pos = bytebuf.arrayOffset() + bytebuf.position();,if (bytebuf != null ) initialPos = pos = bytebuf.arrayOffset() + bytebuf.position();
BinaryReader.java,limit = bytebuf.arrayOffset() + bytebuf.limit();,if (bytebuf != null ) limit = bytebuf.arrayOffset() + bytebuf.limit();
BinaryReader.java,T message = schema.newInstance();,if (schema != null ) T message = schema.newInstance();
BinaryReader.java,T message = schema.newInstance();,if (schema != null ) T message = schema.newInstance();
BinaryWriter.java,this.buffer = allocatedBuffer.array();,if (allocatedBuffer != null ) this.buffer = allocatedBuffer.array();
BinaryWriter.java,int arrayOffset = allocatedBuffer.arrayOffset();,if (allocatedBuffer != null ) int arrayOffset = allocatedBuffer.arrayOffset();
BinaryWriter.java,this.limit = arrayOffset + allocatedBuffer.limit();,if (allocatedBuffer != null ) this.limit = arrayOffset + allocatedBuffer.limit();
BinaryWriter.java,this.offset = arrayOffset + allocatedBuffer.position();,if (allocatedBuffer != null ) this.offset = arrayOffset + allocatedBuffer.position();
BinaryWriter.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
BinaryWriter.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
BinaryWriter.java,this.buffer = allocatedBuffer.array();,if (allocatedBuffer != null ) this.buffer = allocatedBuffer.array();
BinaryWriter.java,int arrayOffset = allocatedBuffer.arrayOffset();,if (allocatedBuffer != null ) int arrayOffset = allocatedBuffer.arrayOffset();
BinaryWriter.java,this.limit = arrayOffset + allocatedBuffer.limit();,if (allocatedBuffer != null ) this.limit = arrayOffset + allocatedBuffer.limit();
BinaryWriter.java,this.offset = arrayOffset + allocatedBuffer.position();,if (allocatedBuffer != null ) this.offset = arrayOffset + allocatedBuffer.position();
BinaryWriter.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
BinaryWriter.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
BinaryWriter.java,ByteBuffer nioBuffer = allocatedBuffer.nioBuffer();,if (allocatedBuffer != null ) ByteBuffer nioBuffer = allocatedBuffer.nioBuffer();
BinaryWriter.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
BinaryWriter.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
BinaryWriter.java,ByteBuffer nioBuffer = allocatedBuffer.nioBuffer();,if (allocatedBuffer != null ) ByteBuffer nioBuffer = allocatedBuffer.nioBuffer();
BinaryWriter.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
BinaryWriter.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
ByteBufferWriter.java,final int initialPos = buffer.position();,if (buffer != null ) final int initialPos = buffer.position();
ByteString.java,ByteIterator formerBytes = former.iterator();,if (former != null ) ByteIterator formerBytes = former.iterator();
ByteString.java,ByteIterator latterBytes = latter.iterator();,if (latter != null ) ByteIterator latterBytes = latter.iterator();
ByteString.java,final int offset = buffer.arrayOffset();,if (buffer != null ) final int offset = buffer.arrayOffset();
ByteString.java,result = iterator.next();,if (iterator != null ) result = iterator.next();
ByteString.java,int thatHash = otherAsLiteral.peekCachedHashCode();,if (otherAsLiteral != null ) int thatHash = otherAsLiteral.peekCachedHashCode();
CodedInputStream.java,totalSize += buf.remaining();,if (buf != null ) totalSize += buf.remaining();
CodedInputStream.java,final int b = input.read();,if (input != null ) final int b = input.read();
CodedInputStream.java,final int b = input.read();,if (input != null ) final int b = input.read();
CodedInputStream.java,final int firstByte = input.read();,if (input != null ) final int firstByte = input.read();
CodedInputStream.java,limit = address + buffer.limit();,if (buffer != null ) limit = address + buffer.limit();
CodedInputStream.java,pos = address + buffer.position();,if (buffer != null ) pos = address + buffer.position();
CodedInputStream.java,int prevPos = buffer.position();,if (buffer != null ) int prevPos = buffer.position();
CodedInputStream.java,int prevLimit = buffer.limit();,if (buffer != null ) int prevLimit = buffer.limit();
CodedInputStream.java,iterator = input.iterator();,if (input != null ) iterator = input.iterator();
CodedInputStream.java,currentByteBuffer = iterator.next();,if (iterator != null ) currentByteBuffer = iterator.next();
CodedInputStream.java,currentByteBufferPos = currentByteBuffer.position();,if (currentByteBuffer != null ) currentByteBufferPos = currentByteBuffer.position();
CodedInputStream.java,currentByteBufferLimit = currentByteBuffer.limit();,if (currentByteBuffer != null ) currentByteBufferLimit = currentByteBuffer.limit();
CodedInputStream.java,int prevPos = currentByteBuffer.position();,if (currentByteBuffer != null ) int prevPos = currentByteBuffer.position();
CodedInputStream.java,int prevLimit = currentByteBuffer.limit();,if (currentByteBuffer != null ) int prevLimit = currentByteBuffer.limit();
CodedInputStreamReader.java,tag = input.readTag();,if (input != null ) tag = input.readTag();
CodedInputStreamReader.java,T message = schema.newInstance();,if (schema != null ) T message = schema.newInstance();
CodedInputStreamReader.java,T message = schema.newInstance();,if (schema != null ) T message = schema.newInstance();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedOutputStream.java,ByteBuffer duplicated = value.duplicate();,if (value != null ) ByteBuffer duplicated = value.duplicate();
CodedOutputStream.java,final int length = value.remaining();,if (value != null ) final int length = value.remaining();
CodedOutputStream.java,this.initialPosition = byteBuffer.position();,if (byteBuffer != null ) this.initialPosition = byteBuffer.position();
CodedOutputStream.java,initialPosition = buffer.position();,if (buffer != null ) initialPosition = buffer.position();
CodedOutputStream.java,ByteBuffer duplicated = value.duplicate();,if (value != null ) ByteBuffer duplicated = value.duplicate();
CodedOutputStream.java,final int startPos = buffer.position();,if (buffer != null ) final int startPos = buffer.position();
CodedOutputStream.java,int endOfBytes = buffer.position();,if (buffer != null ) int endOfBytes = buffer.position();
CodedOutputStream.java,initialPosition = address + buffer.position();,if (buffer != null ) initialPosition = address + buffer.position();
CodedOutputStream.java,limit = address + buffer.limit();,if (buffer != null ) limit = address + buffer.limit();
CodedOutputStream.java,ByteBuffer duplicated = value.duplicate();,if (value != null ) ByteBuffer duplicated = value.duplicate();
CodedOutputStream.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
CodedOutputStream.java,ByteBuffer duplicated = value.duplicate();,if (value != null ) ByteBuffer duplicated = value.duplicate();
CodedOutputStream.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
CodedOutputStream.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
CodedOutputStream.java,ByteBuffer duplicated = value.duplicate();,if (value != null ) ByteBuffer duplicated = value.duplicate();
CodedOutputStream.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
ExtensionRegistryLite.java,this.extensionsByNumber = Collections.emptyMap();,if (Collections != null ) this.extensionsByNumber = Collections.emptyMap();
ExtensionRegistryLite.java,this.extensionsByNumber = Collections.emptyMap();,if (Collections != null ) this.extensionsByNumber = Collections.emptyMap();
ExtensionSchemaLite.java,int fieldNumber = extension.getNumber();,if (extension != null ) int fieldNumber = extension.getNumber();
ExtensionSchemaLite.java,value = reader.readDouble();,if (reader != null ) value = reader.readDouble();
ExtensionSchemaLite.java,value = reader.readFloat();,if (reader != null ) value = reader.readFloat();
ExtensionSchemaLite.java,value = reader.readBool();,if (reader != null ) value = reader.readBool();
ExtensionSchemaLite.java,value = reader.readBytes();,if (reader != null ) value = reader.readBytes();
ExtensionSchemaLite.java,value = reader.readString();,if (reader != null ) value = reader.readString();
FieldSet.java,FieldSet<T> clone = FieldSet.newFieldSet();,if (FieldSet != null ) FieldSet<T> clone = FieldSet.newFieldSet();
FieldSet.java,T key = entry.getKey();,if (entry != null ) T key = entry.getKey();
FieldSet.java,Object value = entry.getValue();,if (entry != null ) Object value = entry.getValue();
FieldSet.java,final T descriptor = entry.getKey();,if (entry != null ) final T descriptor = entry.getKey();
FieldSet.java,Object value = entry.getValue();,if (entry != null ) Object value = entry.getValue();
FieldSet.java,final T descriptor = entry.getKey();,if (entry != null ) final T descriptor = entry.getKey();
FieldSet.java,Object otherValue = entry.getValue();,if (entry != null ) Object otherValue = entry.getValue();
FieldSet.java,final T descriptor = entry.getKey();,if (entry != null ) final T descriptor = entry.getKey();
FieldSet.java,Object value = entry.getValue();,if (entry != null ) Object value = entry.getValue();
FieldSet.java,WireFormat.FieldType type = descriptor.getLiteType();,if (descriptor != null ) WireFormat.FieldType type = descriptor.getLiteType();
FieldSet.java,int number = descriptor.getNumber();,if (descriptor != null ) int number = descriptor.getNumber();
FieldSet.java,"size += computeFieldSize(entry.getKey(), entry.getValue());","if (entry != null ) size += computeFieldSize(entry.getKey(), entry.getValue());"
FieldSet.java,"size += computeFieldSize(entry.getKey(), entry.getValue());","if (entry != null ) size += computeFieldSize(entry.getKey(), entry.getValue());"
FieldSet.java,final T descriptor = entry.getKey();,if (entry != null ) final T descriptor = entry.getKey();
FieldSet.java,Object value = entry.getValue();,if (entry != null ) Object value = entry.getValue();
FieldSet.java,WireFormat.FieldType type = descriptor.getLiteType();,if (descriptor != null ) WireFormat.FieldType type = descriptor.getLiteType();
FieldSet.java,int number = descriptor.getNumber();,if (descriptor != null ) int number = descriptor.getNumber();
FieldSet.java,final T descriptor = entry.getKey();,if (entry != null ) final T descriptor = entry.getKey();
FieldSet.java,Object otherValue = entry.getValue();,if (entry != null ) Object otherValue = entry.getValue();
FieldType.java,elementType = javaType.getBoxedType();,if (javaType != null ) elementType = javaType.getBoxedType();
FieldType.java,elementType = javaType.getBoxedType();,if (javaType != null ) elementType = javaType.getBoxedType();
FieldType.java,Type genericType = field.getGenericType();,if (field != null ) Type genericType = field.getGenericType();
FieldType.java,Type[] genericInterfaces = clazz.getGenericInterfaces();,if (clazz != null ) Type[] genericInterfaces = clazz.getGenericInterfaces();
FieldType.java,Type type = clazz.getGenericSuperclass();,if (clazz != null ) Type type = clazz.getGenericSuperclass();
FieldType.java,Type[] superArgs = parameterizedType.getActualTypeArguments();,if (parameterizedType != null ) Type[] superArgs = parameterizedType.getActualTypeArguments();
FieldType.java,clazz = clazz.getSuperclass();,if (clazz != null ) clazz = clazz.getSuperclass();
GeneratedMessageLite.java,protected UnknownFieldSetLite unknownFields = UnknownFieldSetLite.getDefaultInstance();,if (UnknownFieldSetLite != null ) protected UnknownFieldSetLite unknownFields = UnknownFieldSetLite.getDefaultInstance();
GeneratedMessageLite.java,unknownFields = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) unknownFields = UnknownFieldSetLite.newInstance();
GeneratedMessageLite.java,extensions = extensions.clone();,if (extensions != null ) extensions = extensions.clone();
GeneratedMessageLite.java,int rawValue = input.readEnum();,if (input != null ) int rawValue = input.readEnum();
GeneratedMessageLite.java,subBuilder = existingValue.toBuilder();,if (existingValue != null ) subBuilder = existingValue.toBuilder();
GeneratedMessageLite.java,subBuilder = extension.getMessageDefaultInstance().newBuilderForType();,if (extension != null ) subBuilder = extension.getMessageDefaultInstance().newBuilderForType();
GeneratedMessageLite.java,value = subBuilder.build();,if (subBuilder != null ) value = subBuilder.build();
GeneratedMessageLite.java,int rawValue = input.readEnum();,if (input != null ) int rawValue = input.readEnum();
GeneratedMessageLite.java,final int tag = input.readTag();,if (input != null ) final int tag = input.readTag();
GeneratedMessageLite.java,rawBytes = input.readBytes();,if (input != null ) rawBytes = input.readBytes();
GeneratedMessageLite.java,subBuilder = existingValue.toBuilder();,if (existingValue != null ) subBuilder = existingValue.toBuilder();
GeneratedMessageLite.java,subBuilder = extension.getMessageDefaultInstance().newBuilderForType();,if (extension != null ) subBuilder = extension.getMessageDefaultInstance().newBuilderForType();
GeneratedMessageLite.java,MessageLite value = subBuilder.build();,if (subBuilder != null ) MessageLite value = subBuilder.build();
GeneratedMessageLite.java,extensions = extensions.clone();,if (extensions != null ) extensions = extensions.clone();
GeneratedMessageLite.java,next = iter.next();,if (iter != null ) next = iter.next();
GeneratedMessageLite.java,ExtensionDescriptor extension = next.getKey();,if (next != null ) ExtensionDescriptor extension = next.getKey();
GeneratedMessageLite.java,next = iter.next();,if (iter != null ) next = iter.next();
GeneratedMessageLite.java,instance.extensions = instance.extensions.clone();,if (instance != null ) instance.extensions = instance.extensions.clone();
GeneratedMessageLite.java,extensions = extensions.clone();,if (extensions != null ) extensions = extensions.clone();
GeneratedMessageLite.java,Type emptyList = (Type) Collections.emptyList();,if (Collections != null ) Type emptyList = (Type) Collections.emptyList();
GeneratedMessageLite.java,messageClass = regularForm.getClass();,if (regularForm != null ) messageClass = regularForm.getClass();
GeneratedMessageLite.java,messageClassName = messageClass.getName();,if (messageClass != null ) messageClassName = messageClass.getName();
GeneratedMessageLite.java,asBytes = regularForm.toByteArray();,if (regularForm != null ) asBytes = regularForm.toByteArray();
GeneratedMessageLite.java,int size = list.size();,if (list != null ) int size = list.size();
GeneratedMessageLite.java,int size = list.size();,if (list != null ) int size = list.size();
GeneratedMessageLite.java,int size = list.size();,if (list != null ) int size = list.size();
GeneratedMessageLite.java,int size = list.size();,if (list != null ) int size = list.size();
GeneratedMessageLite.java,int size = list.size();,if (list != null ) int size = list.size();
GeneratedMessageLite.java,int size = list.size();,if (list != null ) int size = list.size();
GeneratedMessageLite.java,CodedInputStream input = data.newCodedInput();,if (data != null ) CodedInputStream input = data.newCodedInput();
GeneratedMessageLite.java,int firstByte = input.read();,if (input != null ) int firstByte = input.read();
Internal.java,ByteBuffer temp = source.duplicate();,if (source != null ) ByteBuffer temp = source.duplicate();
Internal.java,ByteBuffer result = ByteBuffer.allocate(temp.capacity());,if (ByteBuffer != null ) ByteBuffer result = ByteBuffer.allocate(temp.capacity());
Internal.java,final ByteBuffer duplicated = bytes.duplicate();,if (bytes != null ) final ByteBuffer duplicated = bytes.duplicate();
Internal.java,int h = bytes.capacity();,if (bytes != null ) int h = bytes.capacity();
IterableByteBufferInputStream.java,iterator = data.iterator();,if (data != null ) iterator = data.iterator();
IterableByteBufferInputStream.java,currentByteBuffer = iterator.next();,if (iterator != null ) currentByteBuffer = iterator.next();
IterableByteBufferInputStream.java,currentByteBufferPos = currentByteBuffer.position();,if (currentByteBuffer != null ) currentByteBufferPos = currentByteBuffer.position();
IterableByteBufferInputStream.java,currentArray = currentByteBuffer.array();,if (currentByteBuffer != null ) currentArray = currentByteBuffer.array();
IterableByteBufferInputStream.java,currentArrayOffset = currentByteBuffer.arrayOffset();,if (currentByteBuffer != null ) currentArrayOffset = currentByteBuffer.arrayOffset();
IterableByteBufferInputStream.java,int prevPos = currentByteBuffer.position();,if (currentByteBuffer != null ) int prevPos = currentByteBuffer.position();
LazyField.java,LazyField field = entry.getValue();,if (entry != null ) LazyField field = entry.getValue();
LazyFieldLite.java,memoizedBytes = value.toByteString();,if (value != null ) memoizedBytes = value.toByteString();
LazyStringArrayList.java,list = new ArrayList<Object>(from.size());,if (ArrayList<Object>(from != null ) list = new ArrayList<Object>(from.size());
ListFieldSchema.java,int size = mine.size();,if (mine != null ) int size = mine.size();
ListFieldSchema.java,int otherSize = other.size();,if (other != null ) int otherSize = other.size();
ListFieldSchema.java,int size = list.size();,if (list != null ) int size = list.size();
ListFieldSchema.java,int size = mine.size();,if (mine != null ) int size = mine.size();
ListFieldSchema.java,int otherSize = other.size();,if (other != null ) int otherSize = other.size();
MapEntryLite.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
MapEntryLite.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
MapFieldSchemaLite.java,mine = mine.mutableCopy();,if (mine != null ) mine = mine.mutableCopy();
MessageSchema.java,String info = messageInfo.getStringInfo();,if (messageInfo != null ) String info = messageInfo.getStringInfo();
MessageSchema.java,final int length = info.length();,if (info != null ) final int length = info.length();
MessageSchema.java,FieldInfo[] fis = messageInfo.getFields();,if (messageInfo != null ) FieldInfo[] fis = messageInfo.getFields();
MessageSchema.java,int[] checkInitialized = messageInfo.getCheckInitialized();,if (messageInfo != null ) int[] checkInitialized = messageInfo.getCheckInitialized();
MessageSchema.java,final int fieldNumber = fi.getFieldNumber();,if (fi != null ) final int fieldNumber = fi.getFieldNumber();
MessageSchema.java,OneofInfo oneof = fi.getOneof();,if (fi != null ) OneofInfo oneof = fi.getOneof();
MessageSchema.java,FieldType type = fi.getType();,if (fi != null ) FieldType type = fi.getType();
MessageSchema.java,typeId = type.id();,if (type != null ) typeId = type.id();
MessageSchema.java,Field presenceField = fi.getPresenceField();,if (fi != null ) Field presenceField = fi.getPresenceField();
MessageSchema.java,presenceMaskShift = Integer.numberOfTrailingZeros(fi.getPresenceMask());,if (Integer != null ) presenceMaskShift = Integer.numberOfTrailingZeros(fi.getPresenceMask());
MessageSchema.java,buffer[bufferIndex] = fi.getFieldNumber();,if (fi != null ) buffer[bufferIndex] = fi.getFieldNumber();
MessageSchema.java,Object messageFieldClass = fi.getMessageFieldClass();,if (fi != null ) Object messageFieldClass = fi.getMessageFieldClass();
MessageSchema.java,protoHash = submessage.hashCode();,if (submessage != null ) protoHash = submessage.hashCode();
MessageSchema.java,protoHash = submessage.hashCode();,if (submessage != null ) protoHash = submessage.hashCode();
MessageSchema.java,size += extensionSchema.getExtensions(message).getSerializedSize();,if (extensionSchema != null ) size += extensionSchema.getExtensions(message).getSerializedSize();
MessageSchema.java,extensionIterator = extensions.iterator();,if (extensions != null ) extensionIterator = extensions.iterator();
MessageSchema.java,nextExtension = extensionIterator.next();,if (extensionIterator != null ) nextExtension = extensionIterator.next();
MessageSchema.java,extensionIterator = extensions.iterator();,if (extensions != null ) extensionIterator = extensions.iterator();
MessageSchema.java,nextExtension = extensionIterator.next();,if (extensionIterator != null ) nextExtension = extensionIterator.next();
MessageSchema.java,extensionIterator = extensions.descendingIterator();,if (extensions != null ) extensionIterator = extensions.descendingIterator();
MessageSchema.java,nextExtension = extensionIterator.next();,if (extensionIterator != null ) nextExtension = extensionIterator.next();
MessageSchema.java,final int number = reader.getFieldNumber();,if (reader != null ) final int number = reader.getFieldNumber();
MessageSchema.java,int enumValue = reader.readEnum();,if (reader != null ) int enumValue = reader.readEnum();
MessageSchema.java,int enumValue = reader.readEnum();,if (reader != null ) int enumValue = reader.readEnum();
MessageSchema.java,unknownFields = unknownFieldSchema.newBuilder();,if (unknownFieldSchema != null ) unknownFields = unknownFieldSchema.newBuilder();
MessageSchema.java,unknownFields = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) unknownFields = UnknownFieldSetLite.newInstance();
MessageSchema.java,final int size = list.size();,if (list != null ) final int size = list.size();
MessageSchema.java,final int size = list.size();,if (list != null ) final int size = list.size();
MessageSchema.java,final int size = list.size();,if (list != null ) final int size = list.size();
MessageSchema.java,unknownFields = unknownFieldSchema.newBuilder();,if (unknownFieldSchema != null ) unknownFields = unknownFieldSchema.newBuilder();
MessageSchema.java,CodedOutputStream codedOutput = codedBuilder.getCodedOutput();,if (codedBuilder != null ) CodedOutputStream codedOutput = codedBuilder.getCodedOutput();
MessageSetSchema.java,int hashCode = unknownFieldSchema.getFromMessage(message).hashCode();,if (unknownFieldSchema != null ) int hashCode = unknownFieldSchema.getFromMessage(message).hashCode();
MessageSetSchema.java,unknownFields = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) unknownFields = UnknownFieldSetLite.newInstance();
MessageSetSchema.java,final int number = reader.getFieldNumber();,if (reader != null ) final int number = reader.getFieldNumber();
MessageSetSchema.java,int startTag = reader.getTag();,if (reader != null ) int startTag = reader.getTag();
MessageSetSchema.java,final int number = reader.getFieldNumber();,if (reader != null ) final int number = reader.getFieldNumber();
MessageSetSchema.java,final int tag = reader.getTag();,if (reader != null ) final int tag = reader.getTag();
MessageSetSchema.java,rawBytes = reader.readBytes();,if (reader != null ) rawBytes = reader.readBytes();
MessageSetSchema.java,size += extensionSchema.getExtensions(message).getMessageSetSerializedSize();,if (extensionSchema != null ) size += extensionSchema.getExtensions(message).getMessageSetSerializedSize();
NioByteString.java,ByteBuffer slice = buffer.slice();,if (buffer != null ) ByteBuffer slice = buffer.slice();
NioByteString.java,bytes = buffer.array();,if (buffer != null ) bytes = buffer.array();
NioByteString.java,offset = buffer.arrayOffset() + buffer.position();,if (buffer != null ) offset = buffer.arrayOffset() + buffer.position();
NioByteString.java,length = buffer.remaining();,if (buffer != null ) length = buffer.remaining();
NioByteString.java,"len = Math.min(len, buf.remaining());","if (buf != null ) len = Math.min(len, buf.remaining());"
NioByteString.java,ByteBuffer slice = buffer.slice();,if (buffer != null ) ByteBuffer slice = buffer.slice();
ProtobufLists.java,int size = list.size();,if (list != null ) int size = list.size();
RawMessageInfo.java,char[] infoChars = info.toCharArray();,if (info != null ) char[] infoChars = info.toCharArray();
RopeByteString.java,leftLength = left.size();,if (left != null ) leftLength = left.size();
RopeByteString.java,totalLength = leftLength + right.size();,if (right != null ) totalLength = leftLength + right.size();
RopeByteString.java,final int newLength = left.size() + right.size();,if (right != null ) final int newLength = left.size() + right.size();
RopeByteString.java,int leftSize = left.size();,if (left != null ) int leftSize = left.size();
RopeByteString.java,int rightSize = right.size();,if (right != null ) int rightSize = right.size();
RopeByteString.java,byte b = current.nextByte();,if (current != null ) byte b = current.nextByte();
RopeByteString.java,LeafByteString byteString = pieces.next();,if (pieces != null ) LeafByteString byteString = pieces.next();
RopeByteString.java,int thatHash = otherByteString.peekCachedHashCode();,if (otherByteString != null ) int thatHash = otherByteString.peekCachedHashCode();
RopeByteString.java,LeafByteString thisString = thisIter.next();,if (thisIter != null ) LeafByteString thisString = thisIter.next();
RopeByteString.java,LeafByteString thatString = thatIter.next();,if (thatIter != null ) LeafByteString thatString = thatIter.next();
RopeByteString.java,thisString = thisIter.next();,if (thisIter != null ) thisString = thisIter.next();
RopeByteString.java,thatString = thatIter.next();,if (thatIter != null ) thatString = thatIter.next();
RopeByteString.java,ByteString partialString = prefixesStack.pop();,if (prefixesStack != null ) ByteString partialString = prefixesStack.pop();
RopeByteString.java,ByteString newLeft = prefixesStack.pop();,if (prefixesStack != null ) ByteString newLeft = prefixesStack.pop();
RopeByteString.java,int depthBin = getDepthBinForLength(byteString.size());,if (getDepthBinForLength(byteString != null ) int depthBin = getDepthBinForLength(byteString.size());
RopeByteString.java,ByteString newTree = prefixesStack.pop();,if (prefixesStack != null ) ByteString newTree = prefixesStack.pop();
RopeByteString.java,ByteString left = prefixesStack.pop();,if (prefixesStack != null ) ByteString left = prefixesStack.pop();
RopeByteString.java,depthBin = getDepthBinForLength(newTree.size());,if (getDepthBinForLength(newTree != null ) depthBin = getDepthBinForLength(newTree.size());
RopeByteString.java,ByteString left = prefixesStack.pop();,if (prefixesStack != null ) ByteString left = prefixesStack.pop();
RopeByteString.java,breadCrumbs = new ArrayDeque<>(rbs.getTreeDepth());,if (ArrayDeque<>(rbs != null ) breadCrumbs = new ArrayDeque<>(rbs.getTreeDepth());
RopeByteString.java,currentPiece = pieceIterator.next();,if (pieceIterator != null ) currentPiece = pieceIterator.next();
RopeByteString.java,currentPieceSize = currentPiece.size();,if (currentPiece != null ) currentPieceSize = currentPiece.size();
RopeByteString.java,currentPiece = pieceIterator.next();,if (pieceIterator != null ) currentPiece = pieceIterator.next();
RopeByteString.java,currentPieceSize = currentPiece.size();,if (currentPiece != null ) currentPieceSize = currentPiece.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,Field[] fields = holder.getDeclaredFields();,if (holder != null ) Field[] fields = holder.getDeclaredFields();
SchemaUtil.java,int size = enumList.size();,if (enumList != null ) int size = enumList.size();
SchemaUtil.java,int enumValue = it.next();,if (it != null ) int enumValue = it.next();
SchemaUtil.java,int size = enumList.size();,if (enumList != null ) int size = enumList.size();
SchemaUtil.java,int enumValue = it.next();,if (it != null ) int enumValue = it.next();
SchemaUtil.java,unknownFields = unknownFieldSchema.newBuilder();,if (unknownFieldSchema != null ) unknownFields = unknownFieldSchema.newBuilder();
SmallSortedMap.java,final List value = (List) entry.getValue();,if (entry != null ) final List value = (List) entry.getValue();
SmallSortedMap.java,final List value = (List) entry.getValue();,if (entry != null ) final List value = (List) entry.getValue();
SmallSortedMap.java,this.entryList = Collections.emptyList();,if (Collections != null ) this.entryList = Collections.emptyList();
SmallSortedMap.java,this.overflowEntries = Collections.emptyMap();,if (Collections != null ) this.overflowEntries = Collections.emptyMap();
SmallSortedMap.java,this.overflowEntriesDescending = Collections.emptyMap();,if (Collections != null ) this.overflowEntriesDescending = Collections.emptyMap();
SmallSortedMap.java,final V removed = entryList.remove(index).getValue();,if (entryList != null ) final V removed = entryList.remove(index).getValue();
SmallSortedMap.java,final V existing = get(entry.getKey());,if (get(entry != null ) final V existing = get(entry.getKey());
SmallSortedMap.java,final V value = entry.getValue();,if (entry != null ) final V value = entry.getValue();
SmallSortedMap.java,lazyOverflowIterator = overflowEntries.entrySet().iterator();,if (overflowEntries != null ) lazyOverflowIterator = overflowEntries.entrySet().iterator();
SmallSortedMap.java,private int pos = entryList.size();,if (entryList != null ) private int pos = entryList.size();
SmallSortedMap.java,lazyOverflowIterator = overflowEntriesDescending.entrySet().iterator();,if (overflowEntriesDescending != null ) lazyOverflowIterator = overflowEntriesDescending.entrySet().iterator();
SmallSortedMap.java,h += entryList.get(i).hashCode();,if (entryList != null ) h += entryList.get(i).hashCode();
SmallSortedMap.java,h += overflowEntries.hashCode();,if (overflowEntries != null ) h += overflowEntries.hashCode();
TextFormatEscaper.java,final StringBuilder builder = new StringBuilder(input.size());,if (StringBuilder(input != null ) final StringBuilder builder = new StringBuilder(input.size());
UnknownFieldSchema.java,int tag = reader.getTag();,if (reader != null ) int tag = reader.getTag();
UnknownFieldSetLite.java,final int tag = input.readTag();,if (input != null ) final int tag = input.readTag();
UnknownFieldSetLiteSchema.java,unknownFields = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) unknownFields = UnknownFieldSetLite.newInstance();
UnmodifiableLazyStringList.java,Iterator<String> iter = list.iterator();,if (list != null ) Iterator<String> iter = list.iterator();
Utf8.java,final int offset = buffer.arrayOffset();,if (buffer != null ) final int offset = buffer.arrayOffset();
Utf8.java,final int offset = buffer.arrayOffset();,if (buffer != null ) final int offset = buffer.arrayOffset();
Utf8.java,final int offset = out.arrayOffset();,if (out != null ) final int offset = out.arrayOffset();
Utf8.java,final int inLength = in.length();,if (in != null ) final int inLength = in.length();
Utf8.java,int outIx = out.position();,if (out != null ) int outIx = out.position();
Utf8.java,final int inLimit = in.length();,if (in != null ) final int inLimit = in.length();
Utf8.java,long outIx = address + out.position();,if (out != null ) long outIx = address + out.position();
Utf8.java,final long outLimit = address + out.limit();,if (out != null ) final long outLimit = address + out.limit();
Utf8.java,final int inLimit = in.length();,if (in != null ) final int inLimit = in.length();
AbstractProto2LiteSchemaTest.java,byte[] data = output.toByteArray();,if (output != null ) byte[] data = output.toByteArray();
AbstractProto2LiteSchemaTest.java,byte[] serializedBytes = expectedMessage.toByteArray();,if (expectedMessage != null ) byte[] serializedBytes = expectedMessage.toByteArray();
AbstractProto2LiteSchemaTest.java,UnknownFieldSetLite unknowns = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite unknowns = UnknownFieldSetLite.newInstance();
AbstractProto2LiteSchemaTest.java,CodedOutputStream packedOut = packedBuilder.getCodedOutput();,if (packedBuilder != null ) CodedOutputStream packedOut = packedBuilder.getCodedOutput();
AbstractProto2LiteSchemaTest.java,int size = unknowns.getSerializedSize();,if (unknowns != null ) int size = unknowns.getSerializedSize();
AbstractProto3LiteSchemaTest.java,byte[] data = output.toByteArray();,if (output != null ) byte[] data = output.toByteArray();
AbstractProto3SchemaTest.java,byte[] data = output.toByteArray();,if (output != null ) byte[] data = output.toByteArray();
AbstractSchemaTest.java,T newMsg = schema.newInstance();,if (schema != null ) T newMsg = schema.newInstance();
AbstractSchemaTest.java,T message = schema.newInstance();,if (schema != null ) T message = schema.newInstance();
AbstractSchemaTest.java,M newMsg = schema.newInstance();,if (schema != null ) M newMsg = schema.newInstance();
AbstractSchemaTest.java,M newMsg = schema.newInstance();,if (schema != null ) M newMsg = schema.newInstance();
ArrayDecodersTest.java,ByteString.Output byteStringOutput = ByteString.newOutput();,if (ByteString != null ) ByteString.Output byteStringOutput = ByteString.newOutput();
BinaryProtocolTest.java,byte[] expectedBytes = expected.toByteArray();,if (expected != null ) byte[] expectedBytes = expected.toByteArray();
BinaryProtocolTest.java,byte[] expectedBytes = expected.toByteArray();,if (expected != null ) byte[] expectedBytes = expected.toByteArray();
BooleanArrayListTest.java,Iterator<Boolean> iterator = list.iterator();,if (list != null ) Iterator<Boolean> iterator = list.iterator();
BooleanArrayListTest.java,iterator = list.iterator();,if (list != null ) iterator = list.iterator();
BoundedByteStringTest.java,byte[] pickled = out.toByteArray();,if (out != null ) byte[] pickled = out.toByteArray();
BoundedByteStringTest.java,Object o = ois.readObject();,if (ois != null ) Object o = ois.readObject();
ByteBufferWriterTest.java,ByteArrayOutputStream os = new ByteArrayOutputStream(buffer.remaining());,if (ByteArrayOutputStream(buffer != null ) ByteArrayOutputStream os = new ByteArrayOutputStream(buffer.remaining());
ByteBufferWriterTest.java,int originalPosition = buf.position();,if (buf != null ) int originalPosition = buf.position();
ByteStringTest.java,Comparator<ByteString> comparator = ByteString.unsignedLexicographicalComparator();,if (ByteString != null ) Comparator<ByteString> comparator = ByteString.unsignedLexicographicalComparator();
ByteStringTest.java,byte[] originalValue = byteString.toByteArray();,if (byteString != null ) byte[] originalValue = byteString.toByteArray();
ByteStringTest.java,byte[] newValue = byteString.toByteArray();,if (byteString != null ) byte[] newValue = byteString.toByteArray();
ByteStringTest.java,ByteString byteString = output.toByteString();,if (output != null ) ByteString byteString = output.toByteString();
ByteStringTest.java,ByteString byteString = output.toByteString();,if (output != null ) ByteString byteString = output.toByteString();
ByteStringTest.java,ByteString byteString = output.toByteString();,if (output != null ) ByteString byteString = output.toByteString();
ByteStringTest.java,ByteString byteString = output.toByteString();,if (output != null ) ByteString byteString = output.toByteString();
ByteStringTest.java,ByteString byteString = ByteString.newOutput().toByteString();,if (ByteString != null ) ByteString byteString = ByteString.newOutput().toByteString();
ByteStringTest.java,ByteString byteString = os.toByteString();,if (os != null ) ByteString byteString = os.toByteString();
ByteStringTest.java,byte[] oldValue = byteString.toByteArray();,if (byteString != null ) byte[] oldValue = byteString.toByteArray();
ByteStringTest.java,byte[] newValue = byteString.toByteArray();,if (byteString != null ) byte[] newValue = byteString.toByteArray();
ByteStringTest.java,ByteString byteString = builder.build();,if (builder != null ) ByteString byteString = builder.build();
ByteStringTest.java,byte[] substringBytes = compositeSubstring.toByteArray();,if (compositeSubstring != null ) byte[] substringBytes = compositeSubstring.toByteArray();
ByteStringTest.java,Iterator<ByteString> iter = pieces.iterator();,if (pieces != null ) Iterator<ByteString> iter = pieces.iterator();
ByteStringTest.java,ByteString concatenatedString = iter.next();,if (iter != null ) ByteString concatenatedString = iter.next();
ByteStringTest.java,concatenatedString = concatenatedString.concat(iter.next());,if (concatenatedString != null ) concatenatedString = concatenatedString.concat(iter.next());
ByteStringTest.java,ByteString.ByteIterator duoIter = duo.iterator();,if (duo != null ) ByteString.ByteIterator duoIter = duo.iterator();
ByteStringTest.java,ByteString.ByteIterator quintetIter = quintet.iterator();,if (quintet != null ) ByteString.ByteIterator quintetIter = quintet.iterator();
ByteStringTest.java,stillEqual = (duoIter.nextByte() == quintetIter.nextByte());,if (quintetIter != null ) stillEqual = (duoIter.nextByte() == quintetIter.nextByte());
CachedFieldSizeTest.java,TestCachedFieldSizeMessage.Builder builder = TestCachedFieldSizeMessage.newBuilder();,if (TestCachedFieldSizeMessage != null ) TestCachedFieldSizeMessage.Builder builder = TestCachedFieldSizeMessage.newBuilder();
CachedFieldSizeTest.java,TestCachedFieldSizeMessage message = builder.build();,if (builder != null ) TestCachedFieldSizeMessage message = builder.build();
CodedAdapterTest.java,byte[] expectedBytes = expected.toByteArray();,if (expected != null ) byte[] expectedBytes = expected.toByteArray();
CodedAdapterTest.java,byte[] expectedBytes = expected.toByteArray();,if (expected != null ) byte[] expectedBytes = expected.toByteArray();
CodedAdapterTest.java,T msg = schema.newInstance();,if (schema != null ) T msg = schema.newInstance();
CodedOutputStreamTest.java,ByteBuffer dup = buffer.duplicate();,if (buffer != null ) ByteBuffer dup = buffer.duplicate();
CodedOutputStreamTest.java,ByteBuffer dup = buffer.duplicate();,if (buffer != null ) ByteBuffer dup = buffer.duplicate();
CodedOutputStreamTest.java,TestAllTypes message = TestUtil.getAllSet();,if (TestUtil != null ) TestAllTypes message = TestUtil.getAllSet();
CodedOutputStreamTest.java,Coder coder = outputType.newCoder(message.getSerializedSize());,if (outputType != null ) Coder coder = outputType.newCoder(message.getSerializedSize());
CodedOutputStreamTest.java,byte[] rawBytes = coder.toByteArray();,if (coder != null ) byte[] rawBytes = coder.toByteArray();
CodedOutputStreamTest.java,byte[] expectedBytes = TestUtil.getGoldenPackedFieldsMessage().toByteArray();,if (TestUtil != null ) byte[] expectedBytes = TestUtil.getGoldenPackedFieldsMessage().toByteArray();
CodedOutputStreamTest.java,TestPackedTypes message = TestUtil.getPackedSet();,if (TestUtil != null ) TestPackedTypes message = TestUtil.getPackedSet();
CodedOutputStreamTest.java,Coder coder = outputType.newCoder(message.getSerializedSize());,if (outputType != null ) Coder coder = outputType.newCoder(message.getSerializedSize());
CodedOutputStreamTest.java,byte[] rawBytes = coder.toByteArray();,if (coder != null ) byte[] rawBytes = coder.toByteArray();
CodedOutputStreamTest.java,Coder coder = outputType.newCoder(message.getSerializedSize());,if (outputType != null ) Coder coder = outputType.newCoder(message.getSerializedSize());
CodedOutputStreamTest.java,byte[] rawBytes = coder.toByteArray();,if (coder != null ) byte[] rawBytes = coder.toByteArray();
CodedOutputStreamTest.java,byte[] result = outputStream.toByteArray();,if (outputStream != null ) byte[] result = outputStream.toByteArray();
CodedOutputStreamTest.java,Coder coder = outputType.newCoder(testAllTypes.getSerializedSize());,if (outputType != null ) Coder coder = outputType.newCoder(testAllTypes.getSerializedSize());
CodedOutputStreamTest.java,byte[] bytes = coder.toByteArray();,if (coder != null ) byte[] bytes = coder.toByteArray();
CodedOutputStreamTest.java,byte[] bytes = coder.toByteArray();,if (coder != null ) byte[] bytes = coder.toByteArray();
DoubleArrayListTest.java,Iterator<Double> iterator = list.iterator();,if (list != null ) Iterator<Double> iterator = list.iterator();
DoubleArrayListTest.java,iterator = list.iterator();,if (list != null ) iterator = list.iterator();
ExperimentalSerializationUtil.java,BinaryWriter writer = BinaryWriter.newHeapInstance(BufferAllocator.unpooled());,if (BinaryWriter != null ) BinaryWriter writer = BinaryWriter.newHeapInstance(BufferAllocator.unpooled());
ExperimentalSerializationUtil.java,Queue<AllocatedBuffer> buffers = writer.complete();,if (writer != null ) Queue<AllocatedBuffer> buffers = writer.complete();
ExperimentalSerializationUtil.java,AllocatedBuffer buffer = buffers.poll();,if (buffers != null ) AllocatedBuffer buffer = buffers.poll();
ExperimentalSerializationUtil.java,int length = buffer.limit() - buffer.position();,if (buffer != null ) int length = buffer.limit() - buffer.position();
ExperimentalSerializationUtil.java,T msg = schema.newInstance();,if (schema != null ) T msg = schema.newInstance();
ExperimentalSerializationUtil.java,T msg = schema.newInstance();,if (schema != null ) T msg = schema.newInstance();
ExperimentalTestDataProvider.java,value = RANDOM.nextDouble();,if (RANDOM != null ) value = RANDOM.nextDouble();
ExperimentalTestDataProvider.java,value = RANDOM.nextFloat();,if (RANDOM != null ) value = RANDOM.nextFloat();
FloatArrayListTest.java,Iterator<Float> iterator = list.iterator();,if (list != null ) Iterator<Float> iterator = list.iterator();
FloatArrayListTest.java,iterator = list.iterator();,if (list != null ) iterator = list.iterator();
IntArrayListTest.java,Iterator<Integer> iterator = list.iterator();,if (list != null ) Iterator<Integer> iterator = list.iterator();
IntArrayListTest.java,iterator = list.iterator();,if (list != null ) iterator = list.iterator();
IsValidUtf8TestUtil.java,SoftReference<ByteBuffer> ref = directBuffer.get();,if (directBuffer != null ) SoftReference<ByteBuffer> ref = directBuffer.get();
IsValidUtf8TestUtil.java,int charLen = cb.position();,if (cb != null ) int charLen = cb.position();
IsValidUtf8TestUtil.java,int bytesLen = bbReencoded.position();,if (bbReencoded != null ) int bytesLen = bbReencoded.position();
LazyFieldLiteTest.java,MessageLite message = TestUtil.getAllSet();,if (TestUtil != null ) MessageLite message = TestUtil.getAllSet();
LazyFieldLiteTest.java,TestAllExtensions message = TestUtil.getAllExtensionsSet();,if (TestUtil != null ) TestAllExtensions message = TestUtil.getAllExtensionsSet();
LazyFieldLiteTest.java,MessageLite message = TestUtil.getAllSet();,if (TestUtil != null ) MessageLite message = TestUtil.getAllSet();
LazyFieldLiteTest.java,message = lazyField.getValue(TestAllTypes.getDefaultInstance());,if (lazyField != null ) message = lazyField.getValue(TestAllTypes.getDefaultInstance());
LazyFieldLiteTest.java,TestAllExtensions message = TestUtil.getAllExtensionsSet();,if (TestUtil != null ) TestAllExtensions message = TestUtil.getAllExtensionsSet();
LazyFieldLiteTest.java,MessageLite value = lazyField.getValue(TestAllExtensions.getDefaultInstance());,if (lazyField != null ) MessageLite value = lazyField.getValue(TestAllExtensions.getDefaultInstance());
LazyFieldLiteTest.java,MessageLite message = TestUtil.getAllSet();,if (TestUtil != null ) MessageLite message = TestUtil.getAllSet();
LazyFieldLiteTest.java,TestAllExtensions message = TestUtil.getAllExtensionsSet();,if (TestUtil != null ) TestAllExtensions message = TestUtil.getAllExtensionsSet();
LazyFieldLiteTest.java,MessageLite message = TestUtil.getAllSet();,if (TestUtil != null ) MessageLite message = TestUtil.getAllSet();
LazyFieldLiteTest.java,TestAllExtensions message = TestUtil.getAllExtensionsSet();,if (TestUtil != null ) TestAllExtensions message = TestUtil.getAllExtensionsSet();
LazyFieldLiteTest.java,TestAllExtensions message = TestUtil.getAllExtensionsSet();,if (TestUtil != null ) TestAllExtensions message = TestUtil.getAllExtensionsSet();
LazyFieldLiteTest.java,TestAllExtensions emptyMessage = TestAllExtensions.newBuilder().build();,if (TestAllExtensions != null ) TestAllExtensions emptyMessage = TestAllExtensions.newBuilder().build();
LazyFieldLiteTest.java,ExtensionRegistryLite emptyRegistry = ExtensionRegistryLite.getEmptyRegistry();,if (ExtensionRegistryLite != null ) ExtensionRegistryLite emptyRegistry = ExtensionRegistryLite.getEmptyRegistry();
LazyFieldLiteTest.java,ByteString bytes = message.toByteString();,if (message != null ) ByteString bytes = message.toByteString();
LazyFieldLiteTest.java,TestAllTypes.Builder builder = TestUtil.getAllSet().toBuilder();,if (TestUtil != null ) TestAllTypes.Builder builder = TestUtil.getAllSet().toBuilder();
LazyFieldLiteTest.java,MessageLite newMessage = builder.build();,if (builder != null ) MessageLite newMessage = builder.build();
LazyMessageLiteTest.java,outer = LazyMessageLite.parseFrom(outer.toByteArray());,if (LazyMessageLite != null ) outer = LazyMessageLite.parseFrom(outer.toByteArray());
LazyMessageLiteTest.java,LazyMessageLite outer = LazyMessageLite.getDefaultInstance();,if (LazyMessageLite != null ) LazyMessageLite outer = LazyMessageLite.getDefaultInstance();
LazyMessageLiteTest.java,LazyMessageLite.Builder outerBuilder = LazyMessageLite.newBuilder();,if (LazyMessageLite != null ) LazyMessageLite.Builder outerBuilder = LazyMessageLite.newBuilder();
LazyMessageLiteTest.java,LazyMessageLite outer = outerBuilder.build();,if (outerBuilder != null ) LazyMessageLite outer = outerBuilder.build();
LazyMessageLiteTest.java,outer = outerBuilder.build();,if (outerBuilder != null ) outer = outerBuilder.build();
LazyMessageLiteTest.java,LazyMessageLite outerMerging = LazyMessageLite.getDefaultInstance();,if (LazyMessageLite != null ) LazyMessageLite outerMerging = LazyMessageLite.getDefaultInstance();
LazyMessageLiteTest.java,LazyInnerMessageLite inner = LazyInnerMessageLite.getDefaultInstance();,if (LazyInnerMessageLite != null ) LazyInnerMessageLite inner = LazyInnerMessageLite.getDefaultInstance();
LazyMessageLiteTest.java,ByteString bytes = outer.toByteString();,if (outer != null ) ByteString bytes = outer.toByteString();
LazyMessageLiteTest.java,LazyInnerMessageLite.Builder innerBuilder = LazyInnerMessageLite.newBuilder();,if (LazyInnerMessageLite != null ) LazyInnerMessageLite.Builder innerBuilder = LazyInnerMessageLite.newBuilder();
LazyMessageLiteTest.java,LazyInnerMessageLite innerMessage = innerBuilder.build();,if (innerBuilder != null ) LazyInnerMessageLite innerMessage = innerBuilder.build();
LazyStringArrayListTest.java,List<ByteString> byteStringList = list.asByteStringList();,if (list != null ) List<ByteString> byteStringList = list.asByteStringList();
LazyStringArrayListTest.java,List<ByteString> byteStringList = list.asByteStringList();,if (list != null ) List<ByteString> byteStringList = list.asByteStringList();
LazyStringArrayListTest.java,Iterator<String> iterator = list.iterator();,if (list != null ) Iterator<String> iterator = list.iterator();
LazyStringArrayListTest.java,iterator = list.iterator();,if (list != null ) iterator = list.iterator();
LazyStringArrayListTest.java,iterator = list.iterator();,if (list != null ) iterator = list.iterator();
LiteEqualsAndHashTest.java,TestOneofEquals.Builder builder = TestOneofEquals.newBuilder();,if (TestOneofEquals != null ) TestOneofEquals.Builder builder = TestOneofEquals.newBuilder();
LiteEqualsAndHashTest.java,Foo fooWithValueAndUnknownFields = Foo.parseFrom(fooWithValueAndExtension.toByteArray());,if (Foo != null ) Foo fooWithValueAndUnknownFields = Foo.parseFrom(fooWithValueAndExtension.toByteArray());
LiteralByteStringTest.java,ByteString.ByteIterator iter = stringUnderTest.iterator();,if (stringUnderTest != null ) ByteString.ByteIterator iter = stringUnderTest.iterator();
LiteralByteStringTest.java,InputStream stream = stringUnderTest.newInput();,if (stringUnderTest != null ) InputStream stream = stringUnderTest.newInput();
LiteralByteStringTest.java,InputStream stream = stringUnderTest.newInput();,if (stringUnderTest != null ) InputStream stream = stringUnderTest.newInput();
LiteralByteStringTest.java,int available = stream.available();,if (stream != null ) int available = stream.available();
LiteralByteStringTest.java,available = stream.available();,if (stream != null ) available = stream.available();
LiteralByteStringTest.java,ByteBuffer byteBuffer = stringUnderTest.asReadOnlyByteBuffer();,if (stringUnderTest != null ) ByteBuffer byteBuffer = stringUnderTest.asReadOnlyByteBuffer();
LiteralByteStringTest.java,List<ByteBuffer> byteBuffers = stringUnderTest.asReadOnlyByteBufferList();,if (stringUnderTest != null ) List<ByteBuffer> byteBuffers = stringUnderTest.asReadOnlyByteBufferList();
LiteralByteStringTest.java,int thisLength = byteBuffer.remaining();,if (byteBuffer != null ) int thisLength = byteBuffer.remaining();
LiteralByteStringTest.java,byte[] roundTripBytes = stringUnderTest.toByteArray();,if (stringUnderTest != null ) byte[] roundTripBytes = stringUnderTest.toByteArray();
LiteralByteStringTest.java,byte[] roundTripBytes = bos.toByteArray();,if (bos != null ) byte[] roundTripBytes = bos.toByteArray();
LiteralByteStringTest.java,ByteString.Output output = ByteString.newOutput();,if (ByteString != null ) ByteString.Output output = ByteString.newOutput();
LiteralByteStringTest.java,int hash = stringUnderTest.hashCode();,if (stringUnderTest != null ) int hash = stringUnderTest.hashCode();
LiteralByteStringTest.java,InputStream input = stringUnderTest.newInput();,if (stringUnderTest != null ) InputStream input = stringUnderTest.newInput();
LiteralByteStringTest.java,stillEqual = (expectedInt == input.read());,if (input != null ) stillEqual = (expectedInt == input.read());
LiteralByteStringTest.java,InputStream input = stringUnderTest.newInput();,if (stringUnderTest != null ) InputStream input = stringUnderTest.newInput();
LiteralByteStringTest.java,InputStream input = stringUnderTest.newInput();,if (stringUnderTest != null ) InputStream input = stringUnderTest.newInput();
LiteralByteStringTest.java,int stringSize = stringUnderTest.size();,if (stringUnderTest != null ) int stringSize = stringUnderTest.size();
LiteralByteStringTest.java,CodedInputStream cis = stringUnderTest.newCodedInput();,if (stringUnderTest != null ) CodedInputStream cis = stringUnderTest.newCodedInput();
LiteralByteStringTest.java,byte[] pickled = out.toByteArray();,if (out != null ) byte[] pickled = out.toByteArray();
LiteralByteStringTest.java,Object o = ois.readObject();,if (ois != null ) Object o = ois.readObject();
LongArrayListTest.java,Iterator<Long> iterator = list.iterator();,if (list != null ) Iterator<Long> iterator = list.iterator();
LongArrayListTest.java,iterator = list.iterator();,if (list != null ) iterator = list.iterator();
MapForProto2LiteTest.java,TestMap.Builder mapBuilder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder mapBuilder = TestMap.newBuilder();
MapForProto2LiteTest.java,TestMap map = mapBuilder.build();,if (mapBuilder != null ) TestMap map = mapBuilder.build();
MapForProto2LiteTest.java,TestMap.Builder mapBuilder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder mapBuilder = TestMap.newBuilder();
MapForProto2LiteTest.java,TestMap map = mapBuilder.build();,if (mapBuilder != null ) TestMap map = mapBuilder.build();
MapForProto2LiteTest.java,mapBuilder = map.toBuilder();,if (map != null ) mapBuilder = map.toBuilder();
MapForProto2LiteTest.java,map = mapBuilder.build();,if (mapBuilder != null ) map = mapBuilder.build();
MapForProto2LiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapForProto2LiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapForProto2LiteTest.java,message = builder.build();,if (builder != null ) message = builder.build();
MapForProto2LiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapForProto2LiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapForProto2LiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapForProto2LiteTest.java,builder = message.toBuilder();,if (message != null ) builder = message.toBuilder();
MapForProto2LiteTest.java,message = builder.build();,if (builder != null ) message = builder.build();
MapForProto2LiteTest.java,builder = message.toBuilder();,if (message != null ) builder = message.toBuilder();
MapForProto2LiteTest.java,message = builder.build();,if (builder != null ) message = builder.build();
MapForProto2LiteTest.java,builder = message.toBuilder();,if (message != null ) builder = message.toBuilder();
MapForProto2LiteTest.java,message = builder.build();,if (builder != null ) message = builder.build();
MapForProto2LiteTest.java,TestMap.Builder sourceBuilder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder sourceBuilder = TestMap.newBuilder();
MapForProto2LiteTest.java,TestMap source = sourceBuilder.build();,if (sourceBuilder != null ) TestMap source = sourceBuilder.build();
MapForProto2LiteTest.java,TestMap.Builder destination = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder destination = TestMap.newBuilder();
MapForProto2LiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapForProto2LiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapForProto2LiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapForProto2LiteTest.java,builder = message.toBuilder();,if (message != null ) builder = message.toBuilder();
MapForProto2LiteTest.java,message = builder.build();,if (builder != null ) message = builder.build();
MapForProto2LiteTest.java,builder = message.toBuilder();,if (message != null ) builder = message.toBuilder();
MapForProto2LiteTest.java,message = builder.build();,if (builder != null ) message = builder.build();
MapForProto2LiteTest.java,map = (TestMap) expected.getUnfinishedMessage();,if (expected != null ) map = (TestMap) expected.getUnfinishedMessage();
MapForProto2LiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapForProto2LiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapForProto2LiteTest.java,TestMap.Builder other = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder other = TestMap.newBuilder();
MapForProto2LiteTest.java,data = message.toByteString();,if (message != null ) data = message.toByteString();
MapForProto2LiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapForProto2LiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapForProto2LiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapForProto2LiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapForProto2LiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapForProto2LiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapForProto2LiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapForProto2LiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapForProto2LiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapForProto2LiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapForProto2LiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap.Builder usingMutableMapBuilder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder usingMutableMapBuilder = TestMap.newBuilder();
MapLiteTest.java,TestMap usingMutableMap = usingMutableMapBuilder.build();,if (usingMutableMapBuilder != null ) TestMap usingMutableMap = usingMutableMapBuilder.build();
MapLiteTest.java,TestMap.Builder usingAccessorsBuilder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder usingAccessorsBuilder = TestMap.newBuilder();
MapLiteTest.java,TestMap usingAccessors = usingAccessorsBuilder.build();,if (usingAccessorsBuilder != null ) TestMap usingAccessors = usingAccessorsBuilder.build();
MapLiteTest.java,TestMap.Builder mapBuilder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder mapBuilder = TestMap.newBuilder();
MapLiteTest.java,TestMap map = mapBuilder.build();,if (mapBuilder != null ) TestMap map = mapBuilder.build();
MapLiteTest.java,mapBuilder = map.toBuilder();,if (map != null ) mapBuilder = map.toBuilder();
MapLiteTest.java,map = mapBuilder.build();,if (mapBuilder != null ) map = mapBuilder.build();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapLiteTest.java,message = builder.build();,if (builder != null ) message = builder.build();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapLiteTest.java,builder = message.toBuilder();,if (message != null ) builder = message.toBuilder();
MapLiteTest.java,message = builder.build();,if (builder != null ) message = builder.build();
MapLiteTest.java,builder = message.toBuilder();,if (message != null ) builder = message.toBuilder();
MapLiteTest.java,message = builder.build();,if (builder != null ) message = builder.build();
MapLiteTest.java,builder = message.toBuilder();,if (message != null ) builder = message.toBuilder();
MapLiteTest.java,message = builder.build();,if (builder != null ) message = builder.build();
MapLiteTest.java,TestMap.Builder sourceBuilder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder sourceBuilder = TestMap.newBuilder();
MapLiteTest.java,TestMap source = sourceBuilder.build();,if (sourceBuilder != null ) TestMap source = sourceBuilder.build();
MapLiteTest.java,TestMap.Builder destination = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder destination = TestMap.newBuilder();
MapLiteTest.java,TestMap source = sourceBuilder.build();,if (sourceBuilder != null ) TestMap source = sourceBuilder.build();
MapLiteTest.java,TestMap.Builder destinationBuilder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder destinationBuilder = TestMap.newBuilder();
MapLiteTest.java,TestMap destination = destinationBuilder.build();,if (destinationBuilder != null ) TestMap destination = destinationBuilder.build();
MapLiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapLiteTest.java,builder = message.toBuilder();,if (message != null ) builder = message.toBuilder();
MapLiteTest.java,message = builder.build();,if (builder != null ) message = builder.build();
MapLiteTest.java,builder = message.toBuilder();,if (message != null ) builder = message.toBuilder();
MapLiteTest.java,message = builder.build();,if (builder != null ) message = builder.build();
MapLiteTest.java,map = (TestMap) expected.getUnfinishedMessage();,if (expected != null ) map = (TestMap) expected.getUnfinishedMessage();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapLiteTest.java,TestMap.Builder other = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder other = TestMap.newBuilder();
MapLiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapLiteTest.java,message = builder.build();,if (builder != null ) message = builder.build();
MapLiteTest.java,message = TestMap.parseFrom(message.toByteString());,if (TestMap != null ) message = TestMap.parseFrom(message.toByteString());
MapLiteTest.java,builder = message.toBuilder();,if (message != null ) builder = message.toBuilder();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
NioByteStringTest.java,String actualClassName = object.getClass().getName();,if (object != null ) String actualClassName = object.getClass().getName();
NioByteStringTest.java,ByteString.ByteIterator iter = testString.iterator();,if (testString != null ) ByteString.ByteIterator iter = testString.iterator();
NioByteStringTest.java,InputStream stream = testString.newInput();,if (testString != null ) InputStream stream = testString.newInput();
NioByteStringTest.java,InputStream stream = testString.newInput();,if (testString != null ) InputStream stream = testString.newInput();
NioByteStringTest.java,ByteBuffer byteBuffer = testString.asReadOnlyByteBuffer();,if (testString != null ) ByteBuffer byteBuffer = testString.asReadOnlyByteBuffer();
NioByteStringTest.java,List<ByteBuffer> byteBuffers = testString.asReadOnlyByteBufferList();,if (testString != null ) List<ByteBuffer> byteBuffers = testString.asReadOnlyByteBufferList();
NioByteStringTest.java,int thisLength = byteBuffer.remaining();,if (byteBuffer != null ) int thisLength = byteBuffer.remaining();
NioByteStringTest.java,byte[] roundTripBytes = testString.toByteArray();,if (testString != null ) byte[] roundTripBytes = testString.toByteArray();
NioByteStringTest.java,byte[] roundTripBytes = bos.toByteArray();,if (bos != null ) byte[] roundTripBytes = bos.toByteArray();
NioByteStringTest.java,ByteString.Output output = ByteString.newOutput();,if (ByteString != null ) ByteString.Output output = ByteString.newOutput();
NioByteStringTest.java,int hash = testString.hashCode();,if (testString != null ) int hash = testString.hashCode();
NioByteStringTest.java,InputStream input = testString.newInput();,if (testString != null ) InputStream input = testString.newInput();
NioByteStringTest.java,stillEqual = (expectedInt == input.read());,if (input != null ) stillEqual = (expectedInt == input.read());
NioByteStringTest.java,InputStream input = testString.newInput();,if (testString != null ) InputStream input = testString.newInput();
NioByteStringTest.java,int stringSize = testString.size();,if (testString != null ) int stringSize = testString.size();
NioByteStringTest.java,CodedInputStream cis = testString.newCodedInput();,if (testString != null ) CodedInputStream cis = testString.newCodedInput();
NioByteStringTest.java,byte[] pickled = out.toByteArray();,if (out != null ) byte[] pickled = out.toByteArray();
NioByteStringTest.java,Object o = ois.readObject();,if (ois != null ) Object o = ois.readObject();
ParserLiteTest.java,Parser<MessageLite> parser = (Parser<MessageLite>) message.getParserForType();,if (message != null ) Parser<MessageLite> parser = (Parser<MessageLite>) message.getParserForType();
ParserLiteTest.java,TestPackedExtensionsLite packedMessage = TestUtilLite.getLitePackedExtensionsSet();,if (TestUtilLite != null ) TestPackedExtensionsLite packedMessage = TestUtilLite.getLitePackedExtensionsSet();
ParserLiteTest.java,InputStream input = new ByteArrayInputStream(output.toByteArray());,if (ByteArrayInputStream(output != null ) InputStream input = new ByteArrayInputStream(output.toByteArray());
ParserLiteTest.java,TestAllTypesLite.Builder builder = TestAllTypesLite.newBuilder();,if (TestAllTypesLite != null ) TestAllTypesLite.Builder builder = TestAllTypesLite.newBuilder();
ParserLiteTest.java,ExtensionRegistryLite registry = ExtensionRegistryLite.newInstance();,if (ExtensionRegistryLite != null ) ExtensionRegistryLite registry = ExtensionRegistryLite.newInstance();
Proto2MessageInfoFactory.java,StructuralMessageInfo.Builder builder = StructuralMessageInfo.newBuilder();,if (StructuralMessageInfo != null ) StructuralMessageInfo.Builder builder = StructuralMessageInfo.newBuilder();
Proto3MessageInfoFactory.java,StructuralMessageInfo.Builder builder = StructuralMessageInfo.newBuilder();,if (StructuralMessageInfo != null ) StructuralMessageInfo.Builder builder = StructuralMessageInfo.newBuilder();
Proto3MessageLiteInfoFactory.java,StructuralMessageInfo.Builder builder = StructuralMessageInfo.newBuilder();,if (StructuralMessageInfo != null ) StructuralMessageInfo.Builder builder = StructuralMessageInfo.newBuilder();
ProtobufArrayListTest.java,Iterator<Integer> iterator = list.iterator();,if (list != null ) Iterator<Integer> iterator = list.iterator();
ProtobufArrayListTest.java,iterator = list.iterator();,if (list != null ) iterator = list.iterator();
ProtobufArrayListTest.java,iterator = list.iterator();,if (list != null ) iterator = list.iterator();
RopeByteStringSubstringTest.java,Iterator<ByteString> iter = ByteStringTest.makeConcretePieces(sourceBytes).iterator();,if (ByteStringTest != null ) Iterator<ByteString> iter = ByteStringTest.makeConcretePieces(sourceBytes).iterator();
RopeByteStringSubstringTest.java,ByteString sourceString = iter.next();,if (iter != null ) ByteString sourceString = iter.next();
RopeByteStringSubstringTest.java,sourceString = sourceString.concat(iter.next());,if (sourceString != null ) sourceString = sourceString.concat(iter.next());
RopeByteStringSubstringTest.java,StringBuilder builder = new StringBuilder(copies * sourceString.length());,if (sourceString != null ) StringBuilder builder = new StringBuilder(copies * sourceString.length());
RopeByteStringSubstringTest.java,String testString = builder.toString();,if (builder != null ) String testString = builder.toString();
RopeByteStringSubstringTest.java,StringBuilder builder = new StringBuilder(copies * sourceString.length());,if (sourceString != null ) StringBuilder builder = new StringBuilder(copies * sourceString.length());
RopeByteStringSubstringTest.java,String testString = builder.toString();,if (builder != null ) String testString = builder.toString();
RopeByteStringTest.java,Iterator<ByteString> iter = ByteStringTest.makeConcretePieces(referenceBytes).iterator();,if (ByteStringTest != null ) Iterator<ByteString> iter = ByteStringTest.makeConcretePieces(referenceBytes).iterator();
RopeByteStringTest.java,stringUnderTest = iter.next();,if (iter != null ) stringUnderTest = iter.next();
RopeByteStringTest.java,stringUnderTest = stringUnderTest.concat(iter.next());,if (stringUnderTest != null ) stringUnderTest = stringUnderTest.concat(iter.next());
RopeByteStringTest.java,StringBuilder builder = new StringBuilder(copies * sourceString.length());,if (sourceString != null ) StringBuilder builder = new StringBuilder(copies * sourceString.length());
RopeByteStringTest.java,String testString = builder.toString();,if (builder != null ) String testString = builder.toString();
RopeByteStringTest.java,StringBuilder builder = new StringBuilder(copies * sourceString.length());,if (sourceString != null ) StringBuilder builder = new StringBuilder(copies * sourceString.length());
RopeByteStringTest.java,String testString = builder.toString();,if (builder != null ) String testString = builder.toString();
RopeByteStringTest.java,byte[] pickled = out.toByteArray();,if (out != null ) byte[] pickled = out.toByteArray();
RopeByteStringTest.java,Object o = ois.readObject();,if (ois != null ) Object o = ois.readObject();
SmallSortedMapTest.java,Set<Integer> keySet = map.keySet();,if (map != null ) Set<Integer> keySet = map.keySet();
SmallSortedMapTest.java,Iterator<Integer> keys = keySet.iterator();,if (keySet != null ) Iterator<Integer> keys = keySet.iterator();
SmallSortedMapTest.java,Integer key = keys.next();,if (keys != null ) Integer key = keys.next();
TestSchemas.java,Protobuf protobuf = Protobuf.getInstance();,if (Protobuf != null ) Protobuf protobuf = Protobuf.getInstance();
TestSchemas.java,Protobuf protobuf = Protobuf.getInstance();,if (Protobuf != null ) Protobuf protobuf = Protobuf.getInstance();
TestSchemasLite.java,Protobuf protobuf = Protobuf.getInstance();,if (Protobuf != null ) Protobuf protobuf = Protobuf.getInstance();
TestSchemasLite.java,Protobuf protobuf = Protobuf.getInstance();,if (Protobuf != null ) Protobuf protobuf = Protobuf.getInstance();
TestUtil.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TestUtil.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TestUtil.java,TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();,if (TestAllExtensions != null ) TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();
TestUtil.java,TestPackedTypes.Builder builder = TestPackedTypes.newBuilder();,if (TestPackedTypes != null ) TestPackedTypes.Builder builder = TestPackedTypes.newBuilder();
TestUtil.java,TestUnpackedTypes.Builder builder = TestUnpackedTypes.newBuilder();,if (TestUnpackedTypes != null ) TestUnpackedTypes.Builder builder = TestUnpackedTypes.newBuilder();
TestUtil.java,TestPackedExtensions.Builder builder = TestPackedExtensions.newBuilder();,if (TestPackedExtensions != null ) TestPackedExtensions.Builder builder = TestPackedExtensions.newBuilder();
TestUtil.java,ExtensionRegistryLite registry = ExtensionRegistryLite.newInstance();,if (ExtensionRegistryLite != null ) ExtensionRegistryLite registry = ExtensionRegistryLite.newInstance();
TestUtilLite.java,TestAllTypesLite.Builder builder = TestAllTypesLite.newBuilder();,if (TestAllTypesLite != null ) TestAllTypesLite.Builder builder = TestAllTypesLite.newBuilder();
TestUtilLite.java,TestAllExtensionsLite.Builder builder = TestAllExtensionsLite.newBuilder();,if (TestAllExtensionsLite != null ) TestAllExtensionsLite.Builder builder = TestAllExtensionsLite.newBuilder();
TestUtilLite.java,TestPackedExtensionsLite.Builder builder = TestPackedExtensionsLite.newBuilder();,if (TestPackedExtensionsLite != null ) TestPackedExtensionsLite.Builder builder = TestPackedExtensionsLite.newBuilder();
TestUtilLite.java,ExtensionRegistryLite registry = ExtensionRegistryLite.newInstance();,if (ExtensionRegistryLite != null ) ExtensionRegistryLite registry = ExtensionRegistryLite.newInstance();
UnmodifiableLazyStringListTest.java,List<ByteString> byteStringList = list.asByteStringList();,if (list != null ) List<ByteString> byteStringList = list.asByteStringList();
UnmodifiableLazyStringListTest.java,List<ByteString> byteStringList = list.asByteStringList();,if (list != null ) List<ByteString> byteStringList = list.asByteStringList();
UnmodifiableLazyStringListTest.java,Iterator<String> iter = list.iterator();,if (list != null ) Iterator<String> iter = list.iterator();
UnmodifiableLazyStringListTest.java,List<ByteString> byteStringList = list.asByteStringList();,if (list != null ) List<ByteString> byteStringList = list.asByteStringList();
UnmodifiableLazyStringListTest.java,Iterator<ByteString> byteIter = byteStringList.iterator();,if (byteStringList != null ) Iterator<ByteString> byteIter = byteStringList.iterator();
UnmodifiableLazyStringListTest.java,ListIterator<String> iter = list.listIterator();,if (list != null ) ListIterator<String> iter = list.listIterator();
UnmodifiableLazyStringListTest.java,List<ByteString> byteStringList = list.asByteStringList();,if (list != null ) List<ByteString> byteStringList = list.asByteStringList();
UnmodifiableLazyStringListTest.java,ListIterator<ByteString> byteIter = byteStringList.listIterator();,if (byteStringList != null ) ListIterator<ByteString> byteIter = byteStringList.listIterator();
Utf8Utils.java,strings[i] = sb.toString();,if (sb != null ) strings[i] = sb.toString();
WireFormatLiteTest.java,TestAllExtensionsLite message = TestUtilLite.getAllLiteExtensionsSet();,if (TestUtilLite != null ) TestAllExtensionsLite message = TestUtilLite.getAllLiteExtensionsSet();
WireFormatLiteTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatLiteTest.java,TestPackedExtensionsLite message = TestUtilLite.getLitePackedExtensionsSet();,if (TestUtilLite != null ) TestPackedExtensionsLite message = TestUtilLite.getLitePackedExtensionsSet();
WireFormatLiteTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatLiteTest.java,TestAllTypes message = TestUtil.getAllSet();,if (TestUtil != null ) TestAllTypes message = TestUtil.getAllSet();
WireFormatLiteTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatLiteTest.java,ExtensionRegistryLite registryLite = TestUtilLite.getExtensionRegistryLite();,if (TestUtilLite != null ) ExtensionRegistryLite registryLite = TestUtilLite.getExtensionRegistryLite();
WireFormatLiteTest.java,TestPackedExtensionsLite message = TestUtilLite.getLitePackedExtensionsSet();,if (TestUtilLite != null ) TestPackedExtensionsLite message = TestUtilLite.getLitePackedExtensionsSet();
WireFormatLiteTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatLiteTest.java,ExtensionRegistryLite registry = TestUtilLite.getExtensionRegistryLite();,if (TestUtilLite != null ) ExtensionRegistryLite registry = TestUtilLite.getExtensionRegistryLite();
WireFormatLiteTest.java,TestAllTypes message = TestUtil.getAllSet();,if (TestUtil != null ) TestAllTypes message = TestUtil.getAllSet();
WireFormatLiteTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatLiteTest.java,TestPackedTypes message = TestUtil.getPackedSet();,if (TestUtil != null ) TestPackedTypes message = TestUtil.getPackedSet();
WireFormatLiteTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatLiteTest.java,TestAllExtensions message = TestUtil.getAllExtensionsSet();,if (TestUtil != null ) TestAllExtensions message = TestUtil.getAllExtensionsSet();
WireFormatLiteTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatLiteTest.java,TestPackedExtensions message = TestUtil.getPackedExtensionsSet();,if (TestUtil != null ) TestPackedExtensions message = TestUtil.getPackedExtensionsSet();
WireFormatLiteTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatLiteTest.java,TestPackedTypes message = TestUtil.getPackedSet();,if (TestUtil != null ) TestPackedTypes message = TestUtil.getPackedSet();
WireFormatLiteTest.java,TestAllTypes message = TestUtil.getAllSet();,if (TestUtil != null ) TestAllTypes message = TestUtil.getAllSet();
WireFormatLiteTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatLiteTest.java,ExtensionRegistryLite registry = TestUtil.getExtensionRegistry();,if (TestUtil != null ) ExtensionRegistryLite registry = TestUtil.getExtensionRegistry();
WireFormatLiteTest.java,TestPackedExtensions message = TestUtil.getPackedExtensionsSet();,if (TestUtil != null ) TestPackedExtensions message = TestUtil.getPackedExtensionsSet();
WireFormatLiteTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatLiteTest.java,ExtensionRegistryLite registry = TestUtil.getExtensionRegistry();,if (TestUtil != null ) ExtensionRegistryLite registry = TestUtil.getExtensionRegistry();
WireFormatLiteTest.java,ByteArrayInputStream input = new ByteArrayInputStream(output.toByteArray());,if (ByteArrayInputStream(output != null ) ByteArrayInputStream input = new ByteArrayInputStream(output.toByteArray());
WireFormatLiteTest.java,ExtensionRegistryLite result = ExtensionRegistryLite.newInstance();,if (ExtensionRegistryLite != null ) ExtensionRegistryLite result = ExtensionRegistryLite.newInstance();
WireFormatLiteTest.java,ExtensionRegistryLite result = ExtensionRegistryLite.newInstance();,if (ExtensionRegistryLite != null ) ExtensionRegistryLite result = ExtensionRegistryLite.newInstance();
WireFormatLiteTest.java,byte[] messageSetBytes = byteArrayOutputStream.toByteArray();,if (byteArrayOutputStream != null ) byte[] messageSetBytes = byteArrayOutputStream.toByteArray();
WireFormatLiteTest.java,ByteString data = messageSet.toByteString();,if (messageSet != null ) ByteString data = messageSet.toByteString();
WireFormatLiteTest.java,ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();,if (ExtensionRegistryLite != null ) ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();
WireFormatLiteTest.java,ByteString data = raw.toByteString();,if (raw != null ) ByteString data = raw.toByteString();
WireFormatLiteTest.java,ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();,if (ExtensionRegistryLite != null ) ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();
WireFormatLiteTest.java,ByteString data = raw.toByteString();,if (raw != null ) ByteString data = raw.toByteString();
WireFormatLiteTest.java,ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();,if (ExtensionRegistryLite != null ) ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();
WireFormatLiteTest.java,ByteString data = raw.toByteString();,if (raw != null ) ByteString data = raw.toByteString();
WireFormatLiteTest.java,ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();,if (ExtensionRegistryLite != null ) ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();
WireFormatLiteTest.java,ByteString.CodedBuilder out = ByteString.newCodedBuilder(raw.getSerializedSize());,if (ByteString != null ) ByteString.CodedBuilder out = ByteString.newCodedBuilder(raw.getSerializedSize());
WireFormatLiteTest.java,CodedOutputStream output = out.getCodedOutput();,if (out != null ) CodedOutputStream output = out.getCodedOutput();
WireFormatLiteTest.java,ByteString data = out.build();,if (out != null ) ByteString data = out.build();
WireFormatLiteTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatLiteTest.java,ByteString rawBytes = source.toByteString();,if (source != null ) ByteString rawBytes = source.toByteString();
WireFormatLiteTest.java,byte[] data = output.toByteArray();,if (output != null ) byte[] data = output.toByteArray();
WireFormatLiteTest.java,TestPackedTypes all = TestUtil.getPackedSet();,if (TestUtil != null ) TestPackedTypes all = TestUtil.getPackedSet();
WireFormatLiteTest.java,byte[] data = message.toByteArray();,if (message != null ) byte[] data = message.toByteArray();
WireFormatLiteTest.java,TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());,if (TestAllTypes != null ) TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());
WireFormatLiteTest.java,TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());,if (TestAllTypes != null ) TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());
WireFormatLiteTest.java,TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());,if (TestAllTypes != null ) TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());
WireFormatLiteTest.java,TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());,if (TestAllTypes != null ) TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());
WireFormatLiteTest.java,TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());,if (TestAllTypes != null ) TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());
WireFormatLiteTest.java,TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());,if (TestAllTypes != null ) TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());
WireFormatLiteTest.java,TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());,if (TestAllTypes != null ) TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());
WireFormatLiteTest.java,byte[] data = output.toByteArray();,if (output != null ) byte[] data = output.toByteArray();
WireFormatLiteTest.java,RawMessageSet raw = RawMessageSet.parseFrom(parsed.toByteArray());,if (RawMessageSet != null ) RawMessageSet raw = RawMessageSet.parseFrom(parsed.toByteArray());
WireFormatLiteTest.java,TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());,if (TestAllTypes != null ) TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());
WireFormatLiteTest.java,TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());,if (TestAllTypes != null ) TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());
WireFormatLiteTest.java,TestMap actual = TestMap.parseFrom(parsed.toByteArray());,if (TestMap != null ) TestMap actual = TestMap.parseFrom(parsed.toByteArray());
WireFormatLiteTest.java,ExtensionRegistryLite extensionRegistry = TestUtilLite.getExtensionRegistryLite();,if (TestUtilLite != null ) ExtensionRegistryLite extensionRegistry = TestUtilLite.getExtensionRegistryLite();
WireFormatLiteTest.java,TestMap parsed = TestMap.parseFrom(message.toByteArray());,if (TestMap != null ) TestMap parsed = TestMap.parseFrom(message.toByteArray());
WireFormatLiteTest.java,byte[] data = TestUtil.getAllSet().toByteArray();,if (TestUtil != null ) byte[] data = TestUtil.getAllSet().toByteArray();
WrappersLiteOfMethodTest.java,TopLevelMessage.Builder builder = TopLevelMessage.newBuilder();,if (TopLevelMessage != null ) TopLevelMessage.Builder builder = TopLevelMessage.newBuilder();
WrappersLiteOfMethodTest.java,TopLevelMessage message = builder.build();,if (builder != null ) TopLevelMessage message = builder.build();
WrappersLiteOfMethodTest.java,assertTrue(true == message.getFieldBool().getValue());,if (message != null ) assertTrue(true == message.getFieldBool().getValue());
WrappersOfMethodTest.java,TopLevelMessage.Builder builder = TopLevelMessage.newBuilder();,if (TopLevelMessage != null ) TopLevelMessage.Builder builder = TopLevelMessage.newBuilder();
WrappersOfMethodTest.java,TopLevelMessage message = builder.build();,if (builder != null ) TopLevelMessage message = builder.build();
WrappersOfMethodTest.java,assertTrue(true == message.getFieldBool().getValue());,if (message != null ) assertTrue(true == message.getFieldBool().getValue());
RubyFileBuilderContext.java,String name = messageBuilder.getName();,if (messageBuilder != null ) String name = messageBuilder.getName();
RubyMessage.java,FieldDescriptor fieldDescriptor = oneofCases.get(rubyOneofDescriptor.getDescriptor());,if (oneofCases != null ) FieldDescriptor fieldDescriptor = oneofCases.get(rubyOneofDescriptor.getDescriptor());
RubyBuilder.java,this.pendingList = runtime.newArray();,if (runtime != null ) this.pendingList = runtime.newArray();
RubyBuilder.java,Binding binding = block.getBinding();,if (block != null ) Binding binding = block.getBinding();
RubyBuilder.java,Binding binding = block.getBinding();,if (block != null ) Binding binding = block.getBinding();
RubyBuilder.java,this.pendingList = context.runtime.newArray();,if (context != null ) this.pendingList = context.runtime.newArray();
RubyDescriptor.java,this.builder = DescriptorProtos.DescriptorProto.newBuilder();,if (DescriptorProtos != null ) this.builder = DescriptorProtos.DescriptorProto.newBuilder();
RubyDescriptorPool.java,this.builder = DescriptorProtos.FileDescriptorProto.newBuilder();,if (DescriptorProtos != null ) this.builder = DescriptorProtos.FileDescriptorProto.newBuilder();
RubyDescriptorPool.java,Binding binding = block.getBinding();,if (block != null ) Binding binding = block.getBinding();
RubyDescriptorPool.java,String enumName = Utils.unescapeIdentifier(enumDescriptor.getName());,if (Utils != null ) String enumName = Utils.unescapeIdentifier(enumDescriptor.getName());
RubyDescriptorPool.java,RubyFieldDescriptor rubyFieldDescriptor = rubyDescriptor.lookup(fieldDescriptor.getName());,if (rubyDescriptor != null ) RubyFieldDescriptor rubyFieldDescriptor = rubyDescriptor.lookup(fieldDescriptor.getName());
RubyEnum.java,Descriptors.EnumDescriptor descriptor = rubyEnumDescriptorescriptor.getDescriptor();,if (rubyEnumDescriptorescriptor != null ) Descriptors.EnumDescriptor descriptor = rubyEnumDescriptorescriptor.getDescriptor();
RubyEnum.java,Descriptors.EnumDescriptor descriptor = rubyEnumDescriptorescriptor.getDescriptor();,if (rubyEnumDescriptorescriptor != null ) Descriptors.EnumDescriptor descriptor = rubyEnumDescriptorescriptor.getDescriptor();
RubyEnum.java,Descriptors.EnumValueDescriptor value = descriptor.findValueByName(name.asJavaString());,if (descriptor != null ) Descriptors.EnumValueDescriptor value = descriptor.findValueByName(name.asJavaString());
RubyEnumDescriptor.java,this.builder = DescriptorProtos.EnumDescriptorProto.newBuilder();,if (DescriptorProtos != null ) this.builder = DescriptorProtos.EnumDescriptorProto.newBuilder();
RubyFieldDescriptor.java,builder = DescriptorProtos.FieldDescriptorProto.newBuilder();,if (DescriptorProtos != null ) builder = DescriptorProtos.FieldDescriptorProto.newBuilder();
RubyFieldDescriptor.java,String labelName = value.asJavaString();,if (value != null ) String labelName = value.asJavaString();
RubyFieldDescriptor.java,this.label = context.runtime.newSymbol(labelName.toLowerCase());,if (context != null ) this.label = context.runtime.newSymbol(labelName.toLowerCase());
RubyFieldDescriptor.java,String nameStr = value.asJavaString();,if (value != null ) String nameStr = value.asJavaString();
RubyMessage.java,Descriptors.OneofDescriptor oneof = fieldDescriptor.getContainingOneof();,if (fieldDescriptor != null ) Descriptors.OneofDescriptor oneof = fieldDescriptor.getContainingOneof();
RubyMessage.java,String nameStr = fieldName.asJavaString();,if (fieldName != null ) String nameStr = fieldName.asJavaString();
RubyMessage.java,String nameStr = fieldName.asJavaString();,if (fieldName != null ) String nameStr = fieldName.asJavaString();
RubyMessage.java,Descriptors.EnumDescriptor enumDescriptor = fieldDescriptor.getEnumType();,if (fieldDescriptor != null ) Descriptors.EnumDescriptor enumDescriptor = fieldDescriptor.getEnumType();
RubyMessage.java,val = enumDescriptor.findValueByName(value.asJavaString());,if (enumDescriptor != null ) val = enumDescriptor.findValueByName(value.asJavaString());
RubyMessage.java,Descriptors.OneofDescriptor oneofDescriptor = fieldDescriptor.getContainingOneof();,if (fieldDescriptor != null ) Descriptors.OneofDescriptor oneofDescriptor = fieldDescriptor.getContainingOneof();
RubyMessage.java,RubyArray ary = value.convertToArray();,if (value != null ) RubyArray ary = value.convertToArray();
RubyMessage.java,Descriptors.OneofDescriptor oneofDescriptor = fieldDescriptor.getContainingOneof();,if (fieldDescriptor != null ) Descriptors.OneofDescriptor oneofDescriptor = fieldDescriptor.getContainingOneof();
RubyMessage.java,IRubyObject typeClass = context.runtime.getObject();,if (context != null ) IRubyObject typeClass = context.runtime.getObject();
RubyMessage.java,Descriptors.EnumDescriptor enumDescriptor = fieldDescriptor.getEnumType();,if (fieldDescriptor != null ) Descriptors.EnumDescriptor enumDescriptor = fieldDescriptor.getEnumType();
RubyMessage.java,ThreadContext context = getRuntime().getCurrentContext();,if (getRuntime() != null ) ThreadContext context = getRuntime().getCurrentContext();
RubyMessageBuilderContext.java,IRubyObject typeClass = runtime.getNil();,if (runtime != null ) IRubyObject typeClass = runtime.getNil();
RubyMessageBuilderContext.java,IRubyObject typeClass = context.runtime.getNil();,if (context != null ) IRubyObject typeClass = context.runtime.getNil();
RubyMessageBuilderContext.java,IRubyObject typeClass = context.runtime.getNil();,if (context != null ) IRubyObject typeClass = context.runtime.getNil();
RubyMessageBuilderContext.java,Binding binding = block.getBinding();,if (block != null ) Binding binding = block.getBinding();
RubyOneofDescriptor.java,builder = DescriptorProtos.OneofDescriptorProto.newBuilder();,if (DescriptorProtos != null ) builder = DescriptorProtos.OneofDescriptorProto.newBuilder();
RubyOneofDescriptor.java,this.name = context.runtime.newString(name.asJavaString());,if (context != null ) this.name = context.runtime.newString(name.asJavaString());
Utils.java,val = enumDescriptor.findValueByName(value.asJavaString());,if (enumDescriptor != null ) val = enumDescriptor.findValueByName(value.asJavaString());
TextFormat.java,boolean bBoolean = (boolean) b.getKey();,if (b != null ) boolean bBoolean = (boolean) b.getKey();
TextFormat.java,long bLong = (long) b.getKey();,if (b != null ) long bLong = (long) b.getKey();
TextFormat.java,boolean bBoolean = (boolean) b.getKey();,if (b != null ) boolean bBoolean = (boolean) b.getKey();
TextFormat.java,long bLong = (long) b.getKey();,if (b != null ) long bLong = (long) b.getKey();
TextFormat.java,boolean bBoolean = (boolean) b.getKey();,if (b != null ) boolean bBoolean = (boolean) b.getKey();
TextFormat.java,long bLong = (long) b.getKey();,if (b != null ) long bLong = (long) b.getKey();
ConformanceJava.java,testMessage = builder.build();,if (builder != null ) testMessage = builder.build();
TextFormat.java,Descriptor anyDescriptor = field.getMessageType();,if (field != null ) Descriptor anyDescriptor = field.getMessageType();
GeneratedMessageV3.java,MethodHandles.Lookup lookup = MethodHandles.publicLookup();,if (MethodHandles != null ) MethodHandles.Lookup lookup = MethodHandles.publicLookup();
GeneratedMessageV3.java,MethodHandles.Lookup lookup = MethodHandles.lookup();,if (MethodHandles != null ) MethodHandles.Lookup lookup = MethodHandles.lookup();
FieldMaskTreeTest.java,NestedTestAllTypes.Builder expected = NestedTestAllTypes.newBuilder();,if (NestedTestAllTypes != null ) NestedTestAllTypes.Builder expected = NestedTestAllTypes.newBuilder();
FieldSet.java,FieldSet<FieldDescriptorType> clone = FieldSet.newFieldSet();,if (FieldSet != null ) FieldSet<FieldDescriptorType> clone = FieldSet.newFieldSet();
FieldSet.java,FieldDescriptorType descriptor = entry.getKey();,if (entry != null ) FieldDescriptorType descriptor = entry.getKey();
FieldSet.java,FieldDescriptorType descriptor = entry.getKey();,if (entry != null ) FieldDescriptorType descriptor = entry.getKey();
FieldSet.java,FieldDescriptorType key = entry.getKey();,if (entry != null ) FieldDescriptorType key = entry.getKey();
FieldSet.java,final FieldDescriptorType descriptor = entry.getKey();,if (entry != null ) final FieldDescriptorType descriptor = entry.getKey();
FieldSet.java,final FieldDescriptorType descriptor = entry.getKey();,if (entry != null ) final FieldDescriptorType descriptor = entry.getKey();
FieldSet.java,final FieldDescriptorType descriptor = entry.getKey();,if (entry != null ) final FieldDescriptorType descriptor = entry.getKey();
FieldSet.java,final FieldDescriptorType descriptor = entry.getKey();,if (entry != null ) final FieldDescriptorType descriptor = entry.getKey();
GeneratedMessageV3.java,extensions = FieldSet.emptySet();,if (FieldSet != null ) extensions = FieldSet.emptySet();
GeneratedMessageV3.java,extensions = extensions.clone();,if (extensions != null ) extensions = extensions.clone();
GeneratedMessageV3.java,type = getMethod.getReturnType();,if (getMethod != null ) type = getMethod.getReturnType();
GeneratedMessageV3.java,type = getRepeatedMethod.getReturnType();,if (getRepeatedMethod != null ) type = getRepeatedMethod.getReturnType();
ExtensionRegistryLite.java,result = emptyRegistry = ExtensionRegistryFactory.createEmpty();,if (ExtensionRegistryFactory != null ) result = emptyRegistry = ExtensionRegistryFactory.createEmpty();
TextFormatTest.java,String javaText = TextFormat.printToString(TestUtil.getAllSet());,if (TextFormat != null ) String javaText = TextFormat.printToString(TestUtil.getAllSet());
TextFormatTest.java,String javaText = TextFormat.printToString(TestUtil.getAllSetBuilder());,if (TextFormat != null ) String javaText = TextFormat.printToString(TestUtil.getAllSetBuilder());
TextFormatTest.java,String javaText = TextFormat.printToString(TestUtil.getAllExtensionsSet());,if (TextFormat != null ) String javaText = TextFormat.printToString(TestUtil.getAllExtensionsSet());
JsonFormat.java,FieldDescriptor other = builder.getOneofFieldDescriptor(field.getContainingOneof());,if (builder != null ) FieldDescriptor other = builder.getOneofFieldDescriptor(field.getContainingOneof());
JsonFormatTest.java,TestOneof.Builder successBuilder = TestOneof.newBuilder();,if (TestOneof != null ) TestOneof.Builder successBuilder = TestOneof.newBuilder();
JsonFormatTest.java,TestOneof.Builder builder = TestOneof.newBuilder();,if (TestOneof != null ) TestOneof.Builder builder = TestOneof.newBuilder();
GeneratedMessageLite.java,protoHash = mine.hashCode();,if (mine != null ) protoHash = mine.hashCode();
GeneratedMessageLite.java,int size = mine.size();,if (mine != null ) int size = mine.size();
GeneratedMessageLite.java,int otherSize = other.size();,if (other != null ) int otherSize = other.size();
GeneratedMessageLite.java,int size = mine.size();,if (mine != null ) int size = mine.size();
GeneratedMessageLite.java,int otherSize = other.size();,if (other != null ) int otherSize = other.size();
GeneratedMessageLite.java,int size = mine.size();,if (mine != null ) int size = mine.size();
GeneratedMessageLite.java,int otherSize = other.size();,if (other != null ) int otherSize = other.size();
GeneratedMessageLite.java,int size = mine.size();,if (mine != null ) int size = mine.size();
GeneratedMessageLite.java,int otherSize = other.size();,if (other != null ) int otherSize = other.size();
GeneratedMessageLite.java,int size = mine.size();,if (mine != null ) int size = mine.size();
GeneratedMessageLite.java,int otherSize = other.size();,if (other != null ) int otherSize = other.size();
GeneratedMessageLite.java,int size = mine.size();,if (mine != null ) int size = mine.size();
GeneratedMessageLite.java,int otherSize = other.size();,if (other != null ) int otherSize = other.size();
GeneratedMessageLite.java,mine = mine.clone();,if (mine != null ) mine = mine.clone();
GeneratedMessageLite.java,mine = mine.mutableCopy();,if (mine != null ) mine = mine.mutableCopy();
TextFormat.java,value = subField.finish();,if (subField != null ) value = subField.finish();
UnknownFieldSetLiteTest.java,allFields = TestUtil.getAllSet();,if (TestUtil != null ) allFields = TestUtil.getAllSet();
UnknownFieldSetLiteTest.java,allFieldsData = allFields.toByteString();,if (allFields != null ) allFieldsData = allFields.toByteString();
UnknownFieldSetLiteTest.java,unknownFields = emptyMessage.getUnknownFields();,if (emptyMessage != null ) unknownFields = emptyMessage.getUnknownFields();
UnknownFieldSetLiteTest.java,UnknownFieldSet.Builder bizarroFields = UnknownFieldSet.newBuilder();,if (UnknownFieldSet != null ) UnknownFieldSet.Builder bizarroFields = UnknownFieldSet.newBuilder();
UnknownFieldSetLiteTest.java,UnknownFieldSetLite unknownFields = UnknownFieldSetLite.getDefaultInstance();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite unknownFields = UnknownFieldSetLite.getDefaultInstance();
UnknownFieldSetLiteTest.java,UnknownFieldSetLite instance = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite instance = UnknownFieldSetLite.newInstance();
UnknownFieldSetLiteTest.java,CodedInputStream input = CodedInputStream.newInstance(foo.toByteArray());,if (CodedInputStream != null ) CodedInputStream input = CodedInputStream.newInstance(foo.toByteArray());
UnknownFieldSetLiteTest.java,UnknownFieldSetLite instance = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite instance = UnknownFieldSetLite.newInstance();
UnknownFieldSetLiteTest.java,CodedInputStream input = CodedInputStream.newInstance(foo.toByteArray());,if (CodedInputStream != null ) CodedInputStream input = CodedInputStream.newInstance(foo.toByteArray());
UnknownFieldSetLiteTest.java,UnknownFieldSetLite instance = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite instance = UnknownFieldSetLite.newInstance();
UnknownFieldSetLiteTest.java,Foo fooDeserialized = Foo.parseFrom(foo.toByteArray());,if (Foo != null ) Foo fooDeserialized = Foo.parseFrom(foo.toByteArray());
UnknownFieldSetLiteTest.java,UnknownFieldSetLite emptyFieldSet = UnknownFieldSetLite.getDefaultInstance();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite emptyFieldSet = UnknownFieldSetLite.getDefaultInstance();
UnknownFieldSetLiteTest.java,UnknownFieldSetLite paddedFieldSet = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite paddedFieldSet = UnknownFieldSetLite.newInstance();
UnknownFieldSetLiteTest.java,UnknownFieldSetLite unknownFields = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite unknownFields = UnknownFieldSetLite.newInstance();
UnknownFieldSetLiteTest.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
UnknownFieldSetLiteTest.java,UnknownFieldSetLite builder = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite builder = UnknownFieldSetLite.newInstance();
UnknownFieldSetLiteTest.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
UnknownFieldSetLiteTest.java,UnknownFieldSetLite unknownFields = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite unknownFields = UnknownFieldSetLite.newInstance();
UnknownFieldSetLiteTest.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
UnknownFieldSetLiteTest.java,Foo copy = Foo.parseFrom(foo.toByteArray());,if (Foo != null ) Foo copy = Foo.parseFrom(foo.toByteArray());
UnknownFieldSetLiteTest.java,Foo secondCopy = Foo.parseFrom(foo.toByteArray());,if (Foo != null ) Foo secondCopy = Foo.parseFrom(foo.toByteArray());
UnknownFieldSetLiteTest.java,ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();,if (ExtensionRegistryLite != null ) ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();
UnknownFieldSetLiteTest.java,ByteString.Output byteStringOutput = ByteString.newOutput();,if (ByteString != null ) ByteString.Output byteStringOutput = ByteString.newOutput();
UnknownFieldSetLiteTest.java,ByteString.Output byteStringOutput = ByteString.newOutput();,if (ByteString != null ) ByteString.Output byteStringOutput = ByteString.newOutput();
UnknownFieldSetLiteTest.java,ByteString.Output byteStringOutput = ByteString.newOutput();,if (ByteString != null ) ByteString.Output byteStringOutput = ByteString.newOutput();
UnknownFieldSetLiteTest.java,UnknownFieldSetLite unknownFields = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite unknownFields = UnknownFieldSetLite.newInstance();
UnknownFieldSetLiteTest.java,TestAllTypesLite testAllTypes = TestAllTypesLite.getDefaultInstance();,if (TestAllTypesLite != null ) TestAllTypesLite testAllTypes = TestAllTypesLite.getDefaultInstance();
UnknownFieldSetLiteTest.java,testAllTypes = TestAllTypesLite.newBuilder().build();,if (TestAllTypesLite != null ) testAllTypes = TestAllTypesLite.newBuilder().build();
UnknownFieldSetLiteTest.java,ByteString data = emptyMessageLite.toByteString();,if (emptyMessageLite != null ) ByteString data = emptyMessageLite.toByteString();
UnknownFieldSetLiteTest.java,TestAllExtensions allExtensions = TestUtil.getAllExtensionsSet();,if (TestUtil != null ) TestAllExtensions allExtensions = TestUtil.getAllExtensionsSet();
UnknownFieldSetLiteTest.java,ByteString allExtensionsData = allExtensions.toByteString();,if (allExtensions != null ) ByteString allExtensionsData = allExtensions.toByteString();
UnknownFieldSetLiteTest.java,ByteString data = emptyMessageLite.toByteString();,if (emptyMessageLite != null ) ByteString data = emptyMessageLite.toByteString();
UnknownFieldSetLiteTest.java,"TestAllExtensions message = TestAllExtensions.parseFrom(data, TestUtil.getExtensionRegistry());","if (TestUtil != null ) TestAllExtensions message = TestAllExtensions.parseFrom(data, TestUtil.getExtensionRegistry());"
UnknownFieldSetLiteTest.java,TestPackedTypes allPackedFields = TestUtil.getPackedSet();,if (TestUtil != null ) TestPackedTypes allPackedFields = TestUtil.getPackedSet();
UnknownFieldSetLiteTest.java,ByteString allPackedData = allPackedFields.toByteString();,if (allPackedFields != null ) ByteString allPackedData = allPackedFields.toByteString();
UnknownFieldSetLiteTest.java,ByteString data = emptyMessageLite.toByteString();,if (emptyMessageLite != null ) ByteString data = emptyMessageLite.toByteString();
UnknownFieldSetLiteTest.java,"TestPackedTypes message = TestPackedTypes.parseFrom(data, TestUtil.getExtensionRegistry());","if (TestUtil != null ) TestPackedTypes message = TestPackedTypes.parseFrom(data, TestUtil.getExtensionRegistry());"
UnknownFieldSetLiteTest.java,TestPackedExtensions allPackedExtensions = TestUtil.getPackedExtensionsSet();,if (TestUtil != null ) TestPackedExtensions allPackedExtensions = TestUtil.getPackedExtensionsSet();
UnknownFieldSetLiteTest.java,ByteString allPackedExtensionsData = allPackedExtensions.toByteString();,if (allPackedExtensions != null ) ByteString allPackedExtensionsData = allPackedExtensions.toByteString();
UnknownFieldSetLiteTest.java,ByteString data = emptyMessageLite.toByteString();,if (emptyMessageLite != null ) ByteString data = emptyMessageLite.toByteString();
UnknownFieldSetLiteTest.java,ByteString data = emptyMessageLite.toByteString();,if (emptyMessageLite != null ) ByteString data = emptyMessageLite.toByteString();
UnknownFieldSetLiteTest.java,data = emptyMessageLite.toByteString();,if (emptyMessageLite != null ) data = emptyMessageLite.toByteString();
ArrayDecoders.java,this.extensionRegistry = ExtensionRegistryLite.getEmptyRegistry();,if (ExtensionRegistryLite != null ) this.extensionRegistry = ExtensionRegistryLite.getEmptyRegistry();
ArrayDecoders.java,Object result = schema.newInstance();,if (schema != null ) Object result = schema.newInstance();
ArrayDecoders.java,Object result = messageSchema.newInstance();,if (messageSchema != null ) Object result = messageSchema.newInstance();
ArrayDecoders.java,unknownFields = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) unknownFields = UnknownFieldSetLite.newInstance();
ArrayDecoders.java,final UnknownFieldSetLite child = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) final UnknownFieldSetLite child = UnknownFieldSetLite.newInstance();
BinaryReader.java,buffer = bytebuf.array();,if (bytebuf != null ) buffer = bytebuf.array();
BinaryReader.java,initialPos = pos = bytebuf.arrayOffset() + bytebuf.position();,if (bytebuf != null ) initialPos = pos = bytebuf.arrayOffset() + bytebuf.position();
BinaryReader.java,limit = bytebuf.arrayOffset() + bytebuf.limit();,if (bytebuf != null ) limit = bytebuf.arrayOffset() + bytebuf.limit();
BinaryReader.java,T message = schema.newInstance();,if (schema != null ) T message = schema.newInstance();
BinaryReader.java,T message = schema.newInstance();,if (schema != null ) T message = schema.newInstance();
BinaryWriter.java,this.buffer = allocatedBuffer.array();,if (allocatedBuffer != null ) this.buffer = allocatedBuffer.array();
BinaryWriter.java,int arrayOffset = allocatedBuffer.arrayOffset();,if (allocatedBuffer != null ) int arrayOffset = allocatedBuffer.arrayOffset();
BinaryWriter.java,this.limit = arrayOffset + allocatedBuffer.limit();,if (allocatedBuffer != null ) this.limit = arrayOffset + allocatedBuffer.limit();
BinaryWriter.java,this.offset = arrayOffset + allocatedBuffer.position();,if (allocatedBuffer != null ) this.offset = arrayOffset + allocatedBuffer.position();
BinaryWriter.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
BinaryWriter.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
BinaryWriter.java,this.buffer = allocatedBuffer.array();,if (allocatedBuffer != null ) this.buffer = allocatedBuffer.array();
BinaryWriter.java,int arrayOffset = allocatedBuffer.arrayOffset();,if (allocatedBuffer != null ) int arrayOffset = allocatedBuffer.arrayOffset();
BinaryWriter.java,this.limit = arrayOffset + allocatedBuffer.limit();,if (allocatedBuffer != null ) this.limit = arrayOffset + allocatedBuffer.limit();
BinaryWriter.java,this.offset = arrayOffset + allocatedBuffer.position();,if (allocatedBuffer != null ) this.offset = arrayOffset + allocatedBuffer.position();
BinaryWriter.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
BinaryWriter.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
BinaryWriter.java,ByteBuffer nioBuffer = allocatedBuffer.nioBuffer();,if (allocatedBuffer != null ) ByteBuffer nioBuffer = allocatedBuffer.nioBuffer();
BinaryWriter.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
BinaryWriter.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
BinaryWriter.java,ByteBuffer nioBuffer = allocatedBuffer.nioBuffer();,if (allocatedBuffer != null ) ByteBuffer nioBuffer = allocatedBuffer.nioBuffer();
BinaryWriter.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
BinaryWriter.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
CodedInputStreamReader.java,tag = input.readTag();,if (input != null ) tag = input.readTag();
CodedInputStreamReader.java,T message = schema.newInstance();,if (schema != null ) T message = schema.newInstance();
CodedInputStreamReader.java,T message = schema.newInstance();,if (schema != null ) T message = schema.newInstance();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
CodedInputStreamReader.java,int nextTag = input.readTag();,if (input != null ) int nextTag = input.readTag();
DescriptorMessageInfoFactory.java,Node child = nodeCache.get(field.getMessageType());,if (nodeCache != null ) Node child = nodeCache.get(field.getMessageType());
DescriptorMessageInfoFactory.java,child = dfs(field.getMessageType());,if (dfs(field != null ) child = dfs(field.getMessageType());
DescriptorMessageInfoFactory.java,Node node = stack.pop();,if (stack != null ) Node node = stack.pop();
DescriptorMessageInfoFactory.java,Node node = nodeCache.get(field.getMessageType());,if (nodeCache != null ) Node node = nodeCache.get(field.getMessageType());
DescriptorMessageInfoFactory.java,List<FieldDescriptor> fieldDescriptors = messageDescriptor.getFields();,if (messageDescriptor != null ) List<FieldDescriptor> fieldDescriptors = messageDescriptor.getFields();
DescriptorMessageInfoFactory.java,int number = fd.getNumber();,if (fd != null ) int number = fd.getNumber();
DescriptorMessageInfoFactory.java,List<FieldDescriptor> fieldDescriptors = messageDescriptor.getFields();,if (messageDescriptor != null ) List<FieldDescriptor> fieldDescriptors = messageDescriptor.getFields();
DescriptorMessageInfoFactory.java,"OneofInfo oneof = oneofState.getOneof(messageType, fd.getContainingOneof());","if (fd != null ) OneofInfo oneof = oneofState.getOneof(messageType, fd.getContainingOneof());"
DescriptorMessageInfoFactory.java,int index = desc.getIndex();,if (desc != null ) int index = desc.getIndex();
DescriptorMessageInfoFactory.java,String camelCase = snakeCaseToCamelCase(desc.getName());,if (snakeCaseToCamelCase(desc != null ) String camelCase = snakeCaseToCamelCase(desc.getName());
ExtensionRegistryLite.java,result = emptyRegistry = ExtensionRegistryFactory.createEmpty();,if (ExtensionRegistryFactory != null ) result = emptyRegistry = ExtensionRegistryFactory.createEmpty();
ExtensionSchemaFull.java,extensions = extensions.clone();,if (extensions != null ) extensions = extensions.clone();
ExtensionSchemaFull.java,int fieldNumber = extension.descriptor.getNumber();,if (extension != null ) int fieldNumber = extension.descriptor.getNumber();
ExtensionSchemaFull.java,value = reader.readDouble();,if (reader != null ) value = reader.readDouble();
ExtensionSchemaFull.java,value = reader.readFloat();,if (reader != null ) value = reader.readFloat();
ExtensionSchemaFull.java,value = reader.readBool();,if (reader != null ) value = reader.readBool();
ExtensionSchemaFull.java,value = reader.readBytes();,if (reader != null ) value = reader.readBytes();
ExtensionSchemaFull.java,value = reader.readString();,if (reader != null ) value = reader.readString();
ExtensionSchemaFull.java,FieldDescriptor descriptor = (FieldDescriptor) extension.getKey();,if (extension != null ) FieldDescriptor descriptor = (FieldDescriptor) extension.getKey();
ExtensionSchemaFull.java,FieldDescriptor descriptor = (FieldDescriptor) extension.getKey();,if (extension != null ) FieldDescriptor descriptor = (FieldDescriptor) extension.getKey();
ExtensionSchemaFull.java,List<EnumValueDescriptor> enumList = (List<EnumValueDescriptor>) extension.getValue();,if (extension != null ) List<EnumValueDescriptor> enumList = (List<EnumValueDescriptor>) extension.getValue();
ExtensionSchemaFull.java,Object value = extensionInfo.defaultInstance.newBuilderForType().buildPartial();,if (extensionInfo != null ) Object value = extensionInfo.defaultInstance.newBuilderForType().buildPartial();
ExtensionSchemaLite.java,int fieldNumber = extension.getNumber();,if (extension != null ) int fieldNumber = extension.getNumber();
ExtensionSchemaLite.java,value = reader.readDouble();,if (reader != null ) value = reader.readDouble();
ExtensionSchemaLite.java,value = reader.readFloat();,if (reader != null ) value = reader.readFloat();
ExtensionSchemaLite.java,value = reader.readBool();,if (reader != null ) value = reader.readBool();
ExtensionSchemaLite.java,value = reader.readBytes();,if (reader != null ) value = reader.readBytes();
ExtensionSchemaLite.java,value = reader.readString();,if (reader != null ) value = reader.readString();
FieldType.java,elementType = javaType.getBoxedType();,if (javaType != null ) elementType = javaType.getBoxedType();
FieldType.java,elementType = javaType.getBoxedType();,if (javaType != null ) elementType = javaType.getBoxedType();
FieldType.java,Type genericType = field.getGenericType();,if (field != null ) Type genericType = field.getGenericType();
FieldType.java,Type[] genericInterfaces = clazz.getGenericInterfaces();,if (clazz != null ) Type[] genericInterfaces = clazz.getGenericInterfaces();
FieldType.java,Type type = clazz.getGenericSuperclass();,if (clazz != null ) Type type = clazz.getGenericSuperclass();
FieldType.java,Type[] superArgs = parameterizedType.getActualTypeArguments();,if (parameterizedType != null ) Type[] superArgs = parameterizedType.getActualTypeArguments();
FieldType.java,clazz = clazz.getSuperclass();,if (clazz != null ) clazz = clazz.getSuperclass();
ListFieldSchema.java,int size = mine.size();,if (mine != null ) int size = mine.size();
ListFieldSchema.java,int otherSize = other.size();,if (other != null ) int otherSize = other.size();
ListFieldSchema.java,int size = list.size();,if (list != null ) int size = list.size();
ListFieldSchema.java,int size = mine.size();,if (mine != null ) int size = mine.size();
ListFieldSchema.java,int otherSize = other.size();,if (other != null ) int otherSize = other.size();
MapFieldSchemaLite.java,mine = mine.mutableCopy();,if (mine != null ) mine = mine.mutableCopy();
MessageSchema.java,String info = messageInfo.getStringInfo();,if (messageInfo != null ) String info = messageInfo.getStringInfo();
MessageSchema.java,final int length = info.length();,if (info != null ) final int length = info.length();
MessageSchema.java,FieldInfo[] fis = messageInfo.getFields();,if (messageInfo != null ) FieldInfo[] fis = messageInfo.getFields();
MessageSchema.java,int[] checkInitialized = messageInfo.getCheckInitialized();,if (messageInfo != null ) int[] checkInitialized = messageInfo.getCheckInitialized();
MessageSchema.java,final int fieldNumber = fi.getFieldNumber();,if (fi != null ) final int fieldNumber = fi.getFieldNumber();
MessageSchema.java,OneofInfo oneof = fi.getOneof();,if (fi != null ) OneofInfo oneof = fi.getOneof();
MessageSchema.java,FieldType type = fi.getType();,if (fi != null ) FieldType type = fi.getType();
MessageSchema.java,typeId = type.id();,if (type != null ) typeId = type.id();
MessageSchema.java,presenceMaskShift = Integer.numberOfTrailingZeros(fi.getPresenceMask());,if (Integer != null ) presenceMaskShift = Integer.numberOfTrailingZeros(fi.getPresenceMask());
MessageSchema.java,buffer[bufferIndex] = fi.getFieldNumber();,if (fi != null ) buffer[bufferIndex] = fi.getFieldNumber();
MessageSchema.java,Object messageFieldClass = fi.getMessageFieldClass();,if (fi != null ) Object messageFieldClass = fi.getMessageFieldClass();
MessageSchema.java,protoHash = submessage.hashCode();,if (submessage != null ) protoHash = submessage.hashCode();
MessageSchema.java,protoHash = submessage.hashCode();,if (submessage != null ) protoHash = submessage.hashCode();
MessageSchema.java,size += extensionSchema.getExtensions(message).getSerializedSize();,if (extensionSchema != null ) size += extensionSchema.getExtensions(message).getSerializedSize();
MessageSchema.java,extensionIterator = extensions.iterator();,if (extensions != null ) extensionIterator = extensions.iterator();
MessageSchema.java,nextExtension = extensionIterator.next();,if (extensionIterator != null ) nextExtension = extensionIterator.next();
MessageSchema.java,extensionIterator = extensions.iterator();,if (extensions != null ) extensionIterator = extensions.iterator();
MessageSchema.java,nextExtension = extensionIterator.next();,if (extensionIterator != null ) nextExtension = extensionIterator.next();
MessageSchema.java,extensionIterator = extensions.descendingIterator();,if (extensions != null ) extensionIterator = extensions.descendingIterator();
MessageSchema.java,nextExtension = extensionIterator.next();,if (extensionIterator != null ) nextExtension = extensionIterator.next();
MessageSchema.java,final int number = reader.getFieldNumber();,if (reader != null ) final int number = reader.getFieldNumber();
MessageSchema.java,int enumValue = reader.readEnum();,if (reader != null ) int enumValue = reader.readEnum();
MessageSchema.java,int enumValue = reader.readEnum();,if (reader != null ) int enumValue = reader.readEnum();
MessageSchema.java,unknownFields = unknownFieldSchema.newBuilder();,if (unknownFieldSchema != null ) unknownFields = unknownFieldSchema.newBuilder();
MessageSchema.java,unknownFields = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) unknownFields = UnknownFieldSetLite.newInstance();
MessageSchema.java,final int size = list.size();,if (list != null ) final int size = list.size();
MessageSchema.java,final int size = list.size();,if (list != null ) final int size = list.size();
MessageSchema.java,final int size = list.size();,if (list != null ) final int size = list.size();
MessageSchema.java,unknownFields = unknownFieldSchema.newBuilder();,if (unknownFieldSchema != null ) unknownFields = unknownFieldSchema.newBuilder();
MessageSchema.java,CodedOutputStream codedOutput = codedBuilder.getCodedOutput();,if (codedBuilder != null ) CodedOutputStream codedOutput = codedBuilder.getCodedOutput();
MessageSetSchema.java,int hashCode = unknownFieldSchema.getFromMessage(message).hashCode();,if (unknownFieldSchema != null ) int hashCode = unknownFieldSchema.getFromMessage(message).hashCode();
MessageSetSchema.java,unknownFields = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) unknownFields = UnknownFieldSetLite.newInstance();
MessageSetSchema.java,final int number = reader.getFieldNumber();,if (reader != null ) final int number = reader.getFieldNumber();
MessageSetSchema.java,int startTag = reader.getTag();,if (reader != null ) int startTag = reader.getTag();
MessageSetSchema.java,final int number = reader.getFieldNumber();,if (reader != null ) final int number = reader.getFieldNumber();
MessageSetSchema.java,final int tag = reader.getTag();,if (reader != null ) final int tag = reader.getTag();
MessageSetSchema.java,rawBytes = reader.readBytes();,if (reader != null ) rawBytes = reader.readBytes();
MessageSetSchema.java,size += extensionSchema.getExtensions(message).getMessageSetSerializedSize();,if (extensionSchema != null ) size += extensionSchema.getExtensions(message).getMessageSetSerializedSize();
ProtobufLists.java,int size = list.size();,if (list != null ) int size = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,final int length = list.size();,if (list != null ) final int length = list.size();
SchemaUtil.java,Field[] fields = holder.getDeclaredFields();,if (holder != null ) Field[] fields = holder.getDeclaredFields();
SchemaUtil.java,int size = enumList.size();,if (enumList != null ) int size = enumList.size();
SchemaUtil.java,int enumValue = it.next();,if (it != null ) int enumValue = it.next();
SchemaUtil.java,int size = enumList.size();,if (enumList != null ) int size = enumList.size();
SchemaUtil.java,int enumValue = it.next();,if (it != null ) int enumValue = it.next();
SchemaUtil.java,unknownFields = unknownFieldSchema.newBuilder();,if (unknownFieldSchema != null ) unknownFields = unknownFieldSchema.newBuilder();
SmallSortedMap.java,this.overflowEntriesDescending = Collections.emptyMap();,if (Collections != null ) this.overflowEntriesDescending = Collections.emptyMap();
SmallSortedMap.java,private int pos = entryList.size();,if (entryList != null ) private int pos = entryList.size();
SmallSortedMap.java,lazyOverflowIterator = overflowEntriesDescending.entrySet().iterator();,if (overflowEntriesDescending != null ) lazyOverflowIterator = overflowEntriesDescending.entrySet().iterator();
TextFormat.java,value = subField.finish();,if (subField != null ) value = subField.finish();
UnknownFieldSchema.java,int tag = reader.getTag();,if (reader != null ) int tag = reader.getTag();
UnknownFieldSet.java,ListIterator<ByteString> iter = lengthDelimited.listIterator(lengthDelimited.size());,if (lengthDelimited != null ) ListIterator<ByteString> iter = lengthDelimited.listIterator(lengthDelimited.size());
UnknownFieldSetLiteSchema.java,unknownFields = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) unknownFields = UnknownFieldSetLite.newInstance();
AbstractProto2LiteSchemaTest.java,byte[] data = output.toByteArray();,if (output != null ) byte[] data = output.toByteArray();
AbstractProto2LiteSchemaTest.java,byte[] serializedBytes = expectedMessage.toByteArray();,if (expectedMessage != null ) byte[] serializedBytes = expectedMessage.toByteArray();
AbstractProto2LiteSchemaTest.java,UnknownFieldSetLite unknowns = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite unknowns = UnknownFieldSetLite.newInstance();
AbstractProto2LiteSchemaTest.java,CodedOutputStream packedOut = packedBuilder.getCodedOutput();,if (packedBuilder != null ) CodedOutputStream packedOut = packedBuilder.getCodedOutput();
AbstractProto2LiteSchemaTest.java,int size = unknowns.getSerializedSize();,if (unknowns != null ) int size = unknowns.getSerializedSize();
AbstractProto2SchemaTest.java,byte[] data = output.toByteArray();,if (output != null ) byte[] data = output.toByteArray();
AbstractProto2SchemaTest.java,byte[] serializedBytes = expectedMessage.toByteArray();,if (expectedMessage != null ) byte[] serializedBytes = expectedMessage.toByteArray();
AbstractProto2SchemaTest.java,UnknownFieldSetLite unknowns = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite unknowns = UnknownFieldSetLite.newInstance();
AbstractProto2SchemaTest.java,CodedOutputStream packedOut = packedBuilder.getCodedOutput();,if (packedBuilder != null ) CodedOutputStream packedOut = packedBuilder.getCodedOutput();
AbstractProto2SchemaTest.java,int size = unknowns.getSerializedSize();,if (unknowns != null ) int size = unknowns.getSerializedSize();
AbstractProto3LiteSchemaTest.java,byte[] data = output.toByteArray();,if (output != null ) byte[] data = output.toByteArray();
AbstractProto3SchemaTest.java,byte[] data = output.toByteArray();,if (output != null ) byte[] data = output.toByteArray();
AbstractSchemaTest.java,T newMsg = schema.newInstance();,if (schema != null ) T newMsg = schema.newInstance();
AbstractSchemaTest.java,T message = schema.newInstance();,if (schema != null ) T message = schema.newInstance();
AbstractSchemaTest.java,M newMsg = schema.newInstance();,if (schema != null ) M newMsg = schema.newInstance();
AbstractSchemaTest.java,M newMsg = schema.newInstance();,if (schema != null ) M newMsg = schema.newInstance();
ArrayDecodersTest.java,ByteString.Output byteStringOutput = ByteString.newOutput();,if (ByteString != null ) ByteString.Output byteStringOutput = ByteString.newOutput();
BinaryProtocolTest.java,byte[] expectedBytes = expected.toByteArray();,if (expected != null ) byte[] expectedBytes = expected.toByteArray();
BinaryProtocolTest.java,byte[] expectedBytes = expected.toByteArray();,if (expected != null ) byte[] expectedBytes = expected.toByteArray();
CachedFieldSizeTest.java,TestCachedFieldSizeMessage.Builder builder = TestCachedFieldSizeMessage.newBuilder();,if (TestCachedFieldSizeMessage != null ) TestCachedFieldSizeMessage.Builder builder = TestCachedFieldSizeMessage.newBuilder();
CachedFieldSizeTest.java,TestCachedFieldSizeMessage message = builder.build();,if (builder != null ) TestCachedFieldSizeMessage message = builder.build();
CodedAdapterTest.java,byte[] expectedBytes = expected.toByteArray();,if (expected != null ) byte[] expectedBytes = expected.toByteArray();
CodedAdapterTest.java,byte[] expectedBytes = expected.toByteArray();,if (expected != null ) byte[] expectedBytes = expected.toByteArray();
CodedAdapterTest.java,T msg = schema.newInstance();,if (schema != null ) T msg = schema.newInstance();
CodedInputStreamTest.java,ByteString byteString = codedInputStream.readBytes();,if (codedInputStream != null ) ByteString byteString = codedInputStream.readBytes();
CodedInputStreamTest.java,ByteBuffer byteBuffer = codedInputStream.readByteBuffer();,if (codedInputStream != null ) ByteBuffer byteBuffer = codedInputStream.readByteBuffer();
CodedInputStreamTest.java,byte[] byteArray = codedInputStream.readByteArray();,if (codedInputStream != null ) byte[] byteArray = codedInputStream.readByteArray();
ExperimentalSerializationUtil.java,BinaryWriter writer = BinaryWriter.newHeapInstance(BufferAllocator.unpooled());,if (BinaryWriter != null ) BinaryWriter writer = BinaryWriter.newHeapInstance(BufferAllocator.unpooled());
ExperimentalSerializationUtil.java,Queue<AllocatedBuffer> buffers = writer.complete();,if (writer != null ) Queue<AllocatedBuffer> buffers = writer.complete();
ExperimentalSerializationUtil.java,AllocatedBuffer buffer = buffers.poll();,if (buffers != null ) AllocatedBuffer buffer = buffers.poll();
ExperimentalSerializationUtil.java,int length = buffer.limit() - buffer.position();,if (buffer != null ) int length = buffer.limit() - buffer.position();
ExperimentalSerializationUtil.java,T msg = schema.newInstance();,if (schema != null ) T msg = schema.newInstance();
ExperimentalSerializationUtil.java,T msg = schema.newInstance();,if (schema != null ) T msg = schema.newInstance();
ExperimentalTestDataProvider.java,value = RANDOM.nextDouble();,if (RANDOM != null ) value = RANDOM.nextDouble();
ExperimentalTestDataProvider.java,value = RANDOM.nextFloat();,if (RANDOM != null ) value = RANDOM.nextFloat();
MapLiteTest.java,TestMap.Builder usingMutableMapBuilder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder usingMutableMapBuilder = TestMap.newBuilder();
MapLiteTest.java,TestMap usingMutableMap = usingMutableMapBuilder.build();,if (usingMutableMapBuilder != null ) TestMap usingMutableMap = usingMutableMapBuilder.build();
MapLiteTest.java,TestMap.Builder usingAccessorsBuilder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder usingAccessorsBuilder = TestMap.newBuilder();
MapLiteTest.java,TestMap usingAccessors = usingAccessorsBuilder.build();,if (usingAccessorsBuilder != null ) TestMap usingAccessors = usingAccessorsBuilder.build();
MapLiteTest.java,TestMap.Builder mapBuilder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder mapBuilder = TestMap.newBuilder();
MapLiteTest.java,TestMap map = mapBuilder.build();,if (mapBuilder != null ) TestMap map = mapBuilder.build();
MapLiteTest.java,mapBuilder = map.toBuilder();,if (map != null ) mapBuilder = map.toBuilder();
MapLiteTest.java,map = mapBuilder.build();,if (mapBuilder != null ) map = mapBuilder.build();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapLiteTest.java,message = builder.build();,if (builder != null ) message = builder.build();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapLiteTest.java,builder = message.toBuilder();,if (message != null ) builder = message.toBuilder();
MapLiteTest.java,message = builder.build();,if (builder != null ) message = builder.build();
MapLiteTest.java,builder = message.toBuilder();,if (message != null ) builder = message.toBuilder();
MapLiteTest.java,message = builder.build();,if (builder != null ) message = builder.build();
MapLiteTest.java,builder = message.toBuilder();,if (message != null ) builder = message.toBuilder();
MapLiteTest.java,message = builder.build();,if (builder != null ) message = builder.build();
MapLiteTest.java,TestMap.Builder sourceBuilder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder sourceBuilder = TestMap.newBuilder();
MapLiteTest.java,TestMap source = sourceBuilder.build();,if (sourceBuilder != null ) TestMap source = sourceBuilder.build();
MapLiteTest.java,TestMap.Builder destination = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder destination = TestMap.newBuilder();
MapLiteTest.java,TestMap source = sourceBuilder.build();,if (sourceBuilder != null ) TestMap source = sourceBuilder.build();
MapLiteTest.java,TestMap.Builder destinationBuilder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder destinationBuilder = TestMap.newBuilder();
MapLiteTest.java,TestMap destination = destinationBuilder.build();,if (destinationBuilder != null ) TestMap destination = destinationBuilder.build();
MapLiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapLiteTest.java,builder = message.toBuilder();,if (message != null ) builder = message.toBuilder();
MapLiteTest.java,message = builder.build();,if (builder != null ) message = builder.build();
MapLiteTest.java,builder = message.toBuilder();,if (message != null ) builder = message.toBuilder();
MapLiteTest.java,message = builder.build();,if (builder != null ) message = builder.build();
MapLiteTest.java,map = (TestMap) expected.getUnfinishedMessage();,if (expected != null ) map = (TestMap) expected.getUnfinishedMessage();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapLiteTest.java,TestMap.Builder other = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder other = TestMap.newBuilder();
MapLiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapLiteTest.java,message = builder.build();,if (builder != null ) message = builder.build();
MapLiteTest.java,message = TestMap.parseFrom(message.toByteString());,if (TestMap != null ) message = TestMap.parseFrom(message.toByteString());
MapLiteTest.java,builder = message.toBuilder();,if (message != null ) builder = message.toBuilder();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapLiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
PackedFieldTest.java,CodedInputStream in = CodedInputStream.newInstance(message.toByteArray());,if (CodedInputStream != null ) CodedInputStream in = CodedInputStream.newInstance(message.toByteArray());
PackedFieldTest.java,int tag = in.readTag();,if (in != null ) int tag = in.readTag();
ParserLiteTest.java,Parser<MessageLite> parser = (Parser<MessageLite>) message.getParserForType();,if (message != null ) Parser<MessageLite> parser = (Parser<MessageLite>) message.getParserForType();
ParserLiteTest.java,TestPackedExtensionsLite packedMessage = TestUtilLite.getLitePackedExtensionsSet();,if (TestUtilLite != null ) TestPackedExtensionsLite packedMessage = TestUtilLite.getLitePackedExtensionsSet();
ParserLiteTest.java,InputStream input = new ByteArrayInputStream(output.toByteArray());,if (ByteArrayInputStream(output != null ) InputStream input = new ByteArrayInputStream(output.toByteArray());
ParserLiteTest.java,TestAllTypesLite.Builder builder = TestAllTypesLite.newBuilder();,if (TestAllTypesLite != null ) TestAllTypesLite.Builder builder = TestAllTypesLite.newBuilder();
ParserLiteTest.java,ExtensionRegistryLite registry = ExtensionRegistryLite.newInstance();,if (ExtensionRegistryLite != null ) ExtensionRegistryLite registry = ExtensionRegistryLite.newInstance();
Proto2ExtensionLookupSchemaTest.java,extensionRegistry = ExtensionRegistry.newInstance();,if (ExtensionRegistry != null ) extensionRegistry = ExtensionRegistry.newInstance();
Proto2ExtensionLookupSchemaTest.java,UnknownFieldSetLite unknowns = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite unknowns = UnknownFieldSetLite.newInstance();
Proto2ExtensionLookupSchemaTest.java,CodedOutputStream packedOut = packedBuilder.getCodedOutput();,if (packedBuilder != null ) CodedOutputStream packedOut = packedBuilder.getCodedOutput();
Proto2ExtensionLookupSchemaTest.java,int size = unknowns.getSerializedSize();,if (unknowns != null ) int size = unknowns.getSerializedSize();
Proto2MessageInfoFactory.java,StructuralMessageInfo.Builder builder = StructuralMessageInfo.newBuilder();,if (StructuralMessageInfo != null ) StructuralMessageInfo.Builder builder = StructuralMessageInfo.newBuilder();
Proto2UnknownEnumValueTest.java,UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();,if (UnknownFieldSet != null ) UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
Proto2UnknownEnumValueTest.java,UnknownFieldSet unknown = message.getUnknownFields();,if (message != null ) UnknownFieldSet unknown = message.getUnknownFields();
Proto2UnknownEnumValueTest.java,ExtensionRegistry registry = ExtensionRegistry.newInstance();,if (ExtensionRegistry != null ) ExtensionRegistry registry = ExtensionRegistry.newInstance();
Proto2UnknownEnumValueTest.java,UnknownFieldSet unknown = message.getUnknownFields();,if (message != null ) UnknownFieldSet unknown = message.getUnknownFields();
Proto3MessageInfoFactory.java,StructuralMessageInfo.Builder builder = StructuralMessageInfo.newBuilder();,if (StructuralMessageInfo != null ) StructuralMessageInfo.Builder builder = StructuralMessageInfo.newBuilder();
Proto3MessageLiteInfoFactory.java,StructuralMessageInfo.Builder builder = StructuralMessageInfo.newBuilder();,if (StructuralMessageInfo != null ) StructuralMessageInfo.Builder builder = StructuralMessageInfo.newBuilder();
TestSchemas.java,Protobuf protobuf = Protobuf.getInstance();,if (Protobuf != null ) Protobuf protobuf = Protobuf.getInstance();
TestSchemas.java,Protobuf protobuf = Protobuf.getInstance();,if (Protobuf != null ) Protobuf protobuf = Protobuf.getInstance();
TestSchemasLite.java,Protobuf protobuf = Protobuf.getInstance();,if (Protobuf != null ) Protobuf protobuf = Protobuf.getInstance();
TestSchemasLite.java,Protobuf protobuf = Protobuf.getInstance();,if (Protobuf != null ) Protobuf protobuf = Protobuf.getInstance();
TextFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TextFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
Utf8Utils.java,strings[i] = sb.toString();,if (sb != null ) strings[i] = sb.toString();
WireFormatLiteTest.java,TestAllExtensionsLite message = TestUtilLite.getAllLiteExtensionsSet();,if (TestUtilLite != null ) TestAllExtensionsLite message = TestUtilLite.getAllLiteExtensionsSet();
WireFormatLiteTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatLiteTest.java,TestPackedExtensionsLite message = TestUtilLite.getLitePackedExtensionsSet();,if (TestUtilLite != null ) TestPackedExtensionsLite message = TestUtilLite.getLitePackedExtensionsSet();
WireFormatLiteTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatLiteTest.java,TestAllTypes message = TestUtil.getAllSet();,if (TestUtil != null ) TestAllTypes message = TestUtil.getAllSet();
WireFormatLiteTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatLiteTest.java,ExtensionRegistryLite registryLite = TestUtilLite.getExtensionRegistryLite();,if (TestUtilLite != null ) ExtensionRegistryLite registryLite = TestUtilLite.getExtensionRegistryLite();
WireFormatLiteTest.java,TestPackedExtensionsLite message = TestUtilLite.getLitePackedExtensionsSet();,if (TestUtilLite != null ) TestPackedExtensionsLite message = TestUtilLite.getLitePackedExtensionsSet();
WireFormatLiteTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatLiteTest.java,ExtensionRegistryLite registry = TestUtilLite.getExtensionRegistryLite();,if (TestUtilLite != null ) ExtensionRegistryLite registry = TestUtilLite.getExtensionRegistryLite();
WireFormatLiteTest.java,TestAllTypes message = TestUtil.getAllSet();,if (TestUtil != null ) TestAllTypes message = TestUtil.getAllSet();
WireFormatLiteTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatLiteTest.java,TestPackedTypes message = TestUtil.getPackedSet();,if (TestUtil != null ) TestPackedTypes message = TestUtil.getPackedSet();
WireFormatLiteTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatLiteTest.java,TestAllExtensions message = TestUtil.getAllExtensionsSet();,if (TestUtil != null ) TestAllExtensions message = TestUtil.getAllExtensionsSet();
WireFormatLiteTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatLiteTest.java,TestPackedExtensions message = TestUtil.getPackedExtensionsSet();,if (TestUtil != null ) TestPackedExtensions message = TestUtil.getPackedExtensionsSet();
WireFormatLiteTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatLiteTest.java,TestPackedTypes message = TestUtil.getPackedSet();,if (TestUtil != null ) TestPackedTypes message = TestUtil.getPackedSet();
WireFormatLiteTest.java,TestAllTypes message = TestUtil.getAllSet();,if (TestUtil != null ) TestAllTypes message = TestUtil.getAllSet();
WireFormatLiteTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatLiteTest.java,ExtensionRegistryLite registry = TestUtil.getExtensionRegistry();,if (TestUtil != null ) ExtensionRegistryLite registry = TestUtil.getExtensionRegistry();
WireFormatLiteTest.java,TestPackedExtensions message = TestUtil.getPackedExtensionsSet();,if (TestUtil != null ) TestPackedExtensions message = TestUtil.getPackedExtensionsSet();
WireFormatLiteTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatLiteTest.java,ExtensionRegistryLite registry = TestUtil.getExtensionRegistry();,if (TestUtil != null ) ExtensionRegistryLite registry = TestUtil.getExtensionRegistry();
WireFormatLiteTest.java,ByteArrayInputStream input = new ByteArrayInputStream(output.toByteArray());,if (ByteArrayInputStream(output != null ) ByteArrayInputStream input = new ByteArrayInputStream(output.toByteArray());
WireFormatLiteTest.java,ExtensionRegistryLite result = ExtensionRegistryLite.newInstance();,if (ExtensionRegistryLite != null ) ExtensionRegistryLite result = ExtensionRegistryLite.newInstance();
WireFormatLiteTest.java,ExtensionRegistryLite result = ExtensionRegistryLite.newInstance();,if (ExtensionRegistryLite != null ) ExtensionRegistryLite result = ExtensionRegistryLite.newInstance();
WireFormatLiteTest.java,byte[] messageSetBytes = byteArrayOutputStream.toByteArray();,if (byteArrayOutputStream != null ) byte[] messageSetBytes = byteArrayOutputStream.toByteArray();
WireFormatLiteTest.java,ByteString data = messageSet.toByteString();,if (messageSet != null ) ByteString data = messageSet.toByteString();
WireFormatLiteTest.java,ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();,if (ExtensionRegistryLite != null ) ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();
WireFormatLiteTest.java,ByteString data = raw.toByteString();,if (raw != null ) ByteString data = raw.toByteString();
WireFormatLiteTest.java,ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();,if (ExtensionRegistryLite != null ) ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();
WireFormatLiteTest.java,ByteString data = raw.toByteString();,if (raw != null ) ByteString data = raw.toByteString();
WireFormatLiteTest.java,ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();,if (ExtensionRegistryLite != null ) ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();
WireFormatLiteTest.java,ByteString data = raw.toByteString();,if (raw != null ) ByteString data = raw.toByteString();
WireFormatLiteTest.java,ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();,if (ExtensionRegistryLite != null ) ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();
WireFormatLiteTest.java,ByteString.CodedBuilder out = ByteString.newCodedBuilder(raw.getSerializedSize());,if (ByteString != null ) ByteString.CodedBuilder out = ByteString.newCodedBuilder(raw.getSerializedSize());
WireFormatLiteTest.java,CodedOutputStream output = out.getCodedOutput();,if (out != null ) CodedOutputStream output = out.getCodedOutput();
WireFormatLiteTest.java,ByteString data = out.build();,if (out != null ) ByteString data = out.build();
WireFormatLiteTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatLiteTest.java,ByteString rawBytes = source.toByteString();,if (source != null ) ByteString rawBytes = source.toByteString();
WireFormatLiteTest.java,byte[] data = output.toByteArray();,if (output != null ) byte[] data = output.toByteArray();
WireFormatLiteTest.java,TestPackedTypes all = TestUtil.getPackedSet();,if (TestUtil != null ) TestPackedTypes all = TestUtil.getPackedSet();
WireFormatLiteTest.java,byte[] data = message.toByteArray();,if (message != null ) byte[] data = message.toByteArray();
WireFormatLiteTest.java,TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());,if (TestAllTypes != null ) TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());
WireFormatLiteTest.java,TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());,if (TestAllTypes != null ) TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());
WireFormatLiteTest.java,TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());,if (TestAllTypes != null ) TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());
WireFormatLiteTest.java,TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());,if (TestAllTypes != null ) TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());
WireFormatLiteTest.java,TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());,if (TestAllTypes != null ) TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());
WireFormatLiteTest.java,TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());,if (TestAllTypes != null ) TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());
WireFormatLiteTest.java,TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());,if (TestAllTypes != null ) TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());
WireFormatLiteTest.java,byte[] data = output.toByteArray();,if (output != null ) byte[] data = output.toByteArray();
WireFormatLiteTest.java,RawMessageSet raw = RawMessageSet.parseFrom(parsed.toByteArray());,if (RawMessageSet != null ) RawMessageSet raw = RawMessageSet.parseFrom(parsed.toByteArray());
WireFormatLiteTest.java,TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());,if (TestAllTypes != null ) TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());
WireFormatLiteTest.java,TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());,if (TestAllTypes != null ) TestAllTypes parsed = TestAllTypes.parseFrom(message.toByteArray());
WireFormatLiteTest.java,TestMap actual = TestMap.parseFrom(parsed.toByteArray());,if (TestMap != null ) TestMap actual = TestMap.parseFrom(parsed.toByteArray());
WireFormatLiteTest.java,ExtensionRegistryLite extensionRegistry = TestUtilLite.getExtensionRegistryLite();,if (TestUtilLite != null ) ExtensionRegistryLite extensionRegistry = TestUtilLite.getExtensionRegistryLite();
WireFormatLiteTest.java,TestMap parsed = TestMap.parseFrom(message.toByteArray());,if (TestMap != null ) TestMap parsed = TestMap.parseFrom(message.toByteArray());
WireFormatLiteTest.java,byte[] data = TestUtil.getAllSet().toByteArray();,if (TestUtil != null ) byte[] data = TestUtil.getAllSet().toByteArray();
WrappersLiteOfMethodTest.java,TopLevelMessage.Builder builder = TopLevelMessage.newBuilder();,if (TopLevelMessage != null ) TopLevelMessage.Builder builder = TopLevelMessage.newBuilder();
WrappersLiteOfMethodTest.java,TopLevelMessage message = builder.build();,if (builder != null ) TopLevelMessage message = builder.build();
WrappersLiteOfMethodTest.java,assertTrue(true == message.getFieldBool().getValue());,if (message != null ) assertTrue(true == message.getFieldBool().getValue());
WrappersOfMethodTest.java,TopLevelMessage.Builder builder = TopLevelMessage.newBuilder();,if (TopLevelMessage != null ) TopLevelMessage.Builder builder = TopLevelMessage.newBuilder();
WrappersOfMethodTest.java,TopLevelMessage message = builder.build();,if (builder != null ) TopLevelMessage message = builder.build();
WrappersOfMethodTest.java,assertTrue(true == message.getFieldBool().getValue());,if (message != null ) assertTrue(true == message.getFieldBool().getValue());
Proto2MessageLiteInfoFactory.java,StructuralMessageInfo.Builder builder = StructuralMessageInfo.newBuilder();,if (StructuralMessageInfo != null ) StructuralMessageInfo.Builder builder = StructuralMessageInfo.newBuilder();
JsonFormatTest.java,TestOneof.Builder successBuilder = TestOneof.newBuilder();,if (TestOneof != null ) TestOneof.Builder successBuilder = TestOneof.newBuilder();
JsonFormatTest.java,TestOneof.Builder builder = TestOneof.newBuilder();,if (TestOneof != null ) TestOneof.Builder builder = TestOneof.newBuilder();
GeneratedMessageLite.java,protoHash = mine.hashCode();,if (mine != null ) protoHash = mine.hashCode();
GeneratedMessageLite.java,int size = mine.size();,if (mine != null ) int size = mine.size();
GeneratedMessageLite.java,int otherSize = other.size();,if (other != null ) int otherSize = other.size();
GeneratedMessageLite.java,int size = mine.size();,if (mine != null ) int size = mine.size();
GeneratedMessageLite.java,int otherSize = other.size();,if (other != null ) int otherSize = other.size();
GeneratedMessageLite.java,int size = mine.size();,if (mine != null ) int size = mine.size();
GeneratedMessageLite.java,int otherSize = other.size();,if (other != null ) int otherSize = other.size();
GeneratedMessageLite.java,int size = mine.size();,if (mine != null ) int size = mine.size();
GeneratedMessageLite.java,int otherSize = other.size();,if (other != null ) int otherSize = other.size();
GeneratedMessageLite.java,int size = mine.size();,if (mine != null ) int size = mine.size();
GeneratedMessageLite.java,int otherSize = other.size();,if (other != null ) int otherSize = other.size();
GeneratedMessageLite.java,int size = mine.size();,if (mine != null ) int size = mine.size();
GeneratedMessageLite.java,int otherSize = other.size();,if (other != null ) int otherSize = other.size();
GeneratedMessageLite.java,mine = mine.clone();,if (mine != null ) mine = mine.clone();
GeneratedMessageLite.java,mine = mine.mutableCopy();,if (mine != null ) mine = mine.mutableCopy();
TextFormat.java,value = subField.finish();,if (subField != null ) value = subField.finish();
UnknownFieldSetLiteTest.java,allFields = TestUtil.getAllSet();,if (TestUtil != null ) allFields = TestUtil.getAllSet();
UnknownFieldSetLiteTest.java,allFieldsData = allFields.toByteString();,if (allFields != null ) allFieldsData = allFields.toByteString();
UnknownFieldSetLiteTest.java,unknownFields = emptyMessage.getUnknownFields();,if (emptyMessage != null ) unknownFields = emptyMessage.getUnknownFields();
UnknownFieldSetLiteTest.java,UnknownFieldSet.Builder bizarroFields = UnknownFieldSet.newBuilder();,if (UnknownFieldSet != null ) UnknownFieldSet.Builder bizarroFields = UnknownFieldSet.newBuilder();
UnknownFieldSetLiteTest.java,UnknownFieldSetLite unknownFields = UnknownFieldSetLite.getDefaultInstance();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite unknownFields = UnknownFieldSetLite.getDefaultInstance();
UnknownFieldSetLiteTest.java,UnknownFieldSetLite instance = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite instance = UnknownFieldSetLite.newInstance();
UnknownFieldSetLiteTest.java,CodedInputStream input = CodedInputStream.newInstance(foo.toByteArray());,if (CodedInputStream != null ) CodedInputStream input = CodedInputStream.newInstance(foo.toByteArray());
UnknownFieldSetLiteTest.java,UnknownFieldSetLite instance = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite instance = UnknownFieldSetLite.newInstance();
UnknownFieldSetLiteTest.java,CodedInputStream input = CodedInputStream.newInstance(foo.toByteArray());,if (CodedInputStream != null ) CodedInputStream input = CodedInputStream.newInstance(foo.toByteArray());
UnknownFieldSetLiteTest.java,UnknownFieldSetLite instance = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite instance = UnknownFieldSetLite.newInstance();
UnknownFieldSetLiteTest.java,Foo fooDeserialized = Foo.parseFrom(foo.toByteArray());,if (Foo != null ) Foo fooDeserialized = Foo.parseFrom(foo.toByteArray());
UnknownFieldSetLiteTest.java,UnknownFieldSetLite emptyFieldSet = UnknownFieldSetLite.getDefaultInstance();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite emptyFieldSet = UnknownFieldSetLite.getDefaultInstance();
UnknownFieldSetLiteTest.java,UnknownFieldSetLite paddedFieldSet = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite paddedFieldSet = UnknownFieldSetLite.newInstance();
UnknownFieldSetLiteTest.java,UnknownFieldSetLite unknownFields = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite unknownFields = UnknownFieldSetLite.newInstance();
UnknownFieldSetLiteTest.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
UnknownFieldSetLiteTest.java,UnknownFieldSetLite builder = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite builder = UnknownFieldSetLite.newInstance();
UnknownFieldSetLiteTest.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
UnknownFieldSetLiteTest.java,UnknownFieldSetLite unknownFields = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite unknownFields = UnknownFieldSetLite.newInstance();
UnknownFieldSetLiteTest.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
UnknownFieldSetLiteTest.java,Foo copy = Foo.parseFrom(foo.toByteArray());,if (Foo != null ) Foo copy = Foo.parseFrom(foo.toByteArray());
UnknownFieldSetLiteTest.java,Foo secondCopy = Foo.parseFrom(foo.toByteArray());,if (Foo != null ) Foo secondCopy = Foo.parseFrom(foo.toByteArray());
UnknownFieldSetLiteTest.java,ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();,if (ExtensionRegistryLite != null ) ExtensionRegistryLite extensionRegistry = ExtensionRegistryLite.newInstance();
UnknownFieldSetLiteTest.java,ByteString.Output byteStringOutput = ByteString.newOutput();,if (ByteString != null ) ByteString.Output byteStringOutput = ByteString.newOutput();
UnknownFieldSetLiteTest.java,ByteString.Output byteStringOutput = ByteString.newOutput();,if (ByteString != null ) ByteString.Output byteStringOutput = ByteString.newOutput();
UnknownFieldSetLiteTest.java,ByteString.Output byteStringOutput = ByteString.newOutput();,if (ByteString != null ) ByteString.Output byteStringOutput = ByteString.newOutput();
UnknownFieldSetLiteTest.java,UnknownFieldSetLite unknownFields = UnknownFieldSetLite.newInstance();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite unknownFields = UnknownFieldSetLite.newInstance();
UnknownFieldSetLiteTest.java,TestAllTypesLite testAllTypes = TestAllTypesLite.getDefaultInstance();,if (TestAllTypesLite != null ) TestAllTypesLite testAllTypes = TestAllTypesLite.getDefaultInstance();
UnknownFieldSetLiteTest.java,testAllTypes = TestAllTypesLite.newBuilder().build();,if (TestAllTypesLite != null ) testAllTypes = TestAllTypesLite.newBuilder().build();
UnknownFieldSetLiteTest.java,ByteString data = emptyMessageLite.toByteString();,if (emptyMessageLite != null ) ByteString data = emptyMessageLite.toByteString();
UnknownFieldSetLiteTest.java,TestAllExtensions allExtensions = TestUtil.getAllExtensionsSet();,if (TestUtil != null ) TestAllExtensions allExtensions = TestUtil.getAllExtensionsSet();
UnknownFieldSetLiteTest.java,ByteString allExtensionsData = allExtensions.toByteString();,if (allExtensions != null ) ByteString allExtensionsData = allExtensions.toByteString();
UnknownFieldSetLiteTest.java,ByteString data = emptyMessageLite.toByteString();,if (emptyMessageLite != null ) ByteString data = emptyMessageLite.toByteString();
UnknownFieldSetLiteTest.java,"TestAllExtensions message = TestAllExtensions.parseFrom(data, TestUtil.getExtensionRegistry());","if (TestUtil != null ) TestAllExtensions message = TestAllExtensions.parseFrom(data, TestUtil.getExtensionRegistry());"
UnknownFieldSetLiteTest.java,TestPackedTypes allPackedFields = TestUtil.getPackedSet();,if (TestUtil != null ) TestPackedTypes allPackedFields = TestUtil.getPackedSet();
UnknownFieldSetLiteTest.java,ByteString allPackedData = allPackedFields.toByteString();,if (allPackedFields != null ) ByteString allPackedData = allPackedFields.toByteString();
UnknownFieldSetLiteTest.java,ByteString data = emptyMessageLite.toByteString();,if (emptyMessageLite != null ) ByteString data = emptyMessageLite.toByteString();
UnknownFieldSetLiteTest.java,"TestPackedTypes message = TestPackedTypes.parseFrom(data, TestUtil.getExtensionRegistry());","if (TestUtil != null ) TestPackedTypes message = TestPackedTypes.parseFrom(data, TestUtil.getExtensionRegistry());"
UnknownFieldSetLiteTest.java,TestPackedExtensions allPackedExtensions = TestUtil.getPackedExtensionsSet();,if (TestUtil != null ) TestPackedExtensions allPackedExtensions = TestUtil.getPackedExtensionsSet();
UnknownFieldSetLiteTest.java,ByteString allPackedExtensionsData = allPackedExtensions.toByteString();,if (allPackedExtensions != null ) ByteString allPackedExtensionsData = allPackedExtensions.toByteString();
UnknownFieldSetLiteTest.java,ByteString data = emptyMessageLite.toByteString();,if (emptyMessageLite != null ) ByteString data = emptyMessageLite.toByteString();
UnknownFieldSetLiteTest.java,ByteString data = emptyMessageLite.toByteString();,if (emptyMessageLite != null ) ByteString data = emptyMessageLite.toByteString();
UnknownFieldSetLiteTest.java,data = emptyMessageLite.toByteString();,if (emptyMessageLite != null ) data = emptyMessageLite.toByteString();
ConformanceJava.java,testMessage = builder.build();,if (builder != null ) testMessage = builder.build();
Descriptors.java,StringBuilder result = new StringBuilder(name.length());,if (StringBuilder(name != null ) StringBuilder result = new StringBuilder(name.length());
ConformanceJava.java,ByteString MessageString = testMessage.toByteString();,if (testMessage != null ) ByteString MessageString = testMessage.toByteString();
TextFormat.java,Descriptors.OneofDescriptor oneof = field.getContainingOneof();,if (field != null ) Descriptors.OneofDescriptor oneof = field.getContainingOneof();
CodedInputStreamTest.java,byte[] rawInput = rawOutput.toByteArray();,if (rawOutput != null ) byte[] rawInput = rawOutput.toByteArray();
MapForProto2LiteTest.java,ByteString data = builder.build().toByteString();,if (builder != null ) ByteString data = builder.build().toByteString();
MapTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
GeneratedMessageLite.java,subBuilder = existingValue.toBuilder();,if (existingValue != null ) subBuilder = existingValue.toBuilder();
GeneratedMessageLite.java,value = subBuilder.build();,if (subBuilder != null ) value = subBuilder.build();
MessageReflection.java,Message.Builder subBuilder =  defaultInstance.newBuilderForType();,if (defaultInstance != null ) Message.Builder subBuilder =  defaultInstance.newBuilderForType();
FieldPresenceTest.java,TestAllTypes empty = TestAllTypes.newBuilder().build();,if (TestAllTypes != null ) TestAllTypes empty = TestAllTypes.newBuilder().build();
FieldPresenceTest.java,TestAllTypes message = TestAllTypes.newBuilder().build();,if (TestAllTypes != null ) TestAllTypes message = TestAllTypes.newBuilder().build();
IsValidUtf8TestUtil.java,SoftReference<ByteBuffer> ref = directBuffer.get();,if (directBuffer != null ) SoftReference<ByteBuffer> ref = directBuffer.get();
LazyMessageLiteTest.java,LazyInnerMessageLite inner = LazyInnerMessageLite.newBuilder().build();,if (LazyInnerMessageLite != null ) LazyInnerMessageLite inner = LazyInnerMessageLite.newBuilder().build();
MessageTest.java,Descriptors.Descriptor descriptor = TestRequired.getDescriptor();,if (TestRequired != null ) Descriptors.Descriptor descriptor = TestRequired.getDescriptor();
MessageTest.java,Descriptors.Descriptor descriptor = TestRequired.getDescriptor();,if (TestRequired != null ) Descriptors.Descriptor descriptor = TestRequired.getDescriptor();
JsonFormatTest.java,TestMap map = builder.build();,if (builder != null ) TestMap map = builder.build();
WireFormatTest.java,ExtensionRegistry registry = TestUtil.getExtensionRegistry();,if (TestUtil != null ) ExtensionRegistry registry = TestUtil.getExtensionRegistry();
WireFormatTest.java,ExtensionRegistry registry = TestUtil.getExtensionRegistry();,if (TestUtil != null ) ExtensionRegistry registry = TestUtil.getExtensionRegistry();
GeneratedMessageLite.java,messageClassName = regularForm.getClass().getName();,if (regularForm != null ) messageClassName = regularForm.getClass().getName();
ProtoBench.java,"mininumScale = Math.max(mininumScale, scanner.nextDouble());","if (scanner != null ) mininumScale = Math.max(mininumScale, scanner.nextDouble());"
CodedOutputByteBufferNano.java,int oldPosition = buffer.position();,if (buffer != null ) int oldPosition = buffer.position();
CodedOutputByteBufferNano.java,int newPosition = buffer.position();,if (buffer != null ) int newPosition = buffer.position();
CodedOutputByteBufferNano.java,final int size = value.getSerializedSize();,if (value != null ) final int size = value.getSerializedSize();
ExtendableMessageNano.java,size += field.computeSerializedSize();,if (field != null ) size += field.computeSerializedSize();
ExtendableMessageNano.java,int startPos = input.getPosition();,if (input != null ) int startPos = input.getPosition();
ExtendableMessageNano.java,int endPos = input.getPosition();,if (input != null ) int endPos = input.getPosition();
Extension.java,int resultSize = resultList.size();,if (resultList != null ) int resultSize = resultList.size();
Extension.java,MessageNano group = (MessageNano) messageType.newInstance();,if (messageType != null ) MessageNano group = (MessageNano) messageType.newInstance();
Extension.java,MessageNano message = (MessageNano) messageType.newInstance();,if (messageType != null ) MessageNano message = (MessageNano) messageType.newInstance();
FieldData.java,size += unknownField.computeSerializedSize();,if (unknownField != null ) size += unknownField.computeSerializedSize();
FieldData.java,cloneArray[i] = valueArray[i].clone();,if (valueArray[i] != null ) cloneArray[i] = valueArray[i].clone();
FieldData.java,cloneArray[i] = valueArray[i].clone();,if (valueArray[i] != null ) cloneArray[i] = valueArray[i].clone();
InternalNano.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
InternalNano.java,K key = entry.getKey();,if (entry != null ) K key = entry.getKey();
InternalNano.java,V value = entry.getValue();,if (entry != null ) V value = entry.getValue();
InternalNano.java,K key = entry.getKey();,if (entry != null ) K key = entry.getKey();
InternalNano.java,V value = entry.getValue();,if (entry != null ) V value = entry.getValue();
MessageNanoPrinter.java,int origIndentBufLength = indentBuf.length();,if (indentBuf != null ) int origIndentBufLength = indentBuf.length();
MessageNanoPrinter.java,int modifiers = field.getModifiers();,if (field != null ) int modifiers = field.getModifiers();
MessageNanoPrinter.java,String fieldName = field.getName();,if (field != null ) String fieldName = field.getName();
MessageNanoPrinter.java,String name = method.getName();,if (method != null ) String name = method.getName();
MessageNanoPrinter.java,int origIndentBufLength = indentBuf.length();,if (indentBuf != null ) int origIndentBufLength = indentBuf.length();
MessageNanoPrinter.java,int strLen = str.length();,if (str != null ) int strLen = str.length();
WireFormatNano.java,int startPos = input.getPosition();,if (input != null ) int startPos = input.getPosition();
NanoTest.java,SimpleMessageNano.NestedMessage nestedMsg = new SimpleMessageNano.NestedMessage();,if (SimpleMessageNano != null ) SimpleMessageNano.NestedMessage nestedMsg = new SimpleMessageNano.NestedMessage();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,RecursiveMessageNano.NestedMessage nestedMsg = new RecursiveMessageNano.NestedMessage();,if (RecursiveMessageNano != null ) RecursiveMessageNano.NestedMessage nestedMsg = new RecursiveMessageNano.NestedMessage();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,TestAllTypesNano.OptionalGroup grp = new TestAllTypesNano.OptionalGroup();,if (TestAllTypesNano != null ) TestAllTypesNano.OptionalGroup grp = new TestAllTypesNano.OptionalGroup();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,MessageWithGroup.Group grp = new MessageWithGroup.Group();,if (MessageWithGroup != null ) MessageWithGroup.Group grp = new MessageWithGroup.Group();
NanoTest.java,TestAllTypesNano.NestedMessage nestedMsg = new TestAllTypesNano.NestedMessage();,if (TestAllTypesNano != null ) TestAllTypesNano.NestedMessage nestedMsg = new TestAllTypesNano.NestedMessage();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,NanoOuterClass.ForeignMessageNano nestedMsg = new NanoOuterClass.ForeignMessageNano();,if (NanoOuterClass != null ) NanoOuterClass.ForeignMessageNano nestedMsg = new NanoOuterClass.ForeignMessageNano();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,UnittestImportNano.ImportMessageNano nestedMsg = new UnittestImportNano.ImportMessageNano();,if (UnittestImportNano != null ) UnittestImportNano.ImportMessageNano nestedMsg = new UnittestImportNano.ImportMessageNano();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,EnumValidity.M m = new EnumValidity.M();,if (EnumValidity != null ) EnumValidity.M m = new EnumValidity.M();
NanoTest.java,EnumValidityAccessors.M m = new EnumValidityAccessors.M();,if (EnumValidityAccessors != null ) EnumValidityAccessors.M m = new EnumValidityAccessors.M();
NanoTest.java,UnittestImportNano.ImportMessageNano importMsg = new UnittestImportNano.ImportMessageNano();,if (UnittestImportNano != null ) UnittestImportNano.ImportMessageNano importMsg = new UnittestImportNano.ImportMessageNano();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msg.optionalNestedMessage = new TestAllTypesNanoHas.NestedMessage();,if (TestAllTypesNanoHas != null ) msg.optionalNestedMessage = new TestAllTypesNanoHas.NestedMessage();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msg.optionalNestedMessage = new TestAllTypesNanoHas.NestedMessage();,if (TestAllTypesNanoHas != null ) msg.optionalNestedMessage = new TestAllTypesNanoHas.NestedMessage();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,byte[] defaultBytes = msg.getDefaultBytes();,if (msg != null ) byte[] defaultBytes = msg.getDefaultBytes();
NanoTest.java,msg.optionalNestedMessage = new TestNanoAccessors.NestedMessage();,if (TestNanoAccessors != null ) msg.optionalNestedMessage = new TestNanoAccessors.NestedMessage();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,TestNanoAccessors.NestedMessage nestedMessage = new TestNanoAccessors.NestedMessage();,if (TestNanoAccessors != null ) TestNanoAccessors.NestedMessage nestedMessage = new TestNanoAccessors.NestedMessage();
NanoTest.java,TestNanoAccessors.NestedMessage nestedMessage = new TestNanoAccessors.NestedMessage();,if (TestNanoAccessors != null ) TestNanoAccessors.NestedMessage nestedMessage = new TestNanoAccessors.NestedMessage();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,EnumClassNanos.EnumClassNano msg = new EnumClassNanos.EnumClassNano();,if (EnumClassNanos != null ) EnumClassNanos.EnumClassNano msg = new EnumClassNanos.EnumClassNano();
NanoTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msgSerializedSize = msg.getSerializedSize();,if (msg != null ) msgSerializedSize = msg.getSerializedSize();
NanoTest.java,msg.optionalGroup = new TestAllTypesNano.OptionalGroup();,if (TestAllTypesNano != null ) msg.optionalGroup = new TestAllTypesNano.OptionalGroup();
NanoTest.java,msg.optionalNestedMessage = new TestAllTypesNano.NestedMessage();,if (TestAllTypesNano != null ) msg.optionalNestedMessage = new TestAllTypesNano.NestedMessage();
NanoTest.java,String protoPrint = msg.toString();,if (msg != null ) String protoPrint = msg.toString();
NanoTest.java,msg.optionalNestedMessage = new TestNanoAccessors.NestedMessage();,if (TestNanoAccessors != null ) msg.optionalNestedMessage = new TestNanoAccessors.NestedMessage();
NanoTest.java,String protoPrint = msg.toString();,if (msg != null ) String protoPrint = msg.toString();
NanoTest.java,String protoPrint = msg.toString();,if (msg != null ) String protoPrint = msg.toString();
NanoTest.java,Extensions.ExtendableMessage message = new Extensions.ExtendableMessage();,if (Extensions != null ) Extensions.ExtendableMessage message = new Extensions.ExtendableMessage();
NanoTest.java,Extensions.ExtendableMessage clone = message.clone();,if (message != null ) Extensions.ExtendableMessage clone = message.clone();
NanoTest.java,Extensions.ExtendableMessage message = new Extensions.ExtendableMessage();,if (Extensions != null ) Extensions.ExtendableMessage message = new Extensions.ExtendableMessage();
NanoTest.java,Extensions.ExtendableMessage extendableMessage = new Extensions.ExtendableMessage();,if (Extensions != null ) Extensions.ExtendableMessage extendableMessage = new Extensions.ExtendableMessage();
NanoTest.java,Extensions.ExtendableMessage extendableMessage = new Extensions.ExtendableMessage();,if (Extensions != null ) Extensions.ExtendableMessage extendableMessage = new Extensions.ExtendableMessage();
NanoTest.java,Extensions.ExtendableMessage extendableMessage = new Extensions.ExtendableMessage();,if (Extensions != null ) Extensions.ExtendableMessage extendableMessage = new Extensions.ExtendableMessage();
NanoTest.java,NanoReferenceTypes.TestAllTypesNano message = new NanoReferenceTypes.TestAllTypesNano();,if (NanoReferenceTypes != null ) NanoReferenceTypes.TestAllTypesNano message = new NanoReferenceTypes.TestAllTypesNano();
NanoTest.java,message.optionalNestedMessage = new TestAllTypesNano.NestedMessage();,if (TestAllTypesNano != null ) message.optionalNestedMessage = new TestAllTypesNano.NestedMessage();
NanoTest.java,message.optionalNestedMessage = new TestAllTypesNanoHas.NestedMessage();,if (TestAllTypesNanoHas != null ) message.optionalNestedMessage = new TestAllTypesNanoHas.NestedMessage();
NanoTest.java,NanoReferenceTypes.TestAllTypesNano message = new NanoReferenceTypes.TestAllTypesNano();,if (NanoReferenceTypes != null ) NanoReferenceTypes.TestAllTypesNano message = new NanoReferenceTypes.TestAllTypesNano();
NanoTest.java,NanoRepeatedPackables.NonPacked nonPacked = new NanoRepeatedPackables.NonPacked();,if (NanoRepeatedPackables != null ) NanoRepeatedPackables.NonPacked nonPacked = new NanoRepeatedPackables.NonPacked();
NanoTest.java,TestMap.MessageValue origValue = new TestMap.MessageValue();,if (TestMap != null ) TestMap.MessageValue origValue = new TestMap.MessageValue();
NanoTest.java,TestMap.MessageValue newValue = new TestMap.MessageValue();,if (TestMap != null ) TestMap.MessageValue newValue = new TestMap.MessageValue();
NanoTest.java,TestMap.MessageValue result = new TestMap.MessageValue();,if (TestMap != null ) TestMap.MessageValue result = new TestMap.MessageValue();
NanoTest.java,NanoReferenceTypesCompat.TestAllTypesNano proto = new NanoReferenceTypesCompat.TestAllTypesNano();,if (NanoReferenceTypesCompat != null ) NanoReferenceTypesCompat.TestAllTypesNano proto = new NanoReferenceTypesCompat.TestAllTypesNano();
NanoTest.java,AnotherMessage clone = anotherMessage.clone();,if (anotherMessage != null ) AnotherMessage clone = anotherMessage.clone();
GeneratedMessageLite.java,extensions = extensions.clone();,if (extensions != null ) extensions = extensions.clone();
ProtoBench.java,ExtensionRegistry extensions = ExtensionRegistry.newInstance();,if (ExtensionRegistry != null ) ExtensionRegistry extensions = ExtensionRegistry.newInstance();
ProtoBench.java,byte[] singleInputData = benchmarkDataset.getPayload(i).toByteArray();,if (benchmarkDataset != null ) byte[] singleInputData = benchmarkDataset.getPayload(i).toByteArray();
ProtoBench.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
ProtoBench.java,long end = System.currentTimeMillis();,if (System != null ) long end = System.currentTimeMillis();
GeneratedMessageLite.java,instance.extensions = instance.extensions.clone();,if (instance != null ) instance.extensions = instance.extensions.clone();
FieldPresenceTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
FieldPresenceTest.java,TestAllTypes message = builder.build();,if (builder != null ) TestAllTypes message = builder.build();
FieldPresenceTest.java,ByteString data = message.toByteString();,if (message != null ) ByteString data = message.toByteString();
FieldPresenceTest.java,message = TestAllTypes.parseFrom(optionalOnlyMessage.toByteString());,if (TestAllTypes != null ) message = TestAllTypes.parseFrom(optionalOnlyMessage.toByteString());
RubyMessage.java,val = ByteString.copyFrom(str.getBytes());,if (ByteString != null ) val = ByteString.copyFrom(str.getBytes());
RubyMessage.java,val = str.asJavaString();,if (str != null ) val = str.asJavaString();
GeneratedMessageTest.java,TestAllExtensionsLite.Builder builder = TestAllExtensionsLite.newBuilder();,if (TestAllExtensionsLite != null ) TestAllExtensionsLite.Builder builder = TestAllExtensionsLite.newBuilder();
GeneratedMessageTest.java,TestAllExtensionsLite message = builder.build();,if (builder != null ) TestAllExtensionsLite message = builder.build();
GeneratedMessageTest.java,TestAllExtensionsLite.Builder builder = TestAllExtensionsLite.newBuilder();,if (TestAllExtensionsLite != null ) TestAllExtensionsLite.Builder builder = TestAllExtensionsLite.newBuilder();
GeneratedMessageTest.java,TestAllExtensionsLite message = builder.build();,if (builder != null ) TestAllExtensionsLite message = builder.build();
GeneratedMessageTest.java,TestAllExtensionsLite original = TestUtilLite.getAllLiteExtensionsSet();,if (TestUtilLite != null ) TestAllExtensionsLite original = TestUtilLite.getAllLiteExtensionsSet();
ParserTest.java,TestPackedExtensionsLite packedMessage = TestUtilLite.getLitePackedExtensionsSet();,if (TestUtilLite != null ) TestPackedExtensionsLite packedMessage = TestUtilLite.getLitePackedExtensionsSet();
ParserTest.java,InputStream input = new ByteArrayInputStream(output.toByteArray());,if (ByteArrayInputStream(output != null ) InputStream input = new ByteArrayInputStream(output.toByteArray());
ParserTest.java,TestAllTypesLite.Builder builder = TestAllTypesLite.newBuilder();,if (TestAllTypesLite != null ) TestAllTypesLite.Builder builder = TestAllTypesLite.newBuilder();
ParserTest.java,ExtensionRegistry registry = ExtensionRegistry.newInstance();,if (ExtensionRegistry != null ) ExtensionRegistry registry = ExtensionRegistry.newInstance();
UnknownFieldSetTest.java,ByteString data = emptyMessageLite.toByteString();,if (emptyMessageLite != null ) ByteString data = emptyMessageLite.toByteString();
UnknownFieldSetTest.java,TestAllExtensions allExtensions = TestUtil.getAllExtensionsSet();,if (TestUtil != null ) TestAllExtensions allExtensions = TestUtil.getAllExtensionsSet();
UnknownFieldSetTest.java,ByteString allExtensionsData = allExtensions.toByteString();,if (allExtensions != null ) ByteString allExtensionsData = allExtensions.toByteString();
UnknownFieldSetTest.java,ByteString data = emptyMessageLite.toByteString();,if (emptyMessageLite != null ) ByteString data = emptyMessageLite.toByteString();
UnknownFieldSetTest.java,TestPackedTypes allPackedFields = TestUtil.getPackedSet();,if (TestUtil != null ) TestPackedTypes allPackedFields = TestUtil.getPackedSet();
UnknownFieldSetTest.java,ByteString allPackedData = allPackedFields.toByteString();,if (allPackedFields != null ) ByteString allPackedData = allPackedFields.toByteString();
UnknownFieldSetTest.java,ByteString data = emptyMessageLite.toByteString();,if (emptyMessageLite != null ) ByteString data = emptyMessageLite.toByteString();
UnknownFieldSetTest.java,TestPackedExtensions allPackedExtensions = TestUtil.getPackedExtensionsSet();,if (TestUtil != null ) TestPackedExtensions allPackedExtensions = TestUtil.getPackedExtensionsSet();
UnknownFieldSetTest.java,ByteString allPackedExtensionsData = allPackedExtensions.toByteString();,if (allPackedExtensions != null ) ByteString allPackedExtensionsData = allPackedExtensions.toByteString();
UnknownFieldSetTest.java,ByteString data = emptyMessageLite.toByteString();,if (emptyMessageLite != null ) ByteString data = emptyMessageLite.toByteString();
UnknownFieldSetTest.java,ByteString data = emptyMessageLite.toByteString();,if (emptyMessageLite != null ) ByteString data = emptyMessageLite.toByteString();
UnknownFieldSetTest.java,data = emptyMessageLite.toByteString();,if (emptyMessageLite != null ) data = emptyMessageLite.toByteString();
WireFormatTest.java,TestAllExtensionsLite message = TestUtilLite.getAllLiteExtensionsSet();,if (TestUtilLite != null ) TestAllExtensionsLite message = TestUtilLite.getAllLiteExtensionsSet();
WireFormatTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatTest.java,TestPackedExtensionsLite message = TestUtilLite.getLitePackedExtensionsSet();,if (TestUtilLite != null ) TestPackedExtensionsLite message = TestUtilLite.getLitePackedExtensionsSet();
WireFormatTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatTest.java,TestAllTypes message = TestUtil.getAllSet();,if (TestUtil != null ) TestAllTypes message = TestUtil.getAllSet();
WireFormatTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatTest.java,ExtensionRegistry registry = TestUtil.getExtensionRegistry();,if (TestUtil != null ) ExtensionRegistry registry = TestUtil.getExtensionRegistry();
WireFormatTest.java,TestPackedExtensionsLite message = TestUtilLite.getLitePackedExtensionsSet();,if (TestUtilLite != null ) TestPackedExtensionsLite message = TestUtilLite.getLitePackedExtensionsSet();
WireFormatTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatTest.java,ExtensionRegistryLite registry = TestUtilLite.getExtensionRegistryLite();,if (TestUtilLite != null ) ExtensionRegistryLite registry = TestUtilLite.getExtensionRegistryLite();
ConformanceJava.java,ByteBuffer buffer = ByteBuffer.allocate(bytes.size());,if (ByteBuffer != null ) ByteBuffer buffer = ByteBuffer.allocate(bytes.size());
ConformanceJava.java,ByteBuffer buffer = ByteBuffer.allocateDirect(bytes.size());,if (ByteBuffer != null ) ByteBuffer buffer = ByteBuffer.allocateDirect(bytes.size());
ConformanceJava.java,ByteBuffer buffer = ByteBuffer.allocateDirect(bytes.size());,if (ByteBuffer != null ) ByteBuffer buffer = ByteBuffer.allocateDirect(bytes.size());
ConformanceJava.java,testMessage = parseBinary(request.getProtobufPayload());,if (parseBinary(request != null ) testMessage = parseBinary(request.getProtobufPayload());
CodedInputStream.java,int prevPos = buffer.position();,if (buffer != null ) int prevPos = buffer.position();
CodedInputStream.java,int prevLimit = buffer.limit();,if (buffer != null ) int prevLimit = buffer.limit();
GeneratedMessageLite.java,protoHash = mine.hashCode();,if (mine != null ) protoHash = mine.hashCode();
TextFormat.java,final int size = text.length();,if (text != null ) final int size = text.length();
ConformanceJava.java,ByteBuffer buffer = ByteBuffer.allocate(bytes.size());,if (ByteBuffer != null ) ByteBuffer buffer = ByteBuffer.allocate(bytes.size());
ConformanceJava.java,ByteBuffer buffer = ByteBuffer.allocate(bytes.size());,if (ByteBuffer != null ) ByteBuffer buffer = ByteBuffer.allocate(bytes.size());
ConformanceJava.java,ByteBuffer buffer = ByteBuffer.allocateDirect(bytes.size());,if (ByteBuffer != null ) ByteBuffer buffer = ByteBuffer.allocateDirect(bytes.size());
ConformanceJava.java,ByteBuffer buffer = ByteBuffer.allocateDirect(bytes.size());,if (ByteBuffer != null ) ByteBuffer buffer = ByteBuffer.allocateDirect(bytes.size());
ConformanceJava.java,ByteBuffer buffer = ByteBuffer.allocateDirect(bytes.size());,if (ByteBuffer != null ) ByteBuffer buffer = ByteBuffer.allocateDirect(bytes.size());
ConformanceJava.java,ByteBuffer buffer = ByteBuffer.allocateDirect(bytes.size());,if (ByteBuffer != null ) ByteBuffer buffer = ByteBuffer.allocateDirect(bytes.size());
ConformanceJava.java,testMessage = parseBinary(request.getProtobufPayload());,if (parseBinary(request != null ) testMessage = parseBinary(request.getProtobufPayload());
JsonFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
ConformanceJava.java,testMessage = Conformance.TestAllTypes.parseFrom(request.getProtobufPayload());,if (Conformance != null ) testMessage = Conformance.TestAllTypes.parseFrom(request.getProtobufPayload());
MapForProto2Test.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapTest.java,TestMap.Builder sourceBuilder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder sourceBuilder = TestMap.newBuilder();
MapTest.java,TestMap source = sourceBuilder.build();,if (sourceBuilder != null ) TestMap source = sourceBuilder.build();
MapTest.java,TestMap.Builder destinationBuilder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder destinationBuilder = TestMap.newBuilder();
MapTest.java,TestMap destination = destinationBuilder.build();,if (destinationBuilder != null ) TestMap destination = destinationBuilder.build();
MapTest.java,TestMap.Builder other = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder other = TestMap.newBuilder();
MapTest.java,TestMap.Builder entryBuilder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder entryBuilder = TestMap.newBuilder();
MapTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
MapTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
AbstractMessage.java,Iterator iterator = list.iterator();,if (list != null ) Iterator iterator = list.iterator();
AbstractMessage.java,Message entry = (Message) iterator.next();,if (iterator != null ) Message entry = (Message) iterator.next();
AbstractMessage.java,Descriptors.Descriptor descriptor = entry.getDescriptorForType();,if (entry != null ) Descriptors.Descriptor descriptor = entry.getDescriptorForType();
AbstractMessage.java,entry = (Message) iterator.next();,if (iterator != null ) entry = (Message) iterator.next();
AbstractMessage.java,FieldDescriptor field = entry.getKey();,if (entry != null ) FieldDescriptor field = entry.getKey();
AbstractMessage.java,Object value = entry.getValue();,if (entry != null ) Object value = entry.getValue();
AbstractMessage.java,final FieldDescriptor field = entry.getKey();,if (entry != null ) final FieldDescriptor field = entry.getKey();
AbstractMessage.java,final int tag = input.readTag();,if (input != null ) final int tag = input.readTag();
AbstractMessageLite.java,final CodedInputStream input = data.newCodedInput();,if (data != null ) final CodedInputStream input = data.newCodedInput();
AbstractMessageLite.java,final CodedInputStream input = data.newCodedInput();,if (data != null ) final CodedInputStream input = data.newCodedInput();
AbstractMessageLite.java,final int result = super.read();,if (super != null ) final int result = super.read();
AbstractMessageLite.java,final int firstByte = input.read();,if (input != null ) final int firstByte = input.read();
AbstractParser.java,CodedInputStream input = data.newCodedInput();,if (data != null ) CodedInputStream input = data.newCodedInput();
AbstractParser.java,int firstByte = input.read();,if (input != null ) int firstByte = input.read();
CodedInputStream.java,ByteBuffer temp = buf.duplicate();,if (buf != null ) ByteBuffer temp = buf.duplicate();
CodedInputStream.java,final int firstByte = input.read();,if (input != null ) final int firstByte = input.read();
CodedInputStream.java,final int b = input.read();,if (input != null ) final int b = input.read();
CodedInputStream.java,final int b = input.read();,if (input != null ) final int b = input.read();
Descriptors.java,jsonName = fieldNameToLowerCamelCase(proto.getName());,if (fieldNameToLowerCamelCase(proto != null ) jsonName = fieldNameToLowerCamelCase(proto.getName());
UnsafeByteOperations.java,final int offset = buffer.arrayOffset();,if (buffer != null ) final int offset = buffer.arrayOffset();
CodedInputStreamTest.java,CodedInputStream input = rawOutput.toByteString().newCodedInput();,if (rawOutput != null ) CodedInputStream input = rawOutput.toByteString().newCodedInput();
CodedInputStreamTest.java,String text = input.readString();,if (input != null ) String text = input.readString();
CodedInputStreamTest.java,CodedInputStream input = rawOutput.toByteString().newCodedInput();,if (rawOutput != null ) CodedInputStream input = rawOutput.toByteString().newCodedInput();
CodedInputStreamTest.java,String text = input.readString();,if (input != null ) String text = input.readString();
CodedInputStreamTest.java,CodedInputStream input = rawOutput.toByteString().newCodedInput();,if (rawOutput != null ) CodedInputStream input = rawOutput.toByteString().newCodedInput();
CodedInputStreamTest.java,CodedInputStream inputStream = rawOutput.toByteString().newCodedInput();,if (rawOutput != null ) CodedInputStream inputStream = rawOutput.toByteString().newCodedInput();
CodedInputStreamTest.java,byte[] result = inputStream.readByteArray();,if (inputStream != null ) byte[] result = inputStream.readByteArray();
CodedInputStreamTest.java,result = inputStream.readByteArray();,if (inputStream != null ) result = inputStream.readByteArray();
CodedInputStreamTest.java,result = inputStream.readByteArray();,if (inputStream != null ) result = inputStream.readByteArray();
CodedInputStreamTest.java,result = inputStream.readByteArray();,if (inputStream != null ) result = inputStream.readByteArray();
CodedInputStreamTest.java,CodedInputStream inputStream = rawOutput.toByteString().newCodedInput();,if (rawOutput != null ) CodedInputStream inputStream = rawOutput.toByteString().newCodedInput();
CodedInputStreamTest.java,ByteBuffer result = inputStream.readByteBuffer();,if (inputStream != null ) ByteBuffer result = inputStream.readByteBuffer();
CodedInputStreamTest.java,result = inputStream.readByteBuffer();,if (inputStream != null ) result = inputStream.readByteBuffer();
CodedInputStreamTest.java,result = inputStream.readByteBuffer();,if (inputStream != null ) result = inputStream.readByteBuffer();
CodedInputStreamTest.java,result = inputStream.readByteBuffer();,if (inputStream != null ) result = inputStream.readByteBuffer();
CodedInputStreamTest.java,ByteBuffer result = inputStream.readByteBuffer();,if (inputStream != null ) ByteBuffer result = inputStream.readByteBuffer();
CodedInputStreamTest.java,result = inputStream.readByteBuffer();,if (inputStream != null ) result = inputStream.readByteBuffer();
CodedInputStreamTest.java,result = inputStream.readByteBuffer();,if (inputStream != null ) result = inputStream.readByteBuffer();
CodedInputStreamTest.java,result = inputStream.readByteBuffer();,if (inputStream != null ) result = inputStream.readByteBuffer();
CodedInputStreamTest.java,result = inputStream.readByteBuffer();,if (inputStream != null ) result = inputStream.readByteBuffer();
CodedInputStreamTest.java,result = inputStream.readByteBuffer();,if (inputStream != null ) result = inputStream.readByteBuffer();
CodedInputStreamTest.java,result = inputStream.readByteBuffer();,if (inputStream != null ) result = inputStream.readByteBuffer();
CodedInputStreamTest.java,result = inputStream.readByteBuffer();,if (inputStream != null ) result = inputStream.readByteBuffer();
CodedInputStreamTest.java,ByteString serialized = message.toByteString();,if (message != null ) ByteString serialized = message.toByteString();
JsonFormat.java,String encoded = json.getAsString();,if (json != null ) String encoded = json.getAsString();
AbstractMessage.java,Iterator iterator = list.iterator();,if (list != null ) Iterator iterator = list.iterator();
AbstractMessage.java,Message entry = (Message) iterator.next();,if (iterator != null ) Message entry = (Message) iterator.next();
AbstractMessage.java,Descriptors.Descriptor descriptor = entry.getDescriptorForType();,if (entry != null ) Descriptors.Descriptor descriptor = entry.getDescriptorForType();
AbstractMessage.java,entry = (Message) iterator.next();,if (iterator != null ) entry = (Message) iterator.next();
AbstractMessage.java,FieldDescriptor field = entry.getKey();,if (entry != null ) FieldDescriptor field = entry.getKey();
AbstractMessage.java,Object value = entry.getValue();,if (entry != null ) Object value = entry.getValue();
AbstractMessage.java,final FieldDescriptor field = entry.getKey();,if (entry != null ) final FieldDescriptor field = entry.getKey();
AbstractMessage.java,final int tag = input.readTag();,if (input != null ) final int tag = input.readTag();
AbstractMessageLite.java,final CodedInputStream input = data.newCodedInput();,if (data != null ) final CodedInputStream input = data.newCodedInput();
AbstractMessageLite.java,final CodedInputStream input = data.newCodedInput();,if (data != null ) final CodedInputStream input = data.newCodedInput();
AbstractMessageLite.java,final int result = super.read();,if (super != null ) final int result = super.read();
AbstractMessageLite.java,final int firstByte = input.read();,if (input != null ) final int firstByte = input.read();
AbstractParser.java,CodedInputStream input = data.newCodedInput();,if (data != null ) CodedInputStream input = data.newCodedInput();
AbstractParser.java,int firstByte = input.read();,if (input != null ) int firstByte = input.read();
CodedInputStream.java,ByteBuffer temp = buf.duplicate();,if (buf != null ) ByteBuffer temp = buf.duplicate();
CodedInputStream.java,final int firstByte = input.read();,if (input != null ) final int firstByte = input.read();
CodedInputStream.java,final int b = input.read();,if (input != null ) final int b = input.read();
CodedInputStream.java,final int b = input.read();,if (input != null ) final int b = input.read();
Descriptors.java,jsonName = fieldNameToLowerCamelCase(proto.getName());,if (fieldNameToLowerCamelCase(proto != null ) jsonName = fieldNameToLowerCamelCase(proto.getName());
UnsafeByteOperations.java,final int offset = buffer.arrayOffset();,if (buffer != null ) final int offset = buffer.arrayOffset();
CodedInputStreamTest.java,CodedInputStream input = rawOutput.toByteString().newCodedInput();,if (rawOutput != null ) CodedInputStream input = rawOutput.toByteString().newCodedInput();
CodedInputStreamTest.java,String text = input.readString();,if (input != null ) String text = input.readString();
CodedInputStreamTest.java,CodedInputStream input = rawOutput.toByteString().newCodedInput();,if (rawOutput != null ) CodedInputStream input = rawOutput.toByteString().newCodedInput();
CodedInputStreamTest.java,String text = input.readString();,if (input != null ) String text = input.readString();
CodedInputStreamTest.java,CodedInputStream input = rawOutput.toByteString().newCodedInput();,if (rawOutput != null ) CodedInputStream input = rawOutput.toByteString().newCodedInput();
CodedInputStreamTest.java,CodedInputStream inputStream = rawOutput.toByteString().newCodedInput();,if (rawOutput != null ) CodedInputStream inputStream = rawOutput.toByteString().newCodedInput();
CodedInputStreamTest.java,byte[] result = inputStream.readByteArray();,if (inputStream != null ) byte[] result = inputStream.readByteArray();
CodedInputStreamTest.java,result = inputStream.readByteArray();,if (inputStream != null ) result = inputStream.readByteArray();
CodedInputStreamTest.java,result = inputStream.readByteArray();,if (inputStream != null ) result = inputStream.readByteArray();
CodedInputStreamTest.java,result = inputStream.readByteArray();,if (inputStream != null ) result = inputStream.readByteArray();
CodedInputStreamTest.java,CodedInputStream inputStream = rawOutput.toByteString().newCodedInput();,if (rawOutput != null ) CodedInputStream inputStream = rawOutput.toByteString().newCodedInput();
CodedInputStreamTest.java,ByteBuffer result = inputStream.readByteBuffer();,if (inputStream != null ) ByteBuffer result = inputStream.readByteBuffer();
CodedInputStreamTest.java,result = inputStream.readByteBuffer();,if (inputStream != null ) result = inputStream.readByteBuffer();
CodedInputStreamTest.java,result = inputStream.readByteBuffer();,if (inputStream != null ) result = inputStream.readByteBuffer();
CodedInputStreamTest.java,result = inputStream.readByteBuffer();,if (inputStream != null ) result = inputStream.readByteBuffer();
CodedInputStreamTest.java,ByteBuffer result = inputStream.readByteBuffer();,if (inputStream != null ) ByteBuffer result = inputStream.readByteBuffer();
CodedInputStreamTest.java,result = inputStream.readByteBuffer();,if (inputStream != null ) result = inputStream.readByteBuffer();
CodedInputStreamTest.java,result = inputStream.readByteBuffer();,if (inputStream != null ) result = inputStream.readByteBuffer();
CodedInputStreamTest.java,result = inputStream.readByteBuffer();,if (inputStream != null ) result = inputStream.readByteBuffer();
CodedInputStreamTest.java,result = inputStream.readByteBuffer();,if (inputStream != null ) result = inputStream.readByteBuffer();
CodedInputStreamTest.java,result = inputStream.readByteBuffer();,if (inputStream != null ) result = inputStream.readByteBuffer();
CodedInputStreamTest.java,result = inputStream.readByteBuffer();,if (inputStream != null ) result = inputStream.readByteBuffer();
CodedInputStreamTest.java,result = inputStream.readByteBuffer();,if (inputStream != null ) result = inputStream.readByteBuffer();
CodedInputStreamTest.java,ByteString serialized = message.toByteString();,if (message != null ) ByteString serialized = message.toByteString();
JsonFormat.java,String encoded = json.getAsString();,if (json != null ) String encoded = json.getAsString();
RepeatedFieldBuilderTest.java,TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();,if (TestUtil != null ) TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();
RepeatedFieldBuilderTest.java,List<TestAllTypes> list = builder.build();,if (builder != null ) List<TestAllTypes> list = builder.build();
RepeatedFieldBuilderTest.java,TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();,if (TestUtil != null ) TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();
RepeatedFieldBuilderTest.java,List<TestAllTypes> list = builder.build();,if (builder != null ) List<TestAllTypes> list = builder.build();
RepeatedFieldBuilderTest.java,list = builder.build();,if (builder != null ) list = builder.build();
RepeatedFieldBuilderTest.java,TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();,if (TestUtil != null ) TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();
RepeatedFieldBuilderTest.java,List<TestAllTypes> messages = builder.build();,if (builder != null ) List<TestAllTypes> messages = builder.build();
RepeatedFieldBuilderTest.java,TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();,if (TestUtil != null ) TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();
RepeatedFieldBuilderTest.java,List<TestAllTypes> protos = builder.getMessageList();,if (builder != null ) List<TestAllTypes> protos = builder.getMessageList();
SingleFieldBuilderTest.java,TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();,if (TestUtil != null ) TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();
SingleFieldBuilderTest.java,TestAllTypes message = builder.build();,if (builder != null ) TestAllTypes message = builder.build();
SingleFieldBuilderTest.java,TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();,if (TestUtil != null ) TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();
SingleFieldBuilderTest.java,TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();,if (TestUtil != null ) TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();
SingleFieldBuilderTest.java,TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();,if (TestUtil != null ) TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();
RepeatedFieldBuilderTest.java,TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();,if (TestUtil != null ) TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();
RepeatedFieldBuilderTest.java,List<TestAllTypes> list = builder.build();,if (builder != null ) List<TestAllTypes> list = builder.build();
RepeatedFieldBuilderTest.java,TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();,if (TestUtil != null ) TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();
RepeatedFieldBuilderTest.java,List<TestAllTypes> list = builder.build();,if (builder != null ) List<TestAllTypes> list = builder.build();
RepeatedFieldBuilderTest.java,list = builder.build();,if (builder != null ) list = builder.build();
RepeatedFieldBuilderTest.java,TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();,if (TestUtil != null ) TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();
RepeatedFieldBuilderTest.java,List<TestAllTypes> messages = builder.build();,if (builder != null ) List<TestAllTypes> messages = builder.build();
RepeatedFieldBuilderTest.java,TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();,if (TestUtil != null ) TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();
RepeatedFieldBuilderTest.java,List<TestAllTypes> protos = builder.getMessageList();,if (builder != null ) List<TestAllTypes> protos = builder.getMessageList();
SingleFieldBuilderTest.java,TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();,if (TestUtil != null ) TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();
SingleFieldBuilderTest.java,TestAllTypes message = builder.build();,if (builder != null ) TestAllTypes message = builder.build();
SingleFieldBuilderTest.java,TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();,if (TestUtil != null ) TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();
SingleFieldBuilderTest.java,TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();,if (TestUtil != null ) TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();
SingleFieldBuilderTest.java,TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();,if (TestUtil != null ) TestUtil.MockBuilderParent mockParent = new TestUtil.MockBuilderParent();
MapEntry.java,dataBuilder = data.toBuilder();,if (data != null ) dataBuilder = data.toBuilder();
MapEntry.java,data = dataBuilder.buildPartial();,if (dataBuilder != null ) data = dataBuilder.buildPartial();
MapEntryLite.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
MapForProto2LiteTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
JsonFormat.java,FieldMask value = FieldMaskUtil.fromString(json.getAsString());,if (FieldMaskUtil != null ) FieldMask value = FieldMaskUtil.fromString(json.getAsString());
JsonFormat.java,Timestamp value = TimeUtil.parseTimestamp(json.getAsString());,if (TimeUtil != null ) Timestamp value = TimeUtil.parseTimestamp(json.getAsString());
JsonFormat.java,Duration value = TimeUtil.parseDuration(json.getAsString());,if (TimeUtil != null ) Duration value = TimeUtil.parseDuration(json.getAsString());
TimeUtil.java,long seconds = duration.getSeconds();,if (duration != null ) long seconds = duration.getSeconds();
TimeUtil.java,int nanos = duration.getNanos();,if (duration != null ) int nanos = duration.getNanos();
AbstractMessage.java,Iterator iterator = list.iterator();,if (list != null ) Iterator iterator = list.iterator();
AbstractMessage.java,Message entry = (Message) iterator.next();,if (iterator != null ) Message entry = (Message) iterator.next();
AbstractMessage.java,Descriptors.Descriptor descriptor = entry.getDescriptorForType();,if (entry != null ) Descriptors.Descriptor descriptor = entry.getDescriptorForType();
AbstractMessage.java,entry = (Message) iterator.next();,if (iterator != null ) entry = (Message) iterator.next();
AbstractMessage.java,FieldDescriptor field = entry.getKey();,if (entry != null ) FieldDescriptor field = entry.getKey();
AbstractMessage.java,Object value = entry.getValue();,if (entry != null ) Object value = entry.getValue();
AbstractMessage.java,final FieldDescriptor field = entry.getKey();,if (entry != null ) final FieldDescriptor field = entry.getKey();
AbstractMessage.java,final int tag = input.readTag();,if (input != null ) final int tag = input.readTag();
AbstractMessageLite.java,final CodedInputStream input = data.newCodedInput();,if (data != null ) final CodedInputStream input = data.newCodedInput();
AbstractMessageLite.java,final CodedInputStream input = data.newCodedInput();,if (data != null ) final CodedInputStream input = data.newCodedInput();
AbstractMessageLite.java,final int result = super.read();,if (super != null ) final int result = super.read();
AbstractMessageLite.java,final int firstByte = input.read();,if (input != null ) final int firstByte = input.read();
AbstractParser.java,CodedInputStream input = data.newCodedInput();,if (data != null ) CodedInputStream input = data.newCodedInput();
AbstractParser.java,int firstByte = input.read();,if (input != null ) int firstByte = input.read();
BooleanArrayList.java,array = list.array.clone();,if (list != null ) array = list.array.clone();
BooleanArrayList.java,size = other.size();,if (other != null ) size = other.size();
CodedOutputStream.java,ByteBuffer duplicated = value.duplicate();,if (value != null ) ByteBuffer duplicated = value.duplicate();
CodedOutputStream.java,final int size = value.getSerializedSize();,if (value != null ) final int size = value.getSerializedSize();
CodedOutputStream.java,final int size = value.getSerializedSize();,if (value != null ) final int size = value.getSerializedSize();
CodedOutputStream.java,int length = value.remaining();,if (value != null ) int length = value.remaining();
DoubleArrayList.java,array = list.array.clone();,if (list != null ) array = list.array.clone();
DoubleArrayList.java,size = other.size();,if (other != null ) size = other.size();
FloatArrayList.java,array = list.array.clone();,if (list != null ) array = list.array.clone();
FloatArrayList.java,size = other.size();,if (other != null ) size = other.size();
GeneratedMessageLite.java,unknownFields = UnknownFieldSetLite.getDefaultInstance();,if (UnknownFieldSetLite != null ) unknownFields = UnknownFieldSetLite.getDefaultInstance();
GeneratedMessageLite.java,parsedMessage = (MessageType) e.getUnfinishedMessage();,if (e != null ) parsedMessage = (MessageType) e.getUnfinishedMessage();
IntArrayList.java,array = list.array.clone();,if (list != null ) array = list.array.clone();
IntArrayList.java,size = other.size();,if (other != null ) size = other.size();
LongArrayList.java,array = list.array.clone();,if (list != null ) array = list.array.clone();
LongArrayList.java,size = other.size();,if (other != null ) size = other.size();
MessageLiteToString.java,String fieldName = field.getName();,if (field != null ) String fieldName = field.getName();
BooleanArrayListTest.java,copy = new BooleanArrayList(BooleanArrayList.emptyList());,if (BooleanArrayList(BooleanArrayList != null ) copy = new BooleanArrayList(BooleanArrayList.emptyList());
CodedOutputStreamTest.java,byte[] bytes = rawOutput.toByteArray();,if (rawOutput != null ) byte[] bytes = rawOutput.toByteArray();
CodedOutputStreamTest.java,byte[] bytes = rawOutput.toByteArray();,if (rawOutput != null ) byte[] bytes = rawOutput.toByteArray();
CodedOutputStreamTest.java,byte[] rawBytes = message.toByteArray();,if (message != null ) byte[] rawBytes = message.toByteArray();
CodedOutputStreamTest.java,byte[] rawBytes = message.toByteArray();,if (message != null ) byte[] rawBytes = message.toByteArray();
CodedOutputStreamTest.java,byte[] rawBytes = message.toByteArray();,if (message != null ) byte[] rawBytes = message.toByteArray();
DoubleArrayListTest.java,copy = new DoubleArrayList(DoubleArrayList.emptyList());,if (DoubleArrayList(DoubleArrayList != null ) copy = new DoubleArrayList(DoubleArrayList.emptyList());
FloatArrayListTest.java,copy = new FloatArrayList(FloatArrayList.emptyList());,if (FloatArrayList(FloatArrayList != null ) copy = new FloatArrayList(FloatArrayList.emptyList());
GeneratedMessageTest.java,TestAllExtensionsLite original = TestUtil.getAllLiteExtensionsSet();,if (TestUtil != null ) TestAllExtensionsLite original = TestUtil.getAllLiteExtensionsSet();
IntArrayListTest.java,copy = new IntArrayList(IntArrayList.emptyList());,if (IntArrayList(IntArrayList != null ) copy = new IntArrayList(IntArrayList.emptyList());
LongArrayListTest.java,copy = new LongArrayList(LongArrayList.emptyList());,if (LongArrayList(LongArrayList != null ) copy = new LongArrayList(LongArrayList.emptyList());
ProtobufArrayListTest.java,copy = new ProtobufArrayList<Integer>(IntArrayList.emptyList());,if (ProtobufArrayList<Integer>(IntArrayList != null ) copy = new ProtobufArrayList<Integer>(IntArrayList.emptyList());
TestUtil.java,TestAllTypesLite.Builder builder = TestAllTypesLite.newBuilder();,if (TestAllTypesLite != null ) TestAllTypesLite.Builder builder = TestAllTypesLite.newBuilder();
TestUtil.java,TestAllExtensionsLite.Builder builder = TestAllExtensionsLite.newBuilder();,if (TestAllExtensionsLite != null ) TestAllExtensionsLite.Builder builder = TestAllExtensionsLite.newBuilder();
TestUtil.java,ExtensionRegistryLite registry = ExtensionRegistryLite.newInstance();,if (ExtensionRegistryLite != null ) ExtensionRegistryLite registry = ExtensionRegistryLite.newInstance();
WireFormatTest.java,TestAllExtensionsLite message = TestUtil.getAllLiteExtensionsSet();,if (TestUtil != null ) TestAllExtensionsLite message = TestUtil.getAllLiteExtensionsSet();
WireFormatTest.java,TestPackedExtensionsLite message = TestUtil.getLitePackedExtensionsSet();,if (TestUtil != null ) TestPackedExtensionsLite message = TestUtil.getLitePackedExtensionsSet();
WireFormatTest.java,TestPackedExtensionsLite message = TestUtil.getLitePackedExtensionsSet();,if (TestUtil != null ) TestPackedExtensionsLite message = TestUtil.getLitePackedExtensionsSet();
WireFormatTest.java,ExtensionRegistryLite registry = TestUtil.getExtensionRegistryLite();,if (TestUtil != null ) ExtensionRegistryLite registry = TestUtil.getExtensionRegistryLite();
CodedOutputStream.java,final int size = value.getSerializedSize();,if (value != null ) final int size = value.getSerializedSize();
CodedOutputStream.java,ByteBuffer duplicated = value.duplicate();,if (value != null ) ByteBuffer duplicated = value.duplicate();
NioByteString.java,this.buffer = buffer.slice();,if (buffer != null ) this.buffer = buffer.slice();
NioByteString.java,bytes = buffer.array();,if (buffer != null ) bytes = buffer.array();
NioByteString.java,startIndex = buffer.arrayOffset() + buffer.position();,if (buffer != null ) startIndex = buffer.arrayOffset() + buffer.position();
NioByteString.java,bytes = buffer.array();,if (buffer != null ) bytes = buffer.array();
NioByteString.java,startIndex = buffer.arrayOffset() + buffer.position();,if (buffer != null ) startIndex = buffer.arrayOffset() + buffer.position();
TextFormat.java,final StringBuilder builder = new StringBuilder(input.size());,if (StringBuilder(input != null ) final StringBuilder builder = new StringBuilder(input.size());
LiteTest.java,ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray());,if (ByteArrayInputStream(baos != null ) ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray());
LiteTest.java,TestAllTypesLite actual = (TestAllTypesLite) in.readObject();,if (in != null ) TestAllTypesLite actual = (TestAllTypesLite) in.readObject();
LiteralByteStringTest.java,byte[] newBytes = stringUnderTest.toByteArray();,if (stringUnderTest != null ) byte[] newBytes = stringUnderTest.toByteArray();
ParseExceptionsTest.java,DescriptorProto.Builder builder = DescriptorProto.newBuilder();,if (DescriptorProto != null ) DescriptorProto.Builder builder = DescriptorProto.newBuilder();
ParseExceptionsTest.java,DescriptorProto.Builder builder = DescriptorProto.newBuilder();,if (DescriptorProto != null ) DescriptorProto.Builder builder = DescriptorProto.newBuilder();
TextFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
UnknownFieldSetLiteTest.java,UnknownFieldSetLite.Builder builder = UnknownFieldSetLite.newBuilder();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite.Builder builder = UnknownFieldSetLite.newBuilder();
UnknownFieldSetLiteTest.java,UnknownFieldSetLite.Builder builder = UnknownFieldSetLite.newBuilder();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite.Builder builder = UnknownFieldSetLite.newBuilder();
CodedInputStream.java,bufferPos = byteString.getOffsetIntoBytes();,if (byteString != null ) bufferPos = byteString.getOffsetIntoBytes();
CodedInputStream.java,bufferSize = bufferPos + byteString.size();,if (byteString != null ) bufferSize = bufferPos + byteString.size();
LiteralByteStringTest.java,String actualClassName = object.getClass().getName();,if (object != null ) String actualClassName = object.getClass().getName();
LiteralByteString.java,int thatHash = otherAsLiteral.peekCachedHashCode();,if (otherAsLiteral != null ) int thatHash = otherAsLiteral.peekCachedHashCode();
ParseExceptionsTest.java,serializedProto = bos.toByteArray();,if (bos != null ) serializedProto = bos.toByteArray();
ParseExceptionsTest.java,DescriptorProto.Builder builder = DescriptorProto.newBuilder();,if (DescriptorProto != null ) DescriptorProto.Builder builder = DescriptorProto.newBuilder();
ParseExceptionsTest.java,DescriptorProto.Builder builder = DescriptorProto.newBuilder();,if (DescriptorProto != null ) DescriptorProto.Builder builder = DescriptorProto.newBuilder();
ByteString.java,int otherSize = other.size();,if (other != null ) int otherSize = other.size();
ByteString.java,"result = balancedConcat(collection.iterator(), collection.size());","if (collection != null ) result = balancedConcat(collection.iterator(), collection.size());"
RopeByteString.java,int newLength = left.size() + right.size();,if (right != null ) int newLength = left.size() + right.size();
RopeByteString.java,LiteralByteString byteString = pieces.next();,if (pieces != null ) LiteralByteString byteString = pieces.next();
RopeByteString.java,int cachedOtherHash = otherByteString.peekCachedHashCode();,if (otherByteString != null ) int cachedOtherHash = otherByteString.peekCachedHashCode();
RopeByteString.java,LiteralByteString thisString = thisIter.next();,if (thisIter != null ) LiteralByteString thisString = thisIter.next();
RopeByteString.java,LiteralByteString thatString = thatIter.next();,if (thatIter != null ) LiteralByteString thatString = thatIter.next();
RopeByteString.java,bytes = pieces.next().iterator();,if (pieces != null ) bytes = pieces.next().iterator();
RopeByteString.java,bytes = pieces.next().iterator();,if (pieces != null ) bytes = pieces.next().iterator();
JsonFormat.java,StringBuilder result = new StringBuilder(name.length());,if (StringBuilder(name != null ) StringBuilder result = new StringBuilder(name.length());
JsonFormat.java,BigInteger value = new BigInteger(json.getAsString());,if (BigInteger(json != null ) BigInteger value = new BigInteger(json.getAsString());
JsonFormatTest.java,builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) builder = TestAllTypes.newBuilder();
JsonFormatTest.java,message = builder.build();,if (builder != null ) message = builder.build();
JsonFormatTest.java,TestMap.Builder builder = TestMap.newBuilder();,if (TestMap != null ) TestMap.Builder builder = TestMap.newBuilder();
JsonFormatTest.java,TestMap message = builder.build();,if (builder != null ) TestMap message = builder.build();
JsonFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageLite.java,int rawValue = input.readEnum();,if (input != null ) int rawValue = input.readEnum();
GeneratedMessageLite.java,subBuilder = existingValue.toBuilder();,if (existingValue != null ) subBuilder = existingValue.toBuilder();
GeneratedMessageLite.java,value = subBuilder.build();,if (subBuilder != null ) value = subBuilder.build();
GeneratedMessageLite.java,int rawValue = input.readEnum();,if (input != null ) int rawValue = input.readEnum();
UnknownFieldSetLite.java,final int tag = input.readTag();,if (input != null ) final int tag = input.readTag();
UnknownFieldSetLiteTest.java,UnknownFieldSetLite.Builder builder = UnknownFieldSetLite.newBuilder();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite.Builder builder = UnknownFieldSetLite.newBuilder();
UnknownFieldSetLiteTest.java,UnknownFieldSetLite.Builder builder = UnknownFieldSetLite.newBuilder();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite.Builder builder = UnknownFieldSetLite.newBuilder();
UnknownFieldSetLiteTest.java,UnknownFieldSetLite.Builder builder = UnknownFieldSetLite.newBuilder();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite.Builder builder = UnknownFieldSetLite.newBuilder();
UnknownFieldSetLiteTest.java,UnknownFieldSetLite.Builder builder = UnknownFieldSetLite.newBuilder();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite.Builder builder = UnknownFieldSetLite.newBuilder();
UnknownFieldSetLiteTest.java,UnknownFieldSetLite.Builder builder = UnknownFieldSetLite.newBuilder();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite.Builder builder = UnknownFieldSetLite.newBuilder();
UnknownFieldSetLiteTest.java,UnknownFieldSetLite unknownFields = builder.build();,if (builder != null ) UnknownFieldSetLite unknownFields = builder.build();
UnknownFieldSetLiteTest.java,UnknownFieldSetLite.Builder builder = UnknownFieldSetLite.newBuilder();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite.Builder builder = UnknownFieldSetLite.newBuilder();
UnknownFieldSetLiteTest.java,UnknownFieldSetLite.Builder builder = UnknownFieldSetLite.newBuilder();,if (UnknownFieldSetLite != null ) UnknownFieldSetLite.Builder builder = UnknownFieldSetLite.newBuilder();
Proto3Utf8Test.java,TestData.Builder builder = TestData.newBuilder();,if (TestData != null ) TestData.Builder builder = TestData.newBuilder();
Proto3Utf8Test.java,TestData data = builder.build();,if (builder != null ) TestData data = builder.build();
Proto3Utf8Test.java,TestData.Builder builder = TestData.newBuilder();,if (TestData != null ) TestData.Builder builder = TestData.newBuilder();
Proto3Utf8Test.java,TestData data = builder.build();,if (builder != null ) TestData data = builder.build();
Proto3Utf8Test.java,TestData.Builder builder = TestData.newBuilder();,if (TestData != null ) TestData.Builder builder = TestData.newBuilder();
Proto3Utf8Test.java,TestData data = builder.build();,if (builder != null ) TestData data = builder.build();
Proto3Utf8Test.java,TestData.Builder builder = TestData.newBuilder();,if (TestData != null ) TestData.Builder builder = TestData.newBuilder();
Proto3Utf8Test.java,TestData data = builder.build();,if (builder != null ) TestData data = builder.build();
Proto3Utf8Test.java,TestData.Builder builder = TestData.newBuilder();,if (TestData != null ) TestData.Builder builder = TestData.newBuilder();
Proto3Utf8Test.java,TestData data = builder.build();,if (builder != null ) TestData data = builder.build();
UnknownFieldSetLite.java,ByteString byteString = byteStringOutput.toByteString();,if (byteStringOutput != null ) ByteString byteString = byteStringOutput.toByteString();
UnknownFieldSetLite.java,final int tag = input.readTag();,if (input != null ) final int tag = input.readTag();
LazyStringEndToEndTest.java,String aPrime = proto.getOptionalString();,if (proto != null ) String aPrime = proto.getOptionalString();
MapForProto2LiteTest.java,message = TestMap.PARSER.parseFrom(message.toByteString());,if (TestMap != null ) message = TestMap.PARSER.parseFrom(message.toByteString());
MapForProto2LiteTest.java,message = TestMap.PARSER.parseFrom(message.toByteString());,if (TestMap != null ) message = TestMap.PARSER.parseFrom(message.toByteString());
MapForProto2LiteTest.java,message = TestMap.PARSER.parseFrom(message.toByteString());,if (TestMap != null ) message = TestMap.PARSER.parseFrom(message.toByteString());
MapForProto2Test.java,message = TestMap.PARSER.parseFrom(message.toByteString());,if (TestMap != null ) message = TestMap.PARSER.parseFrom(message.toByteString());
MapForProto2Test.java,message = TestMap.PARSER.parseFrom(message.toByteString());,if (TestMap != null ) message = TestMap.PARSER.parseFrom(message.toByteString());
MapForProto2Test.java,message = TestMap.PARSER.parseFrom(message.toByteString());,if (TestMap != null ) message = TestMap.PARSER.parseFrom(message.toByteString());
MapTest.java,message = TestMap.PARSER.parseFrom(message.toByteString());,if (TestMap != null ) message = TestMap.PARSER.parseFrom(message.toByteString());
MapTest.java,message = TestMap.PARSER.parseFrom(message.toByteString());,if (TestMap != null ) message = TestMap.PARSER.parseFrom(message.toByteString());
MapTest.java,message = TestMap.PARSER.parseFrom(message.toByteString());,if (TestMap != null ) message = TestMap.PARSER.parseFrom(message.toByteString());
GeneratedMessageLite.java,unknownFields = UnknownFieldSetLite.getDefaultInstance();,if (UnknownFieldSetLite != null ) unknownFields = UnknownFieldSetLite.getDefaultInstance();
GeneratedMessageLite.java,extensions = extensions.clone();,if (extensions != null ) extensions = extensions.clone();
LazyFieldLite.java,bytes = value.toByteString();,if (value != null ) bytes = value.toByteString();
InternalNano.java,payload = input.readBytes();,if (input != null ) payload = input.readBytes();
InternalNano.java,value = valueClazz.newInstance();,if (valueClazz != null ) value = valueClazz.newInstance();
MapUtil.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
MapUtil.java,payload = input.readBytes();,if (input != null ) payload = input.readBytes();
MapUtil.java,value = valueClazz.newInstance();,if (valueClazz != null ) value = valueClazz.newInstance();
MapUtil.java,K key = entry.getKey();,if (entry != null ) K key = entry.getKey();
MapUtil.java,V value = entry.getValue();,if (entry != null ) V value = entry.getValue();
MapUtil.java,K key = entry.getKey();,if (entry != null ) K key = entry.getKey();
MapUtil.java,V value = entry.getValue();,if (entry != null ) V value = entry.getValue();
MapUtil.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
GeneratedMessageLite.java,unknownFields = UnknownFieldSetLite.getDefaultInstance();,if (UnknownFieldSetLite != null ) unknownFields = UnknownFieldSetLite.getDefaultInstance();
GeneratedMessageLite.java,this.extensions = FieldSet.newFieldSet();,if (FieldSet != null ) this.extensions = FieldSet.newFieldSet();
GeneratedMessageLite.java,this.extensions = builder.buildExtensions();,if (builder != null ) this.extensions = builder.buildExtensions();
MapEntry.java,data = dataBuilder.build();,if (dataBuilder != null ) data = dataBuilder.build();
LazyMessageLiteTest.java,ByteString bytes = outer.toByteString();,if (outer != null ) ByteString bytes = outer.toByteString();
TextFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TextFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
AbstractMessage.java,final FieldDescriptor field = entry.getKey();,if (entry != null ) final FieldDescriptor field = entry.getKey();
AbstractMessage.java,final FieldDescriptor field = entry.getKey();,if (entry != null ) final FieldDescriptor field = entry.getKey();
AbstractMessage.java,final Object value = entry.getValue();,if (entry != null ) final Object value = entry.getValue();
AbstractMessage.java,final FieldDescriptor field = entry.getKey();,if (entry != null ) final FieldDescriptor field = entry.getKey();
AbstractMessage.java,final Object value = entry.getValue();,if (entry != null ) final Object value = entry.getValue();
AbstractMessage.java,size += unknownFields.getSerializedSizeAsMessageSet();,if (unknownFields != null ) size += unknownFields.getSerializedSizeAsMessageSet();
AbstractMessage.java,size += unknownFields.getSerializedSize();,if (unknownFields != null ) size += unknownFields.getSerializedSize();
AbstractMessage.java,final int rawValue = input.readEnum();,if (input != null ) final int rawValue = input.readEnum();
AbstractMessage.java,subBuilder = defaultInstance.newBuilderForType();,if (defaultInstance != null ) subBuilder = defaultInstance.newBuilderForType();
AbstractMessage.java,value = subBuilder.buildPartial();,if (subBuilder != null ) value = subBuilder.buildPartial();
AbstractMessage.java,subBuilder = defaultInstance.newBuilderForType();,if (defaultInstance != null ) subBuilder = defaultInstance.newBuilderForType();
AbstractMessage.java,value = subBuilder.buildPartial();,if (subBuilder != null ) value = subBuilder.buildPartial();
AbstractMessage.java,final int rawValue = input.readEnum();,if (input != null ) final int rawValue = input.readEnum();
AbstractMessage.java,"value = FieldSet.readPrimitiveField(input, field.getLiteType());","if (field != null ) value = FieldSet.readPrimitiveField(input, field.getLiteType());"
AbstractMessage.java,final int tag = input.readTag();,if (input != null ) final int tag = input.readTag();
AbstractMessage.java,rawBytes = input.readBytes();,if (input != null ) rawBytes = input.readBytes();
AbstractMessage.java,Message.Builder subBuilder = originalMessage.toBuilder();,if (originalMessage != null ) Message.Builder subBuilder = originalMessage.toBuilder();
AbstractMessage.java,value = subBuilder.buildPartial();,if (subBuilder != null ) value = subBuilder.buildPartial();
AbstractMessage.java,Message.Builder subBuilder= originalMessage.toBuilder();,if (originalMessage != null ) Message.Builder subBuilder= originalMessage.toBuilder();
AbstractMessage.java,value = subBuilder.buildPartial();,if (subBuilder != null ) value = subBuilder.buildPartial();
AbstractMessage.java,final FieldDescriptor field = entry.getKey();,if (entry != null ) final FieldDescriptor field = entry.getKey();
AbstractMessage.java,final Object value = entry.getValue();,if (entry != null ) final Object value = entry.getValue();
CodedOutputStream.java,InputStream inputStreamFrom = value.newInput();,if (value != null ) InputStream inputStreamFrom = value.newInput();
GeneratedMessageLite.java,subBuilder = extension.messageDefaultInstance.newBuilderForType();,if (extension != null ) subBuilder = extension.messageDefaultInstance.newBuilderForType();
LazyField.java,bytes = value.toByteString();,if (value != null ) bytes = value.toByteString();
TextFormat.java,final Descriptor type = builder.getDescriptorForType();,if (builder != null ) final Descriptor type = builder.getDescriptorForType();
TextFormat.java,extension = extensionRegistry.findExtensionByName(name.toString());,if (extensionRegistry != null ) extension = extensionRegistry.findExtensionByName(name.toString());
TextFormat.java,final String name = tokenizer.consumeIdentifier();,if (tokenizer != null ) final String name = tokenizer.consumeIdentifier();
TextFormat.java,subBuilder = extension.defaultInstance.newBuilderForType();,if (extension != null ) subBuilder = extension.defaultInstance.newBuilderForType();
TextFormat.java,value = subBuilder.buildPartial();,if (subBuilder != null ) value = subBuilder.buildPartial();
TextFormat.java,value = tokenizer.consumeFloat();,if (tokenizer != null ) value = tokenizer.consumeFloat();
TextFormat.java,value = tokenizer.consumeDouble();,if (tokenizer != null ) value = tokenizer.consumeDouble();
TextFormat.java,value = tokenizer.consumeBoolean();,if (tokenizer != null ) value = tokenizer.consumeBoolean();
TextFormat.java,value = tokenizer.consumeString();,if (tokenizer != null ) value = tokenizer.consumeString();
TextFormat.java,value = tokenizer.consumeByteString();,if (tokenizer != null ) value = tokenizer.consumeByteString();
TextFormat.java,final EnumDescriptor enumType = field.getEnumType();,if (field != null ) final EnumDescriptor enumType = field.getEnumType();
TextFormat.java,final String id = tokenizer.consumeIdentifier();,if (tokenizer != null ) final String id = tokenizer.consumeIdentifier();
Extension.java,int resultSize = resultList.size();,if (resultList != null ) int resultSize = resultList.size();
WireFormatNano.java,int thisTag = input.readTag();,if (input != null ) int thisTag = input.readTag();
Extension.java,isRepeatedField = type.isList();,if (type != null ) isRepeatedField = type.isList();
Extension.java,fieldType = type.getTargetClass();,if (type != null ) fieldType = type.getTargetClass();
Extension.java,Type superclass = getClass().getGenericSuperclass();,if (getClass() != null ) Type superclass = getClass().getGenericSuperclass();
WireFormatNano.java,int startPos = input.getPosition();,if (input != null ) int startPos = input.getPosition();
WireFormatNano.java,int endPos = input.getPosition();,if (input != null ) int endPos = input.getPosition();
WireFormatNano.java,List<Object> result = new ArrayList<Object>(dataForField.size());,if (ArrayList<Object>(dataForField != null ) List<Object> result = new ArrayList<Object>(dataForField.size());
WireFormatNano.java,MessageNano message = (MessageNano) clazz.newInstance();,if (clazz != null ) MessageNano message = (MessageNano) clazz.newInstance();
WireFormatNano.java,int messageSize = messageValue.getSerializedSize();,if (messageValue != null ) int messageSize = messageValue.getSerializedSize();
AbstractMessage.java,final Descriptor type = builder.getDescriptorForType();,if (builder != null ) final Descriptor type = builder.getDescriptorForType();
AbstractMessage.java,value = subBuilder.build();,if (subBuilder != null ) value = subBuilder.build();
AbstractMessage.java,value = subBuilder.build();,if (subBuilder != null ) value = subBuilder.build();
AbstractMessage.java,final Descriptor type = builder.getDescriptorForType();,if (builder != null ) final Descriptor type = builder.getDescriptorForType();
AbstractMessage.java,subBuilder = extension.defaultInstance.newBuilderForType();,if (extension != null ) subBuilder = extension.defaultInstance.newBuilderForType();
AbstractMessage.java,rawBytes = input.readBytes();,if (input != null ) rawBytes = input.readBytes();
ByteString.java,size += str.size();,if (str != null ) size += str.size();
ByteString.java,pos += str.size();,if (str != null ) pos += str.size();
Descriptors.java,result = findSymbol(scopeToTry.toString());,if (findSymbol(scopeToTry != null ) result = findSymbol(scopeToTry.toString());
Descriptors.java,result = findSymbol(scopeToTry.toString());,if (findSymbol(scopeToTry != null ) result = findSymbol(scopeToTry.toString());
FieldSet.java,final Object otherValue = entry.getValue();,if (entry != null ) final Object otherValue = entry.getValue();
GeneratedMessage.java,this.unknownFields = UnknownFieldSet.getDefaultInstance();,if (UnknownFieldSet != null ) this.unknownFields = UnknownFieldSet.getDefaultInstance();
GeneratedMessage.java,this.unknownFields = builder.getUnknownFields();,if (builder != null ) this.unknownFields = builder.getUnknownFields();
GeneratedMessageLite.java,final int rawValue = input.readEnum();,if (input != null ) final int rawValue = input.readEnum();
GeneratedMessageLite.java,subBuilder = existingValue.toBuilder();,if (existingValue != null ) subBuilder = existingValue.toBuilder();
GeneratedMessageLite.java,subBuilder = extension.messageDefaultInstance.newBuilderForType();,if (extension != null ) subBuilder = extension.messageDefaultInstance.newBuilderForType();
GeneratedMessageLite.java,value = subBuilder.build();,if (subBuilder != null ) value = subBuilder.build();
GeneratedMessageLite.java,final int rawValue = input.readEnum();,if (input != null ) final int rawValue = input.readEnum();
Internal.java,int size = byteString.size();,if (byteString != null ) int size = byteString.size();
TextFormat.java,value = subBuilder.build();,if (subBuilder != null ) value = subBuilder.build();
FieldSet.java,this.fields = Collections.emptyMap();,if (Collections != null ) this.fields = Collections.emptyMap();
FieldSet.java,final List value = (List)entry.getValue();,if ((List)entry != null ) final List value = (List)entry.getValue();
FieldSet.java,final FieldDescriptorType descriptor = entry.getKey();,if (entry != null ) final FieldDescriptorType descriptor = entry.getKey();
FieldSet.java,final FieldDescriptorType descriptor = entry.getKey();,if (entry != null ) final FieldDescriptorType descriptor = entry.getKey();
FieldSet.java,final Object otherValue = entry.getValue();,if (entry != null ) final Object otherValue = entry.getValue();
FieldSet.java,final FieldDescriptorType descriptor = entry.getKey();,if (entry != null ) final FieldDescriptorType descriptor = entry.getKey();
FieldSet.java,final FieldDescriptorType descriptor = entry.getKey();,if (entry != null ) final FieldDescriptorType descriptor = entry.getKey();
FieldSet.java,"size += computeFieldSize(descriptor, entry.getValue());","if (entry != null ) size += computeFieldSize(descriptor, entry.getValue());"
GeneratedMessage.java,private UnknownFieldSet unknownFields = UnknownFieldSet.getDefaultInstance();,if (UnknownFieldSet != null ) private UnknownFieldSet unknownFields = UnknownFieldSet.getDefaultInstance();
CodedOutputStreamTest.java,CodedInputStream in = CodedInputStream.newInstance(output.toByteArray());,if (CodedInputStream != null ) CodedInputStream in = CodedInputStream.newInstance(output.toByteArray());
CodedOutputStreamTest.java,in = CodedInputStream.newInstance(output.toByteArray());,if (CodedInputStream != null ) in = CodedInputStream.newInstance(output.toByteArray());
PerfTimer.java,double innerLoopTime = stats.getMinInMicros();,if (stats != null ) double innerLoopTime = stats.getMinInMicros();
PerfTimer.java,innerLoopTime = stats.getMedianInMicros();,if (stats != null ) innerLoopTime = stats.getMedianInMicros();
PerfTimer.java,int innerLoops = mStats.getInnerLoops();,if (mStats != null ) int innerLoops = mStats.getInnerLoops();
PerfTimer.java,int innerLoops = mStats.getInnerLoops();,if (mStats != null ) int innerLoops = mStats.getInnerLoops();
PerfTimer.java,double innerLoopTime = stats.getMinInMicros();,if (stats != null ) double innerLoopTime = stats.getMinInMicros();
PerfTimer.java,innerLoopTime = stats.getMedianInMicros();,if (stats != null ) innerLoopTime = stats.getMedianInMicros();
PerfTimer.java,int innerLoops = mStats.getInnerLoops();,if (mStats != null ) int innerLoops = mStats.getInnerLoops();
PerfTimer.java,int innerLoops = mStats.getInnerLoops();,if (mStats != null ) int innerLoops = mStats.getInnerLoops();
Descriptors.java,defaultValue = Float.valueOf(proto.getDefaultValue());,if (Float != null ) defaultValue = Float.valueOf(proto.getDefaultValue());
Descriptors.java,defaultValue = Double.valueOf(proto.getDefaultValue());,if (Double != null ) defaultValue = Double.valueOf(proto.getDefaultValue());
ProtoBuf.java,long l = is.read();,if (is != null ) long l = is.read();
ProtoBuf.java,int in = is.read();,if (is != null ) int in = is.read();
ProtoBufUtil.java,int size = dataInput.readInt();,if (dataInput != null ) int size = dataInput.readInt();
ProtoBufUtil.java,byte[] bytes = baos.toByteArray();,if (baos != null ) byte[] bytes = baos.toByteArray();
ProtoBench.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
ProtoBench.java,long end = System.currentTimeMillis();,if (System != null ) long end = System.currentTimeMillis();
UnknownFieldSet.java,Builder builder = builders.get().poll();,if (builders != null ) Builder builder = builders.get().poll();
UnknownFieldSet.java,Builder builder = builders.get().poll();,if (builders != null ) Builder builder = builders.get().poll();
AbstractMessage.java,FieldDescriptor field = entry.getKey();,if (entry != null ) FieldDescriptor field = entry.getKey();
AbstractMessage.java,FieldDescriptor field = entry.getKey();,if (entry != null ) FieldDescriptor field = entry.getKey();
AbstractMessage.java,List valueList = (List) entry.getValue();,if (entry != null ) List valueList = (List) entry.getValue();
AbstractMessage.java,FieldDescriptor field = entry.getKey();,if (entry != null ) FieldDescriptor field = entry.getKey();
AbstractMessage.java,List valueList = (List) entry.getValue();,if (entry != null ) List valueList = (List) entry.getValue();
AbstractMessage.java,size += CodedOutputStream.computeTagSize(field.getNumber());,if (CodedOutputStream != null ) size += CodedOutputStream.computeTagSize(field.getNumber());
AbstractMessage.java,FieldDescriptor field = entry.getKey();,if (entry != null ) FieldDescriptor field = entry.getKey();
AbstractMessage.java,CodedInputStream input = data.newCodedInput();,if (data != null ) CodedInputStream input = data.newCodedInput();
AbstractMessage.java,CodedInputStream input = data.newCodedInput();,if (data != null ) CodedInputStream input = data.newCodedInput();
AbstractMessage.java,int result = super.read();,if (super != null ) int result = super.read();
ByteString.java,byte[] byteArray = bout.toByteArray();,if (bout != null ) byte[] byteArray = bout.toByteArray();
CodedInputStream.java,int b = input.read();,if (input != null ) int b = input.read();
CodedInputStream.java,int b = input.read();,if (input != null ) int b = input.read();
CodedOutputStream.java,byte[] bytes = value.toByteArray();,if (value != null ) byte[] bytes = value.toByteArray();
CodedOutputStream.java,int size = value.getSerializedSize();,if (value != null ) int size = value.getSerializedSize();
Descriptors.java,this.type = Type.valueOf(proto.getType());,if (Type != null ) this.type = Type.valueOf(proto.getType());
Descriptors.java,"this.fullName = parent.getFullName() + ""."" + proto.getName();","if (proto != null ) this.fullName = parent.getFullName() + ""."" + proto.getName();"
Descriptors.java,"this.fullName = parent.getFullName() + ""."" + proto.getName();","if (proto != null ) this.fullName = parent.getFullName() + ""."" + proto.getName();"
Descriptors.java,this.name = problemDescriptor.getFullName();,if (problemDescriptor != null ) this.name = problemDescriptor.getFullName();
Descriptors.java,this.proto = problemDescriptor.toProto();,if (problemDescriptor != null ) this.proto = problemDescriptor.toProto();
Descriptors.java,this.name = problemDescriptor.getName();,if (problemDescriptor != null ) this.name = problemDescriptor.getName();
Descriptors.java,this.proto = problemDescriptor.toProto();,if (problemDescriptor != null ) this.proto = problemDescriptor.toProto();
Descriptors.java,StringBuilder scopeToTry = new StringBuilder(relativeTo.getFullName());,if (StringBuilder(relativeTo != null ) StringBuilder scopeToTry = new StringBuilder(relativeTo.getFullName());
Descriptors.java,String fullName = descriptor.getFullName();,if (descriptor != null ) String fullName = descriptor.getFullName();
Descriptors.java,String name = descriptor.getName();,if (descriptor != null ) String name = descriptor.getName();
DynamicMessage.java,result = getDefaultInstance(field.getMessageType());,if (getDefaultInstance(field != null ) result = getDefaultInstance(field.getMessageType());
DynamicMessage.java,size = fields.getSerializedSize();,if (fields != null ) size = fields.getSerializedSize();
DynamicMessage.java,unknownFields = unknownFieldsBuilder.build();,if (unknownFieldsBuilder != null ) unknownFields = unknownFieldsBuilder.build();
DynamicMessage.java,result = getDefaultInstance(field.getMessageType());,if (getDefaultInstance(field != null ) result = getDefaultInstance(field.getMessageType());
FieldSet.java,List value = (List)entry.getValue();,if ((List)entry != null ) List value = (List)entry.getValue();
FieldSet.java,FieldDescriptor field = entry.getKey();,if (entry != null ) FieldDescriptor field = entry.getKey();
FieldSet.java,FieldDescriptor field = entry.getKey();,if (entry != null ) FieldDescriptor field = entry.getKey();
FieldSet.java,FieldDescriptor field = entry.getKey();,if (entry != null ) FieldDescriptor field = entry.getKey();
FieldSet.java,Object value = entry.getValue();,if (entry != null ) Object value = entry.getValue();
FieldSet.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
FieldSet.java,Descriptor type = builder.getDescriptorForType();,if (builder != null ) Descriptor type = builder.getDescriptorForType();
FieldSet.java,int rawValue = input.readEnum();,if (input != null ) int rawValue = input.readEnum();
FieldSet.java,Object value = input.readPrimitiveField(field.getType());,if (input != null ) Object value = input.readPrimitiveField(field.getType());
FieldSet.java,subBuilder = defaultInstance.newBuilderForType();,if (defaultInstance != null ) subBuilder = defaultInstance.newBuilderForType();
FieldSet.java,value = subBuilder.build();,if (subBuilder != null ) value = subBuilder.build();
FieldSet.java,subBuilder = defaultInstance.newBuilderForType();,if (defaultInstance != null ) subBuilder = defaultInstance.newBuilderForType();
FieldSet.java,value = subBuilder.build();,if (subBuilder != null ) value = subBuilder.build();
FieldSet.java,int rawValue = input.readEnum();,if (input != null ) int rawValue = input.readEnum();
FieldSet.java,value = input.readPrimitiveField(field.getType());,if (input != null ) value = input.readPrimitiveField(field.getType());
FieldSet.java,Descriptor type = builder.getDescriptorForType();,if (builder != null ) Descriptor type = builder.getDescriptorForType();
FieldSet.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
FieldSet.java,subBuilder = extension.defaultInstance.newBuilderForType();,if (extension != null ) subBuilder = extension.defaultInstance.newBuilderForType();
FieldSet.java,rawBytes = input.readBytes();,if (input != null ) rawBytes = input.readBytes();
FieldSet.java,FieldDescriptor field = entry.getKey();,if (entry != null ) FieldDescriptor field = entry.getKey();
FieldSet.java,Object value = entry.getValue();,if (entry != null ) Object value = entry.getValue();
GeneratedMessage.java,FieldDescriptor field = entry.getKey();,if (entry != null ) FieldDescriptor field = entry.getKey();
GeneratedMessage.java,Object value = extensions.getField(extension.getDescriptor());,if (extensions != null ) Object value = extensions.getField(extension.getDescriptor());
TextFormat.java,UnknownFieldSet.Field field = entry.getValue();,if (entry != null ) UnknownFieldSet.Field field = entry.getValue();
TextFormat.java,int length = indent.length();,if (indent != null ) int length = indent.length();
TextFormat.java,int size = text.length();,if (text != null ) int size = text.length();
TextFormat.java,Descriptor type = builder.getDescriptorForType();,if (builder != null ) Descriptor type = builder.getDescriptorForType();
TextFormat.java,StringBuilder name = new StringBuilder(tokenizer.consumeIdentifier());,if (StringBuilder(tokenizer != null ) StringBuilder name = new StringBuilder(tokenizer.consumeIdentifier());
TextFormat.java,String name = tokenizer.consumeIdentifier();,if (tokenizer != null ) String name = tokenizer.consumeIdentifier();
TextFormat.java,EnumDescriptor enumType = field.getEnumType();,if (field != null ) EnumDescriptor enumType = field.getEnumType();
TextFormat.java,String id = tokenizer.consumeIdentifier();,if (tokenizer != null ) String id = tokenizer.consumeIdentifier();
TextFormat.java,StringBuilder builder = new StringBuilder(input.size());,if (StringBuilder(input != null ) StringBuilder builder = new StringBuilder(input.size());
UninitializedMessageException.java,FieldDescriptor field = entry.getKey();,if (entry != null ) FieldDescriptor field = entry.getKey();
UninitializedMessageException.java,Object value = entry.getValue();,if (entry != null ) Object value = entry.getValue();
UnknownFieldSet.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
UnknownFieldSet.java,UnknownFieldSet.Builder subBuilder = UnknownFieldSet.newBuilder();,if (UnknownFieldSet != null ) UnknownFieldSet.Builder subBuilder = UnknownFieldSet.newBuilder();
UnknownFieldSet.java,CodedInputStream input = data.newCodedInput();,if (data != null ) CodedInputStream input = data.newCodedInput();
IntMap.java,higherKeyEnumerator = higher.keys();,if (higher != null ) higherKeyEnumerator = higher.keys();
IntMap.java,Integer key = (Integer) higherKeyEnumerator.nextElement();,if (higherKeyEnumerator != null ) Integer key = (Integer) higherKeyEnumerator.nextElement();
IntMap.java,currentKey = key.intValue();,if (key != null ) currentKey = key.intValue();
ProtoBuf.java,values = type.newIntMapForProtoBuf();,if (type != null ) values = type.newIntMapForProtoBuf();
ProtoBuf.java,wireTypes = type.newIntMapForProtoBuf();,if (type != null ) wireTypes = type.newIntMapForProtoBuf();
ProtoBuf.java,tagType = tagTypeObj.intValue();,if (tagTypeObj != null ) tagType = tagTypeObj.intValue();
ProtoBuf.java,IntMap.KeyIterator itr = values.keys();,if (values != null ) IntMap.KeyIterator itr = values.keys();
ProtoBuf.java,int tag = itr.next();,if (itr != null ) int tag = itr.next();
ProtoBuf.java,IntMap.KeyIterator itr = values.keys();,if (values != null ) IntMap.KeyIterator itr = values.keys();
ProtoBuf.java,int tag = itr.next();,if (itr != null ) int tag = itr.next();
ProtoBuf.java,long l = is.read();,if (is != null ) long l = is.read();
ProtoBuf.java,int in = is.read();,if (is != null ) int in = is.read();
ProtoBufUtil.java,byte[] bytes = baos.toByteArray();,if (baos != null ) byte[] bytes = baos.toByteArray();
CodedOutputStream.java,byte[] bytes = value.toByteArray();,if (value != null ) byte[] bytes = value.toByteArray();
CodedOutputStream.java,int size = value.getSerializedSize();,if (value != null ) int size = value.getSerializedSize();
FieldSet.java,subBuilder = defaultInstance.newBuilderForType();,if (defaultInstance != null ) subBuilder = defaultInstance.newBuilderForType();
FieldSet.java,value = subBuilder.build();,if (subBuilder != null ) value = subBuilder.build();
FieldSet.java,subBuilder = defaultInstance.newBuilderForType();,if (defaultInstance != null ) subBuilder = defaultInstance.newBuilderForType();
FieldSet.java,value = subBuilder.build();,if (subBuilder != null ) value = subBuilder.build();
FieldSet.java,int rawValue = input.readEnum();,if (input != null ) int rawValue = input.readEnum();
FieldSet.java,value = input.readPrimitiveField(field.getType());,if (input != null ) value = input.readPrimitiveField(field.getType());
WireFormatTest.java,ExtensionRegistry registry = ExtensionRegistry.newInstance();,if (ExtensionRegistry != null ) ExtensionRegistry registry = ExtensionRegistry.newInstance();
WireFormatTest.java,registry = registry.getUnmodifiable();,if (registry != null ) registry = registry.getUnmodifiable();
GeneratedMessageTest.java,TestOptionalOptimizedForSize message = TestOptionalOptimizedForSize.getDefaultInstance();,if (TestOptionalOptimizedForSize != null ) TestOptionalOptimizedForSize message = TestOptionalOptimizedForSize.getDefaultInstance();
AddPerson.java,Person.Builder person = Person.newBuilder();,if (Person != null ) Person.Builder person = Person.newBuilder();
AddPerson.java,String email = stdin.readLine();,if (stdin != null ) String email = stdin.readLine();
AddPerson.java,String number = stdin.readLine();,if (stdin != null ) String number = stdin.readLine();
AddPerson.java,String type = stdin.readLine();,if (stdin != null ) String type = stdin.readLine();
AddPerson.java,AddressBook.Builder addressBook = AddressBook.newBuilder();,if (AddressBook != null ) AddressBook.Builder addressBook = AddressBook.newBuilder();
AbstractMessage.java,FieldDescriptor field = entry.getKey();,if (entry != null ) FieldDescriptor field = entry.getKey();
AbstractMessage.java,FieldDescriptor field = entry.getKey();,if (entry != null ) FieldDescriptor field = entry.getKey();
AbstractMessage.java,FieldDescriptor field = entry.getKey();,if (entry != null ) FieldDescriptor field = entry.getKey();
AbstractMessage.java,size += unknownFields.getSerializedSizeAsMessageSet();,if (unknownFields != null ) size += unknownFields.getSerializedSizeAsMessageSet();
AbstractMessage.java,size += unknownFields.getSerializedSize();,if (unknownFields != null ) size += unknownFields.getSerializedSize();
AbstractMessage.java,FieldDescriptor field = entry.getKey();,if (entry != null ) FieldDescriptor field = entry.getKey();
AbstractMessage.java,CodedInputStream input = data.newCodedInput();,if (data != null ) CodedInputStream input = data.newCodedInput();
AbstractMessage.java,CodedInputStream input = data.newCodedInput();,if (data != null ) CodedInputStream input = data.newCodedInput();
ByteString.java,byte[] byteArray = bout.toByteArray();,if (bout != null ) byte[] byteArray = bout.toByteArray();
CodedOutputStream.java,byte[] bytes = value.toByteArray();,if (value != null ) byte[] bytes = value.toByteArray();
CodedOutputStream.java,int size = value.getSerializedSize();,if (value != null ) int size = value.getSerializedSize();
Descriptors.java,this.dependencies = dependencies.clone();,if (dependencies != null ) this.dependencies = dependencies.clone();
Descriptors.java,this.type = Type.valueOf(proto.getType());,if (Type != null ) this.type = Type.valueOf(proto.getType());
Descriptors.java,defaultValue = Float.valueOf(proto.getDefaultValue());,if (Float != null ) defaultValue = Float.valueOf(proto.getDefaultValue());
Descriptors.java,defaultValue = Double.valueOf(proto.getDefaultValue());,if (Double != null ) defaultValue = Double.valueOf(proto.getDefaultValue());
Descriptors.java,defaultValue = Boolean.valueOf(proto.getDefaultValue());,if (Boolean != null ) defaultValue = Boolean.valueOf(proto.getDefaultValue());
Descriptors.java,defaultValue = proto.getDefaultValue();,if (proto != null ) defaultValue = proto.getDefaultValue();
Descriptors.java,defaultValue = enumType.findValueByName(proto.getDefaultValue());,if (enumType != null ) defaultValue = enumType.findValueByName(proto.getDefaultValue());
Descriptors.java,"this.fullName = parent.getFullName() + ""."" + proto.getName();","if (proto != null ) this.fullName = parent.getFullName() + ""."" + proto.getName();"
Descriptors.java,"this.fullName = parent.getFullName() + ""."" + proto.getName();","if (proto != null ) this.fullName = parent.getFullName() + ""."" + proto.getName();"
Descriptors.java,this.name = problemDescriptor.getFullName();,if (problemDescriptor != null ) this.name = problemDescriptor.getFullName();
Descriptors.java,this.proto = problemDescriptor.toProto();,if (problemDescriptor != null ) this.proto = problemDescriptor.toProto();
Descriptors.java,this.name = problemDescriptor.getName();,if (problemDescriptor != null ) this.name = problemDescriptor.getName();
Descriptors.java,this.proto = problemDescriptor.toProto();,if (problemDescriptor != null ) this.proto = problemDescriptor.toProto();
Descriptors.java,StringBuilder scopeToTry = new StringBuilder(relativeTo.getFullName());,if (StringBuilder(relativeTo != null ) StringBuilder scopeToTry = new StringBuilder(relativeTo.getFullName());
Descriptors.java,result = findSymbol(scopeToTry.toString());,if (findSymbol(scopeToTry != null ) result = findSymbol(scopeToTry.toString());
Descriptors.java,result = findSymbol(scopeToTry.toString());,if (findSymbol(scopeToTry != null ) result = findSymbol(scopeToTry.toString());
Descriptors.java,String fullName = descriptor.getFullName();,if (descriptor != null ) String fullName = descriptor.getFullName();
Descriptors.java,String name = descriptor.getName();,if (descriptor != null ) String name = descriptor.getName();
DynamicMessage.java,result = getDefaultInstance(field.getMessageType());,if (getDefaultInstance(field != null ) result = getDefaultInstance(field.getMessageType());
DynamicMessage.java,size = fields.getSerializedSize();,if (fields != null ) size = fields.getSerializedSize();
DynamicMessage.java,size += unknownFields.getSerializedSizeAsMessageSet();,if (unknownFields != null ) size += unknownFields.getSerializedSizeAsMessageSet();
DynamicMessage.java,size += unknownFields.getSerializedSize();,if (unknownFields != null ) size += unknownFields.getSerializedSize();
DynamicMessage.java,this.fields = FieldSet.newFieldSet();,if (FieldSet != null ) this.fields = FieldSet.newFieldSet();
DynamicMessage.java,this.unknownFields = UnknownFieldSet.getDefaultInstance();,if (UnknownFieldSet != null ) this.unknownFields = UnknownFieldSet.getDefaultInstance();
DynamicMessage.java,unknownFields = unknownFieldsBuilder.build();,if (unknownFieldsBuilder != null ) unknownFields = unknownFieldsBuilder.build();
DynamicMessage.java,result = getDefaultInstance(field.getMessageType());,if (getDefaultInstance(field != null ) result = getDefaultInstance(field.getMessageType());
FieldSet.java,List value = (List)entry.getValue();,if ((List)entry != null ) List value = (List)entry.getValue();
FieldSet.java,FieldDescriptor field = entry.getKey();,if (entry != null ) FieldDescriptor field = entry.getKey();
FieldSet.java,FieldDescriptor field = entry.getKey();,if (entry != null ) FieldDescriptor field = entry.getKey();
FieldSet.java,FieldDescriptor field = entry.getKey();,if (entry != null ) FieldDescriptor field = entry.getKey();
FieldSet.java,Object value = entry.getValue();,if (entry != null ) Object value = entry.getValue();
FieldSet.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
FieldSet.java,Descriptor type = builder.getDescriptorForType();,if (builder != null ) Descriptor type = builder.getDescriptorForType();
FieldSet.java,subBuilder = defaultInstance.newBuilderForType();,if (defaultInstance != null ) subBuilder = defaultInstance.newBuilderForType();
FieldSet.java,value = subBuilder.build();,if (subBuilder != null ) value = subBuilder.build();
FieldSet.java,subBuilder = defaultInstance.newBuilderForType();,if (defaultInstance != null ) subBuilder = defaultInstance.newBuilderForType();
FieldSet.java,value = subBuilder.build();,if (subBuilder != null ) value = subBuilder.build();
FieldSet.java,int rawValue = input.readEnum();,if (input != null ) int rawValue = input.readEnum();
FieldSet.java,value = input.readPrimitiveField(field.getType());,if (input != null ) value = input.readPrimitiveField(field.getType());
FieldSet.java,Descriptor type = builder.getDescriptorForType();,if (builder != null ) Descriptor type = builder.getDescriptorForType();
FieldSet.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
FieldSet.java,subBuilder = extension.defaultInstance.newBuilderForType();,if (extension != null ) subBuilder = extension.defaultInstance.newBuilderForType();
FieldSet.java,rawBytes = input.readBytes();,if (input != null ) rawBytes = input.readBytes();
FieldSet.java,FieldDescriptor field = entry.getKey();,if (entry != null ) FieldDescriptor field = entry.getKey();
FieldSet.java,Object value = entry.getValue();,if (entry != null ) Object value = entry.getValue();
GeneratedMessage.java,private UnknownFieldSet unknownFields = UnknownFieldSet.getDefaultInstance();,if (UnknownFieldSet != null ) private UnknownFieldSet unknownFields = UnknownFieldSet.getDefaultInstance();
GeneratedMessage.java,FieldDescriptor field = entry.getKey();,if (entry != null ) FieldDescriptor field = entry.getKey();
GeneratedMessage.java,Object value = extensions.getField(extension.getDescriptor());,if (extensions != null ) Object value = extensions.getField(extension.getDescriptor());
GeneratedMessage.java,next = iter.next();,if (iter != null ) next = iter.next();
GeneratedMessage.java,next = iter.next();,if (iter != null ) next = iter.next();
GeneratedMessage.java,type = getMethod.getReturnType();,if (getMethod != null ) type = getMethod.getReturnType();
GeneratedMessage.java,type = getRepeatedMethod.getReturnType();,if (getRepeatedMethod != null ) type = getRepeatedMethod.getReturnType();
TextFormat.java,UnknownFieldSet.Field field = entry.getValue();,if (entry != null ) UnknownFieldSet.Field field = entry.getValue();
TextFormat.java,int length = indent.length();,if (indent != null ) int length = indent.length();
TextFormat.java,int size = text.length();,if (text != null ) int size = text.length();
TextFormat.java,currentToken = matcher.group();,if (matcher != null ) currentToken = matcher.group();
TextFormat.java,Descriptor type = builder.getDescriptorForType();,if (builder != null ) Descriptor type = builder.getDescriptorForType();
TextFormat.java,StringBuilder name = new StringBuilder(tokenizer.consumeIdentifier());,if (StringBuilder(tokenizer != null ) StringBuilder name = new StringBuilder(tokenizer.consumeIdentifier());
TextFormat.java,extension = extensionRegistry.findExtensionByName(name.toString());,if (extensionRegistry != null ) extension = extensionRegistry.findExtensionByName(name.toString());
TextFormat.java,String name = tokenizer.consumeIdentifier();,if (tokenizer != null ) String name = tokenizer.consumeIdentifier();
TextFormat.java,subBuilder = extension.defaultInstance.newBuilderForType();,if (extension != null ) subBuilder = extension.defaultInstance.newBuilderForType();
TextFormat.java,value = subBuilder.build();,if (subBuilder != null ) value = subBuilder.build();
TextFormat.java,value = tokenizer.consumeFloat();,if (tokenizer != null ) value = tokenizer.consumeFloat();
TextFormat.java,value = tokenizer.consumeDouble();,if (tokenizer != null ) value = tokenizer.consumeDouble();
TextFormat.java,value = tokenizer.consumeBoolean();,if (tokenizer != null ) value = tokenizer.consumeBoolean();
TextFormat.java,value = tokenizer.consumeString();,if (tokenizer != null ) value = tokenizer.consumeString();
TextFormat.java,value = tokenizer.consumeByteString();,if (tokenizer != null ) value = tokenizer.consumeByteString();
TextFormat.java,EnumDescriptor enumType = field.getEnumType();,if (field != null ) EnumDescriptor enumType = field.getEnumType();
TextFormat.java,String id = tokenizer.consumeIdentifier();,if (tokenizer != null ) String id = tokenizer.consumeIdentifier();
TextFormat.java,StringBuilder builder = new StringBuilder(input.size());,if (StringBuilder(input != null ) StringBuilder builder = new StringBuilder(input.size());
TextFormat.java,bigValue = bigValue.negate();,if (bigValue != null ) bigValue = bigValue.negate();
TextFormat.java,result = bigValue.longValue();,if (bigValue != null ) result = bigValue.longValue();
UninitializedMessageException.java,FieldDescriptor field = entry.getKey();,if (entry != null ) FieldDescriptor field = entry.getKey();
UninitializedMessageException.java,Object value = entry.getValue();,if (entry != null ) Object value = entry.getValue();
UnknownFieldSet.java,lastField = Field.newBuilder();,if (Field != null ) lastField = Field.newBuilder();
UnknownFieldSet.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
UnknownFieldSet.java,UnknownFieldSet.Builder subBuilder = UnknownFieldSet.newBuilder();,if (UnknownFieldSet != null ) UnknownFieldSet.Builder subBuilder = UnknownFieldSet.newBuilder();
UnknownFieldSet.java,CodedInputStream input = data.newCodedInput();,if (data != null ) CodedInputStream input = data.newCodedInput();
UnknownFieldSet.java,result.varint = Collections.emptyList();,if (Collections != null ) result.varint = Collections.emptyList();
UnknownFieldSet.java,result.lengthDelimited = Collections.emptyList();,if (Collections != null ) result.lengthDelimited = Collections.emptyList();
UnknownFieldSet.java,result.group = Collections.emptyList();,if (Collections != null ) result.group = Collections.emptyList();
AbstractMessageTest.java,TestAllTypes message = TestUtil.getAllSet();,if (TestUtil != null ) TestAllTypes message = TestUtil.getAllSet();
AbstractMessageTest.java,Message abstractMessage = new AbstractMessageWrapper(TestUtil.getAllSet());,if (AbstractMessageWrapper(TestUtil != null ) Message abstractMessage = new AbstractMessageWrapper(TestUtil.getAllSet());
AbstractMessageTest.java,Message abstractMessage = new AbstractMessageWrapper(TestUtil.getAllSet());,if (AbstractMessageWrapper(TestUtil != null ) Message abstractMessage = new AbstractMessageWrapper(TestUtil.getAllSet());
AbstractMessageTest.java,message = TestOptimizedForSize.parseFrom(message.toByteString());,if (TestOptimizedForSize != null ) message = TestOptimizedForSize.parseFrom(message.toByteString());
AbstractMessageTest.java,TestRequired.Builder builder = TestRequired.newBuilder();,if (TestRequired != null ) TestRequired.Builder builder = TestRequired.newBuilder();
AbstractMessageTest.java,TestRequiredForeign.Builder builder = TestRequiredForeign.newBuilder();,if (TestRequiredForeign != null ) TestRequiredForeign.Builder builder = TestRequiredForeign.newBuilder();
AbstractMessageTest.java,TestAllTypes a = TestUtil.getAllSet();,if (TestUtil != null ) TestAllTypes a = TestUtil.getAllSet();
AbstractMessageTest.java,TestAllTypes b = TestAllTypes.newBuilder().build();,if (TestAllTypes != null ) TestAllTypes b = TestAllTypes.newBuilder().build();
AbstractMessageTest.java,TestAllExtensions e = TestUtil.getAllExtensionsSet();,if (TestUtil != null ) TestAllExtensions e = TestUtil.getAllExtensionsSet();
AbstractMessageTest.java,DynamicMessage dynamic = DynamicMessage.newBuilder(message).build();,if (DynamicMessage != null ) DynamicMessage dynamic = DynamicMessage.newBuilder(message).build();
CodedInputStreamTest.java,TestAllTypes message = TestUtil.getAllSet();,if (TestUtil != null ) TestAllTypes message = TestUtil.getAllSet();
CodedInputStreamTest.java,byte[] rawBytes = message.toByteArray();,if (message != null ) byte[] rawBytes = message.toByteArray();
CodedInputStreamTest.java,TestAllTypes message = TestUtil.getAllSet();,if (TestUtil != null ) TestAllTypes message = TestUtil.getAllSet();
CodedInputStreamTest.java,byte[] rawBytes = message.toByteArray();,if (message != null ) byte[] rawBytes = message.toByteArray();
CodedInputStreamTest.java,UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();,if (UnknownFieldSet != null ) UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
CodedInputStreamTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
CodedInputStreamTest.java,TestAllTypes message = builder.build();,if (builder != null ) TestAllTypes message = builder.build();
CodedInputStreamTest.java,ByteString.Output rawOutput = ByteString.newOutput();,if (ByteString != null ) ByteString.Output rawOutput = ByteString.newOutput();
CodedInputStreamTest.java,CodedInputStream input = rawOutput.toByteString().newCodedInput();,if (rawOutput != null ) CodedInputStream input = rawOutput.toByteString().newCodedInput();
CodedInputStreamTest.java,ByteString.Output rawOutput = ByteString.newOutput();,if (ByteString != null ) ByteString.Output rawOutput = ByteString.newOutput();
CodedInputStreamTest.java,CodedInputStream input = rawOutput.toByteString().newCodedInput();,if (rawOutput != null ) CodedInputStream input = rawOutput.toByteString().newCodedInput();
CodedInputStreamTest.java,String text = input.readString();,if (input != null ) String text = input.readString();
CodedOutputStreamTest.java,TestAllTypes message = TestUtil.getAllSet();,if (TestUtil != null ) TestAllTypes message = TestUtil.getAllSet();
CodedOutputStreamTest.java,byte[] rawBytes = message.toByteArray();,if (message != null ) byte[] rawBytes = message.toByteArray();
DescriptorsTest.java,FileDescriptor file = UnittestProto.getDescriptor();,if (UnittestProto != null ) FileDescriptor file = UnittestProto.getDescriptor();
DescriptorsTest.java,Descriptor messageType = TestAllTypes.getDescriptor();,if (TestAllTypes != null ) Descriptor messageType = TestAllTypes.getDescriptor();
DescriptorsTest.java,EnumDescriptor enumType = ForeignEnum.getDescriptor();,if (ForeignEnum != null ) EnumDescriptor enumType = ForeignEnum.getDescriptor();
DescriptorsTest.java,ServiceDescriptor service = TestService.getDescriptor();,if (TestService != null ) ServiceDescriptor service = TestService.getDescriptor();
DescriptorsTest.java,Descriptor messageType = TestAllTypes.getDescriptor();,if (TestAllTypes != null ) Descriptor messageType = TestAllTypes.getDescriptor();
DescriptorsTest.java,Descriptor nestedType = TestAllTypes.NestedMessage.getDescriptor();,if (TestAllTypes != null ) Descriptor nestedType = TestAllTypes.NestedMessage.getDescriptor();
DescriptorsTest.java,EnumDescriptor enumType = TestAllTypes.NestedEnum.getDescriptor();,if (TestAllTypes != null ) EnumDescriptor enumType = TestAllTypes.NestedEnum.getDescriptor();
DescriptorsTest.java,Descriptor messageType = TestAllTypes.getDescriptor();,if (TestAllTypes != null ) Descriptor messageType = TestAllTypes.getDescriptor();
DescriptorsTest.java,FieldDescriptor nestedExtension = TestRequired.single.getDescriptor();,if (TestRequired != null ) FieldDescriptor nestedExtension = TestRequired.single.getDescriptor();
DescriptorsTest.java,Descriptor d = TestAllTypes.getDescriptor();,if (TestAllTypes != null ) Descriptor d = TestAllTypes.getDescriptor();
DescriptorsTest.java,d = TestExtremeDefaultValues.getDescriptor();,if (TestExtremeDefaultValues != null ) d = TestExtremeDefaultValues.getDescriptor();
DescriptorsTest.java,EnumDescriptor enumType = ForeignEnum.getDescriptor();,if (ForeignEnum != null ) EnumDescriptor enumType = ForeignEnum.getDescriptor();
DescriptorsTest.java,EnumDescriptor nestedType = TestAllTypes.NestedEnum.getDescriptor();,if (TestAllTypes != null ) EnumDescriptor nestedType = TestAllTypes.NestedEnum.getDescriptor();
DescriptorsTest.java,ServiceDescriptor service = TestService.getDescriptor();,if (TestService != null ) ServiceDescriptor service = TestService.getDescriptor();
DynamicMessageTest.java,Message message = builder.build();,if (builder != null ) Message message = builder.build();
DynamicMessageTest.java,Message message = builder.build();,if (builder != null ) Message message = builder.build();
DynamicMessageTest.java,Message message = builder.build();,if (builder != null ) Message message = builder.build();
DynamicMessageTest.java,TestAllTypes message = TestUtil.getAllSet();,if (TestUtil != null ) TestAllTypes message = TestUtil.getAllSet();
DynamicMessageTest.java,Message dynamicMessage = dynamicBuilder.build();,if (dynamicBuilder != null ) Message dynamicMessage = dynamicBuilder.build();
DynamicMessageTest.java,Message message = builder.build();,if (builder != null ) Message message = builder.build();
DynamicMessageTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
DynamicMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
DynamicMessageTest.java,TestAllTypes message = builder.build();,if (builder != null ) TestAllTypes message = builder.build();
DynamicMessageTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
DynamicMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
DynamicMessageTest.java,TestAllTypes message = builder.build();,if (builder != null ) TestAllTypes message = builder.build();
DynamicMessageTest.java,DynamicMessage copy = DynamicMessage.newBuilder(message).build();,if (DynamicMessage != null ) DynamicMessage copy = DynamicMessage.newBuilder(message).build();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,TestAllTypes message = builder.build();,if (builder != null ) TestAllTypes message = builder.build();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,TestAllTypes message = builder.build();,if (builder != null ) TestAllTypes message = builder.build();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,TestAllTypes message = builder.build();,if (builder != null ) TestAllTypes message = builder.build();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,TestAllTypes message = builder.build();,if (builder != null ) TestAllTypes message = builder.build();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,TestAllTypes message = builder.build();,if (builder != null ) TestAllTypes message = builder.build();
GeneratedMessageTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
GeneratedMessageTest.java,TestAllTypes message = builder.build();,if (builder != null ) TestAllTypes message = builder.build();
GeneratedMessageTest.java,TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();,if (TestAllExtensions != null ) TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();
GeneratedMessageTest.java,TestAllExtensions message = builder.build();,if (builder != null ) TestAllExtensions message = builder.build();
GeneratedMessageTest.java,TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();,if (TestAllExtensions != null ) TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();
GeneratedMessageTest.java,TestAllExtensions message = builder.build();,if (builder != null ) TestAllExtensions message = builder.build();
GeneratedMessageTest.java,TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();,if (TestAllExtensions != null ) TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();
GeneratedMessageTest.java,TestAllExtensions message = builder.build();,if (builder != null ) TestAllExtensions message = builder.build();
GeneratedMessageTest.java,TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();,if (TestAllExtensions != null ) TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();
GeneratedMessageTest.java,TestAllExtensions message = builder.build();,if (builder != null ) TestAllExtensions message = builder.build();
GeneratedMessageTest.java,TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();,if (TestAllExtensions != null ) TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();
GeneratedMessageTest.java,TestAllExtensions message = builder.build();,if (builder != null ) TestAllExtensions message = builder.build();
GeneratedMessageTest.java,TestOptionalOptimizedForSize message = TestOptionalOptimizedForSize.getDefaultInstance();,if (TestOptionalOptimizedForSize != null ) TestOptionalOptimizedForSize message = TestOptionalOptimizedForSize.getDefaultInstance();
MessageTest.java,TestRequired.Builder builder = TestRequired.newBuilder();,if (TestRequired != null ) TestRequired.Builder builder = TestRequired.newBuilder();
MessageTest.java,TestRequiredForeign.Builder builder = TestRequiredForeign.newBuilder();,if (TestRequiredForeign != null ) TestRequiredForeign.Builder builder = TestRequiredForeign.newBuilder();
MessageTest.java,TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();,if (TestAllExtensions != null ) TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();
MessageTest.java,Descriptors.Descriptor descriptor = TestRequired.getDescriptor();,if (TestRequired != null ) Descriptors.Descriptor descriptor = TestRequired.getDescriptor();
MessageTest.java,Descriptors.Descriptor descriptor = TestRequiredForeign.getDescriptor();,if (TestRequiredForeign != null ) Descriptors.Descriptor descriptor = TestRequiredForeign.getDescriptor();
MessageTest.java,TestRequired message = TestRequired.newBuilder().buildPartial();,if (TestRequired != null ) TestRequired message = TestRequired.newBuilder().buildPartial();
MessageTest.java,Descriptors.Descriptor descriptor = TestRequired.getDescriptor();,if (TestRequired != null ) Descriptors.Descriptor descriptor = TestRequired.getDescriptor();
ServiceTest.java,control = EasyMock.createStrictControl();,if (EasyMock != null ) control = EasyMock.createStrictControl();
ServiceTest.java,FooRequest fooRequest = FooRequest.newBuilder().build();,if (FooRequest != null ) FooRequest fooRequest = FooRequest.newBuilder().build();
ServiceTest.java,BarRequest barRequest = BarRequest.newBuilder().build();,if (BarRequest != null ) BarRequest barRequest = BarRequest.newBuilder().build();
ServiceTest.java,FooRequest fooRequest = FooRequest.newBuilder().build();,if (FooRequest != null ) FooRequest fooRequest = FooRequest.newBuilder().build();
ServiceTest.java,BarRequest barRequest = BarRequest.newBuilder().build();,if (BarRequest != null ) BarRequest barRequest = BarRequest.newBuilder().build();
TestUtil.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TestUtil.java,TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();,if (TestAllExtensions != null ) TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();
TestUtil.java,ExtensionRegistry registry = ExtensionRegistry.newInstance();,if (ExtensionRegistry != null ) ExtensionRegistry registry = ExtensionRegistry.newInstance();
TestUtil.java,this.file = baseDescriptor.getFile();,if (baseDescriptor != null ) this.file = baseDescriptor.getFile();
TestUtil.java,ancestor = ancestor.getCanonicalFile();,if (ancestor != null ) ancestor = ancestor.getCanonicalFile();
TestUtil.java,ancestor = ancestor.getParentFile();,if (ancestor != null ) ancestor = ancestor.getParentFile();
TextFormatTest.java,String javaText = TextFormat.printToString(TestUtil.getAllSet());,if (TextFormat != null ) String javaText = TextFormat.printToString(TestUtil.getAllSet());
TextFormatTest.java,String javaText = TextFormat.printToString(TestUtil.getAllExtensionsSet());,if (TextFormat != null ) String javaText = TextFormat.printToString(TestUtil.getAllExtensionsSet());
TextFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TextFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TextFormatTest.java,TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();,if (TestAllExtensions != null ) TestAllExtensions.Builder builder = TestAllExtensions.newBuilder();
TextFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TextFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TextFormatTest.java,ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();,if (ExtensionRegistry != null ) ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();
TextFormatTest.java,TestMessageSet.Builder builder = TestMessageSet.newBuilder();,if (TestMessageSet != null ) TestMessageSet.Builder builder = TestMessageSet.newBuilder();
TextFormatTest.java,TestMessageSet messageSet = builder.build();,if (builder != null ) TestMessageSet messageSet = builder.build();
TextFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TextFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TextFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
TextFormatTest.java,TestAllTypes.Builder builder = TestAllTypes.newBuilder();,if (TestAllTypes != null ) TestAllTypes.Builder builder = TestAllTypes.newBuilder();
UnknownFieldSetTest.java,descriptor = TestAllTypes.getDescriptor();,if (TestAllTypes != null ) descriptor = TestAllTypes.getDescriptor();
UnknownFieldSetTest.java,allFields = TestUtil.getAllSet();,if (TestUtil != null ) allFields = TestUtil.getAllSet();
UnknownFieldSetTest.java,allFieldsData = allFields.toByteString();,if (allFields != null ) allFieldsData = allFields.toByteString();
UnknownFieldSetTest.java,unknownFields = emptyMessage.getUnknownFields();,if (emptyMessage != null ) unknownFields = emptyMessage.getUnknownFields();
UnknownFieldSetTest.java,UnknownFieldSet.Builder bizarroFields = UnknownFieldSet.newBuilder();,if (UnknownFieldSet != null ) UnknownFieldSet.Builder bizarroFields = UnknownFieldSet.newBuilder();
UnknownFieldSetTest.java,ByteString data = emptyMessage.toByteString();,if (emptyMessage != null ) ByteString data = emptyMessage.toByteString();
UnknownFieldSetTest.java,ByteString data = fields.toByteString();,if (fields != null ) ByteString data = fields.toByteString();
WireFormatTest.java,TestAllTypes message = TestUtil.getAllSet();,if (TestUtil != null ) TestAllTypes message = TestUtil.getAllSet();
WireFormatTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatTest.java,TestAllExtensions message = TestUtil.getAllExtensionsSet();,if (TestUtil != null ) TestAllExtensions message = TestUtil.getAllExtensionsSet();
WireFormatTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatTest.java,TestAllTypes message = TestUtil.getAllSet();,if (TestUtil != null ) TestAllTypes message = TestUtil.getAllSet();
WireFormatTest.java,ByteString rawBytes = message.toByteString();,if (message != null ) ByteString rawBytes = message.toByteString();
WireFormatTest.java,ExtensionRegistry registry = ExtensionRegistry.newInstance();,if (ExtensionRegistry != null ) ExtensionRegistry registry = ExtensionRegistry.newInstance();
WireFormatTest.java,registry = registry.getUnmodifiable();,if (registry != null ) registry = registry.getUnmodifiable();
WireFormatTest.java,CodedInputStream input = data.newCodedInput();,if (data != null ) CodedInputStream input = data.newCodedInput();
WireFormatTest.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
WireFormatTest.java,Descriptors.Descriptor descriptor = TestFieldOrderings.getDescriptor();,if (TestFieldOrderings != null ) Descriptors.Descriptor descriptor = TestFieldOrderings.getDescriptor();
WireFormatTest.java,ByteString data = messageSet.toByteString();,if (messageSet != null ) ByteString data = messageSet.toByteString();
WireFormatTest.java,ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();,if (ExtensionRegistry != null ) ExtensionRegistry extensionRegistry = ExtensionRegistry.newInstance();
WireFormatTest.java,ByteString data = raw.toByteString();,if (raw != null ) ByteString data = raw.toByteString();
WireFormatTest.java,UnknownFieldSet unknownFields = messageSet.getUnknownFields();,if (messageSet != null ) UnknownFieldSet unknownFields = messageSet.getUnknownFields();
TextFormat.java,Descriptor descriptor = message.getDescriptorForType();,if (message != null ) Descriptor descriptor = message.getDescriptorForType();
TextFormat.java,Descriptor descriptor = message.getDescriptorForType();,if (message != null ) Descriptor descriptor = message.getDescriptorForType();
Bcl.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
Bcl.java,result = new bcl.Bcl.TimeSpan();,if (bcl != null ) result = new bcl.Bcl.TimeSpan();
Bcl.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
Bcl.java,int rawValue = input.readEnum();,if (input != null ) int rawValue = input.readEnum();
Bcl.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
Bcl.java,result = new bcl.Bcl.DateTime();,if (bcl != null ) result = new bcl.Bcl.DateTime();
Bcl.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
Bcl.java,int rawValue = input.readEnum();,if (input != null ) int rawValue = input.readEnum();
Bcl.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
Bcl.java,result = new bcl.Bcl.Guid();,if (bcl != null ) result = new bcl.Bcl.Guid();
Bcl.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
Bcl.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
Bcl.java,result = new bcl.Bcl.Decimal();,if (bcl != null ) result = new bcl.Bcl.Decimal();
Bcl.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
Nwind.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
Nwind.java,result = new northwind.Nwind.Database();,if (northwind != null ) result = new northwind.Nwind.Database();
Nwind.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
Nwind.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
Nwind.java,result = new northwind.Nwind.Order();,if (northwind != null ) result = new northwind.Nwind.Order();
Nwind.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
Nwind.java,size += getUnknownFields().getSerializedSize();,if (getUnknownFields() != null ) size += getUnknownFields().getSerializedSize();
Nwind.java,result = new northwind.Nwind.OrderLine();,if (northwind != null ) result = new northwind.Nwind.OrderLine();
Nwind.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
Slowbcl.java,result = new slowbcl.Slowbcl.TimeSpan();,if (slowbcl != null ) result = new slowbcl.Slowbcl.TimeSpan();
Slowbcl.java,result = new slowbcl.Slowbcl.DateTime();,if (slowbcl != null ) result = new slowbcl.Slowbcl.DateTime();
Slowbcl.java,result = new slowbcl.Slowbcl.Guid();,if (slowbcl != null ) result = new slowbcl.Slowbcl.Guid();
Slowbcl.java,result = new slowbcl.Slowbcl.Decimal();,if (slowbcl != null ) result = new slowbcl.Slowbcl.Decimal();
Slownwind.java,result = new slownorthwind.Slownwind.Database();,if (slownorthwind != null ) result = new slownorthwind.Slownwind.Database();
Slownwind.java,result = new slownorthwind.Slownwind.Order();,if (slownorthwind != null ) result = new slownorthwind.Slownwind.Order();
Slownwind.java,result = new slownorthwind.Slownwind.OrderLine();,if (slownorthwind != null ) result = new slownorthwind.Slownwind.OrderLine();
Benchmark.java,imBsi = mBsi.toImmutableBitSliceIndex();,if (mBsi != null ) imBsi = mBsi.toImmutableBitSliceIndex();
Benchmark.java,long s = System.currentTimeMillis();,if (System != null ) long s = System.currentTimeMillis();
Benchmark.java,long s = System.currentTimeMillis();,if (System != null ) long s = System.currentTimeMillis();
Benchmark.java,long s = System.currentTimeMillis();,if (System != null ) long s = System.currentTimeMillis();
Benchmark.java,long s = System.currentTimeMillis();,if (System != null ) long s = System.currentTimeMillis();
Benchmark.java,long s = System.currentTimeMillis();,if (System != null ) long s = System.currentTimeMillis();
Benchmark.java,int mSize = bsi.serializedSizeInBytes();,if (bsi != null ) int mSize = bsi.serializedSizeInBytes();
RangeBitmap.java,int type = buffer.get();,if (buffer != null ) int type = buffer.get();
RangeBitmap.java,int type = buffer.get();,if (buffer != null ) int type = buffer.get();
Roaring64Bitmap.java,LeafNode leafNode = keyIte.next();,if (keyIte != null ) LeafNode leafNode = keyIte.next();
Roaring64Bitmap.java,high = leafNode.getKeyBytes();,if (leafNode != null ) high = leafNode.getKeyBytes();
Roaring64Bitmap.java,long containerIdx = leafNode.getContainerIdx();,if (leafNode != null ) long containerIdx = leafNode.getContainerIdx();
Roaring64Bitmap.java,LeafNode leafNode = keyIte.next();,if (keyIte != null ) LeafNode leafNode = keyIte.next();
Roaring64Bitmap.java,high = leafNode.getKeyBytes();,if (leafNode != null ) high = leafNode.getKeyBytes();
Roaring64Bitmap.java,long containerIdx = leafNode.getContainerIdx();,if (leafNode != null ) long containerIdx = leafNode.getContainerIdx();
Roaring64Bitmap.java,LeafNode leafNode = keyIte.peekNext();,if (keyIte != null ) LeafNode leafNode = keyIte.peekNext();
Roaring64Bitmap.java,LeafNode leafNode = keyIte.next();,if (keyIte != null ) LeafNode leafNode = keyIte.next();
Roaring64Bitmap.java,this.high = leafNode.getKeyBytes();,if (leafNode != null ) this.high = leafNode.getKeyBytes();
Roaring64Bitmap.java,long containerIdx = leafNode.getContainerIdx();,if (leafNode != null ) long containerIdx = leafNode.getContainerIdx();
Roaring64Bitmap.java,LeafNode leafNode = keyIte.next();,if (keyIte != null ) LeafNode leafNode = keyIte.next();
Roaring64Bitmap.java,high = leafNode.getKeyBytes();,if (leafNode != null ) high = leafNode.getKeyBytes();
Roaring64Bitmap.java,long containerIdx = leafNode.getContainerIdx();,if (leafNode != null ) long containerIdx = leafNode.getContainerIdx();
Roaring64Bitmap.java,charIterator = container.getCharIterator();,if (container != null ) charIterator = container.getCharIterator();
Roaring64Bitmap.java,charIterator = container.getReverseCharIterator();,if (container != null ) charIterator = container.getReverseCharIterator();
Roaring64Bitmap.java,LeafNode leafNode = keyIte.next();,if (keyIte != null ) LeafNode leafNode = keyIte.next();
Roaring64Bitmap.java,high = leafNode.getKeyBytes();,if (leafNode != null ) high = leafNode.getKeyBytes();
Roaring64Bitmap.java,long containerIdx = leafNode.getContainerIdx();,if (leafNode != null ) long containerIdx = leafNode.getContainerIdx();
Roaring64Bitmap.java,charIterator = container.getCharIterator();,if (container != null ) charIterator = container.getCharIterator();
Roaring64Bitmap.java,charIterator = container.getReverseCharIterator();,if (container != null ) charIterator = container.getReverseCharIterator();
Roaring64Bitmap.java,char low = charIterator.next();,if (charIterator != null ) char low = charIterator.next();
ZipRealDataRetriever.java,"String oneLine = buf.readLine(); // a single, perhaps very long, line","if (line != null ) String oneLine = buf.readLine(); // a single, perhaps very long, line"
simplebenchmark.java,"String oneLine = buf.readLine(); // a single, perhaps very long, line","if (line != null ) String oneLine = buf.readLine(); // a single, perhaps very long, line"
AbstractShuttle.java,pos = currentNodeEntry.node.getMinPos();,if (currentNodeEntry != null ) pos = currentNodeEntry.node.getMinPos();
TestRoaring64Bitmap.java,ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArrayOutputStream.toByteArray());,if (ByteArrayInputStream(byteArrayOutputStream != null ) ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArrayOutputStream.toByteArray());
TestImmutableRoaringBitmapOrNot.java,final IntIterator iterator = answer.getIntIterator();,if (answer != null ) final IntIterator iterator = answer.getIntIterator();
TestImmutableRoaringBitmapOrNot.java,final IntIterator iterator = answer.getIntIterator();,if (answer != null ) final IntIterator iterator = answer.getIntIterator();
TestImmutableRoaringBitmapOrNot.java,final IntIterator iterator = answer.getIntIterator();,if (answer != null ) final IntIterator iterator = answer.getIntIterator();
TestImmutableRoaringBitmapOrNot.java,final IntIterator iterator = answer.getIntIterator();,if (answer != null ) final IntIterator iterator = answer.getIntIterator();
TestImmutableRoaringBitmapOrNot.java,final IntIterator iterator = answer.getIntIterator();,if (answer != null ) final IntIterator iterator = answer.getIntIterator();
TestImmutableRoaringBitmapOrNot.java,final IntIterator iterator = answer.getIntIterator();,if (answer != null ) final IntIterator iterator = answer.getIntIterator();
TestImmutableRoaringBitmapOrNot.java,final IntIterator iterator = answer.getIntIterator();,if (answer != null ) final IntIterator iterator = answer.getIntIterator();
TestImmutableRoaringBitmapOrNot.java,final IntIterator iterator = answer.getIntIterator();,if (answer != null ) final IntIterator iterator = answer.getIntIterator();
TestImmutableRoaringBitmapOrNot.java,final IntIterator iterator = answer.getIntIterator();,if (answer != null ) final IntIterator iterator = answer.getIntIterator();
TestImmutableRoaringBitmapOrNot.java,final IntIterator iterator = answer.getIntIterator();,if (answer != null ) final IntIterator iterator = answer.getIntIterator();
TestImmutableRoaringBitmapOrNot.java,final IntIterator iterator = answer.getIntIterator();,if (answer != null ) final IntIterator iterator = answer.getIntIterator();
TestRoaringBitmap.java,ContainerPointer cp = rb.getContainerPointer();,if (rb != null ) ContainerPointer cp = rb.getContainerPointer();
TestRoaringBitmap.java,ContainerPointer cpo = (ContainerPointer) cp.clone();,if (cp != null ) ContainerPointer cpo = (ContainerPointer) cp.clone();
TestRoaringBitmap.java,Object[] correct = hs.toArray();,if (hs != null ) Object[] correct = hs.toArray();
TestRoaringBitmap.java,Integer[] resand = ArrayUtils.toObject(rband.toArray());,if (ArrayUtils != null ) Integer[] resand = ArrayUtils.toObject(rband.toArray());
TestRoaringBitmap.java,final IntIterator i = rb.getIntIterator();,if (rb != null ) final IntIterator i = rb.getIntIterator();
TestRoaringBitmap.java,Object[] correct = hs.toArray();,if (hs != null ) Object[] correct = hs.toArray();
TestRoaringBitmap.java,Integer[] resandNot = ArrayUtils.toObject(rbandnot.toArray());,if (ArrayUtils != null ) Integer[] resandNot = ArrayUtils.toObject(rbandnot.toArray());
TestRoaringBitmap.java,int[] array = rrand.toArray();,if (rrand != null ) int[] array = rrand.toArray();
TestRoaringBitmap.java,array = rr.toArray();,if (rr != null ) array = rr.toArray();
TestRoaringBitmap.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRoaringBitmap.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRoaringBitmap.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRoaringBitmap.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRoaringBitmap.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRoaringBitmap.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRoaringBitmap.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRoaringBitmap.java,Object[] correct = hs.toArray();,if (hs != null ) Object[] correct = hs.toArray();
TestRoaringBitmap.java,Integer[] resor = ArrayUtils.toObject(rbor.toArray());,if (ArrayUtils != null ) Integer[] resor = ArrayUtils.toObject(rbor.toArray());
TestRoaringBitmap.java,final IntIterator iterator = rb.getIntIterator();,if (rb != null ) final IntIterator iterator = rb.getIntIterator();
TestRoaringBitmap.java,final IntIterator iterator = rb.getIntIterator();,if (rb != null ) final IntIterator iterator = rb.getIntIterator();
TestRoaringBitmap.java,final IntIterator iterator = rb.getIntIterator();,if (rb != null ) final IntIterator iterator = rb.getIntIterator();
TestRoaringBitmap.java,final IntIterator iterator = rb.getIntIterator();,if (rb != null ) final IntIterator iterator = rb.getIntIterator();
TestRoaringBitmap.java,final IntIterator iterator = rb.getIntIterator();,if (rb != null ) final IntIterator iterator = rb.getIntIterator();
TestRoaringBitmap.java,final IntIterator iterator = rb.getIntIterator();,if (rb != null ) final IntIterator iterator = rb.getIntIterator();
TestRoaringBitmap.java,int[] array = rb.toArray();,if (rb != null ) int[] array = rb.toArray();
TestRoaringBitmap.java,int[] array = rb.toArray();,if (rb != null ) int[] array = rb.toArray();
TestRoaringBitmap.java,IntIterator i = rb.getIntIterator();,if (rb != null ) IntIterator i = rb.getIntIterator();
TestRoaringBitmap.java,IntIterator i = rb.getIntIterator();,if (rb != null ) IntIterator i = rb.getIntIterator();
TestRoaringBitmap.java,int thiscard = rb.getCardinality();,if (rb != null ) int thiscard = rb.getCardinality();
TestRoaringBitmap.java,int thiscard = rb.getCardinality();,if (rb != null ) int thiscard = rb.getCardinality();
TestRoaringBitmap.java,Iterator<RoaringBitmap> rbi = arrayList.iterator();,if (arrayList != null ) Iterator<RoaringBitmap> rbi = arrayList.iterator();
TestRoaringBitmap.java,Iterator<RoaringBitmap> rbi = arrayList.iterator();,if (arrayList != null ) Iterator<RoaringBitmap> rbi = arrayList.iterator();
TestRoaringBitmap.java,final ByteArrayInputStream bis = new ByteArrayInputStream(bos.toByteArray());,if (ByteArrayInputStream(bos != null ) final ByteArrayInputStream bis = new ByteArrayInputStream(bos.toByteArray());
TestRoaringBitmap.java,final ByteArrayInputStream bis = new ByteArrayInputStream(bos.toByteArray());,if (ByteArrayInputStream(bos != null ) final ByteArrayInputStream bis = new ByteArrayInputStream(bos.toByteArray());
TestRoaringBitmap.java,final ByteArrayInputStream bis = new ByteArrayInputStream(bos.toByteArray());,if (ByteArrayInputStream(bos != null ) final ByteArrayInputStream bis = new ByteArrayInputStream(bos.toByteArray());
TestRoaringBitmap.java,int howmuch = rr.serializedSizeInBytes();,if (rr != null ) int howmuch = rr.serializedSizeInBytes();
TestRoaringBitmap.java,int howmuch = rr.serializedSizeInBytes();,if (rr != null ) int howmuch = rr.serializedSizeInBytes();
TestRoaringBitmap.java,int howmuch = rr.serializedSizeInBytes();,if (rr != null ) int howmuch = rr.serializedSizeInBytes();
TestRoaringBitmap.java,int howmuch = rr.serializedSizeInBytes();,if (rr != null ) int howmuch = rr.serializedSizeInBytes();
TestRoaringBitmap.java,int howmuch = rr.serializedSizeInBytes();,if (rr != null ) int howmuch = rr.serializedSizeInBytes();
TestRoaringBitmap.java,int howmuch = rr.serializedSizeInBytes();,if (rr != null ) int howmuch = rr.serializedSizeInBytes();
TestRoaringBitmap.java,int howmuch = rr.serializedSizeInBytes();,if (rr != null ) int howmuch = rr.serializedSizeInBytes();
TestRoaringBitmap.java,int howmuch = rr.serializedSizeInBytes();,if (rr != null ) int howmuch = rr.serializedSizeInBytes();
TestRoaringBitmap.java,final ByteBuffer buf = ByteBuffer.wrap(bos.toByteArray());,if (ByteBuffer != null ) final ByteBuffer buf = ByteBuffer.wrap(bos.toByteArray());
TestRoaringBitmap.java,int howmuch = rr.serializedSizeInBytes();,if (rr != null ) int howmuch = rr.serializedSizeInBytes();
TestRoaringBitmap.java,final ByteBuffer buf = ByteBuffer.wrap(bos.toByteArray());,if (ByteBuffer != null ) final ByteBuffer buf = ByteBuffer.wrap(bos.toByteArray());
TestRoaringBitmap.java,int howmuch = rr.serializedSizeInBytes();,if (rr != null ) int howmuch = rr.serializedSizeInBytes();
TestRoaringBitmap.java,final ByteBuffer buf = ByteBuffer.wrap(bos.toByteArray());,if (ByteBuffer != null ) final ByteBuffer buf = ByteBuffer.wrap(bos.toByteArray());
TestRoaringBitmap.java,int howmuch = rr.serializedSizeInBytes();,if (rr != null ) int howmuch = rr.serializedSizeInBytes();
TestRoaringBitmap.java,final ByteBuffer buf = ByteBuffer.wrap(bos.toByteArray());,if (ByteBuffer != null ) final ByteBuffer buf = ByteBuffer.wrap(bos.toByteArray());
TestRoaringBitmap.java,int howmuch = rr.serializedSizeInBytes();,if (rr != null ) int howmuch = rr.serializedSizeInBytes();
TestRoaringBitmap.java,final ByteBuffer buf = ByteBuffer.wrap(bos.toByteArray());,if (ByteBuffer != null ) final ByteBuffer buf = ByteBuffer.wrap(bos.toByteArray());
TestRoaringBitmap.java,return counter == bc.getCardinality();,if (bc != null ) return counter == bc.getCardinality();
TestRoaringBitmap.java,ContainerPointer cp = ra.getContainerPointer();,if (ra != null ) ContainerPointer cp = ra.getContainerPointer();
TestRoaringBitmap.java,ArrayContainer ac = (ArrayContainer) cp.getContainer();,if (cp != null ) ArrayContainer ac = (ArrayContainer) cp.getContainer();
TestRoaringBitmap.java,Object[] correct = hs.toArray();,if (hs != null ) Object[] correct = hs.toArray();
TestRoaringBitmap.java,Integer[] resxor = ArrayUtils.toObject(rbxor.toArray());,if (ArrayUtils != null ) Integer[] resxor = ArrayUtils.toObject(rbxor.toArray());
TestRoaringBitmap.java,IntIterator intIterator = result.getIntIterator();,if (result != null ) IntIterator intIterator = result.getIntIterator();
TestRoaringBitmap.java,IntIterator intIterator = result.getIntIterator();,if (result != null ) IntIterator intIterator = result.getIntIterator();
TestRoaringBitmap.java,IntIterator intIterator = result.getIntIterator();,if (result != null ) IntIterator intIterator = result.getIntIterator();
TestRoaringBitmap.java,IntIterator intIterator = result.getIntIterator();,if (result != null ) IntIterator intIterator = result.getIntIterator();
TestRoaringBitmap.java,IntIterator intIterator = result.getIntIterator();,if (result != null ) IntIterator intIterator = result.getIntIterator();
TestRoaringBitmap.java,IntIterator intIterator = result.getIntIterator();,if (result != null ) IntIterator intIterator = result.getIntIterator();
TestRoaringBitmap.java,IntIterator intIterator = result.getIntIterator();,if (result != null ) IntIterator intIterator = result.getIntIterator();
TestRoaringBitmap.java,IntIterator intIterator = result.getIntIterator();,if (result != null ) IntIterator intIterator = result.getIntIterator();
TestRoaringBitmap.java,RoaringBitmap other = baseline.clone();,if (baseline != null ) RoaringBitmap other = baseline.clone();
TestRoaringBitmap.java,RoaringBitmap other = baseline.clone();,if (baseline != null ) RoaringBitmap other = baseline.clone();
TestRoaringBitmap.java,RoaringBitmap bitmap = writer.getUnderlying();,if (writer != null ) RoaringBitmap bitmap = writer.getUnderlying();
TestRoaringBitmap.java,IntIterator i = rb.getIntIterator();,if (rb != null ) IntIterator i = rb.getIntIterator();
TestRoaringBitmap.java,IntIterator j = rboff.getIntIterator();,if (rboff != null ) IntIterator j = rboff.getIntIterator();
TestRoaringBitmap.java,IntIterator i = rb.getIntIterator();,if (rb != null ) IntIterator i = rb.getIntIterator();
TestRoaringBitmap.java,IntIterator j = rboff.getIntIterator();,if (rboff != null ) IntIterator j = rboff.getIntIterator();
TestRoaringBitmap.java,int i = bitmap.getCardinality();,if (bitmap != null ) int i = bitmap.getCardinality();
TestSerializationViaByteBuffer.java,dir = tf.newFolder().toPath();,if (tf != null ) dir = tf.newFolder().toPath();
TestSerializationViaByteBuffer.java,this.serialised = bos.toByteArray();,if (bos != null ) this.serialised = bos.toByteArray();
RoaringBitmapIntervalIntersectionTest.java,this.bitmap = bitmap.toMutableRoaringBitmap();,if (bitmap != null ) this.bitmap = bitmap.toMutableRoaringBitmap();
TestSerializationViaByteBuffer.java,dir = tf.newFolder().toPath();,if (tf != null ) dir = tf.newFolder().toPath();
TestSerializationViaByteBuffer.java,MutableRoaringBitmap input = SeededTestData.randomBitmap(keys).toMutableRoaringBitmap();,if (SeededTestData != null ) MutableRoaringBitmap input = SeededTestData.randomBitmap(keys).toMutableRoaringBitmap();
TestSerializationViaByteBuffer.java,this.serialised = bos.toByteArray();,if (bos != null ) this.serialised = bos.toByteArray();
TestRoaring64NavigableMap.java,Iterator<Long> it = map.iterator();,if (map != null ) Iterator<Long> it = map.iterator();
Fuzzer.java,long next = toUnsignedLong(it.next());,if (toUnsignedLong(it != null ) long next = toUnsignedLong(it.next());
Fuzzer.java,ThreadLocalRandom random = ThreadLocalRandom.current();,if (ThreadLocalRandom != null ) ThreadLocalRandom random = ThreadLocalRandom.current();
RandomData.java,double choice = ThreadLocalRandom.current().nextDouble();,if (ThreadLocalRandom != null ) double choice = ThreadLocalRandom.current().nextDouble();
ArrayContainer.java,ShortBuffer buf = buffer.asShortBuffer();,if (buffer != null ) ShortBuffer buf = buffer.asShortBuffer();
BitmapContainer.java,final ShortIterator si = BitmapContainer.this.getShortIterator();,if (BitmapContainer != null ) final ShortIterator si = BitmapContainer.this.getShortIterator();
BitmapContainer.java,final ShortIterator i = this.getShortIterator();,if (this != null ) final ShortIterator i = this.getShortIterator();
RoaringArray.java,keys[k] = Short.reverseBytes(in.readShort());,if (Short != null ) keys[k] = Short.reverseBytes(in.readShort());
RoaringArray.java,lengthsAndValues[j] = Short.reverseBytes(in.readShort());,if (Short != null ) lengthsAndValues[j] = Short.reverseBytes(in.readShort());
RoaringArray.java,shortArray[l] = Short.reverseBytes(in.readShort());,if (Short != null ) shortArray[l] = Short.reverseBytes(in.readShort());
RoaringArray.java,keys[k] = Short.reverseBytes(in.readShort());,if (Short != null ) keys[k] = Short.reverseBytes(in.readShort());
RoaringArray.java,lengthsAndValues[j] = Short.reverseBytes(in.readShort());,if (Short != null ) lengthsAndValues[j] = Short.reverseBytes(in.readShort());
RoaringArray.java,ShortBuffer asShortBuffer = asByteBuffer.asShortBuffer();,if (asByteBuffer != null ) ShortBuffer asShortBuffer = asByteBuffer.asShortBuffer();
RoaringArray.java,shortArray[j] = Short.reverseBytes(in.readShort());,if (Short != null ) shortArray[j] = Short.reverseBytes(in.readShort());
RoaringArray.java,ShortBuffer asShortBuffer = asByteBuffer.asShortBuffer();,if (asByteBuffer != null ) ShortBuffer asShortBuffer = asByteBuffer.asShortBuffer();
RoaringArray.java,keys[k] = buffer.getShort();,if (buffer != null ) keys[k] = buffer.getShort();
RoaringArray.java,int nbrruns = Util.toIntUnsigned(buffer.getShort());,if (Util != null ) int nbrruns = Util.toIntUnsigned(buffer.getShort());
RunContainer.java,this.valueslength = bc.toShortArray();,if (bc != null ) this.valueslength = bc.toShortArray();
RunContainer.java,nbrruns = Short.reverseBytes(in.readShort());,if (Short != null ) nbrruns = Short.reverseBytes(in.readShort());
RunContainer.java,ShortIterator me = this.getShortIterator();,if (this != null ) ShortIterator me = this.getShortIterator();
RunContainer.java,ShortBuffer buf = buffer.asShortBuffer();,if (buffer != null ) ShortBuffer buf = buffer.asShortBuffer();
BufferParallelAggregation.java,Short key = it.key();,if (it != null ) Short key = it.key();
ImmutableRoaringArray.java,int nbrruns = BufferUtil.toIntUnsigned(tmp.getShort());,if (BufferUtil != null ) int nbrruns = BufferUtil.toIntUnsigned(tmp.getShort());
ImmutableRoaringArray.java,final ShortBuffer shortArray = tmp.asShortBuffer();,if (tmp != null ) final ShortBuffer shortArray = tmp.asShortBuffer();
ImmutableRoaringArray.java,final ShortBuffer shortArray = tmp.asShortBuffer();,if (tmp != null ) final ShortBuffer shortArray = tmp.asShortBuffer();
ImmutableRoaringBitmap.java,iter = cp.getContainer().getShortIterator();,if (cp != null ) iter = cp.getContainer().getShortIterator();
ImmutableRoaringBitmap.java,iter = cp.getContainer().getReverseShortIterator();,if (cp != null ) iter = cp.getContainer().getReverseShortIterator();
ImmutableRoaringBitmap.java,final int max = BufferUtil.toIntUnsigned(BufferUtil.maxLowBit());,if (BufferUtil != null ) final int max = BufferUtil.toIntUnsigned(BufferUtil.maxLowBit());
MappeableArrayContainer.java,this.content = bc.toShortBuffer();,if (bc != null ) this.content = bc.toShortBuffer();
MappeableArrayContainer.java,short[] sarray = content.array();,if (content != null ) short[] sarray = content.array();
MappeableArrayContainer.java,ShortBuffer tmp = newContent.duplicate();// for thread-safety,if (thread-safety != null ) ShortBuffer tmp = newContent.duplicate();// for thread-safety
MappeableArrayContainer.java,short[] answerarray = answer.content.array();,if (answer != null ) short[] answerarray = answer.content.array();
MappeableArrayContainer.java,short[] sarray = content.array();,if (content != null ) short[] sarray = content.array();
MappeableArrayContainer.java,short[] sarray = answer.content.array();,if (answer != null ) short[] sarray = answer.content.array();
MappeableArrayContainer.java,short[] c = content.array();,if (content != null ) short[] c = content.array();
MappeableArrayContainer.java,short[] t = this.content.array();,if (this != null ) short[] t = this.content.array();
MappeableArrayContainer.java,short[] sr = srb.content.array();,if (srb != null ) short[] sr = srb.content.array();
MappeableArrayContainer.java,short[] c = this.content.array();,if (this != null ) short[] c = this.content.array();
MappeableArrayContainer.java,short[] sarray = content.array();,if (content != null ) short[] sarray = content.array();
MappeableArrayContainer.java,short[] destinationarray = destination.array();,if (destination != null ) short[] destinationarray = destination.array();
MappeableArrayContainer.java,short[] contentarray = content.array();,if (content != null ) short[] contentarray = content.array();
MappeableArrayContainer.java,short[] c = this.content.array();,if (this != null ) short[] c = this.content.array();
MappeableArrayContainer.java,short[] sarray = content.array();,if (content != null ) short[] sarray = content.array();
MappeableArrayContainer.java,assert outPos == buffer.limit();,if (buffer != null ) assert outPos == buffer.limit();
MappeableArrayContainer.java,short[] sarray = answer.content.array();,if (answer != null ) short[] sarray = answer.content.array();
MappeableArrayContainer.java,short[] c = content.array();,if (content != null ) short[] c = content.array();
MappeableArrayContainer.java,short[] sarray = this.content.array();,if (this != null ) short[] sarray = this.content.array();
MappeableArrayContainer.java,short[] sarray = this.content.array();,if (this != null ) short[] sarray = this.content.array();
MappeableArrayContainer.java,short[] x = co.array();,if (co != null ) short[] x = co.array();
MappeableArrayContainer.java,short[] a = content.array();,if (content != null ) short[] a = content.array();
MappeableArrayContainer.java,ShortBuffer target = buffer.asShortBuffer();,if (buffer != null ) ShortBuffer target = buffer.asShortBuffer();
MappeableArrayContainer.java,ShortBuffer source = content.duplicate();,if (content != null ) ShortBuffer source = content.duplicate();
MappeableArrayContainer.java,short[] a = content.array();,if (content != null ) short[] a = content.array();
MappeableArrayContainer.java,short[] sarray = this.content.array();,if (this != null ) short[] sarray = this.content.array();
MappeableArrayContainer.java,short[] c = content.array();,if (content != null ) short[] c = content.array();
MappeableBitmapContainer.java,short[] sarray = answer.content.array();,if (answer != null ) short[] sarray = answer.content.array();
MappeableBitmapContainer.java,final ShortIterator si = MappeableBitmapContainer.this.getShortIterator();,if (MappeableBitmapContainer != null ) final ShortIterator si = MappeableBitmapContainer.this.getShortIterator();
MappeableBitmapContainer.java,short[] cont = ac.content.array();,if (ac != null ) short[] cont = ac.content.array();
MappeableBitmapContainer.java,short[] ac = arrayContainer.content.array();,if (arrayContainer != null ) short[] ac = arrayContainer.content.array();
MappeableBitmapContainer.java,final ShortIterator i = this.getShortIterator();,if (this != null ) final ShortIterator i = this.getShortIterator();
MappeableRunContainer.java,ShortBuffer tmp = valueslength.duplicate();// for thread safety,if (safety != null ) ShortBuffer tmp = valueslength.duplicate();// for thread safety
MappeableRunContainer.java,short[] vl = valueslength.array();,if (valueslength != null ) short[] vl = valueslength.array();
MappeableRunContainer.java,short[] a = arr.content.array();,if (arr != null ) short[] a = arr.content.array();
MappeableRunContainer.java,short[] vl = valueslength.array();,if (valueslength != null ) short[] vl = valueslength.array();
MappeableRunContainer.java,this.valueslength = bc.toShortBuffer();,if (bc != null ) this.valueslength = bc.toShortBuffer();
MappeableRunContainer.java,short[] vl = answer.valueslength.array();,if (answer != null ) short[] vl = answer.valueslength.array();
MappeableRunContainer.java,short[] vl = answer.valueslength.array();,if (answer != null ) short[] vl = answer.valueslength.array();
MappeableRunContainer.java,ShortIterator me = this.getShortIterator();,if (this != null ) ShortIterator me = this.getShortIterator();
MappeableRunContainer.java,short[] vl = valueslength.array();,if (valueslength != null ) short[] vl = valueslength.array();
MappeableRunContainer.java,short[] vl = valueslength.array();,if (valueslength != null ) short[] vl = valueslength.array();
MappeableRunContainer.java,short[] vl = this.valueslength.array();,if (this != null ) short[] vl = this.valueslength.array();
MappeableRunContainer.java,short[] vl = this.valueslength.array();,if (this != null ) short[] vl = this.valueslength.array();
MappeableRunContainer.java,short[] vl = this.valueslength.array();,if (this != null ) short[] vl = this.valueslength.array();
MappeableRunContainer.java,short[] vl = answer.valueslength.array();,if (answer != null ) short[] vl = answer.valueslength.array();
MappeableRunContainer.java,short[] vl = answer.valueslength.array();,if (answer != null ) short[] vl = answer.valueslength.array();
MappeableRunContainer.java,short[] vl = answer.valueslength.array();,if (answer != null ) short[] vl = answer.valueslength.array();
MappeableRunContainer.java,short[] vl = ans.valueslength.array();,if (ans != null ) short[] vl = ans.valueslength.array();
MappeableRunContainer.java,short[] myVl = valueslength.array();,if (valueslength != null ) short[] myVl = valueslength.array();
MappeableRunContainer.java,short[] vl = answer.valueslength.array();,if (answer != null ) short[] vl = answer.valueslength.array();
MappeableRunContainer.java,short[] ba = answer.content.array();,if (answer != null ) short[] ba = answer.content.array();
MappeableRunContainer.java,short[] a = co.array();,if (co != null ) short[] a = co.array();
MappeableRunContainer.java,ShortBuffer source = valueslength.duplicate();,if (valueslength != null ) ShortBuffer source = valueslength.duplicate();
MappeableRunContainer.java,ShortBuffer target = buffer.asShortBuffer();,if (buffer != null ) ShortBuffer target = buffer.asShortBuffer();
MappeableRunContainer.java,short[] vl = answer.valueslength.array();,if (answer != null ) short[] vl = answer.valueslength.array();
MutableRoaringArray.java,keys[k] = Short.reverseBytes(in.readShort());,if (Short != null ) keys[k] = Short.reverseBytes(in.readShort());
MutableRoaringArray.java,keys[k] = buffer.getShort();,if (buffer != null ) keys[k] = buffer.getShort();
MutableRoaringArray.java,int nbrruns = toIntUnsigned(buffer.getShort());,if (toIntUnsigned(buffer != null ) int nbrruns = toIntUnsigned(buffer.getShort());
TestArrayContainer.java,PeekableShortIterator iterator = res.getShortIterator();,if (res != null ) PeekableShortIterator iterator = res.getShortIterator();
TestArrayContainer.java,PeekableShortIterator iterator = res.getShortIterator();,if (res != null ) PeekableShortIterator iterator = res.getShortIterator();
TestArrayContainer.java,PeekableShortIterator iterator = res.getShortIterator();,if (res != null ) PeekableShortIterator iterator = res.getShortIterator();
TestBitmapContainer.java,PeekableShortIterator iterator = res.getShortIterator();,if (res != null ) PeekableShortIterator iterator = res.getShortIterator();
TestBitmapContainer.java,PeekableShortIterator iterator = res.getShortIterator();,if (res != null ) PeekableShortIterator iterator = res.getShortIterator();
TestBitmapContainer.java,PeekableShortIterator iterator = res.getShortIterator();,if (res != null ) PeekableShortIterator iterator = res.getShortIterator();
TestRankIteratorsOfContainers.java,short bit = iterator.peekNext();,if (iterator != null ) short bit = iterator.peekNext();
TestRankIteratorsOfContainers.java,short bit = iterator.peekNext();,if (iterator != null ) short bit = iterator.peekNext();
TestRankIteratorsOfContainers.java,PeekableShortRankIterator iterator = container.getShortRankIterator();,if (container != null ) PeekableShortRankIterator iterator = container.getShortRankIterator();
TestRunContainer.java,PeekableShortIterator iterator = res.getShortIterator();,if (res != null ) PeekableShortIterator iterator = res.getShortIterator();
TestRunContainer.java,PeekableShortIterator iterator = res.getShortIterator();,if (res != null ) PeekableShortIterator iterator = res.getShortIterator();
TestRunContainer.java,PeekableShortIterator iterator = res.getShortIterator();,if (res != null ) PeekableShortIterator iterator = res.getShortIterator();
TestMappeableBitmapContainerCharIterator.java,PeekableShortIterator tmbcClone = tmbc.clone();,if (tmbc != null ) PeekableShortIterator tmbcClone = tmbc.clone();
TestReverseMappeableRunContainer.java,ShortIterator rmrClone = rmr.clone();,if (rmr != null ) ShortIterator rmrClone = rmr.clone();
TestUtil.java,ShortBuffer slice = sb.slice();,if (sb != null ) ShortBuffer slice = sb.slice();
BitmapIteratorBenchmark.java,PeekableShortIterator it = container.getShortIterator();,if (container != null ) PeekableShortIterator it = container.getShortIterator();
BitmapIteratorBenchmark.java,ShortIterator it = container.getReverseShortIterator();,if (container != null ) ShortIterator it = container.getReverseShortIterator();
BitmapIteratorBenchmark.java,PeekableShortIterator it = bufferContainer.getShortIterator();,if (bufferContainer != null ) PeekableShortIterator it = bufferContainer.getShortIterator();
BitmapIteratorBenchmark.java,ShortIterator it = bufferContainer.getReverseShortIterator();,if (bufferContainer != null ) ShortIterator it = bufferContainer.getReverseShortIterator();
ImmutableRoaringBitmap.java,int len = highLowContainer.size();,if (highLowContainer != null ) int len = highLowContainer.size();
RoaringBatchIterator.java,iterator = highLowContainer.getContainerAtIndex(index).getBatchIterator();,if (highLowContainer != null ) iterator = highLowContainer.getContainerAtIndex(index).getBatchIterator();
RoaringBatchIterator.java,iterator = containerPointer.getContainer().getBatchIterator();,if (containerPointer != null ) iterator = containerPointer.getContainer().getBatchIterator();
ArrayContainer.java,BitmapContainer a = this.toBitmapContainer();,if (this != null ) BitmapContainer a = this.toBitmapContainer();
MappeableArrayContainer.java,final MappeableBitmapContainer a = this.toBitmapContainer();,if (this != null ) final MappeableBitmapContainer a = this.toBitmapContainer();
SerializeToByteBufferExample.java,"len = Math.min(len, buf.remaining());","if (buf != null ) len = Math.min(len, buf.remaining());"
SerializeToStringExample.java,"len = Math.min(len, buf.remaining());","if (buf != null ) len = Math.min(len, buf.remaining());"
TestSerializationViaByteBuffer.java,this.serialised = bos.toByteArray();,if (bos != null ) this.serialised = bos.toByteArray();
TestRoaringBitmap.java,final ByteArrayInputStream bis = new ByteArrayInputStream(bos.toByteArray());,if (ByteArrayInputStream(bos != null ) final ByteArrayInputStream bis = new ByteArrayInputStream(bos.toByteArray());
TestRoaringBitmap.java,final ByteArrayInputStream bis = new ByteArrayInputStream(bos.toByteArray());,if (ByteArrayInputStream(bos != null ) final ByteArrayInputStream bis = new ByteArrayInputStream(bos.toByteArray());
ArrayContainer.java,this.cardinality = bc.getCardinality();,if (bc != null ) this.cardinality = bc.getCardinality();
ArrayContainer.java,this.content = bc.toShortArray();,if (bc != null ) this.content = bc.toShortArray();
ArrayContainer.java,BitmapContainer a = this.toBitmapContainer();,if (this != null ) BitmapContainer a = this.toBitmapContainer();
ArrayContainer.java,BitmapContainer a = this.toBitmapContainer();,if (this != null ) BitmapContainer a = this.toBitmapContainer();
ArrayContainer.java,BitmapContainer a = this.toBitmapContainer();,if (this != null ) BitmapContainer a = this.toBitmapContainer();
ArrayContainer.java,BitmapContainer a = this.toBitmapContainer();,if (this != null ) BitmapContainer a = this.toBitmapContainer();
BitmapContainer.java,this.cardinality = bc.getCardinality();,if (bc != null ) this.cardinality = bc.getCardinality();
BitmapContainer.java,this.bitmap = bc.toLongArray();,if (bc != null ) this.bitmap = bc.toLongArray();
BitmapContainer.java,BitmapContainer answer = this.clone();,if (this != null ) BitmapContainer answer = this.clone();
BitmapContainer.java,final int runCardinality = runContainer.getCardinality();,if (runContainer != null ) final int runCardinality = runContainer.getCardinality();
BitmapContainer.java,long w = Long.reverseBytes(in.readLong());,if (Long != null ) long w = Long.reverseBytes(in.readLong());
BitmapContainer.java,final ShortIterator si = BitmapContainer.this.getShortIterator();,if (BitmapContainer != null ) final ShortIterator si = BitmapContainer.this.getShortIterator();
BitmapContainer.java,BitmapContainer answer = this.clone();,if (this != null ) BitmapContainer answer = this.clone();
BitmapContainer.java,final ShortIterator i = this.getShortIterator();,if (this != null ) final ShortIterator i = this.getShortIterator();
RoaringBitmap.java,RoaringIntIterator x = (RoaringIntIterator) super.clone();,if (super != null ) RoaringIntIterator x = (RoaringIntIterator) super.clone();
RoaringBitmap.java,x.iter = this.iter.clone();,if (this != null ) x.iter = this.iter.clone();
RoaringBitmap.java,RoaringReverseIntIterator clone = (RoaringReverseIntIterator) super.clone();,if (super != null ) RoaringReverseIntIterator clone = (RoaringReverseIntIterator) super.clone();
RoaringBitmap.java,clone.iter = this.iter.clone();,if (this != null ) clone.iter = this.iter.clone();
RoaringBitmap.java,MappeableContainerPointer cp = rb.getContainerPointer();,if (rb != null ) MappeableContainerPointer cp = rb.getContainerPointer();
RoaringBitmap.java,final RoaringBitmap x = (RoaringBitmap) super.clone();,if (super != null ) final RoaringBitmap x = (RoaringBitmap) super.clone();
RoaringBitmap.java,x.highLowContainer = highLowContainer.clone();,if (highLowContainer != null ) x.highLowContainer = highLowContainer.clone();
RoaringBitmap.java,budget -= left.getCardinality();,if (left != null ) budget -= left.getCardinality();
RoaringBitmap.java,budget -= right.getCardinality();,if (right != null ) budget -= right.getCardinality();
RoaringBitmap.java,budget -= container.getCardinality();,if (container != null ) budget -= container.getCardinality();
RoaringBitmap.java,budget -= container.getCardinality();,if (container != null ) budget -= container.getCardinality();
RoaringBitmap.java,RoaringBitmap next = bitmaps.next();,if (bitmaps != null ) RoaringBitmap next = bitmaps.next();
RoaringBitmap.java,final IntIterator i = this.getIntIterator();,if (this != null ) final IntIterator i = this.getIntIterator();
BufferFastAggregation.java,MappeableContainerPointer x = bitmaps[k].highLowContainer.getContainerPointer();,if (bitmaps[k] != null ) MappeableContainerPointer x = bitmaps[k].highLowContainer.getContainerPointer();
BufferFastAggregation.java,MappeableContainerPointer x = pq.poll();,if (pq != null ) MappeableContainerPointer x = pq.poll();
BufferFastAggregation.java,newc = newc.lazyIOR(x.getContainer());,if (newc != null ) newc = newc.lazyIOR(x.getContainer());
BufferFastAggregation.java,newc = newc.repairAfterLazy();,if (newc != null ) newc = newc.repairAfterLazy();
BufferFastAggregation.java,MappeableContainerPointer x = bitmaps[k].highLowContainer.getContainerPointer();,if (bitmaps[k] != null ) MappeableContainerPointer x = bitmaps[k].highLowContainer.getContainerPointer();
BufferFastAggregation.java,MappeableContainerPointer x = pq.poll();,if (pq != null ) MappeableContainerPointer x = pq.poll();
BufferFastAggregation.java,newc = newc.ixor(x.getContainer());,if (newc != null ) newc = newc.ixor(x.getContainer());
BufferFastAggregation.java,sizes[k] = buffer[k].serializedSizeInBytes();,if (buffer[k] != null ) sizes[k] = buffer[k].serializedSizeInBytes();
BufferFastAggregation.java,sizes[k] = buffer.get(k).getLongSizeInBytes();,if (buffer != null ) sizes[k] = buffer.get(k).getLongSizeInBytes();
MappeableArrayContainer.java,this.cardinality = bc.getCardinality();,if (bc != null ) this.cardinality = bc.getCardinality();
MappeableArrayContainer.java,this.content = bc.toShortBuffer();,if (bc != null ) this.content = bc.toShortBuffer();
MappeableArrayContainer.java,short[] sarray = content.array();,if (content != null ) short[] sarray = content.array();
MappeableArrayContainer.java,ShortBuffer tmp = newContent.duplicate();// for thread-safety,if (thread-safety != null ) ShortBuffer tmp = newContent.duplicate();// for thread-safety
MappeableArrayContainer.java,MappeableBitmapContainer a = this.toBitmapContainer();,if (this != null ) MappeableBitmapContainer a = this.toBitmapContainer();
MappeableArrayContainer.java,short[] answerarray = answer.content.array();,if (answer != null ) short[] answerarray = answer.content.array();
MappeableArrayContainer.java,short[] sarray = content.array();,if (content != null ) short[] sarray = content.array();
MappeableArrayContainer.java,final MappeableBitmapContainer a = this.toBitmapContainer();,if (this != null ) final MappeableBitmapContainer a = this.toBitmapContainer();
MappeableArrayContainer.java,sarray = content.array();,if (content != null ) sarray = content.array();
MappeableArrayContainer.java,final MappeableBitmapContainer a = this.toBitmapContainer();,if (this != null ) final MappeableBitmapContainer a = this.toBitmapContainer();
MappeableArrayContainer.java,final MappeableArrayContainer answer = new MappeableArrayContainer(content.limit());,if (MappeableArrayContainer(content != null ) final MappeableArrayContainer answer = new MappeableArrayContainer(content.limit());
MappeableArrayContainer.java,short[] sarray = answer.content.array();,if (answer != null ) short[] sarray = answer.content.array();
MappeableArrayContainer.java,short[] c = content.array();,if (content != null ) short[] c = content.array();
MappeableArrayContainer.java,short[] t = this.content.array();,if (this != null ) short[] t = this.content.array();
MappeableArrayContainer.java,short[] sr = srb.content.array();,if (srb != null ) short[] sr = srb.content.array();
MappeableArrayContainer.java,short[] c = this.content.array();,if (this != null ) short[] c = this.content.array();
MappeableArrayContainer.java,short[] sarray = content.array();,if (content != null ) short[] sarray = content.array();
MappeableArrayContainer.java,MappeableBitmapContainer a = this.toBitmapContainer();,if (this != null ) MappeableBitmapContainer a = this.toBitmapContainer();
MappeableArrayContainer.java,sarray = content.array();,if (content != null ) sarray = content.array();
MappeableArrayContainer.java,MappeableBitmapContainer a = this.toBitmapContainer();,if (this != null ) MappeableBitmapContainer a = this.toBitmapContainer();
MappeableArrayContainer.java,MappeableBitmapContainer a = this.toBitmapContainer();,if (this != null ) MappeableBitmapContainer a = this.toBitmapContainer();
MappeableArrayContainer.java,short[] destinationarray = destination.array();,if (destination != null ) short[] destinationarray = destination.array();
MappeableArrayContainer.java,short[] contentarray = content.array();,if (content != null ) short[] contentarray = content.array();
MappeableArrayContainer.java,short[] c = this.content.array();,if (this != null ) short[] c = this.content.array();
MappeableArrayContainer.java,int len = this.content.limit();,if (this != null ) int len = this.content.limit();
MappeableArrayContainer.java,int len = this.content.limit();,if (this != null ) int len = this.content.limit();
MappeableArrayContainer.java,long[] bitArray = bc.bitmap.array();,if (bc != null ) long[] bitArray = bc.bitmap.array();
MappeableArrayContainer.java,short[] sarray = content.array();,if (content != null ) short[] sarray = content.array();
MappeableArrayContainer.java,int len = bc.bitmap.limit();,if (bc != null ) int len = bc.bitmap.limit();
MappeableArrayContainer.java,assert outPos == buffer.limit();,if (buffer != null ) assert outPos == buffer.limit();
MappeableArrayContainer.java,int len = buffer.limit();,if (buffer != null ) int len = buffer.limit();
MappeableArrayContainer.java,short[] sarray = answer.content.array();,if (answer != null ) short[] sarray = answer.content.array();
MappeableArrayContainer.java,short[] c = content.array();,if (content != null ) short[] c = content.array();
MappeableArrayContainer.java,long[] bitArray = bc.bitmap.array();,if (bc != null ) long[] bitArray = bc.bitmap.array();
MappeableArrayContainer.java,short[] sarray = this.content.array();,if (this != null ) short[] sarray = this.content.array();
MappeableArrayContainer.java,int len = bc.bitmap.limit();,if (bc != null ) int len = bc.bitmap.limit();
MappeableArrayContainer.java,long[] bitArray = bc.bitmap.array();,if (bc != null ) long[] bitArray = bc.bitmap.array();
MappeableArrayContainer.java,short[] sarray = this.content.array();,if (this != null ) short[] sarray = this.content.array();
MappeableArrayContainer.java,short[] x = co.array();,if (co != null ) short[] x = co.array();
MappeableArrayContainer.java,short[] a = content.array();,if (content != null ) short[] a = content.array();
MappeableArrayContainer.java,short[] a = content.array();,if (content != null ) short[] a = content.array();
MappeableArrayContainer.java,long[] bitArray = bc.bitmap.array();,if (bc != null ) long[] bitArray = bc.bitmap.array();
MappeableArrayContainer.java,short[] sarray = this.content.array();,if (this != null ) short[] sarray = this.content.array();
MappeableArrayContainer.java,int len = bc.bitmap.limit();,if (bc != null ) int len = bc.bitmap.limit();
MappeableArrayContainer.java,short[] c = content.array();,if (content != null ) short[] c = content.array();
MappeableArrayContainer.java,content = p.content.array();,if (p != null ) content = p.content.array();
MappeableArrayContainer.java,content = p.content.array();,if (p != null ) content = p.content.array();
MappeableBitmapContainer.java,this.cardinality = bc.getCardinality();,if (bc != null ) this.cardinality = bc.getCardinality();
MappeableBitmapContainer.java,this.bitmap = bc.toLongBuffer();,if (bc != null ) this.bitmap = bc.toLongBuffer();
MappeableBitmapContainer.java,LongBuffer tmp = newBitmap.duplicate(); // for thread safety,if (safety != null ) LongBuffer tmp = newBitmap.duplicate(); // for thread safety
MappeableBitmapContainer.java,this.bitmap = LongBuffer.allocate(tmp.limit());,if (LongBuffer != null ) this.bitmap = LongBuffer.allocate(tmp.limit());
MappeableBitmapContainer.java,short[] sarray = answer.content.array();,if (answer != null ) short[] sarray = answer.content.array();
MappeableBitmapContainer.java,long[] tb = this.bitmap.array();,if (this != null ) long[] tb = this.bitmap.array();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,long[] bitArray = answer.bitmap.array();,if (answer != null ) long[] bitArray = answer.bitmap.array();
MappeableBitmapContainer.java,long[] tb = this.bitmap.array();,if (this != null ) long[] tb = this.bitmap.array();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,long[] bitArray = answer.bitmap.array();,if (answer != null ) long[] bitArray = answer.bitmap.array();
MappeableBitmapContainer.java,long[] b = this.bitmap.array();,if (this != null ) long[] b = this.bitmap.array();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,long[] bitArray = answer.bitmap.array();,if (answer != null ) long[] bitArray = answer.bitmap.array();
MappeableBitmapContainer.java,long[] b = this.bitmap.array();,if (this != null ) long[] b = this.bitmap.array();
MappeableBitmapContainer.java,int len = answer.bitmap.limit();,if (answer != null ) int len = answer.bitmap.limit();
MappeableBitmapContainer.java,int len = answer.bitmap.limit();,if (answer != null ) int len = answer.bitmap.limit();
MappeableBitmapContainer.java,MappeableBitmapContainer answer = this.clone();,if (this != null ) MappeableBitmapContainer answer = this.clone();
MappeableBitmapContainer.java,long[] b = answer.bitmap.array();,if (answer != null ) long[] b = answer.bitmap.array();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,long[] b = this.bitmap.array();,if (this != null ) long[] b = this.bitmap.array();
MappeableBitmapContainer.java,int m = this.bitmap.limit();,if (this != null ) int m = this.bitmap.limit();
MappeableBitmapContainer.java,long[] b = this.bitmap.array();,if (this != null ) long[] b = this.bitmap.array();
MappeableBitmapContainer.java,long[] s = srb.bitmap.array();,if (srb != null ) long[] s = srb.bitmap.array();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,long[] b = bitmap.array();,if (bitmap != null ) long[] b = bitmap.array();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,long[] b = bitmap.array();,if (bitmap != null ) long[] b = bitmap.array();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,long[] tb = this.bitmap.array();,if (this != null ) long[] tb = this.bitmap.array();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,long[] b = this.bitmap.array();,if (this != null ) long[] b = this.bitmap.array();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,long[] b = this.bitmap.array();,if (this != null ) long[] b = this.bitmap.array();
MappeableBitmapContainer.java,long[] b = this.bitmap.array();,if (this != null ) long[] b = this.bitmap.array();
MappeableBitmapContainer.java,long[] b = this.bitmap.array();,if (this != null ) long[] b = this.bitmap.array();
MappeableBitmapContainer.java,final int m = this.bitmap.limit();,if (this != null ) final int m = this.bitmap.limit();
MappeableBitmapContainer.java,long[] tb = this.bitmap.array();,if (this != null ) long[] tb = this.bitmap.array();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,long[] b = this.bitmap.array();,if (this != null ) long[] b = this.bitmap.array();
MappeableBitmapContainer.java,long[] b = this.bitmap.array();,if (this != null ) long[] b = this.bitmap.array();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,long[] b = this.bitmap.array();,if (this != null ) long[] b = this.bitmap.array();
MappeableBitmapContainer.java,final ShortIterator si = MappeableBitmapContainer.this.getShortIterator();,if (MappeableBitmapContainer != null ) final ShortIterator si = MappeableBitmapContainer.this.getShortIterator();
MappeableBitmapContainer.java,long[] b = bitmap.array();,if (bitmap != null ) long[] b = bitmap.array();
MappeableBitmapContainer.java,long[] b = bitmap.array();,if (bitmap != null ) long[] b = bitmap.array();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,long[] b = this.bitmap.array();,if (this != null ) long[] b = this.bitmap.array();
MappeableBitmapContainer.java,long[] b = answer.bitmap.array();,if (answer != null ) long[] b = answer.bitmap.array();
MappeableBitmapContainer.java,long[] b = answer.bitmap.array();,if (answer != null ) long[] b = answer.bitmap.array();
MappeableBitmapContainer.java,long[] b = bc.bitmap.array();,if (bc != null ) long[] b = bc.bitmap.array();
MappeableBitmapContainer.java,short[] cont = ac.content.array();,if (ac != null ) short[] cont = ac.content.array();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,long[] bitArray = bitmap.array();,if (bitmap != null ) long[] bitArray = bitmap.array();
MappeableBitmapContainer.java,long[] b = bitmap.array();,if (bitmap != null ) long[] b = bitmap.array();
MappeableBitmapContainer.java,short[] ac = arrayContainer.content.array();,if (arrayContainer != null ) short[] ac = arrayContainer.content.array();
MappeableBitmapContainer.java,long[] src = this.bitmap.array();,if (this != null ) long[] src = this.bitmap.array();
MappeableBitmapContainer.java,int len = bitmap.limit();,if (bitmap != null ) int len = bitmap.limit();
MappeableBitmapContainer.java,long[] b = bitmap.array();,if (bitmap != null ) long[] b = bitmap.array();
MappeableBitmapContainer.java,int len = bitmap.limit();,if (bitmap != null ) int len = bitmap.limit();
MappeableBitmapContainer.java,long[] b = bitmap.array();,if (bitmap != null ) long[] b = bitmap.array();
MappeableBitmapContainer.java,int len = bitmap.limit();,if (bitmap != null ) int len = bitmap.limit();
MappeableBitmapContainer.java,long[] bitArray = answer.bitmap.array();,if (answer != null ) long[] bitArray = answer.bitmap.array();
MappeableBitmapContainer.java,long[] ab = answer.bitmap.array();,if (answer != null ) long[] ab = answer.bitmap.array();
MappeableBitmapContainer.java,long[] b = this.bitmap.array();,if (this != null ) long[] b = this.bitmap.array();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,long[] b = this.bitmap.array();,if (this != null ) long[] b = this.bitmap.array();
MappeableBitmapContainer.java,long w = Long.reverseBytes(in.readLong());,if (Long != null ) long w = Long.reverseBytes(in.readLong());
MappeableBitmapContainer.java,long w = Long.reverseBytes(in.readLong());,if (Long != null ) long w = Long.reverseBytes(in.readLong());
MappeableBitmapContainer.java,long[] b = this.bitmap.array();,if (this != null ) long[] b = this.bitmap.array();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,final ShortIterator i = this.getShortIterator();,if (this != null ) final ShortIterator i = this.getShortIterator();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,long[] b = bitmap.array();,if (bitmap != null ) long[] b = bitmap.array();
MappeableBitmapContainer.java,long[] bitArray = answer.bitmap.array();,if (answer != null ) long[] bitArray = answer.bitmap.array();
MappeableBitmapContainer.java,long[] b = this.bitmap.array();,if (this != null ) long[] b = this.bitmap.array();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,long[] bitArray = answer.bitmap.array();,if (answer != null ) long[] bitArray = answer.bitmap.array();
MappeableBitmapContainer.java,long[] b = this.bitmap.array();,if (this != null ) long[] b = this.bitmap.array();
MappeableBitmapContainer.java,int len = answer.bitmap.limit();,if (answer != null ) int len = answer.bitmap.limit();
MappeableBitmapContainer.java,int len = answer.bitmap.limit();,if (answer != null ) int len = answer.bitmap.limit();
MappeableBitmapContainer.java,long[] b = bitmap.array();,if (bitmap != null ) long[] b = bitmap.array();
MappeableBitmapContainer.java,int l = bitmap.limit();,if (bitmap != null ) int l = bitmap.limit();
MappeableBitmapContainer.java,final int size = this.bitmap.limit();,if (this != null ) final int size = this.bitmap.limit();
MappeableBitmapContainer.java,long[] array = bitmap.array();,if (bitmap != null ) long[] array = bitmap.array();
MappeableBitmapContainer.java,i = bitmap.position();,if (bitmap != null ) i = bitmap.position();
MappeableBitmapContainer.java,long[] array = this.bitmap.array();,if (this != null ) long[] array = this.bitmap.array();
MappeableBitmapContainer.java,final int runCardinality = runContainer.getCardinality();,if (runContainer != null ) final int runCardinality = runContainer.getCardinality();
MutableRoaringBitmap.java,ContainerPointer cp = rb.getContainerPointer();,if (rb != null ) ContainerPointer cp = rb.getContainerPointer();
MutableRoaringBitmap.java,final MutableRoaringBitmap x = (MutableRoaringBitmap) super.clone();,if (super != null ) final MutableRoaringBitmap x = (MutableRoaringBitmap) super.clone();
MutableRoaringBitmap.java,x.highLowContainer = highLowContainer.clone();,if (highLowContainer != null ) x.highLowContainer = highLowContainer.clone();
FastRankRoaringBitmap.java,int iterRank = Util.toIntUnsigned(iter.peekNextRank());,if (Util != null ) int iterRank = Util.toIntUnsigned(iter.peekNextRank());
TestRankIteratorsOfContainers.java,short rank = iterator.peekNextRank();,if (iterator != null ) short rank = iterator.peekNextRank();
TestRankIteratorsOfContainers.java,short rank = iterator.peekNextRank();,if (iterator != null ) short rank = iterator.peekNextRank();
TestRankIteratorsOfContainers.java,short rank = iterator.peekNextRank();,if (iterator != null ) short rank = iterator.peekNextRank();
RandomisedTestData.java,double rleLimit = ThreadLocalRandom.current().nextDouble();,if (ThreadLocalRandom != null ) double rleLimit = ThreadLocalRandom.current().nextDouble();
RandomisedTestData.java,double rleLimit = ThreadLocalRandom.current().nextDouble();,if (ThreadLocalRandom != null ) double rleLimit = ThreadLocalRandom.current().nextDouble();
WriteSequential.java,OrderedWriter writer = scenario.newWriter();,if (scenario != null ) OrderedWriter writer = scenario.newWriter();
RandomisedTestData.java,RoaringBitmap bitmap = writer.getUnderlying();,if (writer != null ) RoaringBitmap bitmap = writer.getUnderlying();
TestImmutableRoaringBitmap.java,MutableRoaringBitmap bitmap = writer.getUnderlying().toMutableRoaringBitmap();,if (writer != null ) MutableRoaringBitmap bitmap = writer.getUnderlying().toMutableRoaringBitmap();
RoaringBitmap.java,RoaringBitmap next = (RoaringBitmap) bitmaps.next();,if (bitmaps != null ) RoaringBitmap next = (RoaringBitmap) bitmaps.next();
ImmutableRoaringBitmap.java,ImmutableRoaringBitmap next = (ImmutableRoaringBitmap) bitmaps.next();,if (bitmaps != null ) ImmutableRoaringBitmap next = (ImmutableRoaringBitmap) bitmaps.next();
TestRankIterator.java,long end = System.nanoTime();,if (System != null ) long end = System.nanoTime();
AdversarialMemoryUsage.java,long thiscard = basic.getLongCardinality();,if (basic != null ) long thiscard = basic.getLongCardinality();
AdversarialMemoryUsage.java,estimated += basic.getLongSizeInBytes();,if (basic != null ) estimated += basic.getLongSizeInBytes();
AdversarialMemoryUsage.java,estimatedopti += basic.getLongSizeInBytes();,if (basic != null ) estimatedopti += basic.getLongSizeInBytes();
AdversarialMemoryUsage.java,long thiscard = basic.getLongCardinality();,if (basic != null ) long thiscard = basic.getLongCardinality();
AdversarialMemoryUsage.java,estimated += basic.getLongSizeInBytes();,if (basic != null ) estimated += basic.getLongSizeInBytes();
AdversarialMemoryUsage.java,estimatedopti += basic.getLongSizeInBytes();,if (basic != null ) estimatedopti += basic.getLongSizeInBytes();
RealDataDetailedBenchmark.java,ContainerPointer cp = rb.getContainerPointer();,if (rb != null ) ContainerPointer cp = rb.getContainerPointer();
RealDataDetailedBenchmark.java,ContainerPointer cp = rb.getContainerPointer();,if (rb != null ) ContainerPointer cp = rb.getContainerPointer();
RealDataDetailedBenchmark.java,ContainerPointer cp = rb.getContainerPointer();,if (rb != null ) ContainerPointer cp = rb.getContainerPointer();
RealDataDetailedBenchmark.java,RoaringBitmap opti = basic.clone();,if (basic != null ) RoaringBitmap opti = basic.clone();
RealDataDetailedBenchmark.java,NumberFormat percentFormat = NumberFormat.getPercentInstance();,if (NumberFormat != null ) NumberFormat percentFormat = NumberFormat.getPercentInstance();
IterationAllocationsTest.java,result += intIterator.next();,if (intIterator != null ) result += intIterator.next();
IterationAllocationsTest.java,result += intIterator.next();,if (intIterator != null ) result += intIterator.next();
IterationAllocationsTest.java,result += intIterator.next();,if (intIterator != null ) result += intIterator.next();
IterationAllocationsTest.java,next = Math.abs(source.nextInt());,if (Math != null ) next = Math.abs(source.nextInt());
AdaptiveOrderedWriter.java,denseWriter = sparseWriter.transfer();,if (sparseWriter != null ) denseWriter = sparseWriter.transfer();
SparseOrderedWriter.java,container = new ArrayContainer(values).runOptimize();,if (ArrayContainer(values) != null ) container = new ArrayContainer(values).runOptimize();
SparseOrderedWriterTest.java,DenseOrderedWriter denseOrderedWriter = sparseOrderedWriter.transfer();,if (sparseOrderedWriter != null ) DenseOrderedWriter denseOrderedWriter = sparseOrderedWriter.transfer();
SparseOrderedWriterTest.java,int[] result = denseOrderedWriter.getUnderlying().toArray();,if (denseOrderedWriter != null ) int[] result = denseOrderedWriter.getUnderlying().toArray();
MappeableBitmapContainer.java,long[] b = answer.bitmap.array();,if (answer != null ) long[] b = answer.bitmap.array();
MappeableBitmapContainer.java,long[] b = bc.bitmap.array();,if (bc != null ) long[] b = bc.bitmap.array();
RandomData.java,double choice = ThreadLocalRandom.current().nextDouble();,if (ThreadLocalRandom != null ) double choice = ThreadLocalRandom.current().nextDouble();
RandomisedTestData.java,double rleLimit = ThreadLocalRandom.current().nextDouble();,if (ThreadLocalRandom != null ) double rleLimit = ThreadLocalRandom.current().nextDouble();
MappeableArrayContainer.java,short[] contentarray = content.array();,if (content != null ) short[] contentarray = content.array();
Fuzzer.java,double rleLimit = ThreadLocalRandom.current().nextDouble();,if (ThreadLocalRandom != null ) double rleLimit = ThreadLocalRandom.current().nextDouble();
Fuzzer.java,double choice = ThreadLocalRandom.current().nextDouble();,if (ThreadLocalRandom != null ) double choice = ThreadLocalRandom.current().nextDouble();
Fuzzer.java,long[] bitset = bits.get();,if (bits != null ) long[] bitset = bits.get();
BufferFuzzer.java,double rleLimit = ThreadLocalRandom.current().nextDouble();,if (ThreadLocalRandom != null ) double rleLimit = ThreadLocalRandom.current().nextDouble();
BufferFuzzer.java,double choice = ThreadLocalRandom.current().nextDouble();,if (ThreadLocalRandom != null ) double choice = ThreadLocalRandom.current().nextDouble();
BufferFuzzer.java,long[] bitset = bits.get();,if (bits != null ) long[] bitset = bits.get();
RealDataDetailedBenchmark.java,ContainerPointer  cp = rb.getContainerPointer();,if (rb != null ) ContainerPointer  cp = rb.getContainerPointer();
RealDataDetailedBenchmark.java,ContainerPointer  cp = rb.getContainerPointer();,if (rb != null ) ContainerPointer  cp = rb.getContainerPointer();
RealDataDetailedBenchmark.java,ContainerPointer  cp = rb.getContainerPointer();,if (rb != null ) ContainerPointer  cp = rb.getContainerPointer();
RealDataDetailedBenchmark.java,RoaringBitmap opti = basic.clone();,if (basic != null ) RoaringBitmap opti = basic.clone();
RealDataDetailedBenchmark.java,NumberFormat percentFormat = NumberFormat.getPercentInstance();,if (NumberFormat != null ) NumberFormat percentFormat = NumberFormat.getPercentInstance();
BitmapFactory.java,long size = fos.getChannel().position();,if (fos != null ) long size = fos.getChannel().position();
BasicBenchmark.java,bogus += bitmapor.getCardinality();,if (bitmapor != null ) bogus += bitmapor.getCardinality();
BasicBenchmark.java,bogus += bitmapor.getCardinality();,if (bitmapor != null ) bogus += bitmapor.getCardinality();
BasicBenchmark.java,bogus += bitmapor.getCardinality();,if (bitmapor != null ) bogus += bitmapor.getCardinality();
BasicBenchmark.java,long totalcount = fos.getChannel().position();,if (fos != null ) long totalcount = fos.getChannel().position();
BitSetUtilBenchmark.java,final int wordSize = dos.readInt();,if (dos != null ) final int wordSize = dos.readInt();
BitSetUtilBenchmark.java,words[j] = dos.readLong();,if (dos != null ) words[j] = dos.readLong();
IteratorsBenchmark.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
IteratorsBenchmark.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
IteratorsBenchmark.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
IteratorsBenchmark.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
IteratorsBenchmark.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
IteratorsBenchmark.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
IteratorsBenchmark.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
IteratorsBenchmark.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
IteratorsBenchmark.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
IteratorsBenchmark.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
IteratorsBenchmark.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
IteratorsBenchmark.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
IteratorsBenchmark.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
IteratorsBenchmark.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
IteratorsBenchmark.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
IteratorsBenchmark.java,next = Math.abs(source.nextInt());,if (Math != null ) next = Math.abs(source.nextInt());
IteratorsBenchmark64.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
IteratorsBenchmark64.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
IteratorsBenchmark64.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
IteratorsBenchmark64.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
IteratorsBenchmark64.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
IteratorsBenchmark64.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
IteratorsBenchmark64.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
IteratorsBenchmark64.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
IteratorsBenchmark64.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
IteratorsBenchmark64.java,next = Math.abs(source.nextLong());,if (Math != null ) next = Math.abs(source.nextLong());
MapBenchmark.java,final BitSet altRes = new java.util.BitSet();,if (java != null ) final BitSet altRes = new java.util.BitSet();
RandomAccess.java,int lv =  bitmap.last();,if (bitmap != null ) int lv =  bitmap.last();
SlowMappedORaggregate1.java,MutableRoaringBitmap answer = ImmutableRoaringBitmap.or(benchmarkState.rc.iterator());,if (ImmutableRoaringBitmap != null ) MutableRoaringBitmap answer = ImmutableRoaringBitmap.or(benchmarkState.rc.iterator());
SlowMappedORaggregate1.java,final long totalcount = fos.getChannel().position();,if (fos != null ) final long totalcount = fos.getChannel().position();
SlowMappedORaggregate1.java,ArrayList<ImmutableRoaringBitmap> answer = new ArrayList<ImmutableRoaringBitmap>(source.size());,if (ArrayList<ImmutableRoaringBitmap>(source != null ) ArrayList<ImmutableRoaringBitmap> answer = new ArrayList<ImmutableRoaringBitmap>(source.size());
SlowMappedORaggregate1.java,final ByteBuffer bb = out.slice();,if (out != null ) final ByteBuffer bb = out.slice();
SlowMappedORaggregate1.java,MutableRoaringBitmap equiv = source.get(answer.size());,if (source != null ) MutableRoaringBitmap equiv = source.get(answer.size());
SlowMappedORaggregate2.java,MutableRoaringBitmap answer = ImmutableRoaringBitmap.or(benchmarkState.rc.iterator());,if (ImmutableRoaringBitmap != null ) MutableRoaringBitmap answer = ImmutableRoaringBitmap.or(benchmarkState.rc.iterator());
SlowMappedORaggregate2.java,final long totalcount = fos.getChannel().position();,if (fos != null ) final long totalcount = fos.getChannel().position();
SlowMappedORaggregate2.java,ArrayList<ImmutableRoaringBitmap> answer = new ArrayList<ImmutableRoaringBitmap>(source.size());,if (ArrayList<ImmutableRoaringBitmap>(source != null ) ArrayList<ImmutableRoaringBitmap> answer = new ArrayList<ImmutableRoaringBitmap>(source.size());
SlowMappedORaggregate2.java,final ByteBuffer bb = out.slice();,if (out != null ) final ByteBuffer bb = out.slice();
SlowMappedORaggregate2.java,MutableRoaringBitmap equiv = source.get(answer.size());,if (source != null ) MutableRoaringBitmap equiv = source.get(answer.size());
SlowORaggregate1.java,RoaringBitmap answer = RoaringBitmap.or(benchmarkState.rc.iterator());,if (RoaringBitmap != null ) RoaringBitmap answer = RoaringBitmap.or(benchmarkState.rc.iterator());
SlowORaggregate2.java,RoaringBitmap answer = RoaringBitmap.or(benchmarkState.rc.iterator());,if (RoaringBitmap != null ) RoaringBitmap answer = RoaringBitmap.or(benchmarkState.rc.iterator());
RealDataBenchmarkCardinality.java,total += bitmap.cardinality();,if (bitmap != null ) total += bitmap.cardinality();
RealDataBenchmarkIterate.java,BitmapIterator i = bitmap.iterator();,if (bitmap != null ) BitmapIterator i = bitmap.iterator();
RealDataBenchmarkReverseIterate.java,BitmapIterator i = bitmap.reverseIterator();,if (bitmap != null ) BitmapIterator i = bitmap.reverseIterator();
BitmapFactory.java,long size = fos.getChannel().position();,if (fos != null ) long size = fos.getChannel().position();
ConciseSetWrapper.java,bitmap = pq.poll();,if (pq != null ) bitmap = pq.poll();
Ewah32BitmapWrapper.java,int savedSize = bitmap.sizeInBits();,if (bitmap != null ) int savedSize = bitmap.sizeInBits();
EwahBitmapWrapper.java,int savedSize = bitmap.sizeInBits();,if (bitmap != null ) int savedSize = bitmap.sizeInBits();
EwahBitmapWrapper.java,temp = (EWAHCompressedBitmap) bitmap.clone();,if (bitmap != null ) temp = (EWAHCompressedBitmap) bitmap.clone();
ImmutableConciseSetWrapper.java,bitmap = pq.poll();,if (pq != null ) bitmap = pq.poll();
AllRunHorizontalOrBenchmark.java,ImmutableConciseSet base = ImmutableConciseSet.union(benchmarkState.icc.iterator());,if (ImmutableConciseSet != null ) ImmutableConciseSet base = ImmutableConciseSet.union(benchmarkState.icc.iterator());
AllRunHorizontalOrBenchmark.java,int answer = bitmapor.cardinality();,if (bitmapor != null ) int answer = bitmapor.cardinality();
AllRunHorizontalOrBenchmark.java,int answer = bitmapor.cardinality();,if (bitmapor != null ) int answer = bitmapor.cardinality();
AllRunHorizontalOrBenchmark.java,ConciseSet ccs = toConcise(rb.toArray());,if (toConcise(rb != null ) ConciseSet ccs = toConcise(rb.toArray());
AllRunHorizontalOrBenchmark.java,rb = rb.clone();,if (rb != null ) rb = rb.clone();
BasicHorizontalOrBenchmark.java,c = c.lazyIOR(i.next());,if (c != null ) c = c.lazyIOR(i.next());
BasicHorizontalOrBenchmark.java,c = (BitmapContainer) c.repairAfterLazy();,if (c != null ) c = (BitmapContainer) c.repairAfterLazy();
MappedRunContainerRealDataBenchmarkRunOptimize.java,total += bitmap.getCardinality();,if (bitmap != null ) total += bitmap.getCardinality();
MappedRunContainerRealDataBenchmarkRunOptimize.java,total += bitmap.getCardinality();,if (bitmap != null ) total += bitmap.getCardinality();
MappedRunContainerRealDataBenchmarkRunOptimize.java,MutableRoaringBitmap mopti = mbasic.clone();,if (mbasic != null ) MutableRoaringBitmap mopti = mbasic.clone();
RandomUtil.java,ans[k] = i.next().intValue();,if (i != null ) ans[k] = i.next().intValue();
RunArrayAndBenchmark.java,rb = rb.clone();,if (rb != null ) rb = rb.clone();
RunArrayAndBenchmark.java,rb = rb.clone();,if (rb != null ) rb = rb.clone();
RunArrayAndNotBenchmark.java,rb = rb.clone();,if (rb != null ) rb = rb.clone();
RunArrayAndNotBenchmark.java,rb = rb.clone();,if (rb != null ) rb = rb.clone();
RunArrayOrBenchmark.java,rb = rb.clone();,if (rb != null ) rb = rb.clone();
RunArrayOrBenchmark.java,rb = rb.clone();,if (rb != null ) rb = rb.clone();
RunArrayXorBenchmark.java,rb = rb.clone();,if (rb != null ) rb = rb.clone();
RunArrayXorBenchmark.java,rb = rb.clone();,if (rb != null ) rb = rb.clone();
RunContainerRealDataBenchmarkRunOptimize.java,total += bitmap.getCardinality();,if (bitmap != null ) total += bitmap.getCardinality();
RunContainerRealDataBenchmarkRunOptimize.java,total += bitmap.getCardinality();,if (bitmap != null ) total += bitmap.getCardinality();
RunContainerRealDataBenchmarkRunOptimize.java,RoaringBitmap opti = basic.clone();,if (basic != null ) RoaringBitmap opti = basic.clone();
SerializationBenchmark.java,next = Math.abs(source.nextInt());,if (Math != null ) next = Math.abs(source.nextInt());
SerializationBenchmark.java,"len = Math.min(len, buf.remaining());","if (buf != null ) len = Math.min(len, buf.remaining());"
ZipRealDataRetriever.java,"String oneLine = buf.readLine(); // a single, perhaps very long, line","if (line != null ) String oneLine = buf.readLine(); // a single, perhaps very long, line"
IntIteratorFlyweight.java,x.iter = this.iter.clone();,if (this != null ) x.iter = this.iter.clone();
ReverseIntIteratorFlyweight.java,x.iter = this.iter.clone();,if (this != null ) x.iter = this.iter.clone();
RoaringBitmap.java,x.iter = this.iter.clone();,if (this != null ) x.iter = this.iter.clone();
RoaringBitmap.java,clone.iter = this.iter.clone();,if (this != null ) clone.iter = this.iter.clone();
BufferIntIteratorFlyweight.java,x.iter = this.iter.clone();,if (this != null ) x.iter = this.iter.clone();
BufferReverseIntIteratorFlyweight.java,x.iter = this.iter.clone();,if (this != null ) x.iter = this.iter.clone();
ImmutableRoaringBitmap.java,x.iter = this.iter.clone();,if (this != null ) x.iter = this.iter.clone();
ImmutableRoaringBitmap.java,x.cp = this.cp.clone();,if (this != null ) x.cp = this.cp.clone();
ImmutableRoaringBitmap.java,x.iter = this.iter.clone();,if (this != null ) x.iter = this.iter.clone();
ImmutableRoaringBitmap.java,x.cp = this.cp.clone();,if (this != null ) x.cp = this.cp.clone();
Roaring64NavigableMap.java,signedLongs = in.readBoolean();,if (in != null ) signedLongs = in.readBoolean();
Roaring64NavigableMap.java,sortedCumulatedCardinality[index] = previousCardinality + bitmap.getCardinality();,if (bitmap != null ) sortedCumulatedCardinality[index] = previousCardinality + bitmap.getCardinality();
Roaring64NavigableMap.java,int sizeBefore = highToBitmap.size();,if (highToBitmap != null ) int sizeBefore = highToBitmap.size();
Roaring64NavigableMap.java,currentIt = next.getValue().getIntIterator();,if (next != null ) currentIt = next.getValue().getIntIterator();
IteratorsBenchmark64.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
IteratorsBenchmark64.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
IteratorsBenchmark64.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
IteratorsBenchmark64.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
IteratorsBenchmark64.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
IteratorsBenchmark64.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
IteratorsBenchmark64.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
IteratorsBenchmark64.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
IteratorsBenchmark64.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
IteratorsBenchmark64.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
IteratorsBenchmark64.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
IteratorsBenchmark64.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
IteratorsBenchmark64.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
IteratorsBenchmark64.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
IteratorsBenchmark64.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
IteratorsBenchmark64.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
IteratorsBenchmark64.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
IteratorsBenchmark64.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
IteratorsBenchmark64.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
IteratorsBenchmark64.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
IteratorsBenchmark64.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
IteratorsBenchmark64.java,next = Math.abs(source.nextLong());,if (Math != null ) next = Math.abs(source.nextLong());
TestRoaring64NavigableMap.java,clone = (RoaringTreeMap) ois.readObject();,if (ois != null ) clone = (RoaringTreeMap) ois.readObject();
TestRoaring64NavigableMap.java,clone = (RoaringTreeMap) ois.readObject();,if (ois != null ) clone = (RoaringTreeMap) ois.readObject();
RoaringTreeMap.java,sortedCumulatedCardinality[index] = previousCardinality + bitmap.getCardinality();,if (bitmap != null ) sortedCumulatedCardinality[index] = previousCardinality + bitmap.getCardinality();
IteratorsBenchmark64.java,next = Math.abs(source.nextInt());,if (Math != null ) next = Math.abs(source.nextInt());
RoaringTreeMap.java,currentKey = next.getKey();,if (next != null ) currentKey = next.getKey();
RoaringTreeMap.java,currentIt = next.getValue().getIntIterator();,if (next != null ) currentIt = next.getValue().getIntIterator();
TestTreeRoaringBitmap.java,LongIterator iterator = map.iterator();,if (map != null ) LongIterator iterator = map.iterator();
TestTreeRoaringBitmap.java,LongIterator iterator = map.iterator();,if (map != null ) LongIterator iterator = map.iterator();
TestTreeRoaringBitmap.java,LongIterator iterator = map.iterator();,if (map != null ) LongIterator iterator = map.iterator();
TestTreeRoaringBitmap.java,LongIterator iterator = map.iterator();,if (map != null ) LongIterator iterator = map.iterator();
TestTreeRoaringBitmap.java,LongIterator it = map.iterator();,if (map != null ) LongIterator it = map.iterator();
TestTreeRoaringBitmap.java,LongIterator it = map.iterator();,if (map != null ) LongIterator it = map.iterator();
TestTreeRoaringBitmap.java,long cardinality = map.getCardinality();,if (map != null ) long cardinality = map.getCardinality();
RoaringTreeMap.java,currentKey = next.getKey();,if (next != null ) currentKey = next.getKey();
RoaringTreeMap.java,currentIt = next.getValue().getIntIterator();,if (next != null ) currentIt = next.getValue().getIntIterator();
RoaringTreeMap.java,sortedCumulatedCardinality[index] = previousCardinality + bitmap.getCardinality();,if (bitmap != null ) sortedCumulatedCardinality[index] = previousCardinality + bitmap.getCardinality();
TestTreeRoaringBitmap.java,LongIterator iterator = map.iterator();,if (map != null ) LongIterator iterator = map.iterator();
TestTreeRoaringBitmap.java,LongIterator iterator = map.iterator();,if (map != null ) LongIterator iterator = map.iterator();
TestTreeRoaringBitmap.java,LongIterator iterator = map.iterator();,if (map != null ) LongIterator iterator = map.iterator();
TestTreeRoaringBitmap.java,LongIterator iterator = map.iterator();,if (map != null ) LongIterator iterator = map.iterator();
TestTreeRoaringBitmap.java,long cardinality = map.getCardinality();,if (map != null ) long cardinality = map.getCardinality();
TestTreeRoaringBitmap.java,LongIterator it = map.iterator();,if (map != null ) LongIterator it = map.iterator();
TestTreeRoaringBitmap.java,long first = it.next();,if (it != null ) long first = it.next();
TestTreeRoaringBitmap.java,long last = it.next();,if (it != null ) long last = it.next();
RealDataMemoryBenchmark.java,RoaringBitmap opti = basic.clone();,if (basic != null ) RoaringBitmap opti = basic.clone();
RunContainer.java,PeekableShortIterator i = (PeekableShortIterator) x.getShortIterator();,if (x != null ) PeekableShortIterator i = (PeekableShortIterator) x.getShortIterator();
RunContainer.java,PeekableShortIterator i = (PeekableShortIterator) x.getShortIterator();,if (x != null ) PeekableShortIterator i = (PeekableShortIterator) x.getShortIterator();
RunContainer.java,PeekableShortIterator i = (PeekableShortIterator) x.getShortIterator();,if (x != null ) PeekableShortIterator i = (PeekableShortIterator) x.getShortIterator();
MappeableRunContainer.java,PeekableShortIterator i = (PeekableShortIterator) x.getShortIterator();,if (x != null ) PeekableShortIterator i = (PeekableShortIterator) x.getShortIterator();
MappeableRunContainer.java,PeekableShortIterator i = (PeekableShortIterator) x.getShortIterator();,if (x != null ) PeekableShortIterator i = (PeekableShortIterator) x.getShortIterator();
MappeableRunContainer.java,PeekableShortIterator i = (PeekableShortIterator) x.getShortIterator();,if (x != null ) PeekableShortIterator i = (PeekableShortIterator) x.getShortIterator();
MappeableBitmapContainer.java,long[] array = this.bitmap.array();,if (this != null ) long[] array = this.bitmap.array();
TestIterators.java,next = Math.abs(source.nextInt());,if (Math != null ) next = Math.abs(source.nextInt());
TestIterators.java,PeekableIntIterator pii = bitmap.getIntIterator();,if (bitmap != null ) PeekableIntIterator pii = bitmap.getIntIterator();
TestIterators.java,pii = bitmap.getIntIterator();,if (bitmap != null ) pii = bitmap.getIntIterator();
TestIterators.java,pii = bitmap.getIntIterator();,if (bitmap != null ) pii = bitmap.getIntIterator();
TestIterators.java,PeekableIntIterator pii = bitmap.getIntIterator();,if (bitmap != null ) PeekableIntIterator pii = bitmap.getIntIterator();
TestIterators.java,PeekableIntIterator pii = bitmap.getIntIterator();,if (bitmap != null ) PeekableIntIterator pii = bitmap.getIntIterator();
TestIterators.java,PeekableIntIterator it = bitmap.getIntIterator();,if (bitmap != null ) PeekableIntIterator it = bitmap.getIntIterator();
TestIterators.java,ByteBuffer bb = ByteBuffer.wrap(bos.toByteArray());,if (ByteBuffer != null ) ByteBuffer bb = ByteBuffer.wrap(bos.toByteArray());
TestIterators.java,next = Math.abs(source.nextInt());,if (Math != null ) next = Math.abs(source.nextInt());
TestIterators.java,PeekableIntIterator pii = bitmap.getIntIterator();,if (bitmap != null ) PeekableIntIterator pii = bitmap.getIntIterator();
TestIterators.java,pii = bitmap.getIntIterator();,if (bitmap != null ) pii = bitmap.getIntIterator();
TestIterators.java,pii = bitmap.getIntIterator();,if (bitmap != null ) pii = bitmap.getIntIterator();
TestIterators.java,PeekableIntIterator pii = bitmap.getIntIterator();,if (bitmap != null ) PeekableIntIterator pii = bitmap.getIntIterator();
TestIterators.java,PeekableIntIterator pii = bitmap.getIntIterator();,if (bitmap != null ) PeekableIntIterator pii = bitmap.getIntIterator();
TestIterators.java,PeekableIntIterator it = bitmap.getIntIterator();,if (bitmap != null ) PeekableIntIterator it = bitmap.getIntIterator();
RunContainer.java,int curVal = Util.toIntUnsigned(sIt.next());,if (Util != null ) int curVal = Util.toIntUnsigned(sIt.next());
MappeableRunContainer.java,int curVal = BufferUtil.toIntUnsigned(sIt.next());,if (BufferUtil != null ) int curVal = BufferUtil.toIntUnsigned(sIt.next());
RunContainer.java,int card = this.getCardinality();,if (this != null ) int card = this.getCardinality();
MappeableRunContainer.java,int card = this.getCardinality();,if (this != null ) int card = this.getCardinality();
FastAggregation.java,answer = bitmaps.next();,if (bitmaps != null ) answer = bitmaps.next();
RunContainer.java,int card = this.getCardinality();,if (this != null ) int card = this.getCardinality();
MappeableRunContainer.java,int card = this.getCardinality();,if (this != null ) int card = this.getCardinality();
MutableRoaringBitmap.java,final IntIterator i = this.getIntIterator();,if (this != null ) final IntIterator i = this.getIntIterator();
FastAggregation.java,sizes[k] = buffer.get(k).getSizeInBytes();,if (buffer != null ) sizes[k] = buffer.get(k).getSizeInBytes();
FastAggregation.java,sizes[k] = buffer[k].getSizeInBytes();,if (buffer[k] != null ) sizes[k] = buffer[k].getSizeInBytes();
BufferFastAggregation.java,sizes[k] = buffer.get(k).getSizeInBytes();,if (buffer != null ) sizes[k] = buffer.get(k).getSizeInBytes();
MappeableBitmapContainer.java,long[] bitArray = answer.bitmap.array();,if (answer != null ) long[] bitArray = answer.bitmap.array();
MappeableBitmapContainer.java,long[] b = this.bitmap.array();,if (this != null ) long[] b = this.bitmap.array();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,int len = bitmap.limit();,if (bitmap != null ) int len = bitmap.limit();
TestImmutableRoaringBitmap.java,int[] actualArray = bitmap.toArray();,if (bitmap != null ) int[] actualArray = bitmap.toArray();
TestRoaringBitmap.java,IntIterator intIterator = result.getIntIterator();,if (result != null ) IntIterator intIterator = result.getIntIterator();
TestRoaringBitmap.java,IntIterator intIterator = result.getIntIterator();,if (result != null ) IntIterator intIterator = result.getIntIterator();
TestRoaringBitmap.java,IntIterator intIterator = result.getIntIterator();,if (result != null ) IntIterator intIterator = result.getIntIterator();
TestRoaringBitmap.java,IntIterator intIterator = result.getIntIterator();,if (result != null ) IntIterator intIterator = result.getIntIterator();
TestImmutableRoaringBitmap.java,IntIterator intIterator = result.getIntIterator();,if (result != null ) IntIterator intIterator = result.getIntIterator();
TestImmutableRoaringBitmap.java,IntIterator intIterator = result.getIntIterator();,if (result != null ) IntIterator intIterator = result.getIntIterator();
TestImmutableRoaringBitmap.java,IntIterator intIterator = result.getIntIterator();,if (result != null ) IntIterator intIterator = result.getIntIterator();
TestImmutableRoaringBitmap.java,IntIterator intIterator = result.getIntIterator();,if (result != null ) IntIterator intIterator = result.getIntIterator();
ArrayContainer.java,this.cardinality = bc.getCardinality();,if (bc != null ) this.cardinality = bc.getCardinality();
ArrayContainer.java,this.content = bc.toShortArray();,if (bc != null ) this.content = bc.toShortArray();
ArrayContainer.java,BitmapContainer a = this.toBitmapContainer();,if (this != null ) BitmapContainer a = this.toBitmapContainer();
ArrayContainer.java,BitmapContainer a = this.toBitmapContainer();,if (this != null ) BitmapContainer a = this.toBitmapContainer();
ArrayContainer.java,BitmapContainer a = this.toBitmapContainer();,if (this != null ) BitmapContainer a = this.toBitmapContainer();
ArrayContainer.java,BitmapContainer a = this.toBitmapContainer();,if (this != null ) BitmapContainer a = this.toBitmapContainer();
BitSetUtil.java,final IntIterator it = bitmap.getIntIterator();,if (bitmap != null ) final IntIterator it = bitmap.getIntIterator();
BitSetUtil.java,int val = it.next();,if (it != null ) int val = it.next();
BitmapContainer.java,this.cardinality = bc.getCardinality();,if (bc != null ) this.cardinality = bc.getCardinality();
BitmapContainer.java,this.bitmap = bc.toLongArray();,if (bc != null ) this.bitmap = bc.toLongArray();
BitmapContainer.java,long w = Long.reverseBytes(in.readLong());,if (Long != null ) long w = Long.reverseBytes(in.readLong());
BitmapContainer.java,final ShortIterator si = BitmapContainer.this.getShortIterator();,if (BitmapContainer != null ) final ShortIterator si = BitmapContainer.this.getShortIterator();
BitmapContainer.java,final ShortIterator i = this.getShortIterator();,if (this != null ) final ShortIterator i = this.getShortIterator();
BitmapContainer.java,BitmapContainer answer = this.clone();,if (this != null ) BitmapContainer answer = this.clone();
BitmapContainer.java,BitmapContainer answer = this.clone();,if (this != null ) BitmapContainer answer = this.clone();
FastAggregation.java,RoaringBitmap answer = bitmaps.next().clone();,if (bitmaps != null ) RoaringBitmap answer = bitmaps.next().clone();
FastAggregation.java,sizes[k] = buffer[k].getSizeInBytes();,if (buffer[k] != null ) sizes[k] = buffer[k].getSizeInBytes();
FastAggregation.java,sizes[k] = buffer.get(k).getSizeInBytes();,if (buffer != null ) sizes[k] = buffer.get(k).getSizeInBytes();
FastAggregation.java,RoaringBitmap answer = buffer.get(pq.poll());,if (buffer != null ) RoaringBitmap answer = buffer.get(pq.poll());
FastAggregation.java,ContainerPointer x = bitmaps[k].highLowContainer.getContainerPointer();,if (bitmaps[k] != null ) ContainerPointer x = bitmaps[k].highLowContainer.getContainerPointer();
FastAggregation.java,ContainerPointer x = pq.poll();,if (pq != null ) ContainerPointer x = pq.poll();
FastAggregation.java,newc = newc.lazyIOR(x.getContainer());,if (newc != null ) newc = newc.lazyIOR(x.getContainer());
FastAggregation.java,newc = newc.repairAfterLazy();,if (newc != null ) newc = newc.repairAfterLazy();
FastAggregation.java,PriorityQueue<ContainerPointer> pq = new PriorityQueue<>(bitmaps.size());,if (PriorityQueue<>(bitmaps != null ) PriorityQueue<ContainerPointer> pq = new PriorityQueue<>(bitmaps.size());
FastAggregation.java,ContainerPointer x = bitmaps.get(k).highLowContainer.getContainerPointer();,if (bitmaps != null ) ContainerPointer x = bitmaps.get(k).highLowContainer.getContainerPointer();
FastAggregation.java,ContainerPointer x = pq.poll();,if (pq != null ) ContainerPointer x = pq.poll();
FastAggregation.java,newc = newc.lazyIOR(x.getContainer());,if (newc != null ) newc = newc.lazyIOR(x.getContainer());
FastAggregation.java,newc = newc.repairAfterLazy();,if (newc != null ) newc = newc.repairAfterLazy();
FastAggregation.java,ContainerPointer x = bitmaps[k].highLowContainer.getContainerPointer();,if (bitmaps[k] != null ) ContainerPointer x = bitmaps[k].highLowContainer.getContainerPointer();
FastAggregation.java,ContainerPointer x = pq.poll();,if (pq != null ) ContainerPointer x = pq.poll();
FastAggregation.java,newc = newc.ixor(x.getContainer());,if (newc != null ) newc = newc.ixor(x.getContainer());
IntIteratorFlyweight.java,IntIteratorFlyweight x = (IntIteratorFlyweight) super.clone();,if (super != null ) IntIteratorFlyweight x = (IntIteratorFlyweight) super.clone();
IntIteratorFlyweight.java,x.iter = this.iter.clone();,if (this != null ) x.iter = this.iter.clone();
ReverseIntIteratorFlyweight.java,ReverseIntIteratorFlyweight x = (ReverseIntIteratorFlyweight) super.clone();,if (super != null ) ReverseIntIteratorFlyweight x = (ReverseIntIteratorFlyweight) super.clone();
ReverseIntIteratorFlyweight.java,x.iter = this.iter.clone();,if (this != null ) x.iter = this.iter.clone();
RoaringArray.java,sa = (RoaringArray) super.clone();,if (super != null ) sa = (RoaringArray) super.clone();
RoaringArray.java,count += values[k].getArraySizeInBytes();,if (values[k] != null ) count += values[k].getArraySizeInBytes();
RoaringArray.java,final int cookie = Integer.reverseBytes(in.readInt());,if (Integer != null ) final int cookie = Integer.reverseBytes(in.readInt());
RoaringArray.java,keys[k] = Short.reverseBytes(in.readShort());,if (Short != null ) keys[k] = Short.reverseBytes(in.readShort());
RoaringArray.java,bitmapArray[l] = Long.reverseBytes(in.readLong());,if (Long != null ) bitmapArray[l] = Long.reverseBytes(in.readLong());
RoaringArray.java,lengthsAndValues[j] = Short.reverseBytes(in.readShort());,if (Short != null ) lengthsAndValues[j] = Short.reverseBytes(in.readShort());
RoaringArray.java,shortArray[l] = Short.reverseBytes(in.readShort());,if (Short != null ) shortArray[l] = Short.reverseBytes(in.readShort());
RoaringBitmap.java,MappeableContainerPointer cp = rb.getContainerPointer();,if (rb != null ) MappeableContainerPointer cp = rb.getContainerPointer();
RoaringBitmap.java,final RoaringBitmap x = (RoaringBitmap) super.clone();,if (super != null ) final RoaringBitmap x = (RoaringBitmap) super.clone();
RoaringBitmap.java,x.highLowContainer = highLowContainer.clone();,if (highLowContainer != null ) x.highLowContainer = highLowContainer.clone();
RoaringBitmap.java,final IntIterator i = this.getIntIterator();,if (this != null ) final IntIterator i = this.getIntIterator();
RoaringBitmap.java,RoaringIntIterator x = (RoaringIntIterator) super.clone();,if (super != null ) RoaringIntIterator x = (RoaringIntIterator) super.clone();
RoaringBitmap.java,x.iter =  this.iter.clone();,if (this != null ) x.iter =  this.iter.clone();
RoaringBitmap.java,RoaringReverseIntIterator clone = (RoaringReverseIntIterator) super.clone();,if (super != null ) RoaringReverseIntIterator clone = (RoaringReverseIntIterator) super.clone();
RoaringBitmap.java,clone.iter =  this.iter.clone();,if (this != null ) clone.iter =  this.iter.clone();
RunContainer.java,this.nbrruns = bc.numberOfRuns();,if (bc != null ) this.nbrruns = bc.numberOfRuns();
RunContainer.java,this.valueslength = bc.toShortArray();,if (bc != null ) this.valueslength = bc.toShortArray();
RunContainer.java,int curVal = Util.toIntUnsigned(sIt.next());,if (Util != null ) int curVal = Util.toIntUnsigned(sIt.next());
RunContainer.java,int card = this.getCardinality();,if (this != null ) int card = this.getCardinality();
RunContainer.java,int card = this.getCardinality();,if (this != null ) int card = this.getCardinality();
RunContainer.java,int card = this.getCardinality();,if (this != null ) int card = this.getCardinality();
RunContainer.java,int card = this.getCardinality();,if (this != null ) int card = this.getCardinality();
RunContainer.java,nbrruns = Short.reverseBytes(in.readShort());,if (Short != null ) nbrruns = Short.reverseBytes(in.readShort());
RunContainer.java,"final int offset = Math.max(nbrruns, x.getCardinality());","if (x != null ) final int offset = Math.max(nbrruns, x.getCardinality());"
RunContainer.java,PeekableShortIterator i = (PeekableShortIterator) x.getShortIterator();,if (x != null ) PeekableShortIterator i = (PeekableShortIterator) x.getShortIterator();
RunContainer.java,PeekableShortIterator i = (PeekableShortIterator) x.getShortIterator();,if (x != null ) PeekableShortIterator i = (PeekableShortIterator) x.getShortIterator();
RunContainer.java,"final int offset = Math.max(nbrruns, x.getCardinality());","if (x != null ) final int offset = Math.max(nbrruns, x.getCardinality());"
RunContainer.java,PeekableShortIterator i = (PeekableShortIterator) x.getShortIterator();,if (x != null ) PeekableShortIterator i = (PeekableShortIterator) x.getShortIterator();
RunContainer.java,ShortIterator me = this.getShortIterator();,if (this != null ) ShortIterator me = this.getShortIterator();
BufferBitSetUtil.java,final IntIterator it = bitmap.getIntIterator();,if (bitmap != null ) final IntIterator it = bitmap.getIntIterator();
BufferBitSetUtil.java,int val = it.next();,if (it != null ) int val = it.next();
BufferFastAggregation.java,MappeableContainerPointer x = pq.poll();,if (pq != null ) MappeableContainerPointer x = pq.poll();
BufferFastAggregation.java,newc = newc.lazyIOR(x.getContainer());,if (newc != null ) newc = newc.lazyIOR(x.getContainer());
BufferFastAggregation.java,newc = newc.repairAfterLazy();,if (newc != null ) newc = newc.repairAfterLazy();
BufferFastAggregation.java,MappeableContainerPointer x = pq.poll();,if (pq != null ) MappeableContainerPointer x = pq.poll();
BufferFastAggregation.java,newc = newc.ixor(x.getContainer());,if (newc != null ) newc = newc.ixor(x.getContainer());
BufferFastAggregation.java,sizes[k] = buffer[k].serializedSizeInBytes();,if (buffer[k] != null ) sizes[k] = buffer[k].serializedSizeInBytes();
BufferFastAggregation.java,sizes[k] = buffer.get(k).getSizeInBytes();,if (buffer != null ) sizes[k] = buffer.get(k).getSizeInBytes();
BufferIntIteratorFlyweight.java,BufferIntIteratorFlyweight x = (BufferIntIteratorFlyweight) super.clone();,if (super != null ) BufferIntIteratorFlyweight x = (BufferIntIteratorFlyweight) super.clone();
BufferIntIteratorFlyweight.java,x.iter = this.iter.clone();,if (this != null ) x.iter = this.iter.clone();
BufferReverseIntIteratorFlyweight.java,BufferReverseIntIteratorFlyweight x = (BufferReverseIntIteratorFlyweight) super.clone();,if (super != null ) BufferReverseIntIteratorFlyweight x = (BufferReverseIntIteratorFlyweight) super.clone();
BufferReverseIntIteratorFlyweight.java,x.iter = this.iter.clone();,if (this != null ) x.iter = this.iter.clone();
ImmutableRoaringArray.java,buffer = bbf.slice();,if (bbf != null ) buffer = bbf.slice();
ImmutableRoaringArray.java,sa = (ImmutableRoaringArray) super.clone();,if (super != null ) sa = (ImmutableRoaringArray) super.clone();
ImmutableRoaringArray.java,ByteBuffer tmp = buffer.duplicate();// sad but ByteBuffer is not thread-safe so it is either a duplicate or a lock,if (lock != null ) ByteBuffer tmp = buffer.duplicate();// sad but ByteBuffer is not thread-safe so it is either a duplicate or a lock
ImmutableRoaringArray.java,int nbrruns = BufferUtil.toIntUnsigned(tmp.getShort());,if (BufferUtil != null ) int nbrruns = BufferUtil.toIntUnsigned(tmp.getShort());
ImmutableRoaringArray.java,final ShortBuffer shortArray = tmp.asShortBuffer();,if (tmp != null ) final ShortBuffer shortArray = tmp.asShortBuffer();
ImmutableRoaringArray.java,final LongBuffer bitmapArray = tmp.asLongBuffer();,if (tmp != null ) final LongBuffer bitmapArray = tmp.asLongBuffer();
ImmutableRoaringArray.java,final ShortBuffer shortArray = tmp.asShortBuffer();,if (tmp != null ) final ShortBuffer shortArray = tmp.asShortBuffer();
ImmutableRoaringArray.java,MappeableContainerPointer cp = this.getContainerPointer();,if (this != null ) MappeableContainerPointer cp = this.getContainerPointer();
ImmutableRoaringArray.java,ByteBuffer tmp = buffer.duplicate();,if (buffer != null ) ByteBuffer tmp = buffer.duplicate();
ImmutableRoaringBitmap.java,final int max = BufferUtil.toIntUnsigned(BufferUtil.maxLowBit());,if (BufferUtil != null ) final int max = BufferUtil.toIntUnsigned(BufferUtil.maxLowBit());
ImmutableRoaringBitmap.java,x.highLowContainer = highLowContainer.clone();,if (highLowContainer != null ) x.highLowContainer = highLowContainer.clone();
ImmutableRoaringBitmap.java,MappeableContainerPointer mcp = highLowContainer.getContainerPointer();,if (highLowContainer != null ) MappeableContainerPointer mcp = highLowContainer.getContainerPointer();
ImmutableRoaringBitmap.java,final IntIterator i = this.getIntIterator();,if (this != null ) final IntIterator i = this.getIntIterator();
ImmutableRoaringBitmap.java,ok = cp.hasContainer();,if (cp != null ) ok = cp.hasContainer();
ImmutableRoaringBitmap.java,iter = cp.getContainer().getShortIterator();,if (cp != null ) iter = cp.getContainer().getShortIterator();
ImmutableRoaringBitmap.java,ImmutableRoaringIntIterator x = (ImmutableRoaringIntIterator) super.clone();,if (super != null ) ImmutableRoaringIntIterator x = (ImmutableRoaringIntIterator) super.clone();
ImmutableRoaringBitmap.java,x.iter =  this.iter.clone();,if (this != null ) x.iter =  this.iter.clone();
ImmutableRoaringBitmap.java,x.cp = this.cp.clone();,if (this != null ) x.cp = this.cp.clone();
ImmutableRoaringBitmap.java,ok = cp.hasContainer();,if (cp != null ) ok = cp.hasContainer();
ImmutableRoaringBitmap.java,iter = cp.getContainer().getReverseShortIterator();,if (cp != null ) iter = cp.getContainer().getReverseShortIterator();
ImmutableRoaringBitmap.java,ImmutableRoaringReverseIntIterator x = (ImmutableRoaringReverseIntIterator) super.clone();,if (super != null ) ImmutableRoaringReverseIntIterator x = (ImmutableRoaringReverseIntIterator) super.clone();
ImmutableRoaringBitmap.java,x.iter = this.iter.clone();,if (this != null ) x.iter = this.iter.clone();
ImmutableRoaringBitmap.java,x.cp = this.cp.clone();,if (this != null ) x.cp = this.cp.clone();
MappeableArrayContainer.java,short[] sarray = content.array();,if (content != null ) short[] sarray = content.array();
MappeableArrayContainer.java,ShortBuffer tmp = newContent.duplicate();// for thread-safety,if (thread-safety != null ) ShortBuffer tmp = newContent.duplicate();// for thread-safety
MappeableArrayContainer.java,this.cardinality = bc.getCardinality();,if (bc != null ) this.cardinality = bc.getCardinality();
MappeableArrayContainer.java,this.content = bc.toShortBuffer();,if (bc != null ) this.content = bc.toShortBuffer();
MappeableArrayContainer.java,short[] c = content.array();,if (content != null ) short[] c = content.array();
MappeableArrayContainer.java,short[] sarray = content.array();,if (content != null ) short[] sarray = content.array();
MappeableArrayContainer.java,final MappeableBitmapContainer a = this.toBitmapContainer();,if (this != null ) final MappeableBitmapContainer a = this.toBitmapContainer();
MappeableArrayContainer.java,sarray = content.array();,if (content != null ) sarray = content.array();
MappeableArrayContainer.java,final MappeableBitmapContainer a = this.toBitmapContainer();,if (this != null ) final MappeableBitmapContainer a = this.toBitmapContainer();
MappeableArrayContainer.java,short[] sarray = answer.content.array();,if (answer != null ) short[] sarray = answer.content.array();
MappeableArrayContainer.java,short[] c = content.array();,if (content != null ) short[] c = content.array();
MappeableArrayContainer.java,short[] t = this.content.array();,if (this != null ) short[] t = this.content.array();
MappeableArrayContainer.java,short[] sr = srb.content.array();,if (srb != null ) short[] sr = srb.content.array();
MappeableArrayContainer.java,short[] c = this.content.array();,if (this != null ) short[] c = this.content.array();
MappeableArrayContainer.java,short[] c = this.content.array();,if (this != null ) short[] c = this.content.array();
MappeableArrayContainer.java,int len = this.content.limit();,if (this != null ) int len = this.content.limit();
MappeableArrayContainer.java,int len = this.content.limit();,if (this != null ) int len = this.content.limit();
MappeableArrayContainer.java,assert outPos == buffer.limit();,if (buffer != null ) assert outPos == buffer.limit();
MappeableArrayContainer.java,int len = buffer.limit();,if (buffer != null ) int len = buffer.limit();
MappeableArrayContainer.java,short[] sarray = answer.content.array();,if (answer != null ) short[] sarray = answer.content.array();
MappeableArrayContainer.java,long[] bitArray = bc.bitmap.array();,if (bc != null ) long[] bitArray = bc.bitmap.array();
MappeableArrayContainer.java,short[] sarray = this.content.array();,if (this != null ) short[] sarray = this.content.array();
MappeableArrayContainer.java,int len = bc.bitmap.limit();,if (bc != null ) int len = bc.bitmap.limit();
MappeableArrayContainer.java,short[] x = co.array();,if (co != null ) short[] x = co.array();
MappeableArrayContainer.java,short[] a = content.array();,if (content != null ) short[] a = content.array();
MappeableArrayContainer.java,short[] a = content.array();,if (content != null ) short[] a = content.array();
MappeableArrayContainer.java,long[] bitArray = bc.bitmap.array();,if (bc != null ) long[] bitArray = bc.bitmap.array();
MappeableArrayContainer.java,short[] sarray = this.content.array();,if (this != null ) short[] sarray = this.content.array();
MappeableArrayContainer.java,int len = bc.bitmap.limit();,if (bc != null ) int len = bc.bitmap.limit();
MappeableArrayContainer.java,short[] sarray = content.array();,if (content != null ) short[] sarray = content.array();
MappeableArrayContainer.java,MappeableBitmapContainer a = this.toBitmapContainer();,if (this != null ) MappeableBitmapContainer a = this.toBitmapContainer();
MappeableArrayContainer.java,sarray = content.array();,if (content != null ) sarray = content.array();
MappeableArrayContainer.java,MappeableBitmapContainer a = this.toBitmapContainer();,if (this != null ) MappeableBitmapContainer a = this.toBitmapContainer();
MappeableArrayContainer.java,MappeableBitmapContainer a = this.toBitmapContainer();,if (this != null ) MappeableBitmapContainer a = this.toBitmapContainer();
MappeableArrayContainer.java,short[] answerarray = answer.content.array();,if (answer != null ) short[] answerarray = answer.content.array();
MappeableArrayContainer.java,MappeableBitmapContainer a = this.toBitmapContainer();,if (this != null ) MappeableBitmapContainer a = this.toBitmapContainer();
MappeableArrayContainer.java,short[] contentarray = content.array();,if (content != null ) short[] contentarray = content.array();
MappeableArrayContainer.java,content = p.content.array();,if (p != null ) content = p.content.array();
MappeableArrayContainer.java,content = p.content.array();,if (p != null ) content = p.content.array();
MappeableBitmapContainer.java,int len = bitmap.limit();,if (bitmap != null ) int len = bitmap.limit();
MappeableBitmapContainer.java,LongBuffer tmp = newBitmap.duplicate(); // for thread safety,if (safety != null ) LongBuffer tmp = newBitmap.duplicate(); // for thread safety
MappeableBitmapContainer.java,this.bitmap = LongBuffer.allocate(tmp.limit());,if (LongBuffer != null ) this.bitmap = LongBuffer.allocate(tmp.limit());
MappeableBitmapContainer.java,this.cardinality = bc.getCardinality();,if (bc != null ) this.cardinality = bc.getCardinality();
MappeableBitmapContainer.java,this.bitmap = bc.toLongBuffer();,if (bc != null ) this.bitmap = bc.toLongBuffer();
MappeableBitmapContainer.java,long[] src = this.bitmap.array();,if (this != null ) long[] src = this.bitmap.array();
MappeableBitmapContainer.java,int len = bitmap.limit();,if (bitmap != null ) int len = bitmap.limit();
MappeableBitmapContainer.java,long[] b = bitmap.array();,if (bitmap != null ) long[] b = bitmap.array();
MappeableBitmapContainer.java,int len = bitmap.limit();,if (bitmap != null ) int len = bitmap.limit();
MappeableBitmapContainer.java,long[] b = bitmap.array();,if (bitmap != null ) long[] b = bitmap.array();
MappeableBitmapContainer.java,int len = bitmap.limit();,if (bitmap != null ) int len = bitmap.limit();
MappeableBitmapContainer.java,short[] sarray = answer.content.array();,if (answer != null ) short[] sarray = answer.content.array();
MappeableBitmapContainer.java,long[] tb = this.bitmap.array();,if (this != null ) long[] tb = this.bitmap.array();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,long[] bitArray = answer.bitmap.array();,if (answer != null ) long[] bitArray = answer.bitmap.array();
MappeableBitmapContainer.java,long[] tb = this.bitmap.array();,if (this != null ) long[] tb = this.bitmap.array();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,long[] bitArray = answer.bitmap.array();,if (answer != null ) long[] bitArray = answer.bitmap.array();
MappeableBitmapContainer.java,long[] b = this.bitmap.array();,if (this != null ) long[] b = this.bitmap.array();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,long[] bitArray = answer.bitmap.array();,if (answer != null ) long[] bitArray = answer.bitmap.array();
MappeableBitmapContainer.java,long[] b = this.bitmap.array();,if (this != null ) long[] b = this.bitmap.array();
MappeableBitmapContainer.java,int len = answer.bitmap.limit();,if (answer != null ) int len = answer.bitmap.limit();
MappeableBitmapContainer.java,int len = answer.bitmap.limit();,if (answer != null ) int len = answer.bitmap.limit();
MappeableBitmapContainer.java,MappeableBitmapContainer answer = this.clone();,if (this != null ) MappeableBitmapContainer answer = this.clone();
MappeableBitmapContainer.java,long[] b = answer.bitmap.array();,if (answer != null ) long[] b = answer.bitmap.array();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,long[] b = this.bitmap.array();,if (this != null ) long[] b = this.bitmap.array();
MappeableBitmapContainer.java,long[] s = srb.bitmap.array();,if (srb != null ) long[] s = srb.bitmap.array();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,long[] b = bitmap.array();,if (bitmap != null ) long[] b = bitmap.array();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,long[] b = bitmap.array();,if (bitmap != null ) long[] b = bitmap.array();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,long[] tb = this.bitmap.array();,if (this != null ) long[] tb = this.bitmap.array();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,long[] b = this.bitmap.array();,if (this != null ) long[] b = this.bitmap.array();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,long[] b = this.bitmap.array();,if (this != null ) long[] b = this.bitmap.array();
MappeableBitmapContainer.java,long[] b = this.bitmap.array();,if (this != null ) long[] b = this.bitmap.array();
MappeableBitmapContainer.java,long[] b = this.bitmap.array();,if (this != null ) long[] b = this.bitmap.array();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,long[] b = this.bitmap.array();,if (this != null ) long[] b = this.bitmap.array();
MappeableBitmapContainer.java,final ShortIterator si = MappeableBitmapContainer.this.getShortIterator();,if (MappeableBitmapContainer != null ) final ShortIterator si = MappeableBitmapContainer.this.getShortIterator();
MappeableBitmapContainer.java,long[] b = bitmap.array();,if (bitmap != null ) long[] b = bitmap.array();
MappeableBitmapContainer.java,long[] b = bitmap.array();,if (bitmap != null ) long[] b = bitmap.array();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,long[] b = this.bitmap.array();,if (this != null ) long[] b = this.bitmap.array();
MappeableBitmapContainer.java,long[] bitArray = bitmap.array();,if (bitmap != null ) long[] bitArray = bitmap.array();
MappeableBitmapContainer.java,long[] b = bitmap.array();,if (bitmap != null ) long[] b = bitmap.array();
MappeableBitmapContainer.java,short[] ac = arrayContainer.content.array();,if (arrayContainer != null ) short[] ac = arrayContainer.content.array();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,long[] bitArray = answer.bitmap.array();,if (answer != null ) long[] bitArray = answer.bitmap.array();
MappeableBitmapContainer.java,long[] ab = answer.bitmap.array();,if (answer != null ) long[] ab = answer.bitmap.array();
MappeableBitmapContainer.java,long[] bitArray = answer.bitmap.array();,if (answer != null ) long[] bitArray = answer.bitmap.array();
MappeableBitmapContainer.java,long[] b = this.bitmap.array();,if (this != null ) long[] b = this.bitmap.array();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,long[] b = this.bitmap.array();,if (this != null ) long[] b = this.bitmap.array();
MappeableBitmapContainer.java,long w = Long.reverseBytes(in.readLong());,if (Long != null ) long w = Long.reverseBytes(in.readLong());
MappeableBitmapContainer.java,long w = Long.reverseBytes(in.readLong());,if (Long != null ) long w = Long.reverseBytes(in.readLong());
MappeableBitmapContainer.java,final ShortIterator i = this.getShortIterator();,if (this != null ) final ShortIterator i = this.getShortIterator();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,long[] b = bitmap.array();,if (bitmap != null ) long[] b = bitmap.array();
MappeableBitmapContainer.java,long[] bitArray = answer.bitmap.array();,if (answer != null ) long[] bitArray = answer.bitmap.array();
MappeableBitmapContainer.java,long[] b = this.bitmap.array();,if (this != null ) long[] b = this.bitmap.array();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,long[] bitArray = answer.bitmap.array();,if (answer != null ) long[] bitArray = answer.bitmap.array();
MappeableBitmapContainer.java,long[] b = this.bitmap.array();,if (this != null ) long[] b = this.bitmap.array();
MappeableBitmapContainer.java,int len = answer.bitmap.limit();,if (answer != null ) int len = answer.bitmap.limit();
MappeableBitmapContainer.java,int len = answer.bitmap.limit();,if (answer != null ) int len = answer.bitmap.limit();
MappeableBitmapContainer.java,long[] b = this.bitmap.array();,if (this != null ) long[] b = this.bitmap.array();
MappeableBitmapContainer.java,long[] b = this.bitmap.array();,if (this != null ) long[] b = this.bitmap.array();
MappeableBitmapContainer.java,final int m = this.bitmap.limit();,if (this != null ) final int m = this.bitmap.limit();
MappeableBitmapContainer.java,long[] b = answer.bitmap.array();,if (answer != null ) long[] b = answer.bitmap.array();
MappeableBitmapContainer.java,long[] b = answer.bitmap.array();,if (answer != null ) long[] b = answer.bitmap.array();
MappeableBitmapContainer.java,long[] b = bc.bitmap.array();,if (bc != null ) long[] b = bc.bitmap.array();
MappeableBitmapContainer.java,long[] b = this.bitmap.array();,if (this != null ) long[] b = this.bitmap.array();
MappeableBitmapContainer.java,int m = this.bitmap.limit();,if (this != null ) int m = this.bitmap.limit();
MappeableBitmapContainer.java,long[] b = this.bitmap.array();,if (this != null ) long[] b = this.bitmap.array();
MappeableBitmapContainer.java,long[] b = this.bitmap.array();,if (this != null ) long[] b = this.bitmap.array();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,short[] cont = ac.content.array();,if (ac != null ) short[] cont = ac.content.array();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,long[] tb = this.bitmap.array();,if (this != null ) long[] tb = this.bitmap.array();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableBitmapContainer.java,int len = this.bitmap.limit();,if (this != null ) int len = this.bitmap.limit();
MappeableRunContainer.java,ShortBuffer tmp = valueslength.duplicate();// for thread safety,if (safety != null ) ShortBuffer tmp = valueslength.duplicate();// for thread safety
MappeableRunContainer.java,this.nbrruns = bc.numberOfRuns();,if (bc != null ) this.nbrruns = bc.numberOfRuns();
MappeableRunContainer.java,this.valueslength = bc.toShortBuffer();,if (bc != null ) this.valueslength = bc.toShortBuffer();
MappeableRunContainer.java,int curVal = BufferUtil.toIntUnsigned(sIt.next());,if (BufferUtil != null ) int curVal = BufferUtil.toIntUnsigned(sIt.next());
MappeableRunContainer.java,short[] vl = valueslength.array();,if (valueslength != null ) short[] vl = valueslength.array();
MappeableRunContainer.java,short[] a = arr.content.array();,if (arr != null ) short[] a = arr.content.array();
MappeableRunContainer.java,short[] vl = valueslength.array();,if (valueslength != null ) short[] vl = valueslength.array();
MappeableRunContainer.java,long[] b = bc.bitmap.array();,if (bc != null ) long[] b = bc.bitmap.array();
MappeableRunContainer.java,final int len = bc.bitmap.limit();,if (bc != null ) final int len = bc.bitmap.limit();
MappeableRunContainer.java,final int len = bc.bitmap.limit();,if (bc != null ) final int len = bc.bitmap.limit();
MappeableRunContainer.java,int card = this.getCardinality();,if (this != null ) int card = this.getCardinality();
MappeableRunContainer.java,short[] ba = answer.content.array();,if (answer != null ) short[] ba = answer.content.array();
MappeableRunContainer.java,int card = this.getCardinality();,if (this != null ) int card = this.getCardinality();
MappeableRunContainer.java,int newCapacity = valueslength.capacity();,if (valueslength != null ) int newCapacity = valueslength.capacity();
MappeableRunContainer.java,int newCapacity = valueslength.capacity();,if (valueslength != null ) int newCapacity = valueslength.capacity();
MappeableRunContainer.java,int card = this.getCardinality();,if (this != null ) int card = this.getCardinality();
MappeableRunContainer.java,int card = this.getCardinality();,if (this != null ) int card = this.getCardinality();
MappeableRunContainer.java,short[] vl = valueslength.array();,if (valueslength != null ) short[] vl = valueslength.array();
MappeableRunContainer.java,short[] vl = this.valueslength.array();,if (this != null ) short[] vl = this.valueslength.array();
MappeableRunContainer.java,"final int offset = Math.max(nbrruns, x.getCardinality());","if (x != null ) final int offset = Math.max(nbrruns, x.getCardinality());"
MappeableRunContainer.java,short[] vl = this.valueslength.array();,if (this != null ) short[] vl = this.valueslength.array();
MappeableRunContainer.java,PeekableShortIterator i = (PeekableShortIterator) x.getShortIterator();,if (x != null ) PeekableShortIterator i = (PeekableShortIterator) x.getShortIterator();
MappeableRunContainer.java,short[] vl = ans.valueslength.array();,if (ans != null ) short[] vl = ans.valueslength.array();
MappeableRunContainer.java,short[] vl = answer.valueslength.array();,if (answer != null ) short[] vl = answer.valueslength.array();
MappeableRunContainer.java,PeekableShortIterator i = (PeekableShortIterator) x.getShortIterator();,if (x != null ) PeekableShortIterator i = (PeekableShortIterator) x.getShortIterator();
MappeableRunContainer.java,"final int offset = Math.max(nbrruns, x.getCardinality());","if (x != null ) final int offset = Math.max(nbrruns, x.getCardinality());"
MappeableRunContainer.java,short[] vl = valueslength.array();,if (valueslength != null ) short[] vl = valueslength.array();
MappeableRunContainer.java,PeekableShortIterator i = (PeekableShortIterator) x.getShortIterator();,if (x != null ) PeekableShortIterator i = (PeekableShortIterator) x.getShortIterator();
MappeableRunContainer.java,short[] vl = answer.valueslength.array();,if (answer != null ) short[] vl = answer.valueslength.array();
MappeableRunContainer.java,short[] a = co.array();,if (co != null ) short[] a = co.array();
MappeableRunContainer.java,ShortIterator me = this.getShortIterator();,if (this != null ) ShortIterator me = this.getShortIterator();
MappeableRunContainer.java,short[] vl = answer.valueslength.array();,if (answer != null ) short[] vl = answer.valueslength.array();
MappeableRunContainer.java,short[] vl = answer.valueslength.array();,if (answer != null ) short[] vl = answer.valueslength.array();
MappeableRunContainer.java,short[] vl = answer.valueslength.array();,if (answer != null ) short[] vl = answer.valueslength.array();
MappeableRunContainer.java,short[] vl = this.valueslength.array();,if (this != null ) short[] vl = this.valueslength.array();
MappeableRunContainer.java,short[] vl = answer.valueslength.array();,if (answer != null ) short[] vl = answer.valueslength.array();
MappeableRunContainer.java,short[] vl = answer.valueslength.array();,if (answer != null ) short[] vl = answer.valueslength.array();
MappeableRunContainer.java,vl = parent.valueslength.array();,if (parent != null ) vl = parent.valueslength.array();
MappeableRunContainer.java,vl = parent.valueslength.array();,if (parent != null ) vl = parent.valueslength.array();
MutableRoaringArray.java,MappeableContainerPointer cp = highLowContainer.getContainerPointer();,if (highLowContainer != null ) MappeableContainerPointer cp = highLowContainer.getContainerPointer();
MutableRoaringArray.java,sa = (MutableRoaringArray) super.clone();,if (super != null ) sa = (MutableRoaringArray) super.clone();
MutableRoaringArray.java,final int cookie = Integer.reverseBytes(in.readInt());,if (Integer != null ) final int cookie = Integer.reverseBytes(in.readInt());
MutableRoaringArray.java,keys[k] = Short.reverseBytes(in.readShort());,if (Short != null ) keys[k] = Short.reverseBytes(in.readShort());
MutableRoaringArray.java,count += values[k].getArraySizeInBytes();,if (values[k] != null ) count += values[k].getArraySizeInBytes();
MutableRoaringBitmap.java,ContainerPointer cp = rb.getContainerPointer();,if (rb != null ) ContainerPointer cp = rb.getContainerPointer();
MutableRoaringBitmap.java,final MutableRoaringBitmap x = (MutableRoaringBitmap) super.clone();,if (super != null ) final MutableRoaringBitmap x = (MutableRoaringBitmap) super.clone();
MutableRoaringBitmap.java,x.highLowContainer = highLowContainer.clone();,if (highLowContainer != null ) x.highLowContainer = highLowContainer.clone();
MutableRoaringBitmap.java,final IntIterator i = this.getIntIterator();,if (this != null ) final IntIterator i = this.getIntIterator();
TestBitSetUtil.java,final boolean b = random.nextBoolean();,if (random != null ) final boolean b = random.nextBoolean();
TestContainer.java,Container c = ac.runOptimize();,if (ac != null ) Container c = ac.runOptimize();
TestContainer.java,Container c = ac.runOptimize();,if (ac != null ) Container c = ac.runOptimize();
TestContainer.java,Container c = bc.runOptimize();,if (bc != null ) Container c = bc.runOptimize();
TestContainer.java,Container c = bc.runOptimize();,if (bc != null ) Container c = bc.runOptimize();
TestContainer.java,Container c = rc.runOptimize();,if (rc != null ) Container c = rc.runOptimize();
TestContainer.java,Container c = rc.runOptimize();,if (rc != null ) Container c = rc.runOptimize();
TestContainer.java,Container c = rc.runOptimize();,if (rc != null ) Container c = rc.runOptimize();
TestContainer.java,Container ac = (Container) ct.newInstance();,if (ct != null ) Container ac = (Container) ct.newInstance();
TestContainer.java,Container ac = (Container) ct.newInstance();,if (ct != null ) Container ac = (Container) ct.newInstance();
TestContainer.java,Container ac = (Container) ct.newInstance();,if (ct != null ) Container ac = (Container) ct.newInstance();
TestContainer.java,Container ac = (Container) ct.newInstance();,if (ct != null ) Container ac = (Container) ct.newInstance();
TestContainer.java,Container ac = (Container) ct.newInstance();,if (ct != null ) Container ac = (Container) ct.newInstance();
TestIntIteratorFlyweight.java,RoaringBitmap bitmap = RoaringBitmap.bitmapOf();,if (RoaringBitmap != null ) RoaringBitmap bitmap = RoaringBitmap.bitmapOf();
TestIntIteratorFlyweight.java,next = Math.abs(source.nextInt());,if (Math != null ) next = Math.abs(source.nextInt());
TestIterators.java,next = Math.abs(source.nextInt());,if (Math != null ) next = Math.abs(source.nextInt());
TestMemory.java,totalcard += bitmaps[i].getCardinality();,if (bitmaps[i] != null ) totalcard += bitmaps[i].getCardinality();
TestRange.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRange.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRange.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRange.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRange.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRange.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRange.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRange.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRange.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRange.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRoaringBitmap.java,int[] array = rb.toArray();,if (rb != null ) int[] array = rb.toArray();
TestRoaringBitmap.java,int[] array = rb.toArray();,if (rb != null ) int[] array = rb.toArray();
TestRoaringBitmap.java,int thiscard = rb.getCardinality();,if (rb != null ) int thiscard = rb.getCardinality();
TestRoaringBitmap.java,Object[] correct = hs.toArray();,if (hs != null ) Object[] correct = hs.toArray();
TestRoaringBitmap.java,Integer[] resor = ArrayUtils.toObject(rbor.toArray());,if (ArrayUtils != null ) Integer[] resor = ArrayUtils.toObject(rbor.toArray());
TestRoaringBitmap.java,Object[] correct = hs.toArray();,if (hs != null ) Object[] correct = hs.toArray();
TestRoaringBitmap.java,Integer[] resand = ArrayUtils.toObject(rband.toArray());,if (ArrayUtils != null ) Integer[] resand = ArrayUtils.toObject(rband.toArray());
TestRoaringBitmap.java,Object[] correct = hs.toArray();,if (hs != null ) Object[] correct = hs.toArray();
TestRoaringBitmap.java,Integer[] resandNot = ArrayUtils.toObject(rbandnot.toArray());,if (ArrayUtils != null ) Integer[] resandNot = ArrayUtils.toObject(rbandnot.toArray());
TestRoaringBitmap.java,Object[] correct = hs.toArray();,if (hs != null ) Object[] correct = hs.toArray();
TestRoaringBitmap.java,Integer[] resxor = ArrayUtils.toObject(rbxor.toArray());,if (ArrayUtils != null ) Integer[] resxor = ArrayUtils.toObject(rbxor.toArray());
TestRoaringBitmap.java,final IntIterator i = rb.getIntIterator();,if (rb != null ) final IntIterator i = rb.getIntIterator();
TestRoaringBitmap.java,int[] array = rrand.toArray();,if (rrand != null ) int[] array = rrand.toArray();
TestRoaringBitmap.java,array = rr.toArray();,if (rr != null ) array = rr.toArray();
TestRoaringBitmap.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRoaringBitmap.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRoaringBitmap.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRoaringBitmap.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRoaringBitmap.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRoaringBitmap.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRoaringBitmap.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRoaringBitmap.java,IntIterator i = rb.getIntIterator();,if (rb != null ) IntIterator i = rb.getIntIterator();
TestRoaringBitmap.java,int howmuch = rr.serializedSizeInBytes();,if (rr != null ) int howmuch = rr.serializedSizeInBytes();
TestRoaringBitmap.java,int howmuch = rr.serializedSizeInBytes();,if (rr != null ) int howmuch = rr.serializedSizeInBytes();
TestRoaringBitmap.java,return counter == bc.getCardinality();,if (bc != null ) return counter == bc.getCardinality();
TestRunContainer.java,Container ac = rc.toBitmapOrArrayContainer(rc.getCardinality());,if (rc != null ) Container ac = rc.toBitmapOrArrayContainer(rc.getCardinality());
TestRunContainer.java,Container bc = rc.toBitmapOrArrayContainer(rc.getCardinality());,if (rc != null ) Container bc = rc.toBitmapOrArrayContainer(rc.getCardinality());
TestRunContainer.java,int rcSize = rc.getCardinality();,if (rc != null ) int rcSize = rc.getCardinality();
TestRunContainer.java,int bcSize = bc.getCardinality();,if (bc != null ) int bcSize = bc.getCardinality();
TestRunContainer.java,int rcSize = rc.getCardinality();,if (rc != null ) int rcSize = rc.getCardinality();
TestRunContainer.java,int bcSize = bc.getCardinality();,if (bc != null ) int bcSize = bc.getCardinality();
TestRunContainer.java,int rcSize = rc.getCardinality();,if (rc != null ) int rcSize = rc.getCardinality();
TestRunContainer.java,int bcSize = bc.getCardinality();,if (bc != null ) int bcSize = bc.getCardinality();
TestRunContainer.java,ByteArrayInputStream bis = new ByteArrayInputStream(bos.toByteArray());,if (ByteArrayInputStream(bos != null ) ByteArrayInputStream bis = new ByteArrayInputStream(bos.toByteArray());
TestRunContainer.java,RunContainer newContainer = (RunContainer) in.readObject();,if (in != null ) RunContainer newContainer = (RunContainer) in.readObject();
TestRunContainer.java,RunContainer copy = (RunContainer) x.clone();,if (x != null ) RunContainer copy = (RunContainer) x.clone();
TestRunContainer.java,RunContainer copy = (RunContainer) x.clone();,if (x != null ) RunContainer copy = (RunContainer) x.clone();
TestRunContainer.java,RunContainer copy = (RunContainer) x.clone();,if (x != null ) RunContainer copy = (RunContainer) x.clone();
TestRunContainer.java,RunContainer copy = (RunContainer) x.clone();,if (x != null ) RunContainer copy = (RunContainer) x.clone();
TestRunContainer.java,ans[k] = i.next().intValue();,if (i != null ) ans[k] = i.next().intValue();
TestSerialization.java,next = Math.abs(source.nextInt());,if (Math != null ) next = Math.abs(source.nextInt());
TestSerialization.java,"len = Math.min(len, buf.remaining());","if (buf != null ) len = Math.min(len, buf.remaining());"
TestBitSetUtil.java,final boolean b = random.nextBoolean();,if (random != null ) final boolean b = random.nextBoolean();
TestExamples.java,long totalcount = fos.getChannel().position();,if (fos != null ) long totalcount = fos.getChannel().position();
TestImmutableRoaringBitmap.java,int[] array = rb.toArray();,if (rb != null ) int[] array = rb.toArray();
TestImmutableRoaringBitmap.java,ByteBuffer b = ByteBuffer.allocate(rb.serializedSizeInBytes());,if (ByteBuffer != null ) ByteBuffer b = ByteBuffer.allocate(rb.serializedSizeInBytes());
TestImmutableRoaringBitmap.java,int[] array = rb.toArray();,if (rb != null ) int[] array = rb.toArray();
TestImmutableRoaringBitmap.java,ByteBuffer b = ByteBuffer.allocate(rb.serializedSizeInBytes());,if (ByteBuffer != null ) ByteBuffer b = ByteBuffer.allocate(rb.serializedSizeInBytes());
TestImmutableRoaringBitmap.java,array = irb.toArray();,if (irb != null ) array = irb.toArray();
TestImmutableRoaringBitmap.java,ByteBuffer b = ByteBuffer.allocate(r.serializedSizeInBytes());,if (ByteBuffer != null ) ByteBuffer b = ByteBuffer.allocate(r.serializedSizeInBytes());
TestImmutableRoaringBitmap.java,ByteBuffer b = ByteBuffer.allocate(r.serializedSizeInBytes());,if (ByteBuffer != null ) ByteBuffer b = ByteBuffer.allocate(r.serializedSizeInBytes());
TestImmutableRoaringBitmap.java,mr = ir.toMutableRoaringBitmap();,if (ir != null ) mr = ir.toMutableRoaringBitmap();
TestImmutableRoaringBitmap.java,mr = ir.toMutableRoaringBitmap();,if (ir != null ) mr = ir.toMutableRoaringBitmap();
TestIntIteratorFlyweight.java,MutableRoaringBitmap bitmap = MutableRoaringBitmap.bitmapOf();,if (MutableRoaringBitmap != null ) MutableRoaringBitmap bitmap = MutableRoaringBitmap.bitmapOf();
TestIntIteratorFlyweight.java,next = Math.abs(source.nextInt());,if (Math != null ) next = Math.abs(source.nextInt());
TestIterators.java,next = Math.abs(source.nextInt());,if (Math != null ) next = Math.abs(source.nextInt());
TestMemory.java,totalcard += bitmaps[i].getCardinality();,if (bitmaps[i] != null ) totalcard += bitmaps[i].getCardinality();
TestMemoryMapping.java,final int numThreads = Runtime.getRuntime().availableProcessors();,if (Runtime != null ) final int numThreads = Runtime.getRuntime().availableProcessors();
TestMemoryMapping.java,ByteBuffer bb = ByteBuffer.wrap(bos.toByteArray());,if (ByteBuffer != null ) ByteBuffer bb = ByteBuffer.wrap(bos.toByteArray());
TestMemoryMapping.java,ByteBuffer bb = ByteBuffer.wrap(bos.toByteArray());,if (ByteBuffer != null ) ByteBuffer bb = ByteBuffer.wrap(bos.toByteArray());
TestMemoryMapping.java,ByteBuffer bb = ByteBuffer.wrap(bos.toByteArray());,if (ByteBuffer != null ) ByteBuffer bb = ByteBuffer.wrap(bos.toByteArray());
TestMemoryMapping.java,final int ms = mappedbitmaps.size();,if (mappedbitmaps != null ) final int ms = mappedbitmaps.size();
TestMemoryMapping.java,final RoaringBitmap target = mappedbitmaps.get(k).toRoaringBitmap();,if (mappedbitmaps != null ) final RoaringBitmap target = mappedbitmaps.get(k).toRoaringBitmap();
TestMemoryMapping.java,final int truecard = target.getCardinality();,if (target != null ) final int truecard = target.getCardinality();
TestMemoryMapping.java,IntIterator i = target.getIntIterator();,if (target != null ) IntIterator i = target.getIntIterator();
TestMemoryMapping.java,final int truecard = target.getCardinality();,if (target != null ) final int truecard = target.getCardinality();
TestMemoryMapping.java,IntIterator i = target.getIntIterator();,if (target != null ) IntIterator i = target.getIntIterator();
TestMemoryMapping.java,IntIterator i = rb.getIntIterator();,if (rb != null ) IntIterator i = rb.getIntIterator();
TestMemoryMapping.java,ByteBuffer bb = ByteBuffer.wrap(bos.toByteArray());,if (ByteBuffer != null ) ByteBuffer bb = ByteBuffer.wrap(bos.toByteArray());
TestMemoryMapping.java,final int ms = mappedbitmaps.size();,if (mappedbitmaps != null ) final int ms = mappedbitmaps.size();
TestMemoryMapping.java,ByteArrayOutputStream bos = new ByteArrayOutputStream(rr.serializedSizeInBytes());,if (ByteArrayOutputStream(rr != null ) ByteArrayOutputStream bos = new ByteArrayOutputStream(rr.serializedSizeInBytes());
TestMemoryMapping.java,byte[] arr = bos.toByteArray();,if (bos != null ) byte[] arr = bos.toByteArray();
TestMemoryMapping.java,RoaringBitmap rrasroaring = rr.toRoaringBitmap();,if (rr != null ) RoaringBitmap rrasroaring = rr.toRoaringBitmap();
TestMemoryMapping.java,ByteBuffer outbb = ByteBuffer.allocate(rb.serializedSizeInBytes());,if (ByteBuffer != null ) ByteBuffer outbb = ByteBuffer.allocate(rb.serializedSizeInBytes());
TestMemoryMapping.java,ByteBuffer outbb = ByteBuffer.allocate(rb.serializedSizeInBytes());,if (ByteBuffer != null ) ByteBuffer outbb = ByteBuffer.allocate(rb.serializedSizeInBytes());
TestMemoryMapping.java,long pbef = fos.getChannel().position();,if (fos != null ) long pbef = fos.getChannel().position();
TestMemoryMapping.java,long paft = fos.getChannel().position();,if (fos != null ) long paft = fos.getChannel().position();
TestMemoryMapping.java,final long totalcount = fos.getChannel().position();,if (fos != null ) final long totalcount = fos.getChannel().position();
TestMemoryMapping.java,final long bef = System.currentTimeMillis();,if (System != null ) final long bef = System.currentTimeMillis();
TestMemoryMapping.java,final ByteBuffer bb = out.slice();,if (out != null ) final ByteBuffer bb = out.slice();
TestMemoryMapping.java,final long aft = System.currentTimeMillis();,if (System != null ) final long aft = System.currentTimeMillis();
TestMemoryMapping.java,"len = Math.min(len, buf.remaining());","if (buf != null ) len = Math.min(len, buf.remaining());"
TestRange.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRange.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRange.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRange.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRange.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRange.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRange.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRange.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRange.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRange.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRoaringBitmap.java,MutableRoaringBitmap mrb = rb.toMutableRoaringBitmap();,if (rb != null ) MutableRoaringBitmap mrb = rb.toMutableRoaringBitmap();
TestRoaringBitmap.java,ByteBuffer bb = ByteBuffer.wrap(bos.toByteArray());,if (ByteBuffer != null ) ByteBuffer bb = ByteBuffer.wrap(bos.toByteArray());
TestRoaringBitmap.java,int[] array = rb.toArray();,if (rb != null ) int[] array = rb.toArray();
TestRoaringBitmap.java,int[] sarray = srb.toArray();,if (srb != null ) int[] sarray = srb.toArray();
TestRoaringBitmap.java,int thiscard = rb.getCardinality();,if (rb != null ) int thiscard = rb.getCardinality();
TestRoaringBitmap.java,ByteBuffer bb = ByteBuffer.allocateDirect(bos.size());,if (ByteBuffer != null ) ByteBuffer bb = ByteBuffer.allocateDirect(bos.size());
TestRoaringBitmap.java,int[] array = rrand.toArray();,if (rrand != null ) int[] array = rrand.toArray();
TestRoaringBitmap.java,array = rr.toArray();,if (rr != null ) array = rr.toArray();
TestRoaringBitmap.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRoaringBitmap.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRoaringBitmap.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRoaringBitmap.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRoaringBitmap.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRoaringBitmap.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRoaringBitmap.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRoaringBitmap.java,final ByteBuffer bb = ByteBuffer.wrap(bos.toByteArray());,if (ByteBuffer != null ) final ByteBuffer bb = ByteBuffer.wrap(bos.toByteArray());
TestRoaringBitmap.java,int howmuch = rr.serializedSizeInBytes();,if (rr != null ) int howmuch = rr.serializedSizeInBytes();
TestRoaringBitmap.java,int howmuch = rr.serializedSizeInBytes();,if (rr != null ) int howmuch = rr.serializedSizeInBytes();
TestRoaringBitmap.java,final ByteArrayInputStream bis = new ByteArrayInputStream(bos.toByteArray());,if (ByteArrayInputStream(bos != null ) final ByteArrayInputStream bis = new ByteArrayInputStream(bos.toByteArray());
TestRoaringBitmap.java,IntIterator i = rb.getIntIterator();,if (rb != null ) IntIterator i = rb.getIntIterator();
TestRoaringBitmap.java,Iterator<Integer> is = rb.iterator();,if (rb != null ) Iterator<Integer> is = rb.iterator();
TestRoaringBitmap.java,int xs = is.next();,if (is != null ) int xs = is.next();
TestRoaringBitmap.java,return counter == bc.getCardinality();,if (bc != null ) return counter == bc.getCardinality();
TestRunContainer.java,MappeableContainer ac = rc.toBitmapOrArrayContainer(rc.getCardinality());,if (rc != null ) MappeableContainer ac = rc.toBitmapOrArrayContainer(rc.getCardinality());
TestRunContainer.java,MappeableContainer bc = rc.toBitmapOrArrayContainer(rc.getCardinality());,if (rc != null ) MappeableContainer bc = rc.toBitmapOrArrayContainer(rc.getCardinality());
TestRunContainer.java,ByteArrayInputStream bis = new ByteArrayInputStream(bos.toByteArray());,if (ByteArrayInputStream(bos != null ) ByteArrayInputStream bis = new ByteArrayInputStream(bos.toByteArray());
TestRunContainer.java,MappeableRunContainer newContainer = (MappeableRunContainer) in.readObject();,if (in != null ) MappeableRunContainer newContainer = (MappeableRunContainer) in.readObject();
TestRunContainer.java,MappeableRunContainer copy = (MappeableRunContainer) x.clone();,if (x != null ) MappeableRunContainer copy = (MappeableRunContainer) x.clone();
TestRunContainer.java,MappeableRunContainer copy = (MappeableRunContainer) x.clone();,if (x != null ) MappeableRunContainer copy = (MappeableRunContainer) x.clone();
TestRunContainer.java,ans[k] = i.next().intValue();,if (i != null ) ans[k] = i.next().intValue();
FastAggregation.java,PriorityQueue<ContainerPointer> pq = new PriorityQueue<ContainerPointer>(bitmaps.size());,if (PriorityQueue<ContainerPointer>(bitmaps != null ) PriorityQueue<ContainerPointer> pq = new PriorityQueue<ContainerPointer>(bitmaps.size());
BitSetUtil.java,final int cardinality = bitSet.cardinality();,if (bitSet != null ) final int cardinality = bitSet.cardinality();
TestBitSetUtil.java,final IntIterator it = bitmap.getIntIterator();,if (bitmap != null ) final IntIterator it = bitmap.getIntIterator();
TestMemoryMapping.java,IntIterator i = mappedbitmaps.get(k).getIntIterator();,if (mappedbitmaps != null ) IntIterator i = mappedbitmaps.get(k).getIntIterator();
TestMemoryMapping.java,ByteArrayInputStream bis = new ByteArrayInputStream(bos.toByteArray());,if (ByteArrayInputStream(bos != null ) ByteArrayInputStream bis = new ByteArrayInputStream(bos.toByteArray());
TestMemoryMapping.java,int[] content = newr.toArray();,if (newr != null ) int[] content = newr.toArray();
TestMemoryMapping.java,int[] oldcontent = rr.toArray();,if (rr != null ) int[] oldcontent = rr.toArray();
BitSetUtil.java,final int bitsetLength = bitset.length();,if (bitset != null ) final int bitsetLength = bitset.length();
RunContainer.java,int card = this.getCardinality();,if (this != null ) int card = this.getCardinality();
ImmutableRoaringBitmap.java,ImmutableRoaringIntIterator x = (ImmutableRoaringIntIterator) super.clone();,if (super != null ) ImmutableRoaringIntIterator x = (ImmutableRoaringIntIterator) super.clone();
TestRoaringBitmap.java,int[] array = rb.toArray();,if (rb != null ) int[] array = rb.toArray();
TestRoaringBitmap.java,int[] array = rb.toArray();,if (rb != null ) int[] array = rb.toArray();
TestRoaringBitmap.java,Object[] correct= hs.toArray();,if (hs != null ) Object[] correct= hs.toArray();
TestRoaringBitmap.java,Integer[] resor= ArrayUtils.toObject(rbor.toArray());,if (ArrayUtils != null ) Integer[] resor= ArrayUtils.toObject(rbor.toArray());
TestRoaringBitmap.java,Object[] correct= hs.toArray();,if (hs != null ) Object[] correct= hs.toArray();
TestRoaringBitmap.java,Integer[] resand= ArrayUtils.toObject(rband.toArray());,if (ArrayUtils != null ) Integer[] resand= ArrayUtils.toObject(rband.toArray());
TestRoaringBitmap.java,Object[] correct= hs.toArray();,if (hs != null ) Object[] correct= hs.toArray();
TestRoaringBitmap.java,Integer[] resandNot= ArrayUtils.toObject(rbandnot.toArray());,if (ArrayUtils != null ) Integer[] resandNot= ArrayUtils.toObject(rbandnot.toArray());
TestRoaringBitmap.java,Object[] correct= hs.toArray();,if (hs != null ) Object[] correct= hs.toArray();
TestRoaringBitmap.java,Integer[] resxor= ArrayUtils.toObject(rbxor.toArray());,if (ArrayUtils != null ) Integer[] resxor= ArrayUtils.toObject(rbxor.toArray());
TestRoaringBitmap.java,final ByteArrayInputStream bis = new ByteArrayInputStream(bos.toByteArray());,if (ByteArrayInputStream(bos != null ) final ByteArrayInputStream bis = new ByteArrayInputStream(bos.toByteArray());
TestRoaringBitmap.java,final ByteArrayInputStream bis = new ByteArrayInputStream(bos.toByteArray());,if (ByteArrayInputStream(bos != null ) final ByteArrayInputStream bis = new ByteArrayInputStream(bos.toByteArray());
TestRoaringBitmap.java,final ByteArrayInputStream bis = new ByteArrayInputStream(bos.toByteArray());,if (ByteArrayInputStream(bos != null ) final ByteArrayInputStream bis = new ByteArrayInputStream(bos.toByteArray());
TestRoaringBitmap.java,int howmuch = rr.serializedSizeInBytes();,if (rr != null ) int howmuch = rr.serializedSizeInBytes();
TestRoaringBitmap.java,final ByteArrayInputStream bis = new ByteArrayInputStream(bos.toByteArray());,if (ByteArrayInputStream(bos != null ) final ByteArrayInputStream bis = new ByteArrayInputStream(bos.toByteArray());
MappeableBitmapContainer.java,long[] ba = this.bitmap.array();,if (this != null ) long[] ba = this.bitmap.array();
BitmapContainer.java,bitmap[k] = Long.reverseBytes(in.readLong());,if (Long != null ) bitmap[k] = Long.reverseBytes(in.readLong());
MappeableBitmapContainer.java,long[] b = this.bitmap.array();,if (this != null ) long[] b = this.bitmap.array();
MappeableBitmapContainer.java,long[] b = this.bitmap.array();,if (this != null ) long[] b = this.bitmap.array();
RandomAccess.java,int lv =  basic.getReverseIntIterator().next();,if (basic != null ) int lv =  basic.getReverseIntIterator().next();
ArrayContainer.java,BitmapContainer a = this.toBitmapContainer();,if (this != null ) BitmapContainer a = this.toBitmapContainer();
FastAggregation.java,ContainerPointer x = bitmaps[k].highLowContainer.getContainerPointer();,if (bitmaps[k] != null ) ContainerPointer x = bitmaps[k].highLowContainer.getContainerPointer();
FastAggregation.java,ContainerPointer x = pq.poll();,if (pq != null ) ContainerPointer x = pq.poll();
FastAggregation.java,newc = newc.lazyIOR(x.getContainer());,if (newc != null ) newc = newc.lazyIOR(x.getContainer());
FastAggregation.java,newc = newc.repairAfterLazy();,if (newc != null ) newc = newc.repairAfterLazy();
FastAggregation.java,ContainerPointer x = bitmaps[k].highLowContainer.getContainerPointer();,if (bitmaps[k] != null ) ContainerPointer x = bitmaps[k].highLowContainer.getContainerPointer();
FastAggregation.java,ContainerPointer x = pq.poll();,if (pq != null ) ContainerPointer x = pq.poll();
FastAggregation.java,newc = newc.ixor(x.getContainer());,if (newc != null ) newc = newc.ixor(x.getContainer());
MappeableArrayContainer.java,MappeableBitmapContainer a = this.toBitmapContainer();,if (this != null ) MappeableBitmapContainer a = this.toBitmapContainer();
MappeableArrayContainer.java,sarray = content.array();,if (content != null ) sarray = content.array();
MappeableArrayContainer.java,MappeableBitmapContainer a = this.toBitmapContainer();,if (this != null ) MappeableBitmapContainer a = this.toBitmapContainer();
MappeableArrayContainer.java,MappeableBitmapContainer a = this.toBitmapContainer();,if (this != null ) MappeableBitmapContainer a = this.toBitmapContainer();
MappeableArrayContainer.java,short[] answerarray = answer.content.array();,if (answer != null ) short[] answerarray = answer.content.array();
MappeableArrayContainer.java,MappeableBitmapContainer a = this.toBitmapContainer();,if (this != null ) MappeableBitmapContainer a = this.toBitmapContainer();
MappeableRunContainer.java,int card = this.getCardinality();,if (this != null ) int card = this.getCardinality();
MappeableRunContainer.java,int card = this.getCardinality();,if (this != null ) int card = this.getCardinality();
MappeableBitmapContainer.java,this.bitmap = LongBuffer.allocate(newBitmap.limit());,if (LongBuffer != null ) this.bitmap = LongBuffer.allocate(newBitmap.limit());
ImmutableRoaringArray.java,ByteBuffer tmp = buffer.duplicate();,if (buffer != null ) ByteBuffer tmp = buffer.duplicate();
ImmutableRoaringArray.java,final ShortBuffer shortArray = tmp.asShortBuffer().slice();,if (tmp != null ) final ShortBuffer shortArray = tmp.asShortBuffer().slice();
ImmutableRoaringArray.java,final LongBuffer bitmapArray = tmp.asLongBuffer().slice();,if (tmp != null ) final LongBuffer bitmapArray = tmp.asLongBuffer().slice();
ImmutableRoaringArray.java,final ShortBuffer shortArray = tmp.asShortBuffer().slice();,if (tmp != null ) final ShortBuffer shortArray = tmp.asShortBuffer().slice();
ImmutableRoaringArray.java,int nbrruns = BufferUtil.toIntUnsigned(buffer.getShort());,if (BufferUtil != null ) int nbrruns = BufferUtil.toIntUnsigned(buffer.getShort());
ImmutableRoaringArray.java,final ShortBuffer shortArray = buffer.asShortBuffer().slice();,if (buffer != null ) final ShortBuffer shortArray = buffer.asShortBuffer().slice();
ImmutableRoaringArray.java,final LongBuffer bitmapArray = buffer.asLongBuffer().slice();,if (buffer != null ) final LongBuffer bitmapArray = buffer.asLongBuffer().slice();
ImmutableRoaringArray.java,final ShortBuffer shortArray = buffer.asShortBuffer().slice();,if (buffer != null ) final ShortBuffer shortArray = buffer.asShortBuffer().slice();
TestMemoryMapping.java,"len = Math.min(len, buf.remaining());","if (buf != null ) len = Math.min(len, buf.remaining());"
MappedRunContainerRealDataBenchmarkWideAnd.java,int answer = bitmapand.size();,if (bitmapand != null ) int answer = bitmapand.size();
MappedRunContainerRealDataBenchmarkWideAnd.java,int answer = bitmapand.size();,if (bitmapand != null ) int answer = bitmapand.size();
MappedRunContainerRealDataBenchmarkWideAnd.java,EWAHCompressedBitmap bitmapand = (EWAHCompressedBitmap) i.next();,if (i != null ) EWAHCompressedBitmap bitmapand = (EWAHCompressedBitmap) i.next();
MappedRunContainerRealDataBenchmarkWideAnd.java,int answer = bitmapand.cardinality();,if (bitmapand != null ) int answer = bitmapand.cardinality();
MappedRunContainerRealDataBenchmarkWideAnd.java,int answer = bitmapand.cardinality();,if (bitmapand != null ) int answer = bitmapand.cardinality();
MappedRunContainerRealDataBenchmarkWideAnd.java,final long totalcount = fos.getChannel().position();,if (fos != null ) final long totalcount = fos.getChannel().position();
MappedRunContainerRealDataBenchmarkWideAnd.java,ArrayList<ImmutableRoaringBitmap> answer = new ArrayList<ImmutableRoaringBitmap>(source.size());,if (ArrayList<ImmutableRoaringBitmap>(source != null ) ArrayList<ImmutableRoaringBitmap> answer = new ArrayList<ImmutableRoaringBitmap>(source.size());
MappedRunContainerRealDataBenchmarkWideAnd.java,final ByteBuffer bb = out.slice();,if (out != null ) final ByteBuffer bb = out.slice();
MappedRunContainerRealDataBenchmarkWideAnd.java,MutableRoaringBitmap equiv = source.get(answer.size());,if (source != null ) MutableRoaringBitmap equiv = source.get(answer.size());
MappedRunContainerRealDataBenchmarkWideAnd.java,byte[] data = ImmutableConciseSet.newImmutableFromMutable(cc).toBytes();,if (ImmutableConciseSet != null ) byte[] data = ImmutableConciseSet.newImmutableFromMutable(cc).toBytes();
MappedRunContainerRealDataBenchmarkWideAnd.java,final long totalcount = fos.getChannel().position();,if (fos != null ) final long totalcount = fos.getChannel().position();
MappedRunContainerRealDataBenchmarkWideAnd.java,ArrayList<ImmutableConciseSet> answer = new ArrayList<ImmutableConciseSet>(source.size());,if (ArrayList<ImmutableConciseSet>(source != null ) ArrayList<ImmutableConciseSet> answer = new ArrayList<ImmutableConciseSet>(source.size());
MappedRunContainerRealDataBenchmarkWideAnd.java,final ByteBuffer bb = out.slice();,if (out != null ) final ByteBuffer bb = out.slice();
MappedRunContainerRealDataBenchmarkWideAnd.java,byte[] newdata = newbitmap.toBytes();,if (newbitmap != null ) byte[] newdata = newbitmap.toBytes();
MappedRunContainerRealDataBenchmarkWideAnd.java,final long totalcount = fos.getChannel().position();,if (fos != null ) final long totalcount = fos.getChannel().position();
MappedRunContainerRealDataBenchmarkWideAnd.java,ArrayList<EWAHCompressedBitmap> answer = new ArrayList<EWAHCompressedBitmap>(source.size());,if (ArrayList<EWAHCompressedBitmap>(source != null ) ArrayList<EWAHCompressedBitmap> answer = new ArrayList<EWAHCompressedBitmap>(source.size());
MappedRunContainerRealDataBenchmarkWideAnd.java,final ByteBuffer bb = out.slice();,if (out != null ) final ByteBuffer bb = out.slice();
MappedRunContainerRealDataBenchmarkWideAnd.java,EWAHCompressedBitmap equiv = source.get(answer.size());,if (source != null ) EWAHCompressedBitmap equiv = source.get(answer.size());
MappedRunContainerRealDataBenchmarkWideAnd.java,final long totalcount = fos.getChannel().position();,if (fos != null ) final long totalcount = fos.getChannel().position();
MappedRunContainerRealDataBenchmarkWideAnd.java,final ByteBuffer bb = out.slice();,if (out != null ) final ByteBuffer bb = out.slice();
MappedRunContainerRealDataBenchmarkWideAnd.java,MutableRoaringBitmap mopti = mbasic.clone();,if (mbasic != null ) MutableRoaringBitmap mopti = mbasic.clone();
RunContainerRealDataBenchmarkWideAnd.java,int answer = bitmapor.size();,if (bitmapor != null ) int answer = bitmapor.size();
RunContainerRealDataBenchmarkWideAnd.java,int answer = bitmapor.size();,if (bitmapor != null ) int answer = bitmapor.size();
RunContainerRealDataBenchmarkWideAnd.java,EWAHCompressedBitmap bitmapor = (EWAHCompressedBitmap) i.next();,if (i != null ) EWAHCompressedBitmap bitmapor = (EWAHCompressedBitmap) i.next();
RunContainerRealDataBenchmarkWideAnd.java,int answer = bitmapor.cardinality();,if (bitmapor != null ) int answer = bitmapor.cardinality();
RunContainerRealDataBenchmarkWideAnd.java,int answer = bitmapor.cardinality();,if (bitmapor != null ) int answer = bitmapor.cardinality();
RunContainerRealDataBenchmarkWideAnd.java,ewahsize += ewahBitmap.serializedSizeInBytes();,if (ewahBitmap != null ) ewahsize += ewahBitmap.serializedSizeInBytes();
RunContainerRealDataBenchmarkWideAnd.java,RoaringBitmap opti = basic.clone();,if (basic != null ) RoaringBitmap opti = basic.clone();
RunContainerRealDataBenchmarkWideAnd.java,normalsize += basic.serializedSizeInBytes();,if (basic != null ) normalsize += basic.serializedSizeInBytes();
RunContainerRealDataBenchmarkWideAnd.java,runsize += opti.serializedSizeInBytes();,if (opti != null ) runsize += opti.serializedSizeInBytes();
MappedRunContainerRealDataBenchmarkWideOrPQ.java,int answer = bitmapor.size();,if (bitmapor != null ) int answer = bitmapor.size();
MappedRunContainerRealDataBenchmarkWideOrPQ.java,int answer = bitmapor.size();,if (bitmapor != null ) int answer = bitmapor.size();
MappedRunContainerRealDataBenchmarkWideOrPQ.java,int answer = bitmapor.cardinality();,if (bitmapor != null ) int answer = bitmapor.cardinality();
MappedRunContainerRealDataBenchmarkWideOrPQ.java,int answer = bitmapor.cardinality();,if (bitmapor != null ) int answer = bitmapor.cardinality();
MappedRunContainerRealDataBenchmarkWideOrPQ.java,final long totalcount = fos.getChannel().position();,if (fos != null ) final long totalcount = fos.getChannel().position();
MappedRunContainerRealDataBenchmarkWideOrPQ.java,ArrayList<ImmutableRoaringBitmap> answer = new ArrayList<ImmutableRoaringBitmap>(source.size());,if (ArrayList<ImmutableRoaringBitmap>(source != null ) ArrayList<ImmutableRoaringBitmap> answer = new ArrayList<ImmutableRoaringBitmap>(source.size());
MappedRunContainerRealDataBenchmarkWideOrPQ.java,final ByteBuffer bb = out.slice();,if (out != null ) final ByteBuffer bb = out.slice();
MappedRunContainerRealDataBenchmarkWideOrPQ.java,MutableRoaringBitmap equiv = source.get(answer.size());,if (source != null ) MutableRoaringBitmap equiv = source.get(answer.size());
MappedRunContainerRealDataBenchmarkWideOrPQ.java,byte[] data = ImmutableConciseSet.newImmutableFromMutable(cc).toBytes();,if (ImmutableConciseSet != null ) byte[] data = ImmutableConciseSet.newImmutableFromMutable(cc).toBytes();
MappedRunContainerRealDataBenchmarkWideOrPQ.java,final long totalcount = fos.getChannel().position();,if (fos != null ) final long totalcount = fos.getChannel().position();
MappedRunContainerRealDataBenchmarkWideOrPQ.java,ArrayList<ImmutableConciseSet> answer = new ArrayList<ImmutableConciseSet>(source.size());,if (ArrayList<ImmutableConciseSet>(source != null ) ArrayList<ImmutableConciseSet> answer = new ArrayList<ImmutableConciseSet>(source.size());
MappedRunContainerRealDataBenchmarkWideOrPQ.java,final ByteBuffer bb = out.slice();,if (out != null ) final ByteBuffer bb = out.slice();
MappedRunContainerRealDataBenchmarkWideOrPQ.java,byte[] newdata = newbitmap.toBytes();,if (newbitmap != null ) byte[] newdata = newbitmap.toBytes();
MappedRunContainerRealDataBenchmarkWideOrPQ.java,final long totalcount = fos.getChannel().position();,if (fos != null ) final long totalcount = fos.getChannel().position();
MappedRunContainerRealDataBenchmarkWideOrPQ.java,ArrayList<EWAHCompressedBitmap> answer = new ArrayList<EWAHCompressedBitmap>(source.size());,if (ArrayList<EWAHCompressedBitmap>(source != null ) ArrayList<EWAHCompressedBitmap> answer = new ArrayList<EWAHCompressedBitmap>(source.size());
MappedRunContainerRealDataBenchmarkWideOrPQ.java,final ByteBuffer bb = out.slice();,if (out != null ) final ByteBuffer bb = out.slice();
MappedRunContainerRealDataBenchmarkWideOrPQ.java,EWAHCompressedBitmap equiv = source.get(answer.size());,if (source != null ) EWAHCompressedBitmap equiv = source.get(answer.size());
MappedRunContainerRealDataBenchmarkWideOrPQ.java,final long totalcount = fos.getChannel().position();,if (fos != null ) final long totalcount = fos.getChannel().position();
MappedRunContainerRealDataBenchmarkWideOrPQ.java,final ByteBuffer bb = out.slice();,if (out != null ) final ByteBuffer bb = out.slice();
MappedRunContainerRealDataBenchmarkWideOrPQ.java,MutableRoaringBitmap mopti = mbasic.clone();,if (mbasic != null ) MutableRoaringBitmap mopti = mbasic.clone();
MappedRunContainerRealDataBenchmarkWideOrPQ.java,count = mac.size();,if (mac != null ) count = mac.size();
RunContainerRealDataBenchmarkWideOrPQ.java,int answer = bitmapor.size();,if (bitmapor != null ) int answer = bitmapor.size();
RunContainerRealDataBenchmarkWideOrPQ.java,int answer = bitmapor.size();,if (bitmapor != null ) int answer = bitmapor.size();
RunContainerRealDataBenchmarkWideOrPQ.java,int answer = bitmapor.cardinality();,if (bitmapor != null ) int answer = bitmapor.cardinality();
RunContainerRealDataBenchmarkWideOrPQ.java,int answer = bitmapor.cardinality();,if (bitmapor != null ) int answer = bitmapor.cardinality();
RunContainerRealDataBenchmarkWideOrPQ.java,ewahsize += ewahBitmap.serializedSizeInBytes();,if (ewahBitmap != null ) ewahsize += ewahBitmap.serializedSizeInBytes();
RunContainerRealDataBenchmarkWideOrPQ.java,RoaringBitmap opti = basic.clone();,if (basic != null ) RoaringBitmap opti = basic.clone();
RunContainerRealDataBenchmarkWideOrPQ.java,normalsize += basic.serializedSizeInBytes();,if (basic != null ) normalsize += basic.serializedSizeInBytes();
RunContainerRealDataBenchmarkWideOrPQ.java,runsize += opti.serializedSizeInBytes();,if (opti != null ) runsize += opti.serializedSizeInBytes();
RunContainerRealDataBenchmarkWideOrPQ.java,count = rc.size();,if (rc != null ) count = rc.size();
MappedRunContainerRealDataBenchmarkWideOrNaive.java,int answer = bitmapor.size();,if (bitmapor != null ) int answer = bitmapor.size();
MappedRunContainerRealDataBenchmarkWideOrNaive.java,int answer = bitmapor.size();,if (bitmapor != null ) int answer = bitmapor.size();
MappedRunContainerRealDataBenchmarkWideOrNaive.java,EWAHCompressedBitmap bitmapor = (EWAHCompressedBitmap) i.next();,if (i != null ) EWAHCompressedBitmap bitmapor = (EWAHCompressedBitmap) i.next();
MappedRunContainerRealDataBenchmarkWideOrNaive.java,int answer = bitmapor.cardinality();,if (bitmapor != null ) int answer = bitmapor.cardinality();
MappedRunContainerRealDataBenchmarkWideOrNaive.java,int answer = bitmapor.cardinality();,if (bitmapor != null ) int answer = bitmapor.cardinality();
MappedRunContainerRealDataBenchmarkWideOrNaive.java,final long totalcount = fos.getChannel().position();,if (fos != null ) final long totalcount = fos.getChannel().position();
MappedRunContainerRealDataBenchmarkWideOrNaive.java,ArrayList<ImmutableRoaringBitmap> answer = new ArrayList<ImmutableRoaringBitmap>(source.size());,if (ArrayList<ImmutableRoaringBitmap>(source != null ) ArrayList<ImmutableRoaringBitmap> answer = new ArrayList<ImmutableRoaringBitmap>(source.size());
MappedRunContainerRealDataBenchmarkWideOrNaive.java,final ByteBuffer bb = out.slice();,if (out != null ) final ByteBuffer bb = out.slice();
MappedRunContainerRealDataBenchmarkWideOrNaive.java,MutableRoaringBitmap equiv = source.get(answer.size());,if (source != null ) MutableRoaringBitmap equiv = source.get(answer.size());
MappedRunContainerRealDataBenchmarkWideOrNaive.java,byte[] data = ImmutableConciseSet.newImmutableFromMutable(cc).toBytes();,if (ImmutableConciseSet != null ) byte[] data = ImmutableConciseSet.newImmutableFromMutable(cc).toBytes();
MappedRunContainerRealDataBenchmarkWideOrNaive.java,final long totalcount = fos.getChannel().position();,if (fos != null ) final long totalcount = fos.getChannel().position();
MappedRunContainerRealDataBenchmarkWideOrNaive.java,ArrayList<ImmutableConciseSet> answer = new ArrayList<ImmutableConciseSet>(source.size());,if (ArrayList<ImmutableConciseSet>(source != null ) ArrayList<ImmutableConciseSet> answer = new ArrayList<ImmutableConciseSet>(source.size());
MappedRunContainerRealDataBenchmarkWideOrNaive.java,final ByteBuffer bb = out.slice();,if (out != null ) final ByteBuffer bb = out.slice();
MappedRunContainerRealDataBenchmarkWideOrNaive.java,byte[] newdata = newbitmap.toBytes();,if (newbitmap != null ) byte[] newdata = newbitmap.toBytes();
MappedRunContainerRealDataBenchmarkWideOrNaive.java,final long totalcount = fos.getChannel().position();,if (fos != null ) final long totalcount = fos.getChannel().position();
MappedRunContainerRealDataBenchmarkWideOrNaive.java,ArrayList<EWAHCompressedBitmap> answer = new ArrayList<EWAHCompressedBitmap>(source.size());,if (ArrayList<EWAHCompressedBitmap>(source != null ) ArrayList<EWAHCompressedBitmap> answer = new ArrayList<EWAHCompressedBitmap>(source.size());
MappedRunContainerRealDataBenchmarkWideOrNaive.java,final ByteBuffer bb = out.slice();,if (out != null ) final ByteBuffer bb = out.slice();
MappedRunContainerRealDataBenchmarkWideOrNaive.java,EWAHCompressedBitmap equiv = source.get(answer.size());,if (source != null ) EWAHCompressedBitmap equiv = source.get(answer.size());
MappedRunContainerRealDataBenchmarkWideOrNaive.java,final long totalcount = fos.getChannel().position();,if (fos != null ) final long totalcount = fos.getChannel().position();
MappedRunContainerRealDataBenchmarkWideOrNaive.java,final ByteBuffer bb = out.slice();,if (out != null ) final ByteBuffer bb = out.slice();
MappedRunContainerRealDataBenchmarkWideOrNaive.java,MutableRoaringBitmap mopti = mbasic.clone();,if (mbasic != null ) MutableRoaringBitmap mopti = mbasic.clone();
MappedRunContainerRealDataBenchmarkWideOrNaive.java,count = mac.size();,if (mac != null ) count = mac.size();
RunContainerRealDataBenchmarkWideOrNaive.java,int answer = bitmapor.size();,if (bitmapor != null ) int answer = bitmapor.size();
RunContainerRealDataBenchmarkWideOrNaive.java,int answer = bitmapor.size();,if (bitmapor != null ) int answer = bitmapor.size();
RunContainerRealDataBenchmarkWideOrNaive.java,EWAHCompressedBitmap bitmapor = (EWAHCompressedBitmap) i.next();,if (i != null ) EWAHCompressedBitmap bitmapor = (EWAHCompressedBitmap) i.next();
RunContainerRealDataBenchmarkWideOrNaive.java,int answer = bitmapor.cardinality();,if (bitmapor != null ) int answer = bitmapor.cardinality();
RunContainerRealDataBenchmarkWideOrNaive.java,int answer = bitmapor.cardinality();,if (bitmapor != null ) int answer = bitmapor.cardinality();
RunContainerRealDataBenchmarkWideOrNaive.java,ewahsize += ewahBitmap.serializedSizeInBytes();,if (ewahBitmap != null ) ewahsize += ewahBitmap.serializedSizeInBytes();
RunContainerRealDataBenchmarkWideOrNaive.java,RoaringBitmap opti = basic.clone();,if (basic != null ) RoaringBitmap opti = basic.clone();
RunContainerRealDataBenchmarkWideOrNaive.java,normalsize += basic.serializedSizeInBytes();,if (basic != null ) normalsize += basic.serializedSizeInBytes();
RunContainerRealDataBenchmarkWideOrNaive.java,runsize += opti.serializedSizeInBytes();,if (opti != null ) runsize += opti.serializedSizeInBytes();
RunContainerRealDataBenchmarkWideOrNaive.java,count = rc.size();,if (rc != null ) count = rc.size();
RunContainerRealDataBenchmarkAndNot.java,ewahsize += ewahBitmap.serializedSizeInBytes();,if (ewahBitmap != null ) ewahsize += ewahBitmap.serializedSizeInBytes();
RunContainerRealDataBenchmarkAndNot.java,RoaringBitmap opti = basic.clone();,if (basic != null ) RoaringBitmap opti = basic.clone();
RunContainerRealDataBenchmarkAndNot.java,normalsize += basic.serializedSizeInBytes();,if (basic != null ) normalsize += basic.serializedSizeInBytes();
RunContainerRealDataBenchmarkAndNot.java,runsize += opti.serializedSizeInBytes();,if (opti != null ) runsize += opti.serializedSizeInBytes();
RunContainerRealDataBenchmarkXor.java,ewahsize += ewahBitmap.serializedSizeInBytes();,if (ewahBitmap != null ) ewahsize += ewahBitmap.serializedSizeInBytes();
RunContainerRealDataBenchmarkXor.java,RoaringBitmap opti = basic.clone();,if (basic != null ) RoaringBitmap opti = basic.clone();
RunContainerRealDataBenchmarkXor.java,normalsize += basic.serializedSizeInBytes();,if (basic != null ) normalsize += basic.serializedSizeInBytes();
RunContainerRealDataBenchmarkXor.java,runsize += opti.serializedSizeInBytes();,if (opti != null ) runsize += opti.serializedSizeInBytes();
MappedRunContainerRealDataBenchmarkOr.java,final long totalcount = fos.getChannel().position();,if (fos != null ) final long totalcount = fos.getChannel().position();
MappedRunContainerRealDataBenchmarkOr.java,ArrayList<ImmutableRoaringBitmap> answer = new ArrayList<ImmutableRoaringBitmap>(source.size());,if (ArrayList<ImmutableRoaringBitmap>(source != null ) ArrayList<ImmutableRoaringBitmap> answer = new ArrayList<ImmutableRoaringBitmap>(source.size());
MappedRunContainerRealDataBenchmarkOr.java,final ByteBuffer bb = out.slice();,if (out != null ) final ByteBuffer bb = out.slice();
MappedRunContainerRealDataBenchmarkOr.java,MutableRoaringBitmap equiv = source.get(answer.size());,if (source != null ) MutableRoaringBitmap equiv = source.get(answer.size());
MappedRunContainerRealDataBenchmarkOr.java,byte[] data = ImmutableConciseSet.newImmutableFromMutable(cc).toBytes();,if (ImmutableConciseSet != null ) byte[] data = ImmutableConciseSet.newImmutableFromMutable(cc).toBytes();
MappedRunContainerRealDataBenchmarkOr.java,final long totalcount = fos.getChannel().position();,if (fos != null ) final long totalcount = fos.getChannel().position();
MappedRunContainerRealDataBenchmarkOr.java,ArrayList<ImmutableConciseSet> answer = new ArrayList<ImmutableConciseSet>(source.size());,if (ArrayList<ImmutableConciseSet>(source != null ) ArrayList<ImmutableConciseSet> answer = new ArrayList<ImmutableConciseSet>(source.size());
MappedRunContainerRealDataBenchmarkOr.java,final ByteBuffer bb = out.slice();,if (out != null ) final ByteBuffer bb = out.slice();
MappedRunContainerRealDataBenchmarkOr.java,byte[] newdata = newbitmap.toBytes();,if (newbitmap != null ) byte[] newdata = newbitmap.toBytes();
MappedRunContainerRealDataBenchmarkOr.java,final long totalcount = fos.getChannel().position();,if (fos != null ) final long totalcount = fos.getChannel().position();
MappedRunContainerRealDataBenchmarkOr.java,ArrayList<EWAHCompressedBitmap> answer = new ArrayList<EWAHCompressedBitmap>(source.size());,if (ArrayList<EWAHCompressedBitmap>(source != null ) ArrayList<EWAHCompressedBitmap> answer = new ArrayList<EWAHCompressedBitmap>(source.size());
MappedRunContainerRealDataBenchmarkOr.java,final ByteBuffer bb = out.slice();,if (out != null ) final ByteBuffer bb = out.slice();
MappedRunContainerRealDataBenchmarkOr.java,EWAHCompressedBitmap equiv = source.get(answer.size());,if (source != null ) EWAHCompressedBitmap equiv = source.get(answer.size());
MappedRunContainerRealDataBenchmarkOr.java,final long totalcount = fos.getChannel().position();,if (fos != null ) final long totalcount = fos.getChannel().position();
MappedRunContainerRealDataBenchmarkOr.java,final ByteBuffer bb = out.slice();,if (out != null ) final ByteBuffer bb = out.slice();
MappedRunContainerRealDataBenchmarkOr.java,MutableRoaringBitmap mopti = mbasic.clone();,if (mbasic != null ) MutableRoaringBitmap mopti = mbasic.clone();
RunContainerRealDataBenchmarkOr.java,ewahsize += ewahBitmap.serializedSizeInBytes();,if (ewahBitmap != null ) ewahsize += ewahBitmap.serializedSizeInBytes();
RunContainerRealDataBenchmarkOr.java,RoaringBitmap opti = basic.clone();,if (basic != null ) RoaringBitmap opti = basic.clone();
RunContainerRealDataBenchmarkOr.java,normalsize += basic.serializedSizeInBytes();,if (basic != null ) normalsize += basic.serializedSizeInBytes();
RunContainerRealDataBenchmarkOr.java,runsize += opti.serializedSizeInBytes();,if (opti != null ) runsize += opti.serializedSizeInBytes();
MappedRunContainerRealDataBenchmarkReverseIterate.java,final long totalcount = fos.getChannel().position();,if (fos != null ) final long totalcount = fos.getChannel().position();
MappedRunContainerRealDataBenchmarkReverseIterate.java,ArrayList<ImmutableRoaringBitmap> answer = new ArrayList<ImmutableRoaringBitmap>(source.size());,if (ArrayList<ImmutableRoaringBitmap>(source != null ) ArrayList<ImmutableRoaringBitmap> answer = new ArrayList<ImmutableRoaringBitmap>(source.size());
MappedRunContainerRealDataBenchmarkReverseIterate.java,final ByteBuffer bb = out.slice();,if (out != null ) final ByteBuffer bb = out.slice();
MappedRunContainerRealDataBenchmarkReverseIterate.java,byte[] data = ImmutableConciseSet.newImmutableFromMutable(cc).toBytes();,if (ImmutableConciseSet != null ) byte[] data = ImmutableConciseSet.newImmutableFromMutable(cc).toBytes();
MappedRunContainerRealDataBenchmarkReverseIterate.java,final long totalcount = fos.getChannel().position();,if (fos != null ) final long totalcount = fos.getChannel().position();
MappedRunContainerRealDataBenchmarkReverseIterate.java,ArrayList<ImmutableConciseSet> answer = new ArrayList<ImmutableConciseSet>(source.size());,if (ArrayList<ImmutableConciseSet>(source != null ) ArrayList<ImmutableConciseSet> answer = new ArrayList<ImmutableConciseSet>(source.size());
MappedRunContainerRealDataBenchmarkReverseIterate.java,final ByteBuffer bb = out.slice();,if (out != null ) final ByteBuffer bb = out.slice();
MappedRunContainerRealDataBenchmarkReverseIterate.java,byte[] newdata = newbitmap.toBytes();,if (newbitmap != null ) byte[] newdata = newbitmap.toBytes();
MappedRunContainerRealDataBenchmarkReverseIterate.java,final long totalcount = fos.getChannel().position();,if (fos != null ) final long totalcount = fos.getChannel().position();
MappedRunContainerRealDataBenchmarkReverseIterate.java,ArrayList<EWAHCompressedBitmap> answer = new ArrayList<EWAHCompressedBitmap>(source.size());,if (ArrayList<EWAHCompressedBitmap>(source != null ) ArrayList<EWAHCompressedBitmap> answer = new ArrayList<EWAHCompressedBitmap>(source.size());
MappedRunContainerRealDataBenchmarkReverseIterate.java,final ByteBuffer bb = out.slice();,if (out != null ) final ByteBuffer bb = out.slice();
MappedRunContainerRealDataBenchmarkReverseIterate.java,EWAHCompressedBitmap equiv = source.get(answer.size());,if (source != null ) EWAHCompressedBitmap equiv = source.get(answer.size());
MappedRunContainerRealDataBenchmarkReverseIterate.java,final long totalcount = fos.getChannel().position();,if (fos != null ) final long totalcount = fos.getChannel().position();
MappedRunContainerRealDataBenchmarkReverseIterate.java,final ByteBuffer bb = out.slice();,if (out != null ) final ByteBuffer bb = out.slice();
MappedRunContainerRealDataBenchmarkReverseIterate.java,MutableRoaringBitmap mopti = mbasic.clone();,if (mbasic != null ) MutableRoaringBitmap mopti = mbasic.clone();
RunContainerRealDataBenchmarkReverseIterate.java,ewahsize += ewahBitmap.serializedSizeInBytes();,if (ewahBitmap != null ) ewahsize += ewahBitmap.serializedSizeInBytes();
RunContainerRealDataBenchmarkReverseIterate.java,RoaringBitmap opti = basic.clone();,if (basic != null ) RoaringBitmap opti = basic.clone();
RunContainerRealDataBenchmarkReverseIterate.java,normalsize += basic.serializedSizeInBytes();,if (basic != null ) normalsize += basic.serializedSizeInBytes();
RunContainerRealDataBenchmarkReverseIterate.java,runsize += opti.serializedSizeInBytes();,if (opti != null ) runsize += opti.serializedSizeInBytes();
MappedRunContainerRealDataBenchmarkIterate.java,final long totalcount = fos.getChannel().position();,if (fos != null ) final long totalcount = fos.getChannel().position();
MappedRunContainerRealDataBenchmarkIterate.java,ArrayList<ImmutableRoaringBitmap> answer = new ArrayList<ImmutableRoaringBitmap>(source.size());,if (ArrayList<ImmutableRoaringBitmap>(source != null ) ArrayList<ImmutableRoaringBitmap> answer = new ArrayList<ImmutableRoaringBitmap>(source.size());
MappedRunContainerRealDataBenchmarkIterate.java,final ByteBuffer bb = out.slice();,if (out != null ) final ByteBuffer bb = out.slice();
MappedRunContainerRealDataBenchmarkIterate.java,byte[] data = ImmutableConciseSet.newImmutableFromMutable(cc).toBytes();,if (ImmutableConciseSet != null ) byte[] data = ImmutableConciseSet.newImmutableFromMutable(cc).toBytes();
MappedRunContainerRealDataBenchmarkIterate.java,final long totalcount = fos.getChannel().position();,if (fos != null ) final long totalcount = fos.getChannel().position();
MappedRunContainerRealDataBenchmarkIterate.java,ArrayList<ImmutableConciseSet> answer = new ArrayList<ImmutableConciseSet>(source.size());,if (ArrayList<ImmutableConciseSet>(source != null ) ArrayList<ImmutableConciseSet> answer = new ArrayList<ImmutableConciseSet>(source.size());
MappedRunContainerRealDataBenchmarkIterate.java,final ByteBuffer bb = out.slice();,if (out != null ) final ByteBuffer bb = out.slice();
MappedRunContainerRealDataBenchmarkIterate.java,byte[] newdata = newbitmap.toBytes();,if (newbitmap != null ) byte[] newdata = newbitmap.toBytes();
MappedRunContainerRealDataBenchmarkIterate.java,final long totalcount = fos.getChannel().position();,if (fos != null ) final long totalcount = fos.getChannel().position();
MappedRunContainerRealDataBenchmarkIterate.java,ArrayList<EWAHCompressedBitmap> answer = new ArrayList<EWAHCompressedBitmap>(source.size());,if (ArrayList<EWAHCompressedBitmap>(source != null ) ArrayList<EWAHCompressedBitmap> answer = new ArrayList<EWAHCompressedBitmap>(source.size());
MappedRunContainerRealDataBenchmarkIterate.java,final ByteBuffer bb = out.slice();,if (out != null ) final ByteBuffer bb = out.slice();
MappedRunContainerRealDataBenchmarkIterate.java,EWAHCompressedBitmap equiv = source.get(answer.size());,if (source != null ) EWAHCompressedBitmap equiv = source.get(answer.size());
MappedRunContainerRealDataBenchmarkIterate.java,final long totalcount = fos.getChannel().position();,if (fos != null ) final long totalcount = fos.getChannel().position();
MappedRunContainerRealDataBenchmarkIterate.java,final ByteBuffer bb = out.slice();,if (out != null ) final ByteBuffer bb = out.slice();
MappedRunContainerRealDataBenchmarkIterate.java,MutableRoaringBitmap mopti = mbasic.clone();,if (mbasic != null ) MutableRoaringBitmap mopti = mbasic.clone();
RunContainerRealDataBenchmarkIterate.java,ewahsize += ewahBitmap.serializedSizeInBytes();,if (ewahBitmap != null ) ewahsize += ewahBitmap.serializedSizeInBytes();
RunContainerRealDataBenchmarkIterate.java,RoaringBitmap opti = basic.clone();,if (basic != null ) RoaringBitmap opti = basic.clone();
RunContainerRealDataBenchmarkIterate.java,normalsize += basic.serializedSizeInBytes();,if (basic != null ) normalsize += basic.serializedSizeInBytes();
RunContainerRealDataBenchmarkIterate.java,runsize += opti.serializedSizeInBytes();,if (opti != null ) runsize += opti.serializedSizeInBytes();
MappedRunContainerRealDataBenchmarkAnd.java,final long totalcount = fos.getChannel().position();,if (fos != null ) final long totalcount = fos.getChannel().position();
MappedRunContainerRealDataBenchmarkAnd.java,ArrayList<ImmutableRoaringBitmap> answer = new ArrayList<ImmutableRoaringBitmap>(source.size());,if (ArrayList<ImmutableRoaringBitmap>(source != null ) ArrayList<ImmutableRoaringBitmap> answer = new ArrayList<ImmutableRoaringBitmap>(source.size());
MappedRunContainerRealDataBenchmarkAnd.java,final ByteBuffer bb = out.slice();,if (out != null ) final ByteBuffer bb = out.slice();
MappedRunContainerRealDataBenchmarkAnd.java,MutableRoaringBitmap equiv = source.get(answer.size());,if (source != null ) MutableRoaringBitmap equiv = source.get(answer.size());
MappedRunContainerRealDataBenchmarkAnd.java,byte[] data = ImmutableConciseSet.newImmutableFromMutable(cc).toBytes();,if (ImmutableConciseSet != null ) byte[] data = ImmutableConciseSet.newImmutableFromMutable(cc).toBytes();
MappedRunContainerRealDataBenchmarkAnd.java,final long totalcount = fos.getChannel().position();,if (fos != null ) final long totalcount = fos.getChannel().position();
MappedRunContainerRealDataBenchmarkAnd.java,ArrayList<ImmutableConciseSet> answer = new ArrayList<ImmutableConciseSet>(source.size());,if (ArrayList<ImmutableConciseSet>(source != null ) ArrayList<ImmutableConciseSet> answer = new ArrayList<ImmutableConciseSet>(source.size());
MappedRunContainerRealDataBenchmarkAnd.java,final ByteBuffer bb = out.slice();,if (out != null ) final ByteBuffer bb = out.slice();
MappedRunContainerRealDataBenchmarkAnd.java,byte[] newdata = newbitmap.toBytes();,if (newbitmap != null ) byte[] newdata = newbitmap.toBytes();
MappedRunContainerRealDataBenchmarkAnd.java,final long totalcount = fos.getChannel().position();,if (fos != null ) final long totalcount = fos.getChannel().position();
MappedRunContainerRealDataBenchmarkAnd.java,ArrayList<EWAHCompressedBitmap> answer = new ArrayList<EWAHCompressedBitmap>(source.size());,if (ArrayList<EWAHCompressedBitmap>(source != null ) ArrayList<EWAHCompressedBitmap> answer = new ArrayList<EWAHCompressedBitmap>(source.size());
MappedRunContainerRealDataBenchmarkAnd.java,final ByteBuffer bb = out.slice();,if (out != null ) final ByteBuffer bb = out.slice();
MappedRunContainerRealDataBenchmarkAnd.java,EWAHCompressedBitmap equiv = source.get(answer.size());,if (source != null ) EWAHCompressedBitmap equiv = source.get(answer.size());
MappedRunContainerRealDataBenchmarkAnd.java,final long totalcount = fos.getChannel().position();,if (fos != null ) final long totalcount = fos.getChannel().position();
MappedRunContainerRealDataBenchmarkAnd.java,final ByteBuffer bb = out.slice();,if (out != null ) final ByteBuffer bb = out.slice();
MappedRunContainerRealDataBenchmarkAnd.java,MutableRoaringBitmap mopti = mbasic.clone();,if (mbasic != null ) MutableRoaringBitmap mopti = mbasic.clone();
RunContainerRealDataBenchmarkAnd.java,ewahsize += ewahBitmap.serializedSizeInBytes();,if (ewahBitmap != null ) ewahsize += ewahBitmap.serializedSizeInBytes();
RunContainerRealDataBenchmarkAnd.java,RoaringBitmap opti = basic.clone();,if (basic != null ) RoaringBitmap opti = basic.clone();
RunContainerRealDataBenchmarkAnd.java,normalsize += basic.serializedSizeInBytes();,if (basic != null ) normalsize += basic.serializedSizeInBytes();
RunContainerRealDataBenchmarkAnd.java,runsize += opti.serializedSizeInBytes();,if (opti != null ) runsize += opti.serializedSizeInBytes();
FastAggregation.java,RoaringBitmap answer = pq.poll();,if (pq != null ) RoaringBitmap answer = pq.poll();
FastAggregation.java,RoaringBitmap answer = pq.poll();,if (pq != null ) RoaringBitmap answer = pq.poll();
BufferFastAggregation.java,MutableRoaringBitmap answer = (MutableRoaringBitmap) pq.poll();,if (pq != null ) MutableRoaringBitmap answer = (MutableRoaringBitmap) pq.poll();
BufferFastAggregation.java,MutableRoaringBitmap answer = (MutableRoaringBitmap) pq.poll();,if (pq != null ) MutableRoaringBitmap answer = (MutableRoaringBitmap) pq.poll();
MappeableRunContainer.java,short[] vl = nv.array();,if (nv != null ) short[] vl = nv.array();
FastAggregation.java,long bef = System.nanoTime();,if (System != null ) long bef = System.nanoTime();
FastAggregation.java,long aft = System.nanoTime();,if (System != null ) long aft = System.nanoTime();
FastAggregation.java,RoaringBitmap answer = bitmaps.next();,if (bitmaps != null ) RoaringBitmap answer = bitmaps.next();
MappedRunContainerRealDataBenchmarkWideAnd.java,int answer = bitmapor.size();,if (bitmapor != null ) int answer = bitmapor.size();
MappedRunContainerRealDataBenchmarkWideAnd.java,int answer = bitmapor.size();,if (bitmapor != null ) int answer = bitmapor.size();
MappedRunContainerRealDataBenchmarkWideAnd.java,EWAHCompressedBitmap bitmapor = (EWAHCompressedBitmap) i.next();,if (i != null ) EWAHCompressedBitmap bitmapor = (EWAHCompressedBitmap) i.next();
MappedRunContainerRealDataBenchmarkWideAnd.java,int answer = bitmapor.cardinality();,if (bitmapor != null ) int answer = bitmapor.cardinality();
MappedRunContainerRealDataBenchmarkWideAnd.java,int answer = bitmapor.cardinality();,if (bitmapor != null ) int answer = bitmapor.cardinality();
MappedRunContainerRealDataBenchmarkWideAnd.java,count = mac.size();,if (mac != null ) count = mac.size();
RunContainerRealDataBenchmarkWideAnd.java,count = rc.size();,if (rc != null ) count = rc.size();
RunContainerRealDataBenchmarkWideOrPQ.java,int answer = bitmapor.size();,if (bitmapor != null ) int answer = bitmapor.size();
RunContainerRealDataBenchmarkWideOrPQ.java,int answer = bitmapor.size();,if (bitmapor != null ) int answer = bitmapor.size();
MappedRunContainerRealDataBenchmarkWideOr.java,count = mac.size();,if (mac != null ) count = mac.size();
FastAggregation.java,RoaringBitmap tb = bitmaps.next();,if (bitmaps != null ) RoaringBitmap tb = bitmaps.next();
BufferFastAggregation.java,ImmutableRoaringBitmap tb = (ImmutableRoaringBitmap) bitmaps.next();,if (bitmaps != null ) ImmutableRoaringBitmap tb = (ImmutableRoaringBitmap) bitmaps.next();
FastAggregation.java,ContainerPointer x = bitmaps.next().highLowContainer.getContainerPointer();,if (bitmaps != null ) ContainerPointer x = bitmaps.next().highLowContainer.getContainerPointer();
FastAggregation.java,ArrayList<Container> buffer = new ArrayList<Container>(pq.size());,if (ArrayList<Container>(pq != null ) ArrayList<Container> buffer = new ArrayList<Container>(pq.size());
FastAggregation.java,ContainerPointer x = pq.poll();,if (pq != null ) ContainerPointer x = pq.poll();
FastAggregation.java,hasbitmap = buffer.size();,if (buffer != null ) hasbitmap = buffer.size();
MappeableArrayContainer.java,int val = BufferUtil.toIntUnsigned(sIt.next());,if (BufferUtil != null ) int val = BufferUtil.toIntUnsigned(sIt.next());
MappedRunContainerRealDataBenchmarkHorizontal.java,int answer = bitmapor.cardinality();,if (bitmapor != null ) int answer = bitmapor.cardinality();
MappedRunContainerRealDataBenchmarkHorizontal.java,int answer = bitmapor.cardinality();,if (bitmapor != null ) int answer = bitmapor.cardinality();
RunContainerRealDataBenchmarkHorizontal.java,int answer = bitmapor.cardinality();,if (bitmapor != null ) int answer = bitmapor.cardinality();
RunContainerRealDataBenchmarkHorizontal.java,int answer = bitmapor.cardinality();,if (bitmapor != null ) int answer = bitmapor.cardinality();
FastAggregation.java,RoaringBitmap b = bitmaps.next();,if (bitmaps != null ) RoaringBitmap b = bitmaps.next();
FastAggregation.java,ContainerPointer x = pq.poll();,if (pq != null ) ContainerPointer x = pq.poll();
FastAggregation.java,newc = newc.lazyIOR(x.getContainer());,if (newc != null ) newc = newc.lazyIOR(x.getContainer());
BufferFastAggregation.java,ImmutableRoaringBitmap b = (ImmutableRoaringBitmap) bitmaps.next();,if (bitmaps != null ) ImmutableRoaringBitmap b = (ImmutableRoaringBitmap) bitmaps.next();
BufferFastAggregation.java,MappeableContainerPointer x = pq.poll();,if (pq != null ) MappeableContainerPointer x = pq.poll();
BufferFastAggregation.java,newc = newc.lazyIOR(x.getContainer());,if (newc != null ) newc = newc.lazyIOR(x.getContainer());
TestRunContainer.java,MappeableRunContainer copy = (MappeableRunContainer) x.clone();,if (x != null ) MappeableRunContainer copy = (MappeableRunContainer) x.clone();
TestRunContainer.java,MappeableRunContainer copy = (MappeableRunContainer) x.clone();,if (x != null ) MappeableRunContainer copy = (MappeableRunContainer) x.clone();
RunContainerRealDataBenchmarkAnd.java,MutableRoaringBitmap mopti = mbasic.clone();,if (mbasic != null ) MutableRoaringBitmap mopti = mbasic.clone();
RunContainerRealDataBenchmarkAndNot.java,MutableRoaringBitmap mopti = mbasic.clone();,if (mbasic != null ) MutableRoaringBitmap mopti = mbasic.clone();
RunContainerRealDataBenchmarkHorizontal.java,MutableRoaringBitmap mopti = mbasic.clone();,if (mbasic != null ) MutableRoaringBitmap mopti = mbasic.clone();
RunContainerRealDataBenchmarkIterate.java,MutableRoaringBitmap mopti = mbasic.clone();,if (mbasic != null ) MutableRoaringBitmap mopti = mbasic.clone();
RunContainerRealDataBenchmarkOr.java,MutableRoaringBitmap mopti = mbasic.clone();,if (mbasic != null ) MutableRoaringBitmap mopti = mbasic.clone();
RunContainerRealDataBenchmarkXor.java,MutableRoaringBitmap mopti = mbasic.clone();,if (mbasic != null ) MutableRoaringBitmap mopti = mbasic.clone();
MappeableRunContainer.java,int card = this.getCardinality();,if (this != null ) int card = this.getCardinality();
MappeableRunContainer.java,int card = this.getCardinality();,if (this != null ) int card = this.getCardinality();
MappeableRunContainer.java,nbrruns = Short.reverseBytes(in.readShort());,if (Short != null ) nbrruns = Short.reverseBytes(in.readShort());
MappeableBitmapContainer.java,long w = Long.reverseBytes(in.readLong());,if (Long != null ) long w = Long.reverseBytes(in.readLong());
TestRunContainer.java,Container ac = rc.toBitmapOrArrayContainer(rc.getCardinality());,if (rc != null ) Container ac = rc.toBitmapOrArrayContainer(rc.getCardinality());
TestRunContainer.java,Container bc = rc.toBitmapOrArrayContainer(rc.getCardinality());,if (rc != null ) Container bc = rc.toBitmapOrArrayContainer(rc.getCardinality());
TestRunContainer.java,ByteArrayInputStream bis = new ByteArrayInputStream(bos.toByteArray());,if (ByteArrayInputStream(bos != null ) ByteArrayInputStream bis = new ByteArrayInputStream(bos.toByteArray());
TestRunContainer.java,RunContainer newContainer = (RunContainer) in.readObject();,if (in != null ) RunContainer newContainer = (RunContainer) in.readObject();
TestRunContainer.java,RunContainer copy = (RunContainer) x.clone();,if (x != null ) RunContainer copy = (RunContainer) x.clone();
TestRunContainer.java,RunContainer copy = (RunContainer) x.clone();,if (x != null ) RunContainer copy = (RunContainer) x.clone();
TestRunContainer.java,RunContainer copy = (RunContainer) x.clone();,if (x != null ) RunContainer copy = (RunContainer) x.clone();
TestRunContainer.java,RunContainer copy = (RunContainer) x.clone();,if (x != null ) RunContainer copy = (RunContainer) x.clone();
TestRunContainer.java,ans[k] = i.next().intValue();,if (i != null ) ans[k] = i.next().intValue();
BufferFastAggregation.java,ImmutableRoaringBitmap b = bitmaps.next();,if (bitmaps != null ) ImmutableRoaringBitmap b = bitmaps.next();
TestRunContainer.java,Container ac = rc.toBitmapOrArrayContainer();,if (rc != null ) Container ac = rc.toBitmapOrArrayContainer();
TestRunContainer.java,Container bc = rc.toBitmapOrArrayContainer();,if (rc != null ) Container bc = rc.toBitmapOrArrayContainer();
TestRunContainer.java,MappeableContainer ac = rc.toBitmapOrArrayContainer();,if (rc != null ) MappeableContainer ac = rc.toBitmapOrArrayContainer();
TestRunContainer.java,MappeableContainer bc = rc.toBitmapOrArrayContainer();,if (rc != null ) MappeableContainer bc = rc.toBitmapOrArrayContainer();
RunContainer.java,int card = this.getCardinality();,if (this != null ) int card = this.getCardinality();
MappeableRunContainer.java,int card = this.getCardinality();,if (this != null ) int card = this.getCardinality();
BufferFastAggregation.java,ImmutableRoaringBitmap b = (ImmutableRoaringBitmap) bitmaps.next();,if (bitmaps != null ) ImmutableRoaringBitmap b = (ImmutableRoaringBitmap) bitmaps.next();
BufferFastAggregation.java,ImmutableRoaringBitmap b = bitmaps.next();,if (bitmaps != null ) ImmutableRoaringBitmap b = bitmaps.next();
MappeableBitmapContainer.java,long[] b = this.bitmap.array();,if (this != null ) long[] b = this.bitmap.array();
MappeableBitmapContainer.java,long[] b = this.bitmap.array();,if (this != null ) long[] b = this.bitmap.array();
Container.java,int val = Util.toIntUnsigned(sIt.next());,if (Util != null ) int val = Util.toIntUnsigned(sIt.next());
MappeableBitmapContainer.java,MappeableBitmapContainer answer = this.clone();,if (this != null ) MappeableBitmapContainer answer = this.clone();
MappeableBitmapContainer.java,final ShortIterator si = MappeableBitmapContainer.this.getShortIterator();,if (MappeableBitmapContainer != null ) final ShortIterator si = MappeableBitmapContainer.this.getShortIterator();
MappeableBitmapContainer.java,final ShortIterator i = this.getShortIterator();,if (this != null ) final ShortIterator i = this.getShortIterator();
MappeableContainer.java,int val = BufferUtil.toIntUnsigned(sIt.next());,if (BufferUtil != null ) int val = BufferUtil.toIntUnsigned(sIt.next());
MappedRunContainerRealDataBenchmarkAnd.java,byte[] data = cc.toByteBuffer().array();,if (cc != null ) byte[] data = cc.toByteBuffer().array();
MappedRunContainerRealDataBenchmarkHorizontal.java,byte[] data = cc.toByteBuffer().array();,if (cc != null ) byte[] data = cc.toByteBuffer().array();
MappedRunContainerRealDataBenchmarkIterate.java,byte[] data = cc.toByteBuffer().array();,if (cc != null ) byte[] data = cc.toByteBuffer().array();
MappedRunContainerRealDataBenchmarkOr.java,byte[] data = cc.toByteBuffer().array();,if (cc != null ) byte[] data = cc.toByteBuffer().array();
ImmutableRoaringArray.java,final int cookie = buffer.getInt();,if (buffer != null ) final int cookie = buffer.getInt();
MutableRoaringArray.java,startOffset=startOffset+values[k].getArraySizeInBytes();,if (startOffset=startOffset+values[k] != null ) startOffset=startOffset+values[k].getArraySizeInBytes();
RoaringArray.java,this.size = Integer.reverseBytes(in.readInt());,if (Integer != null ) this.size = Integer.reverseBytes(in.readInt());
ImmutableRoaringArray.java,this.size = buffer.getInt();,if (buffer != null ) this.size = buffer.getInt();
MutableRoaringArray.java,this.size = Integer.reverseBytes(in.readInt());,if (Integer != null ) this.size = Integer.reverseBytes(in.readInt());
RoaringArray.java,bitmapOfRunContainers[i] = Integer.reverseBytes(in.readInt());,if (Integer != null ) bitmapOfRunContainers[i] = Integer.reverseBytes(in.readInt());
MutableRoaringArray.java,final int cookie = bb.getInt();,if (bb != null ) final int cookie = bb.getInt();
MutableRoaringArray.java,this.size = bb.getInt();,if (bb != null ) this.size = bb.getInt();
MutableRoaringArray.java,bitmapOfRunContainers[i] = bb.getInt();// Integer.reverseBytes(bb.getInt());,if (Integer != null ) bitmapOfRunContainers[i] = bb.getInt();// Integer.reverseBytes(bb.getInt());
MutableRoaringArray.java,keys[k] = bb.getShort();,if (bb != null ) keys[k] = bb.getShort();
MutableRoaringArray.java,final LongBuffer bitmapArray = bb.asLongBuffer().slice();,if (bb != null ) final LongBuffer bitmapArray = bb.asLongBuffer().slice();
MutableRoaringArray.java,int numRuns = BufferUtil.toIntUnsigned(bb.getShort());,if (BufferUtil != null ) int numRuns = BufferUtil.toIntUnsigned(bb.getShort());
MutableRoaringArray.java,final ShortBuffer shortArray = bb.asShortBuffer().slice();,if (bb != null ) final ShortBuffer shortArray = bb.asShortBuffer().slice();
MutableRoaringArray.java,final ShortBuffer shortArray = bb.asShortBuffer().slice();,if (bb != null ) final ShortBuffer shortArray = bb.asShortBuffer().slice();
MutableRoaringArray.java,bitmapOfRunContainers[i] = Integer.reverseBytes(in.readInt());,if (Integer != null ) bitmapOfRunContainers[i] = Integer.reverseBytes(in.readInt());
RoaringArray.java,count += array[k].value.getArraySizeInBytes();,if (array[k] != null ) count += array[k].value.getArraySizeInBytes();
RoaringArray.java,Element c = (Element) super.clone();,if (super != null ) Element c = (Element) super.clone();
RoaringArray.java,c.value = this.value.clone();,if (this != null ) c.value = this.value.clone();
MutableRoaringArray.java,Element c = (Element) super.clone();,if (super != null ) Element c = (Element) super.clone();
MutableRoaringArray.java,c.value = this.value.clone();,if (this != null ) c.value = this.value.clone();
MutableRoaringArray.java,startOffset=startOffset+array[k].value.getArraySizeInBytes();,if (startOffset=startOffset+array[k] != null ) startOffset=startOffset+array[k].value.getArraySizeInBytes();
MutableRoaringArray.java,count += array[k].value.getArraySizeInBytes();,if (array[k] != null ) count += array[k].value.getArraySizeInBytes();
RealDataRetriever.java,"String oneLine = buf.readLine(); // a single, perhaps","if (perhaps != null ) String oneLine = buf.readLine(); // a single, perhaps"
ZipRealDataRetriever.java,"String oneLine = buf.readLine(); // a single, perhaps","if (perhaps != null ) String oneLine = buf.readLine(); // a single, perhaps"
RunContainerRealDataBenchmark.java,normalsize += basic.serializedSizeInBytes();,if (basic != null ) normalsize += basic.serializedSizeInBytes();
RunContainerRealDataBenchmark.java,runsize += opti.serializedSizeInBytes();,if (opti != null ) runsize += opti.serializedSizeInBytes();
RunContainer.java,int card = this.getCardinality();,if (this != null ) int card = this.getCardinality();
RunContainer.java,int card = this.getCardinality();,if (this != null ) int card = this.getCardinality();
RunContainer.java,int card = this.getCardinality();,if (this != null ) int card = this.getCardinality();
BasicAndContainerBenchmark.java,ans[k] = i.next().intValue();,if (i != null ) ans[k] = i.next().intValue();
BasicOrContainerBenchmark.java,ans[k] = i.next().intValue();,if (i != null ) ans[k] = i.next().intValue();
BasicContainerBenchmark.java,int[] array = rb.toArray();,if (rb != null ) int[] array = rb.toArray();
BasicContainerBenchmark.java,ByteBuffer b = ByteBuffer.allocate(rb.serializedSizeInBytes());,if (ByteBuffer != null ) ByteBuffer b = ByteBuffer.allocate(rb.serializedSizeInBytes());
BasicContainerBenchmark.java,array = irb.toArray();,if (irb != null ) array = irb.toArray();
BasicContainerBenchmark.java,int[] array = rb.toArray();,if (rb != null ) int[] array = rb.toArray();
BasicContainerBenchmark.java,ByteBuffer b = ByteBuffer.allocate(rb.serializedSizeInBytes());,if (ByteBuffer != null ) ByteBuffer b = ByteBuffer.allocate(rb.serializedSizeInBytes());
BasicContainerBenchmark.java,array = irb.toArray();,if (irb != null ) array = irb.toArray();
TestImmutableRoaringBitmap.java,int[] array = rb.toArray();,if (rb != null ) int[] array = rb.toArray();
TestImmutableRoaringBitmap.java,ByteBuffer b = ByteBuffer.allocate(rb.serializedSizeInBytes());,if (ByteBuffer != null ) ByteBuffer b = ByteBuffer.allocate(rb.serializedSizeInBytes());
TestImmutableRoaringBitmap.java,array = irb.toArray();,if (irb != null ) array = irb.toArray();
ImmutableRoaringArray.java,short nbrruns = buffer.get();,if (buffer != null ) short nbrruns = buffer.get();
MutableRoaringArray.java,startOffset=startOffset+array[k].value.getArraySizeInBytes();,if (startOffset=startOffset+array[k] != null ) startOffset=startOffset+array[k].value.getArraySizeInBytes();
MappeableRunContainer.java,int card = this.getCardinality();,if (this != null ) int card = this.getCardinality();
UnsignedVSFlip.java,key[k] = (short)r.nextInt();,if ((short)r != null ) key[k] = (short)r.nextInt();
RunContainer.java,int card = this.getCardinality();,if (this != null ) int card = this.getCardinality();
TestRunContainer.java,byte[] bout = bos.toByteArray();,if (bos != null ) byte[] bout = bos.toByteArray();
RunContainer.java,ArrayContainer answer = new ArrayContainer(x.getCardinality());,if (ArrayContainer(x != null ) ArrayContainer answer = new ArrayContainer(x.getCardinality());
RunContainer.java,int n = Util.toIntUnsigned(si.next());,if (Util != null ) int n = Util.toIntUnsigned(si.next());
RunContainer.java,n = si.next();,if (si != null ) n = si.next();
RunContainer.java,n = si.next();,if (si != null ) n = si.next();
RunContainer.java,Container answer = this.clone();,if (this != null ) Container answer = this.clone();
RunContainer.java,nbrruns = in.readInt();,if (in != null ) nbrruns = in.readInt();
ArrayContainer.java,BitmapContainer a = this.toBitmapContainer();,if (this != null ) BitmapContainer a = this.toBitmapContainer();
ArrayContainer.java,BitmapContainer a = this.toBitmapContainer();,if (this != null ) BitmapContainer a = this.toBitmapContainer();
ArrayContainer.java,BitmapContainer a = this.toBitmapContainer();,if (this != null ) BitmapContainer a = this.toBitmapContainer();
ArrayContainer.java,BitmapContainer a = this.toBitmapContainer();,if (this != null ) BitmapContainer a = this.toBitmapContainer();
BitmapContainer.java,bitmap[k] = Long.reverseBytes(in.readLong());,if (Long != null ) bitmap[k] = Long.reverseBytes(in.readLong());
BitmapContainer.java,final ShortIterator i = this.getShortIterator();,if (this != null ) final ShortIterator i = this.getShortIterator();
SerializationBenchmark.java,"len = Math.min(len, buf.remaining());","if (buf != null ) len = Math.min(len, buf.remaining());"
ImmutableRoaringArray.java,int left = tmp.remaining();,if (tmp != null ) int left = tmp.remaining();
MappeableArrayContainer.java,this.content = ShortBuffer.allocate(newContent.limit());,if (ShortBuffer != null ) this.content = ShortBuffer.allocate(newContent.limit());
ArrayContainer.java,BitmapContainer a = this.toBitmapContainer();,if (this != null ) BitmapContainer a = this.toBitmapContainer();
ArrayContainer.java,BitmapContainer a = this.toBitmapContainer();,if (this != null ) BitmapContainer a = this.toBitmapContainer();
RoaringBitmap.java,int max = Util.toIntUnsigned(Util.maxLowBit());,if (Util != null ) int max = Util.toIntUnsigned(Util.maxLowBit());
RoaringBitmap.java,final int max = Util.toIntUnsigned(Util.maxLowBit());,if (Util != null ) final int max = Util.toIntUnsigned(Util.maxLowBit());
RoaringBitmap.java,final int max = Util.toIntUnsigned(Util.maxLowBit());,if (Util != null ) final int max = Util.toIntUnsigned(Util.maxLowBit());
MutableRoaringBitmap.java,final int max = BufferUtil.toIntUnsigned(BufferUtil.maxLowBit());,if (BufferUtil != null ) final int max = BufferUtil.toIntUnsigned(BufferUtil.maxLowBit());
MutableRoaringBitmap.java,final int max = BufferUtil.toIntUnsigned(BufferUtil.maxLowBit());,if (BufferUtil != null ) final int max = BufferUtil.toIntUnsigned(BufferUtil.maxLowBit());
TestRoaringBitmap.java,RoaringBitmap c = input.clone();,if (input != null ) RoaringBitmap c = input.clone();
MutableRoaringBitmap.java,final int max = BufferUtil.toIntUnsigned(BufferUtil.maxLowBit());,if (BufferUtil != null ) final int max = BufferUtil.toIntUnsigned(BufferUtil.maxLowBit());
TestBenchmarkBasic.java,bogus += bitmapor.getCardinality();,if (bitmapor != null ) bogus += bitmapor.getCardinality();
TestBenchmarkBasic.java,long bef = System.nanoTime();,if (System != null ) long bef = System.nanoTime();
TestBenchmarkBasic.java,long aft = System.nanoTime();,if (System != null ) long aft = System.nanoTime();
TestBenchmarkBasic.java,long bef = System.nanoTime();,if (System != null ) long bef = System.nanoTime();
TestBenchmarkBasic.java,long aft = System.nanoTime();,if (System != null ) long aft = System.nanoTime();
TestBenchmarkIterator.java,result += intIterator.next();,if (intIterator != null ) result += intIterator.next();
TestBenchmarkIterator2.java,IntIterator i = rb.getIntIterator();,if (rb != null ) IntIterator i = rb.getIntIterator();
TestBenchmarkBasic.java,bogus += bitmapor.getCardinality();,if (bitmapor != null ) bogus += bitmapor.getCardinality();
TestBenchmarkBasic.java,bogus += bitmapor.getCardinality();,if (bitmapor != null ) bogus += bitmapor.getCardinality();
TestBenchmarkBasic.java,long bef = System.nanoTime();,if (System != null ) long bef = System.nanoTime();
TestBenchmarkBasic.java,long aft = System.nanoTime();,if (System != null ) long aft = System.nanoTime();
TestBenchmarkBasic.java,long bef = System.nanoTime();,if (System != null ) long bef = System.nanoTime();
TestBenchmarkBasic.java,long aft = System.nanoTime();,if (System != null ) long aft = System.nanoTime();
TestBenchmarkBasic.java,long totalcount = fos.getChannel().position();,if (fos != null ) long totalcount = fos.getChannel().position();
IntIteratorFlyweight.java,IntIteratorFlyweight x = (IntIteratorFlyweight) super.clone();,if (super != null ) IntIteratorFlyweight x = (IntIteratorFlyweight) super.clone();
IntIteratorFlyweight.java,x.iter = this.iter.clone();,if (this != null ) x.iter = this.iter.clone();
TestBenchmarkIterator.java,result += intIterator.next();,if (intIterator != null ) result += intIterator.next();
TestBenchmarkIterator.java,next = Math.abs(source.nextInt());,if (Math != null ) next = Math.abs(source.nextInt());
TestBenchmarkIterator.java,IntIterator intIterator = bitmap.getIntIterator();,if (bitmap != null ) IntIterator intIterator = bitmap.getIntIterator();
TestBenchmarkIterator.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
TestBenchmarkIterator.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
IntIteratorFlyweight.java,IntIterator intIterator = state.bitmap.getIntIterator();,if (state != null ) IntIterator intIterator = state.bitmap.getIntIterator();
IntIteratorFlyweight.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
IntIteratorFlyweight.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
IntIteratorFlyweight.java,next = Math.abs(source.nextInt());,if (Math != null ) next = Math.abs(source.nextInt());
IntIteratorFlyweight.java,IntIterator intIterator = state.bitmap.getIntIterator();,if (state != null ) IntIterator intIterator = state.bitmap.getIntIterator();
IntIteratorFlyweight.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
IntIteratorFlyweight.java,result = intIterator.next();,if (intIterator != null ) result = intIterator.next();
IntIteratorFlyweight.java,next = Math.abs(source.nextInt());,if (Math != null ) next = Math.abs(source.nextInt());
TestImmutableRoaringBitmap.java,ByteBuffer outbb = ByteBuffer.allocate(mrb.serializedSizeInBytes());,if (ByteBuffer != null ) ByteBuffer outbb = ByteBuffer.allocate(mrb.serializedSizeInBytes());
TestBenchmarkBasic.java,long bef = System.nanoTime();,if (System != null ) long bef = System.nanoTime();
TestBenchmarkBasic.java,long aft = System.nanoTime();,if (System != null ) long aft = System.nanoTime();
TestBenchmarkBasic.java,long bef = System.nanoTime();,if (System != null ) long bef = System.nanoTime();
TestBenchmarkBasic.java,long aft = System.nanoTime();,if (System != null ) long aft = System.nanoTime();
TestBenchmarkBasic.java,long bef = System.nanoTime();,if (System != null ) long bef = System.nanoTime();
TestBenchmarkBasic.java,long aft = System.nanoTime();,if (System != null ) long aft = System.nanoTime();
TestBenchmarkBasic.java,long bef = System.nanoTime();,if (System != null ) long bef = System.nanoTime();
TestBenchmarkBasic.java,long aft = System.nanoTime();,if (System != null ) long aft = System.nanoTime();
RoaringBitmap.java,RoaringReverseIntIterator clone = (RoaringReverseIntIterator) super.clone();,if (super != null ) RoaringReverseIntIterator clone = (RoaringReverseIntIterator) super.clone();
RoaringBitmap.java,clone.iter =  this.iter.clone();,if (this != null ) clone.iter =  this.iter.clone();
TestIterators.java,IntIterator i = bitmap.getIntIterator();,if (bitmap != null ) IntIterator i = bitmap.getIntIterator();
TestIterators.java,int[] unboxed = copyOf(ints.iterator());,if (copyOf(ints != null ) int[] unboxed = copyOf(ints.iterator());
TestIterators.java,IntIterator i = bitmap.getIntIterator();,if (bitmap != null ) IntIterator i = bitmap.getIntIterator();
TestIterators.java,int[] unboxed = copyOf(ints.iterator());,if (copyOf(ints != null ) int[] unboxed = copyOf(ints.iterator());
ImmutableRoaringBitmap.java,size += cp.getCardinality();,if (cp != null ) size += cp.getCardinality();
ArrayContainer.java,BitmapContainer a = this.toBitmapContainer();,if (this != null ) BitmapContainer a = this.toBitmapContainer();
MappeableArrayContainer.java,final MappeableBitmapContainer a = this.toBitmapContainer();,if (this != null ) final MappeableBitmapContainer a = this.toBitmapContainer();
MutableRoaringBitmap.java,ByteBuffer outbb = ByteBuffer.allocate(mrb.serializedSizeInBytes());,if (ByteBuffer != null ) ByteBuffer outbb = ByteBuffer.allocate(mrb.serializedSizeInBytes());
TestMemoryMapping.java,final long bef = System.currentTimeMillis();,if (System != null ) final long bef = System.currentTimeMillis();
TestMemoryMapping.java,final ByteBuffer bb = out.slice();,if (out != null ) final ByteBuffer bb = out.slice();
TestMemoryMapping.java,final long aft = System.currentTimeMillis();,if (System != null ) final long aft = System.currentTimeMillis();
ImmutableRoaringArray.java,buffer = bbf.slice();,if (bbf != null ) buffer = bbf.slice();
FastAggregation.java,RoaringBitmap b = bitmaps.next();,if (bitmaps != null ) RoaringBitmap b = bitmaps.next();
FastAggregation.java,ContainerPointer x = pq.poll();,if (pq != null ) ContainerPointer x = pq.poll();
FastAggregation.java,newc = newc.lazyIOR(x.getContainer());,if (newc != null ) newc = newc.lazyIOR(x.getContainer());
FastAggregation.java,ContainerPointer x = bitmaps[k].highLowContainer.getContainerPointer();,if (bitmaps[k] != null ) ContainerPointer x = bitmaps[k].highLowContainer.getContainerPointer();
FastAggregation.java,ContainerPointer x = pq.poll();,if (pq != null ) ContainerPointer x = pq.poll();
FastAggregation.java,newc = newc.lazyIOR(x.getContainer());,if (newc != null ) newc = newc.lazyIOR(x.getContainer());
FastAggregation.java,ContainerPointer x = bitmaps[k].highLowContainer.getContainerPointer();,if (bitmaps[k] != null ) ContainerPointer x = bitmaps[k].highLowContainer.getContainerPointer();
FastAggregation.java,ContainerPointer x = pq.poll();,if (pq != null ) ContainerPointer x = pq.poll();
FastAggregation.java,newc = newc.ixor(x.getContainer());,if (newc != null ) newc = newc.ixor(x.getContainer());
RoaringArray.java,sa = (RoaringArray) super.clone();,if (super != null ) sa = (RoaringArray) super.clone();
RoaringArray.java,count += array[k].value.getArraySizeInBytes();,if (array[k] != null ) count += array[k].value.getArraySizeInBytes();
RoaringArray.java,Element c = (Element) super.clone();,if (super != null ) Element c = (Element) super.clone();
RoaringArray.java,c.value = this.value.clone();,if (this != null ) c.value = this.value.clone();
MutableRoaringArray.java,Element c = (Element) super.clone();,if (super != null ) Element c = (Element) super.clone();
MutableRoaringArray.java,c.value = this.value.clone();,if (this != null ) c.value = this.value.clone();
MutableRoaringArray.java,this.size = bb.getInt();,if (bb != null ) this.size = bb.getInt();
MutableRoaringArray.java,keys[k] = bb.getShort();,if (bb != null ) keys[k] = bb.getShort();
MutableRoaringArray.java,final LongBuffer bitmapArray = bb.asLongBuffer().slice();,if (bb != null ) final LongBuffer bitmapArray = bb.asLongBuffer().slice();
MutableRoaringArray.java,final ShortBuffer shortArray = bb.asShortBuffer().slice();,if (bb != null ) final ShortBuffer shortArray = bb.asShortBuffer().slice();
MutableRoaringArray.java,MappeableContainerPointer cp = highLowContainer.getContainerPointer();,if (highLowContainer != null ) MappeableContainerPointer cp = highLowContainer.getContainerPointer();
MutableRoaringArray.java,sa = (MutableRoaringArray) super.clone();,if (super != null ) sa = (MutableRoaringArray) super.clone();
MutableRoaringArray.java,count += array[k].value.getArraySizeInBytes();,if (array[k] != null ) count += array[k].value.getArraySizeInBytes();
ImmutableRoaringArray.java,buffer = bbf.duplicate();,if (bbf != null ) buffer = bbf.duplicate();
ImmutableRoaringArray.java,int size = buffer.getInt();,if (buffer != null ) int size = buffer.getInt();
ImmutableRoaringArray.java,keys[k] = buffer.getShort();,if (buffer != null ) keys[k] = buffer.getShort();
ImmutableRoaringArray.java,cardinalities[k] = buffer.getShort();,if (buffer != null ) cardinalities[k] = buffer.getShort();
ImmutableRoaringArray.java,buffer = buffer.slice();,if (buffer != null ) buffer = buffer.slice();
TestMemoryMapping.java,final ByteBuffer bb = out.slice();,if (out != null ) final ByteBuffer bb = out.slice();
ImmutableRoaringBitmap.java,ok = cp.hasContainer();,if (cp != null ) ok = cp.hasContainer();
ImmutableRoaringBitmap.java,iter = cp.getContainer().iterator();,if (cp != null ) iter = cp.getContainer().iterator();
FastAggregation.java,newc = newc.ior(x.getContainer());,if (newc != null ) newc = newc.ior(x.getContainer());
BufferFastAggregation.java,newc = newc.ior(x.getContainer());,if (newc != null ) newc = newc.ior(x.getContainer());
BufferFastAggregation.java,MappeableContainerPointer x = bitmaps[k].highLowContainer.getContainerPointer();,if (bitmaps[k] != null ) MappeableContainerPointer x = bitmaps[k].highLowContainer.getContainerPointer();
BufferFastAggregation.java,MappeableContainerPointer x = pq.poll();,if (pq != null ) MappeableContainerPointer x = pq.poll();
BufferFastAggregation.java,newc = newc.ior(x.getContainer());,if (newc != null ) newc = newc.ior(x.getContainer());
BufferFastAggregation.java,MappeableContainerPointer x = bitmaps[k].highLowContainer.getContainerPointer();,if (bitmaps[k] != null ) MappeableContainerPointer x = bitmaps[k].highLowContainer.getContainerPointer();
BufferFastAggregation.java,MappeableContainerPointer x = pq.poll();,if (pq != null ) MappeableContainerPointer x = pq.poll();
BufferFastAggregation.java,newc = newc.ixor(x.getContainer());,if (newc != null ) newc = newc.ixor(x.getContainer());
ImmutableRoaringArray.java,buffer = bbf.duplicate();,if (bbf != null ) buffer = bbf.duplicate();
ImmutableRoaringArray.java,int size = buffer.getInt();,if (buffer != null ) int size = buffer.getInt();
ImmutableRoaringArray.java,keys[k] = buffer.getShort();,if (buffer != null ) keys[k] = buffer.getShort();
ImmutableRoaringArray.java,cardinalities[k] = buffer.getShort();,if (buffer != null ) cardinalities[k] = buffer.getShort();
ImmutableRoaringArray.java,buffer = buffer.slice();,if (buffer != null ) buffer = buffer.slice();
ImmutableRoaringArray.java,MappeableContainerPointer cp = this.getContainerPointer();,if (this != null ) MappeableContainerPointer cp = this.getContainerPointer();
ImmutableRoaringArray.java,sa = (ImmutableRoaringArray) super.clone();,if (super != null ) sa = (ImmutableRoaringArray) super.clone();
ImmutableRoaringArray.java,final LongBuffer bitmapArray = buffer.asLongBuffer().slice();,if (buffer != null ) final LongBuffer bitmapArray = buffer.asLongBuffer().slice();
ImmutableRoaringArray.java,final ShortBuffer shortArray = buffer.asShortBuffer().slice();,if (buffer != null ) final ShortBuffer shortArray = buffer.asShortBuffer().slice();
ImmutableRoaringBitmap.java,MappeableContainerPointer mcp = highLowContainer.getContainerPointer();,if (highLowContainer != null ) MappeableContainerPointer mcp = highLowContainer.getContainerPointer();
ImmutableRoaringBitmap.java,final ImmutableRoaringBitmap x = (MutableRoaringBitmap) super.clone();,if (super != null ) final ImmutableRoaringBitmap x = (MutableRoaringBitmap) super.clone();
ImmutableRoaringBitmap.java,x.highLowContainer = highLowContainer.clone();,if (highLowContainer != null ) x.highLowContainer = highLowContainer.clone();
ImmutableRoaringBitmap.java,MappeableContainerPointer cp = this.highLowContainer.getContainerPointer();,if (this != null ) MappeableContainerPointer cp = this.highLowContainer.getContainerPointer();
ImmutableRoaringBitmap.java,size += cp.getCardinality();,if (cp != null ) size += cp.getCardinality();
ImmutableRoaringBitmap.java,MappeableContainerPointer cp = ImmutableRoaringBitmap.this.highLowContainer.getContainerPointer();,if (ImmutableRoaringBitmap != null ) MappeableContainerPointer cp = ImmutableRoaringBitmap.this.highLowContainer.getContainerPointer();
ImmutableRoaringBitmap.java,ok = cp.hasContainer();,if (cp != null ) ok = cp.hasContainer();
ImmutableRoaringBitmap.java,iter = cp.getContainer().iterator();,if (cp != null ) iter = cp.getContainer().iterator();
ImmutableRoaringBitmap.java,MappeableContainerPointer cp = this.highLowContainer.getContainerPointer();,if (this != null ) MappeableContainerPointer cp = this.highLowContainer.getContainerPointer();
MappeableArrayContainer.java,final MappeableArrayContainer answer = new MappeableArrayContainer(content.limit());,if (MappeableArrayContainer(content != null ) final MappeableArrayContainer answer = new MappeableArrayContainer(content.limit());
MutableRoaringArray.java,sa = (MutableRoaringArray) super.clone();,if (super != null ) sa = (MutableRoaringArray) super.clone();
MutableRoaringArray.java,count += array[k].value.getArraySizeInBytes();,if (array[k] != null ) count += array[k].value.getArraySizeInBytes();
MutableRoaringArray.java,MappeableContainerPointer cp = highLowContainer.getContainerPointer();,if (highLowContainer != null ) MappeableContainerPointer cp = highLowContainer.getContainerPointer();
MutableRoaringArray.java,Element c = (Element) super.clone();,if (super != null ) Element c = (Element) super.clone();
MutableRoaringArray.java,c.value = this.value.clone();,if (this != null ) c.value = this.value.clone();
MutableRoaringBitmap.java,final MutableRoaringBitmap x = (MutableRoaringBitmap) super.clone();,if (super != null ) final MutableRoaringBitmap x = (MutableRoaringBitmap) super.clone();
MutableRoaringBitmap.java,x.highLowContainer = highLowContainer.clone();,if (highLowContainer != null ) x.highLowContainer = highLowContainer.clone();
ImmutableRoaringBitmap.java,final ImmutableRoaringBitmap x = (MappeableRoaringBitmap) super.clone();,if (super != null ) final ImmutableRoaringBitmap x = (MappeableRoaringBitmap) super.clone();
MutableRoaringArray.java,sa = (MappeableRoaringArray) super.clone();,if (super != null ) sa = (MappeableRoaringArray) super.clone();
MutableRoaringBitmap.java,final MappeableRoaringBitmap x = (MappeableRoaringBitmap) super.clone();,if (super != null ) final MappeableRoaringBitmap x = (MappeableRoaringBitmap) super.clone();
ImmutableRoaringArray.java,buffer = bb.duplicate();,if (bb != null ) buffer = bb.duplicate();
ImmutableRoaringArray.java,int size = bb.getInt();,if (bb != null ) int size = bb.getInt();
ImmutableRoaringArray.java,keys[k] = bb.getShort();,if (bb != null ) keys[k] = bb.getShort();
ImmutableRoaringArray.java,cardinalities[k] = bb.getShort();,if (bb != null ) cardinalities[k] = bb.getShort();
ImmutableRoaringArray.java,ByteBuffer bb = buffer.duplicate();,if (buffer != null ) ByteBuffer bb = buffer.duplicate();
ImmutableRoaringArray.java,final LongBuffer bitmapArray = bb.asLongBuffer().slice();,if (bb != null ) final LongBuffer bitmapArray = bb.asLongBuffer().slice();
ImmutableRoaringArray.java,final ShortBuffer shortArray = bb.asShortBuffer().slice();,if (bb != null ) final ShortBuffer shortArray = bb.asShortBuffer().slice();
MappeableRoaringArray.java,sa = (MappeableRoaringArray) super.clone();,if (super != null ) sa = (MappeableRoaringArray) super.clone();
ImmutableRoaringBitmap.java,final MappeableRoaringBitmap x = (MappeableRoaringBitmap) super.clone();,if (super != null ) final MappeableRoaringBitmap x = (MappeableRoaringBitmap) super.clone();
MappeableRoaringBitmap.java,final MappeableRoaringBitmap x = (MappeableRoaringBitmap) super.clone();,if (super != null ) final MappeableRoaringBitmap x = (MappeableRoaringBitmap) super.clone();
MappeableRoaringBitmap.java,x.highLowContainer = highLowContainer.clone();,if (highLowContainer != null ) x.highLowContainer = highLowContainer.clone();
ImmutableRoaringBitmap.java,final int max = Util.toIntUnsigned(Util.maxLowBit());,if (Util != null ) final int max = Util.toIntUnsigned(Util.maxLowBit());
MappeableArrayContainer.java,final BitmapContainer a = this.toBitmapContainer();,if (this != null ) final BitmapContainer a = this.toBitmapContainer();
MappeableArrayContainer.java,final ArrayContainer answer = new ArrayContainer(content.limit());,if (ArrayContainer(content != null ) final ArrayContainer answer = new ArrayContainer(content.limit());
MappeableRoaringArray.java,sa = (RoaringArray) super.clone();,if (super != null ) sa = (RoaringArray) super.clone();
MappeableRoaringBitmap.java,final int max = Util.toIntUnsigned(Util.maxLowBit());,if (Util != null ) final int max = Util.toIntUnsigned(Util.maxLowBit());
MappeableRoaringBitmap.java,final RoaringBitmap x = (RoaringBitmap) super.clone();,if (super != null ) final RoaringBitmap x = (RoaringBitmap) super.clone();
MappeableRoaringBitmap.java,final int max = Util.toIntUnsigned(Util.maxLowBit());,if (Util != null ) final int max = Util.toIntUnsigned(Util.maxLowBit());
RoaringArray.java,c = (Element) super.clone();,if (super != null ) c = (Element) super.clone();
RoaringArray.java,c.value = this.value.clone();,if (this != null ) c.value = this.value.clone();
RoaringArray.java,c = (Element) super.clone();,if (super != null ) c = (Element) super.clone();
RoaringArray.java,c.value = this.value.clone();,if (this != null ) c.value = this.value.clone();
ArrayContainer.java,BitmapContainer a = this.toBitmapContainer();,if (this != null ) BitmapContainer a = this.toBitmapContainer();
RoaringArray.java,sa = (RoaringArray) super.clone();,if (super != null ) sa = (RoaringArray) super.clone();
RoaringArray.java,count += array[k].value.getArraySizeInBytes();,if (array[k] != null ) count += array[k].value.getArraySizeInBytes();
RoaringArray.java,c = (Element) super.clone();,if (super != null ) c = (Element) super.clone();
RoaringArray.java,c.value = this.value.clone();,if (this != null ) c.value = this.value.clone();
RoaringBitmap.java,answer = bm.clone();,if (bm != null ) answer = bm.clone();
RoaringBitmap.java,int max = Util.toIntUnsigned(Util.maxLowBit());,if (Util != null ) int max = Util.toIntUnsigned(Util.maxLowBit());
RoaringBitmap.java,final RoaringBitmap x = (RoaringBitmap) super.clone();,if (super != null ) final RoaringBitmap x = (RoaringBitmap) super.clone();
RoaringBitmap.java,x.highlowcontainer = highlowcontainer.clone();,if (highlowcontainer != null ) x.highlowcontainer = highlowcontainer.clone();
RoaringBitmap.java,int max = Util.toIntUnsigned(Util.maxLowBit());,if (Util != null ) int max = Util.toIntUnsigned(Util.maxLowBit());
RoaringBitmap.java,final IntIterator i = this.getIntIterator();,if (this != null ) final IntIterator i = this.getIntIterator();
ArrayContainer.java,short[] sarray = content.array();,if (content != null ) short[] sarray = content.array();
ArrayContainer.java,this.content = ShortBuffer.allocate(newcontent.limit());,if (ShortBuffer != null ) this.content = ShortBuffer.allocate(newcontent.limit());
ArrayContainer.java,final BitmapContainer a = this.toBitmapContainer();,if (this != null ) final BitmapContainer a = this.toBitmapContainer();
ArrayContainer.java,short[] sarray = content.array();,if (content != null ) short[] sarray = content.array();
ArrayContainer.java,sarray = content.array();,if (content != null ) sarray = content.array();
ArrayContainer.java,short[] sarray = answer.content.array();,if (answer != null ) short[] sarray = answer.content.array();
ArrayContainer.java,short[] c = content.array();,if (content != null ) short[] c = content.array();
ArrayContainer.java,short[] t = this.content.array();,if (this != null ) short[] t = this.content.array();
ArrayContainer.java,short[] sr = srb.content.array();,if (srb != null ) short[] sr = srb.content.array();
ArrayContainer.java,short[] c = this.content.array();,if (this != null ) short[] c = this.content.array();
ArrayContainer.java,short[] c = this.content.array();,if (this != null ) short[] c = this.content.array();
ArrayContainer.java,assert outPos == buffer.limit();,if (buffer != null ) assert outPos == buffer.limit();
ArrayContainer.java,short[] sarray = answer.content.array();,if (answer != null ) short[] sarray = answer.content.array();
ArrayContainer.java,long[] bitarray = bc.bitmap.array();,if (bc != null ) long[] bitarray = bc.bitmap.array();
ArrayContainer.java,short[] sarray = this.content.array();,if (this != null ) short[] sarray = this.content.array();
ArrayContainer.java,long[] bitarray = bc.bitmap.array();,if (bc != null ) long[] bitarray = bc.bitmap.array();
ArrayContainer.java,short[] sarray = this.content.array();,if (this != null ) short[] sarray = this.content.array();
BitmapContainer.java,this.bitmap = LongBuffer.allocate(newbitmap.limit());,if (LongBuffer != null ) this.bitmap = LongBuffer.allocate(newbitmap.limit());
BitmapContainer.java,short[] sarray = answer.content.array();,if (answer != null ) short[] sarray = answer.content.array();
BitmapContainer.java,long[] tb = this.bitmap.array();,if (this != null ) long[] tb = this.bitmap.array();
BitmapContainer.java,long[] bitarray = answer.bitmap.array();,if (answer != null ) long[] bitarray = answer.bitmap.array();
BitmapContainer.java,long[] tb = this.bitmap.array();,if (this != null ) long[] tb = this.bitmap.array();
BitmapContainer.java,long[] bitarray = answer.bitmap.array();,if (answer != null ) long[] bitarray = answer.bitmap.array();
BitmapContainer.java,long[] ba = this.bitmap.array();,if (this != null ) long[] ba = this.bitmap.array();
BitmapContainer.java,long[] b = this.bitmap.array();,if (this != null ) long[] b = this.bitmap.array();
BitmapContainer.java,long[] bitarray = answer.bitmap.array();,if (answer != null ) long[] bitarray = answer.bitmap.array();
BitmapContainer.java,long[] b = this.bitmap.array();,if (this != null ) long[] b = this.bitmap.array();
BitmapContainer.java,long[] b = this.bitmap.array();,if (this != null ) long[] b = this.bitmap.array();
BitmapContainer.java,long[] s = srb.bitmap.array();,if (srb != null ) long[] s = srb.bitmap.array();
BitmapContainer.java,long[] b = bitmap.array();,if (bitmap != null ) long[] b = bitmap.array();
BitmapContainer.java,long[] b = bitmap.array();,if (bitmap != null ) long[] b = bitmap.array();
BitmapContainer.java,long[] b = this.bitmap.array();,if (this != null ) long[] b = this.bitmap.array();
BitmapContainer.java,long[] b = this.bitmap.array();,if (this != null ) long[] b = this.bitmap.array();
BitmapContainer.java,long[] b = bitmap.array();,if (bitmap != null ) long[] b = bitmap.array();
BitmapContainer.java,long[] b = bitmap.array();,if (bitmap != null ) long[] b = bitmap.array();
BitmapContainer.java,long[] bitarray = bitmap.array();,if (bitmap != null ) long[] bitarray = bitmap.array();
BitmapContainer.java,long[] b = bitmap.array();,if (bitmap != null ) long[] b = bitmap.array();
BitmapContainer.java,short[] ac = arrayContainer.content.array();,if (arrayContainer != null ) short[] ac = arrayContainer.content.array();
BitmapContainer.java,long[] bitarray = answer.bitmap.array();,if (answer != null ) long[] bitarray = answer.bitmap.array();
BitmapContainer.java,long[] ab = answer.bitmap.array();,if (answer != null ) long[] ab = answer.bitmap.array();
BitmapContainer.java,long[] bitarray = answer.bitmap.array();,if (answer != null ) long[] bitarray = answer.bitmap.array();
BitmapContainer.java,long[] b = this.bitmap.array();,if (this != null ) long[] b = this.bitmap.array();
BitmapContainer.java,long[] bitarray = answer.bitmap.array();,if (answer != null ) long[] bitarray = answer.bitmap.array();
BitmapContainer.java,long[] b = this.bitmap.array();,if (this != null ) long[] b = this.bitmap.array();
BitmapContainer.java,long[] bitarray = answer.bitmap.array();,if (answer != null ) long[] bitarray = answer.bitmap.array();
BitmapContainer.java,long[] b = this.bitmap.array();,if (this != null ) long[] b = this.bitmap.array();
ImmutableRoaringBitmap.java,final int max = Util.toIntUnsigned(Util.maxLowBit());,if (Util != null ) final int max = Util.toIntUnsigned(Util.maxLowBit());
ImmutableRoaringBitmap.java,final IntIterator i = this.getIntIterator();,if (this != null ) final IntIterator i = this.getIntIterator();
RoaringArray.java,c = (Element) super.clone();,if (super != null ) c = (Element) super.clone();
RoaringArray.java,c.value = this.value.clone();,if (this != null ) c.value = this.value.clone();
RoaringArray.java,this.size = bb.getInt();,if (bb != null ) this.size = bb.getInt();
RoaringArray.java,keys[k] = bb.getShort();,if (bb != null ) keys[k] = bb.getShort();
RoaringArray.java,sa = (RoaringArray) super.clone();,if (super != null ) sa = (RoaringArray) super.clone();
RoaringArray.java,count += array[k].value.getArraySizeInBytes();,if (array[k] != null ) count += array[k].value.getArraySizeInBytes();
RoaringBitmap.java,answer = bm.clone();,if (bm != null ) answer = bm.clone();
RoaringBitmap.java,final int max = Util.toIntUnsigned(Util.maxLowBit());,if (Util != null ) final int max = Util.toIntUnsigned(Util.maxLowBit());
RoaringBitmap.java,final RoaringBitmap x = (RoaringBitmap) super.clone();,if (super != null ) final RoaringBitmap x = (RoaringBitmap) super.clone();
RoaringBitmap.java,x.highlowcontainer = highlowcontainer.clone();,if (highlowcontainer != null ) x.highlowcontainer = highlowcontainer.clone();
RoaringBitmap.java,final int max = Util.toIntUnsigned(Util.maxLowBit());,if (Util != null ) final int max = Util.toIntUnsigned(Util.maxLowBit());
RoaringBitmap.java,final IntIterator i = this.getIntIterator();,if (this != null ) final IntIterator i = this.getIntIterator();
TestRoaringBitmap.java,int[] array = rrand.toArray();,if (rrand != null ) int[] array = rrand.toArray();
TestRoaringBitmap.java,array = rr.toArray();,if (rr != null ) array = rr.toArray();
TestRoaringBitmap.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRoaringBitmap.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRoaringBitmap.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRoaringBitmap.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRoaringBitmap.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRoaringBitmap.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRoaringBitmap.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRoaringBitmap.java,int howmuch = rr.serializedSizeInBytes();,if (rr != null ) int howmuch = rr.serializedSizeInBytes();
TestRoaringBitmap.java,return counter == bc.getCardinality();,if (bc != null ) return counter == bc.getCardinality();
TestMemoryMapping.java,final long totalcount = fos.getChannel().position();,if (fos != null ) final long totalcount = fos.getChannel().position();
TestMemoryMapping.java,final long bef = System.currentTimeMillis();,if (System != null ) final long bef = System.currentTimeMillis();
TestMemoryMapping.java,final ByteBuffer bb = out.slice();,if (out != null ) final ByteBuffer bb = out.slice();
TestMemoryMapping.java,final long aft = System.currentTimeMillis();,if (System != null ) final long aft = System.currentTimeMillis();
TestRoaringBitmap.java,int[] array = rrand.toArray();,if (rrand != null ) int[] array = rrand.toArray();
TestRoaringBitmap.java,array = rr.toArray();,if (rr != null ) array = rr.toArray();
TestRoaringBitmap.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRoaringBitmap.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRoaringBitmap.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRoaringBitmap.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRoaringBitmap.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRoaringBitmap.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRoaringBitmap.java,final int rbcard = rb.getCardinality();,if (rb != null ) final int rbcard = rb.getCardinality();
TestRoaringBitmap.java,final ByteBuffer bb = ByteBuffer.wrap(bos.toByteArray());,if (ByteBuffer != null ) final ByteBuffer bb = ByteBuffer.wrap(bos.toByteArray());
TestRoaringBitmap.java,int howmuch = rr.serializedSizeInBytes();,if (rr != null ) int howmuch = rr.serializedSizeInBytes();
RoaringArray.java,c = (Element) super.clone();,if (super != null ) c = (Element) super.clone();
RoaringArray.java,c.value = this.value.clone();,if (this != null ) c.value = this.value.clone();
RoaringArray.java,boolean isbitmap = in.readBoolean();,if (in != null ) boolean isbitmap = in.readBoolean();
RoaringArray.java,count += this.array[k].value.serializedSizeInBytes();,if (this != null ) count += this.array[k].value.serializedSizeInBytes();
BitmapContainer.java,short[] sarray = content.array();,if (content != null ) short[] sarray = content.array();
RoaringArray.java,boolean isbitmap = in.readBoolean();,if (in != null ) boolean isbitmap = in.readBoolean();
RoaringBitmap.java,final RoaringBitmap x = (RoaringBitmap) super.clone();,if (super != null ) final RoaringBitmap x = (RoaringBitmap) super.clone();
RoaringBitmap.java,x.highlowcontainer = highlowcontainer.clone();,if (highlowcontainer != null ) x.highlowcontainer = highlowcontainer.clone();
RoaringBitmap.java,final IntIterator i = this.getIntIterator();,if (this != null ) final IntIterator i = this.getIntIterator();
RoaringBitmap.java,answer = bm.clone();,if (bm != null ) answer = bm.clone();
ArrayContainer.java,this.content = ShortBuffer.allocate(newcontent.limit());,if (ShortBuffer != null ) this.content = ShortBuffer.allocate(newcontent.limit());
ArrayContainer.java,assert outPos == buffer.limit();,if (buffer != null ) assert outPos == buffer.limit();
BitmapContainer.java,this.bitmap = LongBuffer.allocate(newbitmap.limit());,if (LongBuffer != null ) this.bitmap = LongBuffer.allocate(newbitmap.limit());
ImmutableRoaringBitmap.java,final IntIterator i = this.getIntIterator();,if (this != null ) final IntIterator i = this.getIntIterator();
RoaringBitmap.java,final RoaringBitmap x = (RoaringBitmap) super.clone();,if (super != null ) final RoaringBitmap x = (RoaringBitmap) super.clone();
RoaringBitmap.java,x.highlowcontainer = highlowcontainer.clone();,if (highlowcontainer != null ) x.highlowcontainer = highlowcontainer.clone();
RoaringBitmap.java,final IntIterator i = this.getIntIterator();,if (this != null ) final IntIterator i = this.getIntIterator();
RoaringBitmap.java,answer = bm.clone();,if (bm != null ) answer = bm.clone();
ArrayContainer.java,BitmapContainer a = this.toBitmapContainer();,if (this != null ) BitmapContainer a = this.toBitmapContainer();
ArrayContainer.java,final ArrayContainer answer = new ArrayContainer(content.limit());,if (ArrayContainer(content != null ) final ArrayContainer answer = new ArrayContainer(content.limit());
RoaringArray.java,sa = (RoaringArray) super.clone();,if (super != null ) sa = (RoaringArray) super.clone();
RoaringBitmap.java,int max = Util.toIntUnsigned(Util.maxLowBit());,if (Util != null ) int max = Util.toIntUnsigned(Util.maxLowBit());
RoaringBitmap.java,int max = Util.toIntUnsigned(Util.maxLowBit());,if (Util != null ) int max = Util.toIntUnsigned(Util.maxLowBit());
TestRoaringBitmap.java,int[] array = rrand.toArray();,if (rrand != null ) int[] array = rrand.toArray();
TestRoaringBitmap.java,int[] arrayres = rrand.toArray();,if (rrand != null ) int[] arrayres = rrand.toArray();
TestRoaringBitmap.java,int[] array = rr.toArray();,if (rr != null ) int[] array = rr.toArray();
TestRoaringBitmap.java,int[] arrayrr = rb.toArray();,if (rb != null ) int[] arrayrr = rb.toArray();
TestRoaringBitmap.java,int rbcard = rb.getCardinality();,if (rb != null ) int rbcard = rb.getCardinality();
TestRoaringBitmap.java,int rbcard = rb.getCardinality();,if (rb != null ) int rbcard = rb.getCardinality();
TestRoaringBitmap.java,int rbcard = rb.getCardinality();,if (rb != null ) int rbcard = rb.getCardinality();
TestRoaringBitmap.java,int rbcard = rb.getCardinality();,if (rb != null ) int rbcard = rb.getCardinality();
TestRoaringBitmap.java,int rbcard = rb.getCardinality();,if (rb != null ) int rbcard = rb.getCardinality();
TestRoaringBitmap.java,int rbcard = rb.getCardinality();,if (rb != null ) int rbcard = rb.getCardinality();
TestRoaringBitmap.java,int rbcard = rb.getCardinality();,if (rb != null ) int rbcard = rb.getCardinality();
TestRoaringBitmap.java,int[] array = rror.toArray();,if (rror != null ) int[] array = rror.toArray();
TestRoaringBitmap.java,int[] arrayrr = rr.toArray();,if (rr != null ) int[] arrayrr = rr.toArray();
TestRoaringBitmap.java,int[] arrayirr = rr.toArray();,if (rr != null ) int[] arrayirr = rr.toArray();
TestRoaringBitmap.java,int[] arrayor = rror.toArray();,if (rror != null ) int[] arrayor = rror.toArray();
BadCompressionHunter.java,double rrsize = rr.getSizeInBytes();,if (rr != null ) double rrsize = rr.getSizeInBytes();
BadPerformanceHunter.java,long bef = System.nanoTime();,if (System != null ) long bef = System.nanoTime();
BadPerformanceHunter.java,long aft = System.nanoTime();,if (System != null ) long aft = System.nanoTime();
BadPerformanceHunter.java,long bef = System.nanoTime();,if (System != null ) long bef = System.nanoTime();
BadPerformanceHunter.java,long aft = System.nanoTime();,if (System != null ) long aft = System.nanoTime();
BenchmarkReal.java,start = System.nanoTime();,if (System != null ) start = System.nanoTime();
BenchmarkReal.java,stop = System.nanoTime();,if (System != null ) stop = System.nanoTime();
BenchmarkReal.java,start = System.nanoTime();,if (System != null ) start = System.nanoTime();
BenchmarkReal.java,stop = System.nanoTime();,if (System != null ) stop = System.nanoTime();
BenchmarkReal3.java,start = System.nanoTime();,if (System != null ) start = System.nanoTime();
BenchmarkReal3.java,stop = System.nanoTime();,if (System != null ) stop = System.nanoTime();
BenchmarkReal3.java,start = System.nanoTime();,if (System != null ) start = System.nanoTime();
BenchmarkReal3.java,stop = System.nanoTime();,if (System != null ) stop = System.nanoTime();
RealDataRetriever.java,"String oneLine = buf.readLine(); // a single, perhaps","if (perhaps != null ) String oneLine = buf.readLine(); // a single, perhaps"
AsymmetricBenchmark.java,bef = System.nanoTime();,if (System != null ) bef = System.nanoTime();
AsymmetricBenchmark.java,aft = System.nanoTime();,if (System != null ) aft = System.nanoTime();
AsymmetricBenchmark.java,bef = System.nanoTime();,if (System != null ) bef = System.nanoTime();
AsymmetricBenchmark.java,aft = System.nanoTime();,if (System != null ) aft = System.nanoTime();
AsymmetricBenchmark.java,bef = System.nanoTime();,if (System != null ) bef = System.nanoTime();
AsymmetricBenchmark.java,aft = System.nanoTime();,if (System != null ) aft = System.nanoTime();
AsymmetricBenchmark.java,bef = System.nanoTime();,if (System != null ) bef = System.nanoTime();
AsymmetricBenchmark.java,aft = System.nanoTime();,if (System != null ) aft = System.nanoTime();
AsymmetricBenchmark.java,bef = System.nanoTime();,if (System != null ) bef = System.nanoTime();
AsymmetricBenchmark.java,aft = System.nanoTime();,if (System != null ) aft = System.nanoTime();
AsymmetricBenchmark.java,bef = System.nanoTime();,if (System != null ) bef = System.nanoTime();
AsymmetricBenchmark.java,aft = System.nanoTime();,if (System != null ) aft = System.nanoTime();
AsymmetricBenchmark.java,bef = System.nanoTime();,if (System != null ) bef = System.nanoTime();
AsymmetricBenchmark.java,aft = System.nanoTime();,if (System != null ) aft = System.nanoTime();
AsymmetricBenchmark.java,bef = System.nanoTime();,if (System != null ) bef = System.nanoTime();
AsymmetricBenchmark.java,aft = System.nanoTime();,if (System != null ) aft = System.nanoTime();
AsymmetricBenchmark.java,bef = System.nanoTime();,if (System != null ) bef = System.nanoTime();
AsymmetricBenchmark.java,aft = System.nanoTime();,if (System != null ) aft = System.nanoTime();
AsymmetricBenchmark.java,bef = System.nanoTime();,if (System != null ) bef = System.nanoTime();
AsymmetricBenchmark.java,aft = System.nanoTime();,if (System != null ) aft = System.nanoTime();
AsymmetricBenchmark.java,bef = System.nanoTime();,if (System != null ) bef = System.nanoTime();
AsymmetricBenchmark.java,aft = System.nanoTime();,if (System != null ) aft = System.nanoTime();
AsymmetricBenchmark.java,bef = System.nanoTime();,if (System != null ) bef = System.nanoTime();
AsymmetricBenchmark.java,aft = System.nanoTime();,if (System != null ) aft = System.nanoTime();
Benchmark.java,bef = System.nanoTime();,if (System != null ) bef = System.nanoTime();
Benchmark.java,aft = System.nanoTime();,if (System != null ) aft = System.nanoTime();
Benchmark.java,bef = System.nanoTime();,if (System != null ) bef = System.nanoTime();
Benchmark.java,aft = System.nanoTime();,if (System != null ) aft = System.nanoTime();
Benchmark.java,bef = System.nanoTime();,if (System != null ) bef = System.nanoTime();
Benchmark.java,aft = System.nanoTime();,if (System != null ) aft = System.nanoTime();
Benchmark.java,bef = System.nanoTime();,if (System != null ) bef = System.nanoTime();
Benchmark.java,aft = System.nanoTime();,if (System != null ) aft = System.nanoTime();
Benchmark.java,bef = System.nanoTime();,if (System != null ) bef = System.nanoTime();
Benchmark.java,aft = System.nanoTime();,if (System != null ) aft = System.nanoTime();
Benchmark.java,bef = System.nanoTime();,if (System != null ) bef = System.nanoTime();
Benchmark.java,aft = System.nanoTime();,if (System != null ) aft = System.nanoTime();
Benchmark.java,bef = System.nanoTime();,if (System != null ) bef = System.nanoTime();
Benchmark.java,aft = System.nanoTime();,if (System != null ) aft = System.nanoTime();
Benchmark.java,bef = System.nanoTime();,if (System != null ) bef = System.nanoTime();
Benchmark.java,aft = System.nanoTime();,if (System != null ) aft = System.nanoTime();
Benchmark.java,bef = System.nanoTime();,if (System != null ) bef = System.nanoTime();
Benchmark.java,aft = System.nanoTime();,if (System != null ) aft = System.nanoTime();
Benchmark.java,bef = System.nanoTime();,if (System != null ) bef = System.nanoTime();
Benchmark.java,aft = System.nanoTime();,if (System != null ) aft = System.nanoTime();
Benchmark.java,bef = System.nanoTime();,if (System != null ) bef = System.nanoTime();
Benchmark.java,aft = System.nanoTime();,if (System != null ) aft = System.nanoTime();
Benchmark.java,bef = System.nanoTime();,if (System != null ) bef = System.nanoTime();
Benchmark.java,aft = System.nanoTime();,if (System != null ) aft = System.nanoTime();
Benchmark.java,bef = System.nanoTime();,if (System != null ) bef = System.nanoTime();
Benchmark.java,aft = System.nanoTime();,if (System != null ) aft = System.nanoTime();
Benchmark.java,bef = System.nanoTime();,if (System != null ) bef = System.nanoTime();
Benchmark.java,aft = System.nanoTime();,if (System != null ) aft = System.nanoTime();
Benchmark.java,bef = System.nanoTime();,if (System != null ) bef = System.nanoTime();
Benchmark.java,aft = System.nanoTime();,if (System != null ) aft = System.nanoTime();
Benchmark.java,bef = System.nanoTime();,if (System != null ) bef = System.nanoTime();
Benchmark.java,aft = System.nanoTime();,if (System != null ) aft = System.nanoTime();
DataGenerator.java,final double a = rand.nextDouble();,if (rand != null ) final double a = rand.nextDouble();
DataGenerator.java,final double a = rand.nextDouble();,if (rand != null ) final double a = rand.nextDouble();
RoaringBitmap.java,int max = Util.toIntUnsigned(Util.maxLowBit());,if (Util != null ) int max = Util.toIntUnsigned(Util.maxLowBit());
RoaringBitmap.java,answer = bm.clone();,if (bm != null ) answer = bm.clone();
RoaringBitmap.java,int max = Util.toIntUnsigned(Util.maxLowBit());,if (Util != null ) int max = Util.toIntUnsigned(Util.maxLowBit());
TestRoaringBitmap.java,ByteArrayInputStream bis = new ByteArrayInputStream(bos.toByteArray());,if (ByteArrayInputStream(bos != null ) ByteArrayInputStream bis = new ByteArrayInputStream(bos.toByteArray());
TestRoaringBitmap.java,int rbcard = rb.getCardinality();,if (rb != null ) int rbcard = rb.getCardinality();
TestRoaringBitmap.java,int rbcard = rb.getCardinality();,if (rb != null ) int rbcard = rb.getCardinality();
TestRoaringBitmap.java,int rbcard = rb.getCardinality();,if (rb != null ) int rbcard = rb.getCardinality();
TestRoaringBitmap.java,int rbcard = rb.getCardinality();,if (rb != null ) int rbcard = rb.getCardinality();
TestRoaringBitmap.java,int rbcard = rb.getCardinality();,if (rb != null ) int rbcard = rb.getCardinality();
TestRoaringBitmap.java,int rbcard = rb.getCardinality();,if (rb != null ) int rbcard = rb.getCardinality();
TestRoaringBitmap.java,int rbcard = rb.getCardinality();,if (rb != null ) int rbcard = rb.getCardinality();
BadPerformanceHunter.java,long bef = System.currentTimeMillis();,if (System != null ) long bef = System.currentTimeMillis();
BadPerformanceHunter.java,long aft = System.currentTimeMillis();,if (System != null ) long aft = System.currentTimeMillis();
BadPerformanceHunter.java,long bef = System.currentTimeMillis();,if (System != null ) long bef = System.currentTimeMillis();
BadPerformanceHunter.java,long aft = System.currentTimeMillis();,if (System != null ) long aft = System.currentTimeMillis();
RealDataRetriever.java,"String oneLine = buf.readLine();  // a single, perhaps very long, line","if (line != null ) String oneLine = buf.readLine();  // a single, perhaps very long, line"
ArrayContainer.java,ArrayContainer answer = ContainerFactory.getArrayContainer();,if (ContainerFactory != null ) ArrayContainer answer = ContainerFactory.getArrayContainer();
ArrayContainer.java,ArrayContainer answer = ContainerFactory.getArrayContainer();,if (ContainerFactory != null ) ArrayContainer answer = ContainerFactory.getArrayContainer();
ArrayContainer.java,final ArrayContainer x = (ArrayContainer) super.clone();,if (super != null ) final ArrayContainer x = (ArrayContainer) super.clone();
ArrayContainer.java,ArrayContainer answer = ContainerFactory.getArrayContainer();,if (ContainerFactory != null ) ArrayContainer answer = ContainerFactory.getArrayContainer();
ArrayContainer.java,ArrayContainer answer = ContainerFactory.getArrayContainer();,if (ContainerFactory != null ) ArrayContainer answer = ContainerFactory.getArrayContainer();
BitmapContainer.java,final BitmapContainer x = (BitmapContainer) super.clone();,if (super != null ) final BitmapContainer x = (BitmapContainer) super.clone();
BenchSpeedyRBConcise.java,double x = rand.nextDouble();,if (rand != null ) double x = rand.nextDouble();
BenchSpeedyRBConcise.java,FileWriter fw = new FileWriter(file.getAbsoluteFile());,if (FileWriter(file != null ) FileWriter fw = new FileWriter(file.getAbsoluteFile());
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,size += bitmap[k].getSizeInBytes(); //first array (bitmap),if ((bitmap) != null ) size += bitmap[k].getSizeInBytes(); //first array (bitmap)
BenchSpeedyRBConcise.java,cardinality += bitmap[k].getCardinality();,if (bitmap[k] != null ) cardinality += bitmap[k].getCardinality();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,int[] array = bitmap[k].toArray();,if (bitmap[k] != null ) int[] array = bitmap[k].toArray();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,cardinality += bitmap[k].cardinality();,if (bitmap[k] != null ) cardinality += bitmap[k].cardinality();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,cardinality += bitmap[k].cardinality();,if (bitmap[k] != null ) cardinality += bitmap[k].cardinality();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,Iterator<Integer> i = bitmap[k].iterator(); i.hasNext(); array[c++] = i,if (i != null ) Iterator<Integer> i = bitmap[k].iterator(); i.hasNext(); array[c++] = i
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,int[] array = bitmap[k].toArray();,if (bitmap[k] != null ) int[] array = bitmap[k].toArray();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,size += bitmap[k].sizeInBytes();,if (bitmap[k] != null ) size += bitmap[k].sizeInBytes();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,int[] array = bitmap[k].toArray();,if (bitmap[k] != null ) int[] array = bitmap[k].toArray();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,cardinality += bitmap[k].cardinality();,if (bitmap[k] != null ) cardinality += bitmap[k].cardinality();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,size += ewah[k].sizeInBytes();,if (ewah[k] != null ) size += ewah[k].sizeInBytes();
BenchSpeedyRBConcise.java,cardinality += ewah[k].cardinality();,if (ewah[k] != null ) cardinality += ewah[k].cardinality();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,int[] array = ewah[k].toArray();,if (ewah[k] != null ) int[] array = ewah[k].toArray();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,size += ewah[k].sizeInBytes();,if (ewah[k] != null ) size += ewah[k].sizeInBytes();
BenchSpeedyRBConcise.java,cardinality += ewah[k].cardinality();,if (ewah[k] != null ) cardinality += ewah[k].cardinality();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,int[] array = ewah[k].toArray();,if (ewah[k] != null ) int[] array = ewah[k].toArray();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,FileWriter fw = new FileWriter(file.getAbsoluteFile());,if (FileWriter(file != null ) FileWriter fw = new FileWriter(file.getAbsoluteFile());
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,cardinality += bitmap[k].cardinality();,if (bitmap[k] != null ) cardinality += bitmap[k].cardinality();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,Iterator<Integer> i = bitmap[k].iterator(); i.hasNext(); array[c++] = i,if (i != null ) Iterator<Integer> i = bitmap[k].iterator(); i.hasNext(); array[c++] = i
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,int[] array = bitmap[k].toArray();,if (bitmap[k] != null ) int[] array = bitmap[k].toArray();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,int[] array = bitmap[k].toArray();,if (bitmap[k] != null ) int[] array = bitmap[k].toArray();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,size += bitmap[k].sizeInBytes();,if (bitmap[k] != null ) size += bitmap[k].sizeInBytes();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,int[] array = bitmap[k].toArray();,if (bitmap[k] != null ) int[] array = bitmap[k].toArray();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,size += ewah[k].sizeInBytes();,if (ewah[k] != null ) size += ewah[k].sizeInBytes();
Benchmark.java,cardinality += ewah[k].cardinality();,if (ewah[k] != null ) cardinality += ewah[k].cardinality();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,int[] array = ewah[k].toArray();,if (ewah[k] != null ) int[] array = ewah[k].toArray();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,size += ewah[k].sizeInBytes();,if (ewah[k] != null ) size += ewah[k].sizeInBytes();
Benchmark.java,cardinality += ewah[k].cardinality();,if (ewah[k] != null ) cardinality += ewah[k].cardinality();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,int[] array = ewah[k].toArray();,if (ewah[k] != null ) int[] array = ewah[k].toArray();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
ClusteredDataGenerator.java,final double p = this.unidg.rand.nextDouble();,if (this != null ) final double p = this.unidg.rand.nextDouble();
IntArray.java,clone = (IntArray) super.clone();,if (super != null ) clone = (IntArray) super.clone();
IntArray.java,this.size = in.readInt();,if (in != null ) this.size = in.readInt();
LineChartDemo1.java,final CategoryPlot plot = (CategoryPlot) chart.getPlot();,if (chart != null ) final CategoryPlot plot = (CategoryPlot) chart.getPlot();
LineChartDemo1.java,final NumberAxis rangeAxis = (NumberAxis) plot.getRangeAxis();,if (plot != null ) final NumberAxis rangeAxis = (NumberAxis) plot.getRangeAxis();
LineChartDemo1.java,final LineAndShapeRenderer renderer = (LineAndShapeRenderer) plot.getRenderer();,if (plot != null ) final LineAndShapeRenderer renderer = (LineAndShapeRenderer) plot.getRenderer();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,size += bitmap.getSizeInBytes();,if (bitmap != null ) size += bitmap.getSizeInBytes();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,int[] array = bitmap.toArray();,if (bitmap != null ) int[] array = bitmap.toArray();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,int[] array = bitmap.toArray();,if (bitmap != null ) int[] array = bitmap.toArray();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,Iterator<Integer> i = bitmap.iterator(); i.hasNext(); array[c++] = i,if (i != null ) Iterator<Integer> i = bitmap.iterator(); i.hasNext(); array[c++] = i
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,size += ewah.sizeInBytes();,if (ewah != null ) size += ewah.sizeInBytes();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,int[] array = ewah.toArray();,if (ewah != null ) int[] array = ewah.toArray();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,int[] array = ewah.toArray();,if (ewah != null ) int[] array = ewah.toArray();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,size += ewah.sizeInBytes();,if (ewah != null ) size += ewah.sizeInBytes();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,int[] array = ewah.toArray();,if (ewah != null ) int[] array = ewah.toArray();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,int[] array = ewah.toArray();,if (ewah != null ) int[] array = ewah.toArray();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,path = file.getSelectedFile().getAbsolutePath();,if (file != null ) path = file.getSelectedFile().getAbsolutePath();
SpeedyRoaringBenchmark.java,double x = rand.nextDouble();,if (rand != null ) double x = rand.nextDouble();
SpeedyRoaringBenchmark.java,FileWriter fw = new FileWriter(file.getAbsoluteFile());,if (FileWriter(file != null ) FileWriter fw = new FileWriter(file.getAbsoluteFile());
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,size += bitmap[k].getSizeInBytes(); //first array (bitmap),if ((bitmap) != null ) size += bitmap[k].getSizeInBytes(); //first array (bitmap)
SpeedyRoaringBenchmark.java,cardinality += bitmap[k].getCardinality();,if (bitmap[k] != null ) cardinality += bitmap[k].getCardinality();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,int[] array = bitmap[k].toArray();,if (bitmap[k] != null ) int[] array = bitmap[k].toArray();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,cardinality += bitmap[k].cardinality();,if (bitmap[k] != null ) cardinality += bitmap[k].cardinality();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,Iterator<Integer> i = bitmap[k].iterator(); i.hasNext(); array[c++] = i,if (i != null ) Iterator<Integer> i = bitmap[k].iterator(); i.hasNext(); array[c++] = i
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,int[] array = bitmap[k].toArray();,if (bitmap[k] != null ) int[] array = bitmap[k].toArray();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,int[] array = bitmap[k].toArray();,if (bitmap[k] != null ) int[] array = bitmap[k].toArray();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,size += bitmap[k].sizeInBytes();,if (bitmap[k] != null ) size += bitmap[k].sizeInBytes();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,int[] array = bitmap[k].toArray();,if (bitmap[k] != null ) int[] array = bitmap[k].toArray();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,cardinality += bitmap[k].cardinality();,if (bitmap[k] != null ) cardinality += bitmap[k].cardinality();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,size += ewah[k].sizeInBytes();,if (ewah[k] != null ) size += ewah[k].sizeInBytes();
SpeedyRoaringBenchmark.java,cardinality += ewah[k].cardinality();,if (ewah[k] != null ) cardinality += ewah[k].cardinality();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,int[] array = ewah[k].toArray();,if (ewah[k] != null ) int[] array = ewah[k].toArray();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,size += ewah[k].sizeInBytes();,if (ewah[k] != null ) size += ewah[k].sizeInBytes();
SpeedyRoaringBenchmark.java,cardinality += ewah[k].cardinality();,if (ewah[k] != null ) cardinality += ewah[k].cardinality();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,int[] array = ewah[k].toArray();,if (ewah[k] != null ) int[] array = ewah[k].toArray();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,size += bitmap[k].getSizeInBytes();,if (bitmap[k] != null ) size += bitmap[k].getSizeInBytes();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,int[] array = bitmap[k].toArray();,if (bitmap[k] != null ) int[] array = bitmap[k].toArray();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,int[] array = bitmap[k].toArray();,if (bitmap[k] != null ) int[] array = bitmap[k].toArray();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,Iterator<Integer> i = bitmap[k].iterator(); i,if (i != null ) Iterator<Integer> i = bitmap[k].iterator(); i
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,size += ewah[k].sizeInBytes();,if (ewah[k] != null ) size += ewah[k].sizeInBytes();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,int[] array = ewah[k].toArray();,if (ewah[k] != null ) int[] array = ewah[k].toArray();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,size += ewah[k].sizeInBytes();,if (ewah[k] != null ) size += ewah[k].sizeInBytes();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,int[] array = ewah[k].toArray();,if (ewah[k] != null ) int[] array = ewah[k].toArray();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
UniformDataGenerator.java,ans[k] = i.next().intValue();,if (i != null ) ans[k] = i.next().intValue();
UniformDistribution.java,double a = this.rand.nextDouble();,if (this != null ) double a = this.rand.nextDouble();
UniformDistribution.java,Object[] tab = hs.toArray();,if (hs != null ) Object[] tab = hs.toArray();
ZipfianDistribution.java,double a = this.rand.nextDouble();,if (this != null ) double a = this.rand.nextDouble();
ZipfianDistribution.java,Object[] tab = hs.toArray();,if (hs != null ) Object[] tab = hs.toArray();
ArrayContainer.java,final ArrayContainer x = (ArrayContainer) super.clone();,if (super != null ) final ArrayContainer x = (ArrayContainer) super.clone();
BitmapContainer.java,int card = this.expensiveComputeCardinality();,if (this != null ) int card = this.expensiveComputeCardinality();
RoaringBitmap.java,ArrayContainer newac = ContainerFactory.getArrayContainer();,if (ContainerFactory != null ) ArrayContainer newac = ContainerFactory.getArrayContainer();
RoaringBitmap.java,final ShortIterator si = s.getValue().getShortIterator();,if (s != null ) final ShortIterator si = s.getValue().getShortIterator();
RoaringBitmap.java,RoaringBitmap x = (RoaringBitmap) super.clone();,if (super != null ) RoaringBitmap x = (RoaringBitmap) super.clone();
RoaringBitmap.java,int nbNodes = this.highlowcontainer.size();,if (this != null ) int nbNodes = this.highlowcontainer.size();
SpeedyArray.java,sa = (SpeedyArray) super.clone();,if (super != null ) sa = (SpeedyArray) super.clone();
SpeedyRoaringBitmap.java,x.highlowcontainer = highlowcontainer.clone();,if (highlowcontainer != null ) x.highlowcontainer = highlowcontainer.clone();
SpeedyRoaringBitmap.java,int nbNodes = this.highlowcontainer.size();,if (this != null ) int nbNodes = this.highlowcontainer.size();
Util.java,average /= rb.highlowcontainer.size();,if (rb != null ) average /= rb.highlowcontainer.size();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,size += bitmap[k].getSizeInBytes(); //first array (bitmap),if ((bitmap) != null ) size += bitmap[k].getSizeInBytes(); //first array (bitmap)
BenchSpeedyRBConcise.java,cardinality += bitmap[k].getCardinality();,if (bitmap[k] != null ) cardinality += bitmap[k].getCardinality();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,int[] array = bitmap[k].getIntegers();,if (bitmap[k] != null ) int[] array = bitmap[k].getIntegers();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
BenchSpeedyRBConcise.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
BenchSpeedyRBConcise.java,int[] array = bitmap[k].getIntegers();,if (bitmap[k] != null ) int[] array = bitmap[k].getIntegers();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,size += bitmap[k].getSizeInBytes(); //first array (bitmap),if ((bitmap) != null ) size += bitmap[k].getSizeInBytes(); //first array (bitmap)
Benchmark.java,cardinality += bitmap[k].getCardinality();,if (bitmap[k] != null ) cardinality += bitmap[k].getCardinality();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,int[] array = bitmap[k].getIntegers();,if (bitmap[k] != null ) int[] array = bitmap[k].getIntegers();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,int[] array = bitmap.getIntegers();,if (bitmap != null ) int[] array = bitmap.getIntegers();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,size += bitmap[k].getSizeInBytes(); //first array (bitmap),if ((bitmap) != null ) size += bitmap[k].getSizeInBytes(); //first array (bitmap)
SpeedyRoaringBenchmark.java,cardinality += bitmap[k].getCardinality();,if (bitmap[k] != null ) cardinality += bitmap[k].getCardinality();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,int[] array = bitmap[k].getIntegers();,if (bitmap[k] != null ) int[] array = bitmap[k].getIntegers();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SpeedyRoaringBenchmark.java,int[] array = bitmap[k].getIntegers();,if (bitmap[k] != null ) int[] array = bitmap[k].getIntegers();
StarSchemaBenchmark.java,int[] array = bitmap[k].getIntegers();,if (bitmap[k] != null ) int[] array = bitmap[k].getIntegers();
TestsSpeedyRoaringBitmap.java,int[] array = rrand.getIntegers();,if (rrand != null ) int[] array = rrand.getIntegers();
TestsSpeedyRoaringBitmap.java,int[] array = rrand.getIntegers();,if (rrand != null ) int[] array = rrand.getIntegers();
TestsSpeedyRoaringBitmap.java,int[] arrayres = rrand.getIntegers();,if (rrand != null ) int[] arrayres = rrand.getIntegers();
TestsSpeedyRoaringBitmap.java,int[] array = rr.getIntegers();,if (rr != null ) int[] array = rr.getIntegers();
TestsSpeedyRoaringBitmap.java,int[] arrayrr = rb.getIntegers();,if (rb != null ) int[] arrayrr = rb.getIntegers();
TestsSpeedyRoaringBitmap.java,int[] array = rror.getIntegers();,if (rror != null ) int[] array = rror.getIntegers();
TestsSpeedyRoaringBitmap.java,int[] arrayrr = rr.getIntegers();,if (rr != null ) int[] arrayrr = rr.getIntegers();
TestsSpeedyRoaringBitmap.java,int[] arrayor = rror.getIntegers();,if (rror != null ) int[] arrayor = rror.getIntegers();
BenchmarkReal.java,start=System.nanoTime();,if (start=System != null ) start=System.nanoTime();
BenchmarkReal.java,stop=System.nanoTime();,if (stop=System != null ) stop=System.nanoTime();
BenchmarkReal.java,start=System.nanoTime();,if (start=System != null ) start=System.nanoTime();
BenchmarkReal.java,stop=System.nanoTime();,if (stop=System != null ) stop=System.nanoTime();
ArrayContainer.java,ArrayContainer answer = ContainerFactory.getArrayContainer();,if (ContainerFactory != null ) ArrayContainer answer = ContainerFactory.getArrayContainer();
ArrayContainer.java,ArrayContainer answer = ContainerFactory.getArrayContainer();,if (ContainerFactory != null ) ArrayContainer answer = ContainerFactory.getArrayContainer();
ArrayContainer.java,ArrayContainer answer = ContainerFactory.getArrayContainer();,if (ContainerFactory != null ) ArrayContainer answer = ContainerFactory.getArrayContainer();
ArrayContainer.java,final ArrayContainer x = (ArrayContainer) super.clone();,if (super != null ) final ArrayContainer x = (ArrayContainer) super.clone();
ArrayContainer.java,final ArrayContainer answer = ContainerFactory.getArrayContainer();,if (ContainerFactory != null ) final ArrayContainer answer = ContainerFactory.getArrayContainer();
BitmapContainer.java,final BitmapContainer answer = ContainerFactory.getUnintializedBitmapContainer();,if (ContainerFactory != null ) final BitmapContainer answer = ContainerFactory.getUnintializedBitmapContainer();
BitmapContainer.java,final BitmapContainer answer = ContainerFactory.getUnintializedBitmapContainer();,if (ContainerFactory != null ) final BitmapContainer answer = ContainerFactory.getUnintializedBitmapContainer();
BitmapContainer.java,final ArrayContainer answer = ContainerFactory.getArrayContainer();,if (ContainerFactory != null ) final ArrayContainer answer = ContainerFactory.getArrayContainer();
BitmapContainer.java,final BitmapContainer answer = ContainerFactory.getUnintializedBitmapContainer();,if (ContainerFactory != null ) final BitmapContainer answer = ContainerFactory.getUnintializedBitmapContainer();
BitmapContainer.java,final BitmapContainer x = (BitmapContainer) super.clone();,if (super != null ) final BitmapContainer x = (BitmapContainer) super.clone();
SpeedyArray.java,sa = (SpeedyArray) super.clone();,if (super != null ) sa = (SpeedyArray) super.clone();
SpeedyRoaringBitmap.java,x.highlowcontainer = highlowcontainer.clone();,if (highlowcontainer != null ) x.highlowcontainer = highlowcontainer.clone();
SpeedyRoaringBitmap.java,int nbNodes = this.highlowcontainer.size();,if (this != null ) int nbNodes = this.highlowcontainer.size();
TestsSpeedyRoaringBitmap.java,int[] array = rr.getIntegers();,if (rr != null ) int[] array = rr.getIntegers();
TestsSpeedyRoaringBitmap.java,int[] array = rrand.getIntegers();,if (rrand != null ) int[] array = rrand.getIntegers();
TestsSpeedyRoaringBitmap.java,int[] array = rrand.getIntegers();,if (rrand != null ) int[] array = rrand.getIntegers();
TestsSpeedyRoaringBitmap.java,int[] array = rror.getIntegers();,if (rror != null ) int[] array = rror.getIntegers();
TestsSpeedyRoaringBitmap.java,int[] arrayrr = rr.getIntegers();,if (rr != null ) int[] arrayrr = rr.getIntegers();
TestsSpeedyRoaringBitmap.java,int[] arrayor = rror.getIntegers();,if (rror != null ) int[] arrayor = rror.getIntegers();
TestsSpeedyRoaringBitmap.java,int[] arrayres = rrand.getIntegers();,if (rrand != null ) int[] arrayres = rrand.getIntegers();
TestsSpeedyRoaringBitmap.java,int[] arrayrr = rb.getIntegers();,if (rb != null ) int[] arrayrr = rb.getIntegers();
TestsSpeedyRoaringBitmap.java,int[] array = rr.getIntegers();,if (rr != null ) int[] array = rr.getIntegers();
TestsSpeedyRoaringBitmap.java,int[] array = rrand.getIntegers();,if (rrand != null ) int[] array = rrand.getIntegers();
TestsSpeedyRoaringBitmap.java,int[] array = rrand.getIntegers();,if (rrand != null ) int[] array = rrand.getIntegers();
TestsSpeedyRoaringBitmap.java,int[] array = rror.getIntegers();,if (rror != null ) int[] array = rror.getIntegers();
TestsSpeedyRoaringBitmap.java,int[] arrayrr = rr.getIntegers();,if (rr != null ) int[] arrayrr = rr.getIntegers();
TestsSpeedyRoaringBitmap.java,int[] arrayor = rror.getIntegers();,if (rror != null ) int[] arrayor = rror.getIntegers();
Benchmark.java,FileWriter fw = new FileWriter(file.getAbsoluteFile());,if (FileWriter(file != null ) FileWriter fw = new FileWriter(file.getAbsoluteFile());
BitmapContainer.java,final BitmapContainer answer = ContainerFactory.getUnintializedBitmapContainer();,if (ContainerFactory != null ) final BitmapContainer answer = ContainerFactory.getUnintializedBitmapContainer();
BitmapContainer.java,final ArrayContainer answer = ContainerFactory.getArrayContainer();,if (ContainerFactory != null ) final ArrayContainer answer = ContainerFactory.getArrayContainer();
BitmapContainer.java,final BitmapContainer answer = ContainerFactory.getUnintializedBitmapContainer();,if (ContainerFactory != null ) final BitmapContainer answer = ContainerFactory.getUnintializedBitmapContainer();
BitmapContainer.java,int card = this.expensiveComputeCardinality();,if (this != null ) int card = this.expensiveComputeCardinality();
SpeedyArray.java,sa = (SpeedyArray) super.clone();,if (super != null ) sa = (SpeedyArray) super.clone();
SpeedyRoaringBitmap.java,int nbNodes = this.highlowcontainer.getnbKeys();,if (this != null ) int nbNodes = this.highlowcontainer.getnbKeys();
Benchmark.java,bef = System.nanoTime();,if (System != null ) bef = System.nanoTime();
Benchmark.java,aft = System.nanoTime();,if (System != null ) aft = System.nanoTime();
Benchmark.java,bef = System.nanoTime();,if (System != null ) bef = System.nanoTime();
Benchmark.java,bef = System.nanoTime();,if (System != null ) bef = System.nanoTime();
Benchmark.java,bef = System.nanoTime();,if (System != null ) bef = System.nanoTime();
Benchmark.java,bef = System.nanoTime();,if (System != null ) bef = System.nanoTime();
Benchmark.java,aft = System.nanoTime();,if (System != null ) aft = System.nanoTime();
BitmapContainer.java,final BitmapContainer answer = ContainerFactory.getUnintializedBitmapContainer();,if (ContainerFactory != null ) final BitmapContainer answer = ContainerFactory.getUnintializedBitmapContainer();
BitmapContainer.java,final BitmapContainer x = (BitmapContainer) super.clone();,if (super != null ) final BitmapContainer x = (BitmapContainer) super.clone();
Benchmark.java,bef = System.nanoTime();,if (System != null ) bef = System.nanoTime();
Benchmark.java,aft = System.nanoTime();,if (System != null ) aft = System.nanoTime();
Benchmark.java,bef = System.nanoTime();,if (System != null ) bef = System.nanoTime();
Benchmark.java,aft = System.nanoTime();,if (System != null ) aft = System.nanoTime();
Benchmark.java,bef = System.nanoTime();,if (System != null ) bef = System.nanoTime();
Benchmark.java,aft = System.nanoTime();,if (System != null ) aft = System.nanoTime();
Benchmark.java,bef = System.nanoTime();,if (System != null ) bef = System.nanoTime();
Benchmark.java,aft = System.nanoTime();,if (System != null ) aft = System.nanoTime();
DataGenerator.java,double a = rand.nextDouble();,if (rand != null ) double a = rand.nextDouble();
DataGenerator.java,double a = rand.nextDouble();,if (rand != null ) double a = rand.nextDouble();
Benchmark.java,bef = System.nanoTime();,if (System != null ) bef = System.nanoTime();
Benchmark.java,aft = System.nanoTime();,if (System != null ) aft = System.nanoTime();
Benchmark.java,bef = System.nanoTime();,if (System != null ) bef = System.nanoTime();
Benchmark.java,aft = System.nanoTime();,if (System != null ) aft = System.nanoTime();
Benchmark.java,bef = System.nanoTime();,if (System != null ) bef = System.nanoTime();
Benchmark.java,aft = System.nanoTime();,if (System != null ) aft = System.nanoTime();
Benchmark.java,bef = System.nanoTime();,if (System != null ) bef = System.nanoTime();
Benchmark.java,aft = System.nanoTime();,if (System != null ) aft = System.nanoTime();
Benchmark.java,bef = System.nanoTime();,if (System != null ) bef = System.nanoTime();
Benchmark.java,aft = System.nanoTime();,if (System != null ) aft = System.nanoTime();
Benchmark.java,bef = System.nanoTime();,if (System != null ) bef = System.nanoTime();
Benchmark.java,aft = System.nanoTime();,if (System != null ) aft = System.nanoTime();
Benchmark.java,bef = System.nanoTime();,if (System != null ) bef = System.nanoTime();
Benchmark.java,aft = System.nanoTime();,if (System != null ) aft = System.nanoTime();
Benchmark.java,bef = System.nanoTime();,if (System != null ) bef = System.nanoTime();
Benchmark.java,aft = System.nanoTime();,if (System != null ) aft = System.nanoTime();
DataGenerator.java,double a = rand.nextDouble();,if (rand != null ) double a = rand.nextDouble();
DataGenerator.java,double a = rand.nextDouble();,if (rand != null ) double a = rand.nextDouble();
SpeedyRoaringBitmap.java,ArrayContainer newac = ContainerFactory.getArrayContainer();,if (ContainerFactory != null ) ArrayContainer newac = ContainerFactory.getArrayContainer();
SpeedyRoaringBitmap.java,SpeedyRoaringBitmap x = (SpeedyRoaringBitmap) super.clone();,if (super != null ) SpeedyRoaringBitmap x = (SpeedyRoaringBitmap) super.clone();
SpeedyRoaringBitmap.java,int nbNodes = this.highlowcontainer.getnbKeys();,if (this != null ) int nbNodes = this.highlowcontainer.getnbKeys();
RoaringBitmap.java,final short hs = s.getKey().shortValue();,if (s != null ) final short hs = s.getKey().shortValue();
Benchmark.java,int[] nbInts = bitmap[k].getIntsPerNode();,if (bitmap[k] != null ) int[] nbInts = bitmap[k].getIntsPerNode();
SpeedyRoaringBenchmark.java,int[] nbInts = bitmap[k].getIntsPerNode();,if (bitmap[k] != null ) int[] nbInts = bitmap[k].getIntsPerNode();
SpeedyRoaringBenchmark.java,size += ewah[k].sizeInBytes();,if (ewah[k] != null ) size += ewah[k].sizeInBytes();
SpeedyArray.java,sa.array = this.array.clone();,if (this != null ) sa.array = this.array.clone();
Benchmark.java,cardinality += bitmap[k].cardinality();,if (bitmap[k] != null ) cardinality += bitmap[k].cardinality();
BitmapContainer.java,this.cardinality = this.expensiveComputeCardinality();,if (this != null ) this.cardinality = this.expensiveComputeCardinality();
BitmapContainer.java,this.cardinality = this.expensiveComputeCardinality();,if (this != null ) this.cardinality = this.expensiveComputeCardinality();
BitmapContainer.java,this.cardinality = this.expensiveComputeCardinality();,if (this != null ) this.cardinality = this.expensiveComputeCardinality();
Benchmark.java,size += bitmap[k].sizeInBytes();,if (bitmap[k] != null ) size += bitmap[k].sizeInBytes();
BitmapContainer.java,final BitmapContainer answer = ContainerFactory.getBitmapContainer();,if (ContainerFactory != null ) final BitmapContainer answer = ContainerFactory.getBitmapContainer();
BitmapContainer.java,final BitmapContainer answer = ContainerFactory.getBitmapContainer();,if (ContainerFactory != null ) final BitmapContainer answer = ContainerFactory.getBitmapContainer();
BitmapContainer.java,final BitmapContainer answer = ContainerFactory.getBitmapContainer();,if (ContainerFactory != null ) final BitmapContainer answer = ContainerFactory.getBitmapContainer();
BitmapContainer.java,this.cardinality = this.expensiveComputeCardinality();,if (this != null ) this.cardinality = this.expensiveComputeCardinality();
BitmapContainer.java,this.cardinality = this.expensiveComputeCardinality();,if (this != null ) this.cardinality = this.expensiveComputeCardinality();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,FileWriter fw = new FileWriter(file.getAbsoluteFile());,if (FileWriter(file != null ) FileWriter fw = new FileWriter(file.getAbsoluteFile());
ArrayContainer.java,final int desiredcapacity = small.getCardinality();,if (small != null ) final int desiredcapacity = small.getCardinality();
BitmapContainer.java,this.cardinality = this.expensiveComputeCardinality();,if (this != null ) this.cardinality = this.expensiveComputeCardinality();
BitmapContainer.java,this.cardinality = this.expensiveComputeCardinality();,if (this != null ) this.cardinality = this.expensiveComputeCardinality();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
ArrayContainer.java,ArrayContainer answer = ContainerFactory.getArrayContainer();,if (ContainerFactory != null ) ArrayContainer answer = ContainerFactory.getArrayContainer();
BitmapContainer.java,final BitmapContainer answer = ContainerFactory.getBitmapContainer();,if (ContainerFactory != null ) final BitmapContainer answer = ContainerFactory.getBitmapContainer();
Benchmark.java,size += ewah[k].sizeInBytes();,if (ewah[k] != null ) size += ewah[k].sizeInBytes();
Benchmark.java,size += ewah[k].sizeInBytes();,if (ewah[k] != null ) size += ewah[k].sizeInBytes();
ArrayContainer.java,ArrayContainer answer = ContainerFactory.getArrayContainer();,if (ContainerFactory != null ) ArrayContainer answer = ContainerFactory.getArrayContainer();
ArrayContainer.java,ArrayContainer x = (ArrayContainer) super.clone();,if (super != null ) ArrayContainer x = (ArrayContainer) super.clone();
BitmapContainer.java,BitmapContainer answer = ContainerFactory.getBitmapContainer();,if (ContainerFactory != null ) BitmapContainer answer = ContainerFactory.getBitmapContainer();
BitmapContainer.java,ArrayContainer answer = ContainerFactory.getArrayContainer();,if (ContainerFactory != null ) ArrayContainer answer = ContainerFactory.getArrayContainer();
BitmapContainer.java,BitmapContainer answer = ContainerFactory.getBitmapContainer();,if (ContainerFactory != null ) BitmapContainer answer = ContainerFactory.getBitmapContainer();
BitmapContainer.java,BitmapContainer answer = ContainerFactory.getBitmapContainer();,if (ContainerFactory != null ) BitmapContainer answer = ContainerFactory.getBitmapContainer();
BitmapContainer.java,BitmapContainer x = (BitmapContainer) super.clone();,if (super != null ) BitmapContainer x = (BitmapContainer) super.clone();
RoaringBitmap.java,child = esc.getValue().getShortIterator();,if (esc != null ) child = esc.getValue().getShortIterator();
RoaringBitmap.java,child = esc.getValue().getShortIterator();,if (esc != null ) child = esc.getValue().getShortIterator();
RoaringBitmap.java,average /= this.highlowcontainer.size();,if (this != null ) average /= this.highlowcontainer.size();
BitmapContainer.java,answer.cardinality = answer.expensiveComputeCardinality();,if (answer != null ) answer.cardinality = answer.expensiveComputeCardinality();
BitmapContainer.java,answer.cardinality = answer.expensiveComputeCardinality();,if (answer != null ) answer.cardinality = answer.expensiveComputeCardinality();
BitmapContainer.java,answer.cardinality = answer.expensiveComputeCardinality();,if (answer != null ) answer.cardinality = answer.expensiveComputeCardinality();
BitmapContainer.java,answer.cardinality = answer.expensiveComputeCardinality();,if (answer != null ) answer.cardinality = answer.expensiveComputeCardinality();
BitmapContainer.java,answer.cardinality = answer.expensiveComputeCardinality();,if (answer != null ) answer.cardinality = answer.expensiveComputeCardinality();
BitmapContainer.java,BitmapContainer x = (BitmapContainer) super.clone();,if (super != null ) BitmapContainer x = (BitmapContainer) super.clone();
Benchmark.java,size += bitmap[k].getSizeInBytes();,if (bitmap[k] != null ) size += bitmap[k].getSizeInBytes();
ZipfianDistribution.java,double a = this.rand.nextDouble();,if (this != null ) double a = this.rand.nextDouble();
ZipfianDistribution.java,double a = this.rand.nextDouble();,if (this != null ) double a = this.rand.nextDouble();
UniformDataGenerator.java,ans[k]=i.next().intValue();,if (ans[k]=i != null ) ans[k]=i.next().intValue();
BitmapContainer.java,answer.cardinality = answer.expensiveComputeCardinality();,if (answer != null ) answer.cardinality = answer.expensiveComputeCardinality();
BitmapContainer.java,answer.cardinality = answer.expensiveComputeCardinality();,if (answer != null ) answer.cardinality = answer.expensiveComputeCardinality();
RoaringBitmap.java,child = esc.getValue().iterator();,if (esc != null ) child = esc.getValue().iterator();
RoaringBitmap.java,child = esc.getValue().iterator();,if (esc != null ) child = esc.getValue().iterator();
RoaringBitmap.java,child = esc.getValue().iterator();,if (esc != null ) child = esc.getValue().iterator();
RoaringBitmap.java,child = esc.getValue().iterator();,if (esc != null ) child = esc.getValue().iterator();
RoaringBitmap.java,RoaringBitmap x = (RoaringBitmap) super.clone();,if (super != null ) RoaringBitmap x = (RoaringBitmap) super.clone();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,path = file.getSelectedFile().getAbsolutePath();,if (file != null ) path = file.getSelectedFile().getAbsolutePath();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,path = file.getSelectedFile().getAbsolutePath();,if (file != null ) path = file.getSelectedFile().getAbsolutePath();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,H = TreeBitmapIdx.entrySet().iterator();,if (TreeBitmapIdx != null ) H = TreeBitmapIdx.entrySet().iterator();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,size += bitmap[k].getSizeInBytes();,if (bitmap[k] != null ) size += bitmap[k].getSizeInBytes();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,int[] array = bitmap[k].getIntegers();,if (bitmap[k] != null ) int[] array = bitmap[k].getIntegers();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,H = TreeBitmapIdx.entrySet().iterator();,if (TreeBitmapIdx != null ) H = TreeBitmapIdx.entrySet().iterator();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,H = TreeBitmapIdx.entrySet().iterator();,if (TreeBitmapIdx != null ) H = TreeBitmapIdx.entrySet().iterator();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,int[] array = bitmap[k].toArray();,if (bitmap[k] != null ) int[] array = bitmap[k].toArray();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,H = TreeBitmapIdx.entrySet().iterator();,if (TreeBitmapIdx != null ) H = TreeBitmapIdx.entrySet().iterator();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,Iterator<Integer> i = bitmap[k].iterator(); i.hasNext(); array[c++] = i,if (i != null ) Iterator<Integer> i = bitmap[k].iterator(); i.hasNext(); array[c++] = i
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,H = TreeBitmapIdx.entrySet().iterator();,if (TreeBitmapIdx != null ) H = TreeBitmapIdx.entrySet().iterator();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,size += ewah[k].sizeInBytes();,if (ewah[k] != null ) size += ewah[k].sizeInBytes();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,int[] array = ewah[k].toArray();,if (ewah[k] != null ) int[] array = ewah[k].toArray();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,H = TreeBitmapIdx.entrySet().iterator();,if (TreeBitmapIdx != null ) H = TreeBitmapIdx.entrySet().iterator();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,size += ewah[k].sizeInBytes();,if (ewah[k] != null ) size += ewah[k].sizeInBytes();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,int[] array = ewah[k].toArray();,if (ewah[k] != null ) int[] array = ewah[k].toArray();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,path = file.getSelectedFile().getAbsolutePath();,if (file != null ) path = file.getSelectedFile().getAbsolutePath();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,int[] array = bitmap.toArray();,if (bitmap != null ) int[] array = bitmap.toArray();
SerializableStarSchemaBenchmark.java,Iterator<Integer> i = bitmap.iterator(); i.hasNext();,if (i != null ) Iterator<Integer> i = bitmap.iterator(); i.hasNext();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,int[] array = ewah.toArray();,if (ewah != null ) int[] array = ewah.toArray();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
SerializableStarSchemaBenchmark.java,int[] array = ewah.toArray();,if (ewah != null ) int[] array = ewah.toArray();
SerializableStarSchemaBenchmark.java,path = file.getSelectedFile().getAbsolutePath();,if (file != null ) path = file.getSelectedFile().getAbsolutePath();
StarSchemaBenchmark.java,path = file.getSelectedFile().getAbsolutePath();,if (file != null ) path = file.getSelectedFile().getAbsolutePath();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,Iterator<Integer> i = bitmap[k].iterator(); i.hasNext();,if (i != null ) Iterator<Integer> i = bitmap[k].iterator(); i.hasNext();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,int[] array = bitmap[k].toArray();,if (bitmap[k] != null ) int[] array = bitmap[k].toArray();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,size += bitmap[k].getSizeInBytes();,if (bitmap[k] != null ) size += bitmap[k].getSizeInBytes();
StarSchemaBenchmark.java,s=sh.getValue().firstEntry();,if (s=sh != null ) s=sh.getValue().firstEntry();
StarSchemaBenchmark.java,int[] array = bitmap[k].toArray();,if (bitmap[k] != null ) int[] array = bitmap[k].toArray();
StarSchemaBenchmark.java,s=sh.getValue().firstEntry();,if (s=sh != null ) s=sh.getValue().firstEntry();
StarSchemaBenchmark.java,Iterator<Integer> i = bitmap[k].iterator(); i.hasNext();,if (i != null ) Iterator<Integer> i = bitmap[k].iterator(); i.hasNext();
StarSchemaBenchmark.java,s=sh.getValue().firstEntry();,if (s=sh != null ) s=sh.getValue().firstEntry();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,s=sh.getValue().firstEntry();,if (s=sh != null ) s=sh.getValue().firstEntry();
StarSchemaBenchmark.java,s= sh.getValue().firstEntry();,if (sh != null ) s= sh.getValue().firstEntry();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,H =	TreeBitmapIdx.entrySet().iterator();,if (TreeBitmapIdx != null ) H =	TreeBitmapIdx.entrySet().iterator();
StarSchemaBenchmark.java,s=sh.getValue().firstEntry();,if (s=sh != null ) s=sh.getValue().firstEntry();
StarSchemaBenchmark.java,size += bitmap[k].getSizeInBytes();,if (bitmap[k] != null ) size += bitmap[k].getSizeInBytes();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,s=sh.getValue().firstEntry();,if (s=sh != null ) s=sh.getValue().firstEntry();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,H =	TreeBitmapIdx.entrySet().iterator();,if (TreeBitmapIdx != null ) H =	TreeBitmapIdx.entrySet().iterator();
StarSchemaBenchmark.java,s=sh.getValue().firstEntry();,if (s=sh != null ) s=sh.getValue().firstEntry();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
StarSchemaBenchmark.java,H =	TreeBitmapIdx.entrySet().iterator();,if (TreeBitmapIdx != null ) H =	TreeBitmapIdx.entrySet().iterator();
StarSchemaBenchmark.java,s=sh.getValue().firstEntry();,if (s=sh != null ) s=sh.getValue().firstEntry();
StarSchemaBenchmark.java,s=sh.getValue().firstEntry();,if (s=sh != null ) s=sh.getValue().firstEntry();
StarSchemaBenchmark.java,s=sh.getValue().firstEntry();,if (s=sh != null ) s=sh.getValue().firstEntry();
StarSchemaBenchmark.java,size += ewah[k].sizeInBytes();,if (ewah[k] != null ) size += ewah[k].sizeInBytes();
StarSchemaBenchmark.java,s =sh.getValue().firstEntry();,if (=sh != null ) s =sh.getValue().firstEntry();
StarSchemaBenchmark.java,size += ewah[k].sizeInBytes();,if (ewah[k] != null ) size += ewah[k].sizeInBytes();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
StarSchemaBenchmark.java,size += ewah[k].sizeInBytes();,if (ewah[k] != null ) size += ewah[k].sizeInBytes();
Benchmark.java,int[] array = bitmap[k].toArray();,if (bitmap[k] != null ) int[] array = bitmap[k].toArray();
StarSchemaBenchmark.java,int[] array = bitmap[k].toArray();,if (bitmap[k] != null ) int[] array = bitmap[k].toArray();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,Iterator<Integer> i = bitmap[k].iterator(); i.hasNext();,if (i != null ) Iterator<Integer> i = bitmap[k].iterator(); i.hasNext();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,aft = System.currentTimeMillis();,if (System != null ) aft = System.currentTimeMillis();
Benchmark.java,int[] array = bitmap[k].toArray();,if (bitmap[k] != null ) int[] array = bitmap[k].toArray();
RoaringBitmap.java,child = esc.getValue().iterator();,if (esc != null ) child = esc.getValue().iterator();
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
Benchmark.java,size = roaring.getSizeInBytes(); // return the size in bytes of the index,if (index != null ) size = roaring.getSizeInBytes(); // return the size in bytes of the index
Benchmark.java,bef = System.currentTimeMillis();,if (System != null ) bef = System.currentTimeMillis();
RoaringBitmap.java,child = esc.getValue().iterator();,if (esc != null ) child = esc.getValue().iterator();
RoaringBitmap.java,child = esc.getValue().iterator();,if (esc != null ) child = esc.getValue().iterator();
SbeTool.java,ir = new IrDecoder(fileName).decode();,if (IrDecoder(fileName) != null ) ir = new IrDecoder(fileName).decode();
RustGenerator.java,final String name = fieldToken.name();,if (fieldToken != null ) final String name = fieldToken.name();
RustGenerator.java,final String name = fieldToken.name();,if (fieldToken != null ) final String name = fieldToken.name();
RustGenerator.java,final Encoding encoding = typeToken.encoding();,if (typeToken != null ) final Encoding encoding = typeToken.encoding();
JavaGenerator.java,final Encoding encoding = token.encoding();,if (token != null ) final Encoding encoding = token.encoding();
EnumType.java,nullValue = encodedDataType.nullValue();,if (encodedDataType != null ) nullValue = encodedDataType.nullValue();
XmlSchemaParser.java,final XPath xPath = XPathFactory.newInstance().newXPath();,if (XPathFactory != null ) final XPath xPath = XPathFactory.newInstance().newXPath();
LibRsDef.java,final String mod = entry.getKey();,if (entry != null ) final String mod = entry.getKey();
RustGenerator.java,final String setType = formatStructName(beginToken.applicableTypeName());,if (formatStructName(beginToken != null ) final String setType = formatStructName(beginToken.applicableTypeName());
SubGroup.java,final int headerSize = blockLengthPrimitiveType.size() + numInGroupPrimitiveType.size();,if (numInGroupPrimitiveType != null ) final int headerSize = blockLengthPrimitiveType.size() + numInGroupPrimitiveType.size();
RewindTest.java,final OptionalExtrasDecoder extras = carDecoder.extras();,if (carDecoder != null ) final OptionalExtrasDecoder extras = carDecoder.extras();
RewindTest.java,final EngineDecoder engine = carDecoder.engine();,if (carDecoder != null ) final EngineDecoder engine = carDecoder.engine();
RewindTest.java,final OptionalExtrasDecoder extras = carDecoder.extras();,if (carDecoder != null ) final OptionalExtrasDecoder extras = carDecoder.extras();
RewindTest.java,final EngineDecoder engine = carDecoder.engine();,if (carDecoder != null ) final EngineDecoder engine = carDecoder.engine();
JsonPrinter.java,final int messageOffset = bufferOffset + headerDecoder.encodedLength();,if (headerDecoder != null ) final int messageOffset = bufferOffset + headerDecoder.encodedLength();
CppGenerator.java,final String enumName = formatClassName(token.applicableTypeName());,if (formatClassName(token != null ) final String enumName = formatClassName(token.applicableTypeName());
CppGenerator.java,final String typeName = cppTypeName(token.encoding().primitiveType());,if (cppTypeName(token != null ) final String typeName = cppTypeName(token.encoding().primitiveType());
CppGenerator.java,final int offset = token.offset();,if (token != null ) final int offset = token.offset();
CppGenerator.java,final String typeName = cppTypeName(token.encoding().primitiveType());,if (cppTypeName(token != null ) final String typeName = cppTypeName(token.encoding().primitiveType());
JavaUtil.java,final String name = optionToken.name();,if (optionToken != null ) final String name = optionToken.name();
JavaGenerator.java,final String enumName = formatClassName(typeToken.applicableTypeName());,if (formatClassName(typeToken != null ) final String enumName = formatClassName(typeToken.applicableTypeName());
JavaGenerator.java,final Encoding encoding = typeToken.encoding();,if (typeToken != null ) final Encoding encoding = typeToken.encoding();
JavaGenerator.java,final int offset = typeToken.offset();,if (typeToken != null ) final int offset = typeToken.offset();
JavaGenerator.java,final String groupName = groupToken.name();,if (groupToken != null ) final String groupName = groupToken.name();
JsonTokenListener.java,final int elementSize = encoding.primitiveType().size();,if (encoding != null ) final int elementSize = encoding.primitiveType().size();
JsonTokenListener.java,final int size = typeToken.arrayLength();,if (typeToken != null ) final int size = typeToken.arrayLength();
JsonTokenListener.java,final Encoding encoding = token.encoding();,if (token != null ) final Encoding encoding = token.encoding();
CppGenerator.java,final String propertyName = toUpperFirstChar(varDataToken.name());,if (toUpperFirstChar(varDataToken != null ) final String propertyName = toUpperFirstChar(varDataToken.name());
CSharpGenerator.java,final String schemaIdType = cSharpTypeName(ir.headerStructure().schemaIdType());,if (cSharpTypeName(ir != null ) final String schemaIdType = cSharpTypeName(ir.headerStructure().schemaIdType());
CSharpGenerator.java,final String schemaVersionType = cSharpTypeName(ir.headerStructure().schemaVersionType());,if (cSharpTypeName(ir != null ) final String schemaVersionType = cSharpTypeName(ir.headerStructure().schemaVersionType());
RustFlatFileOutputManager.java,final boolean outputDirAvailable = outputDir.exists() || outputDir.mkdirs();,if (outputDir != null ) final boolean outputDirAvailable = outputDir.exists() || outputDir.mkdirs();
RustGenerator.java,final int headerSize = totalByteSize(ir.headerStructure());,if (totalByteSize(ir != null ) final int headerSize = totalByteSize(ir.headerStructure());
RustGenerator.java,final String messageTypeName = formatTypeName(components.messageToken.name());,if (formatTypeName(components != null ) final String messageTypeName = formatTypeName(components.messageToken.name());
RustGenerator.java,final String setType = formatTypeName(beginToken.applicableTypeName());,if (formatTypeName(beginToken != null ) final String setType = formatTypeName(beginToken.applicableTypeName());
RustGenerator.java,final String rustPrimitiveType = rustTypeName(beginToken.encoding().primitiveType());,if (rustTypeName(beginToken != null ) final String rustPrimitiveType = rustTypeName(beginToken.encoding().primitiveType());
RustGenerator.java,final String choiceName = formatMethodName(token.name());,if (formatMethodName(token != null ) final String choiceName = formatMethodName(token.name());
RustGenerator.java,final Encoding encoding = token.encoding();,if (token != null ) final Encoding encoding = token.encoding();
RustGenerator.java,final String choiceBitIndex = encoding.constValue().toString();,if (encoding != null ) final String choiceBitIndex = encoding.constValue().toString();
RustGenerator.java,final String choiceName = formatMethodName(token.name());,if (formatMethodName(token != null ) final String choiceName = formatMethodName(token.name());
RustGenerator.java,final String messageTypeName = formatTypeName(msgToken.name());,if (formatTypeName(msgToken != null ) final String messageTypeName = formatTypeName(msgToken.name());
RustGenerator.java,final int msgLen = msgToken.encodedLength();,if (msgToken != null ) final int msgLen = msgToken.encodedLength();
RustGenerator.java,final String messageTypeName = formatTypeName(msgToken.name());,if (formatTypeName(msgToken != null ) final String messageTypeName = formatTypeName(msgToken.name());
RustGenerator.java,final int msgLen = msgToken.encodedLength();,if (msgToken != null ) final int msgLen = msgToken.encodedLength();
RustGenerator.java,final String gerund = codecType.gerund();,if (codecType != null ) final String gerund = codecType.gerund();
RustGenerator.java,final String gerund = codecType.gerund();,if (codecType != null ) final String gerund = codecType.gerund();
RustGenerator.java,final String decoderName = fieldStruct.name + codecType.name();,if (codecType != null ) final String decoderName = fieldStruct.name + codecType.name();
RustGenerator.java,final boolean hasParent = node.parent.isPresent();,if (node != null ) final boolean hasParent = node.parent.isPresent();
RustGenerator.java,final boolean hasParent = node.parent.isPresent();,if (node != null ) final boolean hasParent = node.parent.isPresent();
RustGenerator.java,final String rustCountType = rustTypeName(node.dimensionsNumInGroupType());,if (rustTypeName(node != null ) final String rustCountType = rustTypeName(node.dimensionsNumInGroupType());
RustGenerator.java,final String rustCountType = rustTypeName(node.dimensionsNumInGroupType());,if (rustTypeName(node != null ) final String rustCountType = rustTypeName(node.dimensionsNumInGroupType());
RustGenerator.java,final int size = groupsTokens.size();,if (groupsTokens != null ) final int size = groupsTokens.size();
RustGenerator.java,final String originalName = groupToken.name();,if (groupToken != null ) final String originalName = groupToken.name();
RustGenerator.java,final int groupHeaderTokenCount = dimensionsToken.componentTokenCount();,if (dimensionsToken != null ) final int groupHeaderTokenCount = dimensionsToken.componentTokenCount();
RustGenerator.java,final int blockLength = groupToken.encodedLength();,if (groupToken != null ) final int blockLength = groupToken.encodedLength();
RustGenerator.java,final int headerTokenCount = dimensionsToken.componentTokenCount();,if (dimensionsToken != null ) final int headerTokenCount = dimensionsToken.componentTokenCount();
RustGenerator.java,final String typeName = beginToken.applicableTypeName();,if (beginToken != null ) final String typeName = beginToken.applicableTypeName();
RustGenerator.java,final Encoding encoding = token.encoding();,if (token != null ) final Encoding encoding = token.encoding();
RustGenerator.java,final Encoding encoding = token.encoding();,if (token != null ) final Encoding encoding = token.encoding();
RustGenerator.java,final String originalTypeName = beginToken.applicableTypeName();,if (beginToken != null ) final String originalTypeName = beginToken.applicableTypeName();
RustGenerator.java,final String defaultValue = RustTypeDescriptor.super.defaultValue();,if (RustTypeDescriptor != null ) final String defaultValue = RustTypeDescriptor.super.defaultValue();
RustGenerator.java,final PrimitiveType primitiveType = token.encoding().primitiveType();,if (token != null ) final PrimitiveType primitiveType = token.encoding().primitiveType();
RustGenerator.java,"final RustPrimitiveType type = new RustPrimitiveType(rustPrimitiveType, primitiveType.size());","if (primitiveType != null ) final RustPrimitiveType type = new RustPrimitiveType(rustPrimitiveType, primitiveType.size());"
RustGenerator.java,value = field.type.defaultValue();,if (field != null ) value = field.type.defaultValue();
RustGenerator.java,final Token typeToken = namedToken.typeToken();,if (namedToken != null ) final Token typeToken = namedToken.typeToken();
RustGenerator.java,final String propertyName = formatMethodName(namedToken.name());,if (formatMethodName(namedToken != null ) final String propertyName = formatMethodName(namedToken.name());
RustGenerator.java,final int offset = typeToken.offset();,if (typeToken != null ) final int offset = typeToken.offset();
RustGenerator.java,totalSize = offset + typeToken.encodedLength();,if (typeToken != null ) totalSize = offset + typeToken.encodedLength();
RustGenerator.java,final HeaderStructure header = ir.headerStructure();,if (ir != null ) final HeaderStructure header = ir.headerStructure();
RustGenerator.java,final String messageTypeName = formatTypeName(messageToken.name());,if (formatTypeName(messageToken != null ) final String messageTypeName = formatTypeName(messageToken.name());
RustGenerator.java,final String blockLength = Integer.toString(messageToken.encodedLength());,if (Integer != null ) final String blockLength = Integer.toString(messageToken.encodedLength());
RustGenerator.java,final String templateId = Integer.toString(messageToken.id());,if (Integer != null ) final String templateId = Integer.toString(messageToken.id());
RustGenerator.java,final String schemaId = Integer.toString(ir.id());,if (Integer != null ) final String schemaId = Integer.toString(ir.id());
RustGenerator.java,final String version = Integer.toString(ir.version());,if (Integer != null ) final String version = Integer.toString(ir.version());
RustGenerator.java,"rustType = getRustStaticArrayString(rustPrimitiveType, encodingToken.arrayLength());","if (encodingToken != null ) rustType = getRustStaticArrayString(rustPrimitiveType, encodingToken.arrayLength());"
RustGenerator.java,final String name = fieldToken.name();,if (fieldToken != null ) final String name = fieldToken.name();
RustGenerator.java,final int componentTokenCount = fieldToken.componentTokenCount();,if (fieldToken != null ) final int componentTokenCount = fieldToken.componentTokenCount();
RustGenerator.java,final String enumType = formatTypeName(signalToken.applicableTypeName());,if (formatTypeName(signalToken != null ) final String enumType = formatTypeName(signalToken.applicableTypeName());
RustUtil.java,final int length = sequence.length();,if (sequence != null ) final int length = sequence.length();
SplitCompositeTokens.java,i += encodingToken.componentTokenCount();,if (encodingToken != null ) i += encodingToken.componentTokenCount();
RustFlatFileOutputManagerTest.java,final String tempDirName = tempDir.getAbsolutePath();,if (tempDir != null ) final String tempDirName = tempDir.getAbsolutePath();
RustGeneratorTest.java,final Process process = builder.start();,if (builder != null ) final Process process = builder.start();
RustGeneratorTest.java,final String line = errorReader.readLine();,if (errorReader != null ) final String line = errorReader.readLine();
RustGeneratorTest.java,final Process process = builder.start();,if (builder != null ) final Process process = builder.start();
CSharpGenerator.java,final int arrayLength = token.arrayLength();,if (token != null ) final int arrayLength = token.arrayLength();
CSharpGenerator.java,final String typeName = cSharpTypeName(token.encoding().primitiveType());,if (cSharpTypeName(token != null ) final String typeName = cSharpTypeName(token.encoding().primitiveType());
CSharpGenerator.java,final int offset = token.offset();,if (token != null ) final int offset = token.offset();
CSharpGenerator.java,final ByteOrder byteOrder = token.encoding().byteOrder();,if (token != null ) final ByteOrder byteOrder = token.encoding().byteOrder();
CSharpGenerator.java,final String typeName = cSharpTypeName(token.encoding().primitiveType());,if (cSharpTypeName(token != null ) final String typeName = cSharpTypeName(token.encoding().primitiveType());
CSharpGenerator.java,final int offset = token.offset();,if (token != null ) final int offset = token.offset();
CSharpGenerator.java,final ByteOrder byteOrder = token.encoding().byteOrder();,if (token != null ) final ByteOrder byteOrder = token.encoding().byteOrder();
CSharpGenerator.java,final int fieldLength = token.arrayLength();,if (token != null ) final int fieldLength = token.arrayLength();
CSharpGenerator.java,final String enumName = formatClassName(token.applicableTypeName());,if (formatClassName(token != null ) final String enumName = formatClassName(token.applicableTypeName());
CSharpGenerator.java,final String enumUnderlyingType = cSharpTypeName(token.encoding().primitiveType());,if (cSharpTypeName(token != null ) final String enumUnderlyingType = cSharpTypeName(token.encoding().primitiveType());
CSharpGenerator.java,final int offset = token.offset();,if (token != null ) final int offset = token.offset();
CSharpGenerator.java,final ByteOrder byteOrder = token.encoding().byteOrder();,if (token != null ) final ByteOrder byteOrder = token.encoding().byteOrder();
CSharpGenerator.java,final String bitSetName = formatClassName(token.applicableTypeName());,if (formatClassName(token != null ) final String bitSetName = formatClassName(token.applicableTypeName());
CSharpGenerator.java,final int offset = token.offset();,if (token != null ) final int offset = token.offset();
CSharpGenerator.java,final ByteOrder byteOrder = token.encoding().byteOrder();,if (token != null ) final ByteOrder byteOrder = token.encoding().byteOrder();
CSharpGenerator.java,final String typeName = cSharpTypeName(token.encoding().primitiveType());,if (cSharpTypeName(token != null ) final String typeName = cSharpTypeName(token.encoding().primitiveType());
CSharpGenerator.java,final String compositeName = CSharpUtil.formatClassName(token.applicableTypeName());,if (CSharpUtil != null ) final String compositeName = CSharpUtil.formatClassName(token.applicableTypeName());
CSharpGenerator.java,final int offset = token.offset();,if (token != null ) final int offset = token.offset();
CppGenerator.java,final String cppTypeForBlockLength = cppTypeName(blockLengthToken.encoding().primitiveType());,if (cppTypeName(blockLengthToken != null ) final String cppTypeForBlockLength = cppTypeName(blockLengthToken.encoding().primitiveType());
CppGenerator.java,final String cppTypeForNumInGroup = cppTypeName(numInGroupToken.encoding().primitiveType());,if (cppTypeName(numInGroupToken != null ) final String cppTypeForNumInGroup = cppTypeName(numInGroupToken.encoding().primitiveType());
JavaGenerator.java,final String bitSetName = formatClassName(token.applicableTypeName());,if (formatClassName(token != null ) final String bitSetName = formatClassName(token.applicableTypeName());
JavaGenerator.java,final String compositeName = formatClassName(token.applicableTypeName());,if (formatClassName(token != null ) final String compositeName = formatClassName(token.applicableTypeName());
RustFlatFileOutputManagerTest.java,final File tempDir = folderRule.getRoot();,if (folderRule != null ) final File tempDir = folderRule.getRoot();
RustTest.java,final File newFolder = temporaryFolder.newFolder();,if (temporaryFolder != null ) final File newFolder = temporaryFolder.newFolder();
CppGenerator.java,final String propertyName = toLowerFirstChar(varDataToken.name());,if (toLowerFirstChar(varDataToken != null ) final String propertyName = toLowerFirstChar(varDataToken.name());
CppGenerator.java,i += fieldToken.componentTokenCount();,if (fieldToken != null ) i += fieldToken.componentTokenCount();
CppGenerator.java,i += fieldToken.componentTokenCount();,if (fieldToken != null ) i += fieldToken.componentTokenCount();
CppGenerator.java,final int arrayLength = token.arrayLength();,if (token != null ) final int arrayLength = token.arrayLength();
CppGenerator.java,final PrimitiveType primitiveType = token.encoding().primitiveType();,if (token != null ) final PrimitiveType primitiveType = token.encoding().primitiveType();
CppGenerator.java,final int offset = token.offset();,if (token != null ) final int offset = token.offset();
CppGenerator.java,final PrimitiveType primitiveType = token.encoding().primitiveType();,if (token != null ) final PrimitiveType primitiveType = token.encoding().primitiveType();
CppGenerator.java,final int offset = token.offset();,if (token != null ) final int offset = token.offset();
CppGenerator.java,final int arrayLength = token.arrayLength();,if (token != null ) final int arrayLength = token.arrayLength();
CppGenerator.java,final int offset = token.offset();,if (token != null ) final int offset = token.offset();
PythonGenerator.java,final String className = formatClassName(msgToken.name());,if (formatClassName(msgToken != null ) final String className = formatClassName(msgToken.name());
PythonGenerator.java,final int groupHeaderTokenCount = tokens.get(i).componentTokenCount();,if (tokens != null ) final int groupHeaderTokenCount = tokens.get(i).componentTokenCount();
PythonGenerator.java,final String groupName = groupToken.name();,if (groupToken != null ) final String groupName = groupToken.name();
PythonGenerator.java,final int groupHeaderTokenCount = tokens.get(i).componentTokenCount();,if (tokens != null ) final int groupHeaderTokenCount = tokens.get(i).componentTokenCount();
PythonGenerator.java,final PrimitiveType blockLengthType = blockLengthToken.encoding().primitiveType();,if (blockLengthToken != null ) final PrimitiveType blockLengthType = blockLengthToken.encoding().primitiveType();
PythonGenerator.java,"final String blockLengthOffset = ""limit + "" + blockLengthToken.offset();","if (blockLengthToken != null ) final String blockLengthOffset = ""limit + "" + blockLengthToken.offset();"
PythonGenerator.java,final PrimitiveType numInGroupType = numInGroupToken.encoding().primitiveType();,if (numInGroupToken != null ) final PrimitiveType numInGroupType = numInGroupToken.encoding().primitiveType();
PythonGenerator.java,"final String numInGroupOffset = ""limit + "" + numInGroupToken.offset();","if (numInGroupToken != null ) final String numInGroupOffset = ""limit + "" + numInGroupToken.offset();"
PythonGenerator.java,final int blockLength = tokens.get(index).encodedLength();,if (tokens != null ) final int blockLength = tokens.get(index).encodedLength();
PythonGenerator.java,final int blockLength = tokens.get(index).encodedLength();,if (tokens != null ) final int blockLength = tokens.get(index).encodedLength();
PythonGenerator.java,final PrimitiveType blockLengthType = blockLengthToken.encoding().primitiveType();,if (blockLengthToken != null ) final PrimitiveType blockLengthType = blockLengthToken.encoding().primitiveType();
PythonGenerator.java,"final String blockLengthOffset = ""limit + "" + blockLengthToken.offset();","if (blockLengthToken != null ) final String blockLengthOffset = ""limit + "" + blockLengthToken.offset();"
PythonGenerator.java,final PrimitiveType numInGroupType = numInGroupToken.encoding().primitiveType();,if (numInGroupToken != null ) final PrimitiveType numInGroupType = numInGroupToken.encoding().primitiveType();
PythonGenerator.java,"final String numInGroupOffset = ""limit + "" + numInGroupToken.offset();","if (numInGroupToken != null ) final String numInGroupOffset = ""limit + "" + numInGroupToken.offset();"
PythonGenerator.java,final String propertyName = formatPropertyName(token.name());,if (formatPropertyName(token != null ) final String propertyName = formatPropertyName(token.name());
PythonGenerator.java,final String propertyName = Generators.toUpperFirstChar(token.name());,if (Generators != null ) final String propertyName = Generators.toUpperFirstChar(token.name());
PythonGenerator.java,final int sizeOfLengthField = lengthToken.encodedLength();,if (lengthToken != null ) final int sizeOfLengthField = lengthToken.encodedLength();
PythonGenerator.java,final Encoding lengthEncoding = lengthToken.encoding();,if (lengthToken != null ) final Encoding lengthEncoding = lengthToken.encoding();
PythonGenerator.java,final PrimitiveType lengthType = lengthEncoding.primitiveType();,if (lengthEncoding != null ) final PrimitiveType lengthType = lengthEncoding.primitiveType();
PythonGenerator.java,i += token.componentTokenCount();,if (token != null ) i += token.componentTokenCount();
PythonGenerator.java,final String characterEncoding = varDataToken.encoding().characterEncoding();,if (varDataToken != null ) final String characterEncoding = varDataToken.encoding().characterEncoding();
PythonGenerator.java,final String propertyName = Generators.toUpperFirstChar(token.name());,if (Generators != null ) final String propertyName = Generators.toUpperFirstChar(token.name());
PythonGenerator.java,final int sizeOfLengthField = lengthToken.encodedLength();,if (lengthToken != null ) final int sizeOfLengthField = lengthToken.encodedLength();
PythonGenerator.java,final Encoding lengthEncoding = lengthToken.encoding();,if (lengthToken != null ) final Encoding lengthEncoding = lengthToken.encoding();
PythonGenerator.java,i += token.componentTokenCount();,if (token != null ) i += token.componentTokenCount();
PythonGenerator.java,final String bitSetName = formatClassName(token.applicableTypeName());,if (formatClassName(token != null ) final String bitSetName = formatClassName(token.applicableTypeName());
PythonGenerator.java,final String enumName = formatClassName(enumToken.applicableTypeName());,if (formatClassName(enumToken != null ) final String enumName = formatClassName(enumToken.applicableTypeName());
PythonGenerator.java,final String compositeName = formatClassName(token.applicableTypeName());,if (formatClassName(token != null ) final String compositeName = formatClassName(token.applicableTypeName());
PythonGenerator.java,final String propertyName = formatPropertyName(encodingToken.name());,if (formatPropertyName(encodingToken != null ) final String propertyName = formatPropertyName(encodingToken.name());
PythonGenerator.java,i += encodingToken.componentTokenCount();,if (encodingToken != null ) i += encodingToken.componentTokenCount();
PythonGenerator.java,final String propertyName = formatPropertyName(encodingToken.name());,if (formatPropertyName(encodingToken != null ) final String propertyName = formatPropertyName(encodingToken.name());
PythonGenerator.java,i += encodingToken.componentTokenCount();,if (encodingToken != null ) i += encodingToken.componentTokenCount();
PythonGenerator.java,final Encoding encoding = token.encoding();,if (token != null ) final Encoding encoding = token.encoding();
PythonGenerator.java,final String choiceName = formatPropertyName(token.name());,if (formatPropertyName(token != null ) final String choiceName = formatPropertyName(token.name());
PythonGenerator.java,final Encoding encoding = token.encoding();,if (token != null ) final Encoding encoding = token.encoding();
PythonGenerator.java,final String choiceBitIndex = encoding.constValue().toString();,if (encoding != null ) final String choiceBitIndex = encoding.constValue().toString();
PythonGenerator.java,final PrimitiveType primitiveType = encoding.primitiveType();,if (encoding != null ) final PrimitiveType primitiveType = encoding.primitiveType();
PythonGenerator.java,final String choiceName = formatPropertyName(token.name());,if (formatPropertyName(token != null ) final String choiceName = formatPropertyName(token.name());
PythonGenerator.java,final Encoding encoding = token.encoding();,if (token != null ) final Encoding encoding = token.encoding();
PythonGenerator.java,final String choiceBitIndex = encoding.constValue().toString();,if (encoding != null ) final String choiceBitIndex = encoding.constValue().toString();
PythonGenerator.java,final PrimitiveType primitiveType = encoding.primitiveType();,if (encoding != null ) final PrimitiveType primitiveType = encoding.primitiveType();
PythonGenerator.java,final Encoding encoding = token.encoding();,if (token != null ) final Encoding encoding = token.encoding();
PythonGenerator.java,final Encoding encoding = token.encoding();,if (token != null ) final Encoding encoding = token.encoding();
PythonGenerator.java,String importName = formatClassName(t.applicableTypeName());,if (formatClassName(t != null ) String importName = formatClassName(t.applicableTypeName());
PythonGenerator.java,final String groupName = groupToken.name();,if (groupToken != null ) final String groupName = groupToken.name();
PythonGenerator.java,final PrimitiveType primitiveType = token.encoding().primitiveType();,if (token != null ) final PrimitiveType primitiveType = token.encoding().primitiveType();
PythonGenerator.java,final Encoding encoding = encodingToken.encoding();,if (encodingToken != null ) final Encoding encoding = encodingToken.encoding();
PythonGenerator.java,final String javaTypeName = pythonTypeName(encoding.primitiveType());,if (pythonTypeName(encoding != null ) final String javaTypeName = pythonTypeName(encoding.primitiveType());
PythonGenerator.java,final int offset = encodingToken.offset();,if (encodingToken != null ) final int offset = encodingToken.offset();
PythonGenerator.java,final Encoding encoding = token.encoding();,if (token != null ) final Encoding encoding = token.encoding();
PythonGenerator.java,final String javaTypeName = pythonTypeName(encoding.primitiveType());,if (pythonTypeName(encoding != null ) final String javaTypeName = pythonTypeName(encoding.primitiveType());
PythonGenerator.java,final int offset = token.offset();,if (token != null ) final int offset = token.offset();
PythonGenerator.java,final Encoding encoding = encodingToken.encoding();,if (encodingToken != null ) final Encoding encoding = encodingToken.encoding();
PythonGenerator.java,final String typeName = pythonTypeName(encoding.primitiveType());,if (pythonTypeName(encoding != null ) final String typeName = pythonTypeName(encoding.primitiveType());
PythonGenerator.java,final int offset = encodingToken.offset();,if (encodingToken != null ) final int offset = encodingToken.offset();
PythonGenerator.java,final String typePrefix = toUpperFirstChar(encoding.primitiveType().primitiveName());,if (toUpperFirstChar(encoding != null ) final String typePrefix = toUpperFirstChar(encoding.primitiveType().primitiveName());
PythonGenerator.java,final int fieldLength = encodingToken.arrayLength();,if (encodingToken != null ) final int fieldLength = encodingToken.arrayLength();
PythonGenerator.java,final Encoding encoding = token.encoding();,if (token != null ) final Encoding encoding = token.encoding();
PythonGenerator.java,final PrimitiveType primitiveType = encoding.primitiveType();,if (encoding != null ) final PrimitiveType primitiveType = encoding.primitiveType();
PythonGenerator.java,final String typeName = pythonTypeName(encoding.primitiveType());,if (pythonTypeName(encoding != null ) final String typeName = pythonTypeName(encoding.primitiveType());
PythonGenerator.java,final int offset = token.offset();,if (token != null ) final int offset = token.offset();
PythonGenerator.java,final int arrayLength = token.arrayLength();,if (token != null ) final int arrayLength = token.arrayLength();
PythonGenerator.java,final String typePrefix = toUpperFirstChar(encoding.primitiveType().primitiveName());,if (toUpperFirstChar(encoding != null ) final String typePrefix = toUpperFirstChar(encoding.primitiveType().primitiveName());
PythonGenerator.java,final Encoding encoding = token.encoding();,if (token != null ) final Encoding encoding = token.encoding();
PythonGenerator.java,final String javaTypeName = pythonTypeName(encoding.primitiveType());,if (pythonTypeName(encoding != null ) final String javaTypeName = pythonTypeName(encoding.primitiveType());
PythonGenerator.java,final String schemaIdType = pythonTypeName(ir.headerStructure().schemaIdType());,if (pythonTypeName(ir != null ) final String schemaIdType = pythonTypeName(ir.headerStructure().schemaIdType());
PythonGenerator.java,final String schemaVersionType = pythonTypeName(ir.headerStructure().schemaVersionType());,if (pythonTypeName(ir != null ) final String schemaVersionType = pythonTypeName(ir.headerStructure().schemaVersionType());
PythonGenerator.java,final HeaderStructure headerStructure = ir.headerStructure();,if (ir != null ) final HeaderStructure headerStructure = ir.headerStructure();
PythonGenerator.java,final String blockLengthType = pythonTypeName(headerStructure.blockLengthType());,if (pythonTypeName(headerStructure != null ) final String blockLengthType = pythonTypeName(headerStructure.blockLengthType());
PythonGenerator.java,final String templateIdType = pythonTypeName(headerStructure.templateIdType());,if (pythonTypeName(headerStructure != null ) final String templateIdType = pythonTypeName(headerStructure.templateIdType());
PythonGenerator.java,final String schemaIdType = pythonTypeName(headerStructure.schemaIdType());,if (pythonTypeName(headerStructure != null ) final String schemaIdType = pythonTypeName(headerStructure.schemaIdType());
PythonGenerator.java,final String schemaVersionType = pythonTypeName(headerStructure.schemaVersionType());,if (pythonTypeName(headerStructure != null ) final String schemaVersionType = pythonTypeName(headerStructure.schemaVersionType());
PythonGenerator.java,final String propertyName = formatPropertyName(fieldToken.name());,if (formatPropertyName(fieldToken != null ) final String propertyName = formatPropertyName(fieldToken.name());
PythonGenerator.java,final String propertyName = formatPropertyName(fieldToken.name());,if (formatPropertyName(fieldToken != null ) final String propertyName = formatPropertyName(fieldToken.name());
PythonGenerator.java,final Encoding encoding = token.encoding();,if (token != null ) final Encoding encoding = token.encoding();
PythonGenerator.java,final String enumName = formatClassName(typeToken.applicableTypeName());,if (formatClassName(typeToken != null ) final String enumName = formatClassName(typeToken.applicableTypeName());
PythonGenerator.java,final Encoding encoding = typeToken.encoding();,if (typeToken != null ) final Encoding encoding = typeToken.encoding();
PythonGenerator.java,final String enumName = formatClassName(typeToken.applicableTypeName());,if (formatClassName(typeToken != null ) final String enumName = formatClassName(typeToken.applicableTypeName());
PythonGenerator.java,final Encoding encoding = typeToken.encoding();,if (typeToken != null ) final Encoding encoding = typeToken.encoding();
PythonGenerator.java,final int offset = typeToken.offset();,if (typeToken != null ) final int offset = typeToken.offset();
PythonGenerator.java,final String byteOrderUpper = byteOrder.toUpperCase();,if (byteOrder != null ) final String byteOrderUpper = byteOrder.toUpperCase();
PythonGenerator.java,final String propertyName = formatPropertyName(encodingToken.name());,if (formatPropertyName(encodingToken != null ) final String propertyName = formatPropertyName(encodingToken.name());
PythonGenerator.java,i += encodingToken.componentTokenCount();,if (encodingToken != null ) i += encodingToken.componentTokenCount();
PythonGenerator.java,final String choiceName = formatPropertyName(token.name());,if (formatPropertyName(token != null ) final String choiceName = formatPropertyName(token.name());
PythonGenerator.java,final String fieldName = formatPropertyName(fieldToken.name());,if (formatPropertyName(fieldToken != null ) final String fieldName = formatPropertyName(fieldToken.name());
PythonGenerator.java,i += fieldToken.componentTokenCount();,if (fieldToken != null ) i += fieldToken.componentTokenCount();
PythonGenerator.java,final String groupName = formatPropertyName(groupToken.name());,if (formatPropertyName(groupToken != null ) final String groupName = formatPropertyName(groupToken.name());
PythonGenerator.java,lengthBeforeLastGeneratedSeparator = sb.length();,if (sb != null ) lengthBeforeLastGeneratedSeparator = sb.length();
PythonGenerator.java,final String varDataName = formatPropertyName(varDataToken.name());,if (formatPropertyName(varDataToken != null ) final String varDataName = formatPropertyName(varDataToken.name());
PythonGenerator.java,lengthBeforeLastGeneratedSeparator = sb.length();,if (sb != null ) lengthBeforeLastGeneratedSeparator = sb.length();
PythonGenerator.java,i += varDataToken.componentTokenCount();,if (varDataToken != null ) i += varDataToken.componentTokenCount();
PythonGenerator.java,final int lengthBeforeFieldSeparator = sb.length();,if (sb != null ) final int lengthBeforeFieldSeparator = sb.length();
PyGenerator.java,final String className = formatClassName(msgToken.name());,if (formatClassName(msgToken != null ) final String className = formatClassName(msgToken.name());
PyGenerator.java,final String groupName = groupToken.name();,if (groupToken != null ) final String groupName = groupToken.name();
PyGenerator.java,i += tokens.get(i).componentTokenCount();,if (tokens != null ) i += tokens.get(i).componentTokenCount();
PyGenerator.java,final int blockLength = tokens.get(index).encodedLength();,if (tokens != null ) final int blockLength = tokens.get(index).encodedLength();
PyGenerator.java,final String typeForNumInGroup = pythonTypeName(numInGroupToken.encoding().primitiveType());,if (pythonTypeName(numInGroupToken != null ) final String typeForNumInGroup = pythonTypeName(numInGroupToken.encoding().primitiveType());
PyGenerator.java,final String characterEncoding = varDataToken.encoding().characterEncoding();,if (varDataToken != null ) final String characterEncoding = varDataToken.encoding().characterEncoding();
PyGenerator.java,final String propertyName = toUpperFirstChar(token.name());,if (toUpperFirstChar(token != null ) final String propertyName = toUpperFirstChar(token.name());
PyGenerator.java,final int sizeOfLengthField = lengthToken.encodedLength();,if (lengthToken != null ) final int sizeOfLengthField = lengthToken.encodedLength();
PyGenerator.java,final Encoding lengthEncoding = lengthToken.encoding();,if (lengthToken != null ) final Encoding lengthEncoding = lengthToken.encoding();
PyGenerator.java,final String lengthCSharpType = pythonTypeName(lengthEncoding.primitiveType());,if (pythonTypeName(lengthEncoding != null ) final String lengthCSharpType = pythonTypeName(lengthEncoding.primitiveType());
PyGenerator.java,final String lengthTypePrefix = toUpperFirstChar(lengthEncoding.primitiveType().primitiveName());,if (toUpperFirstChar(lengthEncoding != null ) final String lengthTypePrefix = toUpperFirstChar(lengthEncoding.primitiveType().primitiveName());
PyGenerator.java,final ByteOrder byteOrder = lengthEncoding.byteOrder();,if (lengthEncoding != null ) final ByteOrder byteOrder = lengthEncoding.byteOrder();
PyGenerator.java,final String byteOrderStr = byteOrder.toString();,if (byteOrder != null ) final String byteOrderStr = byteOrder.toString();
PyGenerator.java,final String bitSetName = formatClassName(bitSetToken.applicableTypeName());,if (formatClassName(bitSetToken != null ) final String bitSetName = formatClassName(bitSetToken.applicableTypeName());
PyGenerator.java,final String enumName = formatClassName(enumToken.applicableTypeName());,if (formatClassName(enumToken != null ) final String enumName = formatClassName(enumToken.applicableTypeName());
PyGenerator.java,final String enumPrimitiveType = pythonTypeName(enumToken.encoding().primitiveType());,if (pythonTypeName(enumToken != null ) final String enumPrimitiveType = pythonTypeName(enumToken.encoding().primitiveType());
PyGenerator.java,final String propertyName = formatPropertyName(token.name());,if (formatPropertyName(token != null ) final String propertyName = formatPropertyName(token.name());
PyGenerator.java,i += tokens.get(i).componentTokenCount();,if (tokens != null ) i += tokens.get(i).componentTokenCount();
PyGenerator.java,final String choiceName = formatPropertyName(token.name());,if (formatPropertyName(token != null ) final String choiceName = formatPropertyName(token.name());
PyGenerator.java,final Encoding encoding = token.encoding();,if (token != null ) final Encoding encoding = token.encoding();
PyGenerator.java,final String choiceBitIndex = encoding.constValue().toString();,if (encoding != null ) final String choiceBitIndex = encoding.constValue().toString();
PyGenerator.java,final PrimitiveType primitiveType = encoding.primitiveType();,if (encoding != null ) final PrimitiveType primitiveType = encoding.primitiveType();
PyGenerator.java,final String choiceName = formatPropertyName(token.name());,if (formatPropertyName(token != null ) final String choiceName = formatPropertyName(token.name());
PyGenerator.java,final String choiceName = formatPropertyName(token.name());,if (formatPropertyName(token != null ) final String choiceName = formatPropertyName(token.name());
PyGenerator.java,final Encoding encoding = token.encoding();,if (token != null ) final Encoding encoding = token.encoding();
PyGenerator.java,final String choiceBitIndex = encoding.constValue().toString();,if (encoding != null ) final String choiceBitIndex = encoding.constValue().toString();
PyGenerator.java,final PrimitiveType primitiveType = encoding.primitiveType();,if (encoding != null ) final PrimitiveType primitiveType = encoding.primitiveType();
PyGenerator.java,final String ending = byteOrder.toString().toUpperCase();,if (byteOrder != null ) final String ending = byteOrder.toString().toUpperCase();
PyGenerator.java,final Encoding encoding = token.encoding();,if (token != null ) final Encoding encoding = token.encoding();
PyGenerator.java,final Encoding encoding = encodingToken.encoding();,if (encodingToken != null ) final Encoding encoding = encodingToken.encoding();
PyGenerator.java,final PrimitiveValue nullVal = encoding.applicableNullValue();,if (encoding != null ) final PrimitiveValue nullVal = encoding.applicableNullValue();
PyGenerator.java,final int arrayLength = token.arrayLength();,if (token != null ) final int arrayLength = token.arrayLength();
PyGenerator.java,final PrimitiveType primitiveType = token.encoding().primitiveType();,if (token != null ) final PrimitiveType primitiveType = token.encoding().primitiveType();
PyGenerator.java,final String typeName = pythonTypeName(token.encoding().primitiveType());,if (pythonTypeName(token != null ) final String typeName = pythonTypeName(token.encoding().primitiveType());
PyGenerator.java,final int offset = token.offset();,if (token != null ) final int offset = token.offset();
PyGenerator.java,final ByteOrder byteOrder = token.encoding().byteOrder();,if (token != null ) final ByteOrder byteOrder = token.encoding().byteOrder();
PyGenerator.java,final String byteOrderStr = byteOrder.toString();,if (byteOrder != null ) final String byteOrderStr = byteOrder.toString();
PyGenerator.java,final String typeName = pythonTypeName(token.encoding().primitiveType());,if (pythonTypeName(token != null ) final String typeName = pythonTypeName(token.encoding().primitiveType());
PyGenerator.java,final int offset = token.offset();,if (token != null ) final int offset = token.offset();
PyGenerator.java,final ByteOrder byteOrder = token.encoding().byteOrder();,if (token != null ) final ByteOrder byteOrder = token.encoding().byteOrder();
PyGenerator.java,final String byteOrderStr = byteOrder.toString();,if (byteOrder != null ) final String byteOrderStr = byteOrder.toString();
PyGenerator.java,final int fieldLength = token.arrayLength();,if (token != null ) final int fieldLength = token.arrayLength();
PyGenerator.java,final String pyTypeName = pythonTypeName(token.encoding().primitiveType());,if (pythonTypeName(token != null ) final String pyTypeName = pythonTypeName(token.encoding().primitiveType());
PyGenerator.java,final String blockLengthType = pythonTypeName(ir.headerStructure().blockLengthType());,if (pythonTypeName(ir != null ) final String blockLengthType = pythonTypeName(ir.headerStructure().blockLengthType());
PyGenerator.java,final String templateIdType = pythonTypeName(ir.headerStructure().templateIdType());,if (pythonTypeName(ir != null ) final String templateIdType = pythonTypeName(ir.headerStructure().templateIdType());
PyGenerator.java,final String schemaIdType = pythonTypeName(ir.headerStructure().schemaIdType());,if (pythonTypeName(ir != null ) final String schemaIdType = pythonTypeName(ir.headerStructure().schemaIdType());
PyGenerator.java,final String schemaVersionType = pythonTypeName(ir.headerStructure().schemaVersionType());,if (pythonTypeName(ir != null ) final String schemaVersionType = pythonTypeName(ir.headerStructure().schemaVersionType());
PyGenerator.java,final String propertyName = signalToken.name();,if (signalToken != null ) final String propertyName = signalToken.name();
PyGenerator.java,final String propertyName = signalToken.name();,if (signalToken != null ) final String propertyName = signalToken.name();
PyGenerator.java,final Encoding encoding = token.encoding();,if (token != null ) final Encoding encoding = token.encoding();
PyGenerator.java,final String enumName = formatClassName(token.applicableTypeName());,if (formatClassName(token != null ) final String enumName = formatClassName(token.applicableTypeName());
PyGenerator.java,final String typeName = pythonTypeName(token.encoding().primitiveType());,if (pythonTypeName(token != null ) final String typeName = pythonTypeName(token.encoding().primitiveType());
PyGenerator.java,final String enumUnderlyingType = pythonTypeName(token.encoding().primitiveType());,if (pythonTypeName(token != null ) final String enumUnderlyingType = pythonTypeName(token.encoding().primitiveType());
PyGenerator.java,final int offset = token.offset();,if (token != null ) final int offset = token.offset();
PyGenerator.java,final ByteOrder byteOrder = token.encoding().byteOrder();,if (token != null ) final ByteOrder byteOrder = token.encoding().byteOrder();
PyGenerator.java,final String byteOrderStr = byteOrder.toString();,if (byteOrder != null ) final String byteOrderStr = byteOrder.toString();
PyGenerator.java,final String bitSetName = formatClassName(token.applicableTypeName());,if (formatClassName(token != null ) final String bitSetName = formatClassName(token.applicableTypeName());
PyGenerator.java,final int offset = token.offset();,if (token != null ) final int offset = token.offset();
PyGenerator.java,final String compositeName = formatClassName(token.applicableTypeName());,if (formatClassName(token != null ) final String compositeName = formatClassName(token.applicableTypeName());
PyGenerator.java,final int offset = token.offset();,if (token != null ) final int offset = token.offset();
PyUtil.java,final String description = typeToken.description();,if (typeToken != null ) final String description = typeToken.description();
PyUtil.java,final String description = propertyToken.description();,if (propertyToken != null ) final String description = propertyToken.description();
PyUtil.java,final String description = propertyToken.description();,if (propertyToken != null ) final String description = propertyToken.description();
PyGenerator.java,final String choiceName = formatPropertyName(token.name());,if (formatPropertyName(token != null ) final String choiceName = formatPropertyName(token.name());
PyGenerator.java,final Encoding encoding = token.encoding();,if (token != null ) final Encoding encoding = token.encoding();
PyGenerator.java,final String choiceBitIndex = encoding.constValue().toString();,if (encoding != null ) final String choiceBitIndex = encoding.constValue().toString();
PyGenerator.java,final PrimitiveType primitiveType = encoding.primitiveType();,if (encoding != null ) final PrimitiveType primitiveType = encoding.primitiveType();
PyGenerator.java,final String choiceName = formatPropertyName(token.name());,if (formatPropertyName(token != null ) final String choiceName = formatPropertyName(token.name());
PyGenerator.java,final String choiceName = formatPropertyName(token.name());,if (formatPropertyName(token != null ) final String choiceName = formatPropertyName(token.name());
PyGenerator.java,final Encoding encoding = token.encoding();,if (token != null ) final Encoding encoding = token.encoding();
PyGenerator.java,final String choiceBitIndex = encoding.constValue().toString();,if (encoding != null ) final String choiceBitIndex = encoding.constValue().toString();
PyGenerator.java,final PrimitiveType primitiveType = encoding.primitiveType();,if (encoding != null ) final PrimitiveType primitiveType = encoding.primitiveType();
PyGenerator.java,String ending = byteOrder.toString().toUpperCase();,if (byteOrder != null ) String ending = byteOrder.toString().toUpperCase();
PyGenerator.java,List<String> fields = new ArrayList<>(fieldTypes.keySet());,if (ArrayList<>(fieldTypes != null ) List<String> fields = new ArrayList<>(fieldTypes.keySet());
JavaGenerator.java,final int blockLength = tokens.get(index).encodedLength();,if (tokens != null ) final int blockLength = tokens.get(index).encodedLength();
HeaderStructure.java,blockLengthType = token.encoding().primitiveType();,if (token != null ) blockLengthType = token.encoding().primitiveType();
HeaderStructure.java,templateIdType = token.encoding().primitiveType();,if (token != null ) templateIdType = token.encoding().primitiveType();
HeaderStructure.java,schemaIdType = token.encoding().primitiveType();,if (token != null ) schemaIdType = token.encoding().primitiveType();
HeaderStructure.java,schemaVersionType = token.encoding().primitiveType();,if (token != null ) schemaVersionType = token.encoding().primitiveType();
RustGenerator.java,final String blockLength =  Integer.toString(messageToken.encodedLength());,if (Integer != null ) final String blockLength =  Integer.toString(messageToken.encodedLength());
RustGenerator.java,final int headerSize = totalByteSize(ir.headerStructure());,if (totalByteSize(ir != null ) final int headerSize = totalByteSize(ir.headerStructure());
RustGenerator.java,final PrimitiveType blockLengthType = blockLengthToken.encoding().primitiveType();,if (blockLengthToken != null ) final PrimitiveType blockLengthType = blockLengthToken.encoding().primitiveType();
RustGenerator.java,i += fieldToken.componentTokenCount();,if (fieldToken != null ) i += fieldToken.componentTokenCount();
RustGenerator.java,final FieldsRepresentationSummary fieldsRepresentation = fieldsRepresentationOptional.get();,if (fieldsRepresentationOptional != null ) final FieldsRepresentationSummary fieldsRepresentation = fieldsRepresentationOptional.get();
RustGenerator.java,final String decoderName = representationStruct + codecType.name();,if (codecType != null ) final String decoderName = representationStruct + codecType.name();
RustGenerator.java,totalSize += typeToken.encodedLength();,if (typeToken != null ) totalSize += typeToken.encodedLength();
JavaGenerator.java,final String enumName = formatClassName(token.applicableTypeName());,if (formatClassName(token != null ) final String enumName = formatClassName(token.applicableTypeName());
JavaGenerator.java,final Encoding encoding = token.encoding();,if (token != null ) final Encoding encoding = token.encoding();
JavaGenerator.java,final int offset = token.offset();,if (token != null ) final int offset = token.offset();
JavaGenerator.java,final int fieldLength = token.arrayLength();,if (token != null ) final int fieldLength = token.arrayLength();
JavaGenerator.java,final String javaTypeName = javaTypeName(encoding.primitiveType());,if (javaTypeName(encoding != null ) final String javaTypeName = javaTypeName(encoding.primitiveType());
CGenerator.java,final int groupHeaderTokenCount = tokens.get(i).componentTokenCount();,if (tokens != null ) final int groupHeaderTokenCount = tokens.get(i).componentTokenCount();
CGenerator.java,final int groupHeaderTokenCount = tokens.get(i).componentTokenCount();,if (tokens != null ) final int groupHeaderTokenCount = tokens.get(i).componentTokenCount();
CGenerator.java,final String propertyName = formatPropertyName(groupToken.name());,if (formatPropertyName(groupToken != null ) final String propertyName = formatPropertyName(groupToken.name());
CGenerator.java,final String propertyName = formatPropertyName(fieldToken.name());,if (formatPropertyName(fieldToken != null ) final String propertyName = formatPropertyName(fieldToken.name());
CGenerator.java,i += tokens.get(i).componentTokenCount();,if (tokens != null ) i += tokens.get(i).componentTokenCount();
CGenerator.java,final String propertyName = formatPropertyName(signalToken.name());,if (formatPropertyName(signalToken != null ) final String propertyName = formatPropertyName(signalToken.name());
CGenerator.java,"final String bitsetName = formatScopedName(scope, token.applicableTypeName());","if (token != null ) final String bitsetName = formatScopedName(scope, token.applicableTypeName());"
CGenerator.java,"final String compositeName = formatScopedName(scope, token.applicableTypeName());","if (token != null ) final String compositeName = formatScopedName(scope, token.applicableTypeName());"
JavaGenerator.java,final String schemaIdType = javaTypeName(ir.headerStructure().schemaIdType());,if (javaTypeName(ir != null ) final String schemaIdType = javaTypeName(ir.headerStructure().schemaIdType());
JavaGenerator.java,final String schemaVersionType = javaTypeName(ir.headerStructure().schemaVersionType());,if (javaTypeName(ir != null ) final String schemaVersionType = javaTypeName(ir.headerStructure().schemaVersionType());
JavaGenerator.java,final String blockLengthType = javaTypeName(headerStructure.blockLengthType());,if (javaTypeName(headerStructure != null ) final String blockLengthType = javaTypeName(headerStructure.blockLengthType());
JavaGenerator.java,final String templateIdType = javaTypeName(headerStructure.templateIdType());,if (javaTypeName(headerStructure != null ) final String templateIdType = javaTypeName(headerStructure.templateIdType());
JavaGenerator.java,final String schemaIdType = javaTypeName(headerStructure.schemaIdType());,if (javaTypeName(headerStructure != null ) final String schemaIdType = javaTypeName(headerStructure.schemaIdType());
JavaGenerator.java,final String schemaVersionType = javaTypeName(headerStructure.schemaVersionType());,if (javaTypeName(headerStructure != null ) final String schemaVersionType = javaTypeName(headerStructure.schemaVersionType());
SbeTool.java,final Path parentPath = filePath.toAbsolutePath().getParent();,if (filePath != null ) final Path parentPath = filePath.toAbsolutePath().getParent();
SbeTool.java,final Path parentPath = filePath.toAbsolutePath().getParent();,if (filePath != null ) final Path parentPath = filePath.toAbsolutePath().getParent();
RelativeXIncludeTest.java,final ClassLoader classLoader = getClass().getClassLoader();,if (getClass() != null ) final ClassLoader classLoader = getClass().getClassLoader();
RelativeXIncludeTest.java,final InputSource is = new InputSource(testResource.openStream());,if (InputSource(testResource != null ) final InputSource is = new InputSource(testResource.openStream());
RelativeXIncludeTest.java,final InputStream inStream = testResource.openStream();,if (testResource != null ) final InputStream inStream = testResource.openStream();
RelativeXIncludeTest.java,ClassLoader classLoader = getClass().getClassLoader();,if (getClass() != null ) ClassLoader classLoader = getClass().getClassLoader();
RelativeXIncludeTest.java,InputStream inStream = testResource.openStream();,if (testResource != null ) InputStream inStream = testResource.openStream();
RelativeXIncludeTest.java,File file = new File(testResource.getFile());,if (File(testResource != null ) File file = new File(testResource.getFile());
CompositeType.java,final PrimitiveValue maxValue = numInGroupType.maxValue();,if (numInGroupType != null ) final PrimitiveValue maxValue = numInGroupType.maxValue();
CompositeType.java,final PrimitiveValue minValue = numInGroupType.minValue();,if (numInGroupType != null ) final PrimitiveValue minValue = numInGroupType.minValue();
JavaGenerator.java,final String fieldName = headerToken.name();,if (headerToken != null ) final String fieldName = headerToken.name();
CppGenerator.java,final String propertyName = formatPropertyName(token.name());,if (formatPropertyName(token != null ) final String propertyName = formatPropertyName(token.name());
GolangGenerator.java,final PrimitiveType primitiveType =  token.encoding().primitiveType();,if (token != null ) final PrimitiveType primitiveType =  token.encoding().primitiveType();
RustGenerator.java,enumValue = searchAhead.name();,if (searchAhead != null ) enumValue = searchAhead.name();
JsonTokenListener.java,final Encoding encoding = token.encoding();,if (token != null ) final Encoding encoding = token.encoding();
ExampleTokenListener.java,value = tokens.get(i).name();,if (tokens != null ) value = tokens.get(i).name();
Ir.java,final Token token = iter.next();,if (iter != null ) final Token token = iter.next();
Ir.java,Token nextToken = iter.next();,if (iter != null ) Token nextToken = iter.next();
Ir.java,nextToken = iter.next();,if (iter != null ) nextToken = iter.next();
JsonTokenListener.java,final Encoding encoding = typeToken.encoding();,if (typeToken != null ) final Encoding encoding = typeToken.encoding();
JavaGeneratorTest.java,final Object flyweight = clazz.newInstance();,if (clazz != null ) final Object flyweight = clazz.newInstance();
JavaGeneratorTest.java,final Object flyweight = clazz.newInstance();,if (clazz != null ) final Object flyweight = clazz.newInstance();
JavaGeneratorTest.java,final Object flyweight = clazz.newInstance();,if (clazz != null ) final Object flyweight = clazz.newInstance();
JavaGeneratorTest.java,final Object flyweight = clazz.newInstance();,if (clazz != null ) final Object flyweight = clazz.newInstance();
JavaGeneratorTest.java,final Object flyweight = clazz.newInstance();,if (clazz != null ) final Object flyweight = clazz.newInstance();
JavaGeneratorTest.java,final Object decoder = compileCarDecoder().newInstance();,if (compileCarDecoder() != null ) final Object decoder = compileCarDecoder().newInstance();
JavaGenerator.java,final String enumName = formatClassName(token.applicableTypeName());,if (formatClassName(token != null ) final String enumName = formatClassName(token.applicableTypeName());
JavaGenerator.java,final Encoding encoding = token.encoding();,if (token != null ) final Encoding encoding = token.encoding();
JavaGenerator.java,final Encoding encoding = token.encoding();,if (token != null ) final Encoding encoding = token.encoding();
JavaGenerator.java,final int offset = token.offset();,if (token != null ) final int offset = token.offset();
JavaGenerator.java,final Encoding encoding = token.encoding();,if (token != null ) final Encoding encoding = token.encoding();
JavaGenerator.java,final int offset = token.offset();,if (token != null ) final int offset = token.offset();
JavaGenerator.java,final int fieldLength = token.arrayLength();,if (token != null ) final int fieldLength = token.arrayLength();
CppGenerator.java,final String choiceName = formatPropertyName(token.name());,if (formatPropertyName(token != null ) final String choiceName = formatPropertyName(token.name());
CppGenerator.java,final String typeName = cppTypeName(token.encoding().primitiveType());,if (cppTypeName(token != null ) final String typeName = cppTypeName(token.encoding().primitiveType());
JavaGenerator.java,final String choiceName = formatPropertyName(token.name());,if (formatPropertyName(token != null ) final String choiceName = formatPropertyName(token.name());
CppGenerator.java,final String cppTypeName = cppTypeName(token.encoding().primitiveType());,if (cppTypeName(token != null ) final String cppTypeName = cppTypeName(token.encoding().primitiveType());
CppGenerator.java,final String cppTypeName = cppTypeName(token.encoding().primitiveType());,if (cppTypeName(token != null ) final String cppTypeName = cppTypeName(token.encoding().primitiveType());
IrGenerator.java,byteOrder = schema.byteOrder();,if (schema != null ) byteOrder = schema.byteOrder();
IrGenerator.java,byteOrder = schema.byteOrder();,if (schema != null ) byteOrder = schema.byteOrder();
EncodedDataType.java,final String nodeValue = node.getFirstChild().getNodeValue();,if (node != null ) final String nodeValue = node.getFirstChild().getNodeValue();
JavaUtil.java,final String description = classToken.description();,if (classToken != null ) final String description = classToken.description();
IrGenerator.java,final String description = field.description();,if (field != null ) final String description = field.description();
IrGenerator.java,final String description = field.description();,if (field != null ) final String description = field.description();
IrGenerator.java,final String description = field.description();,if (field != null ) final String description = field.description();
IrGenerator.java,final String description = field.description();,if (field != null ) final String description = field.description();
JsonPrinter.java,bufferOffset += headerDecoder.encodedLength();,if (headerDecoder != null ) bufferOffset += headerDecoder.encodedLength();
RustFlatFileOutputManagerTest.java,final File tempDir = folderRule.newFolder();,if (folderRule != null ) final File tempDir = folderRule.newFolder();
RustFlatFileOutputManagerTest.java,final String tempDirName = tempDir.getAbsolutePath();,if (tempDir != null ) final String tempDirName = tempDir.getAbsolutePath();
JavaGenerator.java,final String propertyName = toUpperFirstChar(token.name());,if (toUpperFirstChar(token != null ) final String propertyName = toUpperFirstChar(token.name());
JavaGenerator.java,final String propertyName = toUpperFirstChar(token.name());,if (toUpperFirstChar(token != null ) final String propertyName = toUpperFirstChar(token.name());
JavaUtil.java,i += fieldToken.componentTokenCount();,if (fieldToken != null ) i += fieldToken.componentTokenCount();
JavaGenerator.java,i += fieldToken.componentTokenCount();,if (fieldToken != null ) i += fieldToken.componentTokenCount();
RustFlatFileOutputManager.java,final boolean outputDirAvailable = outputDir.exists() || outputDir.mkdirs();,if (outputDir != null ) final boolean outputDirAvailable = outputDir.exists() || outputDir.mkdirs();
RustGenerator.java,final int headerSize = totalByteSize(ir.headerStructure());,if (totalByteSize(ir != null ) final int headerSize = totalByteSize(ir.headerStructure());
RustGenerator.java,final String messageTypeName = formatTypeName(components.messageToken.name());,if (formatTypeName(components != null ) final String messageTypeName = formatTypeName(components.messageToken.name());
RustGenerator.java,final String setType = formatTypeName(beginToken.applicableTypeName());,if (formatTypeName(beginToken != null ) final String setType = formatTypeName(beginToken.applicableTypeName());
RustGenerator.java,final String rustPrimitiveType = rustTypeName(beginToken.encoding().primitiveType());,if (rustTypeName(beginToken != null ) final String rustPrimitiveType = rustTypeName(beginToken.encoding().primitiveType());
RustGenerator.java,final String choiceName = formatMethodName(token.name());,if (formatMethodName(token != null ) final String choiceName = formatMethodName(token.name());
RustGenerator.java,final Encoding encoding = token.encoding();,if (token != null ) final Encoding encoding = token.encoding();
RustGenerator.java,final String choiceBitIndex = encoding.constValue().toString();,if (encoding != null ) final String choiceBitIndex = encoding.constValue().toString();
RustGenerator.java,final String messageTypeName = formatTypeName(msgToken.name());,if (formatTypeName(msgToken != null ) final String messageTypeName = formatTypeName(msgToken.name());
RustGenerator.java,final String messageTypeName = formatTypeName(msgToken.name());,if (formatTypeName(msgToken != null ) final String messageTypeName = formatTypeName(msgToken.name());
RustGenerator.java,final String gerund = codecType.gerund();,if (codecType != null ) final String gerund = codecType.gerund();
RustGenerator.java,final FieldsRepresentationSummary fieldsRepresentation = fieldsRepresentationOptional.get();,if (fieldsRepresentationOptional != null ) final FieldsRepresentationSummary fieldsRepresentation = fieldsRepresentationOptional.get();
RustGenerator.java,final String decoderName = representationStruct + codecType.name();,if (codecType != null ) final String decoderName = representationStruct + codecType.name();
RustGenerator.java,final boolean hasParent = node.parent.isPresent();,if (node != null ) final boolean hasParent = node.parent.isPresent();
RustGenerator.java,final boolean hasParent = node.parent.isPresent();,if (node != null ) final boolean hasParent = node.parent.isPresent();
RustGenerator.java,final int size = groupsTokens.size();,if (groupsTokens != null ) final int size = groupsTokens.size();
RustGenerator.java,final String originalName = groupToken.name();,if (groupToken != null ) final String originalName = groupToken.name();
RustGenerator.java,final int groupHeaderTokenCount = dimensionsToken.componentTokenCount();,if (dimensionsToken != null ) final int groupHeaderTokenCount = dimensionsToken.componentTokenCount();
RustGenerator.java,final int blockLength = groupToken.encodedLength();,if (groupToken != null ) final int blockLength = groupToken.encodedLength();
RustGenerator.java,final PrimitiveType blockLengthType = blockLengthToken.encoding().primitiveType();,if (blockLengthToken != null ) final PrimitiveType blockLengthType = blockLengthToken.encoding().primitiveType();
RustGenerator.java,final int headerTokenCount = dimensionsToken.componentTokenCount();,if (dimensionsToken != null ) final int headerTokenCount = dimensionsToken.componentTokenCount();
RustGenerator.java,final String typeName = beginToken.applicableTypeName();,if (beginToken != null ) final String typeName = beginToken.applicableTypeName();
RustGenerator.java,final Encoding encoding = token.encoding();,if (token != null ) final Encoding encoding = token.encoding();
RustGenerator.java,final String originalTypeName = beginToken.applicableTypeName();,if (beginToken != null ) final String originalTypeName = beginToken.applicableTypeName();
RustGenerator.java,final HeaderStructure header = ir.headerStructure();,if (ir != null ) final HeaderStructure header = ir.headerStructure();
RustGenerator.java,final String messageTypeName = formatTypeName(messageToken.name());,if (formatTypeName(messageToken != null ) final String messageTypeName = formatTypeName(messageToken.name());
RustGenerator.java,final String name = fieldToken.name();,if (fieldToken != null ) final String name = fieldToken.name();
RustGenerator.java,final int componentTokenCount = fieldToken.componentTokenCount();,if (fieldToken != null ) final int componentTokenCount = fieldToken.componentTokenCount();
RustGenerator.java,final String enumType = formatTypeName(signalToken.applicableTypeName());,if (formatTypeName(signalToken != null ) final String enumType = formatTypeName(signalToken.applicableTypeName());
RustGenerator.java,enumValue = searchAhead.name();,if (searchAhead != null ) enumValue = searchAhead.name();
RustUtil.java,final int length = sequence.length();,if (sequence != null ) final int length = sequence.length();
SplitCompositeTokens.java,i += encodingToken.componentTokenCount();,if (encodingToken != null ) i += encodingToken.componentTokenCount();
RustFlatFileOutputManagerTest.java,final File tempDir = folderRule.getRoot();,if (folderRule != null ) final File tempDir = folderRule.getRoot();
RustFlatFileOutputManagerTest.java,final String tempDirName = tempDir.getAbsolutePath();,if (tempDir != null ) final String tempDirName = tempDir.getAbsolutePath();
RustFlatFileOutputManagerTest.java,final File tempDir = folderRule.newFolder();,if (folderRule != null ) final File tempDir = folderRule.newFolder();
RustFlatFileOutputManagerTest.java,final String tempDirName = tempDir.getAbsolutePath();,if (tempDir != null ) final String tempDirName = tempDir.getAbsolutePath();
RustGeneratorTest.java,final Process process = builder.start();,if (builder != null ) final Process process = builder.start();
RustGeneratorTest.java,final String line = errorReader.readLine();,if (errorReader != null ) final String line = errorReader.readLine();
RustGeneratorTest.java,final Process process = builder.start();,if (builder != null ) final Process process = builder.start();
RustTest.java,final File newFolder = temporaryFolder.newFolder();,if (temporaryFolder != null ) final File newFolder = temporaryFolder.newFolder();
Message.java,presence = fieldType.presence();,if (fieldType != null ) presence = fieldType.presence();
CppGenerator.java,final String className = formatClassName(components.messageToken.name());,if (formatClassName(components != null ) final String className = formatClassName(components.messageToken.name());
GolangGenerator.java,final String typeName = formatTypeName(components.messageToken.name());,if (formatTypeName(components != null ) final String typeName = formatTypeName(components.messageToken.name());
RustGenerator.java,final int headerSize = ir.headerStructure().totalByteSize();,if (ir != null ) final int headerSize = ir.headerStructure().totalByteSize();
GenerationUtil.java,i += fieldToken.componentTokenCount();,if (fieldToken != null ) i += fieldToken.componentTokenCount();
CppGenerator.java,final String className = formatClassName(msgToken.name());,if (formatClassName(msgToken != null ) final String className = formatClassName(msgToken.name());
GolangGenerator.java,final String typeName = formatTypeName(msgToken.name());,if (formatTypeName(msgToken != null ) final String typeName = formatTypeName(msgToken.name());
JavaGenerator.java,i += fieldToken.componentTokenCount();,if (fieldToken != null ) i += fieldToken.componentTokenCount();
EncodedDataType.java,final int valueLength = nodeValue.length();,if (nodeValue != null ) final int valueLength = nodeValue.length();
IrDecoder.java,length = channel.size();,if (channel != null ) length = channel.size();
IrEncoder.java,channel = new FileOutputStream(fileName).getChannel();,if (FileOutputStream(fileName) != null ) channel = new FileOutputStream(fileName).getChannel();
Ir.java,final Signal signal = token.signal();,if (token != null ) final Signal signal = token.signal();
Ir.java,final int beginIndex = map.get(componentType).pop();,if (map != null ) final int beginIndex = map.get(componentType).pop();
GolangGenerator.java,final String golangType = golangTypeName(encodingToken.encoding().primitiveType());,if (golangTypeName(encodingToken != null ) final String golangType = golangTypeName(encodingToken.encoding().primitiveType());
GolangGenerator.java,final Encoding encoding = encodingToken.encoding();,if (encodingToken != null ) final Encoding encoding = encodingToken.encoding();
GolangGenerator.java,final String choiceName = formatTypeName(choiceToken.name());,if (formatTypeName(choiceToken != null ) final String choiceName = formatTypeName(choiceToken.name());
CppGenerator.java,final String enumName = formatClassName(encodingToken.contextualTypeName());,if (formatClassName(encodingToken != null ) final String enumName = formatClassName(encodingToken.contextualTypeName());
CppGenerator.java,final String enumName = formatClassName(token.contextualTypeName());,if (formatClassName(token != null ) final String enumName = formatClassName(token.contextualTypeName());
CppGenerator.java,final String bitsetName = formatClassName(token.contextualTypeName());,if (formatClassName(token != null ) final String bitsetName = formatClassName(token.contextualTypeName());
CppGenerator.java,final String compositeName = formatClassName(token.contextualTypeName());,if (formatClassName(token != null ) final String compositeName = formatClassName(token.contextualTypeName());
JavaGenerator.java,final String bitSetName = formatClassName(token.contextualTypeName());,if (formatClassName(token != null ) final String bitSetName = formatClassName(token.contextualTypeName());
JavaGenerator.java,final String compositeName = formatClassName(token.contextualTypeName());,if (formatClassName(token != null ) final String compositeName = formatClassName(token.contextualTypeName());
JavaGenerator.java,final String enumName = formatClassName(token.contextualTypeName());,if (formatClassName(token != null ) final String enumName = formatClassName(token.contextualTypeName());
JavaGenerator.java,final String enumName = formatClassName(token.contextualTypeName());,if (formatClassName(token != null ) final String enumName = formatClassName(token.contextualTypeName());
CppGenerator.java,final String enumName = formatClassName(encodingToken.name());,if (formatClassName(encodingToken != null ) final String enumName = formatClassName(encodingToken.name());
CppGenerator.java,final String enumName = formatClassName(token.name());,if (formatClassName(token != null ) final String enumName = formatClassName(token.name());
CppGenerator.java,final String bitsetName = formatClassName(token.name());,if (formatClassName(token != null ) final String bitsetName = formatClassName(token.name());
CppGenerator.java,final String compositeName = formatClassName(token.name());,if (formatClassName(token != null ) final String compositeName = formatClassName(token.name());
JavaGenerator.java,final String bitSetName = formatClassName(token.name());,if (formatClassName(token != null ) final String bitSetName = formatClassName(token.name());
JavaGenerator.java,final String compositeName = formatClassName(token.name());,if (formatClassName(token != null ) final String compositeName = formatClassName(token.name());
JavaGenerator.java,final String enumName = formatClassName(token.name());,if (formatClassName(token != null ) final String enumName = formatClassName(token.name());
JavaGenerator.java,final String enumName = formatClassName(token.name());,if (formatClassName(token != null ) final String enumName = formatClassName(token.name());
OtfMessageDecoder.java,final int nextFieldIdx = tokenIdx + fieldToken.componentTokenCount();,if (fieldToken != null ) final int nextFieldIdx = tokenIdx + fieldToken.componentTokenCount();
OtfMessageDecoder.java,bufferIdx += dimensionTypeComposite.encodedLength();,if (dimensionTypeComposite != null ) bufferIdx += dimensionTypeComposite.encodedLength();
OtfMessageDecoder.java,bufferIdx += dataToken.offset();,if (dataToken != null ) bufferIdx += dataToken.offset();
GolangGenerator.java,final Encoding encoding = encodingToken.encoding();,if (encodingToken != null ) final Encoding encoding = encodingToken.encoding();
JavaGenerator.java,i += encodingToken.componentTokenCount();,if (encodingToken != null ) i += encodingToken.componentTokenCount();
JavaGenerator.java,i += encodingToken.componentTokenCount();,if (encodingToken != null ) i += encodingToken.componentTokenCount();
GolangGenerator.java,final String choiceName = formatTypeName(token.name());,if (formatTypeName(token != null ) final String choiceName = formatTypeName(token.name());
GolangGenerator.java,final int arrayLength = encodingToken.arrayLength();,if (encodingToken != null ) final int arrayLength = encodingToken.arrayLength();
GolangGenerator.java,final Encoding encoding = encodingToken.encoding();,if (encodingToken != null ) final Encoding encoding = encodingToken.encoding();
GolangGenerator.java,final Encoding encoding = encodingToken.encoding();,if (encodingToken != null ) final Encoding encoding = encodingToken.encoding();
IrGenerator.java,version = schema.version();,if (schema != null ) version = schema.version();
OtfMessageDecoder.java,bufferIdx += dimensionTypeComposite.encodedLength();,if (dimensionTypeComposite != null ) bufferIdx += dimensionTypeComposite.encodedLength();
OtfMessageDecoder.java,bufferIdx += dataToken.offset();,if (dataToken != null ) bufferIdx += dataToken.offset();
JsonPrinterTest.java,bufferOffset += CAR.encodedLength();,if (CAR != null ) bufferOffset += CAR.encodedLength();
JavaGenerator.java,i += encodingToken.componentTokenCount();,if (encodingToken != null ) i += encodingToken.componentTokenCount();
JavaGenerator.java,final String varLenName = formatPropertyName(varLenToken.name());,if (formatPropertyName(varLenToken != null ) final String varLenName = formatPropertyName(varLenToken.name());
JavaGenerator.java,i += varLenToken.componentTokenCount();,if (varLenToken != null ) i += varLenToken.componentTokenCount();
JavaGenerator.java,final String lengthJavaType = javaTypeName(lengthEncoding.primitiveType());,if (javaTypeName(lengthEncoding != null ) final String lengthJavaType = javaTypeName(lengthEncoding.primitiveType());
ExampleTokenListener.java,final Encoding encoding = token.encoding();,if (token != null ) final Encoding encoding = token.encoding();
Message.java,final int size = field.type().encodedLength();,if (field != null ) final int size = field.type().encodedLength();
CppGenerator.java,final String groupName = groupToken.name();,if (groupToken != null ) final String groupName = groupToken.name();
CppGenerator.java,final int groupHeaderTokenCount = tokens.get(index).componentTokenCount();,if (tokens != null ) final int groupHeaderTokenCount = tokens.get(index).componentTokenCount();
CppGenerator.java,final String propertyName = toUpperFirstChar(token.name());,if (toUpperFirstChar(token != null ) final String propertyName = toUpperFirstChar(token.name());
CppGenerator.java,final int lengthOfLengthField = lengthToken.encodedLength();,if (lengthToken != null ) final int lengthOfLengthField = lengthToken.encodedLength();
CppGenerator.java,final String lengthCppType = cppTypeName(lengthToken.encoding().primitiveType());,if (cppTypeName(lengthToken != null ) final String lengthCppType = cppTypeName(lengthToken.encoding().primitiveType());
JavaGenerator.java,final int groupHeaderTokenCount = tokens.get(index).componentTokenCount();,if (tokens != null ) final int groupHeaderTokenCount = tokens.get(index).componentTokenCount();
JavaGenerator.java,final String groupName = groupToken.name();,if (groupToken != null ) final String groupName = groupToken.name();
JavaGenerator.java,final int groupHeaderTokenCount = tokens.get(index).componentTokenCount();,if (tokens != null ) final int groupHeaderTokenCount = tokens.get(index).componentTokenCount();
JavaGenerator.java,final String propertyName = formatPropertyName(signalToken.name());,if (formatPropertyName(signalToken != null ) final String propertyName = formatPropertyName(signalToken.name());
JavaGenerator.java,final String propertyName = formatPropertyName(signalToken.name());,if (formatPropertyName(signalToken != null ) final String propertyName = formatPropertyName(signalToken.name());
Ir.java,final Token token = iter.next();,if (iter != null ) final Token token = iter.next();
Ir.java,Token nextToken = iter.next();,if (iter != null ) Token nextToken = iter.next();
Ir.java,nextToken = iter.next();,if (iter != null ) nextToken = iter.next();
Ir.java,final Signal signal = token.signal();,if (token != null ) final Signal signal = token.signal();
Ir.java,final int beginIndex = map.get(componentType).pop();,if (map != null ) final int beginIndex = map.get(componentType).pop();
CppGenerator.java,final String choiceName = token.name();,if (token != null ) final String choiceName = token.name();
CppGenerator.java,final String enumName = token.name();,if (token != null ) final String enumName = token.name();
CompositeType.java,final String nodeName = subTypeNode.getNodeName();,if (subTypeNode != null ) final String nodeName = subTypeNode.getNodeName();
IrGenerator.java,offset = edt.offsetAttribute();,if (edt != null ) offset = edt.offsetAttribute();
IrGenerator.java,offset += edt.encodedLength();,if (edt != null ) offset += edt.encodedLength();
CompositeElementsTest.java,final CompositeType type = (CompositeType)composite.type();,if ((CompositeType)composite != null ) final CompositeType type = (CompositeType)composite.type();
CppGenerator.java,final int blockLength = tokens.get(index).encodedLength();,if (tokens != null ) final int blockLength = tokens.get(index).encodedLength();
JavaGenerator.java,final String groupName = groupToken.name();,if (groupToken != null ) final String groupName = groupToken.name();
JavaGenerator.java,final String typePrefix = encoding.primitiveType().primitiveName();,if (encoding != null ) final String typePrefix = encoding.primitiveType().primitiveName();
JavaGenerator.java,final String choiceBitPosition = encoding.constValue().toString();,if (encoding != null ) final String choiceBitPosition = encoding.constValue().toString();
JavaGenerator.java,final String choiceName = formatPropertyName(token.name());,if (formatPropertyName(token != null ) final String choiceName = formatPropertyName(token.name());
JavaGenerator.java,final Encoding encoding = token.encoding();,if (token != null ) final Encoding encoding = token.encoding();
JavaGenerator.java,final String typePrefix = encoding.primitiveType().primitiveName();,if (encoding != null ) final String typePrefix = encoding.primitiveType().primitiveName();
JavaGenerator.java,final String choiceBitPosition = encoding.constValue().toString();,if (encoding != null ) final String choiceBitPosition = encoding.constValue().toString();
JavaGenerator.java,final String typePrefix = encoding.primitiveType().primitiveName();,if (encoding != null ) final String typePrefix = encoding.primitiveType().primitiveName();
JavaGenerator.java,final String lengthTypePrefix = lengthEncoding.primitiveType().primitiveName();,if (lengthEncoding != null ) final String lengthTypePrefix = lengthEncoding.primitiveType().primitiveName();
JavaGenerator.java,final String lengthTypePrefix = lengthEncoding.primitiveType().primitiveName();,if (lengthEncoding != null ) final String lengthTypePrefix = lengthEncoding.primitiveType().primitiveName();
JavaGenerator.java,final String typePrefix = encoding.primitiveType().primitiveName();,if (encoding != null ) final String typePrefix = encoding.primitiveType().primitiveName();
JavaGenerator.java,final String typePrefix = encoding.primitiveType().primitiveName();,if (encoding != null ) final String typePrefix = encoding.primitiveType().primitiveName();
JavaGenerator.java,final String typePrefix = encoding.primitiveType().primitiveName();,if (encoding != null ) final String typePrefix = encoding.primitiveType().primitiveName();
JavaGenerator.java,final String typePrefix = encoding.primitiveType().primitiveName();,if (encoding != null ) final String typePrefix = encoding.primitiveType().primitiveName();
JavaGenerator.java,final String typePrefix = encoding.primitiveType().primitiveName();,if (encoding != null ) final String typePrefix = encoding.primitiveType().primitiveName();
JavaGenerator.java,final String typePrefix = encoding.primitiveType().primitiveName();,if (encoding != null ) final String typePrefix = encoding.primitiveType().primitiveName();
OtfMessageDecoder.java,final int numTokens = msgTokens.size();,if (msgTokens != null ) final int numTokens = msgTokens.size();
OtfMessageDecoder.java,bufferIndex += dimensionTypeComposite.encodedLength();,if (dimensionTypeComposite != null ) bufferIndex += dimensionTypeComposite.encodedLength();
OtfMessageDecoder.java,bufferIndex += varDataToken.offset();,if (varDataToken != null ) bufferIndex += varDataToken.offset();
OtfMessageDecoder.java,final int offset = typeToken.offset();,if (typeToken != null ) final int offset = typeToken.offset();
Message.java,final int size = field.type().encodedLength();,if (field != null ) final int size = field.type().encodedLength();
MethodSelector.java,final String name = method.getName();,if (method != null ) final String name = method.getName();
Cpp98Generator.java,final String choiceName = token.name();,if (token != null ) final String choiceName = token.name();
JavaGenerator.java,final ByteOrder byteOrder = encoding.byteOrder();,if (encoding != null ) final ByteOrder byteOrder = encoding.byteOrder();
JavaGenerator.java,final int offset = token.offset();,if (token != null ) final int offset = token.offset();
JavaGenerator.java,final int offset = token.offset();,if (token != null ) final int offset = token.offset();
JavaGenerator.java,final int offset = token.offset();,if (token != null ) final int offset = token.offset();
JavaGenerator.java,final int offset = token.offset();,if (token != null ) final int offset = token.offset();
JavaGenerator.java,final String choiceName = token.name();,if (token != null ) final String choiceName = token.name();
JavaGenerator.java,final String choiceName = token.name();,if (token != null ) final String choiceName = token.name();
JavaGenerator.java,final String propertyName = formatPropertyName(signalToken.name());,if (formatPropertyName(signalToken != null ) final String propertyName = formatPropertyName(signalToken.name());
CarBenchmark.java,final long start = System.nanoTime();,if (System != null ) final long start = System.nanoTime();
CarBenchmark.java,final long start = System.nanoTime();,if (System != null ) final long start = System.nanoTime();
MarketDataBenchmark.java,final long start = System.nanoTime();,if (System != null ) final long start = System.nanoTime();
MarketDataBenchmark.java,final long start = System.nanoTime();,if (System != null ) final long start = System.nanoTime();
JavaMockPojoGenerator.java,final String choiceName = token.name();,if (token != null ) final String choiceName = token.name();
JavaMockPojoGenerator.java,final String className = formatClassName(msgToken.name());,if (formatClassName(msgToken != null ) final String className = formatClassName(msgToken.name());
JavaMockPojoGenerator.java,final String groupName = groupToken.name();,if (groupToken != null ) final String groupName = groupToken.name();
JavaMockPojoGenerator.java,final int arrayLength = token.arrayLength();,if (token != null ) final int arrayLength = token.arrayLength();
JavaMockPojoGenerator.java,final Encoding encoding = token.encoding();,if (token != null ) final Encoding encoding = token.encoding();
JavaMockPojoGenerator.java,final String javaTypeName = javaTypeName(encoding.primitiveType());,if (javaTypeName(encoding != null ) final String javaTypeName = javaTypeName(encoding.primitiveType());
JavaMockPojoGenerator.java,final String propertyName = formatPropertyName(signalToken.name());,if (formatPropertyName(signalToken != null ) final String propertyName = formatPropertyName(signalToken.name());
JavaMockPojoGenerator.java,final String enumName = token.name();,if (token != null ) final String enumName = token.name();
DirectBuffer.java,byteArray = buffer.array();,if (buffer != null ) byteArray = buffer.array();
DirectBuffer.java,offset = buffer.arrayOffset();,if (buffer != null ) offset = buffer.arrayOffset();
DirectBuffer.java,capacity = buffer.capacity();,if (buffer != null ) capacity = buffer.capacity();
DirectBuffer.java,duplicate = byteBuffer.duplicate();,if (byteBuffer != null ) duplicate = byteBuffer.duplicate();
DirectBuffer.java,"count = Math.min(count, dstBuffer.remaining());","if (dstBuffer != null ) count = Math.min(count, dstBuffer.remaining());"
DirectBuffer.java,"count = Math.min(count, srcBuffer.remaining());","if (srcBuffer != null ) count = Math.min(count, srcBuffer.remaining());"
DirectBuffer.java,final int dstOffset = dstBuffer.arrayOffset() + dstBuffer.position();,if (dstBuffer != null ) final int dstOffset = dstBuffer.arrayOffset() + dstBuffer.position();
DirectBuffer.java,final int srcOffset = srcBuffer.arrayOffset() + srcBuffer.position();,if (srcBuffer != null ) final int srcOffset = srcBuffer.arrayOffset() + srcBuffer.position();
DirectBuffer.java,final int dstOffset = dstBuffer.arrayOffset() + dstBuffer.position();,if (dstBuffer != null ) final int dstOffset = dstBuffer.arrayOffset() + dstBuffer.position();
DirectBuffer.java,final long address = BitUtil.getEffectiveDirectAddress(dstBuffer) + dstBuffer.position();,if (dstBuffer != null ) final long address = BitUtil.getEffectiveDirectAddress(dstBuffer) + dstBuffer.position();
DirectBuffer.java,final int srcOffset = srcBuffer.arrayOffset() + srcBuffer.position();,if (srcBuffer != null ) final int srcOffset = srcBuffer.arrayOffset() + srcBuffer.position();
DirectBuffer.java,final long address = BitUtil.getEffectiveDirectAddress(srcBuffer) + srcBuffer.position();,if (srcBuffer != null ) final long address = BitUtil.getEffectiveDirectAddress(srcBuffer) + srcBuffer.position();
MethodSelector.java,final int mods = method.getModifiers();,if (method != null ) final int mods = method.getModifiers();
MethodSelector.java,final String name = method.getName();,if (method != null ) final String name = method.getName();
CSharpGenerator.java,final String className = formatClassName(msgToken.name());,if (formatClassName(msgToken != null ) final String className = formatClassName(msgToken.name());
CSharpGenerator.java,final String groupName = groupToken.name();,if (groupToken != null ) final String groupName = groupToken.name();
CSharpGenerator.java,final int blockLength = tokens.get(index).encodedLength();,if (tokens != null ) final int blockLength = tokens.get(index).encodedLength();
CSharpGenerator.java,final String propertyName = toUpperFirstChar(token.name());,if (toUpperFirstChar(token != null ) final String propertyName = toUpperFirstChar(token.name());
CSharpGenerator.java,final int sizeOfLengthField = lengthToken.encodedLength();,if (lengthToken != null ) final int sizeOfLengthField = lengthToken.encodedLength();
CSharpGenerator.java,final Encoding lengthEncoding = lengthToken.encoding();,if (lengthToken != null ) final Encoding lengthEncoding = lengthToken.encoding();
CSharpGenerator.java,final String lengthCSharpType = cSharpTypeName(lengthEncoding.primitiveType());,if (cSharpTypeName(lengthEncoding != null ) final String lengthCSharpType = cSharpTypeName(lengthEncoding.primitiveType());
CSharpGenerator.java,final String lengthTypePrefix = toUpperFirstChar(lengthEncoding.primitiveType().primitiveName());,if (toUpperFirstChar(lengthEncoding != null ) final String lengthTypePrefix = toUpperFirstChar(lengthEncoding.primitiveType().primitiveName());
CSharpGenerator.java,final ByteOrder byteOrder = lengthEncoding.byteOrder();,if (lengthEncoding != null ) final ByteOrder byteOrder = lengthEncoding.byteOrder();
CSharpGenerator.java,final String enumName = CSharpUtil.formatClassName(enumToken.name());,if (CSharpUtil != null ) final String enumName = CSharpUtil.formatClassName(enumToken.name());
CSharpGenerator.java,final String enumPrimitiveType = cSharpTypeName(enumToken.encoding().primitiveType());,if (cSharpTypeName(enumToken != null ) final String enumPrimitiveType = cSharpTypeName(enumToken.encoding().primitiveType());
CSharpGenerator.java,final String enumName = CSharpUtil.formatClassName(enumToken.name());,if (CSharpUtil != null ) final String enumName = CSharpUtil.formatClassName(enumToken.name());
CSharpGenerator.java,final String enumPrimitiveType = cSharpTypeName(enumToken.encoding().primitiveType());,if (cSharpTypeName(enumToken != null ) final String enumPrimitiveType = cSharpTypeName(enumToken.encoding().primitiveType());
CSharpGenerator.java,final String choiceName = toUpperFirstChar(token.name());,if (toUpperFirstChar(token != null ) final String choiceName = toUpperFirstChar(token.name());
CSharpGenerator.java,final Encoding encoding = encodingToken.encoding();,if (encodingToken != null ) final Encoding encoding = encodingToken.encoding();
CSharpGenerator.java,final PrimitiveValue nullVal = encoding.applicableNullValue();,if (encoding != null ) final PrimitiveValue nullVal = encoding.applicableNullValue();
CSharpGenerator.java,final int arrayLength = token.arrayLength();,if (token != null ) final int arrayLength = token.arrayLength();
CSharpGenerator.java,final PrimitiveType primitiveType = token.encoding().primitiveType();,if (token != null ) final PrimitiveType primitiveType = token.encoding().primitiveType();
CSharpGenerator.java,final String typeName = cSharpTypeName(token.encoding().primitiveType());,if (cSharpTypeName(token != null ) final String typeName = cSharpTypeName(token.encoding().primitiveType());
CSharpGenerator.java,final int offset = token.offset();,if (token != null ) final int offset = token.offset();
CSharpGenerator.java,final ByteOrder byteOrder = token.encoding().byteOrder();,if (token != null ) final ByteOrder byteOrder = token.encoding().byteOrder();
CSharpGenerator.java,final String typeName = cSharpTypeName(token.encoding().primitiveType());,if (cSharpTypeName(token != null ) final String typeName = cSharpTypeName(token.encoding().primitiveType());
CSharpGenerator.java,final int offset = token.offset();,if (token != null ) final int offset = token.offset();
CSharpGenerator.java,final ByteOrder byteOrder = token.encoding().byteOrder();,if (token != null ) final ByteOrder byteOrder = token.encoding().byteOrder();
CSharpGenerator.java,final int fieldLength = token.arrayLength();,if (token != null ) final int fieldLength = token.arrayLength();
CSharpGenerator.java,final String javaTypeName = cSharpTypeName(token.encoding().primitiveType());,if (cSharpTypeName(token != null ) final String javaTypeName = cSharpTypeName(token.encoding().primitiveType());
CSharpGenerator.java,final String blockLengthType = cSharpTypeName(ir.headerStructure().blockLengthType());,if (cSharpTypeName(ir != null ) final String blockLengthType = cSharpTypeName(ir.headerStructure().blockLengthType());
CSharpGenerator.java,final String templateIdType = cSharpTypeName(ir.headerStructure().templateIdType());,if (cSharpTypeName(ir != null ) final String templateIdType = cSharpTypeName(ir.headerStructure().templateIdType());
CSharpGenerator.java,final String schemaIdType = cSharpTypeName(ir.headerStructure().schemaIdType());,if (cSharpTypeName(ir != null ) final String schemaIdType = cSharpTypeName(ir.headerStructure().schemaIdType());
CSharpGenerator.java,final String schemaVersionType = cSharpTypeName(ir.headerStructure().schemaVersionType());,if (cSharpTypeName(ir != null ) final String schemaVersionType = cSharpTypeName(ir.headerStructure().schemaVersionType());
CSharpGenerator.java,final String propertyName = signalToken.name();,if (signalToken != null ) final String propertyName = signalToken.name();
CSharpGenerator.java,final Encoding encoding = token.encoding();,if (token != null ) final Encoding encoding = token.encoding();
CSharpGenerator.java,final String enumName = formatClassName(token.name());,if (formatClassName(token != null ) final String enumName = formatClassName(token.name());
CSharpGenerator.java,final String enumUnderlyingType = cSharpTypeName(token.encoding().primitiveType());,if (cSharpTypeName(token != null ) final String enumUnderlyingType = cSharpTypeName(token.encoding().primitiveType());
CSharpGenerator.java,final int offset = token.offset();,if (token != null ) final int offset = token.offset();
CSharpGenerator.java,final ByteOrder byteOrder = token.encoding().byteOrder();,if (token != null ) final ByteOrder byteOrder = token.encoding().byteOrder();
CSharpGenerator.java,final String bitSetName = formatClassName(token.name());,if (formatClassName(token != null ) final String bitSetName = formatClassName(token.name());
CSharpGenerator.java,final int offset = token.offset();,if (token != null ) final int offset = token.offset();
CSharpGenerator.java,final ByteOrder byteOrder = token.encoding().byteOrder();,if (token != null ) final ByteOrder byteOrder = token.encoding().byteOrder();
CSharpGenerator.java,final String typeName = cSharpTypeName(token.encoding().primitiveType());,if (cSharpTypeName(token != null ) final String typeName = cSharpTypeName(token.encoding().primitiveType());
CSharpGenerator.java,final String compositeName = CSharpUtil.formatClassName(token.name());,if (CSharpUtil != null ) final String compositeName = CSharpUtil.formatClassName(token.name());
CSharpGenerator.java,final int offset = token.offset();,if (token != null ) final int offset = token.offset();
PythonGenerator.java,final String className = formatClassName(msgToken.name());,if (formatClassName(msgToken != null ) final String className = formatClassName(msgToken.name());
PythonGenerator.java,final String groupName = groupToken.name();,if (groupToken != null ) final String groupName = groupToken.name();
PythonGenerator.java,final int blockLength = tokens.get(index).encodedLength();,if (tokens != null ) final int blockLength = tokens.get(index).encodedLength();
PythonGenerator.java,final String propertyName = toUpperFirstChar(token.name());,if (toUpperFirstChar(token != null ) final String propertyName = toUpperFirstChar(token.name());
PythonGenerator.java,final int sizeOfLengthField = lengthToken.encodedLength();,if (lengthToken != null ) final int sizeOfLengthField = lengthToken.encodedLength();
PythonGenerator.java,final String choiceName = token.name();,if (token != null ) final String choiceName = token.name();
PythonGenerator.java,final Encoding encoding = encodingToken.encoding();,if (encodingToken != null ) final Encoding encoding = encodingToken.encoding();
PythonGenerator.java,final int arrayLength = token.arrayLength();,if (token != null ) final int arrayLength = token.arrayLength();
PythonGenerator.java,final PrimitiveType primitiveType = token.encoding().primitiveType();,if (token != null ) final PrimitiveType primitiveType = token.encoding().primitiveType();
PythonGenerator.java,final int offset = token.offset();,if (token != null ) final int offset = token.offset();
PythonGenerator.java,final int offset = token.offset();,if (token != null ) final int offset = token.offset();
PythonGenerator.java,final String propertyName = formatPropertyName(signalToken.name());,if (formatPropertyName(signalToken != null ) final String propertyName = formatPropertyName(signalToken.name());
PythonGenerator.java,final Encoding encoding = token.encoding();,if (token != null ) final Encoding encoding = token.encoding();
PythonGenerator.java,final String enumName = token.name();,if (token != null ) final String enumName = token.name();
PythonGenerator.java,final int offset = token.offset();,if (token != null ) final int offset = token.offset();
PythonGenerator.java,final String bitsetName = formatClassName(token.name());,if (formatClassName(token != null ) final String bitsetName = formatClassName(token.name());
PythonGenerator.java,final int offset = token.offset();,if (token != null ) final int offset = token.offset();
PythonGenerator.java,final String compositeName = formatClassName(token.name());,if (formatClassName(token != null ) final String compositeName = formatClassName(token.name());
PythonGenerator.java,final int offset = token.offset();,if (token != null ) final int offset = token.offset();
DirectBufferTest.java,final DirectBuffer dstBuffer = new DirectBuffer(testBuff.slice());,if (DirectBuffer(testBuff != null ) final DirectBuffer dstBuffer = new DirectBuffer(testBuff.slice());
PythonGenerator.java,final String enumName = formatClassName(encodingToken.name());,if (formatClassName(encodingToken != null ) final String enumName = formatClassName(encodingToken.name());
OtfExample.java,bufferOffset += headerDecoder.size();,if (headerDecoder != null ) bufferOffset += headerDecoder.size();
IrDecoder.java,size = channel.size();,if (channel != null ) size = channel.size();
IrDecoder.java,size = buffer.limit();,if (buffer != null ) size = buffer.limit();
IrEncoder.java,channel = new FileOutputStream(fileName).getChannel();,if (FileOutputStream(fileName) != null ) channel = new FileOutputStream(fileName).getChannel();
JsonPrinter.java,bufferOffset += headerDecoder.size();,if (headerDecoder != null ) bufferOffset += headerDecoder.size();
CarBenchmark.java,final OptionalExtras extras = car.extras();,if (car != null ) final OptionalExtras extras = car.extras();
CarBenchmark.java,final Engine engine = car.engine();,if (car != null ) final Engine engine = car.engine();
JavaGenerator.java,final String choiceName = token.name();,if (token != null ) final String choiceName = token.name();
JavaGenerator.java,final Encoding encoding = token.encoding();,if (token != null ) final Encoding encoding = token.encoding();
JavaGenerator.java,final String typePrefix = encoding.primitiveType().primitiveName();,if (encoding != null ) final String typePrefix = encoding.primitiveType().primitiveName();
JavaGenerator.java,final String choiceBitPosition = encoding.constValue().toString();,if (encoding != null ) final String choiceBitPosition = encoding.constValue().toString();
IrDecoder.java,irId = frameCodec.irId();,if (frameCodec != null ) irId = frameCodec.irId();
IrDecoder.java,irVersion = frameCodec.schemaVersion();,if (frameCodec != null ) irVersion = frameCodec.schemaVersion();
IrDecoder.java,offset += frameCodec.size();,if (frameCodec != null ) offset += frameCodec.size();
IrDecoder.java,final PrimitiveType type = mapPrimitiveType(tokenCodec.primitiveType());,if (mapPrimitiveType(tokenCodec != null ) final PrimitiveType type = mapPrimitiveType(tokenCodec.primitiveType());
IrDecoder.java,offset += tokenCodec.size();,if (tokenCodec != null ) offset += tokenCodec.size();
Cpp98Generator.java,final int blockLength = tokens.get(index).size();,if (tokens != null ) final int blockLength = tokens.get(index).size();
Cpp98Generator.java,final int sizeOfLengthField = lengthToken.size();,if (lengthToken != null ) final int sizeOfLengthField = lengthToken.size();
CSharpGenerator.java,final int blockLength = tokens.get(index).size();,if (tokens != null ) final int blockLength = tokens.get(index).size();
CSharpGenerator.java,final int sizeOfLengthField = lengthToken.size();,if (lengthToken != null ) final int sizeOfLengthField = lengthToken.size();
JavaGenerator.java,final int blockLength = tokens.get(index).size();,if (tokens != null ) final int blockLength = tokens.get(index).size();
JavaGenerator.java,final int blockLength = tokens.get(index).size();,if (tokens != null ) final int blockLength = tokens.get(index).size();
JavaGenerator.java,final int sizeOfLengthField = lengthToken.size();,if (lengthToken != null ) final int sizeOfLengthField = lengthToken.size();
JavaGenerator.java,final int sizeOfLengthField = lengthToken.size();,if (lengthToken != null ) final int sizeOfLengthField = lengthToken.size();
JavaGenerator.java,final String propertyName = formatPropertyName(signalToken.name());,if (formatPropertyName(signalToken != null ) final String propertyName = formatPropertyName(signalToken.name());
PythonGenerator.java,final int blockLength = tokens.get(index).size();,if (tokens != null ) final int blockLength = tokens.get(index).size();
PythonGenerator.java,final int sizeOfLengthField = lengthToken.size();,if (lengthToken != null ) final int sizeOfLengthField = lengthToken.size();
OtfMessageDecoder.java,bufferIndex += dimensionTypeComposite.size();,if (dimensionTypeComposite != null ) bufferIndex += dimensionTypeComposite.size();
CompositeType.java,offset += edt.size();,if (edt != null ) offset += edt.size();
IrGenerator.java,offset += edt.size();,if (edt != null ) offset += edt.size();
Message.java,final int size = field.type().size();,if (field != null ) final int size = field.type().size();
Message.java,final int fieldSize = field.type().size();,if (field != null ) final int fieldSize = field.type().size();
JsonPrinterTest.java,bufferOffset += CAR.size();,if (CAR != null ) bufferOffset += CAR.size();
JavaGenerator.java,final String blockLengthType = javaTypeName(ir.headerStructure().blockLengthType());,if (javaTypeName(ir != null ) final String blockLengthType = javaTypeName(ir.headerStructure().blockLengthType());
JavaGenerator.java,final String templateIdType = javaTypeName(ir.headerStructure().templateIdType());,if (javaTypeName(ir != null ) final String templateIdType = javaTypeName(ir.headerStructure().templateIdType());
JavaGenerator.java,final String schemaIdType = javaTypeName(ir.headerStructure().schemaIdType());,if (javaTypeName(ir != null ) final String schemaIdType = javaTypeName(ir.headerStructure().schemaIdType());
JavaGenerator.java,final String schemaVersionType = javaTypeName(ir.headerStructure().schemaVersionType());,if (javaTypeName(ir != null ) final String schemaVersionType = javaTypeName(ir.headerStructure().schemaVersionType());
JavaGenerator.java,final String lengthJavaType = javaTypeName(lengthEncoding.primitiveType());,if (javaTypeName(lengthEncoding != null ) final String lengthJavaType = javaTypeName(lengthEncoding.primitiveType());
ExampleUsingGeneratedStub.java,final ReadOnlyOptionalExtras extras = car.extras();,if (car != null ) final ReadOnlyOptionalExtras extras = car.extras();
ExampleUsingGeneratedStub.java,final ReadOnlyEngine engine = car.engine();,if (car != null ) final ReadOnlyEngine engine = car.engine();
JavaGenerator.java,final String className = formatClassName(msgToken.name());,if (formatClassName(msgToken != null ) final String className = formatClassName(msgToken.name());
JavaGenerator.java,final String typeName = formatClassName(encodingToken.name());,if (formatClassName(encodingToken != null ) final String typeName = formatClassName(encodingToken.name());
JavaGeneratorTest.java,final Object decoder = compileReadOnlyCar().newInstance();,if (compileReadOnlyCar() != null ) final Object decoder = compileReadOnlyCar().newInstance();
ExampleUsingGeneratedStub.java,final OptionalExtras extras = car.extras();,if (car != null ) final OptionalExtras extras = car.extras();
ExampleUsingGeneratedStub.java,final Engine engine = car.engine();,if (car != null ) final Engine engine = car.engine();
JavaGeneratorTest.java,"final Object encoder = wrapForEncode(buffer, car.newInstance());","if (car != null ) final Object encoder = wrapForEncode(buffer, car.newInstance());"
JavaGeneratorTest.java,final Object msgFlyweight = clazz.newInstance();,if (clazz != null ) final Object msgFlyweight = clazz.newInstance();
JavaGenerator.java,final String choiceName = token.name();,if (token != null ) final String choiceName = token.name();
JavaGenerator.java,final Encoding encoding = token.encoding();,if (token != null ) final Encoding encoding = token.encoding();
JavaGenerator.java,final String typePrefix = encoding.primitiveType().primitiveName();,if (encoding != null ) final String typePrefix = encoding.primitiveType().primitiveName();
JavaGenerator.java,final String choiceBitPosition = encoding.constValue().toString();,if (encoding != null ) final String choiceBitPosition = encoding.constValue().toString();
JavaGenerator.java,final String compositeName = formatClassName(encodingToken.name());,if (formatClassName(encodingToken != null ) final String compositeName = formatClassName(encodingToken.name());
JavaGenerator.java,final String bitSetName = formatClassName(token.name());,if (formatClassName(token != null ) final String bitSetName = formatClassName(token.name());
JavaGenerator.java,final String compositeName = formatClassName(token.name());,if (formatClassName(token != null ) final String compositeName = formatClassName(token.name());
JavaGeneratorTest.java,final Object decoder = compileReadOnlyCar().newInstance();,if (compileReadOnlyCar() != null ) final Object decoder = compileReadOnlyCar().newInstance();
JavaGeneratorTest.java,final Object writer = writerClass.newInstance();,if (writerClass != null ) final Object writer = writerClass.newInstance();
JavaGeneratorTest.java,final Object reader = readerClass.newInstance();,if (readerClass != null ) final Object reader = readerClass.newInstance();
JavaGenerator.java,final String javaEncodingType = javaTypeName(token.encoding().primitiveType());,if (javaTypeName(token != null ) final String javaEncodingType = javaTypeName(token.encoding().primitiveType());
JavaGenerator.java,final int typeSize = encoding.primitiveType().size();,if (encoding != null ) final int typeSize = encoding.primitiveType().size();
JavaGenerator.java,final int typeSize = encoding.primitiveType().size();,if (encoding != null ) final int typeSize = encoding.primitiveType().size();
JavaGenerator.java,final String className = formatClassName(msgToken.name());,if (formatClassName(msgToken != null ) final String className = formatClassName(msgToken.name());
JavaGenerator.java,final ByteOrder byteOrder = lengthEncoding.byteOrder();,if (lengthEncoding != null ) final ByteOrder byteOrder = lengthEncoding.byteOrder();
JavaGenerator.java,final ByteOrder byteOrder = encoding.byteOrder();,if (encoding != null ) final ByteOrder byteOrder = encoding.byteOrder();
JavaGenerator.java,final ByteOrder byteOrder = encoding.byteOrder();,if (encoding != null ) final ByteOrder byteOrder = encoding.byteOrder();
JavaGenerator.java,final int arrayLength = token.arrayLength();,if (token != null ) final int arrayLength = token.arrayLength();
JavaGenerator.java,final ByteOrder byteOrder = encoding.byteOrder();,if (encoding != null ) final ByteOrder byteOrder = encoding.byteOrder();
JavaGenerator.java,final ByteOrder byteOrder = encoding.byteOrder();,if (encoding != null ) final ByteOrder byteOrder = encoding.byteOrder();
JavaGenerator.java,final String propertyName = formatPropertyName(signalToken.name());,if (formatPropertyName(signalToken != null ) final String propertyName = formatPropertyName(signalToken.name());
JavaGenerator.java,final ByteOrder byteOrder = encoding.byteOrder();,if (encoding != null ) final ByteOrder byteOrder = encoding.byteOrder();
JavaGenerator.java,final String enumName = token.name();,if (token != null ) final String enumName = token.name();
CSharpGenerator.java,String enumPrimitiveType = cSharpTypeName(enumToken.encoding().primitiveType());,if (cSharpTypeName(enumToken != null ) String enumPrimitiveType = cSharpTypeName(enumToken.encoding().primitiveType());
CSharpGenerator.java,String enumPrimitiveType = cSharpTypeName(enumToken.encoding().primitiveType());,if (cSharpTypeName(enumToken != null ) String enumPrimitiveType = cSharpTypeName(enumToken.encoding().primitiveType());
Message.java,int size = field.type().size();,if (field != null ) int size = field.type().size();
EncodedIrTest.java,ByteBuffer readBuffer = ByteBuffer.allocateDirect(buffer.remaining());,if (ByteBuffer != null ) ByteBuffer readBuffer = ByteBuffer.allocateDirect(buffer.remaining());
EncodedIrTest.java,Ir decodedIr = irDecoder.decode();,if (irDecoder != null ) Ir decodedIr = irDecoder.decode();
EncodedIrTest.java,Ir decodedIr = irDecoder.decode();,if (irDecoder != null ) Ir decodedIr = irDecoder.decode();
JsonPrinter.java,final OtfHeaderDecoder headerDecoder = new OtfHeaderDecoder(ir.headerStructure());,if (OtfHeaderDecoder(ir != null ) final OtfHeaderDecoder headerDecoder = new OtfHeaderDecoder(ir.headerStructure());
Cpp98Generator.java,final Integer sizeOfLengthField = Integer.valueOf(lengthToken.size());,if (Integer != null ) final Integer sizeOfLengthField = Integer.valueOf(lengthToken.size());
Cpp98Generator.java,final Integer offset = Integer.valueOf(token.offset());,if (Integer != null ) final Integer offset = Integer.valueOf(token.offset());
Cpp98Generator.java,final Integer offset = Integer.valueOf(token.offset());,if (Integer != null ) final Integer offset = Integer.valueOf(token.offset());
Cpp98Generator.java,final Integer offset = Integer.valueOf(token.offset());,if (Integer != null ) final Integer offset = Integer.valueOf(token.offset());
Cpp98Generator.java,final Integer offset = Integer.valueOf(token.offset());,if (Integer != null ) final Integer offset = Integer.valueOf(token.offset());
Cpp98Generator.java,final Integer offset = Integer.valueOf(token.offset());,if (Integer != null ) final Integer offset = Integer.valueOf(token.offset());
CSharpGenerator.java,final Integer sizeOfLengthField = Integer.valueOf(lengthToken.size());,if (Integer != null ) final Integer sizeOfLengthField = Integer.valueOf(lengthToken.size());
CSharpGenerator.java,final String lengthCsharpType = cSharpTypeName(lengthEncoding.primitiveType());,if (cSharpTypeName(lengthEncoding != null ) final String lengthCsharpType = cSharpTypeName(lengthEncoding.primitiveType());
CSharpGenerator.java,final Integer offset = Integer.valueOf(token.offset());,if (Integer != null ) final Integer offset = Integer.valueOf(token.offset());
CSharpGenerator.java,final Integer offset = Integer.valueOf(token.offset());,if (Integer != null ) final Integer offset = Integer.valueOf(token.offset());
CSharpGenerator.java,final Integer fieldLength = Integer.valueOf(token.arrayLength());,if (Integer != null ) final Integer fieldLength = Integer.valueOf(token.arrayLength());
CSharpGenerator.java,final Integer offset = Integer.valueOf(token.offset());,if (Integer != null ) final Integer offset = Integer.valueOf(token.offset());
CSharpGenerator.java,final Integer offset = Integer.valueOf(token.offset());,if (Integer != null ) final Integer offset = Integer.valueOf(token.offset());
CSharpGenerator.java,final Integer offset = Integer.valueOf(token.offset());,if (Integer != null ) final Integer offset = Integer.valueOf(token.offset());
JavaGenerator.java,final Integer sizeOfLengthField = Integer.valueOf(lengthToken.size());,if (Integer != null ) final Integer sizeOfLengthField = Integer.valueOf(lengthToken.size());
JavaGenerator.java,final Integer offset = Integer.valueOf(token.offset());,if (Integer != null ) final Integer offset = Integer.valueOf(token.offset());
JavaGenerator.java,final Integer offset = Integer.valueOf(token.offset());,if (Integer != null ) final Integer offset = Integer.valueOf(token.offset());
JavaGenerator.java,final Integer fieldLength = Integer.valueOf(token.arrayLength());,if (Integer != null ) final Integer fieldLength = Integer.valueOf(token.arrayLength());
JavaGenerator.java,final Integer offset = Integer.valueOf(token.offset());,if (Integer != null ) final Integer offset = Integer.valueOf(token.offset());
JavaGenerator.java,final Integer offset = Integer.valueOf(token.offset());,if (Integer != null ) final Integer offset = Integer.valueOf(token.offset());
JavaGenerator.java,final Integer offset = Integer.valueOf(token.offset());,if (Integer != null ) final Integer offset = Integer.valueOf(token.offset());
PythonGenerator.java,final Integer sizeOfLengthField = Integer.valueOf(lengthToken.size());,if (Integer != null ) final Integer sizeOfLengthField = Integer.valueOf(lengthToken.size());
PythonGenerator.java,final Integer offset = Integer.valueOf(token.offset());,if (Integer != null ) final Integer offset = Integer.valueOf(token.offset());
PythonGenerator.java,final Integer offset = Integer.valueOf(token.offset());,if (Integer != null ) final Integer offset = Integer.valueOf(token.offset());
PythonGenerator.java,final Integer offset = Integer.valueOf(token.offset());,if (Integer != null ) final Integer offset = Integer.valueOf(token.offset());
PythonGenerator.java,final Integer offset = Integer.valueOf(token.offset());,if (Integer != null ) final Integer offset = Integer.valueOf(token.offset());
PythonGenerator.java,final Integer offset = Integer.valueOf(token.offset());,if (Integer != null ) final Integer offset = Integer.valueOf(token.offset());
CompilerUtil.java,final JavaCompiler compiler = ToolProvider.getSystemJavaCompiler();,if (ToolProvider != null ) final JavaCompiler compiler = ToolProvider.getSystemJavaCompiler();
CompilerUtil.java,final JavaCompiler compiler = ToolProvider.getSystemJavaCompiler();,if (ToolProvider != null ) final JavaCompiler compiler = ToolProvider.getSystemJavaCompiler();
CompilerUtil.java,final String fqClassName = entry.getKey();,if (entry != null ) final String fqClassName = entry.getKey();
DirectBuffer.java,byteArray = buffer.array();,if (buffer != null ) byteArray = buffer.array();
DirectBuffer.java,capacity = buffer.capacity();,if (buffer != null ) capacity = buffer.capacity();
DirectBuffer.java,duplicate = byteBuffer.duplicate();,if (byteBuffer != null ) duplicate = byteBuffer.duplicate();
DirectBuffer.java,final int dstOffset = dstBuffer.position();,if (dstBuffer != null ) final int dstOffset = dstBuffer.position();
DirectBuffer.java,dstByteArray = dstBuffer.array();,if (dstBuffer != null ) dstByteArray = dstBuffer.array();
DirectBuffer.java,final int srcOffset = srcBuffer.position();,if (srcBuffer != null ) final int srcOffset = srcBuffer.position();
DirectBuffer.java,srcByteArray = srcBuffer.array();,if (srcBuffer != null ) srcByteArray = srcBuffer.array();
DirectBufferTest.java,final DirectBuffer dstBuffer = new DirectBuffer(testBuff.slice());,if (DirectBuffer(testBuff != null ) final DirectBuffer dstBuffer = new DirectBuffer(testBuff.slice());
MethodValuesSerializer.java,final Class clazz = object.getClass();,if (object != null ) final Class clazz = object.getClass();
MethodValuesSerializer.java,Class clazz = object.getClass();,if (object != null ) Class clazz = object.getClass();
Cpp98Generator.java,final PrimitiveType primitiveType = token.encoding().primitiveType();,if (token != null ) final PrimitiveType primitiveType = token.encoding().primitiveType();
JavaGenerator.java,final String groupName = groupToken.name();,if (groupToken != null ) final String groupName = groupToken.name();
ValidationUtil.java,String id = string.toString();,if (string != null ) String id = string.toString();
Unsafe.java,ClassLoader calling = VMStack.getCallingClassLoader();,if (VMStack != null ) ClassLoader calling = VMStack.getCallingClassLoader();
DirectBuffer.java,final int dstBufferPosition = dstBuffer.position();,if (dstBuffer != null ) final int dstBufferPosition = dstBuffer.position();
DirectBuffer.java,final int srcBufferPosition = srcBuffer.position();,if (srcBuffer != null ) final int srcBufferPosition = srcBuffer.position();
DirectBuffer.java,final int dstBufferPosition = dstBuffer.position();,if (dstBuffer != null ) final int dstBufferPosition = dstBuffer.position();
DirectBuffer.java,final int srcBufferPosition = srcBuffer.position();,if (srcBuffer != null ) final int srcBufferPosition = srcBuffer.position();
DirectBuffer.java,dstOffset = dstBuffer.position();,if (dstBuffer != null ) dstOffset = dstBuffer.position();
DirectBuffer.java,theDstBuffer = dstBuffer.array();,if (dstBuffer != null ) theDstBuffer = dstBuffer.array();
DirectBuffer.java,dstOffset = dstBuffer.arrayOffset() + dstBuffer.position();,if (dstBuffer != null ) dstOffset = dstBuffer.arrayOffset() + dstBuffer.position();
DirectBuffer.java,srcOffset = srcBuffer.position();,if (srcBuffer != null ) srcOffset = srcBuffer.position();
DirectBuffer.java,theSrcBuffer = srcBuffer.array();,if (srcBuffer != null ) theSrcBuffer = srcBuffer.array();
DirectBuffer.java,srcOffset = srcBuffer.arrayOffset() + srcBuffer.position();,if (srcBuffer != null ) srcOffset = srcBuffer.arrayOffset() + srcBuffer.position();
SbeTool.java,final DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();,if (DocumentBuilderFactory != null ) final DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
SbeTool.java,ParserOptions.Builder optionsBuilder = ParserOptions.builder();,if (ParserOptions != null ) ParserOptions.Builder optionsBuilder = ParserOptions.builder();
SbeTool.java,ParserOptions options = optionsBuilder.build();,if (optionsBuilder != null ) ParserOptions options = optionsBuilder.build();
CompositeTypeTest.java,XPath xPath = XPathFactory.newInstance().newXPath();,if (XPathFactory != null ) XPath xPath = XPathFactory.newInstance().newXPath();
EncodedDataTypeTest.java,XPath xPath = XPathFactory.newInstance().newXPath();,if (XPathFactory != null ) XPath xPath = XPathFactory.newInstance().newXPath();
OffsetFileTest.java,List<Field> fields = msg.fields();,if (msg != null ) List<Field> fields = msg.fields();
SetTypeTest.java,XPath xPath = XPathFactory.newInstance().newXPath();,if (XPathFactory != null ) XPath xPath = XPathFactory.newInstance().newXPath();
JavaGenerator.java,final String propertyName = toUpperFirstChar(token.name());,if (toUpperFirstChar(token != null ) final String propertyName = toUpperFirstChar(token.name());
JavaGenerator.java,final Integer sizeOfLengthField = Integer.valueOf(lengthToken.size());,if (Integer != null ) final Integer sizeOfLengthField = Integer.valueOf(lengthToken.size());
JavaGenerator.java,final Encoding lengthEncoding = lengthToken.encoding();,if (lengthToken != null ) final Encoding lengthEncoding = lengthToken.encoding();
JavaGenerator.java,final String lengthJavaType = javaTypeName(lengthEncoding.primitiveType());,if (javaTypeName(lengthEncoding != null ) final String lengthJavaType = javaTypeName(lengthEncoding.primitiveType());
JavaGenerator.java,final String lengthTypePrefix = lengthEncoding.primitiveType().primitiveName();,if (lengthEncoding != null ) final String lengthTypePrefix = lengthEncoding.primitiveType().primitiveName();
JavaGenerator.java,final ByteOrder byteOrder = lengthEncoding.byteOrder();,if (lengthEncoding != null ) final ByteOrder byteOrder = lengthEncoding.byteOrder();
JavaGenerator.java,final ByteOrder byteOrder = token.encoding().byteOrder();,if (token != null ) final ByteOrder byteOrder = token.encoding().byteOrder();
JavaGenerator.java,final ByteOrder byteOrder = token.encoding().byteOrder();,if (token != null ) final ByteOrder byteOrder = token.encoding().byteOrder();
JavaGenerator.java,final String javaTypeName = javaTypeName(token.encoding().primitiveType());,if (javaTypeName(token != null ) final String javaTypeName = javaTypeName(token.encoding().primitiveType());
JavaGenerator.java,final ByteOrder byteOrder = token.encoding().byteOrder();,if (token != null ) final ByteOrder byteOrder = token.encoding().byteOrder();
JavaGenerator.java,final String javaTypeName = javaTypeName(token.encoding().primitiveType());,if (javaTypeName(token != null ) final String javaTypeName = javaTypeName(token.encoding().primitiveType());
JavaGenerator.java,final ByteOrder byteOrder = token.encoding().byteOrder();,if (token != null ) final ByteOrder byteOrder = token.encoding().byteOrder();
JavaGenerator.java,final String javaTypeName = javaTypeName(token.encoding().primitiveType());,if (javaTypeName(token != null ) final String javaTypeName = javaTypeName(token.encoding().primitiveType());
JavaGenerator.java,final ByteOrder byteOrder = token.encoding().byteOrder();,if (token != null ) final ByteOrder byteOrder = token.encoding().byteOrder();
DirectBufferTest.java,public ExpectedException exceptionRule = ExpectedException.none();,if (ExpectedException != null ) public ExpectedException exceptionRule = ExpectedException.none();
Cpp11Generator.java,final String className = formatClassName(msgToken.name());,if (formatClassName(msgToken != null ) final String className = formatClassName(msgToken.name());
Cpp11Generator.java,final String groupName = groupToken.name();,if (groupToken != null ) final String groupName = groupToken.name();
Cpp11Generator.java,final String propertyName = toUpperFirstChar(token.name());,if (toUpperFirstChar(token != null ) final String propertyName = toUpperFirstChar(token.name());
Cpp11Generator.java,final Integer sizeOfLengthField = Integer.valueOf(lengthToken.size());,if (Integer != null ) final Integer sizeOfLengthField = Integer.valueOf(lengthToken.size());
Cpp11Generator.java,final String choiceName = token.name();,if (token != null ) final String choiceName = token.name();
Cpp11Generator.java,final Encoding encoding = encodingToken.encoding();,if (encodingToken != null ) final Encoding encoding = encodingToken.encoding();
Cpp11Generator.java,final String enumName = formatClassName(encodingToken.name());,if (formatClassName(encodingToken != null ) final String enumName = formatClassName(encodingToken.name());
Cpp11Generator.java,final int arrayLength = token.arrayLength();,if (token != null ) final int arrayLength = token.arrayLength();
Cpp11Generator.java,final PrimitiveType primitiveType = token.encoding().primitiveType();,if (token != null ) final PrimitiveType primitiveType = token.encoding().primitiveType();
Cpp11Generator.java,final Integer offset = Integer.valueOf(token.offset());,if (Integer != null ) final Integer offset = Integer.valueOf(token.offset());
Cpp11Generator.java,final Integer offset = Integer.valueOf(token.offset());,if (Integer != null ) final Integer offset = Integer.valueOf(token.offset());
Cpp11Generator.java,final String propertyName = formatPropertyName(signalToken.name());,if (formatPropertyName(signalToken != null ) final String propertyName = formatPropertyName(signalToken.name());
Cpp11Generator.java,final Encoding encoding = token.encoding();,if (token != null ) final Encoding encoding = token.encoding();
Cpp11Generator.java,final String enumName = token.name();,if (token != null ) final String enumName = token.name();
Cpp11Generator.java,final Integer offset = Integer.valueOf(token.offset());,if (Integer != null ) final Integer offset = Integer.valueOf(token.offset());
Cpp11Generator.java,final String bitsetName = formatClassName(token.name());,if (formatClassName(token != null ) final String bitsetName = formatClassName(token.name());
Cpp11Generator.java,final Integer offset = Integer.valueOf(token.offset());,if (Integer != null ) final Integer offset = Integer.valueOf(token.offset());
Cpp11Generator.java,final String compositeName = formatClassName(token.name());,if (formatClassName(token != null ) final String compositeName = formatClassName(token.name());
Cpp11Generator.java,final Integer offset = Integer.valueOf(token.offset());,if (Integer != null ) final Integer offset = Integer.valueOf(token.offset());
Cpp98Generator.java,final String compositeName = token.name();,if (token != null ) final String compositeName = token.name();
MarketDataBenchmark.java,decodeBuffer = out.toByteArray();,if (out != null ) decodeBuffer = out.toByteArray();
CarBenchmark.java,decodeBuffer = out.toByteArray();,if (out != null ) decodeBuffer = out.toByteArray();
DirectBuffer.java,final ByteBuffer duplicate = byteBuffer.duplicate();,if (byteBuffer != null ) final ByteBuffer duplicate = byteBuffer.duplicate();
DirectBuffer.java,byteArray = byteBuffer.array();,if (byteBuffer != null ) byteArray = byteBuffer.array();
DirectBuffer.java,capacity = byteBuffer.capacity();,if (byteBuffer != null ) capacity = byteBuffer.capacity();
CSharpGenerator.java,final String enumName = token.name();,if (token != null ) final String enumName = token.name();
CSharpGenerator.java,final String templateVersionType = cSharpTypeName(ir.headerStructure().schemaVersionType());,if (cSharpTypeName(ir != null ) final String templateVersionType = cSharpTypeName(ir.headerStructure().schemaVersionType());
IrDecoder.java,irId = frameCodec.sbeIrId();,if (frameCodec != null ) irId = frameCodec.sbeIrId();
CSharpGenerator.java,final String templateVersionType = cSharpTypeName(ir.headerStructure().templateVersionType());,if (cSharpTypeName(ir != null ) final String templateVersionType = cSharpTypeName(ir.headerStructure().templateVersionType());
JavaGenerator.java,final String templateVersionType = javaTypeName(ir.headerStructure().templateVersionType());,if (javaTypeName(ir != null ) final String templateVersionType = javaTypeName(ir.headerStructure().templateVersionType());
HeaderStructure.java,templateVersionType = token.encoding().primitiveType();,if (token != null ) templateVersionType = token.encoding().primitiveType();
HeaderStructure.java,blockLengthType = token.encoding().primitiveType();,if (token != null ) blockLengthType = token.encoding().primitiveType();
OtfHeaderDecoder.java,templateVersionOffset = token.offset();,if (token != null ) templateVersionOffset = token.offset();
OtfHeaderDecoder.java,templateVersionType = token.encoding().primitiveType();,if (token != null ) templateVersionType = token.encoding().primitiveType();
OtfHeaderDecoder.java,templateVersionByteOrder = token.encoding().byteOrder();,if (token != null ) templateVersionByteOrder = token.encoding().byteOrder();
OtfHeaderDecoder.java,blockLengthOffset = token.offset();,if (token != null ) blockLengthOffset = token.offset();
OtfHeaderDecoder.java,blockLengthType = token.encoding().primitiveType();,if (token != null ) blockLengthType = token.encoding().primitiveType();
OtfHeaderDecoder.java,blockLengthByteOrder = token.encoding().byteOrder();,if (token != null ) blockLengthByteOrder = token.encoding().byteOrder();
EncodedIrTest.java,IntermediateRepresentation decodedIr = decoder.decode();,if (decoder != null ) IntermediateRepresentation decodedIr = decoder.decode();
EncodedIrTest.java,IntermediateRepresentation decodedIr = irDecoder.decode();,if (irDecoder != null ) IntermediateRepresentation decodedIr = irDecoder.decode();
EncodedIrTest.java,IntermediateRepresentation decodedIr = irDecoder.decode();,if (irDecoder != null ) IntermediateRepresentation decodedIr = irDecoder.decode();
EncodedIrTest.java,final IntermediateRepresentation decodedIr = irDecoder.decode();,if (irDecoder != null ) final IntermediateRepresentation decodedIr = irDecoder.decode();
EncodedIrTest.java,IntermediateRepresentation decodedIr = irDecoder.decode();,if (irDecoder != null ) IntermediateRepresentation decodedIr = irDecoder.decode();
CSharpGenerator.java,final PrimitiveValue nullVal = encoding.applicableNullVal();,if (encoding != null ) final PrimitiveValue nullVal = encoding.applicableNullVal();
CSharpGenerator.java,final String lengthJavaType = cSharpTypeName(lengthEncoding.primitiveType());,if (cSharpTypeName(lengthEncoding != null ) final String lengthJavaType = cSharpTypeName(lengthEncoding.primitiveType());
OtfGroupSizeDecoder.java,size = compositeToken.size();,if (compositeToken != null ) size = compositeToken.size();
OtfGroupSizeDecoder.java,groupHeaderTokenCount = tokens.size();,if (tokens != null ) groupHeaderTokenCount = tokens.size();
OtfGroupSizeDecoder.java,blockLengthOffset = token.offset();,if (token != null ) blockLengthOffset = token.offset();
OtfGroupSizeDecoder.java,blockLengthType = token.encoding().primitiveType();,if (token != null ) blockLengthType = token.encoding().primitiveType();
OtfGroupSizeDecoder.java,blockLengthByteOrder = token.encoding().byteOrder();,if (token != null ) blockLengthByteOrder = token.encoding().byteOrder();
OtfGroupSizeDecoder.java,numInGroupOffset = token.offset();,if (token != null ) numInGroupOffset = token.offset();
OtfGroupSizeDecoder.java,numInGroupType = token.encoding().primitiveType();,if (token != null ) numInGroupType = token.encoding().primitiveType();
OtfGroupSizeDecoder.java,numInGroupByteOrder = token.encoding().byteOrder();,if (token != null ) numInGroupByteOrder = token.encoding().byteOrder();
OtfMessageDecoder.java,bufferIndex += groupSizeDecoder.size();,if (groupSizeDecoder != null ) bufferIndex += groupSizeDecoder.size();
OtfMessageDecoder.java,bufferIndex += varDataDecoder.size();,if (varDataDecoder != null ) bufferIndex += varDataDecoder.size();
OtfVarDataDecoder.java,tokenCount = tokens.size();,if (tokens != null ) tokenCount = tokens.size();
OtfVarDataDecoder.java,lengthOffset = token.offset();,if (token != null ) lengthOffset = token.offset();
OtfVarDataDecoder.java,lengthType = token.encoding().primitiveType();,if (token != null ) lengthType = token.encoding().primitiveType();
OtfVarDataDecoder.java,lengthByteOrder = token.encoding().byteOrder();,if (token != null ) lengthByteOrder = token.encoding().byteOrder();
OtfExample.java,final OtfHeaderDecoder headerDecoder = new OtfHeaderDecoder(ir.headerStructure());,if (OtfHeaderDecoder(ir != null ) final OtfHeaderDecoder headerDecoder = new OtfHeaderDecoder(ir.headerStructure());
SbeTool.java,ir = new Decoder(fileName).decode();,if (Decoder(fileName) != null ) ir = new Decoder(fileName).decode();
EncodedIrTest.java,IntermediateRepresentation decodedIr = decoder.decode();,if (decoder != null ) IntermediateRepresentation decodedIr = decoder.decode();
EncodedIrTest.java,IntermediateRepresentation decodedIr = decoder.decode();,if (decoder != null ) IntermediateRepresentation decodedIr = decoder.decode();
EncodedIrTest.java,final IntermediateRepresentation decodedIr = decoder.decode();,if (decoder != null ) final IntermediateRepresentation decodedIr = decoder.decode();
EncodedIrTest.java,IntermediateRepresentation decodedIr = decoder.decode();,if (decoder != null ) IntermediateRepresentation decodedIr = decoder.decode();
OtfExample.java,final OtfHeaderDecoder otfHeaderDecoder = new OtfHeaderDecoder(ir.headerStructure());,if (OtfHeaderDecoder(ir != null ) final OtfHeaderDecoder otfHeaderDecoder = new OtfHeaderDecoder(ir.headerStructure());
OtfExample.java,bufferOffset += otfHeaderDecoder.size();,if (otfHeaderDecoder != null ) bufferOffset += otfHeaderDecoder.size();
OtfDecoder.java,final String fieldName = fieldToken.name();,if (fieldToken != null ) final String fieldName = fieldToken.name();
CSharpGenerator.java,final String blockLengthType = cSharpTypeName(ir.messageHeader().blockLengthType());,if (cSharpTypeName(ir != null ) final String blockLengthType = cSharpTypeName(ir.messageHeader().blockLengthType());
CSharpGenerator.java,final String templateIdType = cSharpTypeName(ir.messageHeader().templateIdType());,if (cSharpTypeName(ir != null ) final String templateIdType = cSharpTypeName(ir.messageHeader().templateIdType());
CSharpGenerator.java,final String templateVersionType = cSharpTypeName(ir.messageHeader().templateVersionType());,if (cSharpTypeName(ir != null ) final String templateVersionType = cSharpTypeName(ir.messageHeader().templateVersionType());
JavaGenerator.java,final String blockLengthType = javaTypeName(ir.messageHeader().blockLengthType());,if (javaTypeName(ir != null ) final String blockLengthType = javaTypeName(ir.messageHeader().blockLengthType());
JavaGenerator.java,final String templateIdType = javaTypeName(ir.messageHeader().templateIdType());,if (javaTypeName(ir != null ) final String templateIdType = javaTypeName(ir.messageHeader().templateIdType());
JavaGenerator.java,final String templateVersionType = javaTypeName(ir.messageHeader().templateVersionType());,if (javaTypeName(ir != null ) final String templateVersionType = javaTypeName(ir.messageHeader().templateVersionType());
Decoder.java,irVersion = serializedFrame.schemaVersion();,if (serializedFrame != null ) irVersion = serializedFrame.schemaVersion();
Decoder.java,offset += serializedFrame.size();,if (serializedFrame != null ) offset += serializedFrame.size();
Decoder.java,final PrimitiveType type = IrUtil.primitiveType(serializedToken.primitiveType());,if (IrUtil != null ) final PrimitiveType type = IrUtil.primitiveType(serializedToken.primitiveType());
Decoder.java,offset += serializedToken.size();,if (serializedToken != null ) offset += serializedToken.size();
Encoder.java,final PrimitiveType type = token.encoding().primitiveType();,if (token != null ) final PrimitiveType type = token.encoding().primitiveType();
Decoder.java,final PrimitiveType type = IrCodecUtils.primitiveType(serializedToken.primitiveType());,if (IrCodecUtils != null ) final PrimitiveType type = IrCodecUtils.primitiveType(serializedToken.primitiveType());
Encoder.java,final String charEncodingCharEncoding = SerializedToken.characterEncodingCharacterEncoding();,if (SerializedToken != null ) final String charEncodingCharEncoding = SerializedToken.characterEncodingCharacterEncoding();
Encoder.java,final String charEncoding = token.encoding().characterEncoding();,if (token != null ) final String charEncoding = token.encoding().characterEncoding();
SbeTool.java,ir = new Deserializer(fileName).deserialize();,if (Deserializer(fileName) != null ) ir = new Deserializer(fileName).deserialize();
Decoder.java,final PrimitiveType type = SerializationUtils.primitiveType(serializedToken.primitiveType());,if (SerializationUtils != null ) final PrimitiveType type = SerializationUtils.primitiveType(serializedToken.primitiveType());
EncodedIrTest.java,IntermediateRepresentation deserIr = deserializer.deserialize();,if (deserializer != null ) IntermediateRepresentation deserIr = deserializer.deserialize();
EncodedIrTest.java,IntermediateRepresentation deserIr = deserializer.deserialize();,if (deserializer != null ) IntermediateRepresentation deserIr = deserializer.deserialize();
EncodedIrTest.java,IntermediateRepresentation deserIr = deserializer.deserialize();,if (deserializer != null ) IntermediateRepresentation deserIr = deserializer.deserialize();
EncodedIrTest.java,final IntermediateRepresentation deserIr = deserializer.deserialize();,if (deserializer != null ) final IntermediateRepresentation deserIr = deserializer.deserialize();
EncodedIrTest.java,IntermediateRepresentation deserIr = deserializer.deserialize();,if (deserializer != null ) IntermediateRepresentation deserIr = deserializer.deserialize();
CompositeType.java,XPath xPath = XPathFactory.newInstance().newXPath();,if (XPathFactory != null ) XPath xPath = XPathFactory.newInstance().newXPath();
JavaGeneratorTest.java,final FixedFlyweight flyweight = (FixedFlyweight)clazz.newInstance();,if ((FixedFlyweight)clazz != null ) final FixedFlyweight flyweight = (FixedFlyweight)clazz.newInstance();
JavaGeneratorTest.java,final FixedFlyweight flyweight = (FixedFlyweight)clazz.newInstance();,if ((FixedFlyweight)clazz != null ) final FixedFlyweight flyweight = (FixedFlyweight)clazz.newInstance();
JavaGeneratorTest.java,final FixedFlyweight flyweight = (FixedFlyweight)clazz.newInstance();,if ((FixedFlyweight)clazz != null ) final FixedFlyweight flyweight = (FixedFlyweight)clazz.newInstance();
JavaGeneratorTest.java,final MessageFlyweight messageFlyweight = (MessageFlyweight)clazz.newInstance();,if ((MessageFlyweight)clazz != null ) final MessageFlyweight messageFlyweight = (MessageFlyweight)clazz.newInstance();
JavaGeneratorTest.java,final int initialPosition = messageFlyweight.position();,if (messageFlyweight != null ) final int initialPosition = messageFlyweight.position();
Cpp99Generator.java,literal = value.toString();,if (value != null ) literal = value.toString();
FluentDomStyleExample.java,String clientOrderId = newOrderSingle.clOrderId();,if (newOrderSingle != null ) String clientOrderId = newOrderSingle.clOrderId();
FluentDomStyleExample.java,long symbolId = newOrderSingle.symbolId();,if (newOrderSingle != null ) long symbolId = newOrderSingle.symbolId();
FluentDomStyleExample.java,Side side = newOrderSingle.side();,if (newOrderSingle != null ) Side side = newOrderSingle.side();
FluentDomStyleExample.java,long orderQty = newOrderSingle.orderQty();,if (newOrderSingle != null ) long orderQty = newOrderSingle.orderQty();
FluentDomStyleExample.java,double price = newOrderSingle.price();,if (newOrderSingle != null ) double price = newOrderSingle.price();
FluentDomStyleExample.java,long transactTime = newOrderSingle.transactTime();,if (newOrderSingle != null ) long transactTime = newOrderSingle.transactTime();
FluentDomStyleExample.java,long timestamp = System.currentTimeMillis();,if (System != null ) long timestamp = System.currentTimeMillis();
FluentDomStyleExample.java,String quoteId = massQuote.quoteId();,if (massQuote != null ) String quoteId = massQuote.quoteId();
FluentDomStyleExample.java,CtiCode ctiCode = massQuote.ctiCode();,if (massQuote != null ) CtiCode ctiCode = massQuote.ctiCode();
FluentDomStyleExample.java,String underLyingSecurity = quoteSet.underlyingSecurity();,if (quoteSet != null ) String underLyingSecurity = quoteSet.underlyingSecurity();
FluentDomStyleExample.java,long id = quoteEntry.id();,if (quoteEntry != null ) long id = quoteEntry.id();
FluentDomStyleExample.java,String symbol = quoteEntry.symbol();,if (quoteEntry != null ) String symbol = quoteEntry.symbol();
FluentDomStyleExample.java,SecurityType securityType = quoteEntry.securityType();,if (quoteEntry != null ) SecurityType securityType = quoteEntry.securityType();
FluentDomStyleExample.java,long timestamp = quoteEntry.transactTime();,if (quoteEntry != null ) long timestamp = quoteEntry.transactTime();
FluentDomStyleExample.java,double bidPrice = quoteEntry.bidPx();,if (quoteEntry != null ) double bidPrice = quoteEntry.bidPx();
FluentDomStyleExample.java,long bidSize = quoteEntry.bidSize();,if (quoteEntry != null ) long bidSize = quoteEntry.bidSize();
FluentDomStyleExample.java,double offerPrice = quoteEntry.offerPrice();,if (quoteEntry != null ) double offerPrice = quoteEntry.offerPrice();
FluentDomStyleExample.java,long offerSize = quoteEntry.offerSize();,if (quoteEntry != null ) long offerSize = quoteEntry.offerSize();
FlyweightStyleExample.java,String clientOrderId = newOrderSingle.clOrderId();,if (newOrderSingle != null ) String clientOrderId = newOrderSingle.clOrderId();
FlyweightStyleExample.java,long symbolId = newOrderSingle.symbolId();,if (newOrderSingle != null ) long symbolId = newOrderSingle.symbolId();
FlyweightStyleExample.java,Side side = newOrderSingle.side();,if (newOrderSingle != null ) Side side = newOrderSingle.side();
FlyweightStyleExample.java,long orderQty = newOrderSingle.orderQty();,if (newOrderSingle != null ) long orderQty = newOrderSingle.orderQty();
FlyweightStyleExample.java,double price = newOrderSingle.price();,if (newOrderSingle != null ) double price = newOrderSingle.price();
FlyweightStyleExample.java,long transactTime = newOrderSingle.transactTime();,if (newOrderSingle != null ) long transactTime = newOrderSingle.transactTime();
FlyweightStyleExample.java,final long timestamp = System.currentTimeMillis();,if (System != null ) final long timestamp = System.currentTimeMillis();
FlyweightStyleExample.java,String quoteId = massQuote.quoteId();,if (massQuote != null ) String quoteId = massQuote.quoteId();
FlyweightStyleExample.java,CtiCode ctiCode = massQuote.ctiCode();,if (massQuote != null ) CtiCode ctiCode = massQuote.ctiCode();
FlyweightStyleExample.java,String underlyingSecurity = quoteSet.underlyingSecurity();,if (quoteSet != null ) String underlyingSecurity = quoteSet.underlyingSecurity();
FlyweightStyleExample.java,long id = quoteEntry.id();,if (quoteEntry != null ) long id = quoteEntry.id();
FlyweightStyleExample.java,String symbol = quoteEntry.symbol();,if (quoteEntry != null ) String symbol = quoteEntry.symbol();
FlyweightStyleExample.java,SecurityType securityType = quoteEntry.securityType();,if (quoteEntry != null ) SecurityType securityType = quoteEntry.securityType();
FlyweightStyleExample.java,long timestamp = quoteEntry.transactTime();,if (quoteEntry != null ) long timestamp = quoteEntry.transactTime();
FlyweightStyleExample.java,double bidPrice = quoteEntry.bidPx();,if (quoteEntry != null ) double bidPrice = quoteEntry.bidPx();
FlyweightStyleExample.java,long bidSize = quoteEntry.bidSize();,if (quoteEntry != null ) long bidSize = quoteEntry.bidSize();
FlyweightStyleExample.java,double offerPrice = quoteEntry.offerPrice();,if (quoteEntry != null ) double offerPrice = quoteEntry.offerPrice();
FlyweightStyleExample.java,long offerSize = quoteEntry.offerSize();,if (quoteEntry != null ) long offerSize = quoteEntry.offerSize();
Cpp99Generator.java,final Encoding encoding = encodingToken.encoding();,if (encodingToken != null ) final Encoding encoding = encodingToken.encoding();
SbeTool.java,ir = new Deserializer(fileName).deserialize();,if (Deserializer(fileName) != null ) ir = new Deserializer(fileName).deserialize();
CSharpGenerator.java,final String lengthType = cSharpTypeName(lengthToken.encoding().primitiveType());,if (cSharpTypeName(lengthToken != null ) final String lengthType = cSharpTypeName(lengthToken.encoding().primitiveType());
CSharpGenerator.java,final String typeName = cSharpTypeName(token.encoding().primitiveType());,if (cSharpTypeName(token != null ) final String typeName = cSharpTypeName(token.encoding().primitiveType());
CSharpGenerator.java,final String typeName = cSharpTypeName(token.encoding().primitiveType());,if (cSharpTypeName(token != null ) final String typeName = cSharpTypeName(token.encoding().primitiveType());
CSharpGenerator.java,final String className = CSharpUtil.formatClassName(msgToken.name());,if (CSharpUtil != null ) final String className = CSharpUtil.formatClassName(msgToken.name());
CSharpGenerator.java,final String propertyName = CSharpUtil.toUpperFirstChar(token.name());,if (CSharpUtil != null ) final String propertyName = CSharpUtil.toUpperFirstChar(token.name());
CSharpGenerator.java,final Encoding lengthEncoding = lengthToken.encoding();,if (lengthToken != null ) final Encoding lengthEncoding = lengthToken.encoding();
CSharpGenerator.java,final String lengthJavaType = cSharpTypeName(lengthEncoding.primitiveType());,if (cSharpTypeName(lengthEncoding != null ) final String lengthJavaType = cSharpTypeName(lengthEncoding.primitiveType());
CSharpGenerator.java,final String lengthTypePrefix = lengthEncoding.primitiveType().primitiveName();,if (lengthEncoding != null ) final String lengthTypePrefix = lengthEncoding.primitiveType().primitiveName();
CSharpGenerator.java,final ByteOrder byteOrder = lengthEncoding.byteOrder();,if (lengthEncoding != null ) final ByteOrder byteOrder = lengthEncoding.byteOrder();
CSharpGenerator.java,final ByteOrder byteOrder = token.encoding().byteOrder();,if (token != null ) final ByteOrder byteOrder = token.encoding().byteOrder();
CSharpGenerator.java,final String bitSetName = CSharpUtil.formatClassName(token.name());,if (CSharpUtil != null ) final String bitSetName = CSharpUtil.formatClassName(token.name());
CSharpGenerator.java,literal = value.toString();,if (value != null ) literal = value.toString();
CSharpGenerator.java,final String javaTypeName = cSharpTypeName(token.encoding().primitiveType());,if (cSharpTypeName(token != null ) final String javaTypeName = cSharpTypeName(token.encoding().primitiveType());
CSharpGenerator.java,final ByteOrder byteOrder = token.encoding().byteOrder();,if (token != null ) final ByteOrder byteOrder = token.encoding().byteOrder();
CSharpGenerator.java,final String javaTypeName = cSharpTypeName(token.encoding().primitiveType());,if (cSharpTypeName(token != null ) final String javaTypeName = cSharpTypeName(token.encoding().primitiveType());
CSharpGenerator.java,final ByteOrder byteOrder = token.encoding().byteOrder();,if (token != null ) final ByteOrder byteOrder = token.encoding().byteOrder();
CSharpGenerator.java,final String choiceName = token.name();,if (token != null ) final String choiceName = token.name();
CSharpGenerator.java,final ByteOrder byteOrder = token.encoding().byteOrder();,if (token != null ) final ByteOrder byteOrder = token.encoding().byteOrder();
Cpp99Generator.java,final String propertyName = signalToken.name();,if (signalToken != null ) final String propertyName = signalToken.name();
JavaGenerator.java,literal = value.toString();,if (value != null ) literal = value.toString();
BasicXmlIrGenerationTest.java,List<Token> tokens = ir.header();,if (ir != null ) List<Token> tokens = ir.header();
SerializedIrTest.java,IntermediateRepresentation deserIr = deserializer.deserialize();,if (deserializer != null ) IntermediateRepresentation deserIr = deserializer.deserialize();
JavaGenerator.java,final String propertyName = signalToken.name();,if (signalToken != null ) final String propertyName = signalToken.name();
JavaGenerator.java,final String compositeName = token.name();,if (token != null ) final String compositeName = token.name();
EnumType.java,XPath xPath = XPathFactory.newInstance().newXPath();,if (XPathFactory != null ) XPath xPath = XPathFactory.newInstance().newXPath();
SetType.java,final XPath xPath = XPathFactory.newInstance().newXPath();,if (XPathFactory != null ) final XPath xPath = XPathFactory.newInstance().newXPath();
EnumType.java,XPath xPath = XPathFactory.newInstance().newXPath();,if (XPathFactory != null ) XPath xPath = XPathFactory.newInstance().newXPath();
SetType.java,final XPath xPath = XPathFactory.newInstance().newXPath();,if (XPathFactory != null ) final XPath xPath = XPathFactory.newInstance().newXPath();
IrGenerator.java,PrimitiveType encodingType = type.encodingType();,if (type != null ) PrimitiveType encodingType = type.encodingType();
IrGenerator.java,PrimitiveType encodingType = type.encodingType();,if (type != null ) PrimitiveType encodingType = type.encodingType();
SbeExample.java,FileChannel channel = new FileOutputStream(encodingFilename).getChannel();,if (FileOutputStream(encodingFilename) != null ) FileChannel channel = new FileOutputStream(encodingFilename).getChannel();
JavaGenerator.java,final String propertyName = toUpperFirstChar(token.name());,if (toUpperFirstChar(token != null ) final String propertyName = toUpperFirstChar(token.name());
JavaGenerator.java,final String javaTypeName = javaTypeName(token.encoding().primitiveType());,if (javaTypeName(token != null ) final String javaTypeName = javaTypeName(token.encoding().primitiveType());
JavaGenerator.java,final String bitsetName = formatClassName(token.name());,if (formatClassName(token != null ) final String bitsetName = formatClassName(token.name());
Serializer.java,totalSize += serializeTokenList(ir.header());,if (serializeTokenList(ir != null ) totalSize += serializeTokenList(ir.header());
JavaGenerator.java,final String lengthJavaType = javaTypeName(lengthToken.encoding().primitiveType());,if (javaTypeName(lengthToken != null ) final String lengthJavaType = javaTypeName(lengthToken.encoding().primitiveType());
JavaGenerator.java,final ByteOrder byteOrder = lengthToken.encoding().byteOrder();,if (lengthToken != null ) final ByteOrder byteOrder = lengthToken.encoding().byteOrder();
JavaGenerator.java,final String castType = javaTypeName(token.encoding().primitiveType());,if (javaTypeName(token != null ) final String castType = javaTypeName(token.encoding().primitiveType());
Deserializer.java,Token.Builder builder = new Token.Builder();,if (Token != null ) Token.Builder builder = new Token.Builder();
Deserializer.java,Encoding.Builder encBuilder = new Encoding.Builder();,if (Encoding != null ) Encoding.Builder encBuilder = new Encoding.Builder();
CarBenchmark.java,final Engine engine = state.car.engine();,if (state != null ) final Engine engine = state.car.engine();
JavaGenerator.java,final String groupName = tokens.get(index).name();,if (tokens != null ) final String groupName = tokens.get(index).name();
FlyweightStyleExample.java,String quoteId = massQuote.getQuoteId();,if (massQuote != null ) String quoteId = massQuote.getQuoteId();
FlyweightStyleExample.java,CtiCode ctiCode = massQuote.getCtiCode();,if (massQuote != null ) CtiCode ctiCode = massQuote.getCtiCode();
FlyweightStyleExample.java,MassQuote.QuoteSet quoteSet = massQuote.quoteSet();,if (massQuote != null ) MassQuote.QuoteSet quoteSet = massQuote.quoteSet();
Cpp99Generator.java,final String groupName = tokens.get(index).name();,if (tokens != null ) final String groupName = tokens.get(index).name();
SbeExample.java,final Engine engine = car.engine();,if (car != null ) final Engine engine = car.engine();
Cpp99Generator.java,final String lengthJavaType = javaTypeName(lengthToken.encoding().primitiveType());,if (javaTypeName(lengthToken != null ) final String lengthJavaType = javaTypeName(lengthToken.encoding().primitiveType());
Cpp99Generator.java,final String javaEncodingType = javaTypeName(token.encoding().primitiveType());,if (javaTypeName(token != null ) final String javaEncodingType = javaTypeName(token.encoding().primitiveType());
Cpp99Generator.java,final String javaTypeName = javaTypeName(token.encoding().primitiveType());,if (javaTypeName(token != null ) final String javaTypeName = javaTypeName(token.encoding().primitiveType());
Cpp99Generator.java,final String javaTypeName = javaTypeName(token.encoding().primitiveType());,if (javaTypeName(token != null ) final String javaTypeName = javaTypeName(token.encoding().primitiveType());
Cpp99Generator.java,final String javaTypeName = javaTypeName(token.encoding().primitiveType());,if (javaTypeName(token != null ) final String javaTypeName = javaTypeName(token.encoding().primitiveType());
Cpp99Generator.java,final String castType = javaTypeName(token.encoding().primitiveType());,if (javaTypeName(token != null ) final String castType = javaTypeName(token.encoding().primitiveType());
EncodedDataType.java,final String nodeValue = node.getFirstChild().getNodeValue();,if (node != null ) final String nodeValue = node.getFirstChild().getNodeValue();
DirectBufferTest.java,final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();,if (buffer != null ) final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();
DirectBufferTest.java,final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();,if (buffer != null ) final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();
DirectBufferTest.java,final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();,if (buffer != null ) final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();
DirectBufferTest.java,final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();,if (buffer != null ) final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();
DirectBufferTest.java,final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();,if (buffer != null ) final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();
DirectBufferTest.java,final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();,if (buffer != null ) final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();
DirectBufferTest.java,final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();,if (buffer != null ) final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();
DirectBufferTest.java,final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();,if (buffer != null ) final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();
DirectBufferTest.java,final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();,if (buffer != null ) final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();
DirectBufferTest.java,final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();,if (buffer != null ) final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();
DirectBufferTest.java,final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();,if (buffer != null ) final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();
DirectBufferTest.java,final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();,if (buffer != null ) final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();
DirectBufferTest.java,final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();,if (buffer != null ) final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();
DirectBufferTest.java,final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();,if (buffer != null ) final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();
DirectBufferTest.java,final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();,if (buffer != null ) final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();
DirectBufferTest.java,final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();,if (buffer != null ) final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();
DirectBufferTest.java,final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();,if (buffer != null ) final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();
DirectBufferTest.java,final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();,if (buffer != null ) final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();
DirectBufferTest.java,final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();,if (buffer != null ) final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();
DirectBufferTest.java,final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();,if (buffer != null ) final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();
DirectBufferTest.java,final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();,if (buffer != null ) final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();
DirectBufferTest.java,final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();,if (buffer != null ) final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();
DirectBufferTest.java,final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();,if (buffer != null ) final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();
DirectBufferTest.java,final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();,if (buffer != null ) final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();
DirectBufferTest.java,final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();,if (buffer != null ) final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();
DirectBufferTest.java,final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();,if (buffer != null ) final ByteBuffer duplicateBuffer = buffer.duplicateByteBuffer();
EnumTypeTest.java,XPath xPath = XPathFactory.newInstance().newXPath();,if (XPathFactory != null ) XPath xPath = XPathFactory.newInstance().newXPath();
ErrorHandlerTest.java,XPath xPath = XPathFactory.newInstance().newXPath();,if (XPathFactory != null ) XPath xPath = XPathFactory.newInstance().newXPath();
JavaGenerator.java,final String bitsetName = token.name();,if (token != null ) final String bitsetName = token.name();
JavaGenerator.java,final Integer offset = Integer.valueOf(token.offset());,if (Integer != null ) final Integer offset = Integer.valueOf(token.offset());
FlyweightStyleExample.java,QuoteSet quoteSet = massQuote.quoteSet();,if (massQuote != null ) QuoteSet quoteSet = massQuote.quoteSet();
FlyweightStyleExample.java,QuoteEntry quoteEntry = quoteSet.quoteEntry();,if (quoteSet != null ) QuoteEntry quoteEntry = quoteSet.quoteEntry();
XmlSchemaParser.java,DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();,if (DocumentBuilderFactory != null ) DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
XmlSchemaParser.java,XPath xPath = XPathFactory.newInstance().newXPath();,if (XPathFactory != null ) XPath xPath = XPathFactory.newInstance().newXPath();
JavaGenerator.java,final String propertyName = token.name();,if (token != null ) final String propertyName = token.name();
JavaGenerator.java,final String propertyName = token.name();,if (token != null ) final String propertyName = token.name();
JavaGenerator.java,final String javaTypeName = javaTypeName(token.encoding().primitiveType());,if (javaTypeName(token != null ) final String javaTypeName = javaTypeName(token.encoding().primitiveType());
JavaGenerator.java,final String propertyName = token.name();,if (token != null ) final String propertyName = token.name();
XmlSchemaParser.java,final Node parentNode = node.getParentNode();,if (node != null ) final Node parentNode = node.getParentNode();
XmlSchemaParser.java,Node parentNode = node.getParentNode();,if (node != null ) Node parentNode = node.getParentNode();
IrGenerator.java,byteOrder = schema.getByteOrder();,if (schema != null ) byteOrder = schema.getByteOrder();
IrGenerator.java,byteOrder = schema.getByteOrder();,if (schema != null ) byteOrder = schema.getByteOrder();
IrGenerator.java,PrimitiveType encodingType = type.getEncodingType();,if (type != null ) PrimitiveType encodingType = type.getEncodingType();
IrGenerator.java,PrimitiveType encodingType = type.getEncodingType();,if (type != null ) PrimitiveType encodingType = type.getEncodingType();
SetType.java,XPath xPath = XPathFactory.newInstance().newXPath();,if (XPathFactory != null ) XPath xPath = XPathFactory.newInstance().newXPath();
IrGenerator.java,final long msgId = message.getId();,if (message != null ) final long msgId = message.getId();
IrGenerator.java,final Type type = field.getType();,if (field != null ) final Type type = field.getType();
Message.java,XPath xPath = XPathFactory.newInstance().newXPath();,if (XPathFactory != null ) XPath xPath = XPathFactory.newInstance().newXPath();
Message.java,currOffset = field.getOffset();  // reset current offset to the one requested by the field specification,if (specification != null ) currOffset = field.getOffset();  // reset current offset to the one requested by the field specification
Message.java,int calculatedSize = field.getType().size();,if (field != null ) int calculatedSize = field.getType().size();
Message.java,final int calculatedSize = field.getType().size();,if (field != null ) final int calculatedSize = field.getType().size();
OffsetFileTest.java,List<Field> fields = msg.getFields();,if (msg != null ) List<Field> fields = msg.getFields();
Message.java,int calculatedSize = field.getType().size();,if (field != null ) int calculatedSize = field.getType().size();
FlyweightStyleExample.java,String clientOrderId = newOrderSingle.getClOrderId();,if (newOrderSingle != null ) String clientOrderId = newOrderSingle.getClOrderId();
FlyweightStyleExample.java,long symbolId = newOrderSingle.getSymbolId();,if (newOrderSingle != null ) long symbolId = newOrderSingle.getSymbolId();
FlyweightStyleExample.java,Side side = newOrderSingle.getSide();,if (newOrderSingle != null ) Side side = newOrderSingle.getSide();
FlyweightStyleExample.java,long orderQty = newOrderSingle.getOrderQty();,if (newOrderSingle != null ) long orderQty = newOrderSingle.getOrderQty();
FlyweightStyleExample.java,double price = newOrderSingle.getPrice();,if (newOrderSingle != null ) double price = newOrderSingle.getPrice();
FlyweightStyleExample.java,long transactTime = newOrderSingle.getTransactTime();,if (newOrderSingle != null ) long transactTime = newOrderSingle.getTransactTime();
FlyweightStyleExample.java,QuoteSetFlyweight quoteSet = massQuote.getQuoteSet();,if (massQuote != null ) QuoteSetFlyweight quoteSet = massQuote.getQuoteSet();
FlyweightStyleExample.java,String underlyingSecurity = quoteSet.getUnderlyingSecurity();,if (quoteSet != null ) String underlyingSecurity = quoteSet.getUnderlyingSecurity();
FlyweightStyleExample.java,QuoteEntryFlyweight quoteEntry = quoteSet.getQuoteEntry();,if (quoteSet != null ) QuoteEntryFlyweight quoteEntry = quoteSet.getQuoteEntry();
FlyweightStyleExample.java,long id = quoteEntry.getId();,if (quoteEntry != null ) long id = quoteEntry.getId();
FlyweightStyleExample.java,String symbol = quoteEntry.getSymbol();,if (quoteEntry != null ) String symbol = quoteEntry.getSymbol();
FlyweightStyleExample.java,SecurityType securityType = quoteEntry.getSecurityType();,if (quoteEntry != null ) SecurityType securityType = quoteEntry.getSecurityType();
FlyweightStyleExample.java,long timestamp = quoteEntry.getTransactTime();,if (quoteEntry != null ) long timestamp = quoteEntry.getTransactTime();
FlyweightStyleExample.java,double bidPrice = quoteEntry.getBidPx();,if (quoteEntry != null ) double bidPrice = quoteEntry.getBidPx();
FlyweightStyleExample.java,long bidSize = quoteEntry.getBidSize();,if (quoteEntry != null ) long bidSize = quoteEntry.getBidSize();
FlyweightStyleExample.java,double offerPrice = quoteEntry.getOfferPrice();,if (quoteEntry != null ) double offerPrice = quoteEntry.getOfferPrice();
FlyweightStyleExample.java,long offerSize = quoteEntry.getOfferSize();,if (quoteEntry != null ) long offerSize = quoteEntry.getOfferSize();
JavaGenerator.java,final int arrayLength = token.arrayLength();,if (token != null ) final int arrayLength = token.arrayLength();
DirectBufferTest.java,final ByteBuffer duplicateBuffer = view.duplicateByteBuffer();,if (view != null ) final ByteBuffer duplicateBuffer = view.duplicateByteBuffer();
DirectBufferTest.java,final ByteBuffer duplicateBuffer = view.duplicateByteBuffer();,if (view != null ) final ByteBuffer duplicateBuffer = view.duplicateByteBuffer();
DirectBufferTest.java,final ByteBuffer duplicateBuffer = view.duplicateByteBuffer();,if (view != null ) final ByteBuffer duplicateBuffer = view.duplicateByteBuffer();
DirectBufferTest.java,final ByteBuffer duplicateBuffer = view.duplicateByteBuffer();,if (view != null ) final ByteBuffer duplicateBuffer = view.duplicateByteBuffer();
DirectBufferTest.java,final ByteBuffer duplicateBuffer = view.duplicateByteBuffer();,if (view != null ) final ByteBuffer duplicateBuffer = view.duplicateByteBuffer();
DirectBufferTest.java,final ByteBuffer duplicateBuffer = view.duplicateByteBuffer();,if (view != null ) final ByteBuffer duplicateBuffer = view.duplicateByteBuffer();
DirectBufferTest.java,final ByteBuffer duplicateBuffer = view.duplicateByteBuffer();,if (view != null ) final ByteBuffer duplicateBuffer = view.duplicateByteBuffer();
DirectBufferTest.java,final ByteBuffer duplicateBuffer = view.duplicateByteBuffer();,if (view != null ) final ByteBuffer duplicateBuffer = view.duplicateByteBuffer();
DirectBufferTest.java,final ByteBuffer duplicateBuffer = view.duplicateByteBuffer();,if (view != null ) final ByteBuffer duplicateBuffer = view.duplicateByteBuffer();
DirectBufferTest.java,final ByteBuffer duplicateBuffer = view.duplicateByteBuffer();,if (view != null ) final ByteBuffer duplicateBuffer = view.duplicateByteBuffer();
DirectBufferTest.java,final ByteBuffer duplicateBuffer = view.duplicateByteBuffer();,if (view != null ) final ByteBuffer duplicateBuffer = view.duplicateByteBuffer();
DirectBufferTest.java,final ByteBuffer duplicateBuffer = view.duplicateByteBuffer();,if (view != null ) final ByteBuffer duplicateBuffer = view.duplicateByteBuffer();
DirectBufferTest.java,final ByteBuffer duplicateBuffer = view.duplicateByteBuffer();,if (view != null ) final ByteBuffer duplicateBuffer = view.duplicateByteBuffer();
DirectBufferTest.java,final ByteBuffer duplicateBuffer = view.duplicateByteBuffer();,if (view != null ) final ByteBuffer duplicateBuffer = view.duplicateByteBuffer();
DirectBufferTest.java,final ByteBuffer duplicateBuffer = view.duplicateByteBuffer();,if (view != null ) final ByteBuffer duplicateBuffer = view.duplicateByteBuffer();
DirectBufferTest.java,final ByteBuffer duplicateBuffer = view.duplicateByteBuffer();,if (view != null ) final ByteBuffer duplicateBuffer = view.duplicateByteBuffer();
JavaGenerator.java,final String typePrefix = token.primitiveType().primitiveName();,if (token != null ) final String typePrefix = token.primitiveType().primitiveName();
JavaGenerator.java,final String javaEncodingType = javaTypeName(token.primitiveType());,if (javaTypeName(token != null ) final String javaEncodingType = javaTypeName(token.primitiveType());
JavaGenerator.java,final String javaTypeName = javaTypeName(token.primitiveType());,if (javaTypeName(token != null ) final String javaTypeName = javaTypeName(token.primitiveType());
JavaGenerator.java,final String typePrefix = token.primitiveType().primitiveName();,if (token != null ) final String typePrefix = token.primitiveType().primitiveName();
JavaGenerator.java,final String javaTypeName = javaTypeName(token.primitiveType());,if (javaTypeName(token != null ) final String javaTypeName = javaTypeName(token.primitiveType());
JavaGenerator.java,final String castType = javaTypeName(token.primitiveType());,if (javaTypeName(token != null ) final String castType = javaTypeName(token.primitiveType());
IrGenerator.java,Options.Builder optsBuilder = new Options.Builder();,if (Options != null ) Options.Builder optsBuilder = new Options.Builder();
IrGenerator.java,Options.Builder optsBuilder = new Options.Builder();,if (Options != null ) Options.Builder optsBuilder = new Options.Builder();
JavaGenerator.java,final PrimitiveValue constVal = token.options().constVal();,if (token != null ) final PrimitiveValue constVal = token.options().constVal();
FlyweightStyleExample.java,String clientOrderId = newOrderSingleFlyweight.getClOrderId();,if (newOrderSingleFlyweight != null ) String clientOrderId = newOrderSingleFlyweight.getClOrderId();
FlyweightStyleExample.java,long symbolId = newOrderSingleFlyweight.getSymbolId();,if (newOrderSingleFlyweight != null ) long symbolId = newOrderSingleFlyweight.getSymbolId();
FlyweightStyleExample.java,Side side = newOrderSingleFlyweight.getSide();,if (newOrderSingleFlyweight != null ) Side side = newOrderSingleFlyweight.getSide();
FlyweightStyleExample.java,long orderQty = newOrderSingleFlyweight.getOrderQty();,if (newOrderSingleFlyweight != null ) long orderQty = newOrderSingleFlyweight.getOrderQty();
FlyweightStyleExample.java,double price = newOrderSingleFlyweight.getPrice();,if (newOrderSingleFlyweight != null ) double price = newOrderSingleFlyweight.getPrice();
FlyweightStyleExample.java,long transactTime = newOrderSingleFlyweight.getTransactTime();,if (newOrderSingleFlyweight != null ) long transactTime = newOrderSingleFlyweight.getTransactTime();
FlyweightStyleExample.java,String quoteId = massQuoteVisitor.getQuoteId();,if (massQuoteVisitor != null ) String quoteId = massQuoteVisitor.getQuoteId();
FlyweightStyleExample.java,CtiCode ctiCode = massQuoteVisitor.getCtiCode();,if (massQuoteVisitor != null ) CtiCode ctiCode = massQuoteVisitor.getCtiCode();
FlyweightStyleExample.java,QuoteSetVisitor quoteSetVisitor = massQuoteVisitor.getQuoteSetVisitor();,if (massQuoteVisitor != null ) QuoteSetVisitor quoteSetVisitor = massQuoteVisitor.getQuoteSetVisitor();
FlyweightStyleExample.java,String underlyingSecurity = quoteSetVisitor.getUnderlyingSecurity();,if (quoteSetVisitor != null ) String underlyingSecurity = quoteSetVisitor.getUnderlyingSecurity();
FlyweightStyleExample.java,QuoteEntryVisitor quoteEntryVisitor = quoteSetVisitor.getQuoteEntryVisitor();,if (quoteSetVisitor != null ) QuoteEntryVisitor quoteEntryVisitor = quoteSetVisitor.getQuoteEntryVisitor();
FlyweightStyleExample.java,long id = quoteEntryVisitor.getId();,if (quoteEntryVisitor != null ) long id = quoteEntryVisitor.getId();
FlyweightStyleExample.java,String symbol = quoteEntryVisitor.getSymbol();,if (quoteEntryVisitor != null ) String symbol = quoteEntryVisitor.getSymbol();
FlyweightStyleExample.java,SecurityType securityType = quoteEntryVisitor.getSecurityType();,if (quoteEntryVisitor != null ) SecurityType securityType = quoteEntryVisitor.getSecurityType();
FlyweightStyleExample.java,long timestamp = quoteEntryVisitor.getTransactTime();,if (quoteEntryVisitor != null ) long timestamp = quoteEntryVisitor.getTransactTime();
FlyweightStyleExample.java,double bidPrice = quoteEntryVisitor.getBidPx();,if (quoteEntryVisitor != null ) double bidPrice = quoteEntryVisitor.getBidPx();
FlyweightStyleExample.java,long bidSize = quoteEntryVisitor.getBidSize();,if (quoteEntryVisitor != null ) long bidSize = quoteEntryVisitor.getBidSize();
FlyweightStyleExample.java,double offerPrice = quoteEntryVisitor.getOfferPrice();,if (quoteEntryVisitor != null ) double offerPrice = quoteEntryVisitor.getOfferPrice();
FlyweightStyleExample.java,long offerSize = quoteEntryVisitor.getOfferSize();,if (quoteEntryVisitor != null ) long offerSize = quoteEntryVisitor.getOfferSize();
JavaGenerator.java,final String typePrefix = token.primitiveType().primitiveName();,if (token != null ) final String typePrefix = token.primitiveType().primitiveName();
JavaGenerator.java,final Integer offset = Integer.valueOf(token.offset());,if (Integer != null ) final Integer offset = Integer.valueOf(token.offset());
JavaGenerator.java,final String javaTypeName = javaTypeName(token.primitiveType());,if (javaTypeName(token != null ) final String javaTypeName = javaTypeName(token.primitiveType());
JavaGenerator.java,final String typePrefix = token.primitiveType().primitiveName();,if (token != null ) final String typePrefix = token.primitiveType().primitiveName();
JavaGenerator.java,final String propertyName = token.name();,if (token != null ) final String propertyName = token.name();
JavaGenerator.java,final Integer offset = Integer.valueOf(token.offset());,if (Integer != null ) final Integer offset = Integer.valueOf(token.offset());
JavaGenerator.java,final PrimitiveValue constVal = token.options().constVal();,if (token != null ) final PrimitiveValue constVal = token.options().constVal();
JavaGeneratorTest.java,final DirectBufferFlyweight flyweight = (DirectBufferFlyweight)clazz.newInstance();,if ((DirectBufferFlyweight)clazz != null ) final DirectBufferFlyweight flyweight = (DirectBufferFlyweight)clazz.newInstance();
JavaGeneratorTest.java,final DirectBufferFlyweight flyweight = (DirectBufferFlyweight)clazz.newInstance();,if ((DirectBufferFlyweight)clazz != null ) final DirectBufferFlyweight flyweight = (DirectBufferFlyweight)clazz.newInstance();
ClassFileManager.java,byte[] b = jclassObject.getBytes();,if (jclassObject != null ) byte[] b = jclassObject.getBytes();
BasicXmlIrGenerationTest.java,List<Token> tokens = ir.getHeader();,if (ir != null ) List<Token> tokens = ir.getHeader();
JavaGenerator.java,final String castType = javaTypeName(token.primitiveType());,if (javaTypeName(token != null ) final String castType = javaTypeName(token.primitiveType());
JavaGenerator.java,final PrimitiveValue val = token.options().constVal();,if (token != null ) final PrimitiveValue val = token.options().constVal();
JavaGeneratorTest.java,final JavaCompiler compiler = ToolProvider.getSystemJavaCompiler();,if (ToolProvider != null ) final JavaCompiler compiler = ToolProvider.getSystemJavaCompiler();
JavaGenerator.java,final String methodTypePrefix = token.primitiveType().primitiveName();,if (token != null ) final String methodTypePrefix = token.primitiveType().primitiveName();
JavaGenerator.java,final String methodTypePrefix = token.primitiveType().primitiveName();,if (token != null ) final String methodTypePrefix = token.primitiveType().primitiveName();
JavaGenerator.java,final String javaEncodingType = javaTypeFor(token.primitiveType());,if (javaTypeFor(token != null ) final String javaEncodingType = javaTypeFor(token.primitiveType());
JavaGenerator.java,final String typeName = javaTypeFor(token.primitiveType());,if (javaTypeFor(token != null ) final String typeName = javaTypeFor(token.primitiveType());
JavaGenerator.java,final String methodPrefix = token.primitiveType().primitiveName();,if (token != null ) final String methodPrefix = token.primitiveType().primitiveName();
IrGenerator.java,CompositeType type = schema.getMessageHeader();,if (schema != null ) CompositeType type = schema.getMessageHeader();
IrGenerator.java,Settings.Builder builder = new Settings.Builder();,if (Settings != null ) Settings.Builder builder = new Settings.Builder();
IrGenerator.java,Settings.Builder builder = new Settings.Builder();,if (Settings != null ) Settings.Builder builder = new Settings.Builder();
JavaGenerator.java,final String typeName = JavaUtil.javaTypeFor(token.primitiveType());,if (JavaUtil != null ) final String typeName = JavaUtil.javaTypeFor(token.primitiveType());
IrGenerator.java,Constraints.Builder builder = new Constraints.Builder();,if (Constraints != null ) Constraints.Builder builder = new Constraints.Builder();
IrGenerator.java,Constraints.Builder builder = new Constraints.Builder();,if (Constraints != null ) Constraints.Builder builder = new Constraints.Builder();
IrGenerator.java,Metadata.Builder builder = new Metadata.Builder(field.getName());,if (Metadata != null ) Metadata.Builder builder = new Metadata.Builder(field.getName());
IrGenerator.java,offset += edt.size(); // bump offset for next type in list,if (list != null ) offset += edt.size(); // bump offset for next type in list
IrGenerator.java,Metadata.Builder builder = new Metadata.Builder(encodingType.primitiveName());,if (Metadata != null ) Metadata.Builder builder = new Metadata.Builder(encodingType.primitiveName());
IrGenerator.java,Metadata.Builder builder = new Metadata.Builder(encodingType.primitiveName());,if (Metadata != null ) Metadata.Builder builder = new Metadata.Builder(encodingType.primitiveName());
IrGenerator.java,Metadata.Builder builder = new Metadata.Builder(type.getName());,if (Metadata != null ) Metadata.Builder builder = new Metadata.Builder(type.getName());
Message.java,Field entryCountField = entryCountFieldMap.get(field.getName());,if (entryCountFieldMap != null ) Field entryCountField = entryCountFieldMap.get(field.getName());
Message.java,Type type = typeByNameMap.get(field.getDimensionType());,if (typeByNameMap != null ) Type type = typeByNameMap.get(field.getDimensionType());
Message.java,entryCountField = entryCountFieldBuilder.build();,if (entryCountFieldBuilder != null ) entryCountField = entryCountFieldBuilder.build();
CompositeTypeTest.java,XPath xPath = XPathFactory.newInstance().newXPath();,if (XPathFactory != null ) XPath xPath = XPathFactory.newInstance().newXPath();
EncodedDataTypeTest.java,XPath xPath = XPathFactory.newInstance().newXPath();,if (XPathFactory != null ) XPath xPath = XPathFactory.newInstance().newXPath();
EnumTypeTest.java,XPath xPath = XPathFactory.newInstance().newXPath();,if (XPathFactory != null ) XPath xPath = XPathFactory.newInstance().newXPath();
ErrorHandlerTest.java,XPath xPath = XPathFactory.newInstance().newXPath();,if (XPathFactory != null ) XPath xPath = XPathFactory.newInstance().newXPath();
SetTypeTest.java,XPath xPath = XPathFactory.newInstance().newXPath();,if (XPathFactory != null ) XPath xPath = XPathFactory.newInstance().newXPath();
IrGenerator.java,Metadata.Builder builder = new Metadata.Builder(msg.getName());,if (Metadata != null ) Metadata.Builder builder = new Metadata.Builder(msg.getName());
IrGenerator.java,Metadata.Builder builder = new Metadata.Builder(type.getName());,if (Metadata != null ) Metadata.Builder builder = new Metadata.Builder(type.getName());
IrGenerator.java,Metadata.Builder builder = new Metadata.Builder(value.getName());,if (Metadata != null ) Metadata.Builder builder = new Metadata.Builder(value.getName());
IrGenerator.java,Metadata.Builder builder = new Metadata.Builder(value.getName());,if (Metadata != null ) Metadata.Builder builder = new Metadata.Builder(value.getName());
Message.java,Field field = builder.build();,if (builder != null ) Field field = builder.build();
Message.java,Field field = builder.build();,if (builder != null ) Field field = builder.build();
Message.java,Field field = builder.build();,if (builder != null ) Field field = builder.build();
FluentDomStyleExample.java,final long timestamp = System.currentTimeMillis();,if (System != null ) final long timestamp = System.currentTimeMillis();
FluentDomStyleExample.java,final String quoteId = massQuote.quoteId();,if (massQuote != null ) final String quoteId = massQuote.quoteId();
FluentDomStyleExample.java,final CtiCode ctiCode = massQuote.ctiCode();,if (massQuote != null ) final CtiCode ctiCode = massQuote.ctiCode();
FluentDomStyleExample.java,final String underLyingSecurity = quoteSet.underlyingSecurity();,if (quoteSet != null ) final String underLyingSecurity = quoteSet.underlyingSecurity();
FluentDomStyleExample.java,final long id = quoteEntry.id();,if (quoteEntry != null ) final long id = quoteEntry.id();
FluentDomStyleExample.java,final String symbol = quoteEntry.symbol();,if (quoteEntry != null ) final String symbol = quoteEntry.symbol();
FluentDomStyleExample.java,final SecurityType securityType = quoteEntry.securityType();,if (quoteEntry != null ) final SecurityType securityType = quoteEntry.securityType();
FluentDomStyleExample.java,final long timestamp = quoteEntry.transactTime();,if (quoteEntry != null ) final long timestamp = quoteEntry.transactTime();
FluentDomStyleExample.java,final double bidPrice = quoteEntry.bidPx();,if (quoteEntry != null ) final double bidPrice = quoteEntry.bidPx();
FluentDomStyleExample.java,final long bidSize = quoteEntry.bidSize();,if (quoteEntry != null ) final long bidSize = quoteEntry.bidSize();
FluentDomStyleExample.java,final double offerPrice = quoteEntry.offerPrice();,if (quoteEntry != null ) final double offerPrice = quoteEntry.offerPrice();
FluentDomStyleExample.java,final long offerSize = quoteEntry.offerSize();,if (quoteEntry != null ) final long offerSize = quoteEntry.offerSize();
Message.java,currOffset = field.getOffset();  // reset current offset to the one requested by the field specifcation,if (specifcation != null ) currOffset = field.getOffset();  // reset current offset to the one requested by the field specifcation
Message.java,"int calculatedBlockLength = calculateAndValidateOffsets(node, field.getGroupFieldList());","if (field != null ) int calculatedBlockLength = calculateAndValidateOffsets(node, field.getGroupFieldList());"
Message.java,Field entryCountField = entryCountFieldMap.get(field.getName());,if (entryCountFieldMap != null ) Field entryCountField = entryCountFieldMap.get(field.getName());
Message.java,int calculatedBlockLength = calculateAndValidateOffsets(field.getGroupFieldList());,if (calculateAndValidateOffsets(field != null ) int calculatedBlockLength = calculateAndValidateOffsets(field.getGroupFieldList());
IrGenerator.java,currentOffset += encodingType.size();,if (encodingType != null ) currentOffset += encodingType.size();
IrGenerator.java,currentOffset += encodingType.size();,if (encodingType != null ) currentOffset += encodingType.size();
IrGenerator.java,currentOffset += type.size();,if (type != null ) currentOffset += type.size();
IrGenerator.java,xRefIrId = field.getEntryCountField().getIrId();,if (field != null ) xRefIrId = field.getEntryCountField().getIrId();
IrGenerator.java,xRefIrId = field.getLengthField().getIrId();,if (field != null ) xRefIrId = field.getLengthField().getIrId();
IrGenerator.java,xRefIrId = field.getGroupField().getIrId();,if (field != null ) xRefIrId = field.getGroupField().getIrId();
IrGenerator.java,xRefIrId = field.getDataField().getIrId();,if (field != null ) xRefIrId = field.getDataField().getIrId();
IrGenerator.java,nullValue = type.getNullValue();,if (type != null ) nullValue = type.getNullValue();
IrGenerator.java,nullValue = encodingType.nullValue();,if (encodingType != null ) nullValue = encodingType.nullValue();
IrGenerator.java,Type type = schema.getMessageHeader();,if (schema != null ) Type type = schema.getMessageHeader();
Message.java,Field entryCountField = entryCountFieldMap.get(f.getName());,if (entryCountFieldMap != null ) Field entryCountField = entryCountFieldMap.get(f.getName());
Message.java,Integer lengthFieldRefId = new Integer(f.getId());,if (Integer(f != null ) Integer lengthFieldRefId = new Integer(f.getId());
IrGenerator.java,String name = type.getName();,if (type != null ) String name = type.getName();
IrGenerator.java,currentOffset += type.size();,if (type != null ) currentOffset += type.size();
IrGenerator.java,currentOffset += type.size();,if (type != null ) currentOffset += type.size();
SetTypeTest.java,String name = type.getName();,if (type != null ) String name = type.getName();
SetTypeTest.java,currentOffset += type.size();,if (type != null ) currentOffset += type.size();
SetTypeTest.java,currentOffset += type.size();,if (type != null ) currentOffset += type.size();
IrGenerator.java,byteOrder = schema.getByteOrder();,if (schema != null ) byteOrder = schema.getByteOrder();
IrGenerator.java,Type type = schema.getMessageHeader();,if (schema != null ) Type type = schema.getMessageHeader();
IrGenerator.java,String name = type.getName();,if (type != null ) String name = type.getName();
IrGenerator.java,currentOffset += type.size();,if (type != null ) currentOffset += type.size();
IrGenerator.java,currentOffset += type.size();,if (type != null ) currentOffset += type.size();
IrNode.java,this.size = type.size();,if (type != null ) this.size = type.size();
EncodedDataType.java,NamedNodeMap attrs = node.getAttributes();,if (node != null ) NamedNodeMap attrs = node.getAttributes();
IRNode.java,this.size = type.size();,if (type != null ) this.size = type.size();
Type.java,NamedNodeMap attrs = node.getAttributes();,if (node != null ) NamedNodeMap attrs = node.getAttributes();
XMLSchemaParser.java,XPath xPath =  XPathFactory.newInstance().newXPath();,if (XPathFactory != null ) XPath xPath =  XPathFactory.newInstance().newXPath();
EncodedDataType.java,NamedNodeMap attrs = node.getAttributes();,if (node != null ) NamedNodeMap attrs = node.getAttributes();
Type.java,NamedNodeMap attrs = node.getAttributes();,if (node != null ) NamedNodeMap attrs = node.getAttributes();
QueueFileLoadingTest.java,File tmp = new UndeletableFile(testFile.getAbsolutePath());,if (UndeletableFile(testFile != null ) File tmp = new UndeletableFile(testFile.getAbsolutePath());
ObjectQueueTest.java,Iterator iterator = queue.iterator();,if (queue != null ) Iterator iterator = queue.iterator();
ObjectQueueTest.java,Iterator iterator = queue.iterator();,if (queue != null ) Iterator iterator = queue.iterator();
ObjectQueueTest.java,Iterator iterator = queue.iterator();,if (queue != null ) Iterator iterator = queue.iterator();
ObjectQueueTest.java,Iterator iterator = queue.iterator();,if (queue != null ) Iterator iterator = queue.iterator();
ObjectQueueTest.java,Iterator iterator = queue.iterator();,if (queue != null ) Iterator iterator = queue.iterator();
ObjectQueueTest.java,Iterator iterator = queue.iterator();,if (queue != null ) Iterator iterator = queue.iterator();
ObjectQueueTest.java,Iterator iterator = queue.iterator();,if (queue != null ) Iterator iterator = queue.iterator();
ObjectQueueTest.java,List<Pojo> peek = queue.asList();,if (queue != null ) List<Pojo> peek = queue.asList();
InMemoryObjectQueue.java,"int end = Math.min(max, entries.size());","if (entries != null ) int end = Math.min(max, entries.size());"
QueueFile.java,int b = raf.read();,if (raf != null ) int b = raf.read();
FileObjectQueueTest.java,List<String> peek = queue.asList();,if (queue != null ) List<String> peek = queue.asList();
FileObjectQueue.java,byte[] bytes = queueFile.peek();,if (queueFile != null ) byte[] bytes = queueFile.peek();
ImageUploadTaskService.java,ImageUploadTask task = queue.peek();,if (queue != null ) ImageUploadTask task = queue.peek();
TaskQueue.java,T task = delegate.peek();,if (delegate != null ) T task = delegate.peek();
QueueFileTest.java,final ExecutorService executor = Executors.newSingleThreadExecutor();,if (Executors != null ) final ExecutorService executor = Executors.newSingleThreadExecutor();
QueueFile.java,FileChannel channel = raf.getChannel();,if (raf != null ) FileChannel channel = raf.getChannel();
QueueFile.java,FileChannel channel = raf.getChannel();,if (raf != null ) FileChannel channel = raf.getChannel();
QueueFile.java,FileChannel channel = raf.getChannel();,if (raf != null ) FileChannel channel = raf.getChannel();
JavaGenerator.java,ProtoMember protoMember = field.getMember();,if (field != null ) ProtoMember protoMember = field.getMember();
JavaGenerator.java,"CodeBlock valueInitializer = fieldInitializer(field.getType(), entry.getValue());","if (entry != null ) CodeBlock valueInitializer = fieldInitializer(field.getType(), entry.getValue());"
JavaGenerator.java,TypeName returnType = typeName(field.getType());,if (typeName(field != null ) TypeName returnType = typeName(field.getType());
EnumOptions.java,result = unknownFields().hashCode();,if (unknownFields() != null ) result = unknownFields().hashCode();
EnumOptions.java,result += value.unknownFields().size();,if (value != null ) result += value.unknownFields().size();
EnumOptions.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
EnumOptions.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
EnumValueOptions.java,result = unknownFields().hashCode();,if (unknownFields() != null ) result = unknownFields().hashCode();
EnumValueOptions.java,result += value.unknownFields().size();,if (value != null ) result += value.unknownFields().size();
EnumValueOptions.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
EnumValueOptions.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
FieldOptions.java,result = unknownFields().hashCode();,if (unknownFields() != null ) result = unknownFields().hashCode();
FieldOptions.java,result += value.unknownFields().size();,if (value != null ) result += value.unknownFields().size();
FieldOptions.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
FieldOptions.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
FileOptions.java,result = unknownFields().hashCode();,if (unknownFields() != null ) result = unknownFields().hashCode();
FileOptions.java,result += value.unknownFields().size();,if (value != null ) result += value.unknownFields().size();
FileOptions.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
FileOptions.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
MessageOptions.java,result = unknownFields().hashCode();,if (unknownFields() != null ) result = unknownFields().hashCode();
MessageOptions.java,result += value.unknownFields().size();,if (value != null ) result += value.unknownFields().size();
MessageOptions.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
MessageOptions.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
MethodOptions.java,result = unknownFields().hashCode();,if (unknownFields() != null ) result = unknownFields().hashCode();
MethodOptions.java,result += value.unknownFields().size();,if (value != null ) result += value.unknownFields().size();
MethodOptions.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
MethodOptions.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
ServiceOptions.java,result = unknownFields().hashCode();,if (unknownFields() != null ) result = unknownFields().hashCode();
ServiceOptions.java,result += value.unknownFields().size();,if (value != null ) result += value.unknownFields().size();
ServiceOptions.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
ServiceOptions.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
DescriptorProto.java,result = unknownFields().hashCode();,if (unknownFields() != null ) result = unknownFields().hashCode();
DescriptorProto.java,field = Internal.newMutableList();,if (Internal != null ) field = Internal.newMutableList();
DescriptorProto.java,extension = Internal.newMutableList();,if (Internal != null ) extension = Internal.newMutableList();
DescriptorProto.java,result = unknownFields().hashCode();,if (unknownFields() != null ) result = unknownFields().hashCode();
DescriptorProto.java,result += value.unknownFields().size();,if (value != null ) result += value.unknownFields().size();
DescriptorProto.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
DescriptorProto.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
DescriptorProto.java,result = unknownFields().hashCode();,if (unknownFields() != null ) result = unknownFields().hashCode();
DescriptorProto.java,result += value.unknownFields().size();,if (value != null ) result += value.unknownFields().size();
DescriptorProto.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
DescriptorProto.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
DescriptorProto.java,result += value.unknownFields().size();,if (value != null ) result += value.unknownFields().size();
DescriptorProto.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
DescriptorProto.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
EnumDescriptorProto.java,result = unknownFields().hashCode();,if (unknownFields() != null ) result = unknownFields().hashCode();
EnumDescriptorProto.java,value = Internal.newMutableList();,if (Internal != null ) value = Internal.newMutableList();
EnumDescriptorProto.java,result = unknownFields().hashCode();,if (unknownFields() != null ) result = unknownFields().hashCode();
EnumDescriptorProto.java,result += value.unknownFields().size();,if (value != null ) result += value.unknownFields().size();
EnumDescriptorProto.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
EnumDescriptorProto.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
EnumDescriptorProto.java,result += value.unknownFields().size();,if (value != null ) result += value.unknownFields().size();
EnumDescriptorProto.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
EnumDescriptorProto.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
EnumOptions.java,result = unknownFields().hashCode();,if (unknownFields() != null ) result = unknownFields().hashCode();
EnumOptions.java,result += value.unknownFields().size();,if (value != null ) result += value.unknownFields().size();
EnumOptions.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
EnumOptions.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
EnumValueDescriptorProto.java,result = unknownFields().hashCode();,if (unknownFields() != null ) result = unknownFields().hashCode();
EnumValueDescriptorProto.java,result += value.unknownFields().size();,if (value != null ) result += value.unknownFields().size();
EnumValueDescriptorProto.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
EnumValueDescriptorProto.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
EnumValueOptions.java,result = unknownFields().hashCode();,if (unknownFields() != null ) result = unknownFields().hashCode();
EnumValueOptions.java,result += value.unknownFields().size();,if (value != null ) result += value.unknownFields().size();
EnumValueOptions.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
EnumValueOptions.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
ExtensionRangeOptions.java,result = unknownFields().hashCode();,if (unknownFields() != null ) result = unknownFields().hashCode();
ExtensionRangeOptions.java,result += value.unknownFields().size();,if (value != null ) result += value.unknownFields().size();
ExtensionRangeOptions.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
ExtensionRangeOptions.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
FieldDescriptorProto.java,result = unknownFields().hashCode();,if (unknownFields() != null ) result = unknownFields().hashCode();
FieldDescriptorProto.java,result += value.unknownFields().size();,if (value != null ) result += value.unknownFields().size();
FieldDescriptorProto.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
FieldDescriptorProto.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
FieldOptions.java,result = unknownFields().hashCode();,if (unknownFields() != null ) result = unknownFields().hashCode();
FieldOptions.java,result += value.unknownFields().size();,if (value != null ) result += value.unknownFields().size();
FieldOptions.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
FieldOptions.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
FileDescriptorProto.java,result = unknownFields().hashCode();,if (unknownFields() != null ) result = unknownFields().hashCode();
FileDescriptorProto.java,dependency = Internal.newMutableList();,if (Internal != null ) dependency = Internal.newMutableList();
FileDescriptorProto.java,service = Internal.newMutableList();,if (Internal != null ) service = Internal.newMutableList();
FileDescriptorProto.java,extension = Internal.newMutableList();,if (Internal != null ) extension = Internal.newMutableList();
FileDescriptorProto.java,result += value.unknownFields().size();,if (value != null ) result += value.unknownFields().size();
FileDescriptorProto.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
FileDescriptorProto.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
FileDescriptorSet.java,result = unknownFields().hashCode();,if (unknownFields() != null ) result = unknownFields().hashCode();
FileDescriptorSet.java,file = Internal.newMutableList();,if (Internal != null ) file = Internal.newMutableList();
FileDescriptorSet.java,result += value.unknownFields().size();,if (value != null ) result += value.unknownFields().size();
FileDescriptorSet.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
FileDescriptorSet.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
FileOptions.java,result = unknownFields().hashCode();,if (unknownFields() != null ) result = unknownFields().hashCode();
FileOptions.java,result += value.unknownFields().size();,if (value != null ) result += value.unknownFields().size();
FileOptions.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
FileOptions.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
GeneratedCodeInfo.java,result = unknownFields().hashCode();,if (unknownFields() != null ) result = unknownFields().hashCode();
GeneratedCodeInfo.java,annotation = Internal.newMutableList();,if (Internal != null ) annotation = Internal.newMutableList();
GeneratedCodeInfo.java,result = unknownFields().hashCode();,if (unknownFields() != null ) result = unknownFields().hashCode();
GeneratedCodeInfo.java,path = Internal.newMutableList();,if (Internal != null ) path = Internal.newMutableList();
GeneratedCodeInfo.java,result += value.unknownFields().size();,if (value != null ) result += value.unknownFields().size();
GeneratedCodeInfo.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
GeneratedCodeInfo.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
GeneratedCodeInfo.java,result += value.unknownFields().size();,if (value != null ) result += value.unknownFields().size();
GeneratedCodeInfo.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
GeneratedCodeInfo.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
MessageOptions.java,result = unknownFields().hashCode();,if (unknownFields() != null ) result = unknownFields().hashCode();
MessageOptions.java,result += value.unknownFields().size();,if (value != null ) result += value.unknownFields().size();
MessageOptions.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
MessageOptions.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
MethodDescriptorProto.java,result = unknownFields().hashCode();,if (unknownFields() != null ) result = unknownFields().hashCode();
MethodDescriptorProto.java,result += value.unknownFields().size();,if (value != null ) result += value.unknownFields().size();
MethodDescriptorProto.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
MethodDescriptorProto.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
MethodOptions.java,result = unknownFields().hashCode();,if (unknownFields() != null ) result = unknownFields().hashCode();
MethodOptions.java,result += value.unknownFields().size();,if (value != null ) result += value.unknownFields().size();
MethodOptions.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
MethodOptions.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
OneofDescriptorProto.java,result = unknownFields().hashCode();,if (unknownFields() != null ) result = unknownFields().hashCode();
OneofDescriptorProto.java,result += value.unknownFields().size();,if (value != null ) result += value.unknownFields().size();
OneofDescriptorProto.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
OneofDescriptorProto.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
OneofOptions.java,result = unknownFields().hashCode();,if (unknownFields() != null ) result = unknownFields().hashCode();
OneofOptions.java,result += value.unknownFields().size();,if (value != null ) result += value.unknownFields().size();
OneofOptions.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
OneofOptions.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
ServiceDescriptorProto.java,result = unknownFields().hashCode();,if (unknownFields() != null ) result = unknownFields().hashCode();
ServiceDescriptorProto.java,method = Internal.newMutableList();,if (Internal != null ) method = Internal.newMutableList();
ServiceDescriptorProto.java,result += value.unknownFields().size();,if (value != null ) result += value.unknownFields().size();
ServiceDescriptorProto.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
ServiceDescriptorProto.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
ServiceOptions.java,result = unknownFields().hashCode();,if (unknownFields() != null ) result = unknownFields().hashCode();
ServiceOptions.java,result += value.unknownFields().size();,if (value != null ) result += value.unknownFields().size();
ServiceOptions.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
ServiceOptions.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
SourceCodeInfo.java,result = unknownFields().hashCode();,if (unknownFields() != null ) result = unknownFields().hashCode();
SourceCodeInfo.java,location = Internal.newMutableList();,if (Internal != null ) location = Internal.newMutableList();
SourceCodeInfo.java,result = unknownFields().hashCode();,if (unknownFields() != null ) result = unknownFields().hashCode();
SourceCodeInfo.java,path = Internal.newMutableList();,if (Internal != null ) path = Internal.newMutableList();
SourceCodeInfo.java,span = Internal.newMutableList();,if (Internal != null ) span = Internal.newMutableList();
SourceCodeInfo.java,result += value.unknownFields().size();,if (value != null ) result += value.unknownFields().size();
SourceCodeInfo.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
SourceCodeInfo.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
SourceCodeInfo.java,result += value.unknownFields().size();,if (value != null ) result += value.unknownFields().size();
SourceCodeInfo.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
SourceCodeInfo.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
UninterpretedOption.java,result = unknownFields().hashCode();,if (unknownFields() != null ) result = unknownFields().hashCode();
UninterpretedOption.java,name = Internal.newMutableList();,if (Internal != null ) name = Internal.newMutableList();
UninterpretedOption.java,result = unknownFields().hashCode();,if (unknownFields() != null ) result = unknownFields().hashCode();
UninterpretedOption.java,result += value.unknownFields().size();,if (value != null ) result += value.unknownFields().size();
UninterpretedOption.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
UninterpretedOption.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
UninterpretedOption.java,result += value.unknownFields().size();,if (value != null ) result += value.unknownFields().size();
UninterpretedOption.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
UninterpretedOption.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
JavaGenerator.java,MethodSpec.Builder constructorBuilder = MethodSpec.constructorBuilder();,if (MethodSpec != null ) MethodSpec.Builder constructorBuilder = MethodSpec.constructorBuilder();
JavaGenerator.java,TypeName optionJavaType = typeName(optionField.getType()).box();,if (typeName(optionField != null ) TypeName optionJavaType = typeName(optionField.getType()).box();
JavaGenerator.java,"AnnotationSpec annotationSpec = extensionFieldAnnotation(entry.getKey(), entry.getValue());","if (entry != null ) AnnotationSpec annotationSpec = extensionFieldAnnotation(entry.getKey(), entry.getValue());"
JavaGenerator.java,String wirePackage = protoFile.wirePackage();,if (protoFile != null ) String wirePackage = protoFile.wirePackage();
JavaGenerator.java,ProtoType type = field.getType();,if (field != null ) ProtoType type = field.getType();
Redacted.java,result = unknownFields().hashCode();,if (unknownFields() != null ) result = unknownFields().hashCode();
Redacted.java,result += value.unknownFields().size();,if (value != null ) result += value.unknownFields().size();
Redacted.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
Redacted.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
Redacted.java,result = unknownFields().hashCode();,if (unknownFields() != null ) result = unknownFields().hashCode();
Redacted.java,result += value.unknownFields().size();,if (value != null ) result += value.unknownFields().size();
Redacted.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
Redacted.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
JavaGenerator.java,String javaPackage = protoFile.javaPackage();,if (protoFile != null ) String javaPackage = protoFile.javaPackage();
JavaGenerator.java,TypeName optionJavaType = typeName(optionField.getType());,if (typeName(optionField != null ) TypeName optionJavaType = typeName(optionField.getType());
GsonTest.java,AllTypes allTypes = createBuilder().build();,if (createBuilder() != null ) AllTypes allTypes = createBuilder().build();
GsonTest.java,AllTypes allTypes = createBuilder().build();,if (createBuilder() != null ) AllTypes allTypes = createBuilder().build();
GsonTest.java,AllTypes allTypes = builder.build();,if (builder != null ) AllTypes allTypes = builder.build();
MoshiTest.java,AllTypes allTypes = createBuilder().build();,if (createBuilder() != null ) AllTypes allTypes = createBuilder().build();
MoshiTest.java,AllTypes allTypes = createBuilder().build();,if (createBuilder() != null ) AllTypes allTypes = createBuilder().build();
MoshiTest.java,AllTypes allTypes = createIdentityBuilder().build();,if (createIdentityBuilder() != null ) AllTypes allTypes = createIdentityBuilder().build();
MoshiTest.java,AllTypes allTypes = createIdentityBuilder().build();,if (createIdentityBuilder() != null ) AllTypes allTypes = createIdentityBuilder().build();
MoshiTest.java,AllTypes allTypes = builder.build();,if (builder != null ) AllTypes allTypes = builder.build();
Dinosaur.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
KeywordJava.java,result = unknownFields().hashCode();,if (unknownFields() != null ) result = unknownFields().hashCode();
KeywordJava.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
KeywordJava.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
KeywordJava.java,result = unknownFields().hashCode();,if (unknownFields() != null ) result = unknownFields().hashCode();
KeywordJava.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
KeywordJava.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
ProfileLoader.java,Path base = entry.getKey();,if (entry != null ) Path base = entry.getKey();
ProfileLoader.java,base = getOnlyElement(sourceFs.getRootDirectories());,if (getOnlyElement(sourceFs != null ) base = getOnlyElement(sourceFs.getRootDirectories());
ProfileLoader.java,Path base = fileSystem.getPath(location.getBase());,if (fileSystem != null ) Path base = fileSystem.getPath(location.getBase());
ProfileLoader.java,String path = location.getPath();,if (location != null ) String path = location.getPath();
ProfileLoader.java,String requiredImport = resolvedType.getLocation().getPath();,if (resolvedType != null ) String requiredImport = resolvedType.getLocation().getPath();
Keyword.java,result = unknownFields().hashCode();,if (unknownFields() != null ) result = unknownFields().hashCode();
Keyword.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
Keyword.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
Keyword.java,result = unknownFields().hashCode();,if (unknownFields() != null ) result = unknownFields().hashCode();
Keyword.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
Keyword.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
JavaGenerator.java,CodeBlock.Builder result = singleAdapterFor(field).toBuilder();,if (singleAdapterFor(field) != null ) CodeBlock.Builder result = singleAdapterFor(field).toBuilder();
JavaGenerator.java,CodeBlock.Builder initializer = CodeBlock.builder();,if (CodeBlock != null ) CodeBlock.Builder initializer = CodeBlock.builder();
JavaGenerator.java,Field optionField = schema.getField(entry.getKey());,if (schema != null ) Field optionField = schema.getField(entry.getKey());
SchemaProtoAdapterFactory.java,Field field = fieldsByName.get(entry.getKey());,if (fieldsByName != null ) Field field = fieldsByName.get(entry.getKey());
SchemaProtoAdapterFactory.java,Field field = fieldsByName.get(entry.getKey());,if (fieldsByName != null ) Field field = fieldsByName.get(entry.getKey());
SchemaProtoAdapterFactory.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
Schema.java,Type type = getType(protoMember.getType());,if (getType(protoMember != null ) Type type = getType(protoMember.getType());
Schema.java,ProtoType protoType = type.getType();,if (type != null ) ProtoType protoType = type.getType();
Schema.java,Type type = getType(protoMember.getType());,if (getType(protoMember != null ) Type type = getType(protoMember.getType());
CodegenSampleMojo.java,PruningRules.Builder pruningRulesBuilder = new PruningRules.Builder();,if (PruningRules != null ) PruningRules.Builder pruningRulesBuilder = new PruningRules.Builder();
WireGenerateSourcesMojo.java,Stopwatch stopwatch = Stopwatch.createStarted();,if (Stopwatch != null ) Stopwatch stopwatch = Stopwatch.createStarted();
WireGenerateSourcesMojo.java,PruningRules.Builder pruningRulesBuilder = new PruningRules.Builder();,if (PruningRules != null ) PruningRules.Builder pruningRulesBuilder = new PruningRules.Builder();
WireGenerateSourcesMojo.java,Stopwatch stopwatch = Stopwatch.createStarted();,if (Stopwatch != null ) Stopwatch stopwatch = Stopwatch.createStarted();
WireGenerateSourcesMojo.java,result += protoFile.getTypes().size();,if (protoFile != null ) result += protoFile.getTypes().size();
WireGenerateSourcesMojo.java,Stopwatch stopwatch = Stopwatch.createStarted();,if (Stopwatch != null ) Stopwatch stopwatch = Stopwatch.createStarted();
WireGenerateSourcesMojo.java,Schema schema = schemaLoader.load();,if (schemaLoader != null ) Schema schema = schemaLoader.load();
WireGenerateSourcesMojo.java,JavaFile javaFile = builder.build();,if (builder != null ) JavaFile javaFile = builder.build();
Exemplar.java,byte[] dogeBytes = doge.encode();,if (doge != null ) byte[] dogeBytes = doge.encode();
CodegenSampleMojo.java,PruningRules.Builder identifierSetBuilder = new PruningRules.Builder();,if (PruningRules != null ) PruningRules.Builder identifierSetBuilder = new PruningRules.Builder();
WireGenerateSourcesMojo.java,PruningRules.Builder identifierSetBuilder = new PruningRules.Builder();,if (PruningRules != null ) PruningRules.Builder identifierSetBuilder = new PruningRules.Builder();
CodegenSampleMojo.java,IdentifierSet.Builder identifierSetBuilder = new IdentifierSet.Builder();,if (IdentifierSet != null ) IdentifierSet.Builder identifierSetBuilder = new IdentifierSet.Builder();
WireGenerateSourcesMojo.java,IdentifierSet.Builder identifierSetBuilder = new IdentifierSet.Builder();,if (IdentifierSet != null ) IdentifierSet.Builder identifierSetBuilder = new IdentifierSet.Builder();
Util.java,int count = options.size();,if (options != null ) int count = options.size();
CodegenSample.java,Stopwatch stopwatch = Stopwatch.createStarted();,if (Stopwatch != null ) Stopwatch stopwatch = Stopwatch.createStarted();
CodegenSample.java,Stopwatch stopwatch = Stopwatch.createStarted();,if (Stopwatch != null ) Stopwatch stopwatch = Stopwatch.createStarted();
CodegenSample.java,Stopwatch stopwatch = Stopwatch.createStarted();,if (Stopwatch != null ) Stopwatch stopwatch = Stopwatch.createStarted();
CodegenSample.java,Schema schema = loader.load();,if (loader != null ) Schema schema = loader.load();
CodegenSample.java,Stopwatch stopwatch = Stopwatch.createStarted();,if (Stopwatch != null ) Stopwatch stopwatch = Stopwatch.createStarted();
CodegenSample.java,JavaFile javaFile = builder.build();,if (builder != null ) JavaFile javaFile = builder.build();
CodegenSample.java,result += protoFile.getTypes().size();,if (protoFile != null ) result += protoFile.getTypes().size();
CodegenSampleMojo.java,IdentifierSet.Builder identifierSetBuilder = new IdentifierSet.Builder();,if (IdentifierSet != null ) IdentifierSet.Builder identifierSetBuilder = new IdentifierSet.Builder();
ProfileLoaderTest.java,FileSystem fileSystem = Jimfs.newFileSystem(Configuration.unix());,if (Jimfs != null ) FileSystem fileSystem = Jimfs.newFileSystem(Configuration.unix());
ProfileLoaderTest.java,FileSystem fileSystem = FileSystems.getDefault();,if (FileSystems != null ) FileSystem fileSystem = FileSystems.getDefault();
ProfileLoaderTest.java,FileSystem fileSystem = FileSystems.getDefault();,if (FileSystems != null ) FileSystem fileSystem = FileSystems.getDefault();
CodegenSample.java,result += protoFile.types().size();,if (protoFile != null ) result += protoFile.types().size();
WireGenerateSourcesMojo.java,result += protoFile.types().size();,if (protoFile != null ) result += protoFile.types().size();
ProtoFile.java,String packageName = protoFileElement.getPackageName();,if (protoFileElement != null ) String packageName = protoFileElement.getPackageName();
ProtoFile.java,"ImmutableList<Type> types = Type.fromElements(packageName, protoFileElement.getTypes());","if (protoFileElement != null ) ImmutableList<Type> types = Type.fromElements(packageName, protoFileElement.getTypes());"
ProtoFile.java,String result = location().getPath();,if (location() != null ) String result = location().getPath();
ProtoFile.java,ImmutableList<Service> retainedServices = ImmutableList.of();,if (ImmutableList != null ) ImmutableList<Service> retainedServices = ImmutableList.of();
ProtoFile.java,ImmutableList<Extend> retainedExtends = ImmutableList.of();,if (ImmutableList != null ) ImmutableList<Extend> retainedExtends = ImmutableList.of();
ProtoFile.java,Options retainedOptions = options.retainLinked();,if (options != null ) Options retainedOptions = options.retainLinked();
ProtoFile.java,ImmutableList<String> retainedImports = retainedImportsBuilder.build();,if (retainedImportsBuilder != null ) ImmutableList<String> retainedImports = retainedImportsBuilder.build();
Service.java,ImmutableList<Rpc> rpcs = Rpc.fromElements(element.getRpcs());,if (Rpc != null ) ImmutableList<Rpc> rpcs = Rpc.fromElements(element.getRpcs());
Service.java,"ProtoType protoType = ProtoType.get(packageName, service.getName());","if (service != null ) ProtoType protoType = ProtoType.get(packageName, service.getName());"
Linker.java,this.contextStack = Collections.emptyList();,if (Collections != null ) this.contextStack = Collections.emptyList();
Linker.java,Type result = protoTypeNames.get(protoType.toString());,if (protoTypeNames != null ) Type result = protoTypeNames.get(protoType.toString());
Linker.java,result = protoTypeNames.get(protoType.toString());,if (protoTypeNames != null ) result = protoTypeNames.get(protoType.toString());
Linker.java,FileLinker fileLinker = getFileLinker(result.getLocation().getPath());,if (getFileLinker(result != null ) FileLinker fileLinker = getFileLinker(result.getLocation().getPath());
Linker.java,Type type = get(self.getType());,if (get(self != null ) Type type = get(self.getType());
Linker.java,int tag = field.getTag();,if (field != null ) int tag = field.getTag();
Linker.java,Field first = collidingFields.iterator().next();,if (collidingFields != null ) Field first = collidingFields.iterator().next();
Linker.java,String constant = entry.getKey();,if (entry != null ) String constant = entry.getKey();
Linker.java,String path = location.getPath();,if (location != null ) String path = location.getPath();
Linker.java,ProtoType type = extend.getType();,if (extend != null ) ProtoType type = extend.getType();
Pruner.java,Type type = schema.getType(protoMember.getType());,if (schema != null ) Type type = schema.getType(protoMember.getType());
Pruner.java,Service service = schema.getService(protoMember.getType());,if (schema != null ) Service service = schema.getService(protoMember.getType());
Pruner.java,options = field.getOptions();,if (field != null ) options = field.getOptions();
Pruner.java,options = constant.getOptions();,if (constant != null ) options = constant.getOptions();
Pruner.java,options = rpc.getOptions();,if (rpc != null ) options = rpc.getOptions();
Pruner.java,options = type.getOptions();,if (type != null ) options = type.getOptions();
Pruner.java,options = type.getOptions();,if (type != null ) options = type.getOptions();
Pruner.java,options = service.options();,if (service != null ) options = service.options();
Pruner.java,Type type = schema.getType(protoMember.getType());,if (schema != null ) Type type = schema.getType(protoMember.getType());
ProtoParser.java,String documentation = reader.readDocumentation();,if (reader != null ) String documentation = reader.readDocumentation();
ProtoParser.java,Location location = reader.location();,if (reader != null ) Location location = reader.location();
ProtoParser.java,String label = reader.readWord();,if (reader != null ) String label = reader.readWord();
ProtoParser.java,packageName = reader.readName();,if (reader != null ) packageName = reader.readName();
ProtoParser.java,String importString = reader.readString();,if (reader != null ) String importString = reader.readString();
ProtoParser.java,String syntaxString = reader.readQuotedString();,if (reader != null ) String syntaxString = reader.readQuotedString();
ProtoParser.java,String name = reader.readName();,if (reader != null ) String name = reader.readName();
ProtoParser.java,String nestedDocumentation = reader.readDocumentation();,if (reader != null ) String nestedDocumentation = reader.readDocumentation();
ProtoParser.java,String name = reader.readName();,if (reader != null ) String name = reader.readName();
ProtoParser.java,String nestedDocumentation = reader.readDocumentation();,if (reader != null ) String nestedDocumentation = reader.readDocumentation();
ProtoParser.java,String name = reader.readName();,if (reader != null ) String name = reader.readName();
ProtoParser.java,String rpcDocumentation = reader.readDocumentation();,if (reader != null ) String rpcDocumentation = reader.readDocumentation();
ProtoParser.java,String name = reader.readName();,if (reader != null ) String name = reader.readName();
ProtoParser.java,String valueDocumentation = reader.readDocumentation();,if (reader != null ) String valueDocumentation = reader.readDocumentation();
ProtoParser.java,type = reader.readDataType();,if (reader != null ) type = reader.readDataType();
ProtoParser.java,type = reader.readDataType();,if (reader != null ) type = reader.readDataType();
ProtoParser.java,type = reader.readDataType();,if (reader != null ) type = reader.readDataType();
ProtoParser.java,String name = reader.readName();,if (reader != null ) String name = reader.readName();
ProtoParser.java,int tag = reader.readInt();,if (reader != null ) int tag = reader.readInt();
ProtoParser.java,List<OptionElement> options = new OptionReader(reader).readOptions();,if (OptionReader(reader) != null ) List<OptionElement> options = new OptionReader(reader).readOptions();
ProtoParser.java,result = String.valueOf(option.getValue()); // Defaults aren't options!,if (options! != null ) result = String.valueOf(option.getValue()); // Defaults aren't options!
ProtoParser.java,String name = reader.readName();,if (reader != null ) String name = reader.readName();
ProtoParser.java,String nestedDocumentation = reader.readDocumentation();,if (reader != null ) String nestedDocumentation = reader.readDocumentation();
ProtoParser.java,Location location = reader.location();,if (reader != null ) Location location = reader.location();
ProtoParser.java,String type = reader.readDataType();,if (reader != null ) String type = reader.readDataType();
ProtoParser.java,String name = reader.readWord();,if (reader != null ) String name = reader.readWord();
ProtoParser.java,int tag = reader.readInt();,if (reader != null ) int tag = reader.readInt();
ProtoParser.java,String nestedDocumentation = reader.readDocumentation();,if (reader != null ) String nestedDocumentation = reader.readDocumentation();
ProtoParser.java,Location fieldLocation = reader.location();,if (reader != null ) Location fieldLocation = reader.location();
ProtoParser.java,String fieldLabel = reader.readWord();,if (reader != null ) String fieldLabel = reader.readWord();
ProtoParser.java,char c = reader.peekChar();,if (reader != null ) char c = reader.peekChar();
ProtoParser.java,int tagStart = reader.readInt();,if (reader != null ) int tagStart = reader.readInt();
ProtoParser.java,c = reader.peekChar();,if (reader != null ) c = reader.peekChar();
ProtoParser.java,int tagEnd = reader.readInt();,if (reader != null ) int tagEnd = reader.readInt();
ProtoParser.java,c = reader.readChar();,if (reader != null ) c = reader.readChar();
ProtoParser.java,ImmutableList<Object> values = valuesBuilder.build();,if (valuesBuilder != null ) ImmutableList<Object> values = valuesBuilder.build();
ProtoParser.java,int start = reader.readInt(); // Range start.,if (start != null ) int start = reader.readInt(); // Range start.
ProtoParser.java,String s = reader.readWord(); // Range end.,if (end != null ) String s = reader.readWord(); // Range end.
ProtoParser.java,int tag = reader.readInt();,if (reader != null ) int tag = reader.readInt();
ProtoParser.java,List<OptionElement> options = new OptionReader(reader).readOptions();,if (OptionReader(reader) != null ) List<OptionElement> options = new OptionReader(reader).readOptions();
ProtoParser.java,String name = reader.readName();,if (reader != null ) String name = reader.readName();
ProtoParser.java,String word = reader.readWord();,if (reader != null ) String word = reader.readWord();
ProtoParser.java,requestType = reader.readDataType();,if (reader != null ) requestType = reader.readDataType();
ProtoParser.java,word = reader.readWord();,if (reader != null ) word = reader.readWord();
ProtoParser.java,responseType = reader.readDataType();,if (reader != null ) responseType = reader.readDataType();
ProtoParser.java,String rpcDocumentation = reader.readDocumentation();,if (reader != null ) String rpcDocumentation = reader.readDocumentation();
JavaGenerator.java,ClassName abstractAdapterName = abstractAdapterName(type.type());,if (abstractAdapterName(type != null ) ClassName abstractAdapterName = abstractAdapterName(type.type());
JavaGenerator.java,AdapterConstant adapterConstant = profile.getAdapter(type.type());,if (profile != null ) AdapterConstant adapterConstant = profile.getAdapter(type.type());
JavaGenerator.java,String documentation = type.documentation();,if (type != null ) String documentation = type.documentation();
JavaGenerator.java,ClassName adapterTypeName = abstractAdapterName(type.type());,if (abstractAdapterName(type != null ) ClassName adapterTypeName = abstractAdapterName(type.type());
JavaGenerator.java,TypeName javaType = typeName(type.type());,if (typeName(type != null ) TypeName javaType = typeName(type.type());
JavaGenerator.java,List<Field> fields = type.fieldsAndOneOfFields();,if (type != null ) List<Field> fields = type.fieldsAndOneOfFields();
JavaGenerator.java,List<Field> fields = type.fieldsAndOneOfFields();,if (type != null ) List<Field> fields = type.fieldsAndOneOfFields();
JavaGenerator.java,List<Field> fields = message.fieldsAndOneOfFields();,if (message != null ) List<Field> fields = message.fieldsAndOneOfFields();
ProfileLoader.java,String requiredImport = resolvedType.location().getPath();,if (resolvedType != null ) String requiredImport = resolvedType.location().getPath();
Linker.java,FileLinker fileLinker = getFileLinker(result.location().getPath());,if (getFileLinker(result != null ) FileLinker fileLinker = getFileLinker(result.location().getPath());
Linker.java,ProtoType type = extend.type();,if (extend != null ) ProtoType type = extend.type();
MessageType.java,ImmutableList<Type> retainedNestedTypes = retainedNestedTypesBuilder.build();,if (retainedNestedTypesBuilder != null ) ImmutableList<Type> retainedNestedTypes = retainedNestedTypesBuilder.build();
MessageType.java,ImmutableList<OneOf> retainedOneOfs = retainedOneOfsBuilder.build();,if (retainedOneOfsBuilder != null ) ImmutableList<OneOf> retainedOneOfs = retainedOneOfsBuilder.build();
MessageType.java,ImmutableList<Type> retainedNestedTypes = retainedNestedTypesBuilder.build();,if (retainedNestedTypesBuilder != null ) ImmutableList<Type> retainedNestedTypes = retainedNestedTypesBuilder.build();
MessageType.java,OneOf retainedOneOf = oneOf.retainLinked();,if (oneOf != null ) OneOf retainedOneOf = oneOf.retainLinked();
MessageType.java,ImmutableList<OneOf> retainedOneOfs = retainedOneOfsBuilder.build();,if (retainedOneOfsBuilder != null ) ImmutableList<OneOf> retainedOneOfs = retainedOneOfsBuilder.build();
MessageType.java,Options retainedOptions = options.retainLinked();,if (options != null ) Options retainedOptions = options.retainLinked();
MessageType.java,List<Extensions> extensionsList = Extensions.fromElements(messageElement.getExtensions());,if (Extensions != null ) List<Extensions> extensionsList = Extensions.fromElements(messageElement.getExtensions());
MessageType.java,List<Reserved> reserveds = Reserved.fromElements(messageElement.getReserveds());,if (Reserved != null ) List<Reserved> reserveds = Reserved.fromElements(messageElement.getReserveds());
Options.java,Field field = messageType.field(option.getName());,if (messageType != null ) Field field = messageType.field(option.getName());
Options.java,"path = resolveFieldPath(option.getName(), extensionsForType.keySet());","if (extensionsForType != null ) path = resolveFieldPath(option.getName(), extensionsForType.keySet());"
Options.java,String packageName = linker.packageName();,if (linker != null ) String packageName = linker.packageName();
Options.java,ProtoType lastProtoType = messageType.type();,if (messageType != null ) ProtoType lastProtoType = messageType.type();
Options.java,lastProtoType = field.getType();,if (field != null ) lastProtoType = field.getType();
Options.java,"Field field = linker.dereference(context, option.getName());","if (option != null ) Field field = linker.dereference(context, option.getName());"
Options.java,String name = (String) entry.getKey();,if (entry != null ) String name = (String) entry.getKey();
Options.java,Object aValue = result.get(entry.getKey());,if (result != null ) Object aValue = result.get(entry.getKey());
Options.java,Object bValue = entry.getValue();,if (entry != null ) Object bValue = entry.getValue();
Options.java,ProtoMember protoMember = (ProtoMember) entry.getKey();,if (entry != null ) ProtoMember protoMember = (ProtoMember) entry.getKey();
Options.java,ProtoMember protoMember = (ProtoMember) entry.getKey();,if (entry != null ) ProtoMember protoMember = (ProtoMember) entry.getKey();
Options.java,ImmutableList<Object> list = builder.build();,if (builder != null ) ImmutableList<Object> list = builder.build();
Pruner.java,options = type.options();,if (type != null ) options = type.options();
Pruner.java,options = type.options();,if (type != null ) options = type.options();
Type.java,"ProtoType protoType = ProtoType.get(packageName, element.getName());","if (element != null ) ProtoType protoType = ProtoType.get(packageName, element.getName());"
ServiceGenerator.java,ProtoType requestType = rpc.requestType();,if (rpc != null ) ProtoType requestType = rpc.requestType();
ServiceGenerator.java,ProtoType responseType = rpc.responseType();,if (rpc != null ) ProtoType responseType = rpc.responseType();
ServiceGenerator.java,MethodSpec.Builder rpcBuilder = MethodSpec.methodBuilder(rpc.name());,if (MethodSpec != null ) MethodSpec.Builder rpcBuilder = MethodSpec.methodBuilder(rpc.name());
JavaGenerator.java,TypeName optionJavaType = typeName(optionField.type());,if (typeName(optionField != null ) TypeName optionJavaType = typeName(optionField.type());
JavaGenerator.java,int fieldTag = field.tag();,if (field != null ) int fieldTag = field.tag();
JavaGenerator.java,int fieldTag = field.tag();,if (field != null ) int fieldTag = field.tag();
JavaGenerator.java,int fieldTag = field.tag();,if (field != null ) int fieldTag = field.tag();
JavaGenerator.java,CodeBlock adapter = singleAdapterFor(field.type().valueType());,if (singleAdapterFor(field != null ) CodeBlock adapter = singleAdapterFor(field.type().valueType());
JavaGenerator.java,ProtoType type = field.type();,if (field != null ) ProtoType type = field.type();
JavaGenerator.java,int tag = field.tag();,if (field != null ) int tag = field.tag();
JavaGenerator.java,defaultValue = enumDefault(field.type()).getName();,if (enumDefault(field != null ) defaultValue = enumDefault(field.type()).getName();
JavaGenerator.java,"CodeBlock valueInitializer = fieldInitializer(field.type(), entry.getValue());","if (entry != null ) CodeBlock valueInitializer = fieldInitializer(field.type(), entry.getValue());"
Field.java,"ProtoMember protoMember = ProtoMember.get(enclosingType, this.qualifiedName());","if (this != null ) ProtoMember protoMember = ProtoMember.get(enclosingType, this.qualifiedName());"
Field.java,"ProtoMember protoMember = ProtoMember.get(enclosingType, this.qualifiedName());","if (this != null ) ProtoMember protoMember = ProtoMember.get(enclosingType, this.qualifiedName());"
Linker.java,Type type = get(self.type());,if (get(self != null ) Type type = get(self.type());
Linker.java,int tag = field.tag();,if (field != null ) int tag = field.tag();
Options.java,lastProtoType = field.type();,if (field != null ) lastProtoType = field.type();
Pruner.java,Type type = schema.getType(protoMember.type());,if (schema != null ) Type type = schema.getType(protoMember.type());
Pruner.java,Service service = schema.getService(protoMember.type());,if (schema != null ) Service service = schema.getService(protoMember.type());
Pruner.java,options = field.options();,if (field != null ) options = field.options();
Pruner.java,options = rpc.options();,if (rpc != null ) options = rpc.options();
Pruner.java,Type type = schema.getType(protoMember.type());,if (schema != null ) Type type = schema.getType(protoMember.type());
Schema.java,Type type = getType(protoMember.type());,if (getType(protoMember != null ) Type type = getType(protoMember.type());
Letter.java,result = unknownFields().hashCode();,if (unknownFields() != null ) result = unknownFields().hashCode();
Letter.java,path = Internal.newMutableList();,if (Internal != null ) path = Internal.newMutableList();
Letter.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
Letter.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
Letter.java,result = unknownFields().hashCode();,if (unknownFields() != null ) result = unknownFields().hashCode();
Letter.java,path = Internal.newMutableList();,if (Internal != null ) path = Internal.newMutableList();
Letter.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
Letter.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
Linker.java,this.publicImports = LinkedHashMultimap.create();,if (LinkedHashMultimap != null ) this.publicImports = LinkedHashMultimap.create();
Linker.java,this.imports = LinkedHashMultimap.create();,if (LinkedHashMultimap != null ) this.imports = LinkedHashMultimap.create();
Pruner.java,ProtoType protoType = type.type();,if (type != null ) ProtoType protoType = type.type();
Pruner.java,ProtoType protoType = service.type();,if (service != null ) ProtoType protoType = service.type();
Pruner.java,Type type = schema.getType(protoMember.type());,if (schema != null ) Type type = schema.getType(protoMember.type());
Pruner.java,Service service = schema.getService(protoMember.type());,if (schema != null ) Service service = schema.getService(protoMember.type());
Pruner.java,type = type.valueType();,if (type != null ) type = type.valueType();
Pruner.java,ImmutableList<ProtoFile> firstRound = retainedFirstRoundBuilder.build();,if (retainedFirstRoundBuilder != null ) ImmutableList<ProtoFile> firstRound = retainedFirstRoundBuilder.build();
Person.java,result = unknownFields().hashCode();,if (unknownFields() != null ) result = unknownFields().hashCode();
Person.java,phone = Internal.newMutableList();,if (Internal != null ) phone = Internal.newMutableList();
Person.java,result = unknownFields().hashCode();,if (unknownFields() != null ) result = unknownFields().hashCode();
Person.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
Person.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
Person.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
Person.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
JavaGenerator.java,List<Field> fields = type.fieldsAndOneOfFields();,if (type != null ) List<Field> fields = type.fieldsAndOneOfFields();
RepeatedPackedAndMap.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
RepeatedPackedAndMap.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
Person.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
Person.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
DescriptorProto.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
DescriptorProto.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
DescriptorProto.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
EnumDescriptorProto.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
EnumDescriptorProto.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
EnumOptions.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
EnumValueDescriptorProto.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
EnumValueOptions.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
ExtensionRangeOptions.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
FieldDescriptorProto.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
FieldOptions.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
FileDescriptorProto.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
FileDescriptorSet.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
FileOptions.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
GeneratedCodeInfo.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
GeneratedCodeInfo.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
MessageOptions.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
MethodDescriptorProto.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
MethodOptions.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
OneofDescriptorProto.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
OneofOptions.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
ServiceDescriptorProto.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
ServiceOptions.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
SourceCodeInfo.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
SourceCodeInfo.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
UninterpretedOption.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
UninterpretedOption.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
Bar.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
Bar.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
Bar.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
Foo.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
Bar.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
Bar.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
Bar.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
Foo.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
HeresAllTheDataRequest.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
HeresAllTheDataResponse.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
LetsDataRequest.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
LetsDataResponse.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
SendDataRequest.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
SendDataResponse.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
Mappy.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
Thing.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
ChildPackage.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
RepeatedPackedAndMap.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
AllTypes.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
AllTypes.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
FooBar.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
FooBar.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
FooBar.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
MessageWithOptions.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
NoFields.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
OneBytesField.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
OneField.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
Recursive.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
ForeignMessage.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
Message.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
Foo.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
OneExtension.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
OneOfMessage.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
Person.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
Person.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
NotRedacted.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
Redacted.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
RedactedChild.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
RedactedCycleA.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
RedactedCycleB.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
RedactedExtension.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
RedactedRepeated.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
RedactedRequired.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
A.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
B.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
C.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
D.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
E.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
E.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
H.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
I.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
J.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
K.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
TheRequest.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
TheResponse.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
UnnecessaryResponse.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
ExternalMessage.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
SimpleMessage.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
SimpleMessage.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
Bar.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
Bars.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
Foo.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
Foos.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
VersionOne.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
VersionTwo.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
CollisionSubject.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
EmbeddedMessage.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
OuterMessage.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
RepoBuilder.java,final FileSystem fs = Jimfs.newFileSystem(Configuration.unix());,if (Jimfs != null ) final FileSystem fs = Jimfs.newFileSystem(Configuration.unix());
RepoBuilder.java,Path parent = resolvedPath.getParent();,if (resolvedPath != null ) Path parent = resolvedPath.getParent();
RepoBuilder.java,String packageName = service.type().enclosingTypeOrPackage();,if (service != null ) String packageName = service.type().enclosingTypeOrPackage();
RepoBuilder.java,String packageName = service.type().enclosingTypeOrPackage();,if (service != null ) String packageName = service.type().enclosingTypeOrPackage();
JavaGenerator.java,defaultValue = enumDefault(field.type()).name();,if (enumDefault(field != null ) defaultValue = enumDefault(field.type()).name();
EnumType.java,ImmutableList<EnumConstant> constants = EnumConstant.fromElements(enumElement.getConstants());,if (EnumConstant != null ) ImmutableList<EnumConstant> constants = EnumConstant.fromElements(enumElement.getConstants());
FieldBinding.java,this.label = wireField.label();,if (wireField != null ) this.label = wireField.label();
FieldBinding.java,this.name = messageField.getName();,if (messageField != null ) this.name = messageField.getName();
FieldBinding.java,this.tag = wireField.tag();,if (wireField != null ) this.tag = wireField.tag();
FieldBinding.java,this.keyAdapterString = wireField.keyAdapter();,if (wireField != null ) this.keyAdapterString = wireField.keyAdapter();
FieldBinding.java,this.adapterString = wireField.adapter();,if (wireField != null ) this.adapterString = wireField.adapter();
FieldBinding.java,this.redacted = wireField.redacted();,if (wireField != null ) this.redacted = wireField.redacted();
RuntimeMessageAdapter.java,size += message.unknownFields().size();,if (message != null ) size += message.unknownFields().size();
RuntimeMessageAdapter.java,ProtoAdapter<Object> adapter = (ProtoAdapter<Object>) fieldBinding.singleAdapter();,if (fieldBinding != null ) ProtoAdapter<Object> adapter = (ProtoAdapter<Object>) fieldBinding.singleAdapter();
RuntimeMessageAdapter.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
RuntimeMessageAdapter.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
ProtoAdapter.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
ProtoReader.java,byte tmp = source.readByte();,if (source != null ) byte tmp = source.readByte();
ProtoReader.java,byte b = source.readByte();,if (source != null ) byte b = source.readByte();
ProtoReader.java,int result = source.readIntLe();,if (source != null ) int result = source.readIntLe();
ProtoReader.java,long result = source.readLongLe();,if (source != null ) long result = source.readLongLe();
Message.java,ProtoAdapter<Object> protoAdapter = (ProtoAdapter<Object>) fieldEncoding.rawProtoAdapter();,if (fieldEncoding != null ) ProtoAdapter<Object> protoAdapter = (ProtoAdapter<Object>) fieldEncoding.rawProtoAdapter();
Message.java,unknownFieldsByteString = unknownFieldsBuffer.readByteString();,if (unknownFieldsBuffer != null ) unknownFieldsByteString = unknownFieldsBuffer.readByteString();
MessageJsonAdapter.java,B builder = messageAdapter.newBuilder();,if (messageAdapter != null ) B builder = messageAdapter.newBuilder();
WireJsonAdapterFactory.java,BigInteger bigInteger = new BigInteger(reader.nextString());,if (BigInteger(reader != null ) BigInteger bigInteger = new BigInteger(reader.nextString());
MessageType.java,ImmutableList<Reserved> reserveds = Reserved.fromElements(messageElement.getReserveds());,if (Reserved != null ) ImmutableList<Reserved> reserveds = Reserved.fromElements(messageElement.getReserveds());
EnclosingType.java,ImmutableList<Type> retainedNestedTypes = retainedNestedTypesBuilder.build();,if (retainedNestedTypesBuilder != null ) ImmutableList<Type> retainedNestedTypes = retainedNestedTypesBuilder.build();
MessageTypeAdapter.java,B builder = messageAdapter.newBuilder();,if (messageAdapter != null ) B builder = messageAdapter.newBuilder();
MessageTypeAdapter.java,String name = in.nextName();,if (in != null ) String name = in.nextName();
MessageTypeAdapter.java,JsonArray array = element.getAsJsonArray();,if (element != null ) JsonArray array = element.getAsJsonArray();
MessageTypeAdapter.java,List<Object> result = new ArrayList<>(array.size());,if (ArrayList<>(array != null ) List<Object> result = new ArrayList<>(array.size());
MessageTypeAdapter.java,JsonObject object = element.getAsJsonObject();,if (element != null ) JsonObject object = element.getAsJsonObject();
Options.java,Field field = messageType.field(option.name());,if (messageType != null ) Field field = messageType.field(option.name());
Options.java,"path = resolveFieldPath(option.name(), extensionsForType.keySet());","if (extensionsForType != null ) path = resolveFieldPath(option.name(), extensionsForType.keySet());"
Options.java,"Field field = linker.dereference(context, option.name());","if (option != null ) Field field = linker.dereference(context, option.name());"
OptionReader.java,String name = reader.readName(); // Option name.,if (name != null ) String name = reader.readName(); // Option name.
OptionReader.java,char c = reader.readChar();,if (reader != null ) char c = reader.readChar();
OptionReader.java,subName = reader.readName();,if (reader != null ) subName = reader.readName();
OptionReader.java,c = reader.readChar();,if (reader != null ) c = reader.readChar();
OptionReader.java,Kind kind = kindAndValue.kind();,if (kindAndValue != null ) Kind kind = kindAndValue.kind();
OptionReader.java,Object value = kindAndValue.value();,if (kindAndValue != null ) Object value = kindAndValue.value();
OptionReader.java,char peeked = reader.peekChar();,if (reader != null ) char peeked = reader.peekChar();
OptionReader.java,String word = reader.readWord();,if (reader != null ) String word = reader.readWord();
OptionReader.java,String name = option.name();,if (option != null ) String name = option.name();
OptionReader.java,Object value = option.value();,if (option != null ) Object value = option.value();
ProtoParser.java,result = String.valueOf(option.value()); // Defaults aren't options!,if (options! != null ) result = String.valueOf(option.value()); // Defaults aren't options!
ProtoParser.java,ImmutableList<OptionElement> options = new OptionReader(reader).readOptions();,if (OptionReader(reader) != null ) ImmutableList<OptionElement> options = new OptionReader(reader).readOptions();
EnumType.java,ImmutableList<EnumConstant> constants = EnumConstant.fromElements(enumElement.constants());,if (EnumConstant != null ) ImmutableList<EnumConstant> constants = EnumConstant.fromElements(enumElement.constants());
MessageType.java,ImmutableList<Reserved> reserveds = Reserved.fromElements(messageElement.reserveds());,if (Reserved != null ) ImmutableList<Reserved> reserveds = Reserved.fromElements(messageElement.reserveds());
Type.java,"ProtoType protoType = ProtoType.get(packageName, element.name());","if (element != null ) ProtoType protoType = ProtoType.get(packageName, element.name());"
ProtoParser.java,type = reader.readDataType();,if (reader != null ) type = reader.readDataType();
ProtoParser.java,type = reader.readDataType();,if (reader != null ) type = reader.readDataType();
Service.java,ImmutableList<Rpc> rpcs = Rpc.fromElements(element.rpcs());,if (Rpc != null ) ImmutableList<Rpc> rpcs = Rpc.fromElements(element.rpcs());
Service.java,"ProtoType protoType = ProtoType.get(packageName, service.name());","if (service != null ) ProtoType protoType = ProtoType.get(packageName, service.name());"
ProtoFile.java,String packageName = protoFileElement.packageName();,if (protoFileElement != null ) String packageName = protoFileElement.packageName();
ProtoFile.java,"ImmutableList<Type> types = Type.fromElements(packageName, protoFileElement.types());","if (protoFileElement != null ) ImmutableList<Type> types = Type.fromElements(packageName, protoFileElement.types());"
PrunerTest.java,OneOf onlyOneOf = getOnlyElement(message.oneOfs());,if (getOnlyElement(message != null ) OneOf onlyOneOf = getOnlyElement(message.oneOfs());
SchemaLoaderTest.java,FileSystem fileSystem = Jimfs.newFileSystem(Configuration.unix());,if (Jimfs != null ) FileSystem fileSystem = Jimfs.newFileSystem(Configuration.unix());
ParsingTester.java,File file = fileQueue.removeFirst();,if (fileQueue != null ) File file = fileQueue.removeFirst();
ProtoFileElementTest.java,ProtoFileElement file = ProtoFileElement.builder(location).build();,if (ProtoFileElement != null ) ProtoFileElement file = ProtoFileElement.builder(location).build();
ProfileLoader.java,Path base = fileSystem.getPath(location.base());,if (fileSystem != null ) Path base = fileSystem.getPath(location.base());
ProfileLoader.java,String path = location.path();,if (location != null ) String path = location.path();
ProfileLoader.java,String requiredImport = resolvedType.location().path();,if (resolvedType != null ) String requiredImport = resolvedType.location().path();
ProfileParser.java,String label = reader.readWord();,if (reader != null ) String label = reader.readWord();
ProfileParser.java,String syntaxString = reader.readQuotedString();,if (reader != null ) String syntaxString = reader.readQuotedString();
ProfileParser.java,String documentation = reader.readDocumentation();,if (reader != null ) String documentation = reader.readDocumentation();
ProfileParser.java,Location location = reader.location();,if (reader != null ) Location location = reader.location();
ProfileParser.java,String label = reader.readWord();,if (reader != null ) String label = reader.readWord();
ProfileParser.java,packageName = reader.readName();,if (reader != null ) packageName = reader.readName();
ProfileParser.java,String importString = reader.readString();,if (reader != null ) String importString = reader.readString();
ProfileParser.java,String name = reader.readDataType();,if (reader != null ) String name = reader.readDataType();
ProfileParser.java,Location wordLocation = reader.location();,if (reader != null ) Location wordLocation = reader.location();
ProfileParser.java,String word = reader.readWord();,if (reader != null ) String word = reader.readWord();
ProfileParser.java,target = reader.readWord();,if (reader != null ) target = reader.readWord();
ProfileParser.java,String adapterType = reader.readWord();,if (reader != null ) String adapterType = reader.readWord();
ProfileParser.java,String adapterConstant = reader.readWord();,if (reader != null ) String adapterConstant = reader.readWord();
Linker.java,String path = location.path();,if (location != null ) String path = location.path();
ProtoFile.java,String result = location().path();,if (location() != null ) String result = location().path();
JavaFileWriter.java,Type type = queue.poll();,if (queue != null ) Type type = queue.poll();
JavaFileWriter.java,Location location = type.location();,if (type != null ) Location location = type.location();
JavaFileWriter.java,JavaFile javaFile = builder.build();,if (builder != null ) JavaFile javaFile = builder.build();
KotlinFileWriter.java,Type type = queue.poll();,if (queue != null ) Type type = queue.poll();
KotlinFileWriter.java,Location location = type.location();,if (type != null ) Location location = type.location();
WireCompiler.java,IdentifierSet.Builder identifierSetBuilder = new IdentifierSet.Builder();,if (IdentifierSet != null ) IdentifierSet.Builder identifierSetBuilder = new IdentifierSet.Builder();
WireCompiler.java,Schema schema = schemaLoader.load();,if (schemaLoader != null ) Schema schema = schemaLoader.load();
WireCompiler.java,ExecutorService executor = Executors.newCachedThreadPool();,if (Executors != null ) ExecutorService executor = Executors.newCachedThreadPool();
WireCompilerErrorTest.java,FileSystem fileSystem = Jimfs.newFileSystem(Configuration.unix());,if (Jimfs != null ) FileSystem fileSystem = Jimfs.newFileSystem(Configuration.unix());
WireCompilerTest.java,testDir = temp.getRoot();,if (temp != null ) testDir = temp.getRoot();
WireCompilerTest.java,FileSystem fs = FileSystems.getDefault();,if (FileSystems != null ) FileSystem fs = FileSystems.getDefault();
WireCompilerTest.java,String[] children = file.list();,if (file != null ) String[] children = file.list();
RepeatedAndPacked.java,result = unknownFields().hashCode();,if (unknownFields() != null ) result = unknownFields().hashCode();
RepeatedAndPacked.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
RepeatedAndPacked.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
RepeatedAndPacked.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
WireCompiler.java,ExecutorService executor = Executors.newCachedThreadPool();,if (Executors != null ) ExecutorService executor = Executors.newCachedThreadPool();
ProtoParser.java,Location location = reader.location();,if (reader != null ) Location location = reader.location();
WireCompiler.java,Type type = queue.poll();,if (queue != null ) Type type = queue.poll();
WireCompiler.java,Location location = type.location();,if (type != null ) Location location = type.location();
WireCompiler.java,JavaFile javaFile = builder.build();,if (builder != null ) JavaFile javaFile = builder.build();
ProtoParser.java,String name = reader.readName(); // Option name.,if (name != null ) String name = reader.readName(); // Option name.
ProtoParser.java,char c = reader.readChar();,if (reader != null ) char c = reader.readChar();
ProtoParser.java,subName = reader.readName();,if (reader != null ) subName = reader.readName();
ProtoParser.java,c = reader.readChar();,if (reader != null ) c = reader.readChar();
ProtoParser.java,OptionElement.Kind kind = kindAndValue.kind();,if (kindAndValue != null ) OptionElement.Kind kind = kindAndValue.kind();
ProtoParser.java,Object value = kindAndValue.value();,if (kindAndValue != null ) Object value = kindAndValue.value();
ProtoParser.java,char c = reader.readChar();,if (reader != null ) char c = reader.readChar();
ProtoParser.java,char peeked = reader.peekChar();,if (reader != null ) char peeked = reader.peekChar();
ProtoParser.java,String word = reader.readWord();,if (reader != null ) String word = reader.readWord();
ProtoParser.java,String name = option.name();,if (option != null ) String name = option.name();
ProtoParser.java,Object value = option.value();,if (option != null ) Object value = option.value();
JavaGenerator.java,Set<String> collidingNames = collidingFieldNames(type.fieldsAndOneOfFields());,if (collidingFieldNames(type != null ) Set<String> collidingNames = collidingFieldNames(type.fieldsAndOneOfFields());
JavaGenerator.java,AdapterConstant adapterConstant = profile.getAdapter(type.type());,if (profile != null ) AdapterConstant adapterConstant = profile.getAdapter(type.type());
JavaGeneratorTest.java,Schema schema = repoBuilder.schema();,if (repoBuilder != null ) Schema schema = repoBuilder.schema();
JavaGeneratorTest.java,Schema schema = repoBuilder.schema();,if (repoBuilder != null ) Schema schema = repoBuilder.schema();
ProfileLoaderTest.java,FileSystem fileSystem = Jimfs.newFileSystem(Configuration.unix());,if (Jimfs != null ) FileSystem fileSystem = Jimfs.newFileSystem(Configuration.unix());
ProfileLoader.java,Path base = Paths.get(location.base());,if (Paths != null ) Path base = Paths.get(location.base());
ProfileLoaderTest.java,File file = temp.newFile();,if (temp != null ) File file = temp.newFile();
ProfileParserTest.java,"BuildConfigParser parser = new BuildConfigParser(location, proto.toCharArray());","if (proto != null ) BuildConfigParser parser = new BuildConfigParser(location, proto.toCharArray());"
ProfileParserTest.java,"BuildConfigParser parser = new BuildConfigParser(location, proto.toCharArray());","if (proto != null ) BuildConfigParser parser = new BuildConfigParser(location, proto.toCharArray());"
ProfileParserTest.java,"BuildConfigParser parser = new BuildConfigParser(location, proto.toCharArray());","if (proto != null ) BuildConfigParser parser = new BuildConfigParser(location, proto.toCharArray());"
SchemaLoader.java,"Source source = source(proto, entry.getValue());","if (entry != null ) Source source = source(proto, entry.getValue());"
JavaGenerator.java,ClassName protoFieldsTypeName = protoFieldsTypeName(type.type());,if (protoFieldsTypeName(type != null ) ClassName protoFieldsTypeName = protoFieldsTypeName(type.type());
JavaGenerator.java,ClassName javaType = protoFieldsTypeName(type.type());,if (protoFieldsTypeName(type != null ) ClassName javaType = protoFieldsTypeName(type.type());
JavaGenerator.java,TypeSpec.Builder builder = TypeSpec.classBuilder(javaType.simpleName());,if (TypeSpec != null ) TypeSpec.Builder builder = TypeSpec.classBuilder(javaType.simpleName());
Exemplar.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
WireCompiler.java,TypeName typeName = javaGenerator.protoFieldsTypeName(type.type());,if (javaGenerator != null ) TypeName typeName = javaGenerator.protoFieldsTypeName(type.type());
WireCompiler.java,typeName = javaGenerator.typeName(type.type());,if (javaGenerator != null ) typeName = javaGenerator.typeName(type.type());
WireCompiler.java,JavaFile javaFile = builder.build();,if (builder != null ) JavaFile javaFile = builder.build();
JavaGenerator.java,ProtoType type = field.type();,if (field != null ) ProtoType type = field.type();
JavaGenerator.java,TypeName messageType = typeName(field.type());,if (typeName(field != null ) TypeName messageType = typeName(field.type());
Pruner.java,String enclosingTypeOrPackage = type.type().enclosingTypeOrPackage();,if (type != null ) String enclosingTypeOrPackage = type.type().enclosingTypeOrPackage();
Extend.java,this.fields = fields.build();,if (fields != null ) this.fields = fields.build();
Extend.java,protoType = linker.resolveMessageType(element.name());,if (linker != null ) protoType = linker.resolveMessageType(element.name());
Field.java,type = linker.resolveType(element.type());,if (linker != null ) type = linker.resolveType(element.type());
ProtoFile.java,"ProtoType protoType = ProtoType.get(packageName, type.name());","if (type != null ) ProtoType protoType = ProtoType.get(packageName, type.name());"
ProtoFile.java,"ProtoType protoType = ProtoType.get(packageName, service.name());","if (service != null ) ProtoType protoType = ProtoType.get(packageName, service.name());"
Rpc.java,requestType = linker.resolveMessageType(element.requestType());,if (linker != null ) requestType = linker.resolveMessageType(element.requestType());
Rpc.java,responseType = linker.resolveMessageType(element.responseType());,if (linker != null ) responseType = linker.resolveMessageType(element.responseType());
DescriptorProto.java,field = WireInternal.newMutableList();,if (WireInternal != null ) field = WireInternal.newMutableList();
DescriptorProto.java,extension = WireInternal.newMutableList();,if (WireInternal != null ) extension = WireInternal.newMutableList();
EnumDescriptorProto.java,value = WireInternal.newMutableList();,if (WireInternal != null ) value = WireInternal.newMutableList();
FileDescriptorProto.java,dependency = WireInternal.newMutableList();,if (WireInternal != null ) dependency = WireInternal.newMutableList();
FileDescriptorProto.java,service = WireInternal.newMutableList();,if (WireInternal != null ) service = WireInternal.newMutableList();
FileDescriptorProto.java,extension = WireInternal.newMutableList();,if (WireInternal != null ) extension = WireInternal.newMutableList();
FileDescriptorSet.java,file = WireInternal.newMutableList();,if (WireInternal != null ) file = WireInternal.newMutableList();
ServiceDescriptorProto.java,method = WireInternal.newMutableList();,if (WireInternal != null ) method = WireInternal.newMutableList();
SourceCodeInfo.java,location = WireInternal.newMutableList();,if (WireInternal != null ) location = WireInternal.newMutableList();
SourceCodeInfo.java,path = WireInternal.newMutableList();,if (WireInternal != null ) path = WireInternal.newMutableList();
SourceCodeInfo.java,span = WireInternal.newMutableList();,if (WireInternal != null ) span = WireInternal.newMutableList();
UninterpretedOption.java,name = WireInternal.newMutableList();,if (WireInternal != null ) name = WireInternal.newMutableList();
FooBar.java,fred = WireInternal.newMutableList();,if (WireInternal != null ) fred = WireInternal.newMutableList();
FooBar.java,nested = WireInternal.newMutableList();,if (WireInternal != null ) nested = WireInternal.newMutableList();
FooBar.java,rep = WireInternal.newMutableList();,if (WireInternal != null ) rep = WireInternal.newMutableList();
FooBar.java,serial = WireInternal.newMutableList();,if (WireInternal != null ) serial = WireInternal.newMutableList();
Person.java,phone = WireInternal.newMutableList();,if (WireInternal != null ) phone = WireInternal.newMutableList();
RedactedRepeated.java,a = WireInternal.newMutableList();,if (WireInternal != null ) a = WireInternal.newMutableList();
RedactedRepeated.java,b = WireInternal.newMutableList();,if (WireInternal != null ) b = WireInternal.newMutableList();
ExternalMessage.java,fooext = WireInternal.newMutableList();,if (WireInternal != null ) fooext = WireInternal.newMutableList();
Bars.java,bars = WireInternal.newMutableList();,if (WireInternal != null ) bars = WireInternal.newMutableList();
Foos.java,foos = WireInternal.newMutableList();,if (WireInternal != null ) foos = WireInternal.newMutableList();
DescriptorProto.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
DescriptorProto.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
DescriptorProto.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
DescriptorProto.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
DescriptorProto.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
DescriptorProto.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
EnumDescriptorProto.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
EnumDescriptorProto.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
EnumDescriptorProto.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
EnumOptions.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
EnumOptions.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
EnumOptions.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
EnumValueDescriptorProto.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
EnumValueDescriptorProto.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
EnumValueDescriptorProto.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
EnumValueOptions.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
EnumValueOptions.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
EnumValueOptions.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
FieldDescriptorProto.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
FieldDescriptorProto.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
FieldDescriptorProto.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
FieldOptions.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
FieldOptions.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
FieldOptions.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
FileDescriptorProto.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
FileDescriptorProto.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
FileDescriptorProto.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
FileDescriptorSet.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
FileDescriptorSet.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
FileDescriptorSet.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
FileOptions.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
FileOptions.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
FileOptions.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
MessageOptions.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
MessageOptions.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
MessageOptions.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
MethodDescriptorProto.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
MethodDescriptorProto.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
MethodDescriptorProto.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
MethodOptions.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
MethodOptions.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
MethodOptions.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
OneofDescriptorProto.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
OneofDescriptorProto.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
OneofDescriptorProto.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
ServiceDescriptorProto.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
ServiceDescriptorProto.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
ServiceDescriptorProto.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
ServiceOptions.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
ServiceOptions.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
ServiceOptions.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
SourceCodeInfo.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
SourceCodeInfo.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
SourceCodeInfo.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
SourceCodeInfo.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
SourceCodeInfo.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
SourceCodeInfo.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
UninterpretedOption.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
UninterpretedOption.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
UninterpretedOption.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
UninterpretedOption.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
UninterpretedOption.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
UninterpretedOption.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
Bar.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
Bar.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
Bar.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
Bar.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
Bar.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
Bar.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
Bar.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
Bar.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
Bar.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
Foo.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
Foo.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
Foo.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
Bar.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
Bar.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
Bar.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
Bar.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
Bar.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
Bar.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
Bar.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
Bar.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
Bar.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
Foo.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
Foo.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
Foo.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
HeresAllTheDataRequest.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
HeresAllTheDataRequest.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
HeresAllTheDataRequest.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
HeresAllTheDataResponse.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
HeresAllTheDataResponse.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
HeresAllTheDataResponse.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
LetsDataRequest.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
LetsDataRequest.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
LetsDataRequest.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
LetsDataResponse.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
LetsDataResponse.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
LetsDataResponse.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
SendDataRequest.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
SendDataRequest.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
SendDataRequest.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
SendDataResponse.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
SendDataResponse.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
SendDataResponse.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
ChildPackage.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
ChildPackage.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
ChildPackage.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
RepeatedAndPacked.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
RepeatedAndPacked.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
RepeatedAndPacked.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
AllTypes.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
AllTypes.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
AllTypes.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
AllTypes.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
AllTypes.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
AllTypes.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
AllTypes.java,result = unknownFields().hashCode();,if (unknownFields() != null ) result = unknownFields().hashCode();
FooBar.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
FooBar.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
FooBar.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
FooBar.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
FooBar.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
FooBar.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
MessageWithOptions.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
MessageWithOptions.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
MessageWithOptions.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
NoFields.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
NoFields.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
NoFields.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
OneBytesField.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
OneBytesField.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
OneBytesField.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
OneField.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
OneField.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
OneField.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
Recursive.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
Recursive.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
Recursive.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
ForeignMessage.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
ForeignMessage.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
ForeignMessage.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
Message.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
Message.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
Message.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
Foo.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
Foo.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
Foo.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
OneExtension.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
OneExtension.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
OneExtension.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
OneOfMessage.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
OneOfMessage.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
OneOfMessage.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
Person.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
Person.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
Person.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
Person.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
Person.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
Person.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
NotRedacted.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
NotRedacted.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
NotRedacted.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
Redacted.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
Redacted.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
Redacted.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
RedactedChild.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
RedactedChild.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
RedactedChild.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
RedactedCycleA.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
RedactedCycleA.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
RedactedCycleA.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
RedactedCycleB.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
RedactedCycleB.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
RedactedCycleB.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
RedactedExtension.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
RedactedExtension.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
RedactedExtension.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
RedactedRepeated.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
RedactedRepeated.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
RedactedRepeated.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
RedactedRepeated.java,builder.a = Collections.emptyList();,if (Collections != null ) builder.a = Collections.emptyList();
RedactedRequired.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
RedactedRequired.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
A.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
A.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
A.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
B.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
B.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
B.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
C.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
C.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
C.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
D.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
D.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
D.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
E.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
E.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
E.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
E.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
E.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
E.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
H.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
H.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
H.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
I.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
I.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
I.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
J.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
J.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
J.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
K.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
K.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
K.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
TheRequest.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
TheRequest.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
TheRequest.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
TheResponse.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
TheResponse.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
TheResponse.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
UnnecessaryResponse.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
UnnecessaryResponse.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
UnnecessaryResponse.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
ExternalMessage.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
ExternalMessage.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
ExternalMessage.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
SimpleMessage.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
SimpleMessage.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
SimpleMessage.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
SimpleMessage.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
SimpleMessage.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
SimpleMessage.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
Bar.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
Bar.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
Bar.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
Bars.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
Bars.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
Bars.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
Foo.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
Foo.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
Foo.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
Foos.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
Foos.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
Foos.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
VersionOne.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
VersionOne.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
VersionOne.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
VersionTwo.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
VersionTwo.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
VersionTwo.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
CollisionSubject.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
CollisionSubject.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
CollisionSubject.java,Builder builder = value.newBuilder();,if (value != null ) Builder builder = value.newBuilder();
MessageTypeAdapter.java,this.messageType = (Class<M>) type.getRawType();,if (type != null ) this.messageType = (Class<M>) type.getRawType();
MessageTypeAdapter.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
MessageTypeAdapter.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
GsonTest.java,AllTypes allTypesWithKnownFields = allTypes.withoutUnknownFields();,if (allTypes != null ) AllTypes allTypesWithKnownFields = allTypes.withoutUnknownFields();
MessageTypeAdapter.java,UnknownFieldType type = UnknownFieldType.of(in.nextString());,if (UnknownFieldType != null ) UnknownFieldType type = UnknownFieldType.of(in.nextString());
MessageTypeAdapter.java,long varint = in.nextLong();,if (in != null ) long varint = in.nextLong();
AllTypes.java,NestedMessage.Builder builder = new NestedMessage.Builder();,if (NestedMessage != null ) NestedMessage.Builder builder = new NestedMessage.Builder();
DescriptorProto.java,ExtensionRange.Builder builder = new ExtensionRange.Builder();,if (ExtensionRange != null ) ExtensionRange.Builder builder = new ExtensionRange.Builder();
DescriptorProto.java,ExtensionRange.Builder builder = value.newBuilder();,if (value != null ) ExtensionRange.Builder builder = value.newBuilder();
DescriptorProto.java,ExtensionRange.Builder builder = new ExtensionRange.Builder();,if (ExtensionRange != null ) ExtensionRange.Builder builder = new ExtensionRange.Builder();
DescriptorProto.java,ReservedRange.Builder builder = new ReservedRange.Builder();,if (ReservedRange != null ) ReservedRange.Builder builder = new ReservedRange.Builder();
DescriptorProto.java,ReservedRange.Builder builder = value.newBuilder();,if (value != null ) ReservedRange.Builder builder = value.newBuilder();
DescriptorProto.java,ReservedRange.Builder builder = new ReservedRange.Builder();,if (ReservedRange != null ) ReservedRange.Builder builder = new ReservedRange.Builder();
SourceCodeInfo.java,Location.Builder builder = new Location.Builder();,if (Location != null ) Location.Builder builder = new Location.Builder();
SourceCodeInfo.java,Location.Builder builder = value.newBuilder();,if (value != null ) Location.Builder builder = value.newBuilder();
SourceCodeInfo.java,Location.Builder builder = new Location.Builder();,if (Location != null ) Location.Builder builder = new Location.Builder();
UninterpretedOption.java,NamePart.Builder builder = new NamePart.Builder();,if (NamePart != null ) NamePart.Builder builder = new NamePart.Builder();
UninterpretedOption.java,NamePart.Builder builder = value.newBuilder();,if (value != null ) NamePart.Builder builder = value.newBuilder();
UninterpretedOption.java,NamePart.Builder builder = new NamePart.Builder();,if (NamePart != null ) NamePart.Builder builder = new NamePart.Builder();
Bar.java,Baz.Builder builder = new Baz.Builder();,if (Baz != null ) Baz.Builder builder = new Baz.Builder();
Bar.java,Baz.Builder builder = value.newBuilder();,if (value != null ) Baz.Builder builder = value.newBuilder();
Bar.java,Baz.Builder builder = new Baz.Builder();,if (Baz != null ) Baz.Builder builder = new Baz.Builder();
Bar.java,Moo.Builder builder = new Moo.Builder();,if (Moo != null ) Moo.Builder builder = new Moo.Builder();
Bar.java,Moo.Builder builder = value.newBuilder();,if (value != null ) Moo.Builder builder = value.newBuilder();
Bar.java,Moo.Builder builder = new Moo.Builder();,if (Moo != null ) Moo.Builder builder = new Moo.Builder();
Bar.java,Baz.Builder builder = new Baz.Builder();,if (Baz != null ) Baz.Builder builder = new Baz.Builder();
Bar.java,Baz.Builder builder = value.newBuilder();,if (value != null ) Baz.Builder builder = value.newBuilder();
Bar.java,Baz.Builder builder = new Baz.Builder();,if (Baz != null ) Baz.Builder builder = new Baz.Builder();
Bar.java,Moo.Builder builder = new Moo.Builder();,if (Moo != null ) Moo.Builder builder = new Moo.Builder();
Bar.java,Moo.Builder builder = value.newBuilder();,if (value != null ) Moo.Builder builder = value.newBuilder();
Bar.java,Moo.Builder builder = new Moo.Builder();,if (Moo != null ) Moo.Builder builder = new Moo.Builder();
AllTypes.java,NestedMessage.Builder builder = new NestedMessage.Builder();,if (NestedMessage != null ) NestedMessage.Builder builder = new NestedMessage.Builder();
AllTypes.java,NestedMessage.Builder builder = value.newBuilder();,if (value != null ) NestedMessage.Builder builder = value.newBuilder();
AllTypes.java,NestedMessage.Builder builder = new NestedMessage.Builder();,if (NestedMessage != null ) NestedMessage.Builder builder = new NestedMessage.Builder();
FooBar.java,Nested.Builder builder = new Nested.Builder();,if (Nested != null ) Nested.Builder builder = new Nested.Builder();
FooBar.java,Nested.Builder builder = value.newBuilder();,if (value != null ) Nested.Builder builder = value.newBuilder();
FooBar.java,Nested.Builder builder = new Nested.Builder();,if (Nested != null ) Nested.Builder builder = new Nested.Builder();
FooBar.java,More.Builder builder = new More.Builder();,if (More != null ) More.Builder builder = new More.Builder();
FooBar.java,More.Builder builder = value.newBuilder();,if (value != null ) More.Builder builder = value.newBuilder();
FooBar.java,More.Builder builder = new More.Builder();,if (More != null ) More.Builder builder = new More.Builder();
Person.java,PhoneNumber.Builder builder = new PhoneNumber.Builder();,if (PhoneNumber != null ) PhoneNumber.Builder builder = new PhoneNumber.Builder();
Person.java,PhoneNumber.Builder builder = value.newBuilder();,if (value != null ) PhoneNumber.Builder builder = value.newBuilder();
Person.java,PhoneNumber.Builder builder = new PhoneNumber.Builder();,if (PhoneNumber != null ) PhoneNumber.Builder builder = new PhoneNumber.Builder();
E.java,F.Builder builder = new F.Builder();,if (F != null ) F.Builder builder = new F.Builder();
E.java,F.Builder builder = value.newBuilder();,if (value != null ) F.Builder builder = value.newBuilder();
E.java,F.Builder builder = new F.Builder();,if (F != null ) F.Builder builder = new F.Builder();
SimpleMessage.java,NestedMessage.Builder builder = new NestedMessage.Builder();,if (NestedMessage != null ) NestedMessage.Builder builder = new NestedMessage.Builder();
SimpleMessage.java,NestedMessage.Builder builder = value.newBuilder();,if (value != null ) NestedMessage.Builder builder = value.newBuilder();
SimpleMessage.java,NestedMessage.Builder builder = new NestedMessage.Builder();,if (NestedMessage != null ) NestedMessage.Builder builder = new NestedMessage.Builder();
JavaGenerator.java,ImmutableList<ProtoMember> allOptionMembers = ImmutableList.of();,if (ImmutableList != null ) ImmutableList<ProtoMember> allOptionMembers = ImmutableList.of();
JavaGenerator.java,TypeName optionJavaType = typeName(optionField.type());,if (typeName(optionField != null ) TypeName optionJavaType = typeName(optionField.type());
JavaGenerator.java,TypeName javaType = typeName(type.name());,if (typeName(type != null ) TypeName javaType = typeName(type.name());
Options.java,ProtoType lastProtoType = messageType.name();,if (messageType != null ) ProtoType lastProtoType = messageType.name();
Pruner.java,ProtoType protoType = type.name();,if (type != null ) ProtoType protoType = type.name();
Pruner.java,String enclosingTypeOrPackage = type.name().enclosingTypeOrPackage();,if (type != null ) String enclosingTypeOrPackage = type.name().enclosingTypeOrPackage();
WireCompilerTest.java,FileSystem fs = FileSystems.getDefault();,if (FileSystems != null ) FileSystem fs = FileSystems.getDefault();
WireCompilerTest.java,File[] files = dir.listFiles();,if (dir != null ) File[] files = dir.listFiles();
CommandLineOptions.java,IdentifierSet.Builder identifierSetBuilder = new IdentifierSet.Builder();,if (IdentifierSet != null ) IdentifierSet.Builder identifierSetBuilder = new IdentifierSet.Builder();
CommandLineOptions.java,this.identifierSet = identifierSetBuilder.build();,if (identifierSetBuilder != null ) this.identifierSet = identifierSetBuilder.build();
WireGenerateSourcesMojo.java,Stopwatch stopwatch = Stopwatch.createStarted();,if (Stopwatch != null ) Stopwatch stopwatch = Stopwatch.createStarted();
WireGenerateSourcesMojo.java,IdentifierSet identifierSet = identifierSetBuilder.build();,if (identifierSetBuilder != null ) IdentifierSet identifierSet = identifierSetBuilder.build();
WireCompilerTest.java,File[] allFiles = root.listFiles();,if (root != null ) File[] allFiles = root.listFiles();
JavaGenerator.java,ImmutableList<Field> allOptionFields = ImmutableList.of();,if (ImmutableList != null ) ImmutableList<Field> allOptionFields = ImmutableList.of();
JavaGenerator.java,Field extensionRoot = entry.getKey();,if (entry != null ) Field extensionRoot = entry.getKey();
JavaGenerator.java,Field field = (Field) entry.getKey();,if (entry != null ) Field field = (Field) entry.getKey();
Options.java,found = entry.getValue();,if (entry != null ) found = entry.getValue();
Options.java,Field field = (Field) entry.getKey();,if (entry != null ) Field field = (Field) entry.getKey();
Options.java,Field field = (Field) entry.getKey();,if (entry != null ) Field field = (Field) entry.getKey();
OneOf.java,this.fields = fields.build();,if (fields != null ) this.fields = fields.build();
Options.java,"String[] path = resolveFieldPath(option.name(), extensionsForType.keySet());","if (extensionsForType != null ) String[] path = resolveFieldPath(option.name(), extensionsForType.keySet());"
Options.java,String packageName = linker.packageName();,if (linker != null ) String packageName = linker.packageName();
EnumType.java,retainedConstants = retainedConstantsBuilder.build();,if (retainedConstantsBuilder != null ) retainedConstants = retainedConstantsBuilder.build();
Service.java,retainedRpcs = retainedRpcsBuilder.build();,if (retainedRpcsBuilder != null ) retainedRpcs = retainedRpcsBuilder.build();
EnumType.java,String typeName = protoType.toString();,if (protoType != null ) String typeName = protoType.toString();
MessageType.java,String typeName = protoType.toString();,if (protoType != null ) String typeName = protoType.toString();
Service.java,String serviceName = protoType.toString();,if (protoType != null ) String serviceName = protoType.toString();
JavaGenerator.java,Set<String> collidingNames = collidingFieldNames(type.fieldsAndOneOfFields());,if (collidingFieldNames(type != null ) Set<String> collidingNames = collidingFieldNames(type.fieldsAndOneOfFields());
JavaGenerator.java,"String fullyQualifiedName = optionField.packageName() + ""."" + optionField.name();","if (optionField != null ) String fullyQualifiedName = optionField.packageName() + ""."" + optionField.name();"
JavaGenerator.java,TypeName optionJavaType = typeName(optionField.type());,if (typeName(optionField != null ) TypeName optionJavaType = typeName(optionField.type());
RuntimeMessageAdapter.java,size += message.unknownFields.size();,if (message != null ) size += message.unknownFields.size();
JavaGenerator.java,TypeName javaType = typeName(message.name());,if (typeName(message != null ) TypeName javaType = typeName(message.name());
AllTypes.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
AllTypes.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
Message.java,tagMapBuilder = new TagMap.Builder();,if (TagMap != null ) tagMapBuilder = new TagMap.Builder();
Message.java,tagMapBuilder = new TagMap.Builder();,if (TagMap != null ) tagMapBuilder = new TagMap.Builder();
RuntimeMessageAdapter.java,size += message.tagMap.encodedSize();,if (message != null ) size += message.tagMap.encodedSize();
TagMap.java,result += ProtoWriter.tagSize(extension.getTag());,if (ProtoWriter != null ) result += ProtoWriter.tagSize(extension.getTag());
TagMap.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
TagMap.java,this.array = tagMap.array.clone();,if (tagMap != null ) this.array = tagMap.array.clone();
TagMap.java,Object[] oldArray = array.clone();,if (array != null ) Object[] oldArray = array.clone();
TagMapTest.java,TagMap.Builder tagMap = new TagMap.Builder();,if (TagMap != null ) TagMap.Builder tagMap = new TagMap.Builder();
TagMapTest.java,TagMap expected = new TagMap.Builder().build();,if (TagMap != null ) TagMap expected = new TagMap.Builder().build();
TagMapTest.java,TagMap.Builder builder = new TagMap.Builder();,if (TagMap != null ) TagMap.Builder builder = new TagMap.Builder();
TagMapTest.java,TagMap map = builder.build();,if (builder != null ) TagMap map = builder.build();
DescriptorProto.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
DescriptorProto.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
EnumDescriptorProto.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
EnumOptions.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
EnumValueDescriptorProto.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
EnumValueOptions.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
FieldDescriptorProto.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
FieldOptions.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
FileDescriptorProto.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
FileDescriptorSet.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
FileOptions.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
MessageOptions.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
MethodDescriptorProto.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
MethodOptions.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
ServiceDescriptorProto.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
ServiceOptions.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
SourceCodeInfo.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
SourceCodeInfo.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
UninterpretedOption.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
UninterpretedOption.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
Bar.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
Foo.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
Bar.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
Foo.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
HeresAllTheDataRequest.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
HeresAllTheDataResponse.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
LetsDataRequest.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
LetsDataResponse.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
SendDataRequest.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
SendDataResponse.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
ChildPackage.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
RepeatedAndPacked.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
AllTypes.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
AllTypes.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
FooBar.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
FooBar.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
FooBar.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
OneBytesField.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
OneField.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
Recursive.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
ForeignMessage.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
Foo.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
OneExtension.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
OneOfMessage.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
Person.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
Person.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
NotRedacted.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
Redacted.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
RedactedChild.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
RedactedCycleA.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
RedactedCycleB.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
RedactedExtension.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
RedactedRepeated.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
RedactedRequired.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
A.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
B.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
C.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
D.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
E.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
E.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
H.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
I.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
J.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
K.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
ExternalMessage.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
SimpleMessage.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
Bar.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
Bars.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
Foo.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
Foos.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
VersionOne.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
VersionTwo.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
GsonTest.java,AllTypes allTypes = setExtensions(createBuilder()).build();,if (setExtensions(createBuilder()) != null ) AllTypes allTypes = setExtensions(createBuilder()).build();
GsonTest.java,AllTypes allTypes = setExtensions(builder).build();,if (setExtensions(builder) != null ) AllTypes allTypes = setExtensions(builder).build();
JavaGenerator.java,ProtoType extendType = extend.type();,if (extend != null ) ProtoType extendType = extend.type();
JavaGenerator.java,TypeName fieldType = typeName(field.type());,if (typeName(field != null ) TypeName fieldType = typeName(field.type());
JavaGenerator.java,ImmutableList<TypeName> extensionClasses = extensionClassesBuilder.build().asList();,if (extensionClassesBuilder != null ) ImmutableList<TypeName> extensionClasses = extensionClassesBuilder.build().asList();
JavaGenerator.java,CodeBlock.Builder initializer = CodeBlock.builder();,if (CodeBlock != null ) CodeBlock.Builder initializer = CodeBlock.builder();
WireGenerateSourcesMojo.java,Stopwatch stopwatch = Stopwatch.createStarted();,if (Stopwatch != null ) Stopwatch stopwatch = Stopwatch.createStarted();
WireGenerateSourcesMojo.java,Stopwatch stopwatch = Stopwatch.createStarted();,if (Stopwatch != null ) Stopwatch stopwatch = Stopwatch.createStarted();
Extend.java,protoType = linker.resolveNamedType(element.name());,if (linker != null ) protoType = linker.resolveNamedType(element.name());
MessageType.java,retainedFields = retainedFieldsBuilder.build();,if (retainedFieldsBuilder != null ) retainedFields = retainedFieldsBuilder.build();
Rpc.java,requestType = linker.resolveNamedType(element.requestType());,if (linker != null ) requestType = linker.resolveNamedType(element.requestType());
Rpc.java,responseType = linker.resolveNamedType(element.responseType());,if (linker != null ) responseType = linker.resolveNamedType(element.responseType());
SchemaLoader.java,ZipFile zipFile = new ZipFile(directory.toFile());,if (ZipFile(directory != null ) ZipFile zipFile = new ZipFile(directory.toFile());
SchemaLoader.java,Path proto = protos.removeFirst();,if (protos != null ) Path proto = protos.removeFirst();
SchemaLoader.java,FileSystem fs = proto.getFileSystem();,if (proto != null ) FileSystem fs = proto.getFileSystem();
JavaGenerator.java,String name = sanitize(field.name());,if (sanitize(field != null ) String name = sanitize(field.name());
JavaGenerator.java,String sanitizedName = sanitize(field.name());,if (sanitize(field != null ) String sanitizedName = sanitize(field.name());
JavaGenerator.java,String sanitizedName = sanitize(field.name());,if (sanitize(field != null ) String sanitizedName = sanitize(field.name());
JavaGenerator.java,String name = sanitize(field.name());,if (sanitize(field != null ) String name = sanitize(field.name());
JavaGenerator.java,String name = sanitize(field.name());,if (sanitize(field != null ) String name = sanitize(field.name());
JavaGenerator.java,String fieldName = sanitize(field.name());,if (sanitize(field != null ) String fieldName = sanitize(field.name());
JavaGenerator.java,String fieldName = sanitize(field.name());,if (sanitize(field != null ) String fieldName = sanitize(field.name());
SimpleMessage.java,result = tagMap().hashCode();,if (tagMap() != null ) result = tagMap().hashCode();
RuntimeEnumAdapter.java,constants = type.getEnumConstants();,if (type != null ) constants = type.getEnumConstants();
RuntimeEnumAdapter.java,values[i] = constants[i].getValue();,if (constants[i] != null ) values[i] = constants[i].getValue();
DescriptorProto.java,field = Collections.emptyList();,if (Collections != null ) field = Collections.emptyList();
DescriptorProto.java,extension = Collections.emptyList();,if (Collections != null ) extension = Collections.emptyList();
EnumDescriptorProto.java,value = Collections.emptyList();,if (Collections != null ) value = Collections.emptyList();
FileDescriptorProto.java,dependency = Collections.emptyList();,if (Collections != null ) dependency = Collections.emptyList();
FileDescriptorProto.java,service = Collections.emptyList();,if (Collections != null ) service = Collections.emptyList();
FileDescriptorProto.java,extension = Collections.emptyList();,if (Collections != null ) extension = Collections.emptyList();
FileDescriptorSet.java,file = Collections.emptyList();,if (Collections != null ) file = Collections.emptyList();
ServiceDescriptorProto.java,method = Collections.emptyList();,if (Collections != null ) method = Collections.emptyList();
SourceCodeInfo.java,location = Collections.emptyList();,if (Collections != null ) location = Collections.emptyList();
SourceCodeInfo.java,path = Collections.emptyList();,if (Collections != null ) path = Collections.emptyList();
SourceCodeInfo.java,span = Collections.emptyList();,if (Collections != null ) span = Collections.emptyList();
UninterpretedOption.java,name = Collections.emptyList();,if (Collections != null ) name = Collections.emptyList();
FooBar.java,fred = Collections.emptyList();,if (Collections != null ) fred = Collections.emptyList();
FooBar.java,nested = Collections.emptyList();,if (Collections != null ) nested = Collections.emptyList();
FooBar.java,serial = Collections.emptyList();,if (Collections != null ) serial = Collections.emptyList();
Person.java,phone = Collections.emptyList();,if (Collections != null ) phone = Collections.emptyList();
RedactedRepeated.java,a = Collections.emptyList();,if (Collections != null ) a = Collections.emptyList();
Bars.java,bars = Collections.emptyList();,if (Collections != null ) bars = Collections.emptyList();
Foos.java,foos = Collections.emptyList();,if (Collections != null ) foos = Collections.emptyList();
RuntimeMessageAdapter.java,size += message.tagMap.encodedSize();,if (message != null ) size += message.tagMap.encodedSize();
JavaGenerator.java,List<Field> fields = type.fieldsAndOneOfFields();,if (type != null ) List<Field> fields = type.fieldsAndOneOfFields();
SchemaBuilder.java,Path parent = path.getParent();,if (path != null ) Path parent = path.getParent();
WireGenerateSourcesMojo.java,List<String> args = Lists.newArrayList();,if (Lists != null ) List<String> args = Lists.newArrayList();
JavaGenerator.java,List<Field> fields = type.fieldsAndOneOfFields();,if (type != null ) List<Field> fields = type.fieldsAndOneOfFields();
JavaGenerator.java,String name = sanitize(field.name());,if (sanitize(field != null ) String name = sanitize(field.name());
Message.java,tagMap = builder.tagMapBuilder.build();,if (builder != null ) tagMap = builder.tagMapBuilder.build();
RuntimeMessageAdapter.java,size += message.tagMapEncodedSize();,if (message != null ) size += message.tagMapEncodedSize();
JavaGenerator.java,CodeBlock.Builder initializer = CodeBlock.builder();,if (CodeBlock != null ) CodeBlock.Builder initializer = CodeBlock.builder();
FieldBinding.java,this.type = ProtoType.get(wireField.type());,if (ProtoType != null ) this.type = ProtoType.get(wireField.type());
FieldBinding.java,ParameterizedType listType = (ParameterizedType) messageField.getGenericType();,if (messageField != null ) ParameterizedType listType = (ParameterizedType) messageField.getGenericType();
JavaGenerator.java,TypeName javaType = typeName(optionField.type());,if (typeName(optionField != null ) TypeName javaType = typeName(optionField.type());
RegisteredExtension.java,this.label = extension.getLabel();,if (extension != null ) this.label = extension.getLabel();
RegisteredExtension.java,this.name = extension.getName();,if (extension != null ) this.name = extension.getName();
RegisteredExtension.java,this.tag = extension.getTag();,if (extension != null ) this.tag = extension.getTag();
MessageTypeAdapter.java,TagMap tagMap = message.tagMap();,if (message != null ) TagMap tagMap = message.tagMap();
RuntimeMessageAdapter.java,ParameterizedType listType = (ParameterizedType) messageField.getGenericType();,if (messageField != null ) ParameterizedType listType = (ParameterizedType) messageField.getGenericType();
RuntimeMessageAdapter.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
TagMap.java,this.extensions = copyFrom.extensions.clone();,if (copyFrom != null ) this.extensions = copyFrom.extensions.clone();
TagMap.java,this.values = copyFrom.values.clone();,if (copyFrom != null ) this.values = copyFrom.values.clone();
TypeWriter.java,MethodSpec.Builder constructorBuilder = MethodSpec.constructorBuilder();,if (MethodSpec != null ) MethodSpec.Builder constructorBuilder = MethodSpec.constructorBuilder();
TypeWriter.java,"String fullyQualifiedName = optionField.packageName() + ""."" + optionField.name();","if (optionField != null ) String fullyQualifiedName = optionField.packageName() + ""."" + optionField.name();"
TypeWriter.java,TypeName javaType = javaGenerator.typeName(optionField.type());,if (javaGenerator != null ) TypeName javaType = javaGenerator.typeName(optionField.type());
TypeWriter.java,TypeSpec.Builder builder = TypeSpec.classBuilder(javaType.simpleName());,if (TypeSpec != null ) TypeSpec.Builder builder = TypeSpec.classBuilder(javaType.simpleName());
TypeWriter.java,String name = sanitize(field.name());,if (sanitize(field != null ) String name = sanitize(field.name());
TypeWriter.java,CodeBlock.Builder initializer = CodeBlock.builder();,if (CodeBlock != null ) CodeBlock.Builder initializer = CodeBlock.builder();
TypeWriter.java,Field extensionRoot = entry.getKey();,if (entry != null ) Field extensionRoot = entry.getKey();
TypeWriter.java,TypeName messageType = javaGenerator.typeName(field.type());,if (javaGenerator != null ) TypeName messageType = javaGenerator.typeName(field.type());
TypeWriter.java,int tag = field.tag();,if (field != null ) int tag = field.tag();
TypeWriter.java,MethodSpec.Builder result = MethodSpec.constructorBuilder();,if (MethodSpec != null ) MethodSpec.Builder result = MethodSpec.constructorBuilder();
TypeWriter.java,String sanitizedName = sanitize(field.name());,if (sanitize(field != null ) String sanitizedName = sanitize(field.name());
TypeWriter.java,List<Field> fields = type.fieldsAndOneOfFields();,if (type != null ) List<Field> fields = type.fieldsAndOneOfFields();
TypeWriter.java,TypeName javaType = javaGenerator.typeName(type.name());,if (javaGenerator != null ) TypeName javaType = javaGenerator.typeName(type.name());
TypeWriter.java,List<Field> fields = type.fieldsAndOneOfFields();,if (type != null ) List<Field> fields = type.fieldsAndOneOfFields();
TypeWriter.java,String name = sanitize(field.name());,if (sanitize(field != null ) String name = sanitize(field.name());
TypeWriter.java,List<Field> fields = type.fieldsAndOneOfFields();,if (type != null ) List<Field> fields = type.fieldsAndOneOfFields();
TypeWriter.java,String name = sanitize(field.name());,if (sanitize(field != null ) String name = sanitize(field.name());
TypeWriter.java,String name = sanitize(field.name());,if (sanitize(field != null ) String name = sanitize(field.name());
TypeWriter.java,List<Field> fields = type.fieldsAndOneOfFields();,if (type != null ) List<Field> fields = type.fieldsAndOneOfFields();
TypeWriter.java,TypeName javaType = javaGenerator.typeName(message.name());,if (javaGenerator != null ) TypeName javaType = javaGenerator.typeName(message.name());
TypeWriter.java,List<Field> fields = message.fieldsAndOneOfFields();,if (message != null ) List<Field> fields = message.fieldsAndOneOfFields();
TypeWriter.java,String fieldName = sanitize(field.name());,if (sanitize(field != null ) String fieldName = sanitize(field.name());
TypeWriter.java,String fieldName = sanitize(field.name());,if (sanitize(field != null ) String fieldName = sanitize(field.name());
TypeWriter.java,List<Field> requiredFields = message.getRequiredFields();,if (message != null ) List<Field> requiredFields = message.getRequiredFields();
TypeWriter.java,CodeBlock.Builder missingArgs = CodeBlock.builder();,if (CodeBlock != null ) CodeBlock.Builder missingArgs = CodeBlock.builder();
TypeWriter.java,Object defaultValue = field.getDefault();,if (field != null ) Object defaultValue = field.getDefault();
TypeWriter.java,CodeBlock.Builder builder = CodeBlock.builder();,if (CodeBlock != null ) CodeBlock.Builder builder = CodeBlock.builder();
TypeWriter.java,CodeBlock.Builder builder = CodeBlock.builder();,if (CodeBlock != null ) CodeBlock.Builder builder = CodeBlock.builder();
TypeWriter.java,Field field = (Field) entry.getKey();,if (entry != null ) Field field = (Field) entry.getKey();
TypeWriter.java,"CodeBlock valueInitializer = fieldInitializer(field.type(), entry.getValue());","if (entry != null ) CodeBlock valueInitializer = fieldInitializer(field.type(), entry.getValue());"
TypeWriter.java,ProtoType extendType = extend.type();,if (extend != null ) ProtoType extendType = extend.type();
TypeWriter.java,TypeName fieldType = javaGenerator.typeName(field.type());,if (javaGenerator != null ) TypeName fieldType = javaGenerator.typeName(field.type());
TypeWriter.java,CodeBlock.Builder initializer = CodeBlock.builder();,if (CodeBlock != null ) CodeBlock.Builder initializer = CodeBlock.builder();
TypeWriter.java,ImmutableList<TypeName> extensionClasses = extensionClassesBuilder.build().asList();,if (extensionClassesBuilder != null ) ImmutableList<TypeName> extensionClasses = extensionClassesBuilder.build().asList();
TypeWriter.java,CodeBlock.Builder initializer = CodeBlock.builder();,if (CodeBlock != null ) CodeBlock.Builder initializer = CodeBlock.builder();
TypeWriter.java,WireType extendType = extend.type();,if (extend != null ) WireType extendType = extend.type();
FieldBinding.java,this.label = protoField.label();,if (protoField != null ) this.label = protoField.label();
FieldBinding.java,this.tag = protoField.tag();,if (protoField != null ) this.tag = protoField.tag();
FieldBinding.java,this.type = WireType.get(protoField.type());,if (WireType != null ) this.type = WireType.get(protoField.type());
FieldBinding.java,this.redacted = protoField.redacted();,if (protoField != null ) this.redacted = protoField.redacted();
EnumType.java,String typeName = wireType.toString();,if (wireType != null ) String typeName = wireType.toString();
Extend.java,wireType = linker.resolveNamedType(element.name());,if (linker != null ) wireType = linker.resolveNamedType(element.name());
Linker.java,WireType type = extend.type();,if (extend != null ) WireType type = extend.type();
MessageType.java,String typeName = wireType.toString();,if (wireType != null ) String typeName = wireType.toString();
ProtoFile.java,"WireType wireType = WireType.get(packageName, type.name());","if (type != null ) WireType wireType = WireType.get(packageName, type.name());"
ProtoFile.java,"WireType wireType = WireType.get(packageName, service.name());","if (service != null ) WireType wireType = WireType.get(packageName, service.name());"
Service.java,String serviceName = wireType.toString();,if (wireType != null ) String serviceName = wireType.toString();
SimpleServiceFactory.java,TypeSpec.Builder typeBuilder = TypeSpec.interfaceBuilder(interfaceName.simpleName());,if (TypeSpec != null ) TypeSpec.Builder typeBuilder = TypeSpec.interfaceBuilder(interfaceName.simpleName());
SimpleServiceFactory.java,WireType requestType = rpc.requestType();,if (rpc != null ) WireType requestType = rpc.requestType();
SimpleServiceFactory.java,WireType responseType = rpc.responseType();,if (rpc != null ) WireType responseType = rpc.responseType();
CommandLineOptionsTest.java,String name = SimpleServiceFactory.class.getName();,if (SimpleServiceFactory != null ) String name = SimpleServiceFactory.class.getName();
SchemaLoader.java,ImmutableList<Path> directories = this.directories.build();,if (this != null ) ImmutableList<Path> directories = this.directories.build();
WireCompilerErrorTest.java,FileSystem fs = Jimfs.newFileSystem(Configuration.unix());,if (Jimfs != null ) FileSystem fs = Jimfs.newFileSystem(Configuration.unix());
WireCompiler.java,FileSystem fs = FileSystems.getDefault();,if (FileSystems != null ) FileSystem fs = FileSystems.getDefault();
WireCompiler.java,List<Path> paths = new ArrayList<>(protoPaths.size());,if (ArrayList<>(protoPaths != null ) List<Path> paths = new ArrayList<>(protoPaths.size());
WireCompiler.java,List<Path> sourcePaths = new ArrayList<>(sourceFileNames.size());,if (ArrayList<>(sourceFileNames != null ) List<Path> sourcePaths = new ArrayList<>(sourceFileNames.size());
WireCompilerTest.java,List<Path> paths = new ArrayList<>(protoPaths.size());,if (ArrayList<>(protoPaths != null ) List<Path> paths = new ArrayList<>(protoPaths.size());
Loader.java,FileSystem fs = protoPath.getFileSystem();,if (protoPath != null ) FileSystem fs = protoPath.getFileSystem();
WireCompilerTest.java,Loader loader = Loader.forSearchPaths(options.protoPaths());,if (Loader != null ) Loader loader = Loader.forSearchPaths(options.protoPaths());
SchemaBuilder.java,String protoFile = paths.get(location.path());,if (paths != null ) String protoFile = paths.get(location.path());
TypeWriter.java,boolean isScalar = field.type().isScalar();,if (field != null ) boolean isScalar = field.type().isScalar();
TypeWriter.java,boolean isEnum = javaGenerator.isEnum(field.type());,if (javaGenerator != null ) boolean isEnum = javaGenerator.isEnum(field.type());
FieldBinding.java,this.datatype = protoField.type();,if (protoField != null ) this.datatype = protoField.type();
Pruner.java,WireType enclosingType = type.name().enclosingType();,if (type != null ) WireType enclosingType = type.name().enclosingType();
Extend.java,"wireType = linker.resolveNamedType(packageName, element.name());","if (element != null ) wireType = linker.resolveNamedType(packageName, element.name());"
Field.java,"type = linker.resolveType(packageName, element.type());","if (element != null ) type = linker.resolveType(packageName, element.type());"
Rpc.java,"requestType = linker.resolveNamedType(packageName, element.requestType());","if (element != null ) requestType = linker.resolveNamedType(packageName, element.requestType());"
Rpc.java,"responseType = linker.resolveNamedType(packageName, element.responseType());","if (element != null ) responseType = linker.resolveNamedType(packageName, element.responseType());"
Type.java,String packageName = wireType.packageName();,if (wireType != null ) String packageName = wireType.packageName();
SchemaWireAdapterTest.java,WireAdapter<Object> adapter = factory.get(cafeDrink.name());,if (factory != null ) WireAdapter<Object> adapter = factory.get(cafeDrink.name());
SchemaWireAdapterTest.java,WireAdapter<Object> adapter = factory.get(cafeDrink.name());,if (factory != null ) WireAdapter<Object> adapter = factory.get(cafeDrink.name());
Pruner.java,WireType wireType = type.name().enclosingType();,if (type != null ) WireType wireType = type.name().enclosingType();
Service.java,ImmutableList<Rpc> retainedRpcs = retainedRpcsBuilde.build();,if (retainedRpcsBuilde != null ) ImmutableList<Rpc> retainedRpcs = retainedRpcsBuilde.build();
MessageTypeAdapter.java,TagMap tagMap = message.unknownFields();,if (message != null ) TagMap tagMap = message.unknownFields();
RuntimeMessageAdapter.java,size += message.getUnknownFieldsSerializedSize();,if (message != null ) size += message.getUnknownFieldsSerializedSize();
RuntimeMessageAdapter.java,FieldEncoding fieldEncoding = reader.peekFieldEncoding();,if (reader != null ) FieldEncoding fieldEncoding = reader.peekFieldEncoding();
TypeWriter.java,boolean hasExtensions = !type.extensions().isEmpty();,if (!type != null ) boolean hasExtensions = !type.extensions().isEmpty();
MessageTypeAdapter.java,NewTagMap tagMap = message.unknownFields();,if (message != null ) NewTagMap tagMap = message.unknownFields();
ExtensionMap.java,data = other.data.clone();,if (other != null ) data = other.data.clone();
TagMap.java,Integer key = entry.getKey();,if (entry != null ) Integer key = entry.getKey();
TagMap.java,elementsByTag[key] = entry.getValue();,if (entry != null ) elementsByTag[key] = entry.getValue();
UnknownFieldMap.java,int tag = entry.getKey();,if (entry != null ) int tag = entry.getKey();
UnknownFieldMap.java,int tag = entry.getKey();,if (entry != null ) int tag = entry.getKey();
RetrofitServiceFactory.java,TypeSpec.Builder typeBuilder = TypeSpec.interfaceBuilder(interfaceName.simpleName());,if (TypeSpec != null ) TypeSpec.Builder typeBuilder = TypeSpec.interfaceBuilder(interfaceName.simpleName());
RetrofitServiceFactory.java,WireType requestType = rpc.requestType();,if (rpc != null ) WireType requestType = rpc.requestType();
RetrofitServiceFactory.java,WireType responseType = rpc.responseType();,if (rpc != null ) WireType responseType = rpc.responseType();
RxJavaServiceFactory.java,TypeSpec.Builder typeBuilder = TypeSpec.classBuilder(interfaceName.simpleName());,if (TypeSpec != null ) TypeSpec.Builder typeBuilder = TypeSpec.classBuilder(interfaceName.simpleName());
RxJavaServiceFactory.java,TypeSpec.Builder endpointBuilder = TypeSpec.interfaceBuilder(endpointName.simpleName());,if (TypeSpec != null ) TypeSpec.Builder endpointBuilder = TypeSpec.interfaceBuilder(endpointName.simpleName());
RxJavaServiceFactory.java,WireType requestType = rpc.requestType();,if (rpc != null ) WireType requestType = rpc.requestType();
RxJavaServiceFactory.java,WireType responseType = rpc.responseType();,if (rpc != null ) WireType responseType = rpc.responseType();
RxJavaServiceFactory.java,String methodName = upperToLowerCamel(rpc.name());,if (upperToLowerCamel(rpc != null ) String methodName = upperToLowerCamel(rpc.name());
SchemaWireAdapterFactory.java,FieldAdapter fieldAdapter = fieldsByName.get(entry.getKey());,if (fieldsByName != null ) FieldAdapter fieldAdapter = fieldsByName.get(entry.getKey());
SchemaWireAdapterFactory.java,FieldAdapter fieldAdapter = fieldsByName.get(entry.getKey());,if (fieldsByName != null ) FieldAdapter fieldAdapter = fieldsByName.get(entry.getKey());
RetrofitServiceFactory.java,Type.Name requestType = rpc.requestType();,if (rpc != null ) Type.Name requestType = rpc.requestType();
RetrofitServiceFactory.java,Type.Name responseType = rpc.responseType();,if (rpc != null ) Type.Name responseType = rpc.responseType();
RxJavaServiceFactory.java,Type.Name requestType = rpc.requestType();,if (rpc != null ) Type.Name requestType = rpc.requestType();
RxJavaServiceFactory.java,Type.Name responseType = rpc.responseType();,if (rpc != null ) Type.Name responseType = rpc.responseType();
SimpleServiceFactory.java,Type.Name requestType = rpc.requestType();,if (rpc != null ) Type.Name requestType = rpc.requestType();
SimpleServiceFactory.java,Type.Name responseType = rpc.responseType();,if (rpc != null ) Type.Name responseType = rpc.responseType();
TypeWriter.java,Type.Name extendType = extend.type();,if (extend != null ) Type.Name extendType = extend.type();
Extend.java,"name = linker.resolveNamedType(packageName, element.name());","if (element != null ) name = linker.resolveNamedType(packageName, element.name());"
Linker.java,Type.Name type = extend.type();,if (extend != null ) Type.Name type = extend.type();
Pruner.java,Type.Name enclosingTypeName = type.name().enclosingTypeName();,if (type != null ) Type.Name enclosingTypeName = type.name().enclosingTypeName();
Service.java,String serviceName = name.toString();,if (name != null ) String serviceName = name.toString();
Type.java,String packageName = name.packageName();,if (name != null ) String packageName = name.packageName();
ExtendableMessage.java,"return extensionMap == null ? ""{}"" : extensionMap.toString();","if (extensionMap != null ) return extensionMap == null ? ""{}"" : extensionMap.toString();"
TypeAdapter.java,int value = reader.readByte();,if (reader != null ) int value = reader.readByte();
TypeAdapter.java,long token = reader.beginMessage();,if (reader != null ) long token = reader.beginMessage();
RuntimeMessageAdapter.java,long token = input.beginLengthDelimited();,if (input != null ) long token = input.beginLengthDelimited();
TypeAdapter.java,long token = reader.beginLengthDelimited();,if (reader != null ) long token = reader.beginLengthDelimited();
TypeAdapter.java,long token = reader.beginLengthDelimited();,if (reader != null ) long token = reader.beginLengthDelimited();
RuntimeMessageAdapter.java,int tag = input.readTag();,if (input != null ) int tag = input.readTag();
RuntimeMessageAdapter.java,WireType type = input.peekType();,if (input != null ) WireType type = input.peekType();
SchemaTypeAdapterFactory.java,int tag = reader.readTag();,if (reader != null ) int tag = reader.readTag();
MessageTypeAdapter.java,this.fieldBindingMap = messageAdapter.getFieldBindingMap();,if (messageAdapter != null ) this.fieldBindingMap = messageAdapter.getFieldBindingMap();
MessageTypeAdapter.java,Datatype datatype = extension.getDatatype();,if (extension != null ) Datatype datatype = extension.getDatatype();
RuntimeFieldBinding.java,Message.Datatype datatype = protoField.type();,if (protoField != null ) Message.Datatype datatype = protoField.type();
RuntimeFieldBinding.java,Message.Label label = protoField.label();,if (protoField != null ) Message.Label label = protoField.label();
RuntimeFieldBinding.java,int tag = protoField.tag();,if (protoField != null ) int tag = protoField.tag();
RuntimeFieldBinding.java,boolean redacted = protoField.redacted();,if (protoField != null ) boolean redacted = protoField.redacted();
RuntimeFieldBinding.java,String name = messageField.getName();,if (messageField != null ) String name = messageField.getName();
RuntimeMessageAdapter.java,int tag = protoField.tag();,if (protoField != null ) int tag = protoField.tag();
RuntimeMessageAdapter.java,int tag = extension.getTag();,if (extension != null ) int tag = extension.getTag();
RuntimeMessageAdapter.java,int tag = extension.getTag();,if (extension != null ) int tag = extension.getTag();
RuntimeMessageAdapter.java,label = extension.getLabel();,if (extension != null ) label = extension.getLabel();
RuntimeRedactor.java,Field field = builderClass.getDeclaredField(messageField.getName());,if (builderClass != null ) Field field = builderClass.getDeclaredField(messageField.getName());
RuntimeRedactor.java,redactedValue = Collections.emptyList();,if (Collections != null ) redactedValue = Collections.emptyList();
WireCompilerTest.java,Loader loader = Loader.forBaseDirectory(options.protoPath());,if (Loader != null ) Loader loader = Loader.forBaseDirectory(options.protoPath());
SchemaTest.java,String protoFile = paths.get(location.path());,if (paths != null ) String protoFile = paths.get(location.path());
ReflectiveFieldBinding.java,int tag = protoField.tag();,if (protoField != null ) int tag = protoField.tag();
ReflectiveFieldBinding.java,boolean redacted = protoField.redacted();,if (protoField != null ) boolean redacted = protoField.redacted();
ReflectiveMessageAdapter.java,Label label = extension.getLabel();,if (extension != null ) Label label = extension.getLabel();
ReflectiveMessageAdapter.java,Label label = extension.getLabel();,if (extension != null ) Label label = extension.getLabel();
UnknownFieldMap.java,int tagSize = ProtoWriter.tagSize(entry.getKey());,if (ProtoWriter != null ) int tagSize = ProtoWriter.tagSize(entry.getKey());
UnknownFieldMap.java,size += tagSize + value.dataSize();,if (value != null ) size += tagSize + value.dataSize();
ReflectiveMessageAdapter.java,Datatype datatype = extension.getDatatype();,if (extension != null ) Datatype datatype = extension.getDatatype();
UnknownFieldMap.java,size += tagSize + value.getSerializedSize();,if (value != null ) size += tagSize + value.getSerializedSize();
ReflectiveMessageAdapter.java,Datatype datatype = extension.getDatatype();,if (extension != null ) Datatype datatype = extension.getDatatype();
ReflectiveMessageAdapter.java,datatype = extension.getDatatype();,if (extension != null ) datatype = extension.getDatatype();
ReflectiveMessageAdapter.java,long token = input.beginLengthDelimited();,if (input != null ) long token = input.beginLengthDelimited();
ReflectiveMessageAdapter.java,messageClass = (Class<Message>) extension.getMessageType();,if (extension != null ) messageClass = (Class<Message>) extension.getMessageType();
ReflectiveMessageAdapter.java,enumType = extension.getEnumType();,if (extension != null ) enumType = extension.getEnumType();
UnknownFieldMap.java,size += value.getSerializedSize();,if (value != null ) size += value.getSerializedSize();
ReflectiveMessageAdapter.java,int tagAndType = input.readTag();,if (input != null ) int tagAndType = input.readTag();
ReflectiveMessageAdapter.java,long start = input.getPosition();,if (input != null ) long start = input.getPosition();
ReflectiveMessageAdapter.java,Builder<M> builder = builderType.newInstance();,if (builderType != null ) Builder<M> builder = builderType.newInstance();
ReflectiveMessageAdapter.java,int tagAndType = input.readTag();,if (input != null ) int tagAndType = input.readTag();
ReflectiveMessageAdapter.java,datatype = extension.getDatatype();,if (extension != null ) datatype = extension.getDatatype();
ReflectiveMessageAdapter.java,label = extension.getLabel();,if (extension != null ) label = extension.getLabel();
ReflectiveMessageAdapter.java,long start = input.getPosition();,if (input != null ) long start = input.getPosition();
MessageTypeAdapter.java,this.fieldInfoMap = messageAdapter.getFieldInfoMap();,if (messageAdapter != null ) this.fieldInfoMap = messageAdapter.getFieldInfoMap();
ReflectiveMessageAdapter.java,int tag = annotation.tag();,if (annotation != null ) int tag = annotation.tag();
ReflectiveMessageAdapter.java,String name = messageField.getName();,if (messageField != null ) String name = messageField.getName();
ReflectiveMessageAdapter.java,Datatype datatype = annotation.type();,if (annotation != null ) Datatype datatype = annotation.type();
MessageTypeAdapter.java,this.type = (Class<M>) type.getRawType();,if (type != null ) this.type = (Class<M>) type.getRawType();
MessageAdapter.java,int tag = annotation.tag();,if (annotation != null ) int tag = annotation.tag();
MessageAdapter.java,String name = messageField.getName();,if (messageField != null ) String name = messageField.getName();
MessageAdapter.java,Datatype datatype = annotation.type();,if (annotation != null ) Datatype datatype = annotation.type();
MessageAdapter.java,size += message.getUnknownFieldsSerializedSize();,if (message != null ) size += message.getUnknownFieldsSerializedSize();
MessageAdapter.java,int tag = extension.getTag();,if (extension != null ) int tag = extension.getTag();
MessageAdapter.java,Datatype datatype = extension.getDatatype();,if (extension != null ) Datatype datatype = extension.getDatatype();
MessageAdapter.java,Label label = extension.getLabel();,if (extension != null ) Label label = extension.getLabel();
MessageAdapter.java,int tag = extension.getTag();,if (extension != null ) int tag = extension.getTag();
MessageAdapter.java,Datatype datatype = extension.getDatatype();,if (extension != null ) Datatype datatype = extension.getDatatype();
MessageAdapter.java,Label label = extension.getLabel();,if (extension != null ) Label label = extension.getLabel();
MessageAdapter.java,Builder<M> builder = builderType.newInstance();,if (builderType != null ) Builder<M> builder = builderType.newInstance();
MessageAdapter.java,int tagAndType = input.readTag();,if (input != null ) int tagAndType = input.readTag();
MessageAdapter.java,datatype = extension.getDatatype();,if (extension != null ) datatype = extension.getDatatype();
MessageAdapter.java,label = extension.getLabel();,if (extension != null ) label = extension.getLabel();
MessageAdapter.java,long start = input.getPosition();,if (input != null ) long start = input.getPosition();
MessageAdapter.java,messageClass = (Class<Message>) extension.getMessageType();,if (extension != null ) messageClass = (Class<Message>) extension.getMessageType();
MessageAdapter.java,enumType = extension.getEnumType();,if (extension != null ) enumType = extension.getEnumType();
TypeWriter.java,label = field.label().toString();,if (field != null ) label = field.label().toString();
OptionElement.java,String name = option.name();,if (option != null ) String name = option.name();
OptionElement.java,Object value = option.value();,if (option != null ) Object value = option.value();
EnumElement.java,int tag = constant.tag();,if (constant != null ) int tag = constant.tag();
EnumElement.java,String name = constant.name();,if (constant != null ) String name = constant.name();
MessageElement.java,int tag = field.tag();,if (field != null ) int tag = field.tag();
Extend.java,"name = linker.resolveNamedType(packageName, element.name());","if (element != null ) name = linker.resolveNamedType(packageName, element.name());"
Linker.java,this.enclosingTypes = Collections.emptyList();,if (Collections != null ) this.enclosingTypes = Collections.emptyList();
WireCompiler.java,List<ProtoFile> protoFiles = loader.loaded();,if (loader != null ) List<ProtoFile> protoFiles = loader.loaded();
UnknownFieldMap.java,size += WireOutput.varintTagSize(entry.getKey());,if (WireOutput != null ) size += WireOutput.varintTagSize(entry.getKey());
UnknownFieldMap.java,size += value.getSerializedSize();,if (value != null ) size += value.getSerializedSize();
UnknownFieldMap.java,int tag = entry.getKey();,if (entry != null ) int tag = entry.getKey();
WireCompiler.java,List<WireProtoFile> wireProtoFiles = loader.loaded();,if (loader != null ) List<WireProtoFile> wireProtoFiles = loader.loaded();
ProtoFile.java,String packageName = protoFile.packageName();,if (protoFile != null ) String packageName = protoFile.packageName();
Extend.java,"protoTypeName = linker.resolveNamedType(packageName, element.name());","if (element != null ) protoTypeName = linker.resolveNamedType(packageName, element.name());"
MessageType.java,ImmutableList<WireType> retainedNestedTypes = retainedNestedTypesBuilder.build();,if (retainedNestedTypesBuilder != null ) ImmutableList<WireType> retainedNestedTypes = retainedNestedTypesBuilder.build();
Pruner.java,ProtoTypeName enclosingTypeName = type.protoTypeName().enclosingTypeName();,if (type != null ) ProtoTypeName enclosingTypeName = type.protoTypeName().enclosingTypeName();
Service.java,String serviceName = protoTypeName.toString();,if (protoTypeName != null ) String serviceName = protoTypeName.toString();
Service.java,ImmutableList<WireRpc> retainedRpcs = retainedRpcsBuilde.build();,if (retainedRpcsBuilde != null ) ImmutableList<WireRpc> retainedRpcs = retainedRpcsBuilde.build();
WireProtoFile.java,"ProtoTypeName protoTypeName = ProtoTypeName.get(packageName, type.name());","if (type != null ) ProtoTypeName protoTypeName = ProtoTypeName.get(packageName, type.name());"
WireProtoFile.java,"ProtoTypeName protoTypeName = ProtoTypeName.get(packageName, service.name());","if (service != null ) ProtoTypeName protoTypeName = ProtoTypeName.get(packageName, service.name());"
RetrofitServiceFactory.java,ProtoTypeName requestType = rpc.requestType();,if (rpc != null ) ProtoTypeName requestType = rpc.requestType();
RetrofitServiceFactory.java,ProtoTypeName responseType = rpc.responseType();,if (rpc != null ) ProtoTypeName responseType = rpc.responseType();
RxJavaServiceFactory.java,ProtoTypeName requestType = rpc.requestType();,if (rpc != null ) ProtoTypeName requestType = rpc.requestType();
RxJavaServiceFactory.java,ProtoTypeName responseType = rpc.responseType();,if (rpc != null ) ProtoTypeName responseType = rpc.responseType();
SimpleServiceFactory.java,ProtoTypeName requestType = rpc.requestType();,if (rpc != null ) ProtoTypeName requestType = rpc.requestType();
SimpleServiceFactory.java,ProtoTypeName responseType = rpc.responseType();,if (rpc != null ) ProtoTypeName responseType = rpc.responseType();
TypeWriter.java,WireField extensionRoot = entry.getKey();,if (entry != null ) WireField extensionRoot = entry.getKey();
TypeWriter.java,List<WireField> fields = type.fieldsAndOneOfFields();,if (type != null ) List<WireField> fields = type.fieldsAndOneOfFields();
TypeWriter.java,TypeName javaType = javaGenerator.typeName(type.protoTypeName());,if (javaGenerator != null ) TypeName javaType = javaGenerator.typeName(type.protoTypeName());
TypeWriter.java,List<WireField> fields = type.fieldsAndOneOfFields();,if (type != null ) List<WireField> fields = type.fieldsAndOneOfFields();
TypeWriter.java,List<WireField> fields = type.fieldsAndOneOfFields();,if (type != null ) List<WireField> fields = type.fieldsAndOneOfFields();
TypeWriter.java,List<WireField> fields = type.fieldsAndOneOfFields();,if (type != null ) List<WireField> fields = type.fieldsAndOneOfFields();
TypeWriter.java,TypeName javaType = javaGenerator.typeName(message.protoTypeName());,if (javaGenerator != null ) TypeName javaType = javaGenerator.typeName(message.protoTypeName());
TypeWriter.java,List<WireField> fields = message.fieldsAndOneOfFields();,if (message != null ) List<WireField> fields = message.fieldsAndOneOfFields();
TypeWriter.java,List<WireField> requiredFields = message.getRequiredFields();,if (message != null ) List<WireField> requiredFields = message.getRequiredFields();
TypeWriter.java,WireField field = (WireField) entry.getKey();,if (entry != null ) WireField field = (WireField) entry.getKey();
TypeWriter.java,ProtoTypeName extendType = extend.protoTypeName();,if (extend != null ) ProtoTypeName extendType = extend.protoTypeName();
WireType.java,String packageName = protoTypeName.packageName();,if (protoTypeName != null ) String packageName = protoTypeName.packageName();
MessageAdapter.java,int messageSize = message.getSerializedSize();,if (message != null ) int messageSize = message.getSerializedSize();
MessageSerializedForm.java,this.bytes = message.toByteArray();,if (message != null ) this.bytes = message.toByteArray();
WireOutput.java,byte[] value = bytes.toByteArray();,if (bytes != null ) byte[] value = bytes.toByteArray();
OneOfTest.java,byte[] bytes = message.toByteArray();,if (message != null ) byte[] bytes = message.toByteArray();
WireTest.java,byte[] data = person.toByteArray();,if (person != null ) byte[] data = person.toByteArray();
WireTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
WireTest.java,byte[] data = msg.toByteArray();,if (msg != null ) byte[] data = msg.toByteArray();
WireTest.java,byte[] newData = newMsg.toByteArray();,if (newMsg != null ) byte[] newData = newMsg.toByteArray();
WireTest.java,int msgSerializedSize = msg.getSerializedSize();,if (msg != null ) int msgSerializedSize = msg.getSerializedSize();
WireTest.java,byte[] noListBytes = noListMessage.toByteArray();,if (noListMessage != null ) byte[] noListBytes = noListMessage.toByteArray();
WireTest.java,byte[] emptyListBytes = emptyListMessage.toByteArray();,if (emptyListMessage != null ) byte[] emptyListBytes = emptyListMessage.toByteArray();
WireTest.java,byte[] data = person.toByteArray();,if (person != null ) byte[] data = person.toByteArray();
WireTest.java,byte[] newData = result.toByteArray();,if (result != null ) byte[] newData = result.toByteArray();
TestAllTypes.java,int count = allTypes.getSerializedSize();,if (allTypes != null ) int count = allTypes.getSerializedSize();
TestAllTypes.java,output = allTypes.toByteArray();,if (allTypes != null ) output = allTypes.toByteArray();
TestAllTypes.java,byte[] data = withUnknownField.toByteArray();,if (withUnknownField != null ) byte[] data = withUnknownField.toByteArray();
BuilderAdapter.java,String builderTypeName = builderType.getName();,if (builderType != null ) String builderTypeName = builderType.getName();
AbstractServiceWriter.java,String requestType = rpc.requestType().toString();,if (rpc != null ) String requestType = rpc.requestType().toString();
ConsoleWireLogger.java,msg = artifact.file().toString();,if (artifact != null ) msg = artifact.file().toString();
FieldInfo.java,String type = field.type().toString();,if (field != null ) String type = field.type().toString();
MessageWriter.java,List<EnumConstantElement> values = enumType.constants();,if (enumType != null ) List<EnumConstantElement> values = enumType.constants();
MessageWriter.java,Set<String> fqNames = optionsMap.keySet();,if (optionsMap != null ) Set<String> fqNames = optionsMap.keySet();
MessageWriter.java,List<OptionElement> valueOptions = value.options();,if (value != null ) List<OptionElement> valueOptions = value.options();
MessageWriter.java,String fqName = entry.getKey();,if (entry != null ) String fqName = entry.getKey();
MessageWriter.java,String name = optionByName.name();,if (optionByName != null ) String name = optionByName.name();
MessageWriter.java,String name = messageType.name();,if (messageType != null ) String name = messageType.name();
MessageWriter.java,String fqName = entry.getKey();,if (entry != null ) String fqName = entry.getKey();
MessageWriter.java,String fqName = entry.getKey();,if (entry != null ) String fqName = entry.getKey();
MessageWriter.java,List<OptionElement> options = new ArrayList<OptionElement>(field.options());,if (ArrayList<OptionElement>(field != null ) List<OptionElement> options = new ArrayList<OptionElement>(field.options());
MessageWriter.java,String name = iterator.next().name();,if (iterator != null ) String name = iterator.next().name();
MessageWriter.java,String fqName = entry.getKey();,if (entry != null ) String fqName = entry.getKey();
MessageWriter.java,int tag = field.tag();,if (field != null ) int tag = field.tag();
MessageWriter.java,String fieldType = field.type().toString();,if (field != null ) String fieldType = field.type().toString();
MessageWriter.java,String sanitizedName = sanitize(field.name());,if (sanitize(field != null ) String sanitizedName = sanitize(field.name());
MessageWriter.java,String name = sanitize(field.name());,if (sanitize(field != null ) String name = sanitize(field.name());
MessageWriter.java,String name = sanitize(field.name());,if (sanitize(field != null ) String name = sanitize(field.name());
MessageWriter.java,String name = sanitize(field.name());,if (sanitize(field != null ) String name = sanitize(field.name());
MessageWriter.java,String sanitizedFieldName = sanitize(field.name());,if (sanitize(field != null ) String sanitizedFieldName = sanitize(field.name());
MessageWriter.java,OptionElement defaultOption = field.getDefault();,if (field != null ) OptionElement defaultOption = field.getDefault();
OptionsMapMaker.java,List<OptionElement> options = type.options();,if (type != null ) List<OptionElement> options = type.options();
OptionsMapMaker.java,List<OptionElement> options = type.options();,if (type != null ) List<OptionElement> options = type.options();
OptionsMapMaker.java,String key = option.name();,if (option != null ) String key = option.name();
OptionsMapMaker.java,"int firstDotAfterExtensionIndex = name.indexOf('.', fqName.length());","if (fqName != null ) int firstDotAfterExtensionIndex = name.indexOf('.', fqName.length());"
OptionsMapMaker.java,int endIndex = name.length();,if (name != null ) int endIndex = name.length();
OptionsMapMaker.java,String javaPackage = compiler.getJavaPackage();,if (compiler != null ) String javaPackage = compiler.getJavaPackage();
OptionsMapMaker.java,String typeBeingGenerated = compiler.getTypeBeingGenerated();,if (compiler != null ) String typeBeingGenerated = compiler.getTypeBeingGenerated();
OptionsMapMaker.java,String nestedName = valueEntry.getKey();,if (valueEntry != null ) String nestedName = valueEntry.getKey();
OptionsMapMaker.java,String nestedName = value.name();,if (value != null ) String nestedName = value.name();
OptionsMapMaker.java,String key = entry.getKey();,if (entry != null ) String key = entry.getKey();
OptionsMapMaker.java,ExtensionInfo extInfo = compiler.getExtension(entry.getKey());,if (compiler != null ) ExtensionInfo extInfo = compiler.getExtension(entry.getKey());
OptionsMapMaker.java,String key = entry.getKey();,if (entry != null ) String key = entry.getKey();
OptionsMapMaker.java,String type = (String) entry.getValue();,if (entry != null ) String type = (String) entry.getValue();
WireCompiler.java,this.sourceFileName = entry.getKey();,if (entry != null ) this.sourceFileName = entry.getKey();
WireCompiler.java,this.protoFile = entry.getValue();,if (entry != null ) this.protoFile = entry.getValue();
WireCompiler.java,this.protoFileName = protoFileName(protoFile.filePath());,if (protoFileName(protoFile != null ) this.protoFileName = protoFileName(protoFile.filePath());
WireCompiler.java,ServiceElement limitedService = serviceBuilder.build();,if (serviceBuilder != null ) ServiceElement limitedService = serviceBuilder.build();
WireCompiler.java,int extensionsCount = extensionClasses.size();,if (extensionClasses != null ) int extensionsCount = extensionClasses.size();
WireCompiler.java,classes = sb.toString();,if (sb != null ) classes = sb.toString();
WireCompiler.java,int count = typesToEmit.size();,if (typesToEmit != null ) int count = typesToEmit.size();
WireCompiler.java,int newCount = typesToEmit.size();,if (typesToEmit != null ) int newCount = typesToEmit.size();
WireCompiler.java,String typeName = extend.qualifiedName();,if (extend != null ) String typeName = extend.qualifiedName();
WireCompiler.java,String fqName = service.qualifiedName();,if (service != null ) String fqName = service.qualifiedName();
WireCompiler.java,String name = type.name();,if (type != null ) String name = type.name();
WireCompiler.java,String fqName = type.qualifiedName();,if (type != null ) String fqName = type.qualifiedName();
WireCompiler.java,String fieldType = field.type().toString();,if (field != null ) String fieldType = field.type().toString();
WireCompiler.java,String fieldType = field.type().toString();,if (field != null ) String fieldType = field.type().toString();
WireCompiler.java,"String fqName = prefixWithPackageName(protoFile, field.name());","if (field != null ) String fqName = prefixWithPackageName(protoFile, field.name());"
WireCompiler.java,type = field.type().toString();,if (field != null ) type = field.type().toString();
WireCompiler.java,String location = protoFileName(protoFile.filePath());,if (protoFileName(protoFile != null ) String location = protoFileName(protoFile.filePath());
WireCompiler.java,String name = type.name();,if (type != null ) String name = type.name();
WireCompiler.java,String fqName = type.qualifiedName();,if (type != null ) String fqName = type.qualifiedName();
WireCompiler.java,String fieldType = field.type().toString();,if (field != null ) String fieldType = field.type().toString();
WireCompiler.java,String fqMessageName = messageType.qualifiedName();,if (messageType != null ) String fqMessageName = messageType.qualifiedName();
WireCompiler.java,"String key = fqMessageName + ""$"" + field.name();","if (field != null ) String key = fqMessageName + ""$"" + field.name();"
WireCompiler.java,String serviceFQName = service.qualifiedName();,if (service != null ) String serviceFQName = service.qualifiedName();
WireCompiler.java,"String fqName = fullyQualifiedJavaName(null, extend.qualifiedName());","if (extend != null ) String fqName = fullyQualifiedJavaName(null, extend.qualifiedName());"
WireCompiler.java,List<ExtendElement> declarations = protoFile.extendDeclarations();,if (protoFile != null ) List<ExtendElement> declarations = protoFile.extendDeclarations();
WireCompiler.java,String name = declaration.qualifiedName();,if (declaration != null ) String name = declaration.qualifiedName();
WireCompiler.java,String fullyQualifiedName = extend.qualifiedName();,if (extend != null ) String fullyQualifiedName = extend.qualifiedName();
WireCompiler.java,String fieldType = field.type().toString();,if (field != null ) String fieldType = field.type().toString();
WireCompiler.java,String extensionName = field.name();,if (field != null ) String extensionName = field.name();
WireCompiler.java,String fqName = prefixWithPackageName(field.name());,if (prefixWithPackageName(field != null ) String fqName = prefixWithPackageName(field.name());
WireCompiler.java,int tag = field.tag();,if (field != null ) int tag = field.tag();
WireCompiler.java,String fieldType = field.type().toString();,if (field != null ) String fieldType = field.type().toString();
WireCompiler.java,FieldElement.Label label = field.label();,if (field != null ) FieldElement.Label label = field.label();
CommandLineOptionsTest.java,String name = SimpleServiceWriter.class.getName();,if (SimpleServiceWriter != null ) String name = SimpleServiceWriter.class.getName();
TypeWriter.java,MethodSpec.Builder constructorBuilder = MethodSpec.constructorBuilder();,if (MethodSpec != null ) MethodSpec.Builder constructorBuilder = MethodSpec.constructorBuilder();
TypeWriter.java,WireOption fieldDefault = field.getDefault();,if (field != null ) WireOption fieldDefault = field.getDefault();
TypeWriter.java,WireEnumConstant defaultValue = javaGenerator.enumDefault(field.type());,if (javaGenerator != null ) WireEnumConstant defaultValue = javaGenerator.enumDefault(field.type());
Linker.java,"String[] path = resolveFieldPath(fieldPath, extensionsForType.keySet());","if (extensionsForType != null ) String[] path = resolveFieldPath(fieldPath, extensionsForType.keySet());"
Linker.java,ProtoTypeName valueType = field.type();,if (field != null ) ProtoTypeName valueType = field.type();
Linker.java,WireType wireType = protoTypeNames.get(valueType.toString());,if (protoTypeNames != null ) WireType wireType = protoTypeNames.get(valueType.toString());
WireField.java,type = linker.protoTypeName(element.type());,if (linker != null ) type = linker.protoTypeName(element.type());
WireOption.java,"fieldPath = linker.fieldPath(optionType, element.name());","if (element != null ) fieldPath = linker.fieldPath(optionType, element.name());"
WireProtoFile.java,String protoPackage = protoFile.packageName();,if (protoFile != null ) String protoPackage = protoFile.packageName();
WireProtoFile.java,"ProtoTypeName protoTypeName = ProtoTypeName.get(protoPackage, type.name());","if (type != null ) ProtoTypeName protoTypeName = ProtoTypeName.get(protoPackage, type.name());"
WireProtoFile.java,"ProtoTypeName protoTypeName = ProtoTypeName.get(protoPackage, service.name());","if (service != null ) ProtoTypeName protoTypeName = ProtoTypeName.get(protoPackage, service.name());"
WireRpc.java,requestType = linker.protoTypeName(element.requestType());,if (linker != null ) requestType = linker.protoTypeName(element.requestType());
WireRpc.java,responseType = linker.protoTypeName(element.responseType());,if (linker != null ) responseType = linker.protoTypeName(element.responseType());
MessageWriter.java,String name = sanitize(oneOfElement.name());,if (sanitize(oneOfElement != null ) String name = sanitize(oneOfElement.name());
MessageWriter.java,String name = sanitize(oneOfElement.name());,if (sanitize(oneOfElement != null ) String name = sanitize(oneOfElement.name());
MessageWriter.java,String oneOfName = sanitize(oneOfElement.name());,if (sanitize(oneOfElement != null ) String oneOfName = sanitize(oneOfElement.name());
MessageWriter.java,String oneOfName = sanitize(oneOfElement.name());,if (sanitize(oneOfElement != null ) String oneOfName = sanitize(oneOfElement.name());
MessageWriter.java,String name = sanitize(oneOfElement.name());,if (sanitize(oneOfElement != null ) String name = sanitize(oneOfElement.name());
MessageWriter.java,String sanitizedOneOfName = sanitize(oneOfElement.name());,if (sanitize(oneOfElement != null ) String sanitizedOneOfName = sanitize(oneOfElement.name());
MessageWriter.java,List<FieldElement> fields = messageType.fields();,if (messageType != null ) List<FieldElement> fields = messageType.fields();
MessageWriter.java,List<FieldElement> fields = messageType.fields();,if (messageType != null ) List<FieldElement> fields = messageType.fields();
MessageWriter.java,List<FieldElement> fields = messageType.fields();,if (messageType != null ) List<FieldElement> fields = messageType.fields();
MessageWriter.java,String sanitized = sanitize(field.name());,if (sanitize(field != null ) String sanitized = sanitize(field.name());
MessageWriter.java,String name = sanitize(oneOfElement.name());,if (sanitize(oneOfElement != null ) String name = sanitize(oneOfElement.name());
MessageWriter.java,String name = sanitize(oneOfElement.name());,if (sanitize(oneOfElement != null ) String name = sanitize(oneOfElement.name());
MessageWriter.java,String oneOfName = sanitize(oneOfElement.name());,if (sanitize(oneOfElement != null ) String oneOfName = sanitize(oneOfElement.name());
MessageWriter.java,String oneOfName = sanitize(oneOfElement.name());,if (sanitize(oneOfElement != null ) String oneOfName = sanitize(oneOfElement.name());
MessageWriter.java,String name = sanitize(oneOfElement.name());,if (sanitize(oneOfElement != null ) String name = sanitize(oneOfElement.name());
MessageWriter.java,String sanitizedFieldName = sanitize(field.name());,if (sanitize(field != null ) String sanitizedFieldName = sanitize(field.name());
MessageWriter.java,String sanitizedOneOfName = sanitize(oneOfElement.name());,if (sanitize(oneOfElement != null ) String sanitizedOneOfName = sanitize(oneOfElement.name());
OneOfTest.java,OneOfMessage.Builder builder = new OneOfMessage.Builder();,if (OneOfMessage != null ) OneOfMessage.Builder builder = new OneOfMessage.Builder();
OneOfTest.java,OneOfMessage fooMessage = builder.build();,if (builder != null ) OneOfMessage fooMessage = builder.build();
OneOfTest.java,OneOfMessage barMessage = builder.build();,if (builder != null ) OneOfMessage barMessage = builder.build();
OneOfTest.java,OneOfMessage noneMessage = builder.build();,if (builder != null ) OneOfMessage noneMessage = builder.build();
MessageWriter.java,List<FieldElement> fields = messageType.fields();,if (messageType != null ) List<FieldElement> fields = messageType.fields();
MessageWriter.java,List<FieldElement> fields = messageType.fields();,if (messageType != null ) List<FieldElement> fields = messageType.fields();
MessageWriter.java,List<FieldElement> fields = messageType.fields();,if (messageType != null ) List<FieldElement> fields = messageType.fields();
MessageWriter.java,String sanitized = sanitize(field.name());,if (sanitize(field != null ) String sanitized = sanitize(field.name());
OptionElement.java,String entryKey = entry.getKey();,if (entry != null ) String entryKey = entry.getKey();
OptionElement.java,"Object entryValue = entry.getValue(); // TODO nested list, map, option","if (option != null ) Object entryValue = entry.getValue(); // TODO nested list, map, option"
AbstractServiceWriter.java,String requestType = method.getRequestType();,if (method != null ) String requestType = method.getRequestType();
FieldInfo.java,String type = field.getType();,if (field != null ) String type = field.getType();
MessageWriter.java,List<Option> valueOptions = value.getOptions();,if (value != null ) List<Option> valueOptions = value.getOptions();
MessageWriter.java,String name = optionByName.getName();,if (optionByName != null ) String name = optionByName.getName();
MessageWriter.java,String name = messageType.getName();,if (messageType != null ) String name = messageType.getName();
MessageWriter.java,List<Option> options = new ArrayList<Option>(field.getOptions());,if (ArrayList<Option>(field != null ) List<Option> options = new ArrayList<Option>(field.getOptions());
MessageWriter.java,String name = iterator.next().getName();,if (iterator != null ) String name = iterator.next().getName();
MessageWriter.java,int tag = field.getTag();,if (field != null ) int tag = field.getTag();
MessageWriter.java,String fieldType = field.getType();,if (field != null ) String fieldType = field.getType();
MessageWriter.java,String sanitizedName = sanitize(field.getName());,if (sanitize(field != null ) String sanitizedName = sanitize(field.getName());
MessageWriter.java,List<Field> fields = messageType.getFields();,if (messageType != null ) List<Field> fields = messageType.getFields();
MessageWriter.java,String name = sanitize(field.getName());,if (sanitize(field != null ) String name = sanitize(field.getName());
MessageWriter.java,String name = sanitize(field.getName());,if (sanitize(field != null ) String name = sanitize(field.getName());
MessageWriter.java,String name = sanitize(field.getName());,if (sanitize(field != null ) String name = sanitize(field.getName());
MessageWriter.java,List<Field> fields = messageType.getFields();,if (messageType != null ) List<Field> fields = messageType.getFields();
MessageWriter.java,List<Field> fields = messageType.getFields();,if (messageType != null ) List<Field> fields = messageType.getFields();
MessageWriter.java,String sanitized = sanitize(field.getName());,if (sanitize(field != null ) String sanitized = sanitize(field.getName());
MessageWriter.java,String initialValue = field.getDefault();,if (field != null ) String initialValue = field.getDefault();
MessageWriter.java,"String javaName = compiler.javaName(messageType, field.getType());","if (field != null ) String javaName = compiler.javaName(messageType, field.getType());"
MessageWriter.java,"String fullyQualifiedName = compiler.fullyQualifiedName(messageType, field.getType());","if (field != null ) String fullyQualifiedName = compiler.fullyQualifiedName(messageType, field.getType());"
OptionsMapMaker.java,List<Option> options = type.getOptions();,if (type != null ) List<Option> options = type.getOptions();
OptionsMapMaker.java,List<Option> options = type.getOptions();,if (type != null ) List<Option> options = type.getOptions();
OptionsMapMaker.java,String key = option.getName();,if (option != null ) String key = option.getName();
OptionsMapMaker.java,String nestedName = value.getName();,if (value != null ) String nestedName = value.getName();
RxJavaServiceWriter.java,this.requestType = writer.compressType(method.getRequestType());,if (writer != null ) this.requestType = writer.compressType(method.getRequestType());
RxJavaServiceWriter.java,this.responseType = writer.compressType(method.getResponseType());,if (writer != null ) this.responseType = writer.compressType(method.getResponseType());
WireCompiler.java,this.protoFileName = protoFileName(protoFile.getFileName());,if (protoFileName(protoFile != null ) this.protoFileName = protoFileName(protoFile.getFileName());
WireCompiler.java,String typeName = extend.getFullyQualifiedName();,if (extend != null ) String typeName = extend.getFullyQualifiedName();
WireCompiler.java,String fqName = service.getFullyQualifiedName();,if (service != null ) String fqName = service.getFullyQualifiedName();
WireCompiler.java,String name = type.getName();,if (type != null ) String name = type.getName();
WireCompiler.java,String fqName = type.getFullyQualifiedName();,if (type != null ) String fqName = type.getFullyQualifiedName();
WireCompiler.java,String fieldType = field.getType();,if (field != null ) String fieldType = field.getType();
WireCompiler.java,"String fqFieldType = fullyQualifiedName(fqName, field.getType());","if (field != null ) String fqFieldType = fullyQualifiedName(fqName, field.getType());"
WireCompiler.java,String fieldType = field.getType();,if (field != null ) String fieldType = field.getType();
WireCompiler.java,"String fqName = prefixWithPackageName(protoFile, field.getName());","if (field != null ) String fqName = prefixWithPackageName(protoFile, field.getName());"
WireCompiler.java,type = field.getType();,if (field != null ) type = field.getType();
WireCompiler.java,String location = protoFileName(protoFile.getFileName());,if (protoFileName(protoFile != null ) String location = protoFileName(protoFile.getFileName());
WireCompiler.java,String name = type.getName();,if (type != null ) String name = type.getName();
WireCompiler.java,String fqName = type.getFullyQualifiedName();,if (type != null ) String fqName = type.getFullyQualifiedName();
WireCompiler.java,String fieldType = field.getType();,if (field != null ) String fieldType = field.getType();
WireCompiler.java,String fqMessageName = messageType.getFullyQualifiedName();,if (messageType != null ) String fqMessageName = messageType.getFullyQualifiedName();
WireCompiler.java,"String key = fqMessageName + ""$"" + field.getName();","if (field != null ) String key = fqMessageName + ""$"" + field.getName();"
WireCompiler.java,"String fqName = fullyQualifiedJavaName(messageType, field.getType());","if (field != null ) String fqName = fullyQualifiedJavaName(messageType, field.getType());"
WireCompiler.java,String serviceFQName = service.getFullyQualifiedName();,if (service != null ) String serviceFQName = service.getFullyQualifiedName();
WireCompiler.java,"String fqName = fullyQualifiedJavaName(null, extend.getFullyQualifiedName());","if (extend != null ) String fqName = fullyQualifiedJavaName(null, extend.getFullyQualifiedName());"
WireCompiler.java,"String fqFieldType = fullyQualifiedJavaName(null, field.getType());","if (field != null ) String fqFieldType = fullyQualifiedJavaName(null, field.getType());"
WireCompiler.java,List<ExtendDeclaration> declarations = protoFile.getExtendDeclarations();,if (protoFile != null ) List<ExtendDeclaration> declarations = protoFile.getExtendDeclarations();
WireCompiler.java,String name = declaration.getFullyQualifiedName();,if (declaration != null ) String name = declaration.getFullyQualifiedName();
WireCompiler.java,String fullyQualifiedName = extend.getFullyQualifiedName();,if (extend != null ) String fullyQualifiedName = extend.getFullyQualifiedName();
WireCompiler.java,String fieldType = field.getType();,if (field != null ) String fieldType = field.getType();
WireCompiler.java,String extensionName = field.getName();,if (field != null ) String extensionName = field.getName();
WireCompiler.java,String fqName = prefixWithPackageName(field.getName());,if (prefixWithPackageName(field != null ) String fqName = prefixWithPackageName(field.getName());
WireCompiler.java,int tag = field.getTag();,if (field != null ) int tag = field.getTag();
WireCompiler.java,String fieldType = field.getType();,if (field != null ) String fieldType = field.getType();
WireCompiler.java,String fieldType = field.getType();,if (field != null ) String fieldType = field.getType();
WireCompiler.java,MessageType.Label label = field.getLabel();,if (field != null ) MessageType.Label label = field.getLabel();
EnumElement.java,Object value = option.value();,if (option != null ) Object value = option.value();
UnknownFieldMap.java,size += WireOutput.varintTagSize(entry.getKey());,if (WireOutput != null ) size += WireOutput.varintTagSize(entry.getKey());
IO.java,boolean created = new File(directory).mkdirs();,if (File(directory) != null ) boolean created = new File(directory).mkdirs();
MessageWriter.java,this.writer = compiler.getWriter();,if (compiler != null ) this.writer = compiler.getWriter();
EnumElement.java,int tag = value.tag();,if (value != null ) int tag = value.tag();
EnumElement.java,String name = value.name();,if (value != null ) String name = value.name();
EnumElement.java,int tag = value.getTag();,if (value != null ) int tag = value.getTag();
EnumElement.java,Object value = option.getValue();,if (option != null ) Object value = option.getValue();
EnumElement.java,String name = value.getName();,if (value != null ) String name = value.getName();
EnumElement.java,int result = name.hashCode();,if (name != null ) int result = name.hashCode();
EnumElement.java,int result = name.hashCode();,if (name != null ) int result = name.hashCode();
ExtendElement.java,int result = name.hashCode();,if (name != null ) int result = name.hashCode();
ExtensionsElement.java,int result = documentation.hashCode();,if (documentation != null ) int result = documentation.hashCode();
MessageElement.java,int tag = field.getTag();,if (field != null ) int tag = field.getTag();
MessageElement.java,int result = name.hashCode();,if (name != null ) int result = name.hashCode();
MessageElement.java,int result = label.hashCode();,if (label != null ) int result = label.hashCode();
OptionElement.java,String name = option.getName();,if (option != null ) String name = option.getName();
OptionElement.java,Object value = option.getValue();,if (option != null ) Object value = option.getValue();
ProtoFile.java,int result = fileName.hashCode();,if (fileName != null ) int result = fileName.hashCode();
ProtoSchemaParser.java,String name = option.getName();,if (option != null ) String name = option.getName();
ProtoSchemaParser.java,Object value = option.getValue();,if (option != null ) Object value = option.getValue();
ServiceElement.java,int result = name.hashCode();,if (name != null ) int result = name.hashCode();
ServiceElement.java,int result = name.hashCode();,if (name != null ) int result = name.hashCode();
WireCompiler.java,int extensionsCount = extensionClasses.size();,if (extensionClasses != null ) int extensionsCount = extensionClasses.size();
MessageWriter.java,int tag = value.getTag();,if (value != null ) int tag = value.getTag();
MessageWriter.java,String type = field.getType();,if (field != null ) String type = field.getType();
MessageAdapter.java,ProtoEnum[] enumConstants = enumType.getEnumConstants();,if (enumType != null ) ProtoEnum[] enumConstants = enumType.getEnumConstants();
MessageWriter.java,String sanitizedName = sanitize(field.getName());,if (sanitize(field != null ) String sanitizedName = sanitize(field.getName());
WireCompiler.java,"String fieldTypeName = prefixWithPackageName(protoFile, field.getType());","if (field != null ) String fieldTypeName = prefixWithPackageName(protoFile, field.getType());"
EnumType.java,int tag = value.getTag();,if (value != null ) int tag = value.getTag();
WireCompiler.java,String javaPackage = protoFile.getJavaPackage();,if (protoFile != null ) String javaPackage = protoFile.getJavaPackage();
WireGenerateSourcesMojo.java,List<String> args = Lists.newLinkedList();,if (Lists != null ) List<String> args = Lists.newLinkedList();
OptionsMapMaker.java,String javaPackage = compiler.getProtoFile().getJavaPackage();,if (compiler != null ) String javaPackage = compiler.getProtoFile().getJavaPackage();
WireCompiler.java,String javaPackage = protoFile.getJavaPackage();,if (protoFile != null ) String javaPackage = protoFile.getJavaPackage();
EnumAdapter.java,values[i] = constants[i].getValue();,if (constants[i] != null ) values[i] = constants[i].getValue();
EnumAdapter.java,Field f = type.getField(value.name());,if (type != null ) Field f = type.getField(value.name());
EnumAdapter.java,int tag = annotation.value();,if (annotation != null ) int tag = annotation.value();
MessageType.java,int tag = field.getTag();,if (field != null ) int tag = field.getTag();
MessageType.java,String name = option.getName();,if (option != null ) String name = option.getName();
MessageType.java,Object value = option.getValue();,if (option != null ) Object value = option.getValue();
OptionsMapMaker.java,ExtensionInfo info = compiler.getExtension(entry.getKey());,if (compiler != null ) ExtensionInfo info = compiler.getExtension(entry.getKey());
FileIO.java,boolean created = new File(directory).mkdirs();,if (File(directory) != null ) boolean created = new File(directory).mkdirs();
WireCompiler.java,ExtensionInfo info = extensionInfo.get(entry.getKey());,if (extensionInfo != null ) ExtensionInfo info = extensionInfo.get(entry.getKey());
WireCompiler.java,String type = (String) entry.getValue();,if (entry != null ) String type = (String) entry.getValue();
WireCompiler.java,String name = messageType.getName();,if (messageType != null ) String name = messageType.getName();
WireCompiler.java,String fqName = entry.getKey();,if (entry != null ) String fqName = entry.getKey();
WireCompiler.java,List<Option> options = type.getOptions();,if (type != null ) List<Option> options = type.getOptions();
WireCompiler.java,int endIndex = name.length();,if (name != null ) int endIndex = name.length();
WireCompiler.java,"int firstDotAfterExtensionIndex = name.indexOf('.', fqName.length());","if (fqName != null ) int firstDotAfterExtensionIndex = name.indexOf('.', fqName.length());"
WireCompiler.java,String nestedName = value.getName();,if (value != null ) String nestedName = value.getName();
WireCompiler.java,String nestedName = valueEntry.getKey();,if (valueEntry != null ) String nestedName = valueEntry.getKey();
WireCompiler.java,String key = entry.getKey();,if (entry != null ) String key = entry.getKey();
WireCompiler.java,ExtensionInfo extInfo = extensionInfo.get(entry.getKey());,if (extensionInfo != null ) ExtensionInfo extInfo = extensionInfo.get(entry.getKey());
WireCompiler.java,String initialValue = field.getDefault();,if (field != null ) String initialValue = field.getDefault();
WireCompiler.java,"String javaName = javaName(messageType, field.getType());","if (field != null ) String javaName = javaName(messageType, field.getType());"
WireCompiler.java,"String fullyQualifiedName = fullyQualifiedName(messageType, field.getType());","if (field != null ) String fullyQualifiedName = fullyQualifiedName(messageType, field.getType());"
WireCompiler.java,int tag = field.getTag();,if (field != null ) int tag = field.getTag();
WireCompiler.java,String fieldType = field.getType();,if (field != null ) String fieldType = field.getType();
WireCompiler.java,List<Field> fields = messageType.getFields();,if (messageType != null ) List<Field> fields = messageType.getFields();
WireCompiler.java,String name = sanitize(field.getName());,if (sanitize(field != null ) String name = sanitize(field.getName());
WireCompiler.java,String name = sanitize(field.getName());,if (sanitize(field != null ) String name = sanitize(field.getName());
WireCompiler.java,String name = sanitize(field.getName());,if (sanitize(field != null ) String name = sanitize(field.getName());
WireCompiler.java,List<Field> fields = messageType.getFields();,if (messageType != null ) List<Field> fields = messageType.getFields();
WireCompiler.java,List<Field> fields = messageType.getFields();,if (messageType != null ) List<Field> fields = messageType.getFields();
WireCompiler.java,String sanitized = sanitize(field.getName());,if (sanitize(field != null ) String sanitized = sanitize(field.getName());
WireCompiler.java,String type = field.getType();,if (field != null ) String type = field.getType();
WireCompiler.java,String documentation = value.getDocumentation();,if (value != null ) String documentation = value.getDocumentation();
WireCompiler.java,String documentation = field.getDocumentation();,if (field != null ) String documentation = field.getDocumentation();
WireCompiler.java,String documentation = field.getDocumentation();,if (field != null ) String documentation = field.getDocumentation();
WireCompiler.java,String sourcePath = sourceFile.getPath();,if (sourceFile != null ) String sourcePath = sourceFile.getPath();
WireCompiler.java,"writer = getJavaWriter(javaOut, type.getName());","if (type != null ) writer = getJavaWriter(javaOut, type.getName());"
WireCompiler.java,String javaPackage = protoFile.getJavaPackage();,if (protoFile != null ) String javaPackage = protoFile.getJavaPackage();
WireCompiler.java,boolean created = new File(directory).mkdirs();,if (File(directory) != null ) boolean created = new File(directory).mkdirs();
WireCompiler.java,"String javaName = javaName(messageType, field.getType());","if (field != null ) String javaName = javaName(messageType, field.getType());"
WireCompiler.java,String type = field.getType();,if (field != null ) String type = field.getType();
UnknownFieldMap.java,size += WireOutput.tagSize(entry.getKey());,if (WireOutput != null ) size += WireOutput.tagSize(entry.getKey());
WireCompiler.java,String sourceFilename = entry.getKey();,if (entry != null ) String sourceFilename = entry.getKey();
WireCompiler.java,"String fieldTypeName = protoFile.getPackageName() + ""."" + field.getType();","if (field != null ) String fieldTypeName = protoFile.getPackageName() + ""."" + field.getType();"
WireCompiler.java,String fqName = type.getFullyQualifiedName();,if (type != null ) String fqName = type.getFullyQualifiedName();
WireCompiler.java,"String javaName = javaName(messageType, field.getType());","if (field != null ) String javaName = javaName(messageType, field.getType());"
MessageAdapter.java,defaultInstance = builderType.newInstance().build();,if (builderType != null ) defaultInstance = builderType.newInstance().build();
WireCompiler.java,List<Field> fields = messageType.getFields();,if (messageType != null ) List<Field> fields = messageType.getFields();
ProtoSchemaParser.java,this.data = data.toCharArray();,if (data != null ) this.data = data.toCharArray();
ProtoSchemaParser.java,this.fileName = file.getPath();,if (file != null ) this.fileName = file.getPath();
WireCompiler.java,String protoFileName = protoFileName(protoFile.getFileName());,if (protoFileName(protoFile != null ) String protoFileName = protoFileName(protoFile.getFileName());
WireCompiler.java,this.protoFileName = entry.getKey();,if (entry != null ) this.protoFileName = entry.getKey();
WireCompiler.java,String fqName = type.getFullyQualifiedName();,if (type != null ) String fqName = type.getFullyQualifiedName();
WireCompiler.java,String fieldType = field.getType();,if (field != null ) String fieldType = field.getType();
WireCompiler.java,List<Option> options = type.getOptions();,if (type != null ) List<Option> options = type.getOptions();
WireCompiler.java,String nestedName = optionValue.getName();,if (optionValue != null ) String nestedName = optionValue.getName();
WireCompiler.java,String nestedName = valueEntry.getKey();,if (valueEntry != null ) String nestedName = valueEntry.getKey();
WireCompiler.java,String fqName = type.getFullyQualifiedName();,if (type != null ) String fqName = type.getFullyQualifiedName();
WireCompiler.java,"String javaName = javaName(messageType, field.getType());","if (field != null ) String javaName = javaName(messageType, field.getType());"
WireCompiler.java,String fullyQualifiedName = extend.getFullyQualifiedName();,if (extend != null ) String fullyQualifiedName = extend.getFullyQualifiedName();
MessageAdapter.java,int start = input.getPosition();,if (input != null ) int start = input.getPosition();
WireCompiler.java,String javaPackage = protoFile.getJavaPackage();,if (protoFile != null ) String javaPackage = protoFile.getJavaPackage();
WireCompiler.java,boolean created = new File(directory).mkdirs();,if (File(directory) != null ) boolean created = new File(directory).mkdirs();
WireCompiler.java,protoFileName = protoFileName(protoFile.getFileName());,if (protoFileName(protoFile != null ) protoFileName = protoFileName(protoFile.getFileName());
WireCompiler.java,count = typesToEmit.size();,if (typesToEmit != null ) count = typesToEmit.size();
Base64.java,byte[] input = str.getBytes();,if (str != null ) byte[] input = str.getBytes();
WireCompiler.java,String prefix = messageType.getFullyQualifiedName();,if (messageType != null ) String prefix = messageType.getFullyQualifiedName();
MessageAdapter.java,defaultInstance = builderType.newInstance().build();,if (builderType != null ) defaultInstance = builderType.newInstance().build();
MessageAdapter.java,size += message.unknownFieldMap.getSerializedSize();,if (message != null ) size += message.unknownFieldMap.getSerializedSize();
UnknownFieldMap.java,int tag = entry.getKey();,if (entry != null ) int tag = entry.getKey();
UnknownFieldMap.java,int tag = entry.getKey();,if (entry != null ) int tag = entry.getKey();
UnknownFieldMap.java,int tag = entry.getKey();,if (entry != null ) int tag = entry.getKey();
UnknownFieldMap.java,Integer tag = entry.getKey();,if (entry != null ) Integer tag = entry.getKey();
UnknownFieldMap.java,size += data.size();,if (data != null ) size += data.size();
UnknownFieldMap.java,int tag = entry.getKey();,if (entry != null ) int tag = entry.getKey();
UnknownFieldMap.java,int tag = entry.getKey();,if (entry != null ) int tag = entry.getKey();
UnknownFieldMap.java,int tag = entry.getKey();,if (entry != null ) int tag = entry.getKey();
UnknownFieldMap.java,Integer tag = entry.getKey();,if (entry != null ) Integer tag = entry.getKey();
MessageAdapter.java,int type = extension.getType();,if (extension != null ) int type = extension.getType();
MessageAdapter.java,int type = extension.getType();,if (extension != null ) int type = extension.getType();
MessageAdapter.java,type = extension.getType();,if (extension != null ) type = extension.getType();
MessageAdapter.java,packed = extension.getPacked();,if (extension != null ) packed = extension.getPacked();
TestAllTypes.java,int len = allTypes.getSerializedSize();,if (allTypes != null ) int len = allTypes.getSerializedSize();
WireCompiler.java,"String fqName = fqJavaName(messageType, field.getType());","if (field != null ) String fqName = fqJavaName(messageType, field.getType());"
WireCompiler.java,String name = type.getName();,if (type != null ) String name = type.getName();
WireCompiler.java,"String javaName = javaName(messageType, field.getType());","if (field != null ) String javaName = javaName(messageType, field.getType());"
WireCompiler.java,String name = type.getName();,if (type != null ) String name = type.getName();
WireCompiler.java,String fqName = type.getFullyQualifiedName();,if (type != null ) String fqName = type.getFullyQualifiedName();
WireCompiler.java,fullyQualifiedName = fullyQualifiedName.substring(javaPackage.length());,if (fullyQualifiedName != null ) fullyQualifiedName = fullyQualifiedName.substring(javaPackage.length());
WireCompiler.java,fullyQualifiedName = fullyQualifiedName.substring(typeBeingGenerated.length());,if (fullyQualifiedName != null ) fullyQualifiedName = fullyQualifiedName.substring(typeBeingGenerated.length());
Wire.java,int size = aList.size();,if (aList != null ) int size = aList.size();
WireCompiler.java,String initialValue = field.getDefault();,if (field != null ) String initialValue = field.getDefault();
WireCompiler.java,"String javaName = javaName(messageType, field.getType());","if (field != null ) String javaName = javaName(messageType, field.getType());"
WireCompiler.java,"String fullyQualifiedName = fullyQualifiedName(messageType, field.getType());","if (field != null ) String fullyQualifiedName = fullyQualifiedName(messageType, field.getType());"
WireCompiler.java,String sanitized = sanitize(field.getName());,if (sanitize(field != null ) String sanitized = sanitize(field.getName());
ProtoAdapter.java,size += instance.unknownFieldMap.getSerializedSize();,if (instance != null ) size += instance.unknownFieldMap.getSerializedSize();
ExtendableMessage.java,"return extensionMap == null ? ""{}"" : extensionMap.toString();","if (extensionMap != null ) return extensionMap == null ? ""{}"" : extensionMap.toString();"
ProtoAdapter.java,size += instance.unknownFieldMap.getSerializedSize();,if (instance != null ) size += instance.unknownFieldMap.getSerializedSize();
WireCompiler.java,String name = messageType.getName();,if (messageType != null ) String name = messageType.getName();
ProtoAdapter.java,Object value = entry.getValue();,if (entry != null ) Object value = entry.getValue();
ProtoAdapter.java,int tag = extension.getTag();,if (extension != null ) int tag = extension.getTag();
ProtoAdapter.java,int type = extension.getType();,if (extension != null ) int type = extension.getType();
ProtoAdapter.java,Object value = entry.getValue();,if (entry != null ) Object value = entry.getValue();
ProtoAdapter.java,int tag = extension.getTag();,if (extension != null ) int tag = extension.getTag();
ProtoAdapter.java,int type = extension.getType();,if (extension != null ) int type = extension.getType();
AllTypes.java,int hashCode = extensionMap.hashCode();,if (extensionMap != null ) int hashCode = extensionMap.hashCode();
ExternalMessage.java,int hashCode = extensionMap.hashCode();,if (extensionMap != null ) int hashCode = extensionMap.hashCode();
WireCompiler.java,"String javaName = javaName(messageType, field.getType());","if (field != null ) String javaName = javaName(messageType, field.getType());"
WireCompiler.java,"String javaName = javaName(messageType, field.getType());","if (field != null ) String javaName = javaName(messageType, field.getType());"
WireCompiler.java,"String javaName = javaName(messageType, field.getType());","if (field != null ) String javaName = javaName(messageType, field.getType());"
WireCompiler.java,return documentation == null || documentation.isEmpty();,if (documentation != null ) return documentation == null || documentation.isEmpty();
WireCompiler.java,List<Type> types = protoFile.getTypes();,if (protoFile != null ) List<Type> types = protoFile.getTypes();
WireCompiler.java,boolean hasExtensions = hasExtensions(protoFile.getTypes());,if (hasExtensions(protoFile != null ) boolean hasExtensions = hasExtensions(protoFile.getTypes());
WireCompiler.java,String fileName = protoFile.getFileName();,if (protoFile != null ) String fileName = protoFile.getFileName();
AllTypesContainer.java,int hashCode = extensionMap.hashCode();,if (extensionMap != null ) int hashCode = extensionMap.hashCode();
ExternalMessageContainer.java,int hashCode = extensionMap.hashCode();,if (extensionMap != null ) int hashCode = extensionMap.hashCode();
WireCompiler.java,boolean success = new File(directory).mkdirs();,if (File(directory) != null ) boolean success = new File(directory).mkdirs();
WireFormatNano.java,int startPos = input.getPosition();,if (input != null ) int startPos = input.getPosition();
WireFormatNano.java,int thisTag = input.readTag();,if (input != null ) int thisTag = input.readTag();
ProtoAdapter.java,messageClass = (Class<Message>) extension.getMessageType();,if (extension != null ) messageClass = (Class<Message>) extension.getMessageType();
ProtoAdapter.java,int label = extension.getLabel();,if (extension != null ) int label = extension.getLabel();
ProtoAdapter.java,int label = extension.getLabel();,if (extension != null ) int label = extension.getLabel();
ProtoAdapter.java,int tagAndType = input.readTag();,if (input != null ) int tagAndType = input.readTag();
ProtoAdapter.java,type = extension.getType();,if (extension != null ) type = extension.getType();
ProtoAdapter.java,label = extension.getLabel();,if (extension != null ) label = extension.getLabel();
ProtoAdapter.java,Object value = (Object) entry.getValue();,if (entry != null ) Object value = (Object) entry.getValue();
ProtoAdapter.java,Object value = (Object) entry.getValue();,if (entry != null ) Object value = (Object) entry.getValue();
ProtoEnumAdapter.java,int tag = annotation.tag();,if (annotation != null ) int tag = annotation.tag();
ProtoSchemaParserTest.java,Object actual = parser.readProtoFile();,if (parser != null ) Object actual = parser.readProtoFile();
ProtoSchemaParserTest.java,ProtoFile actual = parser.readProtoFile();,if (parser != null ) ProtoFile actual = parser.readProtoFile();
ProtoSchemaParserTest.java,ProtoFile actual = parser.readProtoFile();,if (parser != null ) ProtoFile actual = parser.readProtoFile();
ProtoSchemaParserTest.java,ProtoFile actual = parser.readProtoFile();,if (parser != null ) ProtoFile actual = parser.readProtoFile();
ProtoSchemaParserTest.java,ProtoFile actual = parser.readProtoFile();,if (parser != null ) ProtoFile actual = parser.readProtoFile();
ProtoSchemaParserTest.java,ProtoFile actual = parser.readProtoFile();,if (parser != null ) ProtoFile actual = parser.readProtoFile();
ProtoSchemaParserTest.java,ProtoFile actual = parser.readProtoFile();,if (parser != null ) ProtoFile actual = parser.readProtoFile();
