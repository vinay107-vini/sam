Filename,Buggy/Deleted,Fixed/Added
AbstractWatcher.java,final Random random = ThreadLocalRandom.current();,if (ThreadLocalRandom != null ) final Random random = ThreadLocalRandom.current();
AbstractWatcher.java,long result = random.nextLong();,if (random != null ) long result = random.nextLong();
TransformingWatcher.java,final U transformedValue = transformer.apply(latestParent.value());,if (transformer != null ) final U transformedValue = transformer.apply(latestParent.value());
HttpApiExceptionHandler.java,final ExceptionHandlerFunction func = exceptionHandlers.get(cause.getClass());,if (exceptionHandlers != null ) final ExceptionHandlerFunction func = exceptionHandlers.get(cause.getClass());
MigrationUtil.java,legacyTokens = ImmutableList.of();,if (ImmutableList != null ) legacyTokens = ImmutableList.of();
MigrationUtilTest.java,final ProjectManager pm = manager.projectManager();,if (manager != null ) final ProjectManager pm = manager.projectManager();
MigrationUtilTest.java,final CommandExecutor executor = manager.executor();,if (manager != null ) final CommandExecutor executor = manager.executor();
MigrationUtilTest.java,final ProjectManager pm = manager.projectManager();,if (manager != null ) final ProjectManager pm = manager.projectManager();
MigrationUtilTest.java,final CommandExecutor executor = manager.executor();,if (manager != null ) final CommandExecutor executor = manager.executor();
MigrationUtilTest.java,final ProjectManager pm = manager.projectManager();,if (manager != null ) final ProjectManager pm = manager.projectManager();
MigrationUtilTest.java,final CommandExecutor executor = manager.executor();,if (manager != null ) final CommandExecutor executor = manager.executor();
MigrationUtilTest.java,final RepositoryManager manager = project.repos();,if (project != null ) final RepositoryManager manager = project.repos();
GitRepositoryMigrationTest.java,final Executor purgeWorker = MoreExecutors.directExecutor();,if (MoreExecutors != null ) final Executor purgeWorker = MoreExecutors.directExecutor();
RepositoryGarbageCollectionPlugin.java,gcConfig = context.config().repositoryGarbageCollection();,if (context != null ) gcConfig = context.config().repositoryGarbageCollection();
RepositoryGarbageCollectionPlugin.java,final ProjectManager pm = context.projectManager();,if (context != null ) final ProjectManager pm = context.projectManager();
RepositoryGarbageCollectionPlugin.java,final MeterRegistry meterRegistry = context.meterRegistry();,if (context != null ) final MeterRegistry meterRegistry = context.meterRegistry();
RepositoryGarbageCollectionPlugin.java,final Stopwatch stopwatch = Stopwatch.createUnstarted();,if (Stopwatch != null ) final Stopwatch stopwatch = Stopwatch.createUnstarted();
RepositoryGarbageCollectionPlugin.java,final String projectName = project.name();,if (project != null ) final String projectName = project.name();
RepositoryGarbageCollectionPlugin.java,final String repoName = repo.name();,if (repo != null ) final String repoName = repo.name();
RepositoryGarbageCollectionPlugin.java,final Revision gcRevision = repo.lastGcRevision();,if (repo != null ) final Revision gcRevision = repo.lastGcRevision();
RepositoryGarbageCollectionPlugin.java,newCommitsSinceLastGc = endRevision.major();,if (endRevision != null ) newCommitsSinceLastGc = endRevision.major();
RepositoryGarbageCollectionPlugin.java,newCommitsSinceLastGc = endRevision.major() - gcRevision.major();,if (gcRevision != null ) newCommitsSinceLastGc = endRevision.major() - gcRevision.major();
GitGcRevision.java,size = channel.size();,if (channel != null ) size = channel.size();
GitGcRevision.java,final ByteBuffer buf = threadLocalBuffer.get();,if (threadLocalBuffer != null ) final ByteBuffer buf = threadLocalBuffer.get();
GitGcRevision.java,final ByteBuffer buf = threadLocalBuffer.get();,if (threadLocalBuffer != null ) final ByteBuffer buf = threadLocalBuffer.get();
LegacyCentralDogmaBuilder.java,final EventLoopGroup executor = clientFactory().eventLoopGroup();,if (clientFactory() != null ) final EventLoopGroup executor = clientFactory().eventLoopGroup();
ArmeriaCentralDogmaBuilder.java,final EventLoopGroup executor = clientFactory().eventLoopGroup();,if (clientFactory() != null ) final EventLoopGroup executor = clientFactory().eventLoopGroup();
CentralDogmaClientAutoConfiguration.java,final ConfigurableListableBeanFactory beanFactory = context.getBeanFactory();,if (context != null ) final ConfigurableListableBeanFactory beanFactory = context.getBeanFactory();
CentralDogmaClientAutoConfiguration.java,final MethodMetadata fmm = abd.getFactoryMethodMetadata();,if (abd != null ) final MethodMetadata fmm = abd.getFactoryMethodMetadata();
StandaloneCommandExecutorTest.java,final ProjectManager pm = extension.projectManager();,if (extension != null ) final ProjectManager pm = extension.projectManager();
ZooKeeperCommandExecutorTest.java,dataDir = spec.getDataDirectory();,if (spec != null ) dataDir = spec.getDataDirectory();
ZooKeeperCommandExecutorTest.java,meterRegistry = PrometheusMeterRegistries.newRegistry();,if (PrometheusMeterRegistries != null ) meterRegistry = PrometheusMeterRegistries.newRegistry();
ZooKeeperCommandExecutorTest.java,final int id = spec.getServerId();,if (spec != null ) final int id = spec.getServerId();
ContentServiceV1.java,final Revision lastKnownRevision = watchRequest.get().lastKnownRevision();,if (watchRequest != null ) final Revision lastKnownRevision = watchRequest.get().lastKnownRevision();
ContentServiceV1.java,final long timeOutMillis = watchRequest.get().timeoutMillis();,if (watchRequest != null ) final long timeOutMillis = watchRequest.get().timeoutMillis();
TransformingWatcher.java,U transformedValue = transformer.apply(latestParent.value());,if (transformer != null ) U transformedValue = transformer.apply(latestParent.value());
IdentityQuery.java,this.strVal = strVal = buf.toString();,if (buf != null ) this.strVal = strVal = buf.toString();
NamedQueryDto.java,name = namedQuery.getName();,if (namedQuery != null ) name = namedQuery.getName();
NamedQueryDto.java,enabled = namedQuery.isEnabled();,if (namedQuery != null ) enabled = namedQuery.isEnabled();
NamedQueryDto.java,repositoryName = namedQuery.getRepositoryName();,if (namedQuery != null ) repositoryName = namedQuery.getRepositoryName();
NamedQueryDto.java,query = new QueryDto(namedQuery.getQuery());,if (QueryDto(namedQuery != null ) query = new QueryDto(namedQuery.getQuery());
NamedQueryDto.java,comment = new CommentDto(namedQuery.getComment());,if (CommentDto(namedQuery != null ) comment = new CommentDto(namedQuery.getComment());
QueryDto.java,path = query.getPath();,if (query != null ) path = query.getPath();
QueryDto.java,type = query.getType();,if (query != null ) type = query.getType();
QueryDto.java,expressions = query.getExpressions();,if (query != null ) expressions = query.getExpressions();
AbstractArmeriaCentralDogmaBuilder.java,"groupName = ""centraldogma-anonymous-"" + nextAnonymousGroupId.getAndIncrement();","if (nextAnonymousGroupId != null ) groupName = ""centraldogma-anonymous-"" + nextAnonymousGroupId.getAndIncrement();"
ArmeriaCentralDogmaBuilder.java,final String uri = scheme + endpoint.authority();,if (endpoint != null ) final String uri = scheme + endpoint.authority();
ArmeriaCentralDogmaBuilderTest.java,final long id = AbstractArmeriaCentralDogmaBuilder.nextAnonymousGroupId.get();,if (AbstractArmeriaCentralDogmaBuilder != null ) final long id = AbstractArmeriaCentralDogmaBuilder.nextAnonymousGroupId.get();
ArmeriaCentralDogmaBuilderTest.java,final long id = AbstractArmeriaCentralDogmaBuilder.nextAnonymousGroupId.get();,if (AbstractArmeriaCentralDogmaBuilder != null ) final long id = AbstractArmeriaCentralDogmaBuilder.nextAnonymousGroupId.get();
ArmeriaCentralDogmaBuilderTest.java,final long id = AbstractArmeriaCentralDogmaBuilder.nextAnonymousGroupId.get();,if (AbstractArmeriaCentralDogmaBuilder != null ) final long id = AbstractArmeriaCentralDogmaBuilder.nextAnonymousGroupId.get();
CentralDogma.java,final String subtype = contentType.subtype();,if (contentType != null ) final String subtype = contentType.subtype();
CentralDogmaRuleDelegate.java,final InetSocketAddress serverAddress = activePort.get().localAddress();,if (activePort != null ) final InetSocketAddress serverAddress = activePort.get().localAddress();
GitMirrorTest.java,client = rule.client();,if (rule != null ) client = rule.client();
GitMirrorTest.java,mirroringService = rule.mirroringService();,if (rule != null ) mirroringService = rule.mirroringService();
GitMirrorTest.java,projName = testName.getMethodName();,if (testName != null ) projName = testName.getMethodName();
ContentServiceV1Test.java,final AggregatedHttpResponse res = future.join();,if (future != null ) final AggregatedHttpResponse res = future.join();
ContentServiceV1Test.java,final AggregatedHttpResponse res = future.join();,if (future != null ) final AggregatedHttpResponse res = future.join();
ContentServiceV1Test.java,final AggregatedHttpResponse res = future.join();,if (future != null ) final AggregatedHttpResponse res = future.join();
RepositoryManagerWrapperTest.java,final String name = testName.getMethodName();,if (testName != null ) final String name = testName.getMethodName();
RepositoryManagerWrapperTest.java,final String name = testName.getMethodName();,if (testName != null ) final String name = testName.getMethodName();
RepositoryManagerWrapperTest.java,final String name = testName.getMethodName();,if (testName != null ) final String name = testName.getMethodName();
RepositoryManagerWrapperTest.java,final String name = testName.getMethodName();,if (testName != null ) final String name = testName.getMethodName();
RepositoryManagerWrapperTest.java,final String name = testName.getMethodName();,if (testName != null ) final String name = testName.getMethodName();
RepositoryManagerWrapperTest.java,final String name = testName.getMethodName();,if (testName != null ) final String name = testName.getMethodName();
RepositoryManagerWrapperTest.java,final String name = testName.getMethodName();,if (testName != null ) final String name = testName.getMethodName();
RepositoryManagerWrapperTest.java,final String name = testName.getMethodName();,if (testName != null ) final String name = testName.getMethodName();
RepositoryManagerWrapperTest.java,final String name = testName.getMethodName();,if (testName != null ) final String name = testName.getMethodName();
CommitIdDatabaseTest.java,db = new CommitIdDatabase(tmpDir.getRoot());,if (CommitIdDatabase(tmpDir != null ) db = new CommitIdDatabase(tmpDir.getRoot());
CommitIdDatabaseTest.java,db = new CommitIdDatabase(tmpDir.getRoot());,if (CommitIdDatabase(tmpDir != null ) db = new CommitIdDatabase(tmpDir.getRoot());
CommitIdDatabaseTest.java,final File repoDir = tmpDir.getRoot();,if (tmpDir != null ) final File repoDir = tmpDir.getRoot();
GitRepositoryMigrationTest.java,final File tempDir = this.tempDir.getRoot();,if (this != null ) final File tempDir = this.tempDir.getRoot();
JsonPatchOperationSerializationTest.java,final String in = input.toString();,if (input != null ) final String in = input.toString();
JsonPatchOperationTest.java,final JsonNode actual = op.apply(node.deepCopy());,if (op != null ) final JsonNode actual = op.apply(node.deepCopy());
MigrationUtilTest.java,final ProjectManager pm = rule.projectManager();,if (rule != null ) final ProjectManager pm = rule.projectManager();
MigrationUtilTest.java,final CommandExecutor executor = rule.executor();,if (rule != null ) final CommandExecutor executor = rule.executor();
MigrationUtilTest.java,final ProjectManager pm = rule.projectManager();,if (rule != null ) final ProjectManager pm = rule.projectManager();
MigrationUtilTest.java,final CommandExecutor executor = rule.executor();,if (rule != null ) final CommandExecutor executor = rule.executor();
MigrationUtilTest.java,final ProjectManager pm = rule.projectManager();,if (rule != null ) final ProjectManager pm = rule.projectManager();
MigrationUtilTest.java,final CommandExecutor executor = rule.executor();,if (rule != null ) final CommandExecutor executor = rule.executor();
MissingRepositoryMetadataTest.java,final ProjectManager pm = rule.projectManager();,if (rule != null ) final ProjectManager pm = rule.projectManager();
MissingRepositoryMetadataTest.java,final CommandExecutor executor = rule.executor();,if (rule != null ) final CommandExecutor executor = rule.executor();
LegacyCentralDogmaTest.java,public MockitoRule rule = MockitoJUnit.rule();,if (MockitoJUnit != null ) public MockitoRule rule = MockitoJUnit.rule();
LegacyCentralDogmaTimeoutSchedulerTest.java,public MockitoRule rule = MockitoJUnit.rule();,if (MockitoJUnit != null ) public MockitoRule rule = MockitoJUnit.rule();
ReplicationLagTolerantCentralDogmaTest.java,public MockitoRule rule = MockitoJUnit.rule();,if (MockitoJUnit != null ) public MockitoRule rule = MockitoJUnit.rule();
GitMirrorAuthTest.java,client = rule.client();,if (rule != null ) client = rule.client();
GitMirrorAuthTest.java,mirroringService = rule.mirroringService();,if (rule != null ) mirroringService = rule.mirroringService();
SamlAuthTest.java,final int port = rule.serverAddress().getPort();,if (rule != null ) final int port = rule.serverAddress().getPort();
ShiroLoginAndLogoutTest.java,client = rule.httpClient();,if (rule != null ) client = rule.httpClient();
CentralDogmaRuleDelegate.java,final InetSocketAddress serverAddress = activePort.get().localAddress();,if (activePort != null ) final InetSocketAddress serverAddress = activePort.get().localAddress();
CentralDogmaRuleDelegate.java,client = clientBuilder.build();,if (clientBuilder != null ) client = clientBuilder.build();
CentralDogmaRuleDelegate.java,legacyClient = legacyClientBuilder.build();,if (legacyClientBuilder != null ) legacyClient = legacyClientBuilder.build();
TestAuthProvider.java,authorizer = parameters.authorizer();,if (parameters != null ) authorizer = parameters.authorizer();
Jackson.java,final JsonStringEncoder enc = BufferRecyclers.getJsonStringEncoder();,if (BufferRecyclers != null ) final JsonStringEncoder enc = BufferRecyclers.getJsonStringEncoder();
WatchService.java,ctx = RequestContext.current();,if (RequestContext != null ) ctx = RequestContext.current();
ContentServiceV1Test.java,final AggregatedHttpMessage res = future.join();,if (future != null ) final AggregatedHttpMessage res = future.join();
ContentServiceV1Test.java,final AggregatedHttpMessage res = future.join();,if (future != null ) final AggregatedHttpMessage res = future.join();
ContentServiceV1Test.java,final AggregatedHttpMessage res = future.join();,if (future != null ) final AggregatedHttpMessage res = future.join();
WatchRequestConverterTest.java,final HttpHeaders headers = HttpHeaders.of();,if (HttpHeaders != null ) final HttpHeaders headers = HttpHeaders.of();
TestAuthProvider.java,final AggregatedHttpMessage msg = req.aggregate().join();,if (req != null ) final AggregatedHttpMessage msg = req.aggregate().join();
TestAuthProvider.java,final AggregatedHttpMessage msg = req.aggregate().join();,if (req != null ) final AggregatedHttpMessage msg = req.aggregate().join();
WatchService.java,final EventLoop eventLoop = RequestContext.current().eventLoop();,if (RequestContext != null ) final EventLoop eventLoop = RequestContext.current().eventLoop();
LoginService.java,final BasicToken basicToken = AuthTokenExtractors.BASIC.apply(req.headers());,if (AuthTokenExtractors != null ) final BasicToken basicToken = AuthTokenExtractors.BASIC.apply(req.headers());
RestfulJsonResponseConverter.java,final HttpHeaders httpHeaders = headers.toMutable();,if (headers != null ) final HttpHeaders httpHeaders = headers.toMutable();
CreateApiResponseConverter.java,final HttpHeaders httpHeaders = headers.toMutable();,if (headers != null ) final HttpHeaders httpHeaders = headers.toMutable();
HttpApiResponseConverter.java,resHeaders = headers.toMutable();,if (headers != null ) resHeaders = headers.toMutable();
ProjectServiceV1Test.java,final HttpHeaders headers = aRes.headers();,if (aRes != null ) final HttpHeaders headers = aRes.headers();
ProjectServiceV1Test.java,final HttpHeaders headers = aRes.headers();,if (aRes != null ) final HttpHeaders headers = aRes.headers();
RepositoryServiceV1Test.java,final HttpHeaders headers = aRes.headers();,if (aRes != null ) final HttpHeaders headers = aRes.headers();
RepositoryServiceV1Test.java,final HttpHeaders headers = aRes.headers();,if (aRes != null ) final HttpHeaders headers = aRes.headers();
RepositoryServiceV1Test.java,final HttpHeaders headers = aRes.headers();,if (aRes != null ) final HttpHeaders headers = aRes.headers();
RepositoryServiceV1Test.java,final HttpHeaders headers = aRes.headers();,if (aRes != null ) final HttpHeaders headers = aRes.headers();
RepositoryServiceV1Test.java,final HttpHeaders headers = aRes.headers();,if (aRes != null ) final HttpHeaders headers = aRes.headers();
TestAuthProvider.java,final BasicToken basicToken = AuthTokenExtractors.BASIC.apply(msg.headers());,if (AuthTokenExtractors != null ) final BasicToken basicToken = AuthTokenExtractors.BASIC.apply(msg.headers());
ArmeriaCentralDogma.java,final int code = res.status().code();,if (res != null ) final int code = res.status().code();
ArmeriaCentralDogma.java,final int code = res.status().code();,if (res != null ) final int code = res.status().code();
ArmeriaCentralDogma.java,final HttpStatus status = res.status();,if (res != null ) final HttpStatus status = res.status();
GitRepository.java,final long writeLockStamp = lock.writeLock();,if (lock != null ) final long writeLockStamp = lock.writeLock();
GitRepository.java,final long writeLockStamp = lock.writeLock();,if (lock != null ) final long writeLockStamp = lock.writeLock();
GitRepository.java,"final RevTree treeA = toTree(revWalk, range.from());","if (range != null ) final RevTree treeA = toTree(revWalk, range.from());"
GitRepository.java,"final RevTree treeB = toTree(revWalk, range.to());","if (range != null ) final RevTree treeB = toTree(revWalk, range.to());"
GitRepository.java,final RevTree treeA = treePair.getKey();,if (treePair != null ) final RevTree treeA = treePair.getKey();
GitRepository.java,final RevTree treeB = treePair.getValue();,if (treePair != null ) final RevTree treeB = treePair.getValue();
GitRepository.java,final ReadLockStamp stamp = readLockStamp.get();,if (readLockStamp != null ) final ReadLockStamp stamp = readLockStamp.get();
ReadLockStamp.java,final long readLockStampValue = lock.readLock();,if (lock != null ) final long readLockStampValue = lock.readLock();
ReadLockStampTest.java,final long writeStamp = lock.tryWriteLock();,if (lock != null ) final long writeStamp = lock.tryWriteLock();
ReadLockStampTest.java,final long writeStamp = lock.tryWriteLock();,if (lock != null ) final long writeStamp = lock.tryWriteLock();
AbstractMirror.java,final String scheme = remoteUri.getScheme();,if (remoteUri != null ) final String scheme = remoteUri.getScheme();
AbstractMirror.java,final String host = remoteUri.getHost();,if (remoteUri != null ) final String host = remoteUri.getHost();
AbstractMirror.java,final String path = remoteUri.getRawPath();,if (remoteUri != null ) final String path = remoteUri.getRawPath();
AbstractMirror.java,final int port = remoteUri.getPort();,if (remoteUri != null ) final int port = remoteUri.getPort();
AbstractMirror.java,final String fragment = remoteUri.getFragment();,if (remoteUri != null ) final String fragment = remoteUri.getFragment();
Plugin.java,final int length = script.length();,if (script != null ) final int length = script.length();
Plugin.java,plugin = pluginInitPromise.syncUninterruptibly().getNow();,if (pluginInitPromise != null ) plugin = pluginInitPromise.syncUninterruptibly().getNow();
PluginManager.java,final Repository metaRepo = project.metaRepo();,if (project != null ) final Repository metaRepo = project.metaRepo();
PluginManager.java,final String path = pluginEntry.textValue();,if (pluginEntry != null ) final String path = pluginEntry.textValue();
GitRepository.java,final String sanitizedNewText = sanitizeText(change.contentAsText());,if (sanitizeText(change != null ) final String sanitizedNewText = sanitizeText(change.contentAsText());
GitRepository.java,final DirCacheEditor editor = dirCache.editor();,if (dirCache != null ) final DirCacheEditor editor = dirCache.editor();
GitRepository.java,sanitizedOldTextLines = Collections.emptyList();,if (Collections != null ) sanitizedOldTextLines = Collections.emptyList();
GitRepository.java,newText = joiner.toString();,if (joiner != null ) newText = joiner.toString();
PluginTest.java,final String stackTrace = writer.toString();,if (writer != null ) final String stackTrace = writer.toString();
PluginTest.java,f = new File(resourceUrl.toURI());,if (File(resourceUrl != null ) f = new File(resourceUrl.toURI());
PluginTest.java,f = new File(resourceUrl.getPath());,if (File(resourceUrl != null ) f = new File(resourceUrl.getPath());
DiffScanner.java,oldId = idBuf.copy();,if (idBuf != null ) oldId = idBuf.copy();
DiffScanner.java,newId = idBuf.copy();,if (idBuf != null ) newId = idBuf.copy();
DiffScanner.java,path = walk.getPathString();,if (walk != null ) path = walk.getPathString();
GitRepository.java,final JsonNode newJsonNode = (JsonNode) change.content();,if (change != null ) final JsonNode newJsonNode = (JsonNode) change.content();
Main.java,final int pid = POSIXFactory.getPOSIX().getpid();,if (POSIXFactory != null ) final int pid = POSIXFactory.getPOSIX().getpid();
ContentServiceV1.java,final long commitTimeMillis = System.currentTimeMillis();,if (System != null ) final long commitTimeMillis = System.currentTimeMillis();
CacheTest.java,final String project = testName.getMethodName();,if (testName != null ) final String project = testName.getMethodName();
CacheTest.java,final CentralDogma client = rule.client();,if (rule != null ) final CentralDogma client = rule.client();
CacheTest.java,final String project = testName.getMethodName();,if (testName != null ) final String project = testName.getMethodName();
CacheTest.java,final CentralDogma client = rule.client();,if (rule != null ) final CentralDogma client = rule.client();
CacheTest.java,final String project = testName.getMethodName();,if (testName != null ) final String project = testName.getMethodName();
CacheTest.java,final CentralDogma client = rule.client();,if (rule != null ) final CentralDogma client = rule.client();
GetDiffTest.java,final CentralDogma client = rule.client();,if (rule != null ) final CentralDogma client = rule.client();
GetDiffTest.java,final CentralDogma client = rule.client();,if (rule != null ) final CentralDogma client = rule.client();
ContentServiceV1.java,final long commitTimeMillis = System.currentTimeMillis();,if (System != null ) final long commitTimeMillis = System.currentTimeMillis();
CentralDogma.java,final String title = cfg.webAppTitle();,if (cfg != null ) final String title = cfg.webAppTitle();
Main.java,final DaemonController controller = context.getController();,if (context != null ) final DaemonController controller = context.getController();
ContentServiceV1.java,final Revision revision = entry.revision();,if (entry != null ) final Revision revision = entry.revision();
Entry.java,contentAsText = content.toString();,if (content != null ) contentAsText = content.toString();
Entry.java,contentAsPrettyText = content.toString();,if (content != null ) contentAsPrettyText = content.toString();
JsonPathQuery.java,final int size = jsonPaths.size();,if (jsonPaths != null ) final int size = jsonPaths.size();
Repository.java,final EntryType entryType = entry.type();,if (entry != null ) final EntryType entryType = entry.type();
ZooKeeperReplicationConfig.java,currentServerId = entry.getKey().intValue();,if (entry != null ) currentServerId = entry.getKey().intValue();
CentralDogmaSecurityManager.java,delegate = factory.getInstance();,if (factory != null ) delegate = factory.getInstance();
CentralDogmaSecurityManager.java,cache = caffeine.build();,if (caffeine != null ) cache = caffeine.build();
LoginService.java,final long expiresIn = currentUserSession.getTimeout();,if (currentUserSession != null ) final long expiresIn = currentUserSession.getTimeout();
LoginService.java,final String sessionId = currentUserSession.getId().toString();,if (currentUserSession != null ) final String sessionId = currentUserSession.getId().toString();
LoginService.java,final BasicToken basicToken = AuthTokenExtractors.BASIC.apply(req.headers());,if (AuthTokenExtractors != null ) final BasicToken basicToken = AuthTokenExtractors.BASIC.apply(req.headers());
LoginService.java,final MediaType mediaType = req.headers().contentType();,if (req != null ) final MediaType mediaType = req.headers().contentType();
LoginService.java,final AccessToken currentUserToken = cache.getIfPresent(usernamePassword.getUsername());,if (cache != null ) final AccessToken currentUserToken = cache.getIfPresent(usernamePassword.getUsername());
LoginService.java,final long currentTimeMillis = System.currentTimeMillis();,if (System != null ) final long currentTimeMillis = System.currentTimeMillis();
LogoutService.java,final String sessionId = token.accessToken();,if (token != null ) final String sessionId = token.accessToken();
LogoutService.java,final String username = (String) currentUser.getPrincipal();,if (currentUser != null ) final String username = (String) currentUser.getPrincipal();
SessionTokenAuthorizer.java,final String sessionId = token.accessToken();,if (token != null ) final String sessionId = token.accessToken();
SessionTokenAuthorizer.java,final String p = principal.toString();,if (principal != null ) final String p = principal.toString();
UserService.java,final User user = AuthenticationUtil.currentUser();,if (AuthenticationUtil != null ) final User user = AuthenticationUtil.currentUser();
FileBasedSessionDAO.java,final int nameCount = path.getNameCount();,if (path != null ) final int nameCount = path.getNameCount();
LoginAndLogoutTest.java,client = rule.httpClient();,if (rule != null ) client = rule.httpClient();
LoginAndLogoutTest.java,final String sessionId = accessToken.accessToken();,if (accessToken != null ) final String sessionId = accessToken.accessToken();
ZooKeeperCommandExecutorTest.java,startFuture = rm.start();,if (rm != null ) startFuture = rm.start();
CentralDogmaRule.java,dogma = builder.build();,if (builder != null ) dogma = builder.build();
CentralDogmaRule.java,client = clientBuilder.build();,if (clientBuilder != null ) client = clientBuilder.build();
CentralDogma.java,replicaId = UUID.randomUUID().toString();,if (UUID != null ) replicaId = UUID.randomUUID().toString();
ZooKeeperCommandExecutorTest.java,revisionFile = testFolder.newFile();,if (testFolder != null ) revisionFile = testFolder.newFile();
ZooKeeperCommandExecutorTest.java,final Builder builder = ZooKeeperCommandExecutor.builder();,if (ZooKeeperCommandExecutor != null ) final Builder builder = ZooKeeperCommandExecutor.builder();
PluginTest.java,final Project p = pm.create(testName.getMethodName());,if (pm != null ) final Project p = pm.create(testName.getMethodName());
DefaultMetaRepositoryTest.java,project = pm.create(testName.getMethodName());,if (pm != null ) project = pm.create(testName.getMethodName());
ContentServiceV1.java,final Revision resultRevision = resultRevisionFuture.join(); // the future is already complete,if (complete != null ) final Revision resultRevision = resultRevisionFuture.join(); // the future is already complete
AbstractCentralDogmaBuilder.java,final String key = (String) e.getKey();,if (e != null ) final String key = (String) e.getKey();
AbstractCentralDogmaBuilder.java,final String value = (String) e.getValue();,if (e != null ) final String value = (String) e.getValue();
CentralDogmaRule.java,client = clientBuilder.build();,if (clientBuilder != null ) client = clientBuilder.build();
DefaultMirroringService.java,final ExecutionTime execTime = ExecutionTime.forCron(m.schedule());,if (ExecutionTime != null ) final ExecutionTime execTime = ExecutionTime.forCron(m.schedule());
EntryConverter.java,JsonNode value = Jackson.readTree(entry.getContent());,if (Jackson != null ) JsonNode value = Jackson.readTree(entry.getContent());
Util.java,StringBuilder buf = new StringBuilder(className.length());,if (StringBuilder(className != null ) StringBuilder buf = new StringBuilder(className.length());
PluginManager.java,String path = pluginEntry.textValue();,if (pluginEntry != null ) String path = pluginEntry.textValue();
ZooKeeperCommandExecutor.java,String l = br.readLine();,if (br != null ) String l = br.readLine();
ZooKeeperCommandExecutor.java,lock = safeLock(command.executionPath());,if (safeLock(command != null ) lock = safeLock(command.executionPath());
CacheableFindCall.java,weight += content.length();,if (content != null ) weight += content.length();
CacheableQueryCall.java,final String content = value.contentAsText();,if (value != null ) final String content = value.contentAsText();
CacheableQueryCall.java,weight += content.length();,if (content != null ) weight += content.length();
ContentServiceV1.java,long timeOutMillis = watchRequest.get().timeoutMillis();,if (watchRequest != null ) long timeOutMillis = watchRequest.get().timeoutMillis();
GitRepository.java,final ObjectId fromCommitId = commitIdDatabase.get(descendingRange.from());,if (commitIdDatabase != null ) final ObjectId fromCommitId = commitIdDatabase.get(descendingRange.from());
GitRepository.java,final ObjectId toCommitId = commitIdDatabase.get(descendingRange.to());,if (commitIdDatabase != null ) final ObjectId toCommitId = commitIdDatabase.get(descendingRange.to());
GitRepository.java,long when = committerIdent.getWhen().getTime();,if (committerIdent != null ) long when = committerIdent.getWhen().getTime();
LogoutService.java,final Object principal = currentUser.getPrincipal();,if (currentUser != null ) final Object principal = currentUser.getPrincipal();
MigrationUtil.java,final Revision revision = metadataRepo.normalize(p.metaRepo());,if (metadataRepo != null ) final Revision revision = metadataRepo.normalize(p.metaRepo());
MigrationUtil.java,legacyTokens = ImmutableList.of();,if (ImmutableList != null ) legacyTokens = ImmutableList.of();
EntryDto.java,path = file.getPath();,if (file != null ) path = file.getPath();
EntryDto.java,type = file.getType().name();,if (file != null ) type = file.getType().name();
EntryDto.java,content = file.getContent();,if (file != null ) content = file.getContent();
CacheableFindCall.java,weight += content.length();,if (content != null ) weight += content.length();
AbstractCentralDogmaBuilder.java,"groupName = ""centraldogma-anonymous-"" + nextAnonymousGroupId.getAndIncrement();","if (nextAnonymousGroupId != null ) groupName = ""centraldogma-anonymous-"" + nextAnonymousGroupId.getAndIncrement();"
CentralDogmaBuilderTest.java,final long id = CentralDogmaBuilder.nextAnonymousGroupId.get();,if (CentralDogmaBuilder != null ) final long id = CentralDogmaBuilder.nextAnonymousGroupId.get();
CentralDogmaBuilderTest.java,final long id = CentralDogmaBuilder.nextAnonymousGroupId.get();,if (CentralDogmaBuilder != null ) final long id = CentralDogmaBuilder.nextAnonymousGroupId.get();
HttpApiExceptionHandler.java,final ExceptionHandlerFunction func = storageExceptionHandlers.get(cause.getClass());,if (storageExceptionHandlers != null ) final ExceptionHandlerFunction func = storageExceptionHandlers.get(cause.getClass());
RepositoryManagerWrapperTest.java,String name = testName.getMethodName();,if (testName != null ) String name = testName.getMethodName();
RepositoryManagerWrapperTest.java,String name = testName.getMethodName();,if (testName != null ) String name = testName.getMethodName();
RepositoryManagerWrapperTest.java,String name = testName.getMethodName();,if (testName != null ) String name = testName.getMethodName();
RepositoryManagerWrapperTest.java,String name = testName.getMethodName();,if (testName != null ) String name = testName.getMethodName();
RepositoryManagerWrapperTest.java,String name = testName.getMethodName();,if (testName != null ) String name = testName.getMethodName();
RepositoryManagerWrapperTest.java,String name = testName.getMethodName();,if (testName != null ) String name = testName.getMethodName();
CommitDto.java,revision = commit.revision();,if (commit != null ) revision = commit.revision();
CommitDto.java,author = commit.author();,if (commit != null ) author = commit.author();
LoginAndLogoutTest.java,final String sessionId = loginRes.content().toStringAscii();,if (loginRes != null ) final String sessionId = loginRes.content().toStringAscii();
ReplicatedLoginAndLogoutTest.java,final String sessionId = loginRes.content().toStringAscii();,if (loginRes != null ) final String sessionId = loginRes.content().toStringAscii();
SessionTokenAuthorizer.java,final User user = new User(principal.toString());,if (User(principal != null ) final User user = new User(principal.toString());
MetadataService.java,final UserAndTimestamp userAndTimestamp = new UserAndTimestamp(author.name());,if (UserAndTimestamp(author != null ) final UserAndTimestamp userAndTimestamp = new UserAndTimestamp(author.name());
ProjectService.java,final Author author = AuthenticationUtil.currentAuthor();,if (AuthenticationUtil != null ) final Author author = AuthenticationUtil.currentAuthor();
RepositoryService.java,final Author author = AuthenticationUtil.currentAuthor();,if (AuthenticationUtil != null ) final Author author = AuthenticationUtil.currentAuthor();
TokenService.java,final User user = AuthenticationUtil.currentUser();,if (AuthenticationUtil != null ) final User user = AuthenticationUtil.currentUser();
TokenService.java,final Token token = target.get();,if (target != null ) final Token token = target.get();
TokenService.java,final User user = AuthenticationUtil.currentUser();,if (AuthenticationUtil != null ) final User user = AuthenticationUtil.currentUser();
Jackson.java,final JsonStringEncoder enc = JsonStringEncoder.getInstance();,if (JsonStringEncoder != null ) final JsonStringEncoder enc = JsonStringEncoder.getInstance();
Repository.java,Revision normalizedFrom = normalize(from).join();,if (normalize(from) != null ) Revision normalizedFrom = normalize(from).join();
Repository.java,Revision normalizedTo = normalize(to).join();,if (normalize(to) != null ) Revision normalizedTo = normalize(to).join();
CachingRepository.java,final Revision normalizedFrom = normalizeFromFuture.join();,if (normalizeFromFuture != null ) final Revision normalizedFrom = normalizeFromFuture.join();
CachingRepository.java,final Revision normalizedTo = normalizeToFuture.join();,if (normalizeToFuture != null ) final Revision normalizedTo = normalizeToFuture.join();
GitRepository.java,final int baseMajor = cachedMainLaneHeadRevision().major();,if (cachedMainLaneHeadRevision() != null ) final int baseMajor = cachedMainLaneHeadRevision().major();
GitRepositoryTest.java,final Revision oldHeadRev = repo.normalize(HEAD).join();,if (repo != null ) final Revision oldHeadRev = repo.normalize(HEAD).join();
GitRepositoryTest.java,final Revision rev = repo.normalize(HEAD).join();,if (repo != null ) final Revision rev = repo.normalize(HEAD).join();
GitRepositoryTest.java,final Revision head = repo.normalize(HEAD).join();,if (repo != null ) final Revision head = repo.normalize(HEAD).join();
GitRepositoryTest.java,final Revision lastKnownRev = repo.normalize(HEAD).join();,if (repo != null ) final Revision lastKnownRev = repo.normalize(HEAD).join();
GitRepositoryTest.java,final Revision latestRev = repo.normalize(HEAD).join();,if (repo != null ) final Revision latestRev = repo.normalize(HEAD).join();
GitRepositoryTest.java,final Revision lastKnownRev = repo.normalize(HEAD).join();,if (repo != null ) final Revision lastKnownRev = repo.normalize(HEAD).join();
GitRepositoryTest.java,final Revision latestRev = repo.normalize(HEAD).join();,if (repo != null ) final Revision latestRev = repo.normalize(HEAD).join();
ContentServiceV1.java,final CommitMessageDto commitMessage = commitMessageAndChange.getKey();,if (commitMessageAndChange != null ) final CommitMessageDto commitMessage = commitMessageAndChange.getKey();
ContentServiceV1.java,final long commitTimeMillis = System.currentTimeMillis();,if (System != null ) final long commitTimeMillis = System.currentTimeMillis();
ContentServiceV1.java,final CommitMessageDto commitMessage = commitMessageAndChange.getKey();,if (commitMessageAndChange != null ) final CommitMessageDto commitMessage = commitMessageAndChange.getKey();
ContentServiceV1.java,final long commitTimeMillis = System.currentTimeMillis();,if (System != null ) final long commitTimeMillis = System.currentTimeMillis();
ProjectAccessController.java,final User user = AuthenticationUtil.currentUser();,if (AuthenticationUtil != null ) final User user = AuthenticationUtil.currentUser();
RoleResolvingDecorator.java,final User user = AuthenticationUtil.currentUser();,if (AuthenticationUtil != null ) final User user = AuthenticationUtil.currentUser();
RoleResolvingDecorator.java,future = mds.findRoles(AuthenticationUtil.currentUser());,if (mds != null ) future = mds.findRoles(AuthenticationUtil.currentUser());
ContentServiceV1.java,final Author author = AuthenticationUtil.currentAuthor();,if (AuthenticationUtil != null ) final Author author = AuthenticationUtil.currentAuthor();
CentralDogmaSessionDAO.java,final User currentUser = AuthenticationUtil.currentUser();,if (AuthenticationUtil != null ) final User currentUser = AuthenticationUtil.currentUser();
CentralDogmaSessionDAO.java,final Throwable cause = throwable.getCause();,if (throwable != null ) final Throwable cause = throwable.getCause();
SessionTokenAuthorizer.java,final User user = new User(principal.toString());,if (User(principal != null ) final User user = new User(principal.toString());
ZooKeeperCommandExecutor.java,final Object expectedResult = log.get().result();,if (log != null ) final Object expectedResult = log.get().result();
ZooKeeperCommandExecutor.java,final Object actualResult = delegate.execute(command).join();,if (delegate != null ) final Object actualResult = delegate.execute(command).join();
ZooKeeperCommandExecutor.java,final T result = delegate.execute(command).join();,if (delegate != null ) final T result = delegate.execute(command).join();
CentralDogmaSessionDAOTest.java,"final CommandExecutor executor = new StandaloneCommandExecutor(pm, ForkJoinPool.commonPool());","if (ForkJoinPool != null ) final CommandExecutor executor = new StandaloneCommandExecutor(pm, ForkJoinPool.commonPool());"
CentralDogmaSessionDAOTest.java,"final CommandExecutor executor = new StandaloneCommandExecutor(pm, ForkJoinPool.commonPool());","if (ForkJoinPool != null ) final CommandExecutor executor = new StandaloneCommandExecutor(pm, ForkJoinPool.commonPool());"
MetadataServiceTest.java,"final CommandExecutor executor = new StandaloneCommandExecutor(pm, ForkJoinPool.commonPool());","if (ForkJoinPool != null ) final CommandExecutor executor = new StandaloneCommandExecutor(pm, ForkJoinPool.commonPool());"
GitRepository.java,final int maxMajor = headRevision.major();,if (headRevision != null ) final int maxMajor = headRevision.major();
GitRepository.java,int major = revision.major();,if (revision != null ) int major = revision.major();
CentralDogmaServiceImpl.java,final EventLoop eventLoop = RequestContext.current().eventLoop();,if (RequestContext != null ) final EventLoop eventLoop = RequestContext.current().eventLoop();
CentralDogmaServiceImpl.java,final EventLoop eventLoop = RequestContext.current().eventLoop();,if (RequestContext != null ) final EventLoop eventLoop = RequestContext.current().eventLoop();
ApplicationTokenAuthorizer.java,final StringBuilder login = new StringBuilder(appToken.appId());,if (StringBuilder(appToken != null ) final StringBuilder login = new StringBuilder(appToken.appId());
ApplicationTokenAuthorizer.java,final SocketAddress ra = ctx.remoteAddress();,if (ctx != null ) final SocketAddress ra = ctx.remoteAddress();
AddOperation.java,final JsonPointer parentPath = path.head();,if (path != null ) final JsonPointer parentPath = path.head();
AddOperation.java,final JsonNode ret = node.deepCopy();,if (node != null ) final JsonNode ret = node.deepCopy();
AddOperation.java,final JsonNode ret = node.deepCopy();,if (node != null ) final JsonNode ret = node.deepCopy();
CopyOperation.java,final JsonNode dupData = node.at(from).deepCopy();,if (node != null ) final JsonNode dupData = node.at(from).deepCopy();
RemoveOperation.java,final JsonNode ret = node.deepCopy();,if (node != null ) final JsonNode ret = node.deepCopy();
RemoveOperation.java,final JsonNode parentNode = ret.at(path.head());,if (ret != null ) final JsonNode parentNode = ret.at(path.head());
ReplaceOperation.java,final JsonNode replacement = value.deepCopy();,if (value != null ) final JsonNode replacement = value.deepCopy();
ReplaceOperation.java,final JsonNode ret = node.deepCopy();,if (node != null ) final JsonNode ret = node.deepCopy();
ReplaceOperation.java,final JsonNode parent = ret.at(path.head());,if (ret != null ) final JsonNode parent = ret.at(path.head());
SafeReplaceOperation.java,final JsonNode ret = node.deepCopy();,if (node != null ) final JsonNode ret = node.deepCopy();
SafeReplaceOperation.java,final JsonNode parent = ret.at(path.head());,if (ret != null ) final JsonNode parent = ret.at(path.head());
JsonDiff.java,final JsonNodeType firstType = source.getNodeType();,if (source != null ) final JsonNodeType firstType = source.getNodeType();
JsonDiff.java,final JsonNodeType secondType = target.getNodeType();,if (target != null ) final JsonNodeType secondType = target.getNodeType();
JsonDiff.java,final int firstSize = source.size();,if (source != null ) final int firstSize = source.size();
JsonDiff.java,final int secondSize = target.size();,if (target != null ) final int secondSize = target.size();
JsonDiff.java,final JsonNodeType firstType = first.getNodeType();,if (first != null ) final JsonNodeType firstType = first.getNodeType();
JsonDiff.java,final JsonNodeType secondType = second.getNodeType();,if (second != null ) final JsonNodeType secondType = second.getNodeType();
JsonDiff.java,name = firstFields.next();,if (firstFields != null ) name = firstFields.next();
RevisionJsonDeserializer.java,minor = minorNode.intValue();,if (minorNode != null ) minor = minorNode.intValue();
RevisionJsonSerializer.java,final int major = value.major();,if (value != null ) final int major = value.major();
RevisionJsonSerializer.java,final int minor = value.minor();,if (value != null ) final int minor = value.minor();
RunspaceDto.java,projectName = runspace.getProjectName();,if (runspace != null ) projectName = runspace.getProjectName();
RunspaceDto.java,repositoryName = runspace.getRepositoryName();,if (runspace != null ) repositoryName = runspace.getRepositoryName();
RunspaceDto.java,head = new CommitDto(runspace.getHead());,if (CommitDto(runspace != null ) head = new CommitDto(runspace.getHead());
GitRepository.java,int minor = revision.minor();,if (revision != null ) int minor = revision.minor();
GitRepository.java,final int baseMinor = runspaceHeadRevision(major).minor();,if (runspaceHeadRevision(major) != null ) final int baseMinor = runspaceHeadRevision(major).minor();
GitRepository.java,validCommitRange = from.major() == to.major();,if (to != null ) validCommitRange = from.major() == to.major();
GitRepository.java,validCommitRange = to.onMainLane();,if (to != null ) validCommitRange = to.onMainLane();
GitRepository.java,headRevision = runspaceHeadRevision(baseRevision.major());,if (runspaceHeadRevision(baseRevision != null ) headRevision = runspaceHeadRevision(baseRevision.major());
GitRepository.java,headRevision = runspaceHeadRevision(normLastKnownRevision.major());,if (runspaceHeadRevision(normLastKnownRevision != null ) headRevision = runspaceHeadRevision(normLastKnownRevision.major());
GitRepository.java,final Result result = refRename.rename();,if (refRename != null ) final Result result = refRename.rename();
GitRepository.java,final Revision revision = new Revision(refEntry.getKey());,if (Revision(refEntry != null ) final Revision revision = new Revision(refEntry.getKey());
GitRepository.java,final RevCommit revCommit = revWalk.parseCommit(ref.getObjectId());,if (revWalk != null ) final RevCommit revCommit = revWalk.parseCommit(ref.getObjectId());
GitRepository.java,final Revision revision = CommitUtil.extractRevision(revCommit.getFullMessage());,if (CommitUtil != null ) final Revision revision = CommitUtil.extractRevision(revCommit.getFullMessage());
GitRepository.java,oldText = Collections.emptyList();,if (Collections != null ) oldText = Collections.emptyList();
CentralDogma.java,final String replicaId = zkCfg.replicaId();,if (zkCfg != null ) final String replicaId = zkCfg.replicaId();
CentralDogmaBuilder.java,"final String groupName = ""centraldogma-"" + nextGroupId.getAndIncrement();","if (nextGroupId != null ) final String groupName = ""centraldogma-"" + nextGroupId.getAndIncrement();"
GitRepository.java,jGitRepository = repositoryBuilder.build();,if (repositoryBuilder != null ) jGitRepository = repositoryBuilder.build();
GitRepository.java,headRev = runspaceHeadRevision(normalizedLastKnownRev.major());,if (runspaceHeadRevision(normalizedLastKnownRev != null ) headRev = runspaceHeadRevision(normalizedLastKnownRev.major());
GitRepository.java,RevCommit revCommit = revWalk.parseCommit(ref.getObjectId());,if (revWalk != null ) RevCommit revCommit = revWalk.parseCommit(ref.getObjectId());
GitRepository.java,Revision revision = CommitUtil.extractRevision(revCommit.getFullMessage());,if (CommitUtil != null ) Revision revision = CommitUtil.extractRevision(revCommit.getFullMessage());
RepositoryManagerWrapperTest.java,String name = testName.getMethodName();,if (testName != null ) String name = testName.getMethodName();
CentralDogmaRule.java,host = serverAddress.getHostString() + ':' + serverAddress.getPort();,if (serverAddress != null ) host = serverAddress.getHostString() + ':' + serverAddress.getPort();
CentralDogmaBeanConfigBuilder.java,project = config.project().get();,if (config != null ) project = config.project().get();
CentralDogmaBeanConfigBuilder.java,repository = config.repository().get();,if (config != null ) repository = config.repository().get();
CentralDogmaBeanConfigBuilder.java,path = config.path().get();,if (config != null ) path = config.path().get();
CentralDogmaBeanConfigBuilder.java,jsonPath = config.jsonPath().get();,if (config != null ) jsonPath = config.jsonPath().get();
CentralDogmaBeanConfigBuilder.java,project = config.project();,if (config != null ) project = config.project();
CentralDogmaBeanConfigBuilder.java,repository = config.repository();,if (config != null ) repository = config.repository();
CentralDogmaBeanConfigBuilder.java,path = config.path();,if (config != null ) path = config.path();
CentralDogmaBeanConfigBuilder.java,jsonPath = config.jsonPath();,if (config != null ) jsonPath = config.jsonPath();
CentralDogmaServiceImpl.java,List<Project> ret = new ArrayList<>(projects.size());,if (ArrayList<>(projects != null ) List<Project> ret = new ArrayList<>(projects.size());
