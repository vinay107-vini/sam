Filename,Buggy/Deleted,Fixed/Added
MavenWrapperDownloader.java,rbc = Channels.newChannel(website.openStream());,if (Channels != null ) rbc = Channels.newChannel(website.openStream());
MavenWrapperDownloader.java,rbc = Channels.newChannel(website.openStream());,if (Channels != null ) rbc = Channels.newChannel(website.openStream());
_WebConfigurerTest.java,Builder builder = Undertow.builder();,if (Undertow != null ) Builder builder = Undertow.builder();
_AuditEventConverter.java,Object object = entry.getValue();,if (entry != null ) Object object = entry.getValue();
_CassandraConfiguration.java,String points = properties.getContactPoints();,if (properties != null ) String points = properties.getContactPoints();
_CustomAuditEventRepository.java,persistentAuditEvents = persistenceAuditEventRepository.findAll();,if (persistenceAuditEventRepository != null ) persistentAuditEvents = persistenceAuditEventRepository.findAll();
_UserResourceIntTest.java,User updatedUser = userRepository.findOne(user.getId());,if (userRepository != null ) User updatedUser = userRepository.findOne(user.getId());
_UserResourceIntTest.java,User updatedUser = userRepository.findOne(user.getId());,if (userRepository != null ) User updatedUser = userRepository.findOne(user.getId());
_UserResourceIntTest.java,User updatedUser = userRepository.findOne(user.getId());,if (userRepository != null ) User updatedUser = userRepository.findOne(user.getId());
_UserResourceIntTest.java,User updatedUser = userRepository.findOne(user.getId());,if (userRepository != null ) User updatedUser = userRepository.findOne(user.getId());
_CustomSocialConnectionRepository.java,"SocialUserConnection socialUserConnectionToUdpate =  connectionToUserSocialConnection(connection, socialUserConnection.getRank());","if (socialUserConnection != null ) SocialUserConnection socialUserConnectionToUdpate =  connectionToUserSocialConnection(connection, socialUserConnection.getRank());"
_EntityRepository.java,BoundStatement stmt = findAllStmt.bind();,if (findAllStmt != null ) BoundStatement stmt = findAllStmt.bind();
_EntityRepository.java,BoundStatement stmt = truncateStmt.bind();,if (truncateStmt != null ) BoundStatement stmt = truncateStmt.bind();
_RateLimitingFilter.java,String login = SecurityUtils.getCurrentUserLogin();,if (SecurityUtils != null ) String login = SecurityUtils.getCurrentUserLogin();
_SecurityUtils.java,Authentication authentication = securityContext.getAuthentication();,if (securityContext != null ) Authentication authentication = securityContext.getAuthentication();
_SecurityUtils.java,UserDetails springSecurityUser = (UserDetails) authentication.getPrincipal();,if (authentication != null ) UserDetails springSecurityUser = (UserDetails) authentication.getPrincipal();
_SecurityUtils.java,userName = springSecurityUser.getUsername();,if (springSecurityUser != null ) userName = springSecurityUser.getUsername();
_SecurityUtils.java,userName = (String) authentication.getPrincipal();,if (authentication != null ) userName = (String) authentication.getPrincipal();
_SecurityUtils.java,Authentication authentication = securityContext.getAuthentication();,if (securityContext != null ) Authentication authentication = securityContext.getAuthentication();
_SecurityUtils.java,Authentication authentication = securityContext.getAuthentication();,if (securityContext != null ) Authentication authentication = securityContext.getAuthentication();
_SecurityUtils.java,Authentication authentication = securityContext.getAuthentication();,if (securityContext != null ) Authentication authentication = securityContext.getAuthentication();
_SpringSecurityAuditorAware.java,String userName = SecurityUtils.getCurrentUserLogin();,if (SecurityUtils != null ) String userName = SecurityUtils.getCurrentUserLogin();
_AccountResource.java,final String userLogin = SecurityUtils.getCurrentUserLogin();,if (SecurityUtils != null ) final String userLogin = SecurityUtils.getCurrentUserLogin();
_SecurityUtilsUnitTest.java,String login = SecurityUtils.getCurrentUserLogin();,if (SecurityUtils != null ) String login = SecurityUtils.getCurrentUserLogin();
_SecurityUtilsUnitTest.java,String jwt = SecurityUtils.getCurrentUserJWT();,if (SecurityUtils != null ) String jwt = SecurityUtils.getCurrentUserJWT();
_AccountResource.java,Optional<User> existingUser = userRepository.findOneByLogin(userDTO.getLogin());,if (userRepository != null ) Optional<User> existingUser = userRepository.findOneByLogin(userDTO.getLogin());
_AccountResource.java,Instant dbModifiedDate = existingUser.get().getLastModifiedDate();,if (existingUser != null ) Instant dbModifiedDate = existingUser.get().getLastModifiedDate();
_UserService.java,String encryptedPassword = passwordEncoder.encode(userDTO.getPassword());,if (passwordEncoder != null ) String encryptedPassword = passwordEncoder.encode(userDTO.getPassword());
_UserResource.java,Optional<User> existingUser = userRepository.findOneByEmailIgnoreCase(managedUserVM.getEmail());,if (userRepository != null ) Optional<User> existingUser = userRepository.findOneByEmailIgnoreCase(managedUserVM.getEmail());
_UserServiceIntTest.java,int existingCount = persistentTokenRepository.findByUser(admin).size();,if (persistentTokenRepository != null ) int existingCount = persistentTokenRepository.findByUser(admin).size();
_UserServiceIntTest.java,LocalDate now = LocalDate.now();,if (LocalDate != null ) LocalDate now = LocalDate.now();
_AccountResource.java,Optional<User> user = Optional.ofNullable(userService.getUserWithAuthorities());,if (Optional != null ) Optional<User> user = Optional.ofNullable(userService.getUserWithAuthorities());
_AccountResource.java,Optional<User> user = Optional.ofNullable(userService.getUserWithAuthorities());,if (Optional != null ) Optional<User> user = Optional.ofNullable(userService.getUserWithAuthorities());
_AccountResource.java,Optional<User> user = userRepository.findOneByLogin(SecurityUtils.getCurrentUserLogin());,if (userRepository != null ) Optional<User> user = userRepository.findOneByLogin(SecurityUtils.getCurrentUserLogin());
_AccountResource.java,final String userLogin = SecurityUtils.getCurrentUserLogin();,if (SecurityUtils != null ) final String userLogin = SecurityUtils.getCurrentUserLogin();
_AccountResource.java,Optional<User> existingUser = userRepository.findOneByEmailIgnoreCase(userDTO.getEmail());,if (userRepository != null ) Optional<User> existingUser = userRepository.findOneByEmailIgnoreCase(userDTO.getEmail());
_CookieCollectionTest.java,Iterator<Cookie> it=cookies.iterator();,if (it=cookies != null ) Iterator<Cookie> it=cookies.iterator();
_AccountResource.java,final String userLogin = SecurityUtils.getCurrentUserLogin();,if (SecurityUtils != null ) final String userLogin = SecurityUtils.getCurrentUserLogin();
_AccountResource.java,Optional<User> existingUser = userRepository.findOneByEmailIgnoreCase(userDTO.getEmail());,if (userRepository != null ) Optional<User> existingUser = userRepository.findOneByEmailIgnoreCase(userDTO.getEmail());
_EntityMapper.java,Optional<User> existingUser = userRepository.findOneByLogin(userDTO.getLogin());,if (userRepository != null ) Optional<User> existingUser = userRepository.findOneByLogin(userDTO.getLogin());
_EntityMapper.java,Instant dbModifiedDate = existingUser.get().getLastModifiedDate();,if (existingUser != null ) Instant dbModifiedDate = existingUser.get().getLastModifiedDate();
_EntityMapper.java,final String userLogin = SecurityUtils.getCurrentUserLogin();,if (SecurityUtils != null ) final String userLogin = SecurityUtils.getCurrentUserLogin();
_EntityMapper.java,Optional<User> existingUser = userRepository.findOneByEmailIgnoreCase(userDTO.getEmail());,if (userRepository != null ) Optional<User> existingUser = userRepository.findOneByEmailIgnoreCase(userDTO.getEmail());
_AccountResource.java,Optional<User> existingUser = userRepository.findOneByLogin(userDTO.getLogin());,if (userRepository != null ) Optional<User> existingUser = userRepository.findOneByLogin(userDTO.getLogin());
_AccountResource.java,Instant dbModifiedDate = existingUser.get().getLastModifiedDate();,if (existingUser != null ) Instant dbModifiedDate = existingUser.get().getLastModifiedDate();
_AccountResource.java,final String userLogin = SecurityUtils.getCurrentUserLogin();,if (SecurityUtils != null ) final String userLogin = SecurityUtils.getCurrentUserLogin();
_AccountResource.java,Optional<User> existingUser = userRepository.findOneByEmailIgnoreCase(userDTO.getEmail());,if (userRepository != null ) Optional<User> existingUser = userRepository.findOneByEmailIgnoreCase(userDTO.getEmail());
_AccountResource.java,Optional<User> existingUser = userRepository.findOneByLogin(userDTO.getLogin());,if (userRepository != null ) Optional<User> existingUser = userRepository.findOneByLogin(userDTO.getLogin());
_AccountResource.java,Instant dbModifiedDate = existingUser.get().getLastModifiedDate();,if (existingUser != null ) Instant dbModifiedDate = existingUser.get().getLastModifiedDate();
_AccountResource.java,final String userLogin = SecurityUtils.getCurrentUserLogin();,if (SecurityUtils != null ) final String userLogin = SecurityUtils.getCurrentUserLogin();
_AccountResource.java,Optional<User> existingUser = userRepository.findOneByEmailIgnoreCase(userDTO.getEmail());,if (userRepository != null ) Optional<User> existingUser = userRepository.findOneByEmailIgnoreCase(userDTO.getEmail());
_AccountResourceIntTest.java,this.restUserMockMvc = MockMvcBuilders.standaloneSetup(accountUserMockResource).build();,if (MockMvcBuilders != null ) this.restUserMockMvc = MockMvcBuilders.standaloneSetup(accountUserMockResource).build();
_AccountResource.java,Optional<User> existingUser = userRepository.findOneByEmail(userDTO.getEmail());,if (userRepository != null ) Optional<User> existingUser = userRepository.findOneByEmail(userDTO.getEmail());
_UserResource.java,Optional<User> existingUser = userRepository.findOneByEmail(managedUserVM.getEmail());,if (userRepository != null ) Optional<User> existingUser = userRepository.findOneByEmail(managedUserVM.getEmail());
_UserResource.java,Optional<User> existingUser = userRepository.findOneByEmail(managedUserVM.getEmail());,if (userRepository != null ) Optional<User> existingUser = userRepository.findOneByEmail(managedUserVM.getEmail());
_UaaConfiguration.java,int accessTokenValidity = uaaProperties.getWebClientConfiguration().getAccessTokenValidityInSeconds();,if (uaaProperties != null ) int accessTokenValidity = uaaProperties.getWebClientConfiguration().getAccessTokenValidityInSeconds();
_UaaConfiguration.java,int refreshTokenValidity = uaaProperties.getWebClientConfiguration().getRefreshTokenValidityInSecondsForRememberMe();,if (uaaProperties != null ) int refreshTokenValidity = uaaProperties.getWebClientConfiguration().getRefreshTokenValidityInSecondsForRememberMe();
_OAuth2JwtAccessTokenConverter.java,long t = System.currentTimeMillis();,if (System != null ) long t = System.currentTimeMillis();
_OAuth2JwtAccessTokenConverter.java,SignatureVerifier verifier = signatureVerifierClient.getSignatureVerifier();,if (signatureVerifierClient != null ) SignatureVerifier verifier = signatureVerifierClient.getSignatureVerifier();
_CustomAuditEventRepository.java,String value = entry.getValue();,if (entry != null ) String value = entry.getValue();
_CustomAuditEventRepository.java,int length = value.length();,if (value != null ) int length = value.length();
_CookieCollection.java,cookieMap = new HashMap<>(cookies.size());,if (HashMap<>(cookies != null ) cookieMap = new HashMap<>(cookies.size());
_CookieTokenExtractor.java,result = accessTokenCookie.getValue();,if (accessTokenCookie != null ) result = accessTokenCookie.getValue();
_OAuth2AuthenticationService.java,CookieCollection requestCookies = new CookieCollection(request.getCookies());,if (CookieCollection(request != null ) CookieCollection requestCookies = new CookieCollection(request.getCookies());
_OAuth2AuthenticationService.java,Cookie[] cookies = cookieHelper.stripCookies(httpServletRequest.getCookies());,if (cookieHelper != null ) Cookie[] cookies = cookieHelper.stripCookies(httpServletRequest.getCookies());
_OAuth2CookieHelper.java,private JsonParser jsonParser = JsonParserFactory.getJsonParser();,if (JsonParserFactory != null ) private JsonParser jsonParser = JsonParserFactory.getJsonParser();
_OAuth2CookieHelper.java,String value = cookie.getValue();,if (cookie != null ) String value = cookie.getValue();
_OAuth2CookieHelper.java,String value = refreshToken.getValue();,if (refreshToken != null ) String value = refreshToken.getValue();
_OAuth2CookieHelper.java,String value = refreshCookie.getValue();,if (refreshCookie != null ) String value = refreshCookie.getValue();
_OAuth2CookieHelper.java,String claims = jwt.getClaims();,if (jwt != null ) String claims = jwt.getClaims();
_OAuth2CookieHelper.java,domain = request.getServerName().toLowerCase();,if (request != null ) domain = request.getServerName().toLowerCase();
_AccountResource.java,Optional<User> existingUser = userRepository.findOneByEmailIgnoreCase(userDTO.getEmail());,if (userRepository != null ) Optional<User> existingUser = userRepository.findOneByEmailIgnoreCase(userDTO.getEmail());
_UserResource.java,Optional<User> existingUser = userRepository.findOneByEmailIgnoreCase(managedUserVM.getEmail());,if (userRepository != null ) Optional<User> existingUser = userRepository.findOneByEmailIgnoreCase(managedUserVM.getEmail());
_CustomAuditEventRepositoryIntTest.java,List<PersistentAuditEvent> persistentAuditEvents = persistenceAuditEventRepository.findAll();,if (persistenceAuditEventRepository != null ) List<PersistentAuditEvent> persistentAuditEvents = persistenceAuditEventRepository.findAll();
_CookieCollectionTest.java,Iterator<Cookie> it=cookies.iterator();,if (it=cookies != null ) Iterator<Cookie> it=cookies.iterator();
_OAuth2AuthenticationServiceTest.java,public ExpectedException expectedException = ExpectedException.none();,if (ExpectedException != null ) public ExpectedException expectedException = ExpectedException.none();
_OAuth2AuthenticationServiceTest.java,CookieCollection cookies = new CookieCollection(newRequest.getCookies());,if (CookieCollection(newRequest != null ) CookieCollection cookies = new CookieCollection(newRequest.getCookies());
_MongoDBClientDetailsService.java,private PasswordEncoder passwordEncoder = NoOpPasswordEncoder.getInstance();,if (NoOpPasswordEncoder != null ) private PasswordEncoder passwordEncoder = NoOpPasswordEncoder.getInstance();
_OAuth2AuthenticationReadConverter.java,Set<GrantedAuthority> grantedAuthorities = new HashSet<>(authorities.size());,if (HashSet<>(authorities != null ) Set<GrantedAuthority> grantedAuthorities = new HashSet<>(authorities.size());
_OAuth2AuthenticationAccessToken.java,this.id = UUID.randomUUID().toString();,if (UUID != null ) this.id = UUID.randomUUID().toString();
_OAuth2AuthenticationAccessToken.java,this.userName = authentication.getName();,if (authentication != null ) this.userName = authentication.getName();
_OAuth2AuthenticationApproval.java,this.id = UUID.randomUUID().toString();,if (UUID != null ) this.id = UUID.randomUUID().toString();
_OAuth2AuthenticationClientDetails.java,this.id = UUID.randomUUID().toString();,if (UUID != null ) this.id = UUID.randomUUID().toString();
_OAuth2AuthenticationCode.java,this.id = UUID.randomUUID().toString();,if (UUID != null ) this.id = UUID.randomUUID().toString();
_OAuth2AuthenticationRefreshToken.java,this.id = UUID.randomUUID().toString();,if (UUID != null ) this.id = UUID.randomUUID().toString();
_UserFeignClientInterceptor.java,SecurityContext securityContext = SecurityContextHolder.getContext();,if (SecurityContextHolder != null ) SecurityContext securityContext = SecurityContextHolder.getContext();
_UserFeignClientInterceptor.java,Authentication authentication = securityContext.getAuthentication();,if (securityContext != null ) Authentication authentication = securityContext.getAuthentication();
_AccountResource.java,Optional<User> existingUser = userRepository.findOneByEmail(userDTO.getEmail());,if (userRepository != null ) Optional<User> existingUser = userRepository.findOneByEmail(userDTO.getEmail());
_UserResource.java,Optional<User> existingUser = userRepository.findOneByEmail(managedUserVM.getEmail());,if (userRepository != null ) Optional<User> existingUser = userRepository.findOneByEmail(managedUserVM.getEmail());
_CustomAuditEventRepository.java,int length = value.length();,if (value != null ) int length = value.length();
_ExceptionTranslator.java,BindingResult result = ex.getBindingResult();,if (ex != null ) BindingResult result = ex.getBindingResult();
_ExceptionTranslator.java,List<FieldError> fieldErrors = result.getFieldErrors();,if (result != null ) List<FieldError> fieldErrors = result.getFieldErrors();
_ExceptionTranslator.java,builder = ResponseEntity.status(responseStatus.value());,if (ResponseEntity != null ) builder = ResponseEntity.status(responseStatus.value());
_PersistentTokenRememberMeServices.java,login = token.getUser().getLogin();<%}%><% if (databaseType === 'cassandra') { %>,if (%> != null ) login = token.getUser().getLogin();<%}%><% if (databaseType === 'cassandra') { %>
_WebsocketConfiguration.java,Principal principal = request.getPrincipal();,if (request != null ) Principal principal = request.getPrincipal();
_PersistentTokenRememberMeServices.java,login = token.getUser().getLogin();<%}%><% if (databaseType == 'cassandra') { %>,if (%> != null ) login = token.getUser().getLogin();<%}%><% if (databaseType == 'cassandra') { %>
_MailService.java,Locale locale = Locale.forLanguageTag(user.getLangKey());,if (Locale != null ) Locale locale = Locale.forLanguageTag(user.getLangKey());
_MailService.java,Locale locale = Locale.forLanguageTag(user.getLangKey());,if (Locale != null ) Locale locale = Locale.forLanguageTag(user.getLangKey());
_CacheConfiguration.java,String serviceId = registration.getServiceId();,if (registration != null ) String serviceId = registration.getServiceId();
_AccountResourceIntTest.java,this.restMvc = MockMvcBuilders.standaloneSetup(accountResource).build();,if (MockMvcBuilders != null ) this.restMvc = MockMvcBuilders.standaloneSetup(accountResource).build();
_PersistentTokenRememberMeServices.java,login = token.getUser().getLogin();<%}%><% if (databaseType == 'cassandra') { %>,if (%> != null ) login = token.getUser().getLogin();<%}%><% if (databaseType == 'cassandra') { %>
_PersistentTokenRememberMeServices.java,login = token.getLogin();<%}%>,if (token != null ) login = token.getLogin();<%}%>
_PersistentTokenRememberMeServices.java,String login = token.getUser().getLogin();<%}%><% if (databaseType == 'cassandra') { %>,if (%> != null ) String login = token.getUser().getLogin();<%}%><% if (databaseType == 'cassandra') { %>
_PersistentTokenRememberMeServices.java,String login = token.getLogin();<%}%>,if (token != null ) String login = token.getLogin();<%}%>
_AbstractAuditingEntity.java,private ZonedDateTime createdDate = ZonedDateTime.now();,if (ZonedDateTime != null ) private ZonedDateTime createdDate = ZonedDateTime.now();
_AbstractAuditingEntity.java,private ZonedDateTime lastModifiedDate = ZonedDateTime.now();,if (ZonedDateTime != null ) private ZonedDateTime lastModifiedDate = ZonedDateTime.now();
_UserService.java,ZonedDateTime now = ZonedDateTime.now();,if (ZonedDateTime != null ) ZonedDateTime now = ZonedDateTime.now();
_UserServiceIntTest.java,ZonedDateTime now = ZonedDateTime.now();,if (ZonedDateTime != null ) ZonedDateTime now = ZonedDateTime.now();
_RateLimitingFilter.java,String id = getId(RequestContext.getCurrentContext().getRequest());,if (getId(RequestContext != null ) String id = getId(RequestContext.getCurrentContext().getRequest());
_RateLimitingFilter.java,Calendar calendar = Calendar.getInstance();,if (Calendar != null ) Calendar calendar = Calendar.getInstance();
_RateLimitingRepository.java,BoundStatement stmt = rateLimitingIncrement.bind();,if (rateLimitingIncrement != null ) BoundStatement stmt = rateLimitingIncrement.bind();
_RateLimitingRepository.java,BoundStatement stmt = rateLimitingCount.bind();,if (rateLimitingCount != null ) BoundStatement stmt = rateLimitingCount.bind();
_CustomZonedDateTimeCodec.java,long millis = value.toInstant().toEpochMilli();,if (value != null ) long millis = value.toInstant().toEpochMilli();
_RateLimitingFilter.java,String id = getId(RequestContext.getCurrentContext().getRequest());,if (getId(RequestContext != null ) String id = getId(RequestContext.getCurrentContext().getRequest());
_RateLimitingFilter.java,Calendar calendar = Calendar.getInstance();,if (Calendar != null ) Calendar calendar = Calendar.getInstance();
_RateLimitingRepository.java,BoundStatement stmt = rateLimitingIncrement.bind();,if (rateLimitingIncrement != null ) BoundStatement stmt = rateLimitingIncrement.bind();
_RateLimitingRepository.java,BoundStatement stmt = rateLimitingCount.bind();,if (rateLimitingCount != null ) BoundStatement stmt = rateLimitingCount.bind();
_CacheConfiguration.java,String serviceId = discoveryClient.getLocalServiceInstance().getServiceId();,if (discoveryClient != null ) String serviceId = discoveryClient.getLocalServiceInstance().getServiceId();
_UserResourceIntTest.java,int databaseSizeBeforeUpdate = userRepository.findAll().size();,if (userRepository != null ) int databaseSizeBeforeUpdate = userRepository.findAll().size();
_UserResourceIntTest.java,int databaseSizeBeforeUpdate = userRepository.findAll().size();,if (userRepository != null ) int databaseSizeBeforeUpdate = userRepository.findAll().size();
_DatabaseConfiguration.java,Mongobee mongobee = new Mongobee(mongoProperties.getUri());,if (Mongobee(mongoProperties != null ) Mongobee mongobee = new Mongobee(mongoProperties.getUri());
_UserResourceIntTest.java,this.restUserMockMvc = MockMvcBuilders.standaloneSetup(userResource).build();,if (MockMvcBuilders != null ) this.restUserMockMvc = MockMvcBuilders.standaloneSetup(userResource).build();
_CassandraKeyspaceUnitTest.java,KeyspaceMetadata metadata = session.getCluster().getMetadata();,if (session != null ) KeyspaceMetadata metadata = session.getCluster().getMetadata();
_ManagedUserVM.java,this.id = user.getId();<% if (databaseType == 'mongodb' || databaseType == 'sql') { %>,if (%> != null ) this.id = user.getId();<% if (databaseType == 'mongodb' || databaseType == 'sql') { %>
_ManagedUserVM.java,this.createdBy = user.getCreatedBy();,if (user != null ) this.createdBy = user.getCreatedBy();
_ManagedUserVM.java,this.createdDate = user.getCreatedDate();,if (user != null ) this.createdDate = user.getCreatedDate();
_ManagedUserVM.java,this.lastModifiedBy = user.getLastModifiedBy();,if (user != null ) this.lastModifiedBy = user.getLastModifiedBy();
_ManagedUserVM.java,this.lastModifiedDate = user.getLastModifiedDate();<% } %>,if (%> != null ) this.lastModifiedDate = user.getLastModifiedDate();<% } %>
_EntityRepository.java,BoundStatement stmt = findAllStmt.bind();,if (findAllStmt != null ) BoundStatement stmt = findAllStmt.bind();
_EntityRepository.java,BoundStatement stmt = truncateStmt.bind();,if (truncateStmt != null ) BoundStatement stmt = truncateStmt.bind();
_SpectatorLogMetricWriter.java,String metricContent = metric.getName();,if (metric != null ) String metricContent = metric.getName();
_UserResource.java,List<User> users = userRepository.findAll();,if (userRepository != null ) List<User> users = userRepository.findAll();
_UserService.java,Optional<User> optionalUser = userRepository.findOneByLogin(SecurityUtils.getCurrentUserLogin());,if (userRepository != null ) Optional<User> optionalUser = userRepository.findOneByLogin(SecurityUtils.getCurrentUserLogin());
_UserService.java,user = optionalUser.get();,if (optionalUser != null ) user = optionalUser.get();
_PageableParameterBuilderPlugin.java,ResolvedMethodParameter parameter = context.resolvedMethodParameter();,if (context != null ) ResolvedMethodParameter parameter = context.resolvedMethodParameter();
_WebConfigurer.java,CorsConfiguration config = applicationProperties.getCors();,if (applicationProperties != null ) CorsConfiguration config = applicationProperties.getCors();
_ProfileInfoResource.java,String[] displayOnActiveProfiles = applicationProperties.getRibbon().getDisplayOnActiveProfiles();,if (applicationProperties != null ) String[] displayOnActiveProfiles = applicationProperties.getRibbon().getDisplayOnActiveProfiles();
_LoggingAspect.java,Object result = joinPoint.proceed();,if (joinPoint != null ) Object result = joinPoint.proceed();
_WebConfigurer.java,CorsConfiguration config = jHipsterProperties.getCors();,if (jHipsterProperties != null ) CorsConfiguration config = jHipsterProperties.getCors();
_JCacheGaugeSet.java,ObjectName objectName = objectInstance.getObjectName();,if (objectInstance != null ) ObjectName objectName = objectInstance.getObjectName();
_AngularCookieLocaleResolver.java,String value = cookie.getValue();,if (cookie != null ) String value = cookie.getValue();
_ProfileInfoResource.java,String[] displayOnActiveProfiles = jHipsterProperties.getRibbon().getDisplayOnActiveProfiles();,if (jHipsterProperties != null ) String[] displayOnActiveProfiles = jHipsterProperties.getRibbon().getDisplayOnActiveProfiles();
_EntityRepository.java,BoundStatement stmt =  findAllStmt.bind();,if (findAllStmt != null ) BoundStatement stmt =  findAllStmt.bind();
_EntityRepository.java,BoundStatement stmt =  truncateStmt.bind();,if (truncateStmt != null ) BoundStatement stmt =  truncateStmt.bind();
_SecurityUtils.java,UserDetails springSecurityUser = (UserDetails) authentication.getPrincipal();,if (authentication != null ) UserDetails springSecurityUser = (UserDetails) authentication.getPrincipal();
_CacheConfiguration.java,SortedSet<String> names = metricRegistry.getNames();,if (metricRegistry != null ) SortedSet<String> names = metricRegistry.getNames();
_CacheConfiguration.java,cacheManager = net.sf.ehcache.CacheManager.create();,if (net != null ) cacheManager = net.sf.ehcache.CacheManager.create();
_AbstractCassandraTest.java,Session session = cluster.connect();,if (cluster != null ) Session session = cluster.connect();
_MailService.java,String baseUrl = jHipsterProperties.getMail().getBaseUrl();,if (jHipsterProperties != null ) String baseUrl = jHipsterProperties.getMail().getBaseUrl();
_AccountResource.java,String baseUrl = jHipsterProperties.getMail().getBaseUrl();,if (jHipsterProperties != null ) String baseUrl = jHipsterProperties.getMail().getBaseUrl();
_HazelcastCacheRegionFactory.java,hazelcastInstance = CacheConfiguration.getHazelcastInstance();,if (CacheConfiguration != null ) hazelcastInstance = CacheConfiguration.getHazelcastInstance();
_HazelcastCacheRegionFactory.java,cleanupService = new CleanupService(hazelcastInstance.getName());,if (CleanupService(hazelcastInstance != null ) cleanupService = new CleanupService(hazelcastInstance.getName());
_PageableParameterBuilderPlugin.java,MethodParameter parameter = context.methodParameter();,if (context != null ) MethodParameter parameter = context.methodParameter();
_CsrfCookieGeneratorFilter.java,"Cookie cookie = new Cookie(pCookieName, csrfToken.getToken());","if (csrfToken != null ) Cookie cookie = new Cookie(pCookieName, csrfToken.getToken());"
_CacheConfiguration.java,String name = entity.getName();,if (entity != null ) String name = entity.getName();
_CacheConfiguration.java,name = entity.getJavaType().getName();,if (entity != null ) name = entity.getJavaType().getName();
_PageableParameterBuilderPlugin.java,ResolvedMethodParameter parameter = context.resolvedMethodParameter();,if (context != null ) ResolvedMethodParameter parameter = context.resolvedMethodParameter();
_PageableParameterBuilderPlugin.java,MethodParameter parameter = context.methodParameter();,if (context != null ) MethodParameter parameter = context.methodParameter();
_UserService.java,user = optionalUser.get();,if (optionalUser != null ) user = optionalUser.get();
_UserService.java,Optional<User> optionalUser = userRepository.findOneByLogin(SecurityUtils.getCurrentUserLogin());,if (userRepository != null ) Optional<User> optionalUser = userRepository.findOneByLogin(SecurityUtils.getCurrentUserLogin());
_ProfileInfoResource.java,String[] activeProfiles = env.getActiveProfiles();,if (env != null ) String[] activeProfiles = env.getActiveProfiles();
_WithMockedOAuthUserSecurityContextFactory.java,String username = withClient.username();,if (withClient != null ) String username = withClient.username();
_WithMockedOAuthUserSecurityContextFactory.java,String clientId = withClient.clientId();,if (withClient != null ) String clientId = withClient.clientId();
_WithMockedOAuthUserSecurityContextFactory.java,String[] scopes = withClient.scope();,if (withClient != null ) String[] scopes = withClient.scope();
_WithMockedOAuthUserSecurityContextFactory.java,SecurityContext context = SecurityContextHolder.createEmptyContext();,if (SecurityContextHolder != null ) SecurityContext context = SecurityContextHolder.createEmptyContext();
_AbstractCassandraTest.java,String fileName = entry.getFileName().toString();,if (entry != null ) String fileName = entry.getFileName().toString();
_UserResource.java,Optional<User> existingUser = userRepository.findOneByEmail(managedUserDTO.getEmail());,if (userRepository != null ) Optional<User> existingUser = userRepository.findOneByEmail(managedUserDTO.getEmail());
_UserResource.java,Set<Authority> authorities = user.getAuthorities();,if (user != null ) Set<Authority> authorities = user.getAuthorities();
_JSR310LocalDateDeserializer.java,int year = parser.getIntValue();,if (parser != null ) int year = parser.getIntValue();
_JSR310LocalDateDeserializer.java,int month = parser.getIntValue();,if (parser != null ) int month = parser.getIntValue();
_JSR310LocalDateDeserializer.java,int day = parser.getIntValue();,if (parser != null ) int day = parser.getIntValue();
_JSR310LocalDateDeserializer.java,String string = parser.getText().trim();,if (parser != null ) String string = parser.getText().trim();
_LoadBalancedResourceDetails.java,Logger log = LoggerFactory.getLogger(this.getClass());,if (LoggerFactory != null ) Logger log = LoggerFactory.getLogger(this.getClass());
_Application.java,Collection<String> activeProfiles = Arrays.asList(env.getActiveProfiles());,if (Arrays != null ) Collection<String> activeProfiles = Arrays.asList(env.getActiveProfiles());
_ProfileInfoResource.java,String[] activeProfiles = env.getActiveProfiles();,if (env != null ) String[] activeProfiles = env.getActiveProfiles();
_ProfileInfoResource.java,String[] displayOnActiveProfiles = jHipsterProperties.getRibbon().getDisplayOnActiveProfiles();,if (jHipsterProperties != null ) String[] displayOnActiveProfiles = jHipsterProperties.getRibbon().getDisplayOnActiveProfiles();
_ActiveProfilesResource.java,String[] activeProfiles = env.getActiveProfiles();,if (env != null ) String[] activeProfiles = env.getActiveProfiles();
_ActiveProfilesResource.java,String[] displayOnActiveProfiles = jHipsterProperties.getRibbon().getDisplayOnActiveProfiles();,if (jHipsterProperties != null ) String[] displayOnActiveProfiles = jHipsterProperties.getRibbon().getDisplayOnActiveProfiles();
_TokenProvider.java,String principal = claims.getSubject();,if (claims != null ) String principal = claims.getSubject();
_SocialServiceIntTest.java,long initialUserCount = userRepository.count();,if (userRepository != null ) long initialUserCount = userRepository.count();
_SocialService.java,String userName = userProfile.getUsername();,if (userProfile != null ) String userName = userProfile.getUsername();
_User.java,this.login = login.toLowerCase();,if (login != null ) this.login = login.toLowerCase();
_UserDetailsService.java,String lowercaseLogin = login.toLowerCase();,if (login != null ) String lowercaseLogin = login.toLowerCase();
_UserResource.java,existingUser = userRepository.findOneByLogin(managedUserDTO.getLogin());,if (userRepository != null ) existingUser = userRepository.findOneByLogin(managedUserDTO.getLogin());
_LogMetricWriter.java,String metricName = metric.getName();,if (metric != null ) String metricName = metric.getName();
_AccessControlFilter.java,String serviceUrl = route.getKey();,if (route != null ) String serviceUrl = route.getKey();
_AccessControlFilter.java,String serviceName = route.getValue();,if (route != null ) String serviceName = route.getValue();
_WebConfigurer.java,CorsConfiguration config = props.getCors();,if (props != null ) CorsConfiguration config = props.getCors();
_SwaggerBasePathRewritingFilterTest.java,RequestContext context = RequestContext.getCurrentContext();,if (RequestContext != null ) RequestContext context = RequestContext.getCurrentContext();
_StaticResourcesProductionFilter.java,String requestURI = httpRequest.getRequestURI();,if (httpRequest != null ) String requestURI = httpRequest.getRequestURI();
_AuthenticationProvider.java,String login = token.getName();,if (token != null ) String login = token.getName();
_AuthenticationProvider.java,String password = user.getPassword();,if (user != null ) String password = user.getPassword();
_AuthenticationProvider.java,String tokenPassword = (String) token.getCredentials();,if (token != null ) String tokenPassword = (String) token.getCredentials();
_CustomAuditEventRepository.java,persistentAuditEvents = persistenceAuditEventRepository.findAll();,if (persistenceAuditEventRepository != null ) persistentAuditEvents = persistenceAuditEventRepository.findAll();
_SecurityUtils.java,SecurityContext securityContext = SecurityContextHolder.getContext();,if (SecurityContextHolder != null ) SecurityContext securityContext = SecurityContextHolder.getContext();
_SecurityUtils.java,Authentication authentication = securityContext.getAuthentication();,if (securityContext != null ) Authentication authentication = securityContext.getAuthentication();
_AuditResourceIntTest.java,this.restAuditMockMvc = MockMvcBuilders.standaloneSetup(auditResource).build();,if (MockMvcBuilders != null ) this.restAuditMockMvc = MockMvcBuilders.standaloneSetup(auditResource).build();
_AccountResource.java,Optional<User> oUser=userRepository.findOneByEmail(userDTO.getEmail());,if (oUser=userRepository != null ) Optional<User> oUser=userRepository.findOneByEmail(userDTO.getEmail());
_UserResource.java,Optional<User> oUser=userRepository.findOneByEmail(managedUserDTO.getEmail());,if (oUser=userRepository != null ) Optional<User> oUser=userRepository.findOneByEmail(managedUserDTO.getEmail());
_UserResource.java,Set<Authority> authorities = user.getAuthorities();,if (user != null ) Set<Authority> authorities = user.getAuthorities();
_UserResource.java,Set<Authority> authorities = user.getAuthorities();,if (user != null ) Set<Authority> authorities = user.getAuthorities();
_CassandraAutoConfiguration.java,this.cluster = this.properties.createCluster();,if (this != null ) this.cluster = this.properties.createCluster();
_CassandraProperties.java,private String compression = ProtocolOptions.Compression.NONE.name();,if (ProtocolOptions != null ) private String compression = ProtocolOptions.Compression.NONE.name();
_CassandraProperties.java,ArrayList<Object> paramList = Lists.newArrayList();,if (Lists != null ) ArrayList<Object> paramList = Lists.newArrayList();
_CassandraProperties.java,ArrayList<Class> primaryParametersClasses = Lists.newArrayList();,if (Lists != null ) ArrayList<Class> primaryParametersClasses = Lists.newArrayList();
_CassandraProperties.java,policy = (LoadBalancingPolicy) clazz.newInstance();,if (clazz != null ) policy = (LoadBalancingPolicy) clazz.newInstance();
_CassandraProperties.java,policy = (LoadBalancingPolicy) clazz.newInstance();,if (clazz != null ) policy = (LoadBalancingPolicy) clazz.newInstance();
_CassandraProperties.java,ArrayList<Object> paramList = Lists.newArrayList();,if (Lists != null ) ArrayList<Object> paramList = Lists.newArrayList();
_CassandraProperties.java,ArrayList<Class> primaryParametersClasses = Lists.newArrayList();,if (Lists != null ) ArrayList<Class> primaryParametersClasses = Lists.newArrayList();
_CassandraProperties.java,policy = (ReconnectionPolicy) clazz.newInstance();,if (clazz != null ) policy = (ReconnectionPolicy) clazz.newInstance();
_CassandraProperties.java,policy = (ReconnectionPolicy) clazz.newInstance();,if (clazz != null ) policy = (ReconnectionPolicy) clazz.newInstance();
_CassandraProperties.java,ConsistencyLevel consistencyLevel = ConsistencyLevel.valueOf(this.getConsistency());,if (ConsistencyLevel != null ) ConsistencyLevel consistencyLevel = ConsistencyLevel.valueOf(this.getConsistency());
_CassandraProperties.java,ConsistencyLevel serialConsistencyLevel = ConsistencyLevel.valueOf(this.getSerialConsistency());,if (ConsistencyLevel != null ) ConsistencyLevel serialConsistencyLevel = ConsistencyLevel.valueOf(this.getSerialConsistency());
_SpringSecurityAuditorAware.java,String userName = SecurityUtils.getCurrentLogin();,if (SecurityUtils != null ) String userName = SecurityUtils.getCurrentLogin();
_SecurityUtilsTest.java,String login = SecurityUtils.getCurrentLogin();,if (SecurityUtils != null ) String login = SecurityUtils.getCurrentLogin();
_SocialService.java,final UserProfile userProfile = connection.fetchUserProfile();,if (connection != null ) final UserProfile userProfile = connection.fetchUserProfile();
_SocialService.java,final String providerId = connection.getKey().getProviderId();,if (connection != null ) final String providerId = connection.getKey().getProviderId();
_SocialService.java,final String email = userProfile.getEmail();,if (userProfile != null ) final String email = userProfile.getEmail();
_SocialService.java,final String userName = userProfile.getUsername();,if (userProfile != null ) final String userName = userProfile.getUsername();
_SocialServiceTest.java,final long initialUserCount = userRepository.count();,if (userRepository != null ) final long initialUserCount = userRepository.count();
_SocialServiceTest.java,final long initialUserCount = userRepository.count();,if (userRepository != null ) final long initialUserCount = userRepository.count();
_JSR310LocalDateDeserializer.java,int year = parser.getIntValue();,if (parser != null ) int year = parser.getIntValue();
_JSR310LocalDateDeserializer.java,int month = parser.getIntValue();,if (parser != null ) int month = parser.getIntValue();
_JSR310LocalDateDeserializer.java,int day = parser.getIntValue();,if (parser != null ) int day = parser.getIntValue();
_JSR310LocalDateDeserializer.java,String string = parser.getText().trim();,if (parser != null ) String string = parser.getText().trim();
_MongoConfiguration.java,int port = server.getLocalPort();,if (server != null ) int port = server.getLocalPort();
_CustomDateTimeDeserializer.java,JsonToken t = jp.getCurrentToken();,if (jp != null ) JsonToken t = jp.getCurrentToken();
_CustomDateTimeDeserializer.java,String str = jp.getText().trim();,if (jp != null ) String str = jp.getText().trim();
_CustomLocalDateDeserializer.java,JsonToken t = jp.getCurrentToken();,if (jp != null ) JsonToken t = jp.getCurrentToken();
_CustomLocalDateDeserializer.java,String str = jp.getText().trim();,if (jp != null ) String str = jp.getText().trim();
_AbstractAuditingEntity.java,private DateTime createdDate = DateTime.now();,if (DateTime != null ) private DateTime createdDate = DateTime.now();
_AbstractAuditingEntity.java,private DateTime lastModifiedDate = DateTime.now();,if (DateTime != null ) private DateTime lastModifiedDate = DateTime.now();
_MailConfiguration.java,String host = jHipsterProperties.getMail().getHost();,if (jHipsterProperties != null ) String host = jHipsterProperties.getMail().getHost();
_MailConfiguration.java,int port = jHipsterProperties.getMail().getPort();,if (jHipsterProperties != null ) int port = jHipsterProperties.getMail().getPort();
_MailConfiguration.java,String user = jHipsterProperties.getMail().getUsername();,if (jHipsterProperties != null ) String user = jHipsterProperties.getMail().getUsername();
_MailConfiguration.java,String password = jHipsterProperties.getMail().getPassword();,if (jHipsterProperties != null ) String password = jHipsterProperties.getMail().getPassword();
_MailConfiguration.java,String protocol = jHipsterProperties.getMail().getProtocol();,if (jHipsterProperties != null ) String protocol = jHipsterProperties.getMail().getProtocol();
_MailConfiguration.java,Boolean tls = jHipsterProperties.getMail().isTls();,if (jHipsterProperties != null ) Boolean tls = jHipsterProperties.getMail().isTls();
_MailConfiguration.java,Boolean auth = jHipsterProperties.getMail().isAuth();,if (jHipsterProperties != null ) Boolean auth = jHipsterProperties.getMail().isAuth();
_GZipServletFilter.java,byte[] compressedBytes = compressed.toByteArray();,if (compressed != null ) byte[] compressedBytes = compressed.toByteArray();
_GZipServletFilter.java,"boolean shouldBodyBeZero = GZipResponseUtil.shouldBodyBeZero(httpRequest, wrapper.getStatus());","if (wrapper != null ) boolean shouldBodyBeZero = GZipResponseUtil.shouldBodyBeZero(httpRequest, wrapper.getStatus());"
_SecurityUtils.java,springSecurityUser = (UserDetails) authentication.getPrincipal();,if (authentication != null ) springSecurityUser = (UserDetails) authentication.getPrincipal();
_CacheConfiguration.java,SortedSet<String> names = metricRegistry.getNames();<% if (javaVersion == '8') { %>,if (%> != null ) SortedSet<String> names = metricRegistry.getNames();<% if (javaVersion == '8') { %>
_UserDetailsService.java,String lowercaseLogin = login.toLowerCase();<%if (javaVersion == '8') {%>,if ({%> != null ) String lowercaseLogin = login.toLowerCase();<%if (javaVersion == '8') {%>
_UserDetailsService.java,GrantedAuthority grantedAuthority = new SimpleGrantedAuthority(authority.getName());,if (SimpleGrantedAuthority(authority != null ) GrantedAuthority grantedAuthority = new SimpleGrantedAuthority(authority.getName());
_UserService.java,User currentUser = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());,if (userRepository != null ) User currentUser = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());
_UserService.java,User currentUser = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());,if (userRepository != null ) User currentUser = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());
_UserService.java,User user = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());,if (userRepository != null ) User user = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());
_UserService.java,User user = token.getUser();,if (token != null ) User user = token.getUser();
_AccountResource.java,User user = userRepository.findOneByLogin(userDTO.getLogin());,if (userRepository != null ) User user = userRepository.findOneByLogin(userDTO.getLogin());
_AccountResource.java,User user = userService.getUserWithAuthorities();,if (userService != null ) User user = userService.getUserWithAuthorities();
_AccountResource.java,User userHavingThisLogin = userRepository.findOneByLogin(userDTO.getLogin());,if (userRepository != null ) User userHavingThisLogin = userRepository.findOneByLogin(userDTO.getLogin());
_AccountResource.java,User user = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());,if (userRepository != null ) User user = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());
_AccountResource.java,User user = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());,if (userRepository != null ) User user = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());
_LogsResource.java,LoggerContext context = (LoggerContext) LoggerFactory.getILoggerFactory();<% if (javaVersion == '8') { %>,if (%> != null ) LoggerContext context = (LoggerContext) LoggerFactory.getILoggerFactory();<% if (javaVersion == '8') { %>
_UserResource.java,User user = userRepository.findOne(managedUserDTO.getId());,if (userRepository != null ) User user = userRepository.findOne(managedUserDTO.getId());
_UserResource.java,Set<Authority> authorities = user.getAuthorities();,if (user != null ) Set<Authority> authorities = user.getAuthorities();
_UserServiceTest.java,String resetKey = RandomUtil.generateResetKey();,if (RandomUtil != null ) String resetKey = RandomUtil.generateResetKey();
_UserServiceTest.java,String oldPassword = user.getPassword();,if (user != null ) String oldPassword = user.getPassword();
_UserServiceTest.java,String resetKey = RandomUtil.generateResetKey();,if (RandomUtil != null ) String resetKey = RandomUtil.generateResetKey();
_ManagedUserDTO.java,this.id = user.getId();,if (user != null ) this.id = user.getId();
_ManagedUserDTO.java,this.lastModifiedDate = user.getLastModifiedDate();,if (user != null ) this.lastModifiedDate = user.getLastModifiedDate();
_UserResource.java,User user = userRepository.findOneByLogin(userDTO.getLogin());,if (userRepository != null ) User user = userRepository.findOneByLogin(userDTO.getLogin());
_UserManagementResource.java,List<UserManagementDTO> usersManagementDTO = userManagementMapper.usersToUserManagementsDTO(page.getContent());,if (userManagementMapper != null ) List<UserManagementDTO> usersManagementDTO = userManagementMapper.usersToUserManagementsDTO(page.getContent());
_UserManagementMapper.java,User user = userService.getUserWithAuthorities(userManagementDTO.getId());,if (userService != null ) User user = userService.getUserWithAuthorities(userManagementDTO.getId());
_UserManagementResourceTest.java,this.restUserManagementMockMvc = MockMvcBuilders.standaloneSetup(userManagementResource).build();,if (MockMvcBuilders != null ) this.restUserManagementMockMvc = MockMvcBuilders.standaloneSetup(userManagementResource).build();
_AuthorityResourceTest.java,this.restAuthorityMockMvc = MockMvcBuilders.standaloneSetup(userAuthorhityResource).build();,if (MockMvcBuilders != null ) this.restAuthorityMockMvc = MockMvcBuilders.standaloneSetup(userAuthorhityResource).build();
_AuthorityResourceTest.java,User user = userRepository.findOneByLogin();,if (userRepository != null ) User user = userRepository.findOneByLogin();
_UserManagementResourceTest.java,User user = userRepository.findOneByLogin();,if (userRepository != null ) User user = userRepository.findOneByLogin();
_UserService.java,User user = userRepository.findOneByLogin(login).get();,if (userRepository != null ) User user = userRepository.findOneByLogin(login).get();
_UserManagementMapper.java,User user = userService.getUserWithAuthorities(userManagementDTO.getLogin());,if (userService != null ) User user = userService.getUserWithAuthorities(userManagementDTO.getLogin());
_UserManagementResource.java,List<userManagementDTO> usersManagementDTO = userManagementMapper.usersTouserManagementsDTO(page.getContent());,if (userManagementMapper != null ) List<userManagementDTO> usersManagementDTO = userManagementMapper.usersTouserManagementsDTO(page.getContent());
_UserService.java,User currentUser = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());,if (userRepository != null ) User currentUser = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());
_UserManagementMapper.java,User user = userRepository.findOneWithEagerRelationships(userManagementDTO.getId());,if (userRepository != null ) User user = userRepository.findOneWithEagerRelationships(userManagementDTO.getId());
_UserManagementMapper.java,User user = findOneWithEagerRelationships(userManagementDTO.getId());,if (findOneWithEagerRelationships(userManagementDTO != null ) User user = findOneWithEagerRelationships(userManagementDTO.getId());
_UserManagementResource.java,List<UserManagmentDTO> usersManagmentDTO = userManagmentMapper.usersToUserManagmentsDTO(page.getContent());,if (userManagmentMapper != null ) List<UserManagmentDTO> usersManagmentDTO = userManagmentMapper.usersToUserManagmentsDTO(page.getContent());
_UserManagementMapper.java,User user = findOneWithEagerRelationships(userManagmentDTO.getId());,if (findOneWithEagerRelationships(userManagmentDTO != null ) User user = findOneWithEagerRelationships(userManagmentDTO.getId());
_Application.java,Collection activeProfiles = Arrays.asList(env.getActiveProfiles());,if (Arrays != null ) Collection activeProfiles = Arrays.asList(env.getActiveProfiles());
_CassandraProperties.java,Object loadBalancingPolicyInstance = loadBalancingPolicyClass.newInstance();,if (loadBalancingPolicyClass != null ) Object loadBalancingPolicyInstance = loadBalancingPolicyClass.newInstance();
_CassandraProperties.java,Object reconnectionPolicyInstance = reconnectionPolicyClass.newInstance();,if (reconnectionPolicyClass != null ) Object reconnectionPolicyInstance = reconnectionPolicyClass.newInstance();
_CassandraProperties.java,Object retryPolicyInstance = retryPolicyClass.newInstance();,if (retryPolicyClass != null ) Object retryPolicyInstance = retryPolicyClass.newInstance();
_Application.java,Environment env = app.run(args).getEnvironment();,if (app != null ) Environment env = app.run(args).getEnvironment();
_ActivityService.java,Message message = event.getMessage();,if (event != null ) Message message = event.getMessage();
_CustomPersistentRememberMeServices.java,String login = token.getUser().getLogin();,if (token != null ) String login = token.getUser().getLogin();
_AccountResourceTest.java,this.restUserMockMvc = MockMvcBuilders.standaloneSetup(accountResource).build();,if (MockMvcBuilders != null ) this.restUserMockMvc = MockMvcBuilders.standaloneSetup(accountResource).build();
_ActivityService.java,AtmosphereRequest request = event.getResource().getRequest();,if (event != null ) AtmosphereRequest request = event.getResource().getRequest();
_ActivityService.java,AtmosphereRequest request = atmosphereResource.getRequest();,if (atmosphereResource != null ) AtmosphereRequest request = atmosphereResource.getRequest();
_UserDetailsService.java,GrantedAuthority grantedAuthority = new SimpleGrantedAuthority(authority.getName());,if (SimpleGrantedAuthority(authority != null ) GrantedAuthority grantedAuthority = new SimpleGrantedAuthority(authority.getName());
_AccountResource.java,User userHavingThisEmail = userRepository.findOneByEmail(userDTO.getEmail());,if (userRepository != null ) User userHavingThisEmail = userRepository.findOneByEmail(userDTO.getEmail());
_UserDetailsService.java,final String lowercaseLogin = login.toLowerCase();,if (login != null ) final String lowercaseLogin = login.toLowerCase();
_UserDetailsService.java,final GrantedAuthority grantedAuthority = new SimpleGrantedAuthority(authority.getName());,if (SimpleGrantedAuthority(authority != null ) final GrantedAuthority grantedAuthority = new SimpleGrantedAuthority(authority.getName());
_UserService.java,final User currentUser = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());,if (userRepository != null ) final User currentUser = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());
_UserService.java,final User currentUser = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());,if (userRepository != null ) final User currentUser = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());
_UserService.java,User user = token.getUser();,if (token != null ) User user = token.getUser();
_UserService.java,User user = token.getUser();,if (token != null ) User user = token.getUser();
_AccountResource.java,final User user = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());,if (userRepository != null ) final User user = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());
_UserServiceTest.java,int existingCount = persistentTokenRepository.findByUser(admin).size();,if (persistentTokenRepository != null ) int existingCount = persistentTokenRepository.findByUser(admin).size();
_UserService.java,final User currentUser = userRepository.findOne(SecurityUtils.getCurrentLogin());,if (userRepository != null ) final User currentUser = userRepository.findOne(SecurityUtils.getCurrentLogin());
_UserService.java,User currentUser = userRepository.findOne(SecurityUtils.getCurrentLogin());,if (userRepository != null ) User currentUser = userRepository.findOne(SecurityUtils.getCurrentLogin());
_UserService.java,final User currentUser = userRepository.findOne(SecurityUtils.getCurrentLogin());,if (userRepository != null ) final User currentUser = userRepository.findOne(SecurityUtils.getCurrentLogin());
_AccountResource.java,final User user = userRepository.findOne(SecurityUtils.getCurrentLogin());,if (userRepository != null ) final User user = userRepository.findOne(SecurityUtils.getCurrentLogin());
_UserServiceTest.java,int existingCount = persistentTokenRepository.findByUser(admin).size();,if (persistentTokenRepository != null ) int existingCount = persistentTokenRepository.findByUser(admin).size();
_UserDetailsService.java,String lowercaseLogin = login.toLowerCase();,if (login != null ) String lowercaseLogin = login.toLowerCase();
_UserService.java,User currentUser = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());,if (userRepository != null ) User currentUser = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());
_UserService.java,User currentUser = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());,if (userRepository != null ) User currentUser = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());
_UserService.java,User currentUser = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());,if (userRepository != null ) User currentUser = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());
_UserService.java,User user = token.getUser();,if (token != null ) User user = token.getUser();
_AccountResource.java,User user = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());<% if (javaVersion == '8') { %>,if (%> != null ) User user = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());<% if (javaVersion == '8') { %>
_UserService.java,User currentUser = userRepository.findOne(SecurityUtils.getCurrentLogin());,if (userRepository != null ) User currentUser = userRepository.findOne(SecurityUtils.getCurrentLogin());
_UserService.java,User currentUser = userRepository.findOne(SecurityUtils.getCurrentLogin());,if (userRepository != null ) User currentUser = userRepository.findOne(SecurityUtils.getCurrentLogin());
_UserService.java,User currentUser = userRepository.findOne(SecurityUtils.getCurrentLogin());,if (userRepository != null ) User currentUser = userRepository.findOne(SecurityUtils.getCurrentLogin());
_AccountResource.java,User user = userRepository.findOne(userDTO.getLogin());,if (userRepository != null ) User user = userRepository.findOne(userDTO.getLogin());
_AccountResource.java,User user = userRepository.findOne(SecurityUtils.getCurrentLogin());,if (userRepository != null ) User user = userRepository.findOne(SecurityUtils.getCurrentLogin());
_AccountResource.java,User user = userRepository.findOne(SecurityUtils.getCurrentLogin());<% if (javaVersion == '8') { %>,if (%> != null ) User user = userRepository.findOne(SecurityUtils.getCurrentLogin());<% if (javaVersion == '8') { %>
_CsrfCookieGeneratorFilter.java,"Cookie cookie = new Cookie(pCookieName, token.getToken());","if (token != null ) Cookie cookie = new Cookie(pCookieName, token.getToken());"
_AccountResource.java,final Locale locale = Locale.forLanguageTag(user.getLangKey());,if (Locale != null ) final Locale locale = Locale.forLanguageTag(user.getLangKey());
_AccountResource.java,final Locale locale = Locale.forLanguageTag(user.getLangKey());,if (Locale != null ) final Locale locale = Locale.forLanguageTag(user.getLangKey());
_CsrfTokenGeneratorFilter.java,"Cookie cookie = new Cookie(pCookieName, token.getToken());","if (token != null ) Cookie cookie = new Cookie(pCookieName, token.getToken());"
_CustomAuditEventRepository.java,persistentAuditEvents = persistenceAuditEventRepository.findAll();,if (persistenceAuditEventRepository != null ) persistentAuditEvents = persistenceAuditEventRepository.findAll();
_SpringSecurityAuditorAware.java,String userName = SecurityUtils.getCurrentLogin();,if (SecurityUtils != null ) String userName = SecurityUtils.getCurrentLogin();
_ActivityService.java,AtmosphereRequest request = atmosphereResource.getRequest();,if (atmosphereResource != null ) AtmosphereRequest request = atmosphereResource.getRequest();
_CacheConfiguration.java,SortedSet<String> names = metricRegistry.getNames();,if (metricRegistry != null ) SortedSet<String> names = metricRegistry.getNames();
_UserServiceTest.java,int existingCount = persistentTokenRepository.findByUser(admin).size();,if (persistentTokenRepository != null ) int existingCount = persistentTokenRepository.findByUser(admin).size();
_MailService.java,final MimeMessage mimeMessage = javaMailSender.createMimeMessage();,if (javaMailSender != null ) final MimeMessage mimeMessage = javaMailSender.createMimeMessage();
_SecurityUtils.java,springSecurityUser = (UserDetails) authentication.getPrincipal();,if (authentication != null ) springSecurityUser = (UserDetails) authentication.getPrincipal();
_SecurityUtils.java,userName = springSecurityUser.getUsername();,if (springSecurityUser != null ) userName = springSecurityUser.getUsername();
_SecurityUtils.java,userName = (String) authentication.getPrincipal();,if (authentication != null ) userName = (String) authentication.getPrincipal();
_MailService.java,Locale locale = Locale.forLanguageTag(user.getLangKey());,if (Locale != null ) Locale locale = Locale.forLanguageTag(user.getLangKey());
_LogsResource.java,LoggerContext context = (LoggerContext) LoggerFactory.getILoggerFactory();,if (LoggerFactory != null ) LoggerContext context = (LoggerContext) LoggerFactory.getILoggerFactory();
_AccountResource.java,User user = userRepository.findOne(SecurityUtils.getCurrentLogin());,if (userRepository != null ) User user = userRepository.findOne(SecurityUtils.getCurrentLogin());
_AccountResource.java,User user = userRepository.findOne(SecurityUtils.getCurrentLogin());,if (userRepository != null ) User user = userRepository.findOne(SecurityUtils.getCurrentLogin());
_LoggingAspect.java,private Logger logger = LoggerFactory.getLogger(this.getClass());,if (LoggerFactory != null ) private Logger logger = LoggerFactory.getLogger(this.getClass());
_JHipsterFileSystemWatcher.java,watcher = FileSystems.getDefault().newWatchService();,if (FileSystems != null ) watcher = FileSystems.getDefault().newWatchService();
_JHipsterFileSystemWatcher.java,Environment env = ctx.getEnvironment();,if (ctx != null ) Environment env = ctx.getEnvironment();
_JHipsterFileSystemWatcher.java,key = watcher.take();,if (watcher != null ) key = watcher.take();
_JHipsterFileSystemWatcher.java,WatchEvent.Kind kind = event.kind();,if (event != null ) WatchEvent.Kind kind = event.kind();
_JHipsterFileSystemWatcher.java,Path name = ev.context();,if (ev != null ) Path name = ev.context();
_JHipsterFileSystemWatcher.java,final String parentFolder = aFile.getParent();,if (aFile != null ) final String parentFolder = aFile.getParent();
_JHipsterFileSystemWatcher.java,boolean valid = key.reset();,if (key != null ) boolean valid = key.reset();
_JHipsterPluginManagerReloadPlugin.java,Environment env = ctx.getEnvironment();,if (ctx != null ) Environment env = ctx.getEnvironment();
_JHipsterReloaderThread.java,hotReloadTriggered = springReloader.hasBeansToReload();,if (springReloader != null ) hotReloadTriggered = springReloader.hasBeansToReload();
_NewClassLoaderListener.java,parentClassLoader = fileSystemWatcher.getClassLoader();,if (fileSystemWatcher != null ) parentClassLoader = fileSystemWatcher.getClassLoader();
_NewClassLoaderListener.java,final String classesFolder = urlLoaderEntry.getKey();,if (urlLoaderEntry != null ) final String classesFolder = urlLoaderEntry.getKey();
_NewClassLoaderListener.java,final URLClassLoader urlClassLoader = urlLoaderEntry.getValue();,if (urlLoaderEntry != null ) final URLClassLoader urlClassLoader = urlLoaderEntry.getValue();
_NewClassLoaderListener.java,String versionstamp = Utils.encode(theFile.lastModified());,if (Utils != null ) String versionstamp = Utils.encode(theFile.lastModified());
_NewClassLoaderListener.java,final String key = urlClassLoaderEntry.getKey();,if (urlClassLoaderEntry != null ) final String key = urlClassLoaderEntry.getKey();
_JHipsterHandlerMappingListener.java,String beanName = StringUtils.uncapitalize(JHipsterHandlerMappingListener.class.getSimpleName());,if (StringUtils != null ) String beanName = StringUtils.uncapitalize(JHipsterHandlerMappingListener.class.getSimpleName());
_JHipsterTableSnapshotGenerator.java,HibernateDatabase database = (HibernateDatabase) snapshot.getDatabase();,if (snapshot != null ) HibernateDatabase database = (HibernateDatabase) snapshot.getDatabase();
_JHipsterTableSnapshotGenerator.java,Configuration cfg = database.getConfiguration();,if (database != null ) Configuration cfg = database.getConfiguration();
_JHipsterTableSnapshotGenerator.java,Dialect dialect = database.getDialect();,if (database != null ) Dialect dialect = database.getDialect();
_JHipsterTableSnapshotGenerator.java,Mapping mapping = cfg.buildMapping();,if (cfg != null ) Mapping mapping = cfg.buildMapping();
_JHipsterTableSnapshotGenerator.java,Iterator columnIterator = hibernateTable.getColumnIterator();,if (hibernateTable != null ) Iterator columnIterator = hibernateTable.getColumnIterator();
_JHipsterTableSnapshotGenerator.java,"DataType dataType = toDataType(hibernateType, hibernateColumn.getSqlTypeCode());","if (hibernateColumn != null ) DataType dataType = toDataType(hibernateType, hibernateColumn.getSqlTypeCode());"
_JHipsterTableSnapshotGenerator.java,HibernateDatabase database = (HibernateDatabase) snapshot.getDatabase();,if (snapshot != null ) HibernateDatabase database = (HibernateDatabase) snapshot.getDatabase();
_JHipsterTableSnapshotGenerator.java,Configuration cfg = database.getConfiguration();,if (database != null ) Configuration cfg = database.getConfiguration();
_JHipsterTableSnapshotGenerator.java,Method[] methods = dataType.getClass().getMethods();,if (dataType != null ) Method[] methods = dataType.getClass().getMethods();
_JacksonReloader.java,ConfigurableListableBeanFactory beanFactory = applicationContext.getBeanFactory();,if (applicationContext != null ) ConfigurableListableBeanFactory beanFactory = applicationContext.getBeanFactory();
_JacksonReloader.java,SerializerProvider serializerProvider = mapper.getSerializerProvider();,if (mapper != null ) SerializerProvider serializerProvider = mapper.getSerializerProvider();
_JacksonReloader.java,DeserializationContext deserializationContext = mapper.getDeserializationContext();,if (mapper != null ) DeserializationContext deserializationContext = mapper.getDeserializationContext();
_LiquibaseReloader.java,final JdbcConnection jdbcConnection = new JdbcConnection(dataSource.getConnection());,if (JdbcConnection(dataSource != null ) final JdbcConnection jdbcConnection = new JdbcConnection(dataSource.getConnection());
_LiquibaseReloader.java,PersistenceUnitInfo persistenceUnitInfo = internalPersistenceUnitManager.obtainDefaultPersistenceUnitInfo();,if (internalPersistenceUnitManager != null ) PersistenceUnitInfo persistenceUnitInfo = internalPersistenceUnitManager.obtainDefaultPersistenceUnitInfo();
_LiquibaseReloader.java,ServiceRegistry serviceRegistry = builder.buildServiceRegistry();,if (builder != null ) ServiceRegistry serviceRegistry = builder.buildServiceRegistry();
_LiquibaseReloader.java,String fileName = FilenameUtils.getBaseName(changelog.getName());,if (FilenameUtils != null ) String fileName = FilenameUtils.getBaseName(changelog.getName());
_LiquibaseReloader.java,String fileName = allChangelog.getName();,if (allChangelog != null ) String fileName = allChangelog.getName();
_SpringReloader.java,this.beanFactoryAdvisorRetrievalHelper = new BeanFactoryAdvisorRetrievalHelper(applicationContext.getBeanFactory());,if (BeanFactoryAdvisorRetrievalHelper(applicationContext != null ) this.beanFactoryAdvisorRetrievalHelper = new BeanFactoryAdvisorRetrievalHelper(applicationContext.getBeanFactory());
_SpringReloader.java,DefaultListableBeanFactory beanFactory = (DefaultListableBeanFactory) applicationContext.getBeanFactory();,if (applicationContext != null ) DefaultListableBeanFactory beanFactory = (DefaultListableBeanFactory) applicationContext.getBeanFactory();
_SpringReloader.java,beanInstance = advised.getTargetSource().getTarget();,if (advised != null ) beanInstance = advised.getTargetSource().getTarget();
_SpringReloader.java,beanInstance = advised.getTargetSource().getTarget();,if (advised != null ) beanInstance = advised.getTargetSource().getTarget();
_SpringReloader.java,Field[] fields = beanInstance.getClass().getDeclaredFields();,if (beanInstance != null ) Field[] fields = beanInstance.getClass().getDeclaredFields();
_SpringReloader.java,Object beanToInject = applicationContext.getBean(field.getType());,if (applicationContext != null ) Object beanToInject = applicationContext.getBean(field.getType());
_SpringReloader.java,beanName = StringUtils.uncapitalize(clazz.getSimpleName());,if (StringUtils != null ) beanName = StringUtils.uncapitalize(clazz.getSimpleName());
_JHipsterFileSystemWatcher.java,watcher = FileSystems.getDefault().newWatchService();,if (FileSystems != null ) watcher = FileSystems.getDefault().newWatchService();
_JHipsterFileSystemWatcher.java,Environment env = ctx.getEnvironment();,if (ctx != null ) Environment env = ctx.getEnvironment();
_JHipsterFileSystemWatcher.java,key = watcher.take();,if (watcher != null ) key = watcher.take();
_JHipsterFileSystemWatcher.java,WatchEvent.Kind kind = event.kind();,if (event != null ) WatchEvent.Kind kind = event.kind();
_JHipsterFileSystemWatcher.java,Path name = ev.context();,if (ev != null ) Path name = ev.context();
_JHipsterFileSystemWatcher.java,final String parentFolder = aFile.getParent();,if (aFile != null ) final String parentFolder = aFile.getParent();
_JHipsterFileSystemWatcher.java,boolean valid = key.reset();,if (key != null ) boolean valid = key.reset();
_JHipsterPluginManagerReloadPlugin.java,Environment env = ctx.getEnvironment();,if (ctx != null ) Environment env = ctx.getEnvironment();
_JHipsterReloaderThread.java,hotReloadTriggered = springReloader.hasBeansToReload();,if (springReloader != null ) hotReloadTriggered = springReloader.hasBeansToReload();
_NewClassLoaderListener.java,parentClassLoader = fileSystemWatcher.getClassLoader();,if (fileSystemWatcher != null ) parentClassLoader = fileSystemWatcher.getClassLoader();
_NewClassLoaderListener.java,final String classesFolder = urlLoaderEntry.getKey();,if (urlLoaderEntry != null ) final String classesFolder = urlLoaderEntry.getKey();
_NewClassLoaderListener.java,final URLClassLoader urlClassLoader = urlLoaderEntry.getValue();,if (urlLoaderEntry != null ) final URLClassLoader urlClassLoader = urlLoaderEntry.getValue();
_NewClassLoaderListener.java,String versionstamp = Utils.encode(theFile.lastModified());,if (Utils != null ) String versionstamp = Utils.encode(theFile.lastModified());
_NewClassLoaderListener.java,final String key = urlClassLoaderEntry.getKey();,if (urlClassLoaderEntry != null ) final String key = urlClassLoaderEntry.getKey();
_JHipsterHandlerMappingListener.java,String beanName = StringUtils.uncapitalize(JHipsterHandlerMappingListener.class.getSimpleName());,if (StringUtils != null ) String beanName = StringUtils.uncapitalize(JHipsterHandlerMappingListener.class.getSimpleName());
_JHipsterTableSnapshotGenerator.java,HibernateDatabase database = (HibernateDatabase) snapshot.getDatabase();,if (snapshot != null ) HibernateDatabase database = (HibernateDatabase) snapshot.getDatabase();
_JHipsterTableSnapshotGenerator.java,Configuration cfg = database.getConfiguration();,if (database != null ) Configuration cfg = database.getConfiguration();
_JHipsterTableSnapshotGenerator.java,Dialect dialect = database.getDialect();,if (database != null ) Dialect dialect = database.getDialect();
_JHipsterTableSnapshotGenerator.java,Mapping mapping = cfg.buildMapping();,if (cfg != null ) Mapping mapping = cfg.buildMapping();
_JHipsterTableSnapshotGenerator.java,Iterator columnIterator = hibernateTable.getColumnIterator();,if (hibernateTable != null ) Iterator columnIterator = hibernateTable.getColumnIterator();
_JHipsterTableSnapshotGenerator.java,"DataType dataType = toDataType(hibernateType, hibernateColumn.getSqlTypeCode());","if (hibernateColumn != null ) DataType dataType = toDataType(hibernateType, hibernateColumn.getSqlTypeCode());"
_JHipsterTableSnapshotGenerator.java,HibernateDatabase database = (HibernateDatabase) snapshot.getDatabase();,if (snapshot != null ) HibernateDatabase database = (HibernateDatabase) snapshot.getDatabase();
_JHipsterTableSnapshotGenerator.java,Configuration cfg = database.getConfiguration();,if (database != null ) Configuration cfg = database.getConfiguration();
_JHipsterTableSnapshotGenerator.java,Method[] methods = dataType.getClass().getMethods();,if (dataType != null ) Method[] methods = dataType.getClass().getMethods();
_JacksonReloader.java,ConfigurableListableBeanFactory beanFactory = applicationContext.getBeanFactory();,if (applicationContext != null ) ConfigurableListableBeanFactory beanFactory = applicationContext.getBeanFactory();
_JacksonReloader.java,SerializerProvider serializerProvider = mapper.getSerializerProvider();,if (mapper != null ) SerializerProvider serializerProvider = mapper.getSerializerProvider();
_JacksonReloader.java,DeserializationContext deserializationContext = mapper.getDeserializationContext();,if (mapper != null ) DeserializationContext deserializationContext = mapper.getDeserializationContext();
_LiquibaseReloader.java,final JdbcConnection jdbcConnection = new JdbcConnection(dataSource.getConnection());,if (JdbcConnection(dataSource != null ) final JdbcConnection jdbcConnection = new JdbcConnection(dataSource.getConnection());
_LiquibaseReloader.java,PersistenceUnitInfo persistenceUnitInfo = internalPersistenceUnitManager.obtainDefaultPersistenceUnitInfo();,if (internalPersistenceUnitManager != null ) PersistenceUnitInfo persistenceUnitInfo = internalPersistenceUnitManager.obtainDefaultPersistenceUnitInfo();
_LiquibaseReloader.java,ServiceRegistry serviceRegistry = builder.buildServiceRegistry();,if (builder != null ) ServiceRegistry serviceRegistry = builder.buildServiceRegistry();
_LiquibaseReloader.java,String fileName = FilenameUtils.getBaseName(changelog.getName());,if (FilenameUtils != null ) String fileName = FilenameUtils.getBaseName(changelog.getName());
_LiquibaseReloader.java,String fileName = allChangelog.getName();,if (allChangelog != null ) String fileName = allChangelog.getName();
_SpringReloader.java,this.beanFactoryAdvisorRetrievalHelper = new BeanFactoryAdvisorRetrievalHelper(applicationContext.getBeanFactory());,if (BeanFactoryAdvisorRetrievalHelper(applicationContext != null ) this.beanFactoryAdvisorRetrievalHelper = new BeanFactoryAdvisorRetrievalHelper(applicationContext.getBeanFactory());
_SpringReloader.java,DefaultListableBeanFactory beanFactory = (DefaultListableBeanFactory) applicationContext.getBeanFactory();,if (applicationContext != null ) DefaultListableBeanFactory beanFactory = (DefaultListableBeanFactory) applicationContext.getBeanFactory();
_SpringReloader.java,beanInstance = advised.getTargetSource().getTarget();,if (advised != null ) beanInstance = advised.getTargetSource().getTarget();
_SpringReloader.java,beanInstance = advised.getTargetSource().getTarget();,if (advised != null ) beanInstance = advised.getTargetSource().getTarget();
_SpringReloader.java,Field[] fields = beanInstance.getClass().getDeclaredFields();,if (beanInstance != null ) Field[] fields = beanInstance.getClass().getDeclaredFields();
_SpringReloader.java,Object beanToInject = applicationContext.getBean(field.getType());,if (applicationContext != null ) Object beanToInject = applicationContext.getBean(field.getType());
_SpringReloader.java,beanName = StringUtils.uncapitalize(clazz.getSimpleName());,if (StringUtils != null ) beanName = StringUtils.uncapitalize(clazz.getSimpleName());
_CacheConfiguration.java,String name = entity.getJavaType().getName();,if (entity != null ) String name = entity.getJavaType().getName();
_JHipsterReloadWebSecurityConfig.java,Class clazz = factory.createClass();,if (factory != null ) Class clazz = factory.createClass();
_JHipsterFileSystemWatcher.java,final String parentFolder = aFile.getParent();,if (aFile != null ) final String parentFolder = aFile.getParent();
_JHipsterFileSystemWatcher.java,final String classesFolder = urlLoaderEntry.getKey();,if (urlLoaderEntry != null ) final String classesFolder = urlLoaderEntry.getKey();
_JHipsterFileSystemWatcher.java,final URLClassLoader urlClassLoader = urlLoaderEntry.getValue();,if (urlLoaderEntry != null ) final URLClassLoader urlClassLoader = urlLoaderEntry.getValue();
_JHipsterFileSystemWatcher.java,String versionstamp = Utils.encode(theFile.lastModified());,if (Utils != null ) String versionstamp = Utils.encode(theFile.lastModified());
_JHipsterFileSystemWatcher.java,final String key = urlClassLoaderEntry.getKey();,if (urlClassLoaderEntry != null ) final String key = urlClassLoaderEntry.getKey();
_JHipsterFileSystemWatcher.java,String versionstamp = Utils.encode(theFile.lastModified());,if (Utils != null ) String versionstamp = Utils.encode(theFile.lastModified());
_SpringReloader.java,Object beanToInject = applicationContext.getBean(field.getType());,if (applicationContext != null ) Object beanToInject = applicationContext.getBean(field.getType());
_SpringReloader.java,Field[] fields = beanInstance.getClass().getDeclaredFields();,if (beanInstance != null ) Field[] fields = beanInstance.getClass().getDeclaredFields();
_SpringReloader.java,beanToInject = registerBeanDefinition(field.getType());,if (registerBeanDefinition(field != null ) beanToInject = registerBeanDefinition(field.getType());
_SpringReloader.java,beanToInject = applicationContext.getBean(field.getName());,if (applicationContext != null ) beanToInject = applicationContext.getBean(field.getName());
_SpringReloader.java,Method[] methods = beanInstance.getClass().getDeclaredMethods();,if (beanInstance != null ) Method[] methods = beanInstance.getClass().getDeclaredMethods();
_SpringReloader.java,final String methodName = method.getName();,if (method != null ) final String methodName = method.getName();
_SpringReloader.java,DefaultListableBeanFactory beanFactory = (DefaultListableBeanFactory) applicationContext.getBeanFactory();,if (applicationContext != null ) DefaultListableBeanFactory beanFactory = (DefaultListableBeanFactory) applicationContext.getBeanFactory();
_SpringReloader.java,String beanName = StringUtils.uncapitalize(clazz.getSimpleName());,if (StringUtils != null ) String beanName = StringUtils.uncapitalize(clazz.getSimpleName());
_SpringReloader.java,DefaultListableBeanFactory beanFactory = (DefaultListableBeanFactory) applicationContext.getBeanFactory();,if (applicationContext != null ) DefaultListableBeanFactory beanFactory = (DefaultListableBeanFactory) applicationContext.getBeanFactory();
_SpringReloader.java,Field[] fields = beanInstance.getClass().getDeclaredFields();,if (beanInstance != null ) Field[] fields = beanInstance.getClass().getDeclaredFields();
_SpringReloader.java,beanToInject = registerBeanDefinition(field.getType());,if (registerBeanDefinition(field != null ) beanToInject = registerBeanDefinition(field.getType());
_SpringReloader.java,beanToInject = applicationContext.getBean(field.getName());,if (applicationContext != null ) beanToInject = applicationContext.getBean(field.getName());
_SpringReloader.java,Method[] methods = beanInstance.getClass().getDeclaredMethods();,if (beanInstance != null ) Method[] methods = beanInstance.getClass().getDeclaredMethods();
_SpringReloader.java,final String methodName = method.getName();,if (method != null ) final String methodName = method.getName();
_SpringReloader.java,DefaultListableBeanFactory beanFactory = (DefaultListableBeanFactory) applicationContext.getBeanFactory();,if (applicationContext != null ) DefaultListableBeanFactory beanFactory = (DefaultListableBeanFactory) applicationContext.getBeanFactory();
_SpringReloader.java,Annotation[] annotations = field.getDeclaredAnnotations();,if (field != null ) Annotation[] annotations = field.getDeclaredAnnotations();
_SpringReloader.java,Object beanToInject = applicationContext.getBean(field.getType());,if (applicationContext != null ) Object beanToInject = applicationContext.getBean(field.getType());
_SpringReloader.java,Annotation[] annotations = method.getDeclaredAnnotations();,if (method != null ) Annotation[] annotations = method.getDeclaredAnnotations();
_AuditEventConfiguration.java,persistentAuditEvents = persistenceAuditEventRepository.findAll();,if (persistenceAuditEventRepository != null ) persistentAuditEvents = persistenceAuditEventRepository.findAll();
_AuditEventService.java,persistentAuditEvents = persistenceAuditEventRepository.findAll();,if (persistenceAuditEventRepository != null ) persistentAuditEvents = persistenceAuditEventRepository.findAll();
_JHipsterPluginManagerReloadPlugin.java,Field[] fields = beanInstance.getClass().getDeclaredFields();,if (beanInstance != null ) Field[] fields = beanInstance.getClass().getDeclaredFields();
_JHipsterPluginManagerReloadPlugin.java,Annotation[] annotations = field.getDeclaredAnnotations();,if (field != null ) Annotation[] annotations = field.getDeclaredAnnotations();
_JHipsterPluginManagerReloadPlugin.java,Object beanToInject = applicationContext.getBean(field.getType());,if (applicationContext != null ) Object beanToInject = applicationContext.getBean(field.getType());
_JHipsterPluginManagerReloadPlugin.java,Method[] methods = beanInstance.getClass().getDeclaredMethods();,if (beanInstance != null ) Method[] methods = beanInstance.getClass().getDeclaredMethods();
_JHipsterPluginManagerReloadPlugin.java,Annotation[] annotations = method.getDeclaredAnnotations();,if (method != null ) Annotation[] annotations = method.getDeclaredAnnotations();
_AccountResource.java,UserDTO user = userService.getCurrentUser();,if (userService != null ) UserDTO user = userService.getCurrentUser();
_AccountResource.java,User user = userRepository.findOne(SecurityUtils.getCurrentLogin());,if (userRepository != null ) User user = userRepository.findOne(SecurityUtils.getCurrentLogin());
_AccountResource.java,User user = userRepository.findOne(SecurityUtils.getCurrentLogin());,if (userRepository != null ) User user = userRepository.findOne(SecurityUtils.getCurrentLogin());
_GZipServletFilter.java,byte[] compressedBytes = compressed.toByteArray();,if (compressed != null ) byte[] compressedBytes = compressed.toByteArray();
_GZipServletFilter.java,"boolean shouldBodyBeZero = GZipResponseUtil.shouldBodyBeZero(httpRequest, wrapper.getStatus());","if (wrapper != null ) boolean shouldBodyBeZero = GZipResponseUtil.shouldBodyBeZero(httpRequest, wrapper.getStatus());"
_MetricsConfiguration.java,final JmxReporter jmxReporter = JmxReporter.forRegistry(metricRegistry).build();,if (JmxReporter != null ) final JmxReporter jmxReporter = JmxReporter.forRegistry(metricRegistry).build();
_CacheConfiguration.java,String name = entity.getJavaType().getName();,if (entity != null ) String name = entity.getJavaType().getName();
_CacheConfiguration.java,cacheManager = net.sf.ehcache.CacheManager.create();,if (net != null ) cacheManager = net.sf.ehcache.CacheManager.create();
_WebConfigurer.java,ServletContext servletContext = sce.getServletContext();,if (sce != null ) ServletContext servletContext = sce.getServletContext();
_WebConfigurer.java,WebApplicationContext ac = WebApplicationContextUtils.getRequiredWebApplicationContext(sce.getServletContext());,if (WebApplicationContextUtils != null ) WebApplicationContext ac = WebApplicationContextUtils.getRequiredWebApplicationContext(sce.getServletContext());
_StaticResourcesProductionFilter.java,String requestURI = httpRequest.getRequestURI();,if (httpRequest != null ) String requestURI = httpRequest.getRequestURI();
_CacheConfiguration.java,cacheManager = net.sf.ehcache.CacheManager.create();,if (net != null ) cacheManager = net.sf.ehcache.CacheManager.create();
_WebConfigurer.java,ServletContext servletContext = sce.getServletContext();,if (sce != null ) ServletContext servletContext = sce.getServletContext();
_WebConfigurer.java,WebApplicationContext ac = WebApplicationContextUtils.getRequiredWebApplicationContext(sce.getServletContext());,if (WebApplicationContextUtils != null ) WebApplicationContext ac = WebApplicationContextUtils.getRequiredWebApplicationContext(sce.getServletContext());
_StaticResourcesProductionFilter.java,String requestURI = httpRequest.getRequestURI();,if (httpRequest != null ) String requestURI = httpRequest.getRequestURI();
_CacheConfiguration.java,cacheManager = net.sf.ehcache.CacheManager.create();,if (net != null ) cacheManager = net.sf.ehcache.CacheManager.create();
_CacheConfiguration.java,cacheManager = net.sf.ehcache.CacheManager.create();,if (net != null ) cacheManager = net.sf.ehcache.CacheManager.create();
_LogsResource.java,this.name = logger.getName();,if (logger != null ) this.name = logger.getName();
_LogsResource.java,this.level = logger.getEffectiveLevel().toString();,if (logger != null ) this.level = logger.getEffectiveLevel().toString();
_AccountResource.java,User user = userRepository.findByLogin(SecurityUtils.getCurrentLogin());,if (userRepository != null ) User user = userRepository.findByLogin(SecurityUtils.getCurrentLogin());
_AccountResource.java,User user = userRepository.findByLogin(SecurityUtils.getCurrentLogin());,if (userRepository != null ) User user = userRepository.findByLogin(SecurityUtils.getCurrentLogin());
_AccountResource.java,SecurityContext securityContext = SecurityContextHolder.getContext();,if (SecurityContextHolder != null ) SecurityContext securityContext = SecurityContextHolder.getContext();
_AccountResource.java,User user = userRepository.findByLogin(springSecurityUser.getUsername());,if (userRepository != null ) User user = userRepository.findByLogin(springSecurityUser.getUsername());
_CacheConfiguration.java,cacheManager = new net.sf.ehcache.CacheManager();,if (net != null ) cacheManager = new net.sf.ehcache.CacheManager();
