Filename,Buggy/Deleted,Fixed/Added
EntityStringer.java,final var fqType =GeciReflectionTools.getGenericTypeName(field.getType());,if (=GeciReflectionTools != null ) final var fqType =GeciReflectionTools.getGenericTypeName(field.getType());
Selector.java,final var superClass = toClass(m).getSuperclass();,if (toClass(m) != null ) final var superClass = toClass(m).getSuperclass();
Selector.java,final var interfaces = collectInterfaces(m.getDeclaringClass());,if (collectInterfaces(m != null ) final var interfaces = collectInterfaces(m.getDeclaringClass());
Selector.java,Class[] interfaces = klass.getInterfaces();,if (klass != null ) Class[] interfaces = klass.getInterfaces();
Selector.java,Class[] interfaces = klass.getInterfaces();,if (klass != null ) Class[] interfaces = klass.getInterfaces();
Selector.java,final var elements = exception.getStackTrace();,if (exception != null ) final var elements = exception.getStackTrace();
SelectorCompiler.java,final var topNode = it.expression();,if (it != null ) final var topNode = it.expression();
SelectorCompiler.java,var rest = lexer.rest();,if (lexer != null ) var rest = lexer.rest();
SelectorCompiler.java,final var orNode = new SelectorNode.Or();,if (SelectorNode != null ) final var orNode = new SelectorNode.Or();
SelectorCompiler.java,final var andNode = new SelectorNode.And();,if (SelectorNode != null ) final var andNode = new SelectorNode.And();
SelectorCompiler.java,final var regex = lexer.get();,if (lexer != null ) final var regex = lexer.get();
GeciReflectionTools.java,final var klass = (Class) t.getRawType();,if (t != null ) final var klass = (Class) t.getRawType();
TestSelector.java,final var f = this.getClass();,if (this != null ) final var f = this.getClass();
TestSelector.java,final var f = this.getClass();,if (this != null ) final var f = this.getClass();
TestSelector.java,final var f = this.getClass();,if (this != null ) final var f = this.getClass();
Source.java,Path parent = path.getParent();,if (path != null ) Path parent = path.getParent();
LoggerJDK9.java,this.LOGGER = System.getLogger(forClass.getName());,if (System != null ) this.LOGGER = System.getLogger(forClass.getName());
LoggerJVM8.java,this.LOGGER = Logger.getLogger(forClass.getName());,if (Logger != null ) this.LOGGER = Logger.getLogger(forClass.getName());
Untabber.java,final var stripped = stripLeading(line).length();,if (stripLeading(line) != null ) final var stripped = stripLeading(line).length();
EntityStringer.java,final var className = field.getDeclaringClass().getCanonicalName();,if (field != null ) final var className = field.getDeclaringClass().getCanonicalName();
EntityStringer.java,final var type = GeciReflectionTools.getGenericTypeName(field.getType());,if (GeciReflectionTools != null ) final var type = GeciReflectionTools.getGenericTypeName(field.getType());
EntityStringer.java,final var className = method.getDeclaringClass().getCanonicalName();,if (method != null ) final var className = method.getDeclaringClass().getCanonicalName();
EntityStringer.java,final var type = GeciReflectionTools.getGenericTypeName(method.getReturnType());,if (GeciReflectionTools != null ) final var type = GeciReflectionTools.getGenericTypeName(method.getReturnType());
TestDocumentation.java,final var rootDir = ConsistencyTestUtils.getDirectory();,if (ConsistencyTestUtils != null ) final var rootDir = ConsistencyTestUtils.getDirectory();
Engine.java,maven = maven.module(moduleOpt.get());,if (maven != null ) maven = maven.module(moduleOpt.get());
Engine.java,mavenSourceSet = maven.testSource();,if (maven != null ) mavenSourceSet = maven.testSource();
Engine.java,mavenSourceSet = maven.mainResources();,if (maven != null ) mavenSourceSet = maven.mainResources();
Engine.java,mavenSourceSet = maven.testResources();,if (maven != null ) mavenSourceSet = maven.testResources();
Engine.java,mavenSourceSet = maven.mainSource();,if (maven != null ) mavenSourceSet = maven.mainSource();
Engine.java,mavenSourceSet = maven.mainSource();,if (maven != null ) mavenSourceSet = maven.mainSource();
ClassMacro.java,final var className = in.toString().trim();,if (in != null ) final var className = in.toString().trim();
TestGenerateArticle.java,rootDirFile = new File(rootDir.toString());,if (File(rootDir != null ) rootDirFile = new File(rootDir.toString());
TestGenerateArticle.java,final var parent = rootDirFile.getParentFile();,if (rootDirFile != null ) final var parent = rootDirFile.getParentFile();
TestGenerateArticle.java,"return parent == null ? ""."" : parent.getCanonicalPath();","if (parent != null ) return parent == null ? ""."" : parent.getCanonicalPath();"
AbstractSnippeter.java,final var sourceParams = segment.sourceParams();,if (segment != null ) final var sourceParams = segment.sourceParams();
AbstractSnippeter.java,fileNamePattern = Pattern.compile(config.files.toString());,if (Pattern != null ) fileNamePattern = Pattern.compile(config.files.toString());
FragmentCollector.java,final var absFileName = source.getAbsoluteFile();,if (source != null ) final var absFileName = source.getAbsoluteFile();
FragmentCollector.java,snippetToResolv = builder.build();,if (builder != null ) snippetToResolv = builder.build();
MarkdownCodeInserter.java,final var originalLines = segment.originalLines();,if (segment != null ) final var originalLines = segment.originalLines();
SnippetAppender.java,final var segmentName = segment.sourceParams().id();,if (segment != null ) final var segmentName = segment.sourceParams().id();
SnippetBuilder.java,params = new CompoundParamsBuilder(s).build();,if (CompoundParamsBuilder(s) != null ) params = new CompoundParamsBuilder(s).build();
SnippetTrim.java,final var stripped = stripLeading(line).length();,if (stripLeading(line) != null ) final var stripped = stripLeading(line).length();
TestRegister.java,final var generator = generatorBuilder.build();,if (generatorBuilder != null ) final var generator = generatorBuilder.build();
TestRegister.java,final var generator = generatorBuilder.build();,if (generatorBuilder != null ) final var generator = generatorBuilder.build();
TestRegister.java,final var generator = generatorBuilder.build();,if (generatorBuilder != null ) final var generator = generatorBuilder.build();
TestRegister.java,final var generator = generatorBuilder.build();,if (generatorBuilder != null ) final var generator = generatorBuilder.build();
TestSnippetBuilder.java,final var snippet = sut.build();,if (sut != null ) final var snippet = sut.build();
ConsistencyTestUtils.java,readmeFile = new File(readme.toString());,if (File(readme != null ) readmeFile = new File(readme.toString());
ConsistencyTestUtils.java,final var parent =  readmeFile.getParentFile();,if (readmeFile != null ) final var parent =  readmeFile.getParentFile();
Modifiers.java,final var fingerPrint = in.toString().trim();,if (in != null ) final var fingerPrint = in.toString().trim();
Modifiers.java,modifiers = field.getModifiers();,if (field != null ) modifiers = field.getModifiers();
Modifiers.java,modifiers = method.getModifiers();,if (method != null ) modifiers = method.getModifiers();
Name.java,final var fingerPrint = in.toString().trim();,if (in != null ) final var fingerPrint = in.toString().trim();
Type.java,final var fingerPrint = in.toString().trim();,if (in != null ) final var fingerPrint = in.toString().trim();
Type.java,type = field.getType();,if (field != null ) type = field.getType();
Type.java,type = method.getReturnType();,if (method != null ) type = method.getReturnType();
FileCollector.java,final var locator = entry.getValue();,if (entry != null ) final var locator = entry.getValue();
Jdocify.java,state.file = source.getAbsoluteFile();,if (source != null ) state.file = source.getAbsoluteFile();
JavaLexed.java,var lexeme = lex.getFullLexeme();,if (lex != null ) var lexeme = lex.getFullLexeme();
Jdocify.java,final String file = source.getAbsoluteFile();,if (source != null ) final String file = source.getAbsoluteFile();
Jdocify.java,state.lenCODEStart = config.commentCODEStart.length();,if (config != null ) state.lenCODEStart = config.commentCODEStart.length();
Jdocify.java,state.lenCODEEnd = config.commentCODEEnd.length();,if (config != null ) state.lenCODEEnd = config.commentCODEEnd.length();
Jdocify.java,final var comment = new StringBuilder(lex.getLexeme());,if (StringBuilder(lex != null ) final var comment = new StringBuilder(lex.getLexeme());
Jdocify.java,final int lenCODEStart = config.commentCODEStart.length();,if (config != null ) final int lenCODEStart = config.commentCODEStart.length();
Jdocify.java,int lenCODEEnd = config.commentCODEEnd.length();,if (config != null ) int lenCODEEnd = config.commentCODEEnd.length();
TestJdocify.java,final var sut = Jdocify.builder().build();,if (Jdocify != null ) final var sut = Jdocify.builder().build();
Register.java,filePattern = sb.toString();,if (sb != null ) filePattern = sb.toString();
GeciReflectionTools.java,var superClass = klass.getSuperclass();,if (klass != null ) var superClass = klass.getSuperclass();
GeciReflectionTools.java,superClass = superClass.getSuperclass();,if (superClass != null ) superClass = superClass.getSuperclass();
GeciReflectionTools.java,var superClass = klass.getSuperclass();,if (klass != null ) var superClass = klass.getSuperclass();
GeciReflectionTools.java,superClass = superClass.getSuperclass();,if (superClass != null ) superClass = superClass.getSuperclass();
GeciReflectionTools.java,var samePackage = klass.getPackage() == superClass.getPackage();,if (superClass != null ) var samePackage = klass.getPackage() == superClass.getPackage();
GeciReflectionTools.java,var samePackage = klass.getPackage() == superClass.getPackage();,if (superClass != null ) var samePackage = klass.getPackage() == superClass.getPackage();
GeciReflectionTools.java,final var modifier = currentMethod.getModifiers();,if (currentMethod != null ) final var modifier = currentMethod.getModifiers();
Geci.java,generators[i] = generatorBuilders[i].build();,if (generatorBuilders[i] != null ) generators[i] = generatorBuilders[i].build();
Source.java,var id = entry.getKey();,if (entry != null ) var id = entry.getKey();
Source.java,Segment segment = entry.getValue();,if (entry != null ) Segment segment = entry.getValue();
Reflection.java,final var entityName = in.toString().trim();,if (in != null ) final var entityName = in.toString().trim();
Reflection.java,modifiers = field.getModifiers();,if (field != null ) modifiers = field.getModifiers();
Reflection.java,modifiers = method.getModifiers();,if (method != null ) modifiers = method.getModifiers();
RegexBasedSegmentSplitHelper.java,this.excludedKeys = Arrays.asList();,if (Arrays != null ) this.excludedKeys = Arrays.asList();
Segment.java,this.originals = Arrays.asList();,if (Arrays != null ) this.originals = Arrays.asList();
TestRecord.java,Field[] fields = ToRecord.class.getDeclaredFields();,if (ToRecord != null ) Field[] fields = ToRecord.class.getDeclaredFields();
MockSegment.java,this.originals = Arrays.asList();,if (Arrays != null ) this.originals = Arrays.asList();
MockSource.java,var id = entry.getKey();,if (entry != null ) var id = entry.getKey();
MockSource.java,MockSegment segment = entry.getValue();,if (entry != null ) MockSegment segment = entry.getValue();
MockSource.java,Path parent = path.getParent();,if (path != null ) Path parent = path.getParent();
MockSource.java,seg.tab = matcher.tabbing();,if (matcher != null ) seg.tab = matcher.tabbing();
MockSource.java,var attr = matcher.attributes();,if (matcher != null ) var attr = matcher.attributes();
MockSource.java,seg.tab = matcher.tabbing();,if (matcher != null ) seg.tab = matcher.tabbing();
MockSource.java,var attr = matcher.attributes();,if (matcher != null ) var attr = matcher.attributes();
MockSource.java,seg.id = attr.id();,if (attr != null ) seg.id = attr.id();
MockSource.java,seg.tab = matcher.tabbing();,if (matcher != null ) seg.tab = matcher.tabbing();
TestDocumentation.java,readmeFile = new File(readme.toString());,if (File(readme != null ) readmeFile = new File(readme.toString());
SnippetTrim.java,final var stripped = line.stripLeading().length();,if (line != null ) final var stripped = line.stripLeading().length();
TestSource.java,final var collector = new FileCollector(Map.of());,if (FileCollector(Map != null ) final var collector = new FileCollector(Map.of());
TestGeciReflectionTools.java,final var tempi = new Template(Map.of());,if (Template(Map != null ) final var tempi = new Template(Map.of());
TestTemplate.java,final var sut = new Template(Map.of());,if (Template(Map != null ) final var sut = new Template(Map.of());
ReplCommandBuilder.java,this.parameters = new HashSet<>(Set.of());,if (HashSet<>(Set != null ) this.parameters = new HashSet<>(Set.of());
RegexBasedSegmentSplitHelper.java,this.excludedKeys = List.of();,if (List != null ) this.excludedKeys = List.of();
Segment.java,this.originals = List.of();,if (List != null ) this.originals = List.of();
Logger.java,this.LOGGER = System.getLogger(forClass.getName());,if (System != null ) this.LOGGER = System.getLogger(forClass.getName());
AnnotationBuilder.java,final var segment = source.open();,if (source != null ) final var segment = source.open();
ConfigBuilder.java,final var segment = source.open(global.id());,if (source != null ) final var segment = source.open(global.id());
Equals.java,var segment = source.open(global.id());,if (source != null ) var segment = source.open(global.id());
Repeated.java,segment = source.open(global.id());,if (source != null ) segment = source.open(global.id());
Templated.java,final var segment = source.open(global.id());,if (source != null ) final var segment = source.open(global.id());
JamalGenerator.java,var output = source.open();,if (source != null ) var output = source.open();
Record.java,final var methods = klass.getDeclaredMethods();,if (klass != null ) final var methods = klass.getDeclaredMethods();
TestMatching.java,final var result = matcher.find();,if (matcher != null ) final var result = matcher.find();
TestMatching.java,final var result = matcher.find();,if (matcher != null ) final var result = matcher.find();
TestMatching.java,final var result = matcher.find();,if (matcher != null ) final var result = matcher.find();
TestMatching.java,final var result = matcher.find();,if (matcher != null ) final var result = matcher.find();
TestMatching.java,final var result = matcher.find();,if (matcher != null ) final var result = matcher.find();
TestMatching.java,final var result = matcher.find();,if (matcher != null ) final var result = matcher.find();
TestMatching.java,final var result = matcher.find();,if (matcher != null ) final var result = matcher.find();
TestMatching.java,final var result = matcher.find();,if (matcher != null ) final var result = matcher.find();
TestMatching.java,final var result = matcher.find();,if (matcher != null ) final var result = matcher.find();
TestMatching.java,final var result = matcher.find();,if (matcher != null ) final var result = matcher.find();
TestMatching.java,final var result = matcher.find();,if (matcher != null ) final var result = matcher.find();
TestMatching.java,final var result = matcher.find();,if (matcher != null ) final var result = matcher.find();
TestMatching.java,final var result = matcher.find();,if (matcher != null ) final var result = matcher.find();
TestMatching.java,final var result = matcher.find();,if (matcher != null ) final var result = matcher.find();
TestMatching.java,final var result = matcher.find();,if (matcher != null ) final var result = matcher.find();
TestMatching.java,final var result = matcher.find();,if (matcher != null ) final var result = matcher.find();
TestMatching.java,final var result = matcher.find();,if (matcher != null ) final var result = matcher.find();
TestMatching.java,final var result = matcher.find();,if (matcher != null ) final var result = matcher.find();
TestMatching.java,final var result = matcher.find();,if (matcher != null ) final var result = matcher.find();
TestMatching.java,final var result = matcher.find();,if (matcher != null ) final var result = matcher.find();
TestMatching.java,final var result = matcher.find();,if (matcher != null ) final var result = matcher.find();
Source.java,var segment = entry.getValue();,if (entry != null ) var segment = entry.getValue();
FragmentCollector.java,lastSnippet = builder.build();,if (builder != null ) lastSnippet = builder.build();
Mapper.java,final var rawContent = segment.getContent();,if (segment != null ) final var rawContent = segment.getContent();
Repeated.java,segment = source.open(global.id());,if (source != null ) segment = source.open(global.id());
Geci.java,touched = touched || source.isTouched();,if (source != null ) touched = touched || source.isTouched();
Geci.java,touched = touched || source.isTouched();,if (source != null ) touched = touched || source.isTouched();
AnnotationBuilder.java,final var content = file.open();,if (file != null ) final var content = file.open();
SelectorCompiler.java,final var converter = lexer.get();,if (lexer != null ) final var converter = lexer.get();
CompoundParams.java,list = (List) entry.getValue();,if (entry != null ) list = (List) entry.getValue();
AnnotationBuilder.java,Segment content = file.open();,if (file != null ) Segment content = file.open();
AnnotationBuilder.java,final Segment annotationFile = newSource.open();,if (newSource != null ) final Segment annotationFile = newSource.open();
AnnotationBuilder.java,final var annotationFile = newSource.open();,if (newSource != null ) final var annotationFile = newSource.open();
CompoundParams.java,list = (List)entry.getValue();,if ((List)entry != null ) list = (List)entry.getValue();
MarkdownCodeInserter.java,final var names = source.segmentNames();,if (source != null ) final var names = source.segmentNames();
MarkdownCodeInserter.java,final var originalLines = segment.originalLines();,if (segment != null ) final var originalLines = segment.originalLines();
MarkdownCodeInserter.java,final var params =  segment.sourceParams();,if (segment != null ) final var params =  segment.sourceParams();
SnippetNumberer.java,final var names = source.segmentNames();,if (source != null ) final var names = source.segmentNames();
SnippetNumberer.java,final var params = segment.sourceParams();,if (segment != null ) final var params = segment.sourceParams();
SnippetNumberer.java,final var params = new CompoundParamsBuilder(options).build();,if (CompoundParamsBuilder(options) != null ) final var params = new CompoundParamsBuilder(options).build();
SnippetNumberer.java,long endLine = original.lines().size();,if (original != null ) long endLine = original.lines().size();
SnippetNumberer.java,final var snippet = snipEntry.getValue();,if (snipEntry != null ) final var snippet = snipEntry.getValue();
MarkdownSnippetInserter.java,final var names = source.segmentNames();,if (source != null ) final var names = source.segmentNames();
MarkdownSnippetInserter.java,final var originalLines = segment.originalLines();,if (segment != null ) final var originalLines = segment.originalLines();
TestSnippet.java,final var generator = SnippetCollector.builder().build();,if (SnippetCollector != null ) final var generator = SnippetCollector.builder().build();
Equals.java,var superClass = klass.getSuperclass();,if (klass != null ) var superClass = klass.getSuperclass();
Person.java,int result = super.hashCode();,if (super != null ) int result = super.hashCode();
GeciAnnotationTools.java,final var matchLine = trimmedLine.trim();,if (trimmedLine != null ) final var matchLine = trimmedLine.trim();
GeciReflectionTools.java,final var modifier = method.getModifiers();,if (method != null ) final var modifier = method.getModifiers();
GeciAnnotationToolsTest.java,annotations = Opsa.class.getAnnotations();,if (Opsa != null ) annotations = Opsa.class.getAnnotations();
GeciAnnotationTools.java,final var annotationName = annotation.annotationType().getSimpleName();,if (annotation != null ) final var annotationName = annotation.annotationType().getSimpleName();
Lexer.java,lenBefore = sb.length();,if (sb != null ) lenBefore = sb.length();
Lexer.java,lenAfter = sb.length();,if (sb != null ) lenAfter = sb.length();
Geci.java,touched = touched || source.isTouched();,if (source != null ) touched = touched || source.isTouched();
Geci.java,touched = touched || source.isTouched();,if (source != null ) touched = touched || source.isTouched();
Repeated.java,Segment segment = source.open(global.id());,if (source != null ) Segment segment = source.open(global.id());
TemplateBasedSelectedMemberGenerator.java,final var segment = source.open(global.id());,if (source != null ) final var segment = source.open(global.id());
TemplateBasedSelectedMemberGenerator.java,final var fieldType = field.getType();,if (field != null ) final var fieldType = field.getType();
TemplateBasedSelectedMemberGenerator.java,final var returnType = method.getReturnType();,if (method != null ) final var returnType = method.getReturnType();
TemplateBasedSelectedMemberGenerator.java,final var fieldType = field.getType();,if (field != null ) final var fieldType = field.getType();
TemplateBasedSelectedMemberGenerator.java,final var name = field.getName();,if (field != null ) final var name = field.getName();
TemplateBasedSelectedMemberGenerator.java,final var returnType = method.getReturnType();,if (method != null ) final var returnType = method.getReturnType();
TemplateBasedSelectedMemberGenerator.java,final var name = method.getName();,if (method != null ) final var name = method.getName();
TemplateBasedSelectedMemberGenerator.java,var segment = source.open(global.id());,if (source != null ) var segment = source.open(global.id());
Source.java,seg.tab = matcher.tabbing();,if (matcher != null ) seg.tab = matcher.tabbing();
RegexBasedSegmentSplitHelper.java,final var segmentStart = matcher.matches();,if (matcher != null ) final var segmentStart = matcher.matches();
GeciAnnotationTools.java,final var annotations = a.annotationType().getDeclaredAnnotations();,if (a != null ) final var annotations = a.annotationType().getDeclaredAnnotations();
Builder.java,final var typeParameters = field.getType().getTypeParameters();,if (field != null ) final var typeParameters = field.getType().getTypeParameters();
Builder.java,final var type = field.getType().getName();,if (field != null ) final var type = field.getType().getName();
Delegator.java,final var delClass = field.getType();,if (field != null ) final var delClass = field.getType();
AbstractAccessor.java,var isFinal = Modifier.isFinal(field.getModifiers());,if (Modifier != null ) var isFinal = Modifier.isFinal(field.getModifiers());
AbstractAccessor.java,var name = field.getName();,if (field != null ) var name = field.getName();
Delegator.java,final var delClass = field.getType();,if (field != null ) final var delClass = field.getType();
Accessor.java,var isFinal = Modifier.isFinal(field.getModifiers());,if (Modifier != null ) var isFinal = Modifier.isFinal(field.getModifiers());
Accessor.java,var name = field.getName();,if (field != null ) var name = field.getName();
Accessor.java,var isFinal = Modifier.isFinal(field.getModifiers());,if (Modifier != null ) var isFinal = Modifier.isFinal(field.getModifiers());
Accessor.java,int modifiers = field.getModifiers();,if (field != null ) int modifiers = field.getModifiers();
GeciAnnotationTools.java,final var matchLine = rightChopped.trim();,if (rightChopped != null ) final var matchLine = rightChopped.trim();
GeciAnnotationTools.java,final var allAnnotations = element.getDeclaredAnnotations();,if (element != null ) final var allAnnotations = element.getDeclaredAnnotations();
RegexBasedSegmentSplitHelper.java,segmentStart = matcher.matches();,if (matcher != null ) segmentStart = matcher.matches();
RegexBasedSegmentSplitHelper.java,segmentEnd = endPattern.matcher(line).matches();,if (endPattern != null ) segmentEnd = endPattern.matcher(line).matches();
Source.java,var attr = splitHelper.attributes();,if (splitHelper != null ) var attr = splitHelper.attributes();
Source.java,seg.tab = splitHelper.tabbing();,if (splitHelper != null ) seg.tab = splitHelper.tabbing();
CopyGenerator.java,final var src = source.open();,if (source != null ) final var src = source.open();
Equals.java,hashCodeSegment = source.temporary();,if (source != null ) hashCodeSegment = source.temporary();
Equals.java,var primitive = field.getType().isPrimitive();,if (field != null ) var primitive = field.getType().isPrimitive();
Equals.java,var name = field.getName();,if (field != null ) var name = field.getName();
Equals.java,var primitive = field.getType().isPrimitive();,if (field != null ) var primitive = field.getType().isPrimitive();
Equals.java,var name = field.getName();,if (field != null ) var name = field.getName();
Equals.java,var type = field.getType();,if (field != null ) var type = field.getType();
ClassBuilder.java,List<Node> list = tree.getList();,if (tree != null ) List<Node> list = tree.getList();
ClassBuilder.java,List<Node> list = tree.getList();,if (tree != null ) List<Node> list = tree.getList();
Syntax.java,var lexeme = lexer.peek();,if (lexer != null ) var lexeme = lexer.peek();
Syntax.java,var method = lexer.get();,if (lexer != null ) var method = lexer.get();
Syntax.java,var next = lexer.peek();,if (lexer != null ) var next = lexer.peek();
Syntax.java,var next = lexer.peek();,if (lexer != null ) var next = lexer.peek();
Syntax.java,next = lexer.peek();,if (lexer != null ) next = lexer.peek();
Syntax.java,next = lexer.peek();,if (lexer != null ) next = lexer.peek();
Fields.java,"final var fingerPrint = GeciReflectionTools.getGenericTypeName(klass) + ""."" + field.getName();","if (field != null ) final var fingerPrint = GeciReflectionTools.getGenericTypeName(klass) + ""."" + field.getName();"
Modifiers.java,final var entityName = in.toString().trim();,if (in != null ) final var entityName = in.toString().trim();
Modifiers.java,modifiers = method.getModifiers();,if (method != null ) modifiers = method.getModifiers();
Name.java,final var entityName = in.toString().trim();,if (in != null ) final var entityName = in.toString().trim();
Name.java,name = field.getName();,if (field != null ) name = field.getName();
Name.java,name = method.getName();,if (method != null ) name = method.getName();
Type.java,final var entityName = in.toString().trim();,if (in != null ) final var entityName = in.toString().trim();
Type.java,type = method.getReturnType();,if (method != null ) type = method.getReturnType();
Fields.java,"final var fingerPrint = Tools.getGenericTypeName(klass) + ""."" + field.getName();","if (field != null ) final var fingerPrint = Tools.getGenericTypeName(klass) + ""."" + field.getName();"
GeciReflectionTools.java,final var allAnnotations = element.getDeclaredAnnotations();,if (element != null ) final var allAnnotations = element.getDeclaredAnnotations();
GeciReflectionTools.java,final var trimmedLine = line.trim();,if (line != null ) final var trimmedLine = line.trim();
GeciReflectionTools.java,final var matchLine = rightChopped.trim();,if (rightChopped != null ) final var matchLine = rightChopped.trim();
Reflection.java,final var entityName = in.toString().trim();,if (in != null ) final var entityName = in.toString().trim();
Reflection.java,type = field.getType();,if (field != null ) type = field.getType();
Reflection.java,type = method.getReturnType();,if (method != null ) type = method.getReturnType();
Reflection.java,final var entityName = in.toString().trim();,if (in != null ) final var entityName = in.toString().trim();
Reflection.java,name = field.getName();,if (field != null ) name = field.getName();
Reflection.java,name = method.getName();,if (method != null ) name = method.getName();
Reflection.java,"final var fingerPrint = Tools.getGenericTypeName(klass) + ""."" + field.getName();","if (field != null ) final var fingerPrint = Tools.getGenericTypeName(klass) + ""."" + field.getName();"
Reflection.java,var fingerPrint = with(method).fingerprint();,if (with(method) != null ) var fingerPrint = with(method).fingerprint();
MethodTool.java,final var className = Tools.getGenericTypeName(method.getDeclaringClass());,if (Tools != null ) final var className = Tools.getGenericTypeName(method.getDeclaringClass());
Reflection.java,final var matcher = PATTERN.matcher(in.toString());,if (PATTERN != null ) final var matcher = PATTERN.matcher(in.toString());
Reflection.java,Matcher matcher = PATTERN.matcher(in.toString());,if (PATTERN != null ) Matcher matcher = PATTERN.matcher(in.toString());
Delegator.java,var delClass = field.getType();,if (field != null ) var delClass = field.getType();
Delegator.java,var name = field.getName();,if (field != null ) var name = field.getName();
Delegator.java,var modifiers = method.getModifiers();,if (method != null ) var modifiers = method.getModifiers();
SelectorCompiler.java,final var regex = lexer.get();,if (lexer != null ) final var regex = lexer.get();
SelectorCompiler.java,final var orNode = new SelectorNode.Or();,if (SelectorNode != null ) final var orNode = new SelectorNode.Or();
SelectorCompiler.java,final var orNode = new SelectorNode.Or();,if (SelectorNode != null ) final var orNode = new SelectorNode.Or();
MemberSelector.java,int modifiers = member.getModifiers();,if (member != null ) int modifiers = member.getModifiers();
FluentBuilderImpl.java,next = syntaxAnalyzer.expression();,if (syntaxAnalyzer != null ) next = syntaxAnalyzer.expression();
Syntax.java,var next = lexer.get();,if (lexer != null ) var next = lexer.get();
Syntax.java,var lexeme = lexer.get();,if (lexer != null ) var lexeme = lexer.get();
Syntax.java,lexeme = lexer.peek();,if (lexer != null ) lexeme = lexer.peek();
Syntax.java,var next = lexer.peek();,if (lexer != null ) var next = lexer.peek();
Syntax.java,lexeme = lexer.peek();,if (lexer != null ) lexeme = lexer.peek();
Syntax.java,next = lexer.peek();,if (lexer != null ) next = lexer.peek();
Equals.java,var type = field.getType();,if (field != null ) var type = field.getType();
Accessor.java,final var fields = klass.getDeclaredFields();,if (klass != null ) final var fields = klass.getDeclaredFields();
Tools.java,var ub = joinTypes(wt.getUpperBounds());,if (joinTypes(wt != null ) var ub = joinTypes(wt.getUpperBounds());
Tools.java,var lb = joinTypes(wt.getLowerBounds());,if (joinTypes(wt != null ) var lb = joinTypes(wt.getLowerBounds());
Tools.java,var types = pt.getActualTypeArguments();,if (pt != null ) var types = pt.getActualTypeArguments();
Tools.java,final var klass = (Class) pt.getRawType();,if (pt != null ) final var klass = (Class) pt.getRawType();
FluentMethodTool.java,this.klassName = Tools.normalizeTypeName(klass.getName());,if (Tools != null ) this.klassName = Tools.normalizeTypeName(klass.getName());
FluentMethodTool.java,final var normType = Tools.normalizeTypeName(t.getTypeName());,if (Tools != null ) final var normType = Tools.normalizeTypeName(t.getTypeName());
FluentMethodTool.java,final var normType = Tools.normalizeTypeName(t.getTypeName());,if (Tools != null ) final var normType = Tools.normalizeTypeName(t.getTypeName());
MethodTool.java,final var normType = Tools.normalizeTypeName(t.getTypeName());,if (Tools != null ) final var normType = Tools.normalizeTypeName(t.getTypeName());
MethodTool.java,final var normType = Tools.normalizeTypeName(t.getTypeName());,if (Tools != null ) final var normType = Tools.normalizeTypeName(t.getTypeName());
MethodTool.java,final var normType = Tools.normalizeTypeName(t.getTypeName());,if (Tools != null ) final var normType = Tools.normalizeTypeName(t.getTypeName());
Fluent.java,var generatedCode = new ClassBuilder(builder).build();,if (ClassBuilder(builder) != null ) var generatedCode = new ClassBuilder(builder).build();
ClassBuilder.java,interfaceName = ifNameFactory.getNewName();,if (ifNameFactory != null ) interfaceName = ifNameFactory.getNewName();
ClassBuilder.java,this.interfaceName = ifNameFactory.getNewName();,if (ifNameFactory != null ) this.interfaceName = ifNameFactory.getNewName();
ClassBuilder.java,this.interfaceName = ifNameFactory.getNewName();,if (ifNameFactory != null ) this.interfaceName = ifNameFactory.getNewName();
ClassBuilder.java,this.interfaceName = ifNameFactory.getNewName();,if (ifNameFactory != null ) this.interfaceName = ifNameFactory.getNewName();
ClassBuilder.java,this.interfaceName = ifNameFactory.getNewName();,if (ifNameFactory != null ) this.interfaceName = ifNameFactory.getNewName();
JavaSource.java,var next = new Wrapper(that.copy());,if (Wrapper(that != null ) var next = new Wrapper(that.copy());
JavaSource.java,var next = new Wrapper(that.copy());,if (Wrapper(that != null ) var next = new Wrapper(that.copy());
JavaSource.java,var next = new Wrapper(that.copy());,if (Wrapper(that != null ) var next = new Wrapper(that.copy());
JavaSource.java,var next = new Wrapper(that.copy());,if (Wrapper(that != null ) var next = new Wrapper(that.copy());
JavaSource.java,var next = new Wrapper(that.copy());,if (Wrapper(that != null ) var next = new Wrapper(that.copy());
JavaSource.java,var next = new Wrapper(that.copy());,if (Wrapper(that != null ) var next = new Wrapper(that.copy());
JavaSource.java,var next = new Wrapper(that.copy());,if (Wrapper(that != null ) var next = new Wrapper(that.copy());
JavaSource.java,var next = new Wrapper(that.copy());,if (Wrapper(that != null ) var next = new Wrapper(that.copy());
JavaSource.java,var next = new Wrapper(that.copy());,if (Wrapper(that != null ) var next = new Wrapper(that.copy());
JavaSource.java,var next = new Wrapper(that.copy());,if (Wrapper(that != null ) var next = new Wrapper(that.copy());
JavaSource.java,var next = new Wrapper(that.copy());,if (Wrapper(that != null ) var next = new Wrapper(that.copy());
JavaSource.java,var next = new Wrapper(that.copy());,if (Wrapper(that != null ) var next = new Wrapper(that.copy());
JavaSource.java,var next = new Wrapper(that.copy());,if (Wrapper(that != null ) var next = new Wrapper(that.copy());
JavaSource.java,var next = new Wrapper(that.copy());,if (Wrapper(that != null ) var next = new Wrapper(that.copy());
JavaSource.java,var next = new Wrapper(that.copy());,if (Wrapper(that != null ) var next = new Wrapper(that.copy());
JavaSource.java,var next = new Wrapper(that.copy());,if (Wrapper(that != null ) var next = new Wrapper(that.copy());
JavaSource.java,var next = new Wrapper(that.copy());,if (Wrapper(that != null ) var next = new Wrapper(that.copy());
JavaSource.java,var next = new Wrapper(that.copy());,if (Wrapper(that != null ) var next = new Wrapper(that.copy());
JavaSource.java,var next = new Wrapper(that.copy());,if (Wrapper(that != null ) var next = new Wrapper(that.copy());
JavaSource.java,var next = new Wrapper(that.copy());,if (Wrapper(that != null ) var next = new Wrapper(that.copy());
MethodTool.java,this.klassName = Tools.normalizeTypeName(klass.getName());,if (Tools != null ) this.klassName = Tools.normalizeTypeName(klass.getName());
ClassBuilder.java,var newInterfaceName = interfaceNameProvider.getNewInterfaceName();,if (interfaceNameProvider != null ) var newInterfaceName = interfaceNameProvider.getNewInterfaceName();
ClassBuilder.java,var list = lastNode.getList();,if (lastNode != null ) var list = lastNode.getList();
ClassBuilder.java,var list = lastNode.getList();,if (lastNode != null ) var list = lastNode.getList();
ClassBuilder.java,List<Node> list = tree.getList();,if (tree != null ) List<Node> list = tree.getList();
ClassBuilder.java,interfaceName = classNameProvider.getNewClassName();,if (classNameProvider != null ) interfaceName = classNameProvider.getNewClassName();
ClassBuilder.java,this.interfaceName = classNameProvider.getNewClassName();,if (classNameProvider != null ) this.interfaceName = classNameProvider.getNewClassName();
ClassBuilder.java,this.interfaceName = classNameProvider.getNewClassName();,if (classNameProvider != null ) this.interfaceName = classNameProvider.getNewClassName();
Tools.java,var s = field.getGenericType().getTypeName();,if (field != null ) var s = field.getGenericType().getTypeName();
Tools.java,var s = method.getGenericReturnType().getTypeName();,if (method != null ) var s = method.getGenericReturnType().getTypeName();
Delegator.java,var methods = delClass.getDeclaredMethods();,if (delClass != null ) var methods = delClass.getDeclaredMethods();
AbstractDeclaredFieldsGenerator.java,final var fields = klass.getDeclaredFields();,if (klass != null ) final var fields = klass.getDeclaredFields();
Tools.java,var s = method.getReturnType().getTypeName();,if (method != null ) var s = method.getReturnType().getTypeName();
Delegator.java,final var klass = source.getKlass();,if (source != null ) final var klass = source.getKlass();
Delegator.java,final var fields = klass.getDeclaredFields();,if (klass != null ) final var fields = klass.getDeclaredFields();
Delegator.java,var delClass = field.getType();,if (field != null ) var delClass = field.getType();
Delegator.java,var methods = delClass.getDeclaredMethods();,if (delClass != null ) var methods = delClass.getDeclaredMethods();
Delegator.java,var name = field.getName();,if (field != null ) var name = field.getName();
Delegator.java,var modifiers = method.getModifiers();,if (method != null ) var modifiers = method.getModifiers();
TestFileCollector.java,var files = new FileCollector(sources).collect();,if (FileCollector(sources) != null ) var files = new FileCollector(sources).collect();
Geci.java,final var sources = collector.collect();,if (collector != null ) final var sources = collector.collect();
FileCollector.java,var s = path.toAbsolutePath().toString();,if (path != null ) var s = path.toAbsolutePath().toString();
Geci.java,var sources = new FileCollector(directories).collect();,if (FileCollector(directories) != null ) var sources = new FileCollector(directories).collect();
Source.java,var id = entry.getKey();,if (entry != null ) var id = entry.getKey();
Source.java,var segment = entry.getValue();,if (entry != null ) var segment = entry.getValue();
Accessor.java,final var klass = source.getKlass();,if (source != null ) final var klass = source.getKlass();
Accessor.java,final var fields = klass.getDeclaredFields();,if (klass != null ) final var fields = klass.getDeclaredFields();
Accessor.java,var isFinal = Modifier.isFinal(field.getModifiers());,if (Modifier != null ) var isFinal = Modifier.isFinal(field.getModifiers());
Tools.java,var file = source.file();,if (source != null ) var file = source.file();
Delegate.java,var fields = klass.getDeclaredFields();,if (klass != null ) var fields = klass.getDeclaredFields();
Delegate.java,var delClass = field.getType();,if (field != null ) var delClass = field.getType();
Delegate.java,var methods = delClass.getMethods();,if (delClass != null ) var methods = delClass.getMethods();
Delegate.java,var name = field.getName();,if (field != null ) var name = field.getName();
