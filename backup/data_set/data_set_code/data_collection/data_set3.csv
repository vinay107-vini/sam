Filename,Buggy/Deleted,Fixed/Added
MoreTypesIsTypeOfTest.java,this.elements = compilationRule.getElements();,if (compilationRule != null ) this.elements = compilationRule.getElements();
MoreTypesIsTypeOfTest.java,Element element = Iterables.getOnlyElement(typeElement.getEnclosedElements());,if (Iterables != null ) Element element = Iterables.getOnlyElement(typeElement.getEnclosedElements());
MoreTypesIsTypeOfTest.java,TypeMirror arrayType = MoreElements.asExecutable(element).getReturnType();,if (MoreElements != null ) TypeMirror arrayType = MoreElements.asExecutable(element).getReturnType();
MoreTypes.java,int nArguments = aArguments.size();,if (aArguments != null ) int nArguments = aArguments.size();
AutoBuilderProcessor.java,vars.build = executable.invoke();,if (executable != null ) vars.build = executable.invoke();
BuilderRequiredProperties.java,int primitiveCount = primitiveProperties.size();,if (primitiveProperties != null ) int primitiveCount = primitiveProperties.size();
BuilderRequiredPropertiesTest.java,Property stringProperty = Iterables.getOnlyElement(onlyString.getProperties());,if (Iterables != null ) Property stringProperty = Iterables.getOnlyElement(onlyString.getProperties());
BuilderRequiredPropertiesTest.java,Property stringProperty = Iterables.getOnlyElement(onlyString.getProperties());,if (Iterables != null ) Property stringProperty = Iterables.getOnlyElement(onlyString.getProperties());
AutoBuilderProcessor.java,TypeMirror returnType = executable.getReturnType();,if (executable != null ) TypeMirror returnType = executable.getReturnType();
AutoBuilderProcessor.java,TypeElement enclosing = MoreElements.asType(executable.getEnclosingElement());,if (MoreElements != null ) TypeElement enclosing = MoreElements.asType(executable.getEnclosingElement());
AutoBuilderProcessor.java,String type = TypeEncoder.encodeRaw(enclosing.asType());,if (TypeEncoder != null ) String type = TypeEncoder.encodeRaw(enclosing.asType());
AutoBuilderProcessor.java,boolean generic = !enclosing.getTypeParameters().isEmpty();,if (!enclosing != null ) boolean generic = !enclosing.getTypeParameters().isEmpty();
BuilderMethodClassifierForAutoBuilder.java,TypeElement container = MoreElements.asType(executable.getEnclosingElement());,if (MoreElements != null ) TypeElement container = MoreElements.asType(executable.getEnclosingElement());
AutoBuilderProcessor.java,TypeMirror returnType = autoAnnotationMethod.getReturnType();,if (autoAnnotationMethod != null ) TypeMirror returnType = autoAnnotationMethod.getReturnType();
AutoValueOrBuilderTemplateVars.java,ImmutableSet<Property> builderRequiredProperties = ImmutableSet.of();,if (ImmutableSet != null ) ImmutableSet<Property> builderRequiredProperties = ImmutableSet.of();
AutoValueProcessor.java,vars.types = processingEnv.getTypeUtils();,if (processingEnv != null ) vars.types = processingEnv.getTypeUtils();
AutoValueishProcessor.java,simpleAnnotationName = annotationType.getSimpleName().toString();,if (annotationType != null ) simpleAnnotationName = annotationType.getSimpleName().toString();
MoreElementsTest.java,ExecutableElement method = methods.iterator().next();,if (methods != null ) ExecutableElement method = methods.iterator().next();
GwtCompatibility.java,AnnotationMirror annotation = gwtCompatibleAnnotation.get();,if (gwtCompatibleAnnotation != null ) AnnotationMirror annotation = gwtCompatibleAnnotation.get();
AutoFactoryProcessor.java,allowSubclasses = methodDescriptor.declaration().allowSubclasses();,if (methodDescriptor != null ) allowSubclasses = methodDescriptor.declaration().allowSubclasses();
MoreElements.java,Set<ExecutableElement> methods = new LinkedHashSet<ExecutableElement>(methodMap.values());,if (LinkedHashSet<ExecutableElement>(methodMap != null ) Set<ExecutableElement> methods = new LinkedHashSet<ExecutableElement>(methodMap.values());
MoreElements.java,String annotationClassName = annotationClass.getCanonicalName();,if (annotationClass != null ) String annotationClassName = annotationClass.getCanonicalName();
MoreElementsTest.java,Elements elements = compilation.getElements();,if (compilation != null ) Elements elements = compilation.getElements();
MoreElementsTest.java,Elements elements = compilation.getElements();,if (compilation != null ) Elements elements = compilation.getElements();
MoreElementsTest.java,Elements elements = compilation.getElements();,if (compilation != null ) Elements elements = compilation.getElements();
MoreElementsTest.java,Elements elements = compilation.getElements();,if (compilation != null ) Elements elements = compilation.getElements();
MoreElementsTest.java,Elements elementUtils = compilation.getElements();,if (compilation != null ) Elements elementUtils = compilation.getElements();
MoreElementsTest.java,Elements elements = compilation.getElements();,if (compilation != null ) Elements elements = compilation.getElements();
AutoFactoryProcessor.java,publicType |= methodDescriptor.publicMethod();,if (methodDescriptor != null ) publicType |= methodDescriptor.publicMethod();
AutoFactoryProcessor.java,allowSubclasses = methodDescriptor.declaration().allowSubclasses();,if (methodDescriptor != null ) allowSubclasses = methodDescriptor.declaration().allowSubclasses();
AutoAnnotationProcessor.java,elementUtils = processingEnv.getElementUtils();,if (processingEnv != null ) elementUtils = processingEnv.getElementUtils();
AutoAnnotationProcessor.java,typeUtils = processingEnv.getTypeUtils();,if (processingEnv != null ) typeUtils = processingEnv.getTypeUtils();
Overrides.java,overriddenType = MoreElements.asType(overridden.getEnclosingElement());,if (MoreElements != null ) overriddenType = MoreElements.asType(overridden.getEnclosingElement());
AutoValueishProcessor.java,String name = method.getSimpleName().toString();,if (method != null ) String name = method.getSimpleName().toString();
BuilderMethodClassifier.java,String methodName = method.getSimpleName().toString();,if (method != null ) String methodName = method.getSimpleName().toString();
BuilderSpec.java,int nTypeParameters = a.getTypeParameters().size();,if (a != null ) int nTypeParameters = a.getTypeParameters().size();
BuilderSpec.java,Set<TypeMirror> autoValueBounds = new TypeMirrorSet(aParam.getBounds());,if (TypeMirrorSet(aParam != null ) Set<TypeMirror> autoValueBounds = new TypeMirrorSet(aParam.getBounds());
BuilderSpec.java,Set<TypeMirror> builderBounds = new TypeMirrorSet(bParam.getBounds());,if (TypeMirrorSet(bParam != null ) Set<TypeMirror> builderBounds = new TypeMirrorSet(bParam.getBounds());
AutoBuilderProcessor.java,vars.builtClass = TypeEncoder.encodeRaw(constructedType.asType());,if (TypeEncoder != null ) vars.builtClass = TypeEncoder.encodeRaw(constructedType.asType());
AutoValueishProcessor.java,TypeMirror propertyType = method.getReturnType();,if (method != null ) TypeMirror propertyType = method.getReturnType();
BuilderSpec.java,this.classifier = optionalClassifier.get();,if (optionalClassifier != null ) this.classifier = optionalClassifier.get();
BuilderMethodClassifier.java,this.getterNameToGetter = getterToPropertyNameBuilder.build();,if (getterToPropertyNameBuilder != null ) this.getterNameToGetter = getterToPropertyNameBuilder.build();
BuilderMethodClassifier.java,valueGetter = entry.getValue();,if (entry != null ) valueGetter = entry.getValue();
BuilderMethodClassifier.java,ImmutableSet<ExecutableElement> allGetters = getterToPropertyName.keySet();,if (getterToPropertyName != null ) ImmutableSet<ExecutableElement> allGetters = getterToPropertyName.keySet();
AutoValueTemplateVars.java,ImmutableList<String> builderAnnotations = ImmutableList.of();,if (ImmutableList != null ) ImmutableList<String> builderAnnotations = ImmutableList.of();
AutoValueTemplateVars.java,Optional<SimpleMethod> buildMethod = Optional.empty();,if (Optional != null ) Optional<SimpleMethod> buildMethod = Optional.empty();
AutoValueishProcessor.java,type = (TypeElement) type.getEnclosingElement();,if (type != null ) type = (TypeElement) type.getEnclosingElement();
BuilderSpec.java,boolean autoValueHasToBuilder = !toBuilderMethods.isEmpty();,if (!toBuilderMethods != null ) boolean autoValueHasToBuilder = !toBuilderMethods.isEmpty();
FactoryWriter.java,ImmutableSet<PackageAndClass> factoryNames = factoriesBeingCreated.get(type.toString());,if (factoriesBeingCreated != null ) ImmutableSet<PackageAndClass> factoryNames = factoriesBeingCreated.get(type.toString());
BuilderSpec.java,DeclaredType returnType = MoreTypes.asDeclared(method.getReturnType());,if (MoreTypes != null ) DeclaredType returnType = MoreTypes.asDeclared(method.getReturnType());
SimpleServiceLoader.java,String className = maybeClassName.get();,if (maybeClassName != null ) String className = maybeClassName.get();
SimpleServiceLoader.java,Object provider = c.getConstructor().newInstance();,if (c != null ) Object provider = c.getConstructor().newInstance();
FactoryDescriptor.java,Key key = entry.getKey();,if (entry != null ) Key key = entry.getKey();
FactoryDescriptor.java,Parameter parameter = Iterables.getOnlyElement(entry.getValue());,if (Iterables != null ) Parameter parameter = Iterables.getOnlyElement(entry.getValue());
FactoryDescriptor.java,Optional<AnnotationMirror> nullable = Optional.absent();,if (Optional != null ) Optional<AnnotationMirror> nullable = Optional.absent();
FactoryDescriptor.java,nullable = nullable.or(param.nullable());,if (nullable != null ) nullable = nullable.or(param.nullable());
Parameter.java,Optional<AnnotationMirror> nullable = Optional.absent();,if (Optional != null ) Optional<AnnotationMirror> nullable = Optional.absent();
AutoServiceProcessor.java,OutputStream out = fileObject.openOutputStream();,if (fileObject != null ) OutputStream out = fileObject.openOutputStream();
AutoAnnotationProcessor.java,TypeElement methodClass = (TypeElement) method.getEnclosingElement();,if (method != null ) TypeElement methodClass = (TypeElement) method.getEnclosingElement();
AutoAnnotationProcessor.java,TypeElement type = (TypeElement) method.getEnclosingElement();,if (method != null ) TypeElement type = (TypeElement) method.getEnclosingElement();
AutoAnnotationProcessor.java,type = (TypeElement) type.getEnclosingElement();,if (type != null ) type = (TypeElement) type.getEnclosingElement();
SuperficialValidation.java,TypeMirror expectedType = valueEntry.getKey().getReturnType();,if (valueEntry != null ) TypeMirror expectedType = valueEntry.getKey().getReturnType();
SuperficialValidation.java,expectedType = MoreTypes.asArray(expectedType).getComponentType();,if (MoreTypes != null ) expectedType = MoreTypes.asArray(expectedType).getComponentType();
BuilderSpec.java,String copy = copyFunction.apply(property.toString());,if (copyFunction != null ) String copy = copyFunction.apply(property.toString());
BasicAnnotationProcessor.java,deferredElementsByAnnotationBuilder = ImmutableSetMultimap.builder();,if (ImmutableSetMultimap != null ) deferredElementsByAnnotationBuilder = ImmutableSetMultimap.builder();
BasicAnnotationProcessor.java,TypeElement annotationType = elements.getTypeElement(annotationClass.getCanonicalName());,if (elements != null ) TypeElement annotationType = elements.getTypeElement(annotationClass.getCanonicalName());
BasicAnnotationProcessorTest.java,processArguments = ImmutableList.builder();,if (ImmutableList != null ) processArguments = ImmutableList.builder();
AutoFactoryDeclaration.java,CharSequence packageName = getPackage(targetType()).getQualifiedName();,if (getPackage(targetType()) != null ) CharSequence packageName = getPackage(targetType()).getQualifiedName();
AutoFactoryProcessor.java,String factoryName = declaration.get().getFactoryName();,if (declaration != null ) String factoryName = declaration.get().getFactoryName();
AutoFactoryProcessor.java,publicType |= methodDescriptor.publicMethod();,if (methodDescriptor != null ) publicType |= methodDescriptor.publicMethod();
AutoFactoryProcessor.java,allowSubclasses = methodDescriptor.declaration().allowSubclasses();,if (methodDescriptor != null ) allowSubclasses = methodDescriptor.declaration().allowSubclasses();
FactoryWriter.java,String factoryName = getSimpleName(descriptor.name()).toString();,if (getSimpleName(descriptor != null ) String factoryName = getSimpleName(descriptor.name()).toString();
PropertyBuilderClassifier.java,Name name = method.getSimpleName();,if (method != null ) Name name = method.getSimpleName();
SerializableAutoValueExtension.java,Serializer serializer = serializersMap.get(propertyMirror.getType());,if (serializersMap != null ) Serializer serializer = serializersMap.get(propertyMirror.getType());
BasicAnnotationProcessor.java,missingElements = allMissingElements.build();,if (allMissingElements != null ) missingElements = allMissingElements.build();
BuilderMethodClassifier.java,VariableElement parameterElement = Iterables.getOnlyElement(setter.getParameters());,if (Iterables != null ) VariableElement parameterElement = Iterables.getOnlyElement(setter.getParameters());
AutoValueNotEclipseTest.java,PropertyBuilderInheritsType.Builder builder = PropertyBuilderInheritsType.builder();,if (PropertyBuilderInheritsType != null ) PropertyBuilderInheritsType.Builder builder = PropertyBuilderInheritsType.builder();
AutoValueNotEclipseTest.java,PropertyBuilderInheritsType x = builder.build();,if (builder != null ) PropertyBuilderInheritsType x = builder.build();
TypeSimplifier.java,TypeElement typeElement = (TypeElement) declaredType.asElement();,if (declaredType != null ) TypeElement typeElement = (TypeElement) declaredType.asElement();
MoreTypes.java,typeElement = MoreElements.asType(type.asElement());,if (MoreElements != null ) typeElement = MoreElements.asType(type.asElement());
BuilderSpec.java,BuilderMethodClassifier classifier = optionalClassifier.get();,if (optionalClassifier != null ) BuilderMethodClassifier classifier = optionalClassifier.get();
PropertyBuilderClassifier.java,TypeMirror barTypeMirror = barGetter.getReturnType();,if (barGetter != null ) TypeMirror barTypeMirror = barGetter.getReturnType();
ExtensionTest.java,Writer sourceWriter = sourceFile.openWriter();,if (sourceFile != null ) Writer sourceWriter = sourceFile.openWriter();
MemoizeExtension.java,TypeMirror returnType = method.getReturnType();,if (method != null ) TypeMirror returnType = method.getReturnType();
AutoValueOrOneOfProcessor.java,DeclaredType declaredType = MoreTypes.asDeclared(type.asType());,if (MoreTypes != null ) DeclaredType declaredType = MoreTypes.asDeclared(type.asType());
DependencyInjectionIntegrationTest.java,FactoryGeneratedFactory factoryGeneratedFactory = DaggerFactoryComponent.create().factory();,if (DaggerFactoryComponent != null ) FactoryGeneratedFactory factoryGeneratedFactory = DaggerFactoryComponent.create().factory();
Reformatter.java,StringBuilder sb = new StringBuilder(s.length());,if (StringBuilder(s != null ) StringBuilder sb = new StringBuilder(s.length());
Reformatter.java,StringBuilder sb = new StringBuilder(s.length());,if (StringBuilder(s != null ) StringBuilder sb = new StringBuilder(s.length());
Reformatter.java,StringBuilder sb = new StringBuilder(s.length());,if (StringBuilder(s != null ) StringBuilder sb = new StringBuilder(s.length());
BuilderSpec.java,DeclaredType builderTypeMirror = MoreTypes.asDeclared(builderTypeElement.asType());,if (MoreTypes != null ) DeclaredType builderTypeMirror = MoreTypes.asDeclared(builderTypeElement.asType());
BuilderSpec.java,TypeMirror parameterType = Iterables.getOnlyElement(setterMirror.getParameterTypes());,if (Iterables != null ) TypeMirror parameterType = Iterables.getOnlyElement(setterMirror.getParameterTypes());
BuilderSpec.java,vars.builderSetters = setterBuilder.build();,if (setterBuilder != null ) vars.builderSetters = setterBuilder.build();
BuilderSpec.java,boolean nullable = maybeNullable.isPresent();,if (maybeNullable != null ) boolean nullable = maybeNullable.isPresent();
BuilderSpec.java,of = optionalish.ofNullable();,if (optionalish != null ) of = optionalish.ofNullable();
Key.java,String typeQualifiedName = MoreTypes.asTypeElement(type()).toString();,if (MoreTypes != null ) String typeQualifiedName = MoreTypes.asTypeElement(type()).toString();
AutoAnnotationCompilationTest.java,JavaCompiler javaCompiler = ToolProvider.getSystemJavaCompiler();,if (ToolProvider != null ) JavaCompiler javaCompiler = ToolProvider.getSystemJavaCompiler();
AutoAnnotationCompilationTest.java,boolean result = compilationTask.call();,if (compilationTask != null ) boolean result = compilationTask.call();
BuilderMethodClassifier.java,TypeMirror erasedCopyOfReturnType = typeUtils.erasure(copyOfMethod.getReturnType());,if (typeUtils != null ) TypeMirror erasedCopyOfReturnType = typeUtils.erasure(copyOfMethod.getReturnType());
BuilderMethodClassifier.java,String property = getterEntry.getValue();,if (getterEntry != null ) String property = getterEntry.getValue();
BuilderMethodClassifier.java,TypeMirror propertyType = getterEntry.getKey().getReturnType();,if (getterEntry != null ) TypeMirror propertyType = getterEntry.getKey().getReturnType();
BuilderMethodClassifier.java,TypeMirror originalGetterType = originalGetter.getReturnType();,if (originalGetter != null ) TypeMirror originalGetterType = originalGetter.getReturnType();
BuilderMethodClassifier.java,TypeMirror targetType = valueGetter.getReturnType();,if (valueGetter != null ) TypeMirror targetType = valueGetter.getReturnType();
BuilderMethodClassifier.java,TypeMirror targetType = valueGetter.getReturnType();,if (valueGetter != null ) TypeMirror targetType = valueGetter.getReturnType();
BuilderSpec.java,String property = entry.getKey();,if (entry != null ) String property = entry.getKey();
BuilderSpec.java,ExecutableElement setter = entry.getValue();,if (entry != null ) ExecutableElement setter = entry.getValue();
BuilderSpec.java,VariableElement parameterElement = Iterables.getOnlyElement(setter.getParameters());,if (Iterables != null ) VariableElement parameterElement = Iterables.getOnlyElement(setter.getParameters());
BuilderSpec.java,TypeMirror parameterType = parameterElement.asType();,if (parameterElement != null ) TypeMirror parameterType = parameterElement.asType();
EclipseHack.java,Types typeUtils = processingEnv.getTypeUtils();,if (processingEnv != null ) Types typeUtils = processingEnv.getTypeUtils();
EclipseHack.java,Types typeUtils = processingEnv.getTypeUtils();,if (processingEnv != null ) Types typeUtils = processingEnv.getTypeUtils();
EclipseHack.java,Types typeUtils = processingEnv.getTypeUtils();,if (processingEnv != null ) Types typeUtils = processingEnv.getTypeUtils();
EclipseHack.java,Elements elementUtils = processingEnv.getElementUtils();,if (processingEnv != null ) Elements elementUtils = processingEnv.getElementUtils();
Parser.java,c = reader.read();,if (reader != null ) c = reader.read();
Parser.java,int len = sb.length();,if (sb != null ) int len = sb.length();
Parser.java,ImmutableList<Node> nestedTokens = nestedParser.parseTokens();,if (nestedParser != null ) ImmutableList<Node> nestedTokens = nestedParser.parseTokens();
Parser.java,Integer value = Ints.tryParse(sb.toString());,if (Ints != null ) Integer value = Ints.tryParse(sb.toString());
ReferenceNode.java,"method = visibleMethod(method, target.getClass());","if (target != null ) method = visibleMethod(method, target.getClass());"
ReferenceNode.java,"Method methodSuper = visibleMethod(method, in.getSuperclass());","if (in != null ) Method methodSuper = visibleMethod(method, in.getSuperclass());"
Reparser.java,Macro macro = macros.get(macroCall.name());,if (macros != null ) Macro macro = macros.get(macroCall.name());
BuilderSpec.java,Types typeUtils = processingEnv.getTypeUtils();,if (processingEnv != null ) Types typeUtils = processingEnv.getTypeUtils();
Optionalish.java,TypeElement typeElement = MoreElements.asType(optionalType.asElement());,if (MoreElements != null ) TypeElement typeElement = MoreElements.asType(optionalType.asElement());
AutoOneOfProcessor.java,vars.types = processingEnv.getTypeUtils();,if (processingEnv != null ) vars.types = processingEnv.getTypeUtils();
AutoValueOrOneOfProcessor.java,Set<ExecutableElement> propertyMethods = annotatedPropertyMethods.keySet();,if (annotatedPropertyMethods != null ) Set<ExecutableElement> propertyMethods = annotatedPropertyMethods.keySet();
AutoValueProcessor.java,vars.annotations = ImmutableList.of();,if (ImmutableList != null ) vars.annotations = ImmutableList.of();
AutoValueProcessor.java,Element annotationElement = annotation.getAnnotationType().asElement();,if (annotation != null ) Element annotationElement = annotation.getAnnotationType().asElement();
TemplateVars.java,this.fields = getFields(getClass().getDeclaredFields());,if (getFields(getClass() != null ) this.fields = getFields(getClass().getDeclaredFields());
BugDetector.java,typeAnnotationsNotReturned = annotationsFromVisitor.isEmpty();,if (annotationsFromVisitor != null ) typeAnnotationsNotReturned = annotationsFromVisitor.isEmpty();
AutoValueProcessor.java,TypeMirror annotationMirror = annotationElement.asType();,if (annotationElement != null ) TypeMirror annotationMirror = annotationElement.asType();
GeneratedImport.java,Elements elements = compilationRule.getElements();,if (compilationRule != null ) Elements elements = compilationRule.getElements();
Parser.java,c = reader.read();,if (reader != null ) c = reader.read();
AutoValueOrOneOfProcessor.java,Set<Name> noArgMethods = Sets.newHashSet();,if (Sets != null ) Set<Name> noArgMethods = Sets.newHashSet();
AutoValueProcessor.java,List<AutoValueExtension> applicableExtensions = Lists.newArrayList();,if (Lists != null ) List<AutoValueExtension> applicableExtensions = Lists.newArrayList();
AutoValueProcessor.java,List<AutoValueExtension> finalExtensions = Lists.newArrayList();,if (Lists != null ) List<AutoValueExtension> finalExtensions = Lists.newArrayList();
AutoValueProcessor.java,Set<ExecutableElement> consumed = Sets.newHashSet();,if (Sets != null ) Set<ExecutableElement> consumed = Sets.newHashSet();
AutoValueProcessor.java,Set<ExecutableElement> consumedHere = Sets.newHashSet();,if (Sets != null ) Set<ExecutableElement> consumedHere = Sets.newHashSet();
ReferenceNode.java,List<Method> compatibleMethods = Lists.newArrayList();,if (Lists != null ) List<Method> compatibleMethods = Lists.newArrayList();
AutoValueProcessor.java,TypeMirror propertyType = method.getReturnType();,if (method != null ) TypeMirror propertyType = method.getReturnType();
AutoValueProcessor.java,DeclaredType declaredType = MoreTypes.asDeclared(type.asType());,if (MoreTypes != null ) DeclaredType declaredType = MoreTypes.asDeclared(type.asType());
AutoValueProcessor.java,typeUtils = processingEnv.getTypeUtils();,if (processingEnv != null ) typeUtils = processingEnv.getTypeUtils();
AutoValueProcessor.java,String name = type.getSimpleName().toString();,if (type != null ) String name = type.getSimpleName().toString();
AutoValueProcessor.java,type = (TypeElement) type.getEnclosingElement();,if (type != null ) type = (TypeElement) type.getEnclosingElement();
AutoValueProcessor.java,this.name = method.getSimpleName().toString();,if (method != null ) this.name = method.getSimpleName().toString();
AutoValueProcessor.java,Set<Modifier> mods = method.getModifiers();,if (method != null ) Set<Modifier> mods = method.getModifiers();
AutoValueProcessor.java,String name = method.getSimpleName().toString();,if (method != null ) String name = method.getSimpleName().toString();
AutoValueProcessor.java,TypeElement annotationElement = elementUtils.getTypeElement(annotation.getCanonicalName());,if (elementUtils != null ) TypeElement annotationElement = elementUtils.getTypeElement(annotation.getCanonicalName());
AutoValueProcessor.java,String methodName = method.getSimpleName().toString();,if (method != null ) String methodName = method.getSimpleName().toString();
AutoValueProcessor.java,ElementKind enclosingKind = type.getEnclosingElement().getKind();,if (type != null ) ElementKind enclosingKind = type.getEnclosingElement().getKind();
AutoValueProcessor.java,Set<Name> noArgMethods = Sets.newHashSet();,if (Sets != null ) Set<Name> noArgMethods = Sets.newHashSet();
AutoValueProcessor.java,boolean hasArgs = !method.getParameters().isEmpty();,if (!method != null ) boolean hasArgs = !method.getParameters().isEmpty();
AutoValueProcessor.java,TypeMirror type = getter.getReturnType();,if (getter != null ) TypeMirror type = getter.getReturnType();
AutoValueProcessor.java,List<VariableElement> fields = ElementFilter.fieldsIn(type.getEnclosedElements());,if (ElementFilter != null ) List<VariableElement> fields = ElementFilter.fieldsIn(type.getEnclosedElements());
AutoValueProcessor.java,Object value = field.getConstantValue();,if (field != null ) Object value = field.getConstantValue();
TemplateVars.java,Field[] declaredFields = getClass().getDeclaredFields();,if (getClass() != null ) Field[] declaredFields = getClass().getDeclaredFields();
TemplateVars.java,this.fields = fields.build();,if (fields != null ) this.fields = fields.build();
ReferenceNode.java,List<Method> methodsWithName = Lists.newArrayList();,if (Lists != null ) List<Method> methodsWithName = Lists.newArrayList();
Reparser.java,this.macros = Maps.newTreeMap();,if (Maps != null ) this.macros = Maps.newTreeMap();
AutoServiceProcessor.java,TypeElement providerType = (TypeElement) providerInterface.asElement();,if (providerInterface != null ) TypeElement providerType = (TypeElement) providerInterface.asElement();
AutoAnnotationProcessor.java,TypeMirror annotationTypeMirror = annotationElement.asType();,if (annotationElement != null ) TypeMirror annotationTypeMirror = annotationElement.asType();
AutoAnnotationProcessor.java,Set<TypeMirror> memberTypes = getMemberTypes(memberMethods.values());,if (getMemberTypes(memberMethods != null ) Set<TypeMirror> memberTypes = getMemberTypes(memberMethods.values());
AutoAnnotationProcessor.java,vars.annotationName = typeSimplifier.simplify(annotationElement.asType());,if (typeSimplifier != null ) vars.annotationName = typeSimplifier.simplify(annotationElement.asType());
AutoAnnotationProcessor.java,vars.imports = typeSimplifier.typesToImport();,if (typeSimplifier != null ) vars.imports = typeSimplifier.typesToImport();
AutoValueProcessor.java,DeclaredType declaredType = MoreTypes.asDeclared(type.asType());,if (MoreTypes != null ) DeclaredType declaredType = MoreTypes.asDeclared(type.asType());
AutoValueProcessor.java,vars.imports = typeSimplifier.typesToImport();,if (typeSimplifier != null ) vars.imports = typeSimplifier.typesToImport();
GwtSerialization.java,String type = property.getType();,if (property != null ) String type = property.getType();
TypeSimplifier.java,String topString = top.getQualifiedName().toString();,if (top != null ) String topString = top.getQualifiedName().toString();
TypeSimplifier.java,TypeMirror extendsBound = type.getExtendsBound();,if (type != null ) TypeMirror extendsBound = type.getExtendsBound();
TypeSimplifier.java,TypeMirror superBound = type.getSuperBound();,if (type != null ) TypeMirror superBound = type.getSuperBound();
SimplifyWithAnnotationsTest.java,Types typeUtils = processingEnv.getTypeUtils();,if (processingEnv != null ) Types typeUtils = processingEnv.getTypeUtils();
TypeSimplifierTest.java,TypeMirror multipleBoundsMirror = multipleBoundsElement.asType();,if (multipleBoundsElement != null ) TypeMirror multipleBoundsMirror = multipleBoundsElement.asType();
TypeSimplifierTest.java,typeUtils = processingEnv.getTypeUtils();,if (processingEnv != null ) typeUtils = processingEnv.getTypeUtils();
TypeSimplifierTest.java,elementUtils = processingEnv.getElementUtils();,if (processingEnv != null ) elementUtils = processingEnv.getElementUtils();
TypeSimplifierTest.java,ErrorType errorType = (ErrorType) extendsUndefinedType.getSuperclass();,if (extendsUndefinedType != null ) ErrorType errorType = (ErrorType) extendsUndefinedType.getSuperclass();
BuilderMethodClassifier.java,this.getterNameToGetter = getterToPropertyNameBuilder.build();,if (getterToPropertyNameBuilder != null ) this.getterNameToGetter = getterToPropertyNameBuilder.build();
AutoAnnotationProcessor.java,Writer writer = sourceFile.openWriter();,if (sourceFile != null ) Writer writer = sourceFile.openWriter();
BuilderSpec.java,Optional<TypeElement> builderTypeElement = Optional.absent();,if (Optional != null ) Optional<TypeElement> builderTypeElement = Optional.absent();
GwtCompatibility.java,Optional<AnnotationMirror> gwtCompatibleAnnotation = Optional.absent();,if (Optional != null ) Optional<AnnotationMirror> gwtCompatibleAnnotation = Optional.absent();
GwtCompatibility.java,List<String> elements = Lists.newArrayList();,if (Lists != null ) List<String> elements = Lists.newArrayList();
AutoValueProcessor.java,Writer writer = sourceFile.openWriter();,if (sourceFile != null ) Writer writer = sourceFile.openWriter();
GwtSerialization.java,Writer writer = sourceFile.openWriter();,if (sourceFile != null ) Writer writer = sourceFile.openWriter();
CompilationErrorsTest.java,javac = ToolProvider.getSystemJavaCompiler();,if (ToolProvider != null ) javac = ToolProvider.getSystemJavaCompiler();
CompilationErrorsTest.java,tmpDir = temporaryFolder.getRoot();,if (temporaryFolder != null ) tmpDir = temporaryFolder.getRoot();
CompilationErrorsTest.java,File[] files = dir.listFiles();,if (dir != null ) File[] files = dir.listFiles();
CompilationErrorsTest.java,deletedAll &= file.delete();,if (file != null ) deletedAll &= file.delete();
CompilationErrorsTest.java,List<String> classNames = Lists.newArrayList();,if (Lists != null ) List<String> classNames = Lists.newArrayList();
CompilationErrorsTest.java,List<JavaFileObject> sourceFiles = Lists.newArrayList();,if (Lists != null ) List<JavaFileObject> sourceFiles = Lists.newArrayList();
CompilationErrorsTest.java,"File dir = new File(tmpDir, className.sourceDirectoryName());","if (className != null ) File dir = new File(tmpDir, className.sourceDirectoryName());"
CompilationErrorsTest.java,boolean compiledOk = javacTask.call();,if (javacTask != null ) boolean compiledOk = javacTask.call();
CompilationErrorsTest.java,int expectedLine = expectedDiagnostic.getColumnKey();,if (expectedDiagnostic != null ) int expectedLine = expectedDiagnostic.getColumnKey();
CompilationErrorsTest.java,int actualLine = diagnostic.getColumnKey();,if (diagnostic != null ) int actualLine = diagnostic.getColumnKey();
AbstractMethodExtractor.java,boolean topLevel = (braceDepth == classStack.size());,if (classStack != null ) boolean topLevel = (braceDepth == classStack.size());
AbstractMethodExtractor.java,String container = classStack.getLast();,if (classStack != null ) String container = classStack.getLast();
AbstractMethodExtractor.java,className = tokenizer.nextToken();,if (tokenizer != null ) className = tokenizer.nextToken();
EclipseHack.java,TypeElement owner = properties.get(index).getOwner();,if (properties != null ) TypeElement owner = properties.get(index).getOwner();
EclipseHack.java,order = propertyOrderer.determinePropertyOrder();,if (propertyOrderer != null ) order = propertyOrderer.determinePropertyOrder();
EclipseHack.java,allFound &= order.contains(property.getGetter());,if (order != null ) allFound &= order.contains(property.getGetter());
EclipseHack.java,sourceReader = readerProvider.call();,if (readerProvider != null ) sourceReader = readerProvider.call();
EclipseHack.java,String className = type.getQualifiedName().toString();,if (type != null ) String className = type.getQualifiedName().toString();
EclipseHack.java,URL classFileUrl = classFileUri.toURL();,if (classFileUri != null ) URL classFileUrl = classFileUri.toURL();
EclipseHack.java,inputStream = classFileUrl.openStream();,if (classFileUrl != null ) inputStream = classFileUrl.openStream();
AbstractMethodListerTest.java,ClassLoader loader = abstractClass.getClassLoader();,if (abstractClass != null ) ClassLoader loader = abstractClass.getClassLoader();
AbstractMethodListerTest.java,List<String> methods = abstractMethodLister.abstractNoArgMethods();,if (abstractMethodLister != null ) List<String> methods = abstractMethodLister.abstractNoArgMethods();
EclipseHackTokenizerTest.java,String tokens = tokenStringBuilder.toString();,if (tokenStringBuilder != null ) String tokens = tokenStringBuilder.toString();
MemoizeExtension.java,Set<String> parameterNames = Sets.newLinkedHashSet();,if (Sets != null ) Set<String> parameterNames = Sets.newLinkedHashSet();
AutoValueProcessor.java,vars.isFinal = applicableExtensions.isEmpty();,if (applicableExtensions != null ) vars.isFinal = applicableExtensions.isEmpty();
AutoValueTest.java,OptionalPropertyWithBuilder omitted = OptionalPropertyWithBuilder.builder().build();,if (OptionalPropertyWithBuilder != null ) OptionalPropertyWithBuilder omitted = OptionalPropertyWithBuilder.builder().build();
AutoValueProcessor.java,"String subclass = generatedSubclassName(type, applicableExtensions.size());","if (applicableExtensions != null ) String subclass = generatedSubclassName(type, applicableExtensions.size());"
AutoValueTest.java,int mods = method.getModifiers();,if (method != null ) int mods = method.getModifiers();
AutoValueProcessor.java,Set<Modifier> mods = method.getModifiers();,if (method != null ) Set<Modifier> mods = method.getModifiers();
BuilderSpec.java,vars.buildMethodName = buildMethod.getSimpleName().toString();,if (buildMethod != null ) vars.buildMethodName = buildMethod.getSimpleName().toString();
AutoValueTest.java,Empty instance = Empty.create();,if (Empty != null ) Empty instance = Empty.create();
AutoValueTest.java,ExplicitEquals instance = ExplicitEquals.create();,if (ExplicitEquals != null ) ExplicitEquals instance = ExplicitEquals.create();
AutoValueTest.java,LukesBase.LukesSub sub = LukesBase.LukesSub.create();,if (LukesBase != null ) LukesBase.LukesSub sub = LukesBase.LukesSub.create();
AutoValueTest.java,EmptyWithBuilder x = EmptyWithBuilder.builder().build();,if (EmptyWithBuilder != null ) EmptyWithBuilder x = EmptyWithBuilder.builder().build();
AutoValueTest.java,EmptyWithBuilder y = EmptyWithBuilder.builder().build();,if (EmptyWithBuilder != null ) EmptyWithBuilder y = EmptyWithBuilder.builder().build();
AutoValueTest.java,BuilderWithUnprefixedGetters<String> instance = builder.setNoGetter(noGetter).build();,if (builder != null ) BuilderWithUnprefixedGetters<String> instance = builder.setNoGetter(noGetter).build();
AutoValueTest.java,BuilderWithPrefixedGetters<String> instance = builder.setNoGetter(noGetter).build();,if (builder != null ) BuilderWithPrefixedGetters<String> instance = builder.setNoGetter(noGetter).build();
AutoValueTest.java,BuilderWithPropertyBuilders<Integer> b = bBuilder.build();,if (bBuilder != null ) BuilderWithPropertyBuilders<Integer> b = bBuilder.build();
AutoValueTest.java,BuilderWithPropertyBuilders<Integer> c = cBuilder.build();,if (cBuilder != null ) BuilderWithPropertyBuilders<Integer> c = cBuilder.build();
AutoValueTest.java,BuilderWithPropertyBuilders<Integer> d = dBuilder.build();,if (dBuilder != null ) BuilderWithPropertyBuilders<Integer> d = dBuilder.build();
TypeSimplifierTest.java,File tmpDir = Files.createTempDir();,if (Files != null ) File tmpDir = Files.createTempDir();
TypeSimplifierTest.java,JavaCompiler javac = ToolProvider.getSystemJavaCompiler();,if (ToolProvider != null ) JavaCompiler javac = ToolProvider.getSystemJavaCompiler();
TypeSimplifierTest.java,typeUtil = processingEnv.getTypeUtils();,if (processingEnv != null ) typeUtil = processingEnv.getTypeUtils();
TypeSimplifierTest.java,TypeMirror multipleBoundsMirror = multipleBoundsElement.asType();,if (multipleBoundsElement != null ) TypeMirror multipleBoundsMirror = multipleBoundsElement.asType();
TypeSimplifierTest.java,List<VariableElement> fields = ElementFilter.fieldsIn(erasureClass.getEnclosedElements());,if (ElementFilter != null ) List<VariableElement> fields = ElementFilter.fieldsIn(erasureClass.getEnclosedElements());
TypeSimplifierTest.java,String fieldName = field.getSimpleName().toString();,if (field != null ) String fieldName = field.getSimpleName().toString();
TypeSimplifierTest.java,TypeMirror fieldType = field.asType();,if (field != null ) TypeMirror fieldType = field.asType();
TypeSimplifierTest.java,ErrorType errorType = (ErrorType) extendsUndefinedType.getSuperclass();,if (extendsUndefinedType != null ) ErrorType errorType = (ErrorType) extendsUndefinedType.getSuperclass();
CompilationErrorsTest.java,tmpDir = Files.createTempDir();,if (Files != null ) tmpDir = Files.createTempDir();
BuilderMethodClassifier.java,String builderTypeString = builderTypeElement.getQualifiedName().toString();,if (builderTypeElement != null ) String builderTypeString = builderTypeElement.getQualifiedName().toString();
BuilderSpec.java,String property = entry.getKey();,if (entry != null ) String property = entry.getKey();
BuilderSpec.java,ExecutableElement propertyBuilderMethod = entry.getValue();,if (entry != null ) ExecutableElement propertyBuilderMethod = entry.getValue();
BuilderSpec.java,String immutableType = typeSimplifier.simplify(autoValuePropertyMethod.getReturnType());,if (typeSimplifier != null ) String immutableType = typeSimplifier.simplify(autoValuePropertyMethod.getReturnType());
BuilderSpec.java,Set<String> methodNames = Sets.newHashSet();,if (Sets != null ) Set<String> methodNames = Sets.newHashSet();
BuilderSpec.java,int nTypeParameters = autoValueClass.getTypeParameters().size();,if (autoValueClass != null ) int nTypeParameters = autoValueClass.getTypeParameters().size();
BuilderSpec.java,Set<TypeMirror> autoValueBounds = new TypeMirrorSet(autoValueParam.getBounds());,if (TypeMirrorSet(autoValueParam != null ) Set<TypeMirror> autoValueBounds = new TypeMirrorSet(autoValueParam.getBounds());
BuilderSpec.java,Set<TypeMirror> builderBounds = new TypeMirrorSet(builderParam.getBounds());,if (TypeMirrorSet(builderParam != null ) Set<TypeMirror> builderBounds = new TypeMirrorSet(builderParam.getBounds());
EclipseHack.java,DeclaredType autoValueTypeMirror = MoreTypes.asDeclared(autoValueType.asType());,if (MoreTypes != null ) DeclaredType autoValueTypeMirror = MoreTypes.asDeclared(autoValueType.asType());
ReferenceNode.java,String nodeClassName = Node.class.getName();,if (Node != null ) String nodeClassName = Node.class.getName();
Overrides.java,DeclaredType inType = MoreTypes.asDeclared(in.asType());,if (MoreTypes != null ) DeclaredType inType = MoreTypes.asDeclared(in.asType());
OverridesTest.java,elementUtils = compilation.getElements();,if (compilation != null ) elementUtils = compilation.getElements();
OverridesTest.java,typeUtils = compilation.getTypes();,if (compilation != null ) typeUtils = compilation.getTypes();
AutoFactoryProcessor.java,factoryWriter = new FactoryWriter(processingEnv.getFiler());,if (FactoryWriter(processingEnv != null ) factoryWriter = new FactoryWriter(processingEnv.getFiler());
TypeSimplifier.java,String typeString = typeElement.getQualifiedName().toString();,if (typeElement != null ) String typeString = typeElement.getQualifiedName().toString();
TypeSimplifier.java,Element enclosing = type.getEnclosingElement();,if (type != null ) Element enclosing = type.getEnclosingElement();
MoreTypes.java,TypeParameterElement aElement = (TypeParameterElement) a.asElement();,if (a != null ) TypeParameterElement aElement = (TypeParameterElement) a.asElement();
MoreTypes.java,TypeParameterElement bElement = (TypeParameterElement) b.asElement();,if (b != null ) TypeParameterElement bElement = (TypeParameterElement) b.asElement();
MoreTypes.java,ImmutableList<TypeMirror> noArguments = ImmutableList.of();,if (ImmutableList != null ) ImmutableList<TypeMirror> noArguments = ImmutableList.of();
MoreTypes.java,result += t.getKind().hashCode();,if (t != null ) result += t.getKind().hashCode();
MoreTypes.java,result += t.asElement().hashCode();,if (t != null ) result += t.asElement().hashCode();
MoreTypes.java,TypeParameterElement element = (TypeParameterElement) t.asElement();,if (t != null ) TypeParameterElement element = (TypeParameterElement) t.asElement();
MoreTypes.java,typeElement = MoreElements.asType(type.asElement());,if (MoreElements != null ) typeElement = MoreElements.asType(type.asElement());
FactoryDescriptor.java,type = param.type();,if (param != null ) type = param.type();
FactoryWriter.java,nullableArgument = parameter.nullable().isPresent();,if (parameter != null ) nullableArgument = parameter.nullable().isPresent();
Parameter.java,DeclaredType annotationType = annotationMirror.getAnnotationType();,if (annotationMirror != null ) DeclaredType annotationType = annotationMirror.getAnnotationType();
FactoryWriter.java,argument = codeBlock(parameter.name());,if (codeBlock(parameter != null ) argument = codeBlock(parameter.name());
FactoryWriter.java,argument = codeBlock(provider.name());,if (codeBlock(provider != null ) argument = codeBlock(provider.name());
FactoryWriter.java,Key key = entry.getKey();,if (entry != null ) Key key = entry.getKey();
FactoryWriter.java,String providerName = entry.getValue();,if (entry != null ) String providerName = entry.getValue();
FactoryWriter.java,Optional<AnnotationMirror> qualifier = key.getQualifier();,if (key != null ) Optional<AnnotationMirror> qualifier = key.getQualifier();
FactoryDescriptor.java,Parameter parameter = Iterables.getOnlyElement(entry.getValue());,if (Iterables != null ) Parameter parameter = Iterables.getOnlyElement(entry.getValue());
FactoryDescriptor.java,Optional<AnnotationMirror> nullable = Optional.absent();,if (Optional != null ) Optional<AnnotationMirror> nullable = Optional.absent();
FactoryDescriptor.java,type = param.type();,if (param != null ) type = param.type();
FactoryDescriptor.java,nullable = nullable.or(param.nullable());,if (nullable != null ) nullable = nullable.or(param.nullable());
FactoryWriter.java,CodeBlock.Builder args = CodeBlock.builder();,if (CodeBlock != null ) CodeBlock.Builder args = CodeBlock.builder();
FactoryWriter.java,Iterator<Parameter> parameters = methodDescriptor.creationParameters().iterator();,if (methodDescriptor != null ) Iterator<Parameter> parameters = methodDescriptor.creationParameters().iterator();
FactoryWriter.java,Parameter parameter = parameters.next();,if (parameters != null ) Parameter parameter = parameters.next();
FactoryWriter.java,argument = codeBlock(parameter.name());,if (codeBlock(parameter != null ) argument = codeBlock(parameter.name());
FactoryWriter.java,argument = codeBlock(provider.name());,if (codeBlock(provider != null ) argument = codeBlock(provider.name());
FactoryWriter.java,nullableArgument = parameter.nullable().isPresent();,if (parameter != null ) nullableArgument = parameter.nullable().isPresent();
Key.java,String typeQualifiedName = MoreTypes.asTypeElement(type()).toString();,if (MoreTypes != null ) String typeQualifiedName = MoreTypes.asTypeElement(type()).toString();
Parameter.java,Optional<AnnotationMirror> nullable = Optional.absent();,if (Optional != null ) Optional<AnnotationMirror> nullable = Optional.absent();
FactoryWriter.java,Key key = entry.getKey();,if (entry != null ) Key key = entry.getKey();
FactoryWriter.java,String providerName = entry.getValue();,if (entry != null ) String providerName = entry.getValue();
FactoryWriter.java,Optional<AnnotationMirror> qualifier = key.getQualifier();,if (key != null ) Optional<AnnotationMirror> qualifier = key.getQualifier();
BuilderMethodClassifier.java,TypeMirror returnType = method.getReturnType();,if (method != null ) TypeMirror returnType = method.getReturnType();
BuilderMethodClassifier.java,TypeMirror builderGetterType = builderGetter.getReturnType();,if (builderGetter != null ) TypeMirror builderGetterType = builderGetter.getReturnType();
BuilderMethodClassifier.java,TypeMirror builderTypeMirror = method.getReturnType();,if (method != null ) TypeMirror builderTypeMirror = method.getReturnType();
AutoValueTemplateVars.java,ImmutableSet<String> propertiesWithBuilderGetters = ImmutableSet.of();,if (ImmutableSet != null ) ImmutableSet<String> propertiesWithBuilderGetters = ImmutableSet.of();
BuilderSpec.java,vars.propertiesWithBuilderGetters = classifier.propertiesWithBuilderGetters();,if (classifier != null ) vars.propertiesWithBuilderGetters = classifier.propertiesWithBuilderGetters();
AutoValueProcessor.java,"String subclass = generatedSubclassName(type, appliedExtensions.size());","if (appliedExtensions != null ) String subclass = generatedSubclassName(type, appliedExtensions.size());"
AutoValueProcessor.java,vars.isFinal = appliedExtensions.isEmpty();,if (appliedExtensions != null ) vars.isFinal = appliedExtensions.isEmpty();
AutoValueProcessor.java,Types typeUtils = processingEnv.getTypeUtils();,if (processingEnv != null ) Types typeUtils = processingEnv.getTypeUtils();
AutoValueProcessor.java,toBuilderMethods = ImmutableSet.of();,if (ImmutableSet != null ) toBuilderMethods = ImmutableSet.of();
AutoValueProcessor.java,Set<Name> toImplementNames = Sets.newHashSet();,if (Sets != null ) Set<Name> toImplementNames = Sets.newHashSet();
AutoValueProcessor.java,Types typeUtils = processingEnv.getTypeUtils();,if (processingEnv != null ) Types typeUtils = processingEnv.getTypeUtils();
AutoValueProcessor.java,Types typeUtils = processingEnv.getTypeUtils();,if (processingEnv != null ) Types typeUtils = processingEnv.getTypeUtils();
AutoValueProcessor.java,Types typeUtils = processingEnv.getTypeUtils();,if (processingEnv != null ) Types typeUtils = processingEnv.getTypeUtils();
FactoryDescriptor.java,Parameter parameter = Iterables.getOnlyElement(entry.getValue());,if (Iterables != null ) Parameter parameter = Iterables.getOnlyElement(entry.getValue());
FactoryDescriptor.java,Optional<AnnotationMirror> nullable = Optional.absent();,if (Optional != null ) Optional<AnnotationMirror> nullable = Optional.absent();
FactoryDescriptor.java,type = param.type();,if (param != null ) type = param.type();
FactoryDescriptor.java,nullable = nullable.or(param.nullable());,if (nullable != null ) nullable = nullable.or(param.nullable());
FactoryWriter.java,CodeBlock.Builder args = CodeBlock.builder();,if (CodeBlock != null ) CodeBlock.Builder args = CodeBlock.builder();
FactoryWriter.java,Iterator<Parameter> parameters = methodDescriptor.creationParameters().iterator();,if (methodDescriptor != null ) Iterator<Parameter> parameters = methodDescriptor.creationParameters().iterator();
FactoryWriter.java,Parameter parameter = parameters.next();,if (parameters != null ) Parameter parameter = parameters.next();
FactoryWriter.java,argument = codeBlock(parameter.name());,if (codeBlock(parameter != null ) argument = codeBlock(parameter.name());
FactoryWriter.java,argument = codeBlock(provider.name());,if (codeBlock(provider != null ) argument = codeBlock(provider.name());
FactoryWriter.java,nullableArgument = parameter.nullable().isPresent();,if (parameter != null ) nullableArgument = parameter.nullable().isPresent();
Key.java,String typeQualifiedName = MoreTypes.asTypeElement(type()).toString();,if (MoreTypes != null ) String typeQualifiedName = MoreTypes.asTypeElement(type()).toString();
Parameter.java,Optional<AnnotationMirror> nullable = Optional.absent();,if (Optional != null ) Optional<AnnotationMirror> nullable = Optional.absent();
FactoryWriter.java,Key key = entry.getKey();,if (entry != null ) Key key = entry.getKey();
FactoryWriter.java,String providerName = entry.getValue();,if (entry != null ) String providerName = entry.getValue();
FactoryWriter.java,Optional<AnnotationMirror> qualifier = key.getQualifier();,if (key != null ) Optional<AnnotationMirror> qualifier = key.getQualifier();
AutoFactoryDeclaration.java,CharSequence packageName = getPackage(targetType).getQualifiedName();,if (getPackage(targetType) != null ) CharSequence packageName = getPackage(targetType).getQualifiedName();
FactoryDescriptor.java,this.providerNames = providersBuilder.build();,if (providersBuilder != null ) this.providerNames = providersBuilder.build();
FactoryDescriptorGenerator.java,Element classElement = constructor.getEnclosingElement();,if (constructor != null ) Element classElement = constructor.getEnclosingElement();
FactoryMethodDescriptor.java,this.name = builder.name.get();,if (builder != null ) this.name = builder.name.get();
FactoryMethodDescriptor.java,this.returnType = builder.returnType.get();,if (builder != null ) this.returnType = builder.returnType.get();
FactoryWriter.java,JavaFileObject sourceFile = filer.createSourceFile(descriptor.name());,if (filer != null ) JavaFileObject sourceFile = filer.createSourceFile(descriptor.name());
FactoryWriter.java,JavaWriter writer = new JavaWriter(sourceFile.openWriter());,if (JavaWriter(sourceFile != null ) JavaWriter writer = new JavaWriter(sourceFile.openWriter());
FactoryWriter.java,String packageName = getPackage(descriptor.name()).toString();,if (getPackage(descriptor != null ) String packageName = getPackage(descriptor.name()).toString();
FactoryWriter.java,String implementingPackageName = getPackage(implementingType).toString();,if (getPackage(implementingType) != null ) String implementingPackageName = getPackage(implementingType).toString();
ImplementationMethodDescriptor.java,this.name = builder.name.get();,if (builder != null ) this.name = builder.name.get();
ImplementationMethodDescriptor.java,this.returnType = builder.returnType.get();,if (builder != null ) this.returnType = builder.returnType.get();
AutoFactoryDeclaration.java,CharSequence packageName = getPackage(targetType()).getQualifiedName();,if (getPackage(targetType()) != null ) CharSequence packageName = getPackage(targetType()).getQualifiedName();
FactoryDescriptorGenerator.java,TypeElement classElement = MoreElements.asType(constructor.getEnclosingElement());,if (MoreElements != null ) TypeElement classElement = MoreElements.asType(constructor.getEnclosingElement());
FactoryWriter.java,String factoryName = getSimpleName(descriptor.name()).toString();,if (getSimpleName(descriptor != null ) String factoryName = getSimpleName(descriptor.name()).toString();
AutoFactoryDeclaration.java,CharSequence packageName = getPackage(targetType).getQualifiedName();,if (getPackage(targetType) != null ) CharSequence packageName = getPackage(targetType).getQualifiedName();
FactoryDescriptor.java,this.providerNames = providersBuilder.build();,if (providersBuilder != null ) this.providerNames = providersBuilder.build();
FactoryDescriptorGenerator.java,Element classElement = constructor.getEnclosingElement();,if (constructor != null ) Element classElement = constructor.getEnclosingElement();
FactoryMethodDescriptor.java,this.name = builder.name.get();,if (builder != null ) this.name = builder.name.get();
FactoryMethodDescriptor.java,this.returnType = builder.returnType.get();,if (builder != null ) this.returnType = builder.returnType.get();
FactoryWriter.java,JavaFileObject sourceFile = filer.createSourceFile(descriptor.name());,if (filer != null ) JavaFileObject sourceFile = filer.createSourceFile(descriptor.name());
FactoryWriter.java,JavaWriter writer = new JavaWriter(sourceFile.openWriter());,if (JavaWriter(sourceFile != null ) JavaWriter writer = new JavaWriter(sourceFile.openWriter());
FactoryWriter.java,String packageName = getPackage(descriptor.name()).toString();,if (getPackage(descriptor != null ) String packageName = getPackage(descriptor.name()).toString();
FactoryWriter.java,String implementingPackageName = getPackage(implementingType).toString();,if (getPackage(implementingType) != null ) String implementingPackageName = getPackage(implementingType).toString();
ImplementationMethodDescriptor.java,this.name = builder.name.get();,if (builder != null ) this.name = builder.name.get();
ImplementationMethodDescriptor.java,this.returnType = builder.returnType.get();,if (builder != null ) this.returnType = builder.returnType.get();
AutoValueProcessor.java,DeclaredType autoValueTypeMirror = MoreTypes.asDeclared(type.asType());,if (MoreTypes != null ) DeclaredType autoValueTypeMirror = MoreTypes.asDeclared(type.asType());
AutoValueProcessor.java,String propertyType = typeSimplifier.simplify(method.getReturnType());,if (typeSimplifier != null ) String propertyType = typeSimplifier.simplify(method.getReturnType());
AutoValueProcessor.java,String methodName = method.getSimpleName().toString();,if (method != null ) String methodName = method.getSimpleName().toString();
AutoValueProcessor.java,Set<String> seen = Sets.newHashSet();,if (Sets != null ) Set<String> seen = Sets.newHashSet();
AutoValueProcessor.java,String methodName = method.getSimpleName().toString();,if (method != null ) String methodName = method.getSimpleName().toString();
AutoValueProcessor.java,"String subclass = generatedSubclassName(type, appliedExtensions.size());","if (appliedExtensions != null ) String subclass = generatedSubclassName(type, appliedExtensions.size());"
AutoValueProcessor.java,vars.isFinal = appliedExtensions.isEmpty();,if (appliedExtensions != null ) vars.isFinal = appliedExtensions.isEmpty();
AutoValueProcessor.java,String methodName = method.getSimpleName().toString();,if (method != null ) String methodName = method.getSimpleName().toString();
AutoValueProcessor.java,"ImmutableSet<ExecutableElement> methods = getLocalAndInheritedMethods(type, processingEnv.getElementUtils());","if (processingEnv != null ) ImmutableSet<ExecutableElement> methods = getLocalAndInheritedMethods(type, processingEnv.getElementUtils());"
CompilationErrorsTest.java,Collection<String> actualDiagnostics = diagnostics.get(expectedDiagnostic.getKey());,if (diagnostics != null ) Collection<String> actualDiagnostics = diagnostics.get(expectedDiagnostic.getKey());
CompilationTest.java,ExecutableElement maybeOverridden = it.next();,if (it != null ) ExecutableElement maybeOverridden = it.next();
AutoValueProcessor.java,Set<ExecutableElement> methods = new LinkedHashSet<ExecutableElement>(methodMap.values());,if (LinkedHashSet<ExecutableElement>(methodMap != null ) Set<ExecutableElement> methods = new LinkedHashSet<ExecutableElement>(methodMap.values());
AutoValueProcessor.java,Types typeUtils = processingEnv.getTypeUtils();,if (processingEnv != null ) Types typeUtils = processingEnv.getTypeUtils();
AutoValueProcessor.java,Elements elementUtils = processingEnv.getElementUtils();,if (processingEnv != null ) Elements elementUtils = processingEnv.getElementUtils();
AutoValueProcessor.java,List<ExecutableElement> theseMethods = ElementFilter.methodsIn(type.getEnclosedElements());,if (ElementFilter != null ) List<ExecutableElement> theseMethods = ElementFilter.methodsIn(type.getEnclosedElements());
AutoValueProcessor.java,ExecutableElement otherMethod = methodIter.next();,if (methodIter != null ) ExecutableElement otherMethod = methodIter.next();
BuilderSpec.java,ExecutableElement maybeOverridden = it.next();,if (it != null ) ExecutableElement maybeOverridden = it.next();
BasicAnnotationProcessor.java,Set<String> validPackageNames = Sets.newLinkedHashSet();,if (Sets != null ) Set<String> validPackageNames = Sets.newLinkedHashSet();
BasicAnnotationProcessor.java,Set<String> validTypeNames = Sets.newLinkedHashSet();,if (Sets != null ) Set<String> validTypeNames = Sets.newLinkedHashSet();
BasicAnnotationProcessor.java,String annotatedPackageName = annotatedPackageElement.getQualifiedName().toString();,if (annotatedPackageElement != null ) String annotatedPackageName = annotatedPackageElement.getQualifiedName().toString();
BasicAnnotationProcessor.java,String enclosingTypeName = enclosingType.getQualifiedName().toString();,if (enclosingType != null ) String enclosingTypeName = enclosingType.getQualifiedName().toString();
BasicAnnotationProcessorTest.java,PrintWriter writer = new PrintWriter(source.openWriter());,if (PrintWriter(source != null ) PrintWriter writer = new PrintWriter(source.openWriter());
FactoryMethodDescriptor.java,this.factoryName = builder.factoryName.get();,if (builder != null ) this.factoryName = builder.factoryName.get();
TemplateVars.java,Thread currentThread = Thread.currentThread();,if (Thread != null ) Thread currentThread = Thread.currentThread();
TemplateVars.java,ClassLoader oldContextLoader = currentThread.getContextClassLoader();,if (currentThread != null ) ClassLoader oldContextLoader = currentThread.getContextClassLoader();
NoVelocityLoggingTest.java,FileHandler fileHandler = new FileHandler(log.getPath());,if (FileHandler(log != null ) FileHandler fileHandler = new FileHandler(log.getPath());
NoVelocityLoggingTest.java,LogManager logManager = LogManager.getLogManager();,if (LogManager != null ) LogManager logManager = LogManager.getLogManager();
VelocityClassLoaderTest.java,String velocityClassName = Velocity.class.getName();,if (Velocity != null ) String velocityClassName = Velocity.class.getName();
FactoryWriter.java,Optional<String> qualifier = key.getQualifier();,if (key != null ) Optional<String> qualifier = key.getQualifier();
FactoryWriter.java,Optional<AnnotationMirror> qualifier = key.getQualifier();,if (key != null ) Optional<AnnotationMirror> qualifier = key.getQualifier();
FactoryWriter.java,Optional<String> qualifier = key.getQualifier();,if (key != null ) Optional<String> qualifier = key.getQualifier();
AutoValueProcessor.java,String source = genClass.source();,if (genClass != null ) String source = genClass.source();
AutoValueProcessor.java,String text = Reformatter.fixup(genClass.source());,if (Reformatter != null ) String text = Reformatter.fixup(genClass.source());
AutoValueProcessor.java,String text = Reformatter.fixup(genClass.source());,if (Reformatter != null ) String text = Reformatter.fixup(genClass.source());
BuilderMethodClassifier.java,TypeMirror expectedType = valueGetter.getReturnType();,if (valueGetter != null ) TypeMirror expectedType = valueGetter.getReturnType();
BuilderSpec.java,vars.builderSetterNames = setterNameBuilder.build();,if (setterNameBuilder != null ) vars.builderSetterNames = setterNameBuilder.build();
AutoValueProcessor.java,Messager messager = processingEnv.getMessager();,if (processingEnv != null ) Messager messager = processingEnv.getMessager();
AutoValueTemplateVars.java,Set<String> propertiesWithBuilderGetters = Collections.emptySet();,if (Collections != null ) Set<String> propertiesWithBuilderGetters = Collections.emptySet();
BuilderSpec.java,this.elementUtils = processingEnv.getElementUtils();,if (processingEnv != null ) this.elementUtils = processingEnv.getElementUtils();
AutoValueTemplateVars.java,Set<String> validators = Collections.emptySet();,if (Collections != null ) Set<String> validators = Collections.emptySet();
BuilderSpec.java,Optional<ExecutableElement> validateMethod = Optional.absent();,if (Optional != null ) Optional<ExecutableElement> validateMethod = Optional.absent();
BuilderSpec.java,vars.validators = ImmutableSet.of();,if (ImmutableSet != null ) vars.validators = ImmutableSet.of();
BuilderSpec.java,String name = setter.getSimpleName().toString();,if (setter != null ) String name = setter.getSimpleName().toString();
BuilderSpec.java,VariableElement parameter = Iterables.getOnlyElement(setter.getParameters());,if (Iterables != null ) VariableElement parameter = Iterables.getOnlyElement(setter.getParameters());
BuilderSpec.java,boolean prefixing = !prefixMap.isEmpty();,if (!prefixMap != null ) boolean prefixing = !prefixMap.isEmpty();
BuilderSpec.java,int nParameters = method.getParameters().size();,if (method != null ) int nParameters = method.getParameters().size();
BuilderSpec.java,this.typeUtils = processingEnv.getTypeUtils();,if (processingEnv != null ) this.typeUtils = processingEnv.getTypeUtils();
AutoValueProcessor.java,String methodName = method.getSimpleName().toString();,if (method != null ) String methodName = method.getSimpleName().toString();
AutoValueProcessor.java,String name = type.getQualifiedName().toString();,if (type != null ) String name = type.getQualifiedName().toString();
AnnotationDefaults.java,AnnotationValue defaultValue = memberMethod.getDefaultValue();,if (memberMethod != null ) AnnotationValue defaultValue = memberMethod.getDefaultValue();
AnnotationDefaults.java,TypeMirror type = memberMethod.getReturnType();,if (memberMethod != null ) TypeMirror type = memberMethod.getReturnType();
AutoValueProcessor.java,String annotationName = typeSimplifier.simplify(annotationMirror.getAnnotationType());,if (typeSimplifier != null ) String annotationName = typeSimplifier.simplify(annotationMirror.getAnnotationType());
AutoValueProcessor.java,List<String> values = Lists.newArrayList();,if (Lists != null ) List<String> values = Lists.newArrayList();
AutoValueProcessor.java,String propType = typeSimplifier.simplify(method.getReturnType());,if (typeSimplifier != null ) String propType = typeSimplifier.simplify(method.getReturnType());
EclipseHack.java,allFound &= order.contains(property.toString());,if (order != null ) allFound &= order.contains(property.toString());
AutoValueProcessor.java,String fullName = typeSimplifier.simplify(annotationMirror.getAnnotationType());,if (typeSimplifier != null ) String fullName = typeSimplifier.simplify(annotationMirror.getAnnotationType());
AutoValueProcessor.java,String value = entry.getValue().toString();,if (entry != null ) String value = entry.getValue().toString();
AutoValueProcessor.java,Element element = annotationMirror.getAnnotationType().asElement();,if (annotationMirror != null ) Element element = annotationMirror.getAnnotationType().asElement();
AutoValueProcessor.java,Types typeUtils = processingEnv.getTypeUtils();,if (processingEnv != null ) Types typeUtils = processingEnv.getTypeUtils();
AutoServiceProcessor.java,DeclaredType type = mirror.getAnnotationType();,if (mirror != null ) DeclaredType type = mirror.getAnnotationType();
AutoServiceProcessor.java,TypeElement typeElement = (TypeElement) type.asElement();,if (type != null ) TypeElement typeElement = (TypeElement) type.asElement();
AbstractMethodExtractor.java,className = tokenizer.nextToken();,if (tokenizer != null ) className = tokenizer.nextToken();
AbstractMethodExtractor.java,String container = classStack.getLast();,if (classStack != null ) String container = classStack.getLast();
AbstractMethodExtractor.java,List<String> methods = abstractMethods.get(classStack.getLast());,if (abstractMethods != null ) List<String> methods = abstractMethods.get(classStack.getLast());
AutoValueProcessor.java,s += sep + typeParameter.getSimpleName();,if (typeParameter != null ) s += sep + typeParameter.getSimpleName();
TypeSimplifierTest.java,boolean compiledOk = javacTask.call();,if (javacTask != null ) boolean compiledOk = javacTask.call();
TypeSimplifierTest.java,elementUtil = processingEnv.getElementUtils();,if (processingEnv != null ) elementUtil = processingEnv.getElementUtils();
MoreTypes.java,result += hashList(t.getTypeArguments());,if (hashList(t != null ) result += hashList(t.getTypeArguments());
MoreTypes.java,result += hashList(t.getParameterTypes());,if (hashList(t != null ) result += hashList(t.getParameterTypes());
MoreTypes.java,result += hashList(t.getThrownTypes());,if (hashList(t != null ) result += hashList(t.getThrownTypes());
MoreTypes.java,result += hashList(t.getTypeVariables());,if (hashList(t != null ) result += hashList(t.getTypeVariables());
TypeSimplifierTest.java,Set<TypeMirror> types = ImmutableSet.of();,if (ImmutableSet != null ) Set<TypeMirror> types = ImmutableSet.of();
AutoValueProcessor.java,StringBuilder sb = new StringBuilder(s.length());,if (StringBuilder(s != null ) StringBuilder sb = new StringBuilder(s.length());
AutoValueProcessor.java,StringBuilder sb = new StringBuilder(s.length());,if (StringBuilder(s != null ) StringBuilder sb = new StringBuilder(s.length());
AutoValueProcessor.java,StringBuilder sb = new StringBuilder(s.length());,if (StringBuilder(s != null ) StringBuilder sb = new StringBuilder(s.length());
EclipseHack.java,TypeElement owner = properties.get(index).owner();,if (properties != null ) TypeElement owner = properties.get(index).owner();
Template.java,"int afterOpen = dollar + ""$["".length();","if (""$["" != null ) int afterOpen = dollar + ""$["".length();"
TypeSimplifierTest.java,"TypeSimplifier typeSimplifier = new TypeSimplifier(typeUtil, """", typesBuilder.build());","if (typesBuilder != null ) TypeSimplifier typeSimplifier = new TypeSimplifier(typeUtil, """", typesBuilder.build());"
AutoValueProcessor.java,String s = type.getSimpleName().toString();,if (type != null ) String s = type.getSimpleName().toString();
EclipseHack.java,Filer filer = processingEnv.getFiler();,if (processingEnv != null ) Filer filer = processingEnv.getFiler();
EclipseHack.java,topLevel = topLevel.getEnclosingElement();,if (topLevel != null ) topLevel = topLevel.getEnclosingElement();
EclipseHack.java,File file = new File(resource.toUri());,if (File(resource != null ) File file = new File(resource.toUri());
EclipseHack.java,this.file = new File(resource.toUri());,if (File(resource != null ) this.file = new File(resource.toUri());
AutoValueProcessor.java,Elements elementUtils = processingEnv.getElementUtils();,if (processingEnv != null ) Elements elementUtils = processingEnv.getElementUtils();
TypeSimplifier.java,String erasure = typeUtil.erasure(type).toString();,if (typeUtil != null ) String erasure = typeUtil.erasure(type).toString();
TypeSimplifier.java,spelling = type.toString();,if (type != null ) spelling = type.toString();
AutoValueProcessor.java,Element enclosing = type.getEnclosingElement();,if (type != null ) Element enclosing = type.getEnclosingElement();
AutoValueProcessor.java,String name = method.getSimpleName().toString();,if (method != null ) String name = method.getSimpleName().toString();
AutoValues.java,String classToConstructName = classToConstruct.getName();,if (classToConstruct != null ) String classToConstructName = classToConstruct.getName();
AutoValues.java,factory = implementationClass.newInstance();,if (implementationClass != null ) factory = implementationClass.newInstance();
AutoValueProcessor.java,List<TypeElement> classes = ElementFilter.typesIn(type.getEnclosedElements());,if (ElementFilter != null ) List<TypeElement> classes = ElementFilter.typesIn(type.getEnclosedElements());
AutoValueProcessor.java,ExecutableElement parentMethod = methodIter.next();,if (methodIter != null ) ExecutableElement parentMethod = methodIter.next();
FactoryDescriptorGenerator.java,final AutoFactoryDeclaration declaration = declarationFactory.createIfValid(element).get();,if (declarationFactory != null ) final AutoFactoryDeclaration declaration = declarationFactory.createIfValid(element).get();
ImplemetationMethodDescriptor.java,this.factoryName = builder.factoryName.get();,if (builder != null ) this.factoryName = builder.factoryName.get();
AutoFactoryChecker.java,String className = classNameValue.getValue().toString();,if (classNameValue != null ) String className = classNameValue.getValue().toString();
FactoryDescriptorGenerator.java,String returnType = e.getReturnType().toString();,if (e != null ) String returnType = e.getReturnType().toString();
FactoryDescriptorGenerator.java,providedParameters = ImmutableSet.of();,if (ImmutableSet != null ) providedParameters = ImmutableSet.of();
AutoFactoryDeclaration.java,String named = namedValue.getValue().toString();,if (namedValue != null ) String named = namedValue.getValue().toString();
AutoFactoryProcessor.java,Messager messager = processingEnv.getMessager();,if (processingEnv != null ) Messager messager = processingEnv.getMessager();
AutoFactoryProcessor.java,Elements elements = processingEnv.getElementUtils();,if (processingEnv != null ) Elements elements = processingEnv.getElementUtils();
AutoFactoryProcessor.java,FactoryWriter factoryWriter = new FactoryWriter(processingEnv.getFiler());,if (FactoryWriter(processingEnv != null ) FactoryWriter factoryWriter = new FactoryWriter(processingEnv.getFiler());
Compilation.java,JavacTool compiler = (JavacTool) ToolProvider.getSystemJavaCompiler();,if (ToolProvider != null ) JavacTool compiler = (JavacTool) ToolProvider.getSystemJavaCompiler();
Compilation.java,Elements elements = task.getElements();,if (task != null ) Elements elements = task.getElements();
Compilation.java,Types types = task.getTypes();,if (task != null ) Types types = task.getTypes();
Compilation.java,JavacTool compiler = (JavacTool) ToolProvider.getSystemJavaCompiler();,if (ToolProvider != null ) JavacTool compiler = (JavacTool) ToolProvider.getSystemJavaCompiler();
EqualityScanner.java,Kind referenceKind = checkNotNull(reference).getKind();,if (checkNotNull(reference) != null ) Kind referenceKind = checkNotNull(reference).getKind();
EqualityScanner.java,Kind treeKind = checkNotNull(tree).getKind();,if (checkNotNull(tree) != null ) Kind treeKind = checkNotNull(tree).getKind();
InMemoryJavaFileManager.java,lastModified = System.currentTimeMillis();,if (System != null ) lastModified = System.currentTimeMillis();
InMemoryJavaFileManager.java,lastModified = System.currentTimeMillis();,if (System != null ) lastModified = System.currentTimeMillis();
InMemoryJavaFileManager.java,this.data = Optional.absent();,if (Optional != null ) this.data = Optional.absent();
JavaFileObjects.java,this.lastModified = System.currentTimeMillis();,if (System != null ) this.lastModified = System.currentTimeMillis();
JavaFileObjects.java,String path = uri.getPath();,if (uri != null ) String path = uri.getPath();
JavaSourcesSubject.java,return lineNumber == input.getLineNumber();,if (input != null ) return lineNumber == input.getLineNumber();
JavaSourcesSubject.java,return columnNumber == input.getColumnNumber();,if (input != null ) return columnNumber == input.getColumnNumber();
JavaSourcesSubjectFactoryTest.java,Writer writer = sourceFile.openWriter();,if (sourceFile != null ) Writer writer = sourceFile.openWriter();
JavaSourcesSubject.java,Iterator<JavaFileObject> expectedIterator = expectedList.iterator();,if (expectedList != null ) Iterator<JavaFileObject> expectedIterator = expectedList.iterator();
JavaSourcesSubject.java,JavacTool compiler = (JavacTool) ToolProvider.getSystemJavaCompiler();,if (ToolProvider != null ) JavacTool compiler = (JavacTool) ToolProvider.getSystemJavaCompiler();
JavaSourcesSubject.java,JavacTool compiler = (JavacTool) ToolProvider.getSystemJavaCompiler();,if (ToolProvider != null ) JavacTool compiler = (JavacTool) ToolProvider.getSystemJavaCompiler();
AutoServiceProcessor.java,Set<String> oldServices = ServicesFile.readServiceFile(existingFile.openInputStream());,if (ServicesFile != null ) Set<String> oldServices = ServicesFile.readServiceFile(existingFile.openInputStream());
InMemoryJavaFileManager.java,String path = uri.getPath();,if (uri != null ) String path = uri.getPath();
AutoFactoryProcessorTest.java,this.compiler = ToolProvider.getSystemJavaCompiler();,if (ToolProvider != null ) this.compiler = ToolProvider.getSystemJavaCompiler();
AutoFactoryProcessorTest.java,this.inputSources = folder.newFolder();,if (folder != null ) this.inputSources = folder.newFolder();
AutoFactoryProcessorTest.java,this.expectedSources = folder.newFolder();,if (folder != null ) this.expectedSources = folder.newFolder();
AutoFactoryProcessorTest.java,this.outputSources = folder.newFolder();,if (folder != null ) this.outputSources = folder.newFolder();
JavaSourceSubject.java,this.compiler = (JavacTool) ToolProvider.getSystemJavaCompiler();,if (ToolProvider != null ) this.compiler = (JavacTool) ToolProvider.getSystemJavaCompiler();
InterfaceLinkAdapterGenerator.java,String typeName = type.getQualifiedName().toString();,if (type != null ) String typeName = type.getQualifiedName().toString();
FactoryWriter.java,String implementingPackageName = Names.getPackage(implementingType).toString();,if (Names != null ) String implementingPackageName = Names.getPackage(implementingType).toString();
BuildLogValidator.java,FileChannel fc = stream.getChannel();,if (stream != null ) FileChannel fc = stream.getChannel();
CodeGen.java,type = type.getEnclosingElement();,if (type != null ) type = type.getEnclosingElement();
CodeGen.java,TypeElement typeElement = (TypeElement) declaredType.asElement();,if (declaredType != null ) TypeElement typeElement = (TypeElement) declaredType.asElement();
CodeGen.java,return expectedClass == value.getClass();,if (value != null ) return expectedClass == value.getClass();
CodeGen.java,String qualifiedName = type.getQualifiedName().toString();,if (type != null ) String qualifiedName = type.getQualifiedName().toString();
CodeGen.java,TypeElement type = (TypeElement) constructor.getEnclosingElement();,if (constructor != null ) TypeElement type = (TypeElement) constructor.getEnclosingElement();
ProcessorUtils.java,Element typeElement = element.getEnclosingElement();,if (element != null ) Element typeElement = element.getEnclosingElement();
ProcessorUtils.java,type = typeElement.getEnclosingElement().asType();,if (typeElement != null ) type = typeElement.getEnclosingElement().asType();
ProcessorUtils.java,type = typeElement.asType();,if (typeElement != null ) type = typeElement.asType();
FactoryProcessor.java,Name typeName = type.getQualifiedName();,if (type != null ) Name typeName = type.getQualifiedName();
FactoryProcessor.java,type = element.asType();,if (element != null ) type = element.asType();
FactoryProcessor.java,Name typeName = type.getQualifiedName();,if (type != null ) Name typeName = type.getQualifiedName();
FactoryProcessor.java,type = element.asType();,if (element != null ) type = element.asType();
ParameterizedBehaviorTestRunner.java,Description originalDescription = superDescription.get();,if (superDescription != null ) Description originalDescription = superDescription.get();
ParameterizedBehaviorTestRunner.java,Object test = superCreateTest.get();,if (superCreateTest != null ) Object test = superCreateTest.get();
BiMapPropertyTest.java,List<NamingConvention> conventions = Arrays.asList(NamingConvention.values());,if (Arrays != null ) List<NamingConvention> conventions = Arrays.asList(NamingConvention.values());
GeneratedBuilder.java,FieldAccessList fields = getFields(generatorsByProperty.keySet());,if (getFields(generatorsByProperty != null ) FieldAccessList fields = getFields(generatorsByProperty.keySet());
GeneratedBuilder.java,FieldAccessList fields = getFields(generatorsByProperty.keySet());,if (getFields(generatorsByProperty != null ) FieldAccessList fields = getFields(generatorsByProperty.keySet());
CompilationFailureSubjectImpl.java,this.nextCandidate = diagnostics.iterator();,if (diagnostics != null ) this.nextCandidate = diagnostics.iterator();
CompilationFailureSubjectImpl.java,this.candidate = nextCandidate.next();,if (nextCandidate != null ) this.candidate = nextCandidate.next();
CompilationFailureSubjectImpl.java,candidate = nextCandidate.next();,if (nextCandidate != null ) candidate = nextCandidate.next();
CompilationFailureSubjectImpl.java,candidate = nextCandidate.next();,if (nextCandidate != null ) candidate = nextCandidate.next();
CompilationFailureSubjectImpl.java,candidate = nextCandidate.next();,if (nextCandidate != null ) candidate = nextCandidate.next();
Util.java,type = wildcard.getExtendsBound();,if (wildcard != null ) type = wildcard.getExtendsBound();
Util.java,String erasedType = type.asElement().toString();,if (type != null ) String erasedType = type.asElement().toString();
Util.java,String erasedType = type.asElement().toString();,if (type != null ) String erasedType = type.asElement().toString();
ModelUtilsTest.java,TypeMirror typeArgument = method.getReturnType();,if (method != null ) TypeMirror typeArgument = method.getReturnType();
FunctionalType.java,TypeMirror parameter = getOnlyElement(methodType.getParameterTypes());,if (getOnlyElement(methodType != null ) TypeMirror parameter = getOnlyElement(methodType.getParameterTypes());
JavacMethodIntrospector.java,ExpressionTree lhs = node.getExpression();,if (node != null ) ExpressionTree lhs = node.getExpression();
PrimitiveOptionalProperty.java,this.elementType = property.getType();,if (property != null ) this.elementType = property.getType();
PrimitiveOptionalProperty.java,String type = elementType.toString();,if (elementType != null ) String type = elementType.toString();
ToStringGeneratorTest.java,SourceBuilder code = SourceStringBuilder.simple();,if (SourceStringBuilder != null ) SourceBuilder code = SourceStringBuilder.simple();
ToStringGeneratorTest.java,SourceBuilder code = SourceStringBuilder.simple();,if (SourceStringBuilder != null ) SourceBuilder code = SourceStringBuilder.simple();
LazyNameTest.java,SourceBuilder code = SourceStringBuilder.simple();,if (SourceStringBuilder != null ) SourceBuilder code = SourceStringBuilder.simple();
LazyNameTest.java,SourceBuilder code = SourceStringBuilder.simple();,if (SourceStringBuilder != null ) SourceBuilder code = SourceStringBuilder.simple();
LazyNameTest.java,SourceBuilder code = SourceStringBuilder.simple();,if (SourceStringBuilder != null ) SourceBuilder code = SourceStringBuilder.simple();
BuildablePropertyTest.java,CompilationUnitBuilder customMutatorType = CompilationUnitBuilder.forTesting();,if (CompilationUnitBuilder != null ) CompilationUnitBuilder customMutatorType = CompilationUnitBuilder.forTesting();
DefaultedMapperMethodTest.java,CompilationUnitBuilder customMapperType = CompilationUnitBuilder.forTesting();,if (CompilationUnitBuilder != null ) CompilationUnitBuilder customMapperType = CompilationUnitBuilder.forTesting();
DefaultedMapperMethodTest.java,CompilationUnitBuilder customMapperType = CompilationUnitBuilder.forTesting();,if (CompilationUnitBuilder != null ) CompilationUnitBuilder customMapperType = CompilationUnitBuilder.forTesting();
DefaultedMapperMethodTest.java,CompilationUnitBuilder customMapperType = CompilationUnitBuilder.forTesting();,if (CompilationUnitBuilder != null ) CompilationUnitBuilder customMapperType = CompilationUnitBuilder.forTesting();
ListMultimapMutateMethodTest.java,CompilationUnitBuilder customMutatorType = CompilationUnitBuilder.forTesting();,if (CompilationUnitBuilder != null ) CompilationUnitBuilder customMutatorType = CompilationUnitBuilder.forTesting();
ListMutateMethodTest.java,CompilationUnitBuilder customMutatorType = CompilationUnitBuilder.forTesting();,if (CompilationUnitBuilder != null ) CompilationUnitBuilder customMutatorType = CompilationUnitBuilder.forTesting();
ListMutateMethodTest.java,CompilationUnitBuilder customMutatorType = CompilationUnitBuilder.forTesting();,if (CompilationUnitBuilder != null ) CompilationUnitBuilder customMutatorType = CompilationUnitBuilder.forTesting();
MapMutateMethodTest.java,CompilationUnitBuilder customMutatorType = CompilationUnitBuilder.forTesting();,if (CompilationUnitBuilder != null ) CompilationUnitBuilder customMutatorType = CompilationUnitBuilder.forTesting();
MultisetMutateMethodTest.java,CompilationUnitBuilder customMutatorType = CompilationUnitBuilder.forTesting();,if (CompilationUnitBuilder != null ) CompilationUnitBuilder customMutatorType = CompilationUnitBuilder.forTesting();
OptionalMapperMethodTest.java,CompilationUnitBuilder customMutatorType = CompilationUnitBuilder.forTesting();,if (CompilationUnitBuilder != null ) CompilationUnitBuilder customMutatorType = CompilationUnitBuilder.forTesting();
OptionalMapperMethodTest.java,CompilationUnitBuilder customMutatorType = CompilationUnitBuilder.forTesting();,if (CompilationUnitBuilder != null ) CompilationUnitBuilder customMutatorType = CompilationUnitBuilder.forTesting();
RequiredMapperMethodTest.java,CompilationUnitBuilder customMapperType = CompilationUnitBuilder.forTesting();,if (CompilationUnitBuilder != null ) CompilationUnitBuilder customMapperType = CompilationUnitBuilder.forTesting();
RequiredMapperMethodTest.java,CompilationUnitBuilder customMapperType = CompilationUnitBuilder.forTesting();,if (CompilationUnitBuilder != null ) CompilationUnitBuilder customMapperType = CompilationUnitBuilder.forTesting();
RequiredMapperMethodTest.java,CompilationUnitBuilder customMapperType = CompilationUnitBuilder.forTesting();,if (CompilationUnitBuilder != null ) CompilationUnitBuilder customMapperType = CompilationUnitBuilder.forTesting();
SetMultimapMutateMethodTest.java,CompilationUnitBuilder customMutatorType = CompilationUnitBuilder.forTesting();,if (CompilationUnitBuilder != null ) CompilationUnitBuilder customMutatorType = CompilationUnitBuilder.forTesting();
SetMutateMethodTest.java,CompilationUnitBuilder customMutatorType = CompilationUnitBuilder.forTesting();,if (CompilationUnitBuilder != null ) CompilationUnitBuilder customMutatorType = CompilationUnitBuilder.forTesting();
BuildablePropertyTest.java,String defaultsTypeCode = defaultsType.getCharContent(true).toString();,if (defaultsType != null ) String defaultsTypeCode = defaultsType.getCharContent(true).toString();
DefaultedMapperMethodTest.java,this.dataType = dataType.build();,if (dataType != null ) this.dataType = dataType.build();
ListMultimapMutateMethodTest.java,this.dataType = dataType.build();,if (dataType != null ) this.dataType = dataType.build();
ListMutateMethodTest.java,String defaultsTypeCode = listPropertyType.getCharContent(true).toString();,if (listPropertyType != null ) String defaultsTypeCode = listPropertyType.getCharContent(true).toString();
ListMutateMethodTest.java,String defaultsTypeCode = genericType.getCharContent(true).toString();,if (genericType != null ) String defaultsTypeCode = genericType.getCharContent(true).toString();
MultisetMutateMethodTest.java,this.dataType = dataType.build();,if (dataType != null ) this.dataType = dataType.build();
OptionalMapperMethodTest.java,this.dataType = dataType.build();,if (dataType != null ) this.dataType = dataType.build();
RequiredMapperMethodTest.java,this.dataType = dataType.build();,if (dataType != null ) this.dataType = dataType.build();
SetMultimapMutateMethodTest.java,this.dataType = dataType.build();,if (dataType != null ) this.dataType = dataType.build();
SourceBuilder.java,String source = code.toString();,if (code != null ) String source = code.toString();
GeneratedTypeSubject.java,TypeElement parent = classType(visibleType.enclosingType());,if (classType(visibleType != null ) TypeElement parent = classType(visibleType.enclosingType());
CompilationUnitBuilderTest.java,ProcessingEnvironment environment = Mockito.spy(model.environment());,if (Mockito != null ) ProcessingEnvironment environment = Mockito.spy(model.environment());
CompilationUnitBuilder.java,scopeHandler = new ScopeHandler(env.getElementUtils());,if (ScopeHandler(env != null ) scopeHandler = new ScopeHandler(env.getElementUtils());
ScopeHandler.java,TypeElement scopeElement = elements.getTypeElement(scope.toString());,if (elements != null ) TypeElement scopeElement = elements.getTypeElement(scope.toString());
ScopeHandler.java,TypeElement element = elements.getTypeElement(type.toString());,if (elements != null ) TypeElement element = elements.getTypeElement(type.toString());
ScopeHandler.java,Set<Modifier> modifiers = element.getModifiers();,if (element != null ) Set<Modifier> modifiers = element.getModifiers();
ScopeHandlerTests.java,handler = new ScopeHandler(model.elementUtils());,if (ScopeHandler(model != null ) handler = new ScopeHandler(model.elementUtils());
ImportManager.java,i = usage.end();,if (usage != null ) i = usage.end();
Datatype_Builder.java,visibleNestedTypes = ImmutableSet.of();,if (ImmutableSet != null ) visibleNestedTypes = ImmutableSet.of();
Datatype_Builder.java,visibleNestedTypes = ImmutableSet.copyOf(value.getVisibleNestedTypes());,if (ImmutableSet != null ) visibleNestedTypes = ImmutableSet.copyOf(value.getVisibleNestedTypes());
GwtSupport.java,QualifiedName builderName = datatype.getGeneratedBuilder().getQualifiedName();,if (datatype != null ) QualifiedName builderName = datatype.getGeneratedBuilder().getQualifiedName();
ImportManager.java,QualifiedName existingType = imports.get(type.getSimpleName());,if (imports != null ) QualifiedName existingType = imports.get(type.getSimpleName());
ScopeAwareTypeShortener.java,this.pkg = scope.getPackage();,if (scope != null ) this.pkg = scope.getPackage();
LazyName.java,"Declaration declaration = declare(this, code.scope());","if (code != null ) Declaration declaration = declare(this, code.scope());"
AbstractSourceBuilder.java,offset = matcher.end();,if (matcher != null ) offset = matcher.end();
PreconditionExcerpts.java,SourceStringBuilder subBuilder = code.subBuilder();,if (code != null ) SourceStringBuilder subBuilder = code.subBuilder();
PreconditionExcerpts.java,String conditionText = subBuilder.toString();,if (subBuilder != null ) String conditionText = subBuilder.toString();
GwtSupport.java,TypeMirrorExcerpt propertyType = new TypeMirrorExcerpt(property.getType());,if (TypeMirrorExcerpt(property != null ) TypeMirrorExcerpt propertyType = new TypeMirrorExcerpt(property.getType());
DefaultProperty.java,"Block body = methodBody(code, property.getName());","if (property != null ) Block body = methodBody(code, property.getName());"
NullableProperty.java,Variable temporary = new Variable(property.getName());,if (Variable(property != null ) Variable temporary = new Variable(property.getName());
OptionalProperty.java,"Block body = methodBody(code, property.getName());","if (property != null ) Block body = methodBody(code, property.getName());"
Block.java,body = parent.subBuilder();,if (parent != null ) body = parent.subBuilder();
Block.java,Scope methodScope = new Scope.MethodScope(parent.scope());,if (Scope != null ) Scope methodScope = new Scope.MethodScope(parent.scope());
GwtSupport.java,Variable temporary = new Variable(property.getName());,if (Variable(property != null ) Variable temporary = new Variable(property.getName());
GwtSupport.java,Block tryBlock = body.innerBlock();,if (body != null ) Block tryBlock = body.innerBlock();
BuildableProperty.java,Optional<BuilderFactory> builderFactory = BuilderFactory.from(builder.get());,if (BuilderFactory != null ) Optional<BuilderFactory> builderFactory = BuilderFactory.from(builder.get());
BuildableProperty.java,suppressUnchecked = Excerpts.empty();,if (Excerpts != null ) suppressUnchecked = Excerpts.empty();
BuildableProperty.java,boolean declaresNoExceptions = element.getThrownTypes().isEmpty();,if (element != null ) boolean declaresNoExceptions = element.getThrownTypes().isEmpty();
GenericElementTest.java,TypeElement foobarElement = maybeAsTypeElement(foobar).get();,if (maybeAsTypeElement(foobar) != null ) TypeElement foobarElement = maybeAsTypeElement(foobar).get();
GeneratedBuilder.java,BuilderFactory builderFactory = datatype.getBuilderFactory().orNull();,if (datatype != null ) BuilderFactory builderFactory = datatype.getBuilderFactory().orNull();
GeneratedBuilder.java,BuilderFactory builderFactory = datatype.getBuilderFactory().orNull();,if (datatype != null ) BuilderFactory builderFactory = datatype.getBuilderFactory().orNull();
ListMultimapProperty.java,DeclaredType type = maybeDeclared(property.getType()).orNull();,if (maybeDeclared(property != null ) DeclaredType type = maybeDeclared(property.getType()).orNull();
MapProperty.java,DeclaredType type = maybeDeclared(property.getType()).orNull();,if (maybeDeclared(property != null ) DeclaredType type = maybeDeclared(property.getType()).orNull();
OptionalProperty.java,DeclaredType type = maybeDeclared(property.getType()).orNull();,if (maybeDeclared(property != null ) DeclaredType type = maybeDeclared(property.getType()).orNull();
OptionalProperty.java,OptionalType optionalType = maybeOptional(type).orNull();,if (maybeOptional(type) != null ) OptionalType optionalType = maybeOptional(type).orNull();
SetMultimapProperty.java,DeclaredType type = maybeDeclared(property.getType()).orNull();,if (maybeDeclared(property != null ) DeclaredType type = maybeDeclared(property.getType()).orNull();
ToStringGenerator.java,Initially initially = generator.initialState();,if (generator != null ) Initially initially = generator.initialState();
ToStringGenerator.java,Property last = Iterables.getLast(generatorsByProperty.keySet());,if (Iterables != null ) Property last = Iterables.getLast(generatorsByProperty.keySet());
FunctionalType.java,DeclaredType declaredType = maybeDeclared(type).orNull();,if (maybeDeclared(type) != null ) DeclaredType declaredType = maybeDeclared(type).orNull();
ScopeAwareTypeShortener.java,result = importManager.lookup(shortenedType).orNull();,if (importManager != null ) result = importManager.lookup(shortenedType).orNull();
ScopeAwareTypeShortener.java,QualifiedName qualifiedSupertype = lookup(supertype).orNull();,if (lookup(supertype) != null ) QualifiedName qualifiedSupertype = lookup(supertype).orNull();
SetType.java,int[] sortedExamples = examples.clone();,if (examples != null ) int[] sortedExamples = examples.clone();
SourceLevel.java,int sourceVersion = env.getSourceVersion().ordinal();,if (env != null ) int sourceVersion = env.getSourceVersion().ordinal();
ImportManager.java,String pkg = type.getPackage();,if (type != null ) String pkg = type.getPackage();
CompilationUnitBuilder.java,ImportManager.Builder importManagerBuilder = new ImportManager.Builder();,if (ImportManager != null ) ImportManager.Builder importManagerBuilder = new ImportManager.Builder();
CompilationUnitBuilder.java,importManager = importManagerBuilder.build();,if (importManagerBuilder != null ) importManager = importManagerBuilder.build();
ImportManagerTest.java,ImportManager manager = new ImportManager.Builder().build();,if (ImportManager != null ) ImportManager manager = new ImportManager.Builder().build();
ScopeAwareTypeShortener.java,result = delegate.lookup(shortenedType).orNull();,if (delegate != null ) result = delegate.lookup(shortenedType).orNull();
ImportManager.java,PackageElement pkg = (PackageElement) type.getEnclosingElement();,if (type != null ) PackageElement pkg = (PackageElement) type.getEnclosingElement();
ImportManager.java,Name name = type.getSimpleName();,if (type != null ) Name name = type.getSimpleName();
ImportManagerTest.java,model = Model.create();,if (Model != null ) model = Model.create();
ImportManagerTest.java,ImportManager manager = new ImportManager.Builder().build();,if (ImportManager != null ) ImportManager manager = new ImportManager.Builder().build();
ImportManagerTest.java,ImportManager manager = new ImportManager.Builder().build();,if (ImportManager != null ) ImportManager manager = new ImportManager.Builder().build();
ImportManagerTest.java,ImportManager manager = new ImportManager.Builder().build();,if (ImportManager != null ) ImportManager manager = new ImportManager.Builder().build();
ImportManagerTest.java,ImportManager manager = new ImportManager.Builder().build();,if (ImportManager != null ) ImportManager manager = new ImportManager.Builder().build();
ImportManagerTest.java,ImportManager manager = new ImportManager.Builder().build();,if (ImportManager != null ) ImportManager manager = new ImportManager.Builder().build();
CompilationUnitBuilder.java,ScopeHandler scopeHandler = new ScopeHandler(env.getElementUtils());,if (ScopeHandler(env != null ) ScopeHandler scopeHandler = new ScopeHandler(env.getElementUtils());
SourceStringBuilder.java,offset = matcher.end();,if (matcher != null ) offset = matcher.end();
QualifiedName.java,PackageElement pkg = (PackageElement) type.getEnclosingElement();,if (type != null ) PackageElement pkg = (PackageElement) type.getEnclosingElement();
GeneratedBuilder.java,BuilderFactory builderFactory = datatype.getBuilderFactory().orNull();,if (datatype != null ) BuilderFactory builderFactory = datatype.getBuilderFactory().orNull();
GeneratedBuilder.java,FieldAccessList fields = getFields(generatorsByProperty.keySet());,if (getFields(generatorsByProperty != null ) FieldAccessList fields = getFields(generatorsByProperty.keySet());
GeneratedBuilder.java,FieldAccessList fields = getFields(generatorsByProperty.keySet());,if (getFields(generatorsByProperty != null ) FieldAccessList fields = getFields(generatorsByProperty.keySet());
ToStringGenerator.java,Type type = generator.getType();,if (generator != null ) Type type = generator.getType();
GeneratedBuilder.java,PropertyCodeGenerator codeGenerator = property.getCodeGenerator();,if (property != null ) PropertyCodeGenerator codeGenerator = property.getCodeGenerator();
ToStringGenerator.java,Type type = property.getCodeGenerator().getType();,if (property != null ) Type type = property.getCodeGenerator().getType();
AnalyserTest.java,Property property = getOnlyElement(builder.getProperties());,if (getOnlyElement(builder != null ) Property property = getOnlyElement(builder.getProperties());
AnalyserTest.java,Property property = getOnlyElement(builder.getProperties());,if (getOnlyElement(builder != null ) Property property = getOnlyElement(builder.getProperties());
AnalyserTest.java,Property property = getOnlyElement(builder.getProperties());,if (getOnlyElement(builder != null ) Property property = getOnlyElement(builder.getProperties());
AnalyserTest.java,Property property = getOnlyElement(builder.getProperties());,if (getOnlyElement(builder != null ) Property property = getOnlyElement(builder.getProperties());
AnalyserTest.java,Property property = getOnlyElement(builder.getProperties());,if (getOnlyElement(builder != null ) Property property = getOnlyElement(builder.getProperties());
AnalyserTest.java,Property property = getOnlyElement(builder.getProperties());,if (getOnlyElement(builder != null ) Property property = getOnlyElement(builder.getProperties());
AnalyserTest.java,Property property = getOnlyElement(builder.getProperties());,if (getOnlyElement(builder != null ) Property property = getOnlyElement(builder.getProperties());
JacksonSupportTest.java,Property property = getOnlyElement(builder.getProperties());,if (getOnlyElement(builder != null ) Property property = getOnlyElement(builder.getProperties());
JacksonSupportTest.java,Property property = getOnlyElement(builder.getProperties());,if (getOnlyElement(builder != null ) Property property = getOnlyElement(builder.getProperties());
JacksonSupportTest.java,Property property = getOnlyElement(builder.getProperties());,if (getOnlyElement(builder != null ) Property property = getOnlyElement(builder.getProperties());
JacksonSupportTest.java,Property property = getOnlyElement(builder.getProperties());,if (getOnlyElement(builder != null ) Property property = getOnlyElement(builder.getProperties());
JacksonSupportTest.java,Property property = getOnlyElement(builder.getProperties());,if (getOnlyElement(builder != null ) Property property = getOnlyElement(builder.getProperties());
Datatype_Builder.java,properties = ImmutableList.of();,if (ImmutableList != null ) properties = ImmutableList.of();
Datatype_Builder.java,properties = ImmutableList.copyOf(value.getProperties());,if (ImmutableList != null ) properties = ImmutableList.copyOf(value.getProperties());
GeneratedBuilder.java,FieldAccessList properties = getFields(datatype.getProperties());,if (getFields(datatype != null ) FieldAccessList properties = getFields(datatype.getProperties());
GeneratedBuilder.java,FieldAccessList properties = getFields(datatype.getProperties());,if (getFields(datatype != null ) FieldAccessList properties = getFields(datatype.getProperties());
ToStringGenerator.java,Property last = Iterables.getLast(datatype.getProperties());,if (Iterables != null ) Property last = Iterables.getLast(datatype.getProperties());
AnalyserTest.java,Property property = getOnlyElement(builder.getDatatype().getProperties());,if (getOnlyElement(builder != null ) Property property = getOnlyElement(builder.getDatatype().getProperties());
AnalyserTest.java,Property property = getOnlyElement(builder.getDatatype().getProperties());,if (getOnlyElement(builder != null ) Property property = getOnlyElement(builder.getDatatype().getProperties());
AnalyserTest.java,Property property = getOnlyElement(builder.getDatatype().getProperties());,if (getOnlyElement(builder != null ) Property property = getOnlyElement(builder.getDatatype().getProperties());
AnalyserTest.java,Property property = getOnlyElement(builder.getDatatype().getProperties());,if (getOnlyElement(builder != null ) Property property = getOnlyElement(builder.getDatatype().getProperties());
AnalyserTest.java,Property property = getOnlyElement(builder.getDatatype().getProperties());,if (getOnlyElement(builder != null ) Property property = getOnlyElement(builder.getDatatype().getProperties());
AnalyserTest.java,Property property = getOnlyElement(builder.getDatatype().getProperties());,if (getOnlyElement(builder != null ) Property property = getOnlyElement(builder.getDatatype().getProperties());
AnalyserTest.java,Property property = getOnlyElement(builder.getDatatype().getProperties());,if (getOnlyElement(builder != null ) Property property = getOnlyElement(builder.getDatatype().getProperties());
JacksonSupportTest.java,Property property = getOnlyElement(builder.getDatatype().getProperties());,if (getOnlyElement(builder != null ) Property property = getOnlyElement(builder.getDatatype().getProperties());
JacksonSupportTest.java,Property property = getOnlyElement(builder.getDatatype().getProperties());,if (getOnlyElement(builder != null ) Property property = getOnlyElement(builder.getDatatype().getProperties());
JacksonSupportTest.java,Property property = getOnlyElement(builder.getDatatype().getProperties());,if (getOnlyElement(builder != null ) Property property = getOnlyElement(builder.getDatatype().getProperties());
JacksonSupportTest.java,Property property = getOnlyElement(builder.getDatatype().getProperties());,if (getOnlyElement(builder != null ) Property property = getOnlyElement(builder.getDatatype().getProperties());
JacksonSupportTest.java,Property property = getOnlyElement(builder.getDatatype().getProperties());,if (getOnlyElement(builder != null ) Property property = getOnlyElement(builder.getDatatype().getProperties());
Analyser.java,Metadata baseMetadata = metadataBuilder.build();,if (metadataBuilder != null ) Metadata baseMetadata = metadataBuilder.build();
Datatype.java,Metadata metadata = super.build();,if (super != null ) Metadata metadata = super.build();
Datatype.java,QualifiedName generatedBuilder = metadata.getGeneratedBuilder().getQualifiedName();,if (metadata != null ) QualifiedName generatedBuilder = metadata.getGeneratedBuilder().getQualifiedName();
GeneratedBuilder.java,BuilderFactory builderFactory = metadata.getBuilderFactory().orNull();,if (metadata != null ) BuilderFactory builderFactory = metadata.getBuilderFactory().orNull();
GeneratedBuilder.java,BuilderFactory builderFactory = metadata.getBuilderFactory().orNull();,if (metadata != null ) BuilderFactory builderFactory = metadata.getBuilderFactory().orNull();
GeneratedBuilder.java,FieldAccessList properties = getFields(metadata.getProperties());,if (getFields(metadata != null ) FieldAccessList properties = getFields(metadata.getProperties());
GeneratedBuilder.java,FieldAccessList properties = getFields(metadata.getProperties());,if (getFields(metadata != null ) FieldAccessList properties = getFields(metadata.getProperties());
GwtSupport.java,Metadata.Builder extraMetadata = new Metadata.Builder();,if (Metadata != null ) Metadata.Builder extraMetadata = new Metadata.Builder();
GwtSupport.java,QualifiedName builderName = metadata.getGeneratedBuilder().getQualifiedName();,if (metadata != null ) QualifiedName builderName = metadata.getGeneratedBuilder().getQualifiedName();
ToStringGenerator.java,Property last = Iterables.getLast(metadata.getProperties());,if (Iterables != null ) Property last = Iterables.getLast(metadata.getProperties());
AnalyserTest.java,Property property = getOnlyElement(builder.getMetadata().getProperties());,if (getOnlyElement(builder != null ) Property property = getOnlyElement(builder.getMetadata().getProperties());
AnalyserTest.java,Property property = getOnlyElement(builder.getMetadata().getProperties());,if (getOnlyElement(builder != null ) Property property = getOnlyElement(builder.getMetadata().getProperties());
AnalyserTest.java,Property property = getOnlyElement(builder.getMetadata().getProperties());,if (getOnlyElement(builder != null ) Property property = getOnlyElement(builder.getMetadata().getProperties());
AnalyserTest.java,Property property = getOnlyElement(builder.getMetadata().getProperties());,if (getOnlyElement(builder != null ) Property property = getOnlyElement(builder.getMetadata().getProperties());
AnalyserTest.java,Property property = getOnlyElement(builder.getMetadata().getProperties());,if (getOnlyElement(builder != null ) Property property = getOnlyElement(builder.getMetadata().getProperties());
AnalyserTest.java,Property property = getOnlyElement(builder.getMetadata().getProperties());,if (getOnlyElement(builder != null ) Property property = getOnlyElement(builder.getMetadata().getProperties());
AnalyserTest.java,Property property = getOnlyElement(builder.getMetadata().getProperties());,if (getOnlyElement(builder != null ) Property property = getOnlyElement(builder.getMetadata().getProperties());
JacksonSupportTest.java,Property property = getOnlyElement(builder.getMetadata().getProperties());,if (getOnlyElement(builder != null ) Property property = getOnlyElement(builder.getMetadata().getProperties());
JacksonSupportTest.java,Property property = getOnlyElement(builder.getMetadata().getProperties());,if (getOnlyElement(builder != null ) Property property = getOnlyElement(builder.getMetadata().getProperties());
JacksonSupportTest.java,Property property = getOnlyElement(builder.getMetadata().getProperties());,if (getOnlyElement(builder != null ) Property property = getOnlyElement(builder.getMetadata().getProperties());
JacksonSupportTest.java,Property property = getOnlyElement(builder.getMetadata().getProperties());,if (getOnlyElement(builder != null ) Property property = getOnlyElement(builder.getMetadata().getProperties());
JacksonSupportTest.java,Property property = getOnlyElement(builder.getMetadata().getProperties());,if (getOnlyElement(builder != null ) Property property = getOnlyElement(builder.getMetadata().getProperties());
ToStringGeneratorTest.java,SourceBuilder sourceBuilder = SourceStringBuilder.simple();,if (SourceStringBuilder != null ) SourceBuilder sourceBuilder = SourceStringBuilder.simple();
ToStringGeneratorTest.java,SourceBuilder sourceBuilder = SourceStringBuilder.simple();,if (SourceStringBuilder != null ) SourceBuilder sourceBuilder = SourceStringBuilder.simple();
Analyser.java,TypeElement builderElement = ModelUtils.asElement(builder.get());,if (ModelUtils != null ) TypeElement builderElement = ModelUtils.asElement(builder.get());
AnalyserTest.java,Property property = getOnlyElement(dataType.getProperties());,if (getOnlyElement(dataType != null ) Property property = getOnlyElement(dataType.getProperties());
AnalyserTest.java,Property property = getOnlyElement(dataType.getProperties());,if (getOnlyElement(dataType != null ) Property property = getOnlyElement(dataType.getProperties());
AnalyserTest.java,Property property = getOnlyElement(dataType.getProperties());,if (getOnlyElement(dataType != null ) Property property = getOnlyElement(dataType.getProperties());
AnalyserTest.java,Property property = getOnlyElement(dataType.getProperties());,if (getOnlyElement(dataType != null ) Property property = getOnlyElement(dataType.getProperties());
AnalyserTest.java,Property property = getOnlyElement(dataType.getProperties());,if (getOnlyElement(dataType != null ) Property property = getOnlyElement(dataType.getProperties());
AnalyserTest.java,Property property = getOnlyElement(dataType.getProperties());,if (getOnlyElement(dataType != null ) Property property = getOnlyElement(dataType.getProperties());
AnalyserTest.java,Property property = getOnlyElement(dataType.getProperties());,if (getOnlyElement(dataType != null ) Property property = getOnlyElement(dataType.getProperties());
JacksonSupportTest.java,Property property = getOnlyElement(metadata.getProperties());,if (getOnlyElement(metadata != null ) Property property = getOnlyElement(metadata.getProperties());
JacksonSupportTest.java,Property property = getOnlyElement(metadata.getProperties());,if (getOnlyElement(metadata != null ) Property property = getOnlyElement(metadata.getProperties());
JacksonSupportTest.java,Property property = getOnlyElement(metadata.getProperties());,if (getOnlyElement(metadata != null ) Property property = getOnlyElement(metadata.getProperties());
JacksonSupportTest.java,Property property = getOnlyElement(metadata.getProperties());,if (getOnlyElement(metadata != null ) Property property = getOnlyElement(metadata.getProperties());
JacksonSupportTest.java,Property property = getOnlyElement(metadata.getProperties());,if (getOnlyElement(metadata != null ) Property property = getOnlyElement(metadata.getProperties());
Block.java,declarationsBlock = parent.subBuilder();,if (parent != null ) declarationsBlock = parent.subBuilder();
Block.java,body = parent.subBuilder();,if (parent != null ) body = parent.subBuilder();
CodeGenerator.java,Property property = getOnlyElement(metadata.getProperties());,if (getOnlyElement(metadata != null ) Property property = getOnlyElement(metadata.getProperties());
CodeGenerator.java,Property lastProperty = getLast(metadata.getProperties());,if (getLast(metadata != null ) Property lastProperty = getLast(metadata.getProperties());
CodeGenerator.java,Property lastProperty = getLast(metadata.getProperties());,if (getLast(metadata != null ) Property lastProperty = getLast(metadata.getProperties());
CodeGenerator.java,Property last = Iterables.getLast(metadata.getProperties());,if (Iterables != null ) Property last = Iterables.getLast(metadata.getProperties());
CodeGenerator.java,Property property = getOnlyElement(metadata.getProperties());,if (getOnlyElement(metadata != null ) Property property = getOnlyElement(metadata.getProperties());
CodeGenerator.java,Property lastProperty = getLast(metadata.getProperties());,if (getLast(metadata != null ) Property lastProperty = getLast(metadata.getProperties());
ListMutateMethodTest.java,List<ElementFactory> elements = Arrays.asList(ElementFactory.values());,if (Arrays != null ) List<ElementFactory> elements = Arrays.asList(ElementFactory.values());
ListPropertyTest.java,List<ElementFactory> elements = Arrays.asList(ElementFactory.values());,if (Arrays != null ) List<ElementFactory> elements = Arrays.asList(ElementFactory.values());
MapMutateMethodTest.java,List<ElementFactory> elements = Arrays.asList(ElementFactory.values());,if (Arrays != null ) List<ElementFactory> elements = Arrays.asList(ElementFactory.values());
MapPropertyTest.java,List<ElementFactory> elements = Arrays.asList(ElementFactory.values());,if (Arrays != null ) List<ElementFactory> elements = Arrays.asList(ElementFactory.values());
MultisetMutateMethodTest.java,List<ElementFactory> elements = Arrays.asList(ElementFactory.values());,if (Arrays != null ) List<ElementFactory> elements = Arrays.asList(ElementFactory.values());
MultisetPropertyTest.java,List<ElementFactory> elements = Arrays.asList(ElementFactory.values());,if (Arrays != null ) List<ElementFactory> elements = Arrays.asList(ElementFactory.values());
SetMutateMethodTest.java,List<ElementFactory> elements = Arrays.asList(ElementFactory.values());,if (Arrays != null ) List<ElementFactory> elements = Arrays.asList(ElementFactory.values());
SetPropertyTest.java,List<ElementFactory> elements = Arrays.asList(ElementFactory.values());,if (Arrays != null ) List<ElementFactory> elements = Arrays.asList(ElementFactory.values());
ListProperty.java,TypeElement arrayListType = elements.getTypeElement(List.class.getName());,if (elements != null ) TypeElement arrayListType = elements.getTypeElement(List.class.getName());
NullableProperty.java,"TypeMirror typeParam = firstNonNull(property.getBoxedType(), property.getType());","if (property != null ) TypeMirror typeParam = firstNonNull(property.getBoxedType(), property.getType());"
DefaultProperty.java,"TypeMirror typeParam = firstNonNull(property.getBoxedType(), property.getType());","if (property != null ) TypeMirror typeParam = firstNonNull(property.getBoxedType(), property.getType());"
Analyser.java,Optional<TypeElement> returnType = ModelUtils.maybeAsTypeElement(method.getReturnType());,if (ModelUtils != null ) Optional<TypeElement> returnType = ModelUtils.maybeAsTypeElement(method.getReturnType());
ImportManager.java,Name name = mirror.asElement().getSimpleName();,if (mirror != null ) Name name = mirror.asElement().getSimpleName();
ImportManager.java,Element enclosingElement = mirror.asElement().getEnclosingElement();,if (mirror != null ) Element enclosingElement = mirror.asElement().getEnclosingElement();
TypeShortener.java,Name name = mirror.asElement().getSimpleName();,if (mirror != null ) Name name = mirror.asElement().getSimpleName();
TypeShortener.java,Name name = mirror.asElement().getSimpleName();,if (mirror != null ) Name name = mirror.asElement().getSimpleName();
JacksonSupportTest.java,Excerpt accessorAnnotation = getOnlyElement(property.getAccessorAnnotations());,if (getOnlyElement(property != null ) Excerpt accessorAnnotation = getOnlyElement(property.getAccessorAnnotations());
CodeGenerator.java,BuilderFactory builderFactory = metadata.getBuilderFactory().orNull();,if (metadata != null ) BuilderFactory builderFactory = metadata.getBuilderFactory().orNull();
SetMutateMethodTest.java,List<TestConvention> conventions = Arrays.asList(TestConvention.values());,if (Arrays != null ) List<TestConvention> conventions = Arrays.asList(TestConvention.values());
SingleBehaviorTester.java,this.allowedPackages = allowedPackages.build();,if (allowedPackages != null ) this.allowedPackages = allowedPackages.build();
SetPropertyTest.java,List<TestConvention> conventions = Arrays.asList(TestConvention.values());,if (Arrays != null ) List<TestConvention> conventions = Arrays.asList(TestConvention.values());
BuildableProperty.java,String propertyName = property.getName();,if (property != null ) String propertyName = property.getName();
BuildableProperty.java,String propertyName = property.getName();,if (property != null ) String propertyName = property.getName();
CodeGenerator.java,List<String> namesList = getNames(metadata.getProperties());,if (getNames(metadata != null ) List<String> namesList = getNames(metadata.getProperties());
SortedSetPropertyFactory.java,"Optional<TypeMirror> unboxedType = maybeUnbox(elementType, config.getTypes());","if (config != null ) Optional<TypeMirror> unboxedType = maybeUnbox(elementType, config.getTypes());"
SetPropertyFactory.java,"Optional<TypeMirror> unboxedType = maybeUnbox(elementType, config.getTypes());","if (config != null ) Optional<TypeMirror> unboxedType = maybeUnbox(elementType, config.getTypes());"
SetMultimapPropertyFactory.java,"Optional<TypeMirror> unboxedKeyType = maybeUnbox(keyType, config.getTypes());","if (config != null ) Optional<TypeMirror> unboxedKeyType = maybeUnbox(keyType, config.getTypes());"
SetMultimapPropertyFactory.java,"Optional<TypeMirror> unboxedValueType = maybeUnbox(valueType, config.getTypes());","if (config != null ) Optional<TypeMirror> unboxedValueType = maybeUnbox(valueType, config.getTypes());"
OptionalPropertyFactory.java,OptionalType optionalType = maybeOptional(type).orNull();,if (maybeOptional(type) != null ) OptionalType optionalType = maybeOptional(type).orNull();
OptionalPropertyFactory.java,"Optional<TypeMirror> unboxedType = maybeUnbox(elementType, config.getTypes());","if (config != null ) Optional<TypeMirror> unboxedType = maybeUnbox(elementType, config.getTypes());"
NullablePropertyFactory.java,Property property = config.getProperty();,if (config != null ) Property property = config.getProperty();
NullablePropertyFactory.java,Set<TypeElement> nullableAnnotations = nullablesIn(config.getAnnotations());,if (nullablesIn(config != null ) Set<TypeElement> nullableAnnotations = nullablesIn(config.getAnnotations());
NullablePropertyFactory.java,"TypeMirror typeParam = firstNonNull(property.getBoxedType(), property.getType());","if (property != null ) TypeMirror typeParam = firstNonNull(property.getBoxedType(), property.getType());"
MultisetPropertyFactory.java,"Optional<TypeMirror> unboxedType = maybeUnbox(elementType, config.getTypes());","if (config != null ) Optional<TypeMirror> unboxedType = maybeUnbox(elementType, config.getTypes());"
MapPropertyFactory.java,"Optional<TypeMirror> unboxedKeyType = maybeUnbox(keyType, config.getTypes());","if (config != null ) Optional<TypeMirror> unboxedKeyType = maybeUnbox(keyType, config.getTypes());"
MapPropertyFactory.java,"Optional<TypeMirror> unboxedValueType = maybeUnbox(valueType, config.getTypes());","if (config != null ) Optional<TypeMirror> unboxedValueType = maybeUnbox(valueType, config.getTypes());"
ListPropertyFactory.java,"Optional<TypeMirror> unboxedType = maybeUnbox(elementType, config.getTypes());","if (config != null ) Optional<TypeMirror> unboxedType = maybeUnbox(elementType, config.getTypes());"
ListMultimapPropertyFactory.java,"Optional<TypeMirror> unboxedKeyType = maybeUnbox(keyType, config.getTypes());","if (config != null ) Optional<TypeMirror> unboxedKeyType = maybeUnbox(keyType, config.getTypes());"
ListMultimapPropertyFactory.java,"Optional<TypeMirror> unboxedValueType = maybeUnbox(valueType, config.getTypes());","if (config != null ) Optional<TypeMirror> unboxedValueType = maybeUnbox(valueType, config.getTypes());"
DefaultPropertyFactory.java,Property property = config.getProperty();,if (config != null ) Property property = config.getProperty();
DefaultPropertyFactory.java,this.kind = property.getType().getKind();,if (property != null ) this.kind = property.getType().getKind();
DefaultPropertyFactory.java,"TypeMirror typeParam = firstNonNull(property.getBoxedType(), property.getType());","if (property != null ) TypeMirror typeParam = firstNonNull(property.getBoxedType(), property.getType());"
BuildablePropertyFactory.java,Optional<BuilderFactory> builderFactory = BuilderFactory.from(builder.get());,if (BuilderFactory != null ) Optional<BuilderFactory> builderFactory = BuilderFactory.from(builder.get());
BuildablePropertyFactory.java,String propertyName = property.getName();,if (property != null ) String propertyName = property.getName();
BuildablePropertyFactory.java,String propertyName = property.getName();,if (property != null ) String propertyName = property.getName();
BuildablePropertyFactory.java,boolean declaresNoExceptions = element.getThrownTypes().isEmpty();,if (element != null ) boolean declaresNoExceptions = element.getThrownTypes().isEmpty();
SharedBehaviorTesting.java,tester = BehaviorTester.create();,if (BehaviorTester != null ) tester = BehaviorTester.create();
SharedBehaviorTesting.java,subject = tester.compiles();,if (tester != null ) subject = tester.compiles();
SharedBehaviorTesting.java,CompilationSubject assertCompiled = compilation.compiles();,if (compilation != null ) CompilationSubject assertCompiled = compilation.compiles();
Analyser.java,Set<Modifier> modifiers = method.getModifiers();,if (method != null ) Set<Modifier> modifiers = method.getModifiers();
Analyser.java,String name = method.getSimpleName().toString();,if (method != null ) String name = method.getSimpleName().toString();
BehaviorTestRunner.java,testerField = frameworkField.getField();,if (frameworkField != null ) testerField = frameworkField.getField();
BehaviorTestRunner.java,Description originalDescription = super.getDescription();,if (super != null ) Description originalDescription = super.getDescription();
BehaviorTestRunner.java,Description suiteDescription = originalDescription.childlessCopy();,if (originalDescription != null ) Description suiteDescription = originalDescription.childlessCopy();
BehaviorTestRunner.java,SharedCompiler sharedCompiler = sharedCompilers.remove();,if (sharedCompilers != null ) SharedCompiler sharedCompiler = sharedCompilers.remove();
BehaviorTestRunner.java,tester = BehaviorTester.create();,if (BehaviorTester != null ) tester = BehaviorTester.create();
BehaviorTestRunner.java,Object test = super.createTest();,if (super != null ) Object test = super.createTest();
BehaviorTestRunner.java,JavaFileObject unit = compilationUnits.get(otherUnit.getName());,if (compilationUnits != null ) JavaFileObject unit = compilationUnits.get(otherUnit.getName());
BehaviorTestRunner.java,subject = tester.compiles();,if (tester != null ) subject = tester.compiles();
BehaviorTestRunner.java,CompilationSubject assertCompiled = compilation.compiles();,if (compilation != null ) CompilationSubject assertCompiled = compilation.compiles();
TempJavaFileManager.java,File[] files = file.listFiles();,if (file != null ) File[] files = file.listFiles();
BehaviorTester.java,Object testInstance = testClass.newInstance();,if (testClass != null ) Object testInstance = testClass.newInstance();
BehaviorTester.java,Method testMethod = testClass.getMethod(testFile.getMethodName());,if (testClass != null ) Method testMethod = testClass.getMethod(testFile.getMethodName());
BehaviorTester.java,boolean successful = task.call();,if (task != null ) boolean successful = task.call();
BehaviorTester.java,Method testMethod = testClass.getMethod(testSource.getMethodName());,if (testClass != null ) Method testMethod = testClass.getMethod(testSource.getMethodName());
Analyser.java,Metadata metadata = metadataBuilder.build();,if (metadataBuilder != null ) Metadata metadata = metadataBuilder.build();
Analyser.java,List<ExecutableElement> constructors = constructorsIn(builder.get().getEnclosedElements());,if (constructorsIn(builder != null ) List<ExecutableElement> constructors = constructorsIn(builder.get().getEnclosedElements());
Analyser.java,Property propertyWithoutCodeGenerator = resultBuilder.build();,if (resultBuilder != null ) Property propertyWithoutCodeGenerator = resultBuilder.build();
CodeGenerator.java,Property property = getOnlyElement(metadata.getProperties());,if (getOnlyElement(metadata != null ) Property property = getOnlyElement(metadata.getProperties());
CodeGenerator.java,Property lastProperty = getLast(metadata.getProperties());,if (getLast(metadata != null ) Property lastProperty = getLast(metadata.getProperties());
CodeGenerator.java,Property lastProperty = getLast(metadata.getProperties());,if (getLast(metadata != null ) Property lastProperty = getLast(metadata.getProperties());
CodeGenerator.java,Property lastProperty = getLast(metadata.getProperties());,if (getLast(metadata != null ) Property lastProperty = getLast(metadata.getProperties());
BuildablePropertyFactory.java,TypeMirror type = config.getProperty().getType();,if (config != null ) TypeMirror type = config.getProperty().getType();
ListMultimapPropertyFactory.java,unboxedType = Optional.absent();,if (Optional != null ) unboxedType = Optional.absent();
ListPropertyFactory.java,unboxedType = Optional.absent();,if (Optional != null ) unboxedType = Optional.absent();
MapPropertyFactory.java,unboxedType = Optional.absent();,if (Optional != null ) unboxedType = Optional.absent();
MultisetPropertyFactory.java,unboxedType = Optional.absent();,if (Optional != null ) unboxedType = Optional.absent();
OptionalPropertyFactory.java,Property property = config.getProperty();,if (config != null ) Property property = config.getProperty();
OptionalPropertyFactory.java,DeclaredType type = (DeclaredType) property.getType();,if (property != null ) DeclaredType type = (DeclaredType) property.getType();
OptionalPropertyFactory.java,unboxedType = Optional.absent();,if (Optional != null ) unboxedType = Optional.absent();
SetMultimapPropertyFactory.java,unboxedType = Optional.absent();,if (Optional != null ) unboxedType = Optional.absent();
SetPropertyFactory.java,unboxedType = Optional.absent();,if (Optional != null ) unboxedType = Optional.absent();
DefaultPropertyFactory.java,this.isNullable = !property.getNullableAnnotations().isEmpty();,if (!property != null ) this.isNullable = !property.getNullableAnnotations().isEmpty();
OptionalPropertyFactory.java,String capitalizedName = config.getProperty().getCapitalizedName();,if (config != null ) String capitalizedName = config.getProperty().getCapitalizedName();
CompilationUnitWriterTest.java,ProcessingEnvironment environment = Mockito.spy(model.environment());,if (Mockito != null ) ProcessingEnvironment environment = Mockito.spy(model.environment());
Processor.java,String name = Shading.unshadedName(ImmutableList.class.getName());,if (Shading != null ) String name = Shading.unshadedName(ImmutableList.class.getName());
CompilationUnitWriter.java,PackageElement pkg = elements.getPackageElement(classToWrite.getPackage());,if (elements != null ) PackageElement pkg = elements.getPackageElement(classToWrite.getPackage());
JacksonSupportTest.java,AnnotationMirror accessorAnnotation = getOnlyElement(property.getAccessorAnnotations());,if (getOnlyElement(property != null ) AnnotationMirror accessorAnnotation = getOnlyElement(property.getAccessorAnnotations());
Analyser.java,Name type = asElement(annotation.getAnnotationType()).getQualifiedName();,if (asElement(annotation != null ) Name type = asElement(annotation.getAnnotationType()).getQualifiedName();
AnalyserTest.java,Property property = getOnlyElement(metadata.getProperties());,if (getOnlyElement(metadata != null ) Property property = getOnlyElement(metadata.getProperties());
AnalyserTest.java,AnnotationMirror accessorAnnotation = getOnlyElement(property.getAccessorAnnotations());,if (getOnlyElement(property != null ) AnnotationMirror accessorAnnotation = getOnlyElement(property.getAccessorAnnotations());
CodeGenerator.java,String s = obj.toString();,if (obj != null ) String s = obj.toString();
CodeGenerator.java,Property property = getOnlyElement(metadata.getProperties());,if (getOnlyElement(metadata != null ) Property property = getOnlyElement(metadata.getProperties());
CodeGenerator.java,Property lastProperty = getLast(metadata.getProperties());,if (getLast(metadata != null ) Property lastProperty = getLast(metadata.getProperties());
OptionalPropertyFactory.java,unboxedType = Optional.absent();,if (Optional != null ) unboxedType = Optional.absent();
OptionalPropertyFactory.java,String capitalizedName = config.getProperty().getCapitalizedName();,if (config != null ) String capitalizedName = config.getProperty().getCapitalizedName();
GenericElement.java,"GenericElement impl = new GenericElement(qualifiedName, typeParameters.values());","if (typeParameters != null ) GenericElement impl = new GenericElement(qualifiedName, typeParameters.values());"
Metadata.java,element = element.getEnclosingElement();,if (element != null ) element = element.getEnclosingElement();
Metadata.java,QualifiedName generatedBuilder = metadata.getGeneratedBuilder();,if (metadata != null ) QualifiedName generatedBuilder = metadata.getGeneratedBuilder();
CompilationException.java,JavaFileObject source = diagnostic.getSource();,if (diagnostic != null ) JavaFileObject source = diagnostic.getSource();
CompilationException.java,long line = diagnostic.getLineNumber();,if (diagnostic != null ) long line = diagnostic.getLineNumber();
CompilationException.java,File sourceFile = new File(source.getName());,if (File(source != null ) File sourceFile = new File(source.getName());
ImportManager.java,Element parent = type.getEnclosingElement();,if (type != null ) Element parent = type.getEnclosingElement();
TypeShortener.java,Element parent = type.getEnclosingElement();,if (type != null ) Element parent = type.getEnclosingElement();
ImportManagerTest.java,ImportManager manager = new ImportManager.Builder().build();,if (ImportManager != null ) ImportManager manager = new ImportManager.Builder().build();
ImportManagerTest.java,ImportManager manager = new ImportManager.Builder().build();,if (ImportManager != null ) ImportManager manager = new ImportManager.Builder().build();
ImportManager.java,"String prefix = getPrefixForTopLevelClass(type.getPackage(), type.getTopLevelTypeSimpleName());","if (type != null ) String prefix = getPrefixForTopLevelClass(type.getPackage(), type.getTopLevelTypeSimpleName());"
QualifiedName.java,PackageElement pkg = (PackageElement) type.getEnclosingElement();,if (type != null ) PackageElement pkg = (PackageElement) type.getEnclosingElement();
Metadata.java,TypeReference generatedBuilder = metadata.getGeneratedBuilder();,if (metadata != null ) TypeReference generatedBuilder = metadata.getGeneratedBuilder();
Util.java,String name = cls.getName();,if (cls != null ) String name = cls.getName();
CodeGenerator.java,String inheritsFrom = getInheritanceKeyword(metadata.getType());,if (getInheritanceKeyword(metadata != null ) String inheritsFrom = getInheritanceKeyword(metadata.getType());
Metadata.java,this.builder = builder.orNull();,if (builder != null ) this.builder = builder.orNull();
Metadata.java,this.builderFactory = builderFactory.orNull();,if (builderFactory != null ) this.builderFactory = builderFactory.orNull();
ImpliedClassTest.java,Elements elements = model.elementUtils();,if (model != null ) Elements elements = model.elementUtils();
ImpliedClassTest.java,Elements elements = model.elementUtils();,if (model != null ) Elements elements = model.elementUtils();
ImpliedClassTest.java,Elements elements = model.elementUtils();,if (model != null ) Elements elements = model.elementUtils();
ImpliedClassTest.java,TypeElement origin = elements.getTypeElement(ImpliedClassTest.class.getCanonicalName());,if (elements != null ) TypeElement origin = elements.getTypeElement(ImpliedClassTest.class.getCanonicalName());
ImpliedClassTest.java,TypeElement origin = elements.getTypeElement(String.class.getCanonicalName());,if (elements != null ) TypeElement origin = elements.getTypeElement(String.class.getCanonicalName());
ImportManager.java,Name simpleName = type.getSimpleName();,if (type != null ) Name simpleName = type.getSimpleName();
CodeGeneratorTest.java,SourceStringBuilder sourceBuilder = SourceStringBuilder.simple();,if (SourceStringBuilder != null ) SourceStringBuilder sourceBuilder = SourceStringBuilder.simple();
CodeGeneratorTest.java,SourceStringBuilder sourceBuilder = SourceStringBuilder.simple();,if (SourceStringBuilder != null ) SourceStringBuilder sourceBuilder = SourceStringBuilder.simple();
CodeGeneratorTest.java,SourceStringBuilder sourceBuilder = SourceStringBuilder.simple();,if (SourceStringBuilder != null ) SourceStringBuilder sourceBuilder = SourceStringBuilder.simple();
CodeGeneratorTest.java,SourceStringBuilder sourceBuilder = SourceStringBuilder.simple();,if (SourceStringBuilder != null ) SourceStringBuilder sourceBuilder = SourceStringBuilder.simple();
ProcessorTest.java,Deque<Element> todo = new ArrayDeque<Element>(roundEnv.getRootElements());,if (ArrayDeque<Element>(roundEnv != null ) Deque<Element> todo = new ArrayDeque<Element>(roundEnv.getRootElements());
ProcessorTest.java,Element element = todo.pop();,if (todo != null ) Element element = todo.pop();
ProcessorTest.java,String annotationName = annotationMirror.getAnnotationType().toString();,if (annotationMirror != null ) String annotationName = annotationMirror.getAnnotationType().toString();
ProcessorTest.java,elementAnnotations = MutableClassToInstanceMap.create();,if (MutableClassToInstanceMap != null ) elementAnnotations = MutableClassToInstanceMap.create();
ProcessorTest.java,parent = parent.getEnclosingElement();,if (parent != null ) parent = parent.getEnclosingElement();
SourceWriter.java,TypeElement element = (TypeElement) mirror.asElement();,if (mirror != null ) TypeElement element = (TypeElement) mirror.asElement();
MethodElementTest.java,String source = builder.toString();,if (builder != null ) String source = builder.toString();
MethodElementTest.java,Model model = Model.create();,if (Model != null ) Model model = Model.create();
Analyser.java,String getterName = method.getSimpleName().toString();,if (method != null ) String getterName = method.getSimpleName().toString();
Analyser.java,String name = method.getSimpleName().toString();,if (method != null ) String name = method.getSimpleName().toString();
MethodElementTest.java,String source = writer.toString();,if (writer != null ) String source = writer.toString();
EntityStringer.java,final var fqType =GeciReflectionTools.getGenericTypeName(field.getType());,if (=GeciReflectionTools != null ) final var fqType =GeciReflectionTools.getGenericTypeName(field.getType());
Selector.java,final var superClass = toClass(m).getSuperclass();,if (toClass(m) != null ) final var superClass = toClass(m).getSuperclass();
Selector.java,final var interfaces = collectInterfaces(m.getDeclaringClass());,if (collectInterfaces(m != null ) final var interfaces = collectInterfaces(m.getDeclaringClass());
Selector.java,Class[] interfaces = klass.getInterfaces();,if (klass != null ) Class[] interfaces = klass.getInterfaces();
Selector.java,Class[] interfaces = klass.getInterfaces();,if (klass != null ) Class[] interfaces = klass.getInterfaces();
Selector.java,final var elements = exception.getStackTrace();,if (exception != null ) final var elements = exception.getStackTrace();
SelectorCompiler.java,final var topNode = it.expression();,if (it != null ) final var topNode = it.expression();
SelectorCompiler.java,var rest = lexer.rest();,if (lexer != null ) var rest = lexer.rest();
SelectorCompiler.java,final var orNode = new SelectorNode.Or();,if (SelectorNode != null ) final var orNode = new SelectorNode.Or();
SelectorCompiler.java,final var andNode = new SelectorNode.And();,if (SelectorNode != null ) final var andNode = new SelectorNode.And();
SelectorCompiler.java,final var regex = lexer.get();,if (lexer != null ) final var regex = lexer.get();
GeciReflectionTools.java,final var klass = (Class) t.getRawType();,if (t != null ) final var klass = (Class) t.getRawType();
TestSelector.java,final var f = this.getClass();,if (this != null ) final var f = this.getClass();
TestSelector.java,final var f = this.getClass();,if (this != null ) final var f = this.getClass();
TestSelector.java,final var f = this.getClass();,if (this != null ) final var f = this.getClass();
Source.java,Path parent = path.getParent();,if (path != null ) Path parent = path.getParent();
LoggerJDK9.java,this.LOGGER = System.getLogger(forClass.getName());,if (System != null ) this.LOGGER = System.getLogger(forClass.getName());
LoggerJVM8.java,this.LOGGER = Logger.getLogger(forClass.getName());,if (Logger != null ) this.LOGGER = Logger.getLogger(forClass.getName());
Untabber.java,final var stripped = stripLeading(line).length();,if (stripLeading(line) != null ) final var stripped = stripLeading(line).length();
EntityStringer.java,final var className = field.getDeclaringClass().getCanonicalName();,if (field != null ) final var className = field.getDeclaringClass().getCanonicalName();
EntityStringer.java,final var type = GeciReflectionTools.getGenericTypeName(field.getType());,if (GeciReflectionTools != null ) final var type = GeciReflectionTools.getGenericTypeName(field.getType());
EntityStringer.java,final var className = method.getDeclaringClass().getCanonicalName();,if (method != null ) final var className = method.getDeclaringClass().getCanonicalName();
EntityStringer.java,final var type = GeciReflectionTools.getGenericTypeName(method.getReturnType());,if (GeciReflectionTools != null ) final var type = GeciReflectionTools.getGenericTypeName(method.getReturnType());
TestDocumentation.java,final var rootDir = ConsistencyTestUtils.getDirectory();,if (ConsistencyTestUtils != null ) final var rootDir = ConsistencyTestUtils.getDirectory();
Engine.java,maven = maven.module(moduleOpt.get());,if (maven != null ) maven = maven.module(moduleOpt.get());
Engine.java,mavenSourceSet = maven.testSource();,if (maven != null ) mavenSourceSet = maven.testSource();
Engine.java,mavenSourceSet = maven.mainResources();,if (maven != null ) mavenSourceSet = maven.mainResources();
Engine.java,mavenSourceSet = maven.testResources();,if (maven != null ) mavenSourceSet = maven.testResources();
Engine.java,mavenSourceSet = maven.mainSource();,if (maven != null ) mavenSourceSet = maven.mainSource();
Engine.java,mavenSourceSet = maven.mainSource();,if (maven != null ) mavenSourceSet = maven.mainSource();
ClassMacro.java,final var className = in.toString().trim();,if (in != null ) final var className = in.toString().trim();
TestGenerateArticle.java,rootDirFile = new File(rootDir.toString());,if (File(rootDir != null ) rootDirFile = new File(rootDir.toString());
TestGenerateArticle.java,final var parent = rootDirFile.getParentFile();,if (rootDirFile != null ) final var parent = rootDirFile.getParentFile();
TestGenerateArticle.java,"return parent == null ? ""."" : parent.getCanonicalPath();","if (parent != null ) return parent == null ? ""."" : parent.getCanonicalPath();"
AbstractSnippeter.java,final var sourceParams = segment.sourceParams();,if (segment != null ) final var sourceParams = segment.sourceParams();
AbstractSnippeter.java,fileNamePattern = Pattern.compile(config.files.toString());,if (Pattern != null ) fileNamePattern = Pattern.compile(config.files.toString());
FragmentCollector.java,final var absFileName = source.getAbsoluteFile();,if (source != null ) final var absFileName = source.getAbsoluteFile();
FragmentCollector.java,snippetToResolv = builder.build();,if (builder != null ) snippetToResolv = builder.build();
MarkdownCodeInserter.java,final var originalLines = segment.originalLines();,if (segment != null ) final var originalLines = segment.originalLines();
SnippetAppender.java,final var segmentName = segment.sourceParams().id();,if (segment != null ) final var segmentName = segment.sourceParams().id();
SnippetBuilder.java,params = new CompoundParamsBuilder(s).build();,if (CompoundParamsBuilder(s) != null ) params = new CompoundParamsBuilder(s).build();
SnippetTrim.java,final var stripped = stripLeading(line).length();,if (stripLeading(line) != null ) final var stripped = stripLeading(line).length();
TestRegister.java,final var generator = generatorBuilder.build();,if (generatorBuilder != null ) final var generator = generatorBuilder.build();
TestRegister.java,final var generator = generatorBuilder.build();,if (generatorBuilder != null ) final var generator = generatorBuilder.build();
TestRegister.java,final var generator = generatorBuilder.build();,if (generatorBuilder != null ) final var generator = generatorBuilder.build();
TestRegister.java,final var generator = generatorBuilder.build();,if (generatorBuilder != null ) final var generator = generatorBuilder.build();
TestSnippetBuilder.java,final var snippet = sut.build();,if (sut != null ) final var snippet = sut.build();
ConsistencyTestUtils.java,readmeFile = new File(readme.toString());,if (File(readme != null ) readmeFile = new File(readme.toString());
ConsistencyTestUtils.java,final var parent =  readmeFile.getParentFile();,if (readmeFile != null ) final var parent =  readmeFile.getParentFile();
Modifiers.java,final var fingerPrint = in.toString().trim();,if (in != null ) final var fingerPrint = in.toString().trim();
Modifiers.java,modifiers = field.getModifiers();,if (field != null ) modifiers = field.getModifiers();
Modifiers.java,modifiers = method.getModifiers();,if (method != null ) modifiers = method.getModifiers();
Name.java,final var fingerPrint = in.toString().trim();,if (in != null ) final var fingerPrint = in.toString().trim();
Type.java,final var fingerPrint = in.toString().trim();,if (in != null ) final var fingerPrint = in.toString().trim();
Type.java,type = field.getType();,if (field != null ) type = field.getType();
Type.java,type = method.getReturnType();,if (method != null ) type = method.getReturnType();
FileCollector.java,final var locator = entry.getValue();,if (entry != null ) final var locator = entry.getValue();
Jdocify.java,state.file = source.getAbsoluteFile();,if (source != null ) state.file = source.getAbsoluteFile();
JavaLexed.java,var lexeme = lex.getFullLexeme();,if (lex != null ) var lexeme = lex.getFullLexeme();
Jdocify.java,final String file = source.getAbsoluteFile();,if (source != null ) final String file = source.getAbsoluteFile();
Jdocify.java,state.lenCODEStart = config.commentCODEStart.length();,if (config != null ) state.lenCODEStart = config.commentCODEStart.length();
Jdocify.java,state.lenCODEEnd = config.commentCODEEnd.length();,if (config != null ) state.lenCODEEnd = config.commentCODEEnd.length();
Jdocify.java,final var comment = new StringBuilder(lex.getLexeme());,if (StringBuilder(lex != null ) final var comment = new StringBuilder(lex.getLexeme());
Jdocify.java,final int lenCODEStart = config.commentCODEStart.length();,if (config != null ) final int lenCODEStart = config.commentCODEStart.length();
Jdocify.java,int lenCODEEnd = config.commentCODEEnd.length();,if (config != null ) int lenCODEEnd = config.commentCODEEnd.length();
TestJdocify.java,final var sut = Jdocify.builder().build();,if (Jdocify != null ) final var sut = Jdocify.builder().build();
Register.java,filePattern = sb.toString();,if (sb != null ) filePattern = sb.toString();
GeciReflectionTools.java,var superClass = klass.getSuperclass();,if (klass != null ) var superClass = klass.getSuperclass();
GeciReflectionTools.java,superClass = superClass.getSuperclass();,if (superClass != null ) superClass = superClass.getSuperclass();
GeciReflectionTools.java,var superClass = klass.getSuperclass();,if (klass != null ) var superClass = klass.getSuperclass();
GeciReflectionTools.java,superClass = superClass.getSuperclass();,if (superClass != null ) superClass = superClass.getSuperclass();
GeciReflectionTools.java,var samePackage = klass.getPackage() == superClass.getPackage();,if (superClass != null ) var samePackage = klass.getPackage() == superClass.getPackage();
GeciReflectionTools.java,var samePackage = klass.getPackage() == superClass.getPackage();,if (superClass != null ) var samePackage = klass.getPackage() == superClass.getPackage();
GeciReflectionTools.java,final var modifier = currentMethod.getModifiers();,if (currentMethod != null ) final var modifier = currentMethod.getModifiers();
Geci.java,generators[i] = generatorBuilders[i].build();,if (generatorBuilders[i] != null ) generators[i] = generatorBuilders[i].build();
Source.java,var id = entry.getKey();,if (entry != null ) var id = entry.getKey();
Source.java,Segment segment = entry.getValue();,if (entry != null ) Segment segment = entry.getValue();
Reflection.java,final var entityName = in.toString().trim();,if (in != null ) final var entityName = in.toString().trim();
Reflection.java,modifiers = field.getModifiers();,if (field != null ) modifiers = field.getModifiers();
Reflection.java,modifiers = method.getModifiers();,if (method != null ) modifiers = method.getModifiers();
RegexBasedSegmentSplitHelper.java,this.excludedKeys = Arrays.asList();,if (Arrays != null ) this.excludedKeys = Arrays.asList();
Segment.java,this.originals = Arrays.asList();,if (Arrays != null ) this.originals = Arrays.asList();
TestRecord.java,Field[] fields = ToRecord.class.getDeclaredFields();,if (ToRecord != null ) Field[] fields = ToRecord.class.getDeclaredFields();
MockSegment.java,this.originals = Arrays.asList();,if (Arrays != null ) this.originals = Arrays.asList();
MockSource.java,var id = entry.getKey();,if (entry != null ) var id = entry.getKey();
MockSource.java,MockSegment segment = entry.getValue();,if (entry != null ) MockSegment segment = entry.getValue();
MockSource.java,Path parent = path.getParent();,if (path != null ) Path parent = path.getParent();
MockSource.java,seg.tab = matcher.tabbing();,if (matcher != null ) seg.tab = matcher.tabbing();
MockSource.java,var attr = matcher.attributes();,if (matcher != null ) var attr = matcher.attributes();
MockSource.java,seg.tab = matcher.tabbing();,if (matcher != null ) seg.tab = matcher.tabbing();
MockSource.java,var attr = matcher.attributes();,if (matcher != null ) var attr = matcher.attributes();
MockSource.java,seg.id = attr.id();,if (attr != null ) seg.id = attr.id();
MockSource.java,seg.tab = matcher.tabbing();,if (matcher != null ) seg.tab = matcher.tabbing();
TestDocumentation.java,readmeFile = new File(readme.toString());,if (File(readme != null ) readmeFile = new File(readme.toString());
SnippetTrim.java,final var stripped = line.stripLeading().length();,if (line != null ) final var stripped = line.stripLeading().length();
TestSource.java,final var collector = new FileCollector(Map.of());,if (FileCollector(Map != null ) final var collector = new FileCollector(Map.of());
TestGeciReflectionTools.java,final var tempi = new Template(Map.of());,if (Template(Map != null ) final var tempi = new Template(Map.of());
TestTemplate.java,final var sut = new Template(Map.of());,if (Template(Map != null ) final var sut = new Template(Map.of());
ReplCommandBuilder.java,this.parameters = new HashSet<>(Set.of());,if (HashSet<>(Set != null ) this.parameters = new HashSet<>(Set.of());
RegexBasedSegmentSplitHelper.java,this.excludedKeys = List.of();,if (List != null ) this.excludedKeys = List.of();
Segment.java,this.originals = List.of();,if (List != null ) this.originals = List.of();
Logger.java,this.LOGGER = System.getLogger(forClass.getName());,if (System != null ) this.LOGGER = System.getLogger(forClass.getName());
AnnotationBuilder.java,final var segment = source.open();,if (source != null ) final var segment = source.open();
ConfigBuilder.java,final var segment = source.open(global.id());,if (source != null ) final var segment = source.open(global.id());
Equals.java,var segment = source.open(global.id());,if (source != null ) var segment = source.open(global.id());
Repeated.java,segment = source.open(global.id());,if (source != null ) segment = source.open(global.id());
Templated.java,final var segment = source.open(global.id());,if (source != null ) final var segment = source.open(global.id());
JamalGenerator.java,var output = source.open();,if (source != null ) var output = source.open();
Record.java,final var methods = klass.getDeclaredMethods();,if (klass != null ) final var methods = klass.getDeclaredMethods();
TestMatching.java,final var result = matcher.find();,if (matcher != null ) final var result = matcher.find();
TestMatching.java,final var result = matcher.find();,if (matcher != null ) final var result = matcher.find();
TestMatching.java,final var result = matcher.find();,if (matcher != null ) final var result = matcher.find();
TestMatching.java,final var result = matcher.find();,if (matcher != null ) final var result = matcher.find();
TestMatching.java,final var result = matcher.find();,if (matcher != null ) final var result = matcher.find();
TestMatching.java,final var result = matcher.find();,if (matcher != null ) final var result = matcher.find();
TestMatching.java,final var result = matcher.find();,if (matcher != null ) final var result = matcher.find();
TestMatching.java,final var result = matcher.find();,if (matcher != null ) final var result = matcher.find();
TestMatching.java,final var result = matcher.find();,if (matcher != null ) final var result = matcher.find();
TestMatching.java,final var result = matcher.find();,if (matcher != null ) final var result = matcher.find();
TestMatching.java,final var result = matcher.find();,if (matcher != null ) final var result = matcher.find();
TestMatching.java,final var result = matcher.find();,if (matcher != null ) final var result = matcher.find();
TestMatching.java,final var result = matcher.find();,if (matcher != null ) final var result = matcher.find();
TestMatching.java,final var result = matcher.find();,if (matcher != null ) final var result = matcher.find();
TestMatching.java,final var result = matcher.find();,if (matcher != null ) final var result = matcher.find();
TestMatching.java,final var result = matcher.find();,if (matcher != null ) final var result = matcher.find();
TestMatching.java,final var result = matcher.find();,if (matcher != null ) final var result = matcher.find();
TestMatching.java,final var result = matcher.find();,if (matcher != null ) final var result = matcher.find();
TestMatching.java,final var result = matcher.find();,if (matcher != null ) final var result = matcher.find();
TestMatching.java,final var result = matcher.find();,if (matcher != null ) final var result = matcher.find();
TestMatching.java,final var result = matcher.find();,if (matcher != null ) final var result = matcher.find();
Source.java,var segment = entry.getValue();,if (entry != null ) var segment = entry.getValue();
FragmentCollector.java,lastSnippet = builder.build();,if (builder != null ) lastSnippet = builder.build();
Mapper.java,final var rawContent = segment.getContent();,if (segment != null ) final var rawContent = segment.getContent();
Repeated.java,segment = source.open(global.id());,if (source != null ) segment = source.open(global.id());
Geci.java,touched = touched || source.isTouched();,if (source != null ) touched = touched || source.isTouched();
Geci.java,touched = touched || source.isTouched();,if (source != null ) touched = touched || source.isTouched();
AnnotationBuilder.java,final var content = file.open();,if (file != null ) final var content = file.open();
SelectorCompiler.java,final var converter = lexer.get();,if (lexer != null ) final var converter = lexer.get();
CompoundParams.java,list = (List) entry.getValue();,if (entry != null ) list = (List) entry.getValue();
AnnotationBuilder.java,Segment content = file.open();,if (file != null ) Segment content = file.open();
AnnotationBuilder.java,final Segment annotationFile = newSource.open();,if (newSource != null ) final Segment annotationFile = newSource.open();
AnnotationBuilder.java,final var annotationFile = newSource.open();,if (newSource != null ) final var annotationFile = newSource.open();
CompoundParams.java,list = (List)entry.getValue();,if ((List)entry != null ) list = (List)entry.getValue();
MarkdownCodeInserter.java,final var names = source.segmentNames();,if (source != null ) final var names = source.segmentNames();
MarkdownCodeInserter.java,final var originalLines = segment.originalLines();,if (segment != null ) final var originalLines = segment.originalLines();
MarkdownCodeInserter.java,final var params =  segment.sourceParams();,if (segment != null ) final var params =  segment.sourceParams();
SnippetNumberer.java,final var names = source.segmentNames();,if (source != null ) final var names = source.segmentNames();
SnippetNumberer.java,final var params = segment.sourceParams();,if (segment != null ) final var params = segment.sourceParams();
SnippetNumberer.java,final var params = new CompoundParamsBuilder(options).build();,if (CompoundParamsBuilder(options) != null ) final var params = new CompoundParamsBuilder(options).build();
SnippetNumberer.java,long endLine = original.lines().size();,if (original != null ) long endLine = original.lines().size();
SnippetNumberer.java,final var snippet = snipEntry.getValue();,if (snipEntry != null ) final var snippet = snipEntry.getValue();
MarkdownSnippetInserter.java,final var names = source.segmentNames();,if (source != null ) final var names = source.segmentNames();
MarkdownSnippetInserter.java,final var originalLines = segment.originalLines();,if (segment != null ) final var originalLines = segment.originalLines();
TestSnippet.java,final var generator = SnippetCollector.builder().build();,if (SnippetCollector != null ) final var generator = SnippetCollector.builder().build();
Equals.java,var superClass = klass.getSuperclass();,if (klass != null ) var superClass = klass.getSuperclass();
Person.java,int result = super.hashCode();,if (super != null ) int result = super.hashCode();
GeciAnnotationTools.java,final var matchLine = trimmedLine.trim();,if (trimmedLine != null ) final var matchLine = trimmedLine.trim();
GeciReflectionTools.java,final var modifier = method.getModifiers();,if (method != null ) final var modifier = method.getModifiers();
GeciAnnotationToolsTest.java,annotations = Opsa.class.getAnnotations();,if (Opsa != null ) annotations = Opsa.class.getAnnotations();
GeciAnnotationTools.java,final var annotationName = annotation.annotationType().getSimpleName();,if (annotation != null ) final var annotationName = annotation.annotationType().getSimpleName();
Lexer.java,lenBefore = sb.length();,if (sb != null ) lenBefore = sb.length();
Lexer.java,lenAfter = sb.length();,if (sb != null ) lenAfter = sb.length();
Geci.java,touched = touched || source.isTouched();,if (source != null ) touched = touched || source.isTouched();
Geci.java,touched = touched || source.isTouched();,if (source != null ) touched = touched || source.isTouched();
Repeated.java,Segment segment = source.open(global.id());,if (source != null ) Segment segment = source.open(global.id());
TemplateBasedSelectedMemberGenerator.java,final var segment = source.open(global.id());,if (source != null ) final var segment = source.open(global.id());
TemplateBasedSelectedMemberGenerator.java,final var fieldType = field.getType();,if (field != null ) final var fieldType = field.getType();
TemplateBasedSelectedMemberGenerator.java,final var returnType = method.getReturnType();,if (method != null ) final var returnType = method.getReturnType();
TemplateBasedSelectedMemberGenerator.java,final var fieldType = field.getType();,if (field != null ) final var fieldType = field.getType();
TemplateBasedSelectedMemberGenerator.java,final var name = field.getName();,if (field != null ) final var name = field.getName();
TemplateBasedSelectedMemberGenerator.java,final var returnType = method.getReturnType();,if (method != null ) final var returnType = method.getReturnType();
TemplateBasedSelectedMemberGenerator.java,final var name = method.getName();,if (method != null ) final var name = method.getName();
TemplateBasedSelectedMemberGenerator.java,var segment = source.open(global.id());,if (source != null ) var segment = source.open(global.id());
Source.java,seg.tab = matcher.tabbing();,if (matcher != null ) seg.tab = matcher.tabbing();
RegexBasedSegmentSplitHelper.java,final var segmentStart = matcher.matches();,if (matcher != null ) final var segmentStart = matcher.matches();
GeciAnnotationTools.java,final var annotations = a.annotationType().getDeclaredAnnotations();,if (a != null ) final var annotations = a.annotationType().getDeclaredAnnotations();
Builder.java,final var typeParameters = field.getType().getTypeParameters();,if (field != null ) final var typeParameters = field.getType().getTypeParameters();
Builder.java,final var type = field.getType().getName();,if (field != null ) final var type = field.getType().getName();
Delegator.java,final var delClass = field.getType();,if (field != null ) final var delClass = field.getType();
AbstractAccessor.java,var isFinal = Modifier.isFinal(field.getModifiers());,if (Modifier != null ) var isFinal = Modifier.isFinal(field.getModifiers());
AbstractAccessor.java,var name = field.getName();,if (field != null ) var name = field.getName();
Delegator.java,final var delClass = field.getType();,if (field != null ) final var delClass = field.getType();
Accessor.java,var isFinal = Modifier.isFinal(field.getModifiers());,if (Modifier != null ) var isFinal = Modifier.isFinal(field.getModifiers());
Accessor.java,var name = field.getName();,if (field != null ) var name = field.getName();
Accessor.java,var isFinal = Modifier.isFinal(field.getModifiers());,if (Modifier != null ) var isFinal = Modifier.isFinal(field.getModifiers());
Accessor.java,int modifiers = field.getModifiers();,if (field != null ) int modifiers = field.getModifiers();
GeciAnnotationTools.java,final var matchLine = rightChopped.trim();,if (rightChopped != null ) final var matchLine = rightChopped.trim();
GeciAnnotationTools.java,final var allAnnotations = element.getDeclaredAnnotations();,if (element != null ) final var allAnnotations = element.getDeclaredAnnotations();
RegexBasedSegmentSplitHelper.java,segmentStart = matcher.matches();,if (matcher != null ) segmentStart = matcher.matches();
RegexBasedSegmentSplitHelper.java,segmentEnd = endPattern.matcher(line).matches();,if (endPattern != null ) segmentEnd = endPattern.matcher(line).matches();
Source.java,var attr = splitHelper.attributes();,if (splitHelper != null ) var attr = splitHelper.attributes();
Source.java,seg.tab = splitHelper.tabbing();,if (splitHelper != null ) seg.tab = splitHelper.tabbing();
CopyGenerator.java,final var src = source.open();,if (source != null ) final var src = source.open();
Equals.java,hashCodeSegment = source.temporary();,if (source != null ) hashCodeSegment = source.temporary();
Equals.java,var primitive = field.getType().isPrimitive();,if (field != null ) var primitive = field.getType().isPrimitive();
Equals.java,var name = field.getName();,if (field != null ) var name = field.getName();
Equals.java,var primitive = field.getType().isPrimitive();,if (field != null ) var primitive = field.getType().isPrimitive();
Equals.java,var name = field.getName();,if (field != null ) var name = field.getName();
Equals.java,var type = field.getType();,if (field != null ) var type = field.getType();
ClassBuilder.java,List<Node> list = tree.getList();,if (tree != null ) List<Node> list = tree.getList();
ClassBuilder.java,List<Node> list = tree.getList();,if (tree != null ) List<Node> list = tree.getList();
Syntax.java,var lexeme = lexer.peek();,if (lexer != null ) var lexeme = lexer.peek();
Syntax.java,var method = lexer.get();,if (lexer != null ) var method = lexer.get();
Syntax.java,var next = lexer.peek();,if (lexer != null ) var next = lexer.peek();
Syntax.java,var next = lexer.peek();,if (lexer != null ) var next = lexer.peek();
Syntax.java,next = lexer.peek();,if (lexer != null ) next = lexer.peek();
Syntax.java,next = lexer.peek();,if (lexer != null ) next = lexer.peek();
Fields.java,"final var fingerPrint = GeciReflectionTools.getGenericTypeName(klass) + ""."" + field.getName();","if (field != null ) final var fingerPrint = GeciReflectionTools.getGenericTypeName(klass) + ""."" + field.getName();"
Modifiers.java,final var entityName = in.toString().trim();,if (in != null ) final var entityName = in.toString().trim();
Modifiers.java,modifiers = method.getModifiers();,if (method != null ) modifiers = method.getModifiers();
Name.java,final var entityName = in.toString().trim();,if (in != null ) final var entityName = in.toString().trim();
Name.java,name = field.getName();,if (field != null ) name = field.getName();
Name.java,name = method.getName();,if (method != null ) name = method.getName();
Type.java,final var entityName = in.toString().trim();,if (in != null ) final var entityName = in.toString().trim();
Type.java,type = method.getReturnType();,if (method != null ) type = method.getReturnType();
Fields.java,"final var fingerPrint = Tools.getGenericTypeName(klass) + ""."" + field.getName();","if (field != null ) final var fingerPrint = Tools.getGenericTypeName(klass) + ""."" + field.getName();"
GeciReflectionTools.java,final var allAnnotations = element.getDeclaredAnnotations();,if (element != null ) final var allAnnotations = element.getDeclaredAnnotations();
GeciReflectionTools.java,final var trimmedLine = line.trim();,if (line != null ) final var trimmedLine = line.trim();
GeciReflectionTools.java,final var matchLine = rightChopped.trim();,if (rightChopped != null ) final var matchLine = rightChopped.trim();
Reflection.java,final var entityName = in.toString().trim();,if (in != null ) final var entityName = in.toString().trim();
Reflection.java,type = field.getType();,if (field != null ) type = field.getType();
Reflection.java,type = method.getReturnType();,if (method != null ) type = method.getReturnType();
Reflection.java,final var entityName = in.toString().trim();,if (in != null ) final var entityName = in.toString().trim();
Reflection.java,name = field.getName();,if (field != null ) name = field.getName();
Reflection.java,name = method.getName();,if (method != null ) name = method.getName();
Reflection.java,"final var fingerPrint = Tools.getGenericTypeName(klass) + ""."" + field.getName();","if (field != null ) final var fingerPrint = Tools.getGenericTypeName(klass) + ""."" + field.getName();"
Reflection.java,var fingerPrint = with(method).fingerprint();,if (with(method) != null ) var fingerPrint = with(method).fingerprint();
MethodTool.java,final var className = Tools.getGenericTypeName(method.getDeclaringClass());,if (Tools != null ) final var className = Tools.getGenericTypeName(method.getDeclaringClass());
Reflection.java,final var matcher = PATTERN.matcher(in.toString());,if (PATTERN != null ) final var matcher = PATTERN.matcher(in.toString());
Reflection.java,Matcher matcher = PATTERN.matcher(in.toString());,if (PATTERN != null ) Matcher matcher = PATTERN.matcher(in.toString());
Delegator.java,var delClass = field.getType();,if (field != null ) var delClass = field.getType();
Delegator.java,var name = field.getName();,if (field != null ) var name = field.getName();
Delegator.java,var modifiers = method.getModifiers();,if (method != null ) var modifiers = method.getModifiers();
SelectorCompiler.java,final var regex = lexer.get();,if (lexer != null ) final var regex = lexer.get();
SelectorCompiler.java,final var orNode = new SelectorNode.Or();,if (SelectorNode != null ) final var orNode = new SelectorNode.Or();
SelectorCompiler.java,final var orNode = new SelectorNode.Or();,if (SelectorNode != null ) final var orNode = new SelectorNode.Or();
MemberSelector.java,int modifiers = member.getModifiers();,if (member != null ) int modifiers = member.getModifiers();
FluentBuilderImpl.java,next = syntaxAnalyzer.expression();,if (syntaxAnalyzer != null ) next = syntaxAnalyzer.expression();
Syntax.java,var next = lexer.get();,if (lexer != null ) var next = lexer.get();
Syntax.java,var lexeme = lexer.get();,if (lexer != null ) var lexeme = lexer.get();
Syntax.java,lexeme = lexer.peek();,if (lexer != null ) lexeme = lexer.peek();
Syntax.java,var next = lexer.peek();,if (lexer != null ) var next = lexer.peek();
Syntax.java,lexeme = lexer.peek();,if (lexer != null ) lexeme = lexer.peek();
Syntax.java,next = lexer.peek();,if (lexer != null ) next = lexer.peek();
Equals.java,var type = field.getType();,if (field != null ) var type = field.getType();
Accessor.java,final var fields = klass.getDeclaredFields();,if (klass != null ) final var fields = klass.getDeclaredFields();
Tools.java,var ub = joinTypes(wt.getUpperBounds());,if (joinTypes(wt != null ) var ub = joinTypes(wt.getUpperBounds());
Tools.java,var lb = joinTypes(wt.getLowerBounds());,if (joinTypes(wt != null ) var lb = joinTypes(wt.getLowerBounds());
Tools.java,var types = pt.getActualTypeArguments();,if (pt != null ) var types = pt.getActualTypeArguments();
Tools.java,final var klass = (Class) pt.getRawType();,if (pt != null ) final var klass = (Class) pt.getRawType();
FluentMethodTool.java,this.klassName = Tools.normalizeTypeName(klass.getName());,if (Tools != null ) this.klassName = Tools.normalizeTypeName(klass.getName());
FluentMethodTool.java,final var normType = Tools.normalizeTypeName(t.getTypeName());,if (Tools != null ) final var normType = Tools.normalizeTypeName(t.getTypeName());
FluentMethodTool.java,final var normType = Tools.normalizeTypeName(t.getTypeName());,if (Tools != null ) final var normType = Tools.normalizeTypeName(t.getTypeName());
MethodTool.java,final var normType = Tools.normalizeTypeName(t.getTypeName());,if (Tools != null ) final var normType = Tools.normalizeTypeName(t.getTypeName());
MethodTool.java,final var normType = Tools.normalizeTypeName(t.getTypeName());,if (Tools != null ) final var normType = Tools.normalizeTypeName(t.getTypeName());
MethodTool.java,final var normType = Tools.normalizeTypeName(t.getTypeName());,if (Tools != null ) final var normType = Tools.normalizeTypeName(t.getTypeName());
Fluent.java,var generatedCode = new ClassBuilder(builder).build();,if (ClassBuilder(builder) != null ) var generatedCode = new ClassBuilder(builder).build();
ClassBuilder.java,interfaceName = ifNameFactory.getNewName();,if (ifNameFactory != null ) interfaceName = ifNameFactory.getNewName();
ClassBuilder.java,this.interfaceName = ifNameFactory.getNewName();,if (ifNameFactory != null ) this.interfaceName = ifNameFactory.getNewName();
ClassBuilder.java,this.interfaceName = ifNameFactory.getNewName();,if (ifNameFactory != null ) this.interfaceName = ifNameFactory.getNewName();
ClassBuilder.java,this.interfaceName = ifNameFactory.getNewName();,if (ifNameFactory != null ) this.interfaceName = ifNameFactory.getNewName();
ClassBuilder.java,this.interfaceName = ifNameFactory.getNewName();,if (ifNameFactory != null ) this.interfaceName = ifNameFactory.getNewName();
JavaSource.java,var next = new Wrapper(that.copy());,if (Wrapper(that != null ) var next = new Wrapper(that.copy());
JavaSource.java,var next = new Wrapper(that.copy());,if (Wrapper(that != null ) var next = new Wrapper(that.copy());
JavaSource.java,var next = new Wrapper(that.copy());,if (Wrapper(that != null ) var next = new Wrapper(that.copy());
JavaSource.java,var next = new Wrapper(that.copy());,if (Wrapper(that != null ) var next = new Wrapper(that.copy());
JavaSource.java,var next = new Wrapper(that.copy());,if (Wrapper(that != null ) var next = new Wrapper(that.copy());
JavaSource.java,var next = new Wrapper(that.copy());,if (Wrapper(that != null ) var next = new Wrapper(that.copy());
JavaSource.java,var next = new Wrapper(that.copy());,if (Wrapper(that != null ) var next = new Wrapper(that.copy());
JavaSource.java,var next = new Wrapper(that.copy());,if (Wrapper(that != null ) var next = new Wrapper(that.copy());
JavaSource.java,var next = new Wrapper(that.copy());,if (Wrapper(that != null ) var next = new Wrapper(that.copy());
JavaSource.java,var next = new Wrapper(that.copy());,if (Wrapper(that != null ) var next = new Wrapper(that.copy());
JavaSource.java,var next = new Wrapper(that.copy());,if (Wrapper(that != null ) var next = new Wrapper(that.copy());
JavaSource.java,var next = new Wrapper(that.copy());,if (Wrapper(that != null ) var next = new Wrapper(that.copy());
JavaSource.java,var next = new Wrapper(that.copy());,if (Wrapper(that != null ) var next = new Wrapper(that.copy());
JavaSource.java,var next = new Wrapper(that.copy());,if (Wrapper(that != null ) var next = new Wrapper(that.copy());
JavaSource.java,var next = new Wrapper(that.copy());,if (Wrapper(that != null ) var next = new Wrapper(that.copy());
JavaSource.java,var next = new Wrapper(that.copy());,if (Wrapper(that != null ) var next = new Wrapper(that.copy());
JavaSource.java,var next = new Wrapper(that.copy());,if (Wrapper(that != null ) var next = new Wrapper(that.copy());
JavaSource.java,var next = new Wrapper(that.copy());,if (Wrapper(that != null ) var next = new Wrapper(that.copy());
JavaSource.java,var next = new Wrapper(that.copy());,if (Wrapper(that != null ) var next = new Wrapper(that.copy());
JavaSource.java,var next = new Wrapper(that.copy());,if (Wrapper(that != null ) var next = new Wrapper(that.copy());
MethodTool.java,this.klassName = Tools.normalizeTypeName(klass.getName());,if (Tools != null ) this.klassName = Tools.normalizeTypeName(klass.getName());
ClassBuilder.java,var newInterfaceName = interfaceNameProvider.getNewInterfaceName();,if (interfaceNameProvider != null ) var newInterfaceName = interfaceNameProvider.getNewInterfaceName();
ClassBuilder.java,var list = lastNode.getList();,if (lastNode != null ) var list = lastNode.getList();
ClassBuilder.java,var list = lastNode.getList();,if (lastNode != null ) var list = lastNode.getList();
ClassBuilder.java,List<Node> list = tree.getList();,if (tree != null ) List<Node> list = tree.getList();
ClassBuilder.java,interfaceName = classNameProvider.getNewClassName();,if (classNameProvider != null ) interfaceName = classNameProvider.getNewClassName();
ClassBuilder.java,this.interfaceName = classNameProvider.getNewClassName();,if (classNameProvider != null ) this.interfaceName = classNameProvider.getNewClassName();
ClassBuilder.java,this.interfaceName = classNameProvider.getNewClassName();,if (classNameProvider != null ) this.interfaceName = classNameProvider.getNewClassName();
Tools.java,var s = field.getGenericType().getTypeName();,if (field != null ) var s = field.getGenericType().getTypeName();
Tools.java,var s = method.getGenericReturnType().getTypeName();,if (method != null ) var s = method.getGenericReturnType().getTypeName();
Delegator.java,var methods = delClass.getDeclaredMethods();,if (delClass != null ) var methods = delClass.getDeclaredMethods();
AbstractDeclaredFieldsGenerator.java,final var fields = klass.getDeclaredFields();,if (klass != null ) final var fields = klass.getDeclaredFields();
Tools.java,var s = method.getReturnType().getTypeName();,if (method != null ) var s = method.getReturnType().getTypeName();
Delegator.java,final var klass = source.getKlass();,if (source != null ) final var klass = source.getKlass();
Delegator.java,final var fields = klass.getDeclaredFields();,if (klass != null ) final var fields = klass.getDeclaredFields();
Delegator.java,var delClass = field.getType();,if (field != null ) var delClass = field.getType();
Delegator.java,var methods = delClass.getDeclaredMethods();,if (delClass != null ) var methods = delClass.getDeclaredMethods();
Delegator.java,var name = field.getName();,if (field != null ) var name = field.getName();
Delegator.java,var modifiers = method.getModifiers();,if (method != null ) var modifiers = method.getModifiers();
TestFileCollector.java,var files = new FileCollector(sources).collect();,if (FileCollector(sources) != null ) var files = new FileCollector(sources).collect();
Geci.java,final var sources = collector.collect();,if (collector != null ) final var sources = collector.collect();
FileCollector.java,var s = path.toAbsolutePath().toString();,if (path != null ) var s = path.toAbsolutePath().toString();
Geci.java,var sources = new FileCollector(directories).collect();,if (FileCollector(directories) != null ) var sources = new FileCollector(directories).collect();
Source.java,var id = entry.getKey();,if (entry != null ) var id = entry.getKey();
Source.java,var segment = entry.getValue();,if (entry != null ) var segment = entry.getValue();
Accessor.java,final var klass = source.getKlass();,if (source != null ) final var klass = source.getKlass();
Accessor.java,final var fields = klass.getDeclaredFields();,if (klass != null ) final var fields = klass.getDeclaredFields();
Accessor.java,var isFinal = Modifier.isFinal(field.getModifiers());,if (Modifier != null ) var isFinal = Modifier.isFinal(field.getModifiers());
Tools.java,var file = source.file();,if (source != null ) var file = source.file();
Delegate.java,var fields = klass.getDeclaredFields();,if (klass != null ) var fields = klass.getDeclaredFields();
Delegate.java,var delClass = field.getType();,if (field != null ) var delClass = field.getType();
Delegate.java,var methods = delClass.getMethods();,if (delClass != null ) var methods = delClass.getMethods();
Delegate.java,var name = field.getName();,if (field != null ) var name = field.getName();
MethodSpec.java,ParameterSpec.Builder builder = parameterSpec.toBuilder();,if (parameterSpec != null ) ParameterSpec.Builder builder = parameterSpec.toBuilder();
ClassName.java,type = type.getEnclosingElement();,if (type != null ) type = type.getEnclosingElement();
ClassName.java,return packageName == null || packageName.isEmpty();,if (packageName != null ) return packageName == null || packageName.isEmpty();
ClassName.java,clazz = clazz.getEnclosingClass();,if (clazz != null ) clazz = clazz.getEnclosingClass();
CodeWriter.java,typeName = typeName.withoutAnnotations();,if (typeName != null ) typeName = typeName.withoutAnnotations();
AnnotatedTypeNameTest.java,String actual = WildcardTypeName.supertypeOf(type).toString();,if (WildcardTypeName != null ) String actual = WildcardTypeName.supertypeOf(type).toString();
AnnotatedTypeNameTest.java,String actual = WildcardTypeName.subtypeOf(type).toString();,if (WildcardTypeName != null ) String actual = WildcardTypeName.subtypeOf(type).toString();
AnnotatedTypeNameTest.java,String actual = type.toString();,if (type != null ) String actual = type.toString();
AnnotatedTypeNameTest.java,String actual = type.toString();,if (type != null ) String actual = type.toString();
LineWrapper.java,column = indentLevel * indent.length();,if (indent != null ) column = indentLevel * indent.length();
LineWrapper.java,column += buffer.length();,if (buffer != null ) column += buffer.length();
ClassNameTest.java,TypeElement element = elements.getTypeElement(Object.class.getCanonicalName());,if (elements != null ) TypeElement element = elements.getTypeElement(Object.class.getCanonicalName());
MethodSpec.java,TypeName type = TypeName.get(parameter.asType());,if (TypeName != null ) TypeName type = TypeName.get(parameter.asType());
MethodSpec.java,String name = parameter.getSimpleName().toString();,if (parameter != null ) String name = parameter.getSimpleName().toString();
MethodSpec.java,Set<Modifier> parameterModifiers = parameter.getModifiers();,if (parameter != null ) Set<Modifier> parameterModifiers = parameter.getModifiers();
TypeVariableName.java,this.hashCode = name.hashCode() ^ bounds.hashCode();,if (bounds != null ) this.hashCode = name.hashCode() ^ bounds.hashCode();
WildcardTypeName.java,this.hashCode = upperBounds.hashCode() ^ lowerBounds.hashCode();,if (lowerBounds != null ) this.hashCode = upperBounds.hashCode() ^ lowerBounds.hashCode();
AnnotatedTypeNameTest.java,String actual = type.annotated(annotation).toString();,if (type != null ) String actual = type.annotated(annotation).toString();
AnnotatedTypeNameTest.java,String actual = type.annotated(annotation).toString();,if (type != null ) String actual = type.annotated(annotation).toString();
CodeWriter.java,ClassName enclosingClassName = className.enclosingClassName();,if (className != null ) ClassName enclosingClassName = className.enclosingClassName();
CodeWriter.java,List<String> classNames = className.simpleNames();,if (className != null ) List<String> classNames = className.simpleNames();
CodeBlock.java,Iterator<Character> iterChars = paramChars.iterator();,if (paramChars != null ) Iterator<Character> iterChars = paramChars.iterator();
CodeBlock.java,Iterator<Integer> iterIndexes = paramIndexes.iterator();,if (paramIndexes != null ) Iterator<Integer> iterIndexes = paramIndexes.iterator();
CodeBlock.java,char c = iterChars.next();,if (iterChars != null ) char c = iterChars.next();
CodeBlock.java,int index = iterIndexes.next();,if (iterIndexes != null ) int index = iterIndexes.next();
CodeBlock.java,Iterator<Object> i = Arrays.asList(args).iterator();,if (Arrays != null ) Iterator<Object> i = Arrays.asList(args).iterator();
TypeVariableName.java,TypeMirror upperBound = typeVariable.getUpperBound();,if (typeVariable != null ) TypeMirror upperBound = typeVariable.getUpperBound();
TypesTest.java,Types types = compilation.getTypes();,if (compilation != null ) Types types = compilation.getTypes();
TypesTest.java,Elements elements = compilation.getElements();,if (compilation != null ) Elements elements = compilation.getElements();
TypesTest.java,Types types = compilation.getTypes();,if (compilation != null ) Types types = compilation.getTypes();
TypesTest.java,Elements elements = compilation.getElements();,if (compilation != null ) Elements elements = compilation.getElements();
MethodSpecTest.java,DeclaredType classType = (DeclaredType) classElement.asType();,if (classElement != null ) DeclaredType classType = (DeclaredType) classElement.asType();
MethodSpecTest.java,DeclaredType classType = (DeclaredType) classElement.asType();,if (classElement != null ) DeclaredType classType = (DeclaredType) classElement.asType();
MethodSpecTest.java,MethodSpec method = MethodSpec.overriding(methodElement).build();,if (MethodSpec != null ) MethodSpec method = MethodSpec.overriding(methodElement).build();
MethodSpecTest.java,MethodSpec method = MethodSpec.overriding(methodElement).build();,if (MethodSpec != null ) MethodSpec method = MethodSpec.overriding(methodElement).build();
FileReadingTest.java,File classOutput = temporaryFolder.newFolder();,if (temporaryFolder != null ) File classOutput = temporaryFolder.newFolder();
Util.java,boolean containsSubset = set.isEmpty();,if (set != null ) boolean containsSubset = set.isEmpty();
WildcardTypeName.java,TypeName extendsBound = TypeName.get(mirror.getExtendsBound());,if (TypeName != null ) TypeName extendsBound = TypeName.get(mirror.getExtendsBound());
WildcardTypeName.java,TypeName superBound = TypeName.get(mirror.getSuperBound());,if (TypeName != null ) TypeName superBound = TypeName.get(mirror.getSuperBound());
FieldSpec.java,this.initializer = builder.initializer.build();,if (builder != null ) this.initializer = builder.initializer.build();
CodeWriter.java,Type[] extendsBounds = wildcardName.getUpperBounds();,if (wildcardName != null ) Type[] extendsBounds = wildcardName.getUpperBounds();
CodeWriter.java,Type[] superBounds = wildcardName.getLowerBounds();,if (wildcardName != null ) Type[] superBounds = wildcardName.getLowerBounds();
Types.java,int hashCode = Arrays.hashCode(typeArguments) ^ rawType.hashCode();,if (rawType != null ) int hashCode = Arrays.hashCode(typeArguments) ^ rawType.hashCode();
Types.java,int hashCode = componentType.hashCode();,if (componentType != null ) int hashCode = componentType.hashCode();
Types.java,int hashCode = name.hashCode();,if (name != null ) int hashCode = name.hashCode();
Types.java,TypeMirror upperBound = typeVariable.getUpperBound();,if (typeVariable != null ) TypeMirror upperBound = typeVariable.getUpperBound();
Types.java,Type extendsBound = get(mirror.getExtendsBound());,if (get(mirror != null ) Type extendsBound = get(mirror.getExtendsBound());
Types.java,Type superBound = get(mirror.getSuperBound());,if (get(mirror != null ) Type superBound = get(mirror.getSuperBound());
Types.java,ClassLoader classLoader = Types.class.getClassLoader();,if (Types != null ) ClassLoader classLoader = Types.class.getClassLoader();
Types.java,Object result = accessors.get(method.getName());,if (accessors != null ) Object result = accessors.get(method.getName());
CodeWriter.java,ImmutableList<String> classNames = className.simpleNames();,if (className != null ) ImmutableList<String> classNames = className.simpleNames();
TypeSpec.java,this.originatingElements = originatingElementsBuilder.build();,if (originatingElementsBuilder != null ) this.originatingElements = originatingElementsBuilder.build();
TypeSpec.java,implementsTypes = ImmutableList.of();,if (ImmutableList != null ) implementsTypes = ImmutableList.of();
TestFiler.java,originatingElementsMap = LinkedHashMultimap.create();,if (LinkedHashMultimap != null ) originatingElementsMap = LinkedHashMultimap.create();
Types.java,TypeMirror upperBound = mirror.getUpperBound();,if (mirror != null ) TypeMirror upperBound = mirror.getUpperBound();
TypesTest.java,Type[] bounds = typeVariable.getBounds();,if (typeVariable != null ) Type[] bounds = typeVariable.getBounds();
CodeBlock.java,this.formatParts = builder.formatParts.build();,if (builder != null ) this.formatParts = builder.formatParts.build();
CodeBlock.java,this.args = builder.args.build();,if (builder != null ) this.args = builder.args.build();
TypeSpec.java,implementsTypes = ImmutableList.of();,if (ImmutableList != null ) implementsTypes = ImmutableList.of();
Snippet.java,this.formatParts = formatPartsBuilder.build();,if (formatPartsBuilder != null ) this.formatParts = formatPartsBuilder.build();
ClassName.java,List<String> names = Lists.newArrayList();,if (Lists != null ) List<String> names = Lists.newArrayList();
ClassName.java,List<String> names = Lists.newArrayList();,if (Lists != null ) List<String> names = Lists.newArrayList();
ClassName.java,fullyQualifiedName = builder.append(simpleName()).toString();,if (builder != null ) fullyQualifiedName = builder.append(simpleName()).toString();
ClassName.java,String simpleName = element.getSimpleName().toString();,if (element != null ) String simpleName = element.getSimpleName().toString();
ClassName.java,List<String> enclosingNames = Lists.newArrayList();,if (Lists != null ) List<String> enclosingNames = Lists.newArrayList();
ClassName.java,Element current = element.getEnclosingElement();,if (element != null ) Element current = element.getEnclosingElement();
ClassName.java,current = current.getEnclosingElement();,if (current != null ) current = current.getEnclosingElement();
ClassName.java,List<String> enclosingNames = Lists.newArrayList();,if (Lists != null ) List<String> enclosingNames = Lists.newArrayList();
ClassName.java,current = current.getEnclosingClass();,if (current != null ) current = current.getEnclosingClass();
ClassName.java,type = type.getEnclosingElement();,if (type != null ) type = type.getEnclosingElement();
CodeWriter.java,ClassName enclosingClassName = className.enclosingClassName().orNull();,if (className != null ) ClassName enclosingClassName = className.enclosingClassName().orNull();
ClassName.java,Iterator<String> enclosingIterator = enclosingSimpleNames().iterator();,if (enclosingSimpleNames() != null ) Iterator<String> enclosingIterator = enclosingSimpleNames().iterator();
CodeWriter.java,TypeName upperBound = typeVariable.upperBound();,if (typeVariable != null ) TypeName upperBound = typeVariable.upperBound();
CodeWriter.java,TypeName extendsBound = wildcardName.extendsBound();,if (wildcardName != null ) TypeName extendsBound = wildcardName.extendsBound();
CodeWriter.java,TypeName superBound = wildcardName.superBound();,if (wildcardName != null ) TypeName superBound = wildcardName.superBound();
TypeVariableName.java,TypeMirror upperBound = mirror.getUpperBound();,if (mirror != null ) TypeMirror upperBound = mirror.getUpperBound();
ClassNameTest.java,Elements elements = compilationRule.getElements();,if (compilationRule != null ) Elements elements = compilationRule.getElements();
ClassNameTest.java,TypeElement element = elements.getTypeElement(ClassNameTest.class.getCanonicalName());,if (elements != null ) TypeElement element = elements.getTypeElement(ClassNameTest.class.getCanonicalName());
ClassNameTest.java,Elements elements = compilationRule.getElements();,if (compilationRule != null ) Elements elements = compilationRule.getElements();
ClassNameTest.java,TypeElement element = elements.getTypeElement(OuterClass.class.getCanonicalName());,if (elements != null ) TypeElement element = elements.getTypeElement(OuterClass.class.getCanonicalName());
ClassNameTest.java,Elements elements = compilationRule.getElements();,if (compilationRule != null ) Elements elements = compilationRule.getElements();
ClassNameTest.java,TypeElement element = elements.getTypeElement(InnerClass.class.getCanonicalName());,if (elements != null ) TypeElement element = elements.getTypeElement(InnerClass.class.getCanonicalName());
AnonymousClassWriter.java,this.constructorArguments = Optional.absent();,if (Optional != null ) this.constructorArguments = Optional.absent();
AnonymousClassWriter.java,this.body = ClassBodyWriter.forAnonymousType();,if (ClassBodyWriter != null ) this.body = ClassBodyWriter.forAnonymousType();
BlockWriter.java,this.snippets = Lists.newArrayList();,if (Lists != null ) this.snippets = Lists.newArrayList();
ClassBodyWriter.java,this.fieldWriters = Maps.newLinkedHashMap();,if (Maps != null ) this.fieldWriters = Maps.newLinkedHashMap();
ClassBodyWriter.java,this.constructorWriters = Lists.newArrayList();,if (Lists != null ) this.constructorWriters = Lists.newArrayList();
ClassBodyWriter.java,this.methodWriters = Lists.newArrayList();,if (Lists != null ) this.methodWriters = Lists.newArrayList();
ClassBodyWriter.java,this.nestedTypeWriters = Lists.newArrayList();,if (Lists != null ) this.nestedTypeWriters = Lists.newArrayList();
ClassWriter.java,this.supertype = Optional.absent();,if (Optional != null ) this.supertype = Optional.absent();
ClassWriter.java,this.typeVariables = Lists.newArrayList();,if (Lists != null ) this.typeVariables = Lists.newArrayList();
ConstructorWriter.java,this.typeVariables = Lists.newArrayList();,if (Lists != null ) this.typeVariables = Lists.newArrayList();
ConstructorWriter.java,this.parameterWriters = Maps.newLinkedHashMap();,if (Maps != null ) this.parameterWriters = Maps.newLinkedHashMap();
EnumWriter.java,this.constructorSnippets = Lists.newArrayList();,if (Lists != null ) this.constructorSnippets = Lists.newArrayList();
EnumWriter.java,this.body = ClassBodyWriter.forAnonymousType();,if (ClassBodyWriter != null ) this.body = ClassBodyWriter.forAnonymousType();
FieldWriter.java,this.initializer = Optional.absent();,if (Optional != null ) this.initializer = Optional.absent();
IndentingAppendable.java,CharSequence line = lines.next();,if (lines != null ) CharSequence line = lines.next();
InterfaceWriter.java,this.typeVariables = Lists.newArrayList();,if (Lists != null ) this.typeVariables = Lists.newArrayList();
JavaWriter.java,typeWriters = Lists.newArrayList();,if (Lists != null ) typeWriters = Lists.newArrayList();
JavaWriter.java,ClassName typeName = typeWriter.name();,if (typeWriter != null ) ClassName typeName = typeWriter.name();
JavaWriter.java,String packageName = typeName.packageName();,if (typeName != null ) String packageName = typeName.packageName();
JavaWriter.java,ClassName typeName = typeWriter.name();,if (typeWriter != null ) ClassName typeName = typeWriter.name();
JavaWriter.java,String packageName = typeName.packageName();,if (typeName != null ) String packageName = typeName.packageName();
JavaWriter.java,Writer closeable = sourceFile.openWriter();,if (sourceFile != null ) Writer closeable = sourceFile.openWriter();
JavaWriter.java,Closer closer = Closer.create();,if (Closer != null ) Closer closer = Closer.create();
MethodWriter.java,this.typeVariables = Lists.newArrayList();,if (Lists != null ) this.typeVariables = Lists.newArrayList();
MethodWriter.java,this.parameterWriters = Maps.newLinkedHashMap();,if (Maps != null ) this.parameterWriters = Maps.newLinkedHashMap();
MethodWriter.java,this.throwsTypes = Lists.newArrayList();,if (Lists != null ) this.throwsTypes = Lists.newArrayList();
Modifiable.java,this.annotations = Lists.newArrayList();,if (Lists != null ) this.annotations = Lists.newArrayList();
Snippet.java,Iterator<Snippet> iterator = parameterSnippets.iterator();,if (parameterSnippets != null ) Iterator<Snippet> iterator = parameterSnippets.iterator();
Snippet.java,Snippet firstSnippet = iterator.next();,if (iterator != null ) Snippet firstSnippet = iterator.next();
Snippet.java,Snippet nextSnippet = iterator.next();,if (iterator != null ) Snippet nextSnippet = iterator.next();
TypeWriter.java,this.implementedTypes = Lists.newArrayList();,if (Lists != null ) this.implementedTypes = Lists.newArrayList();
TypeWriter.java,this.explicitImports = Lists.newArrayList();,if (Lists != null ) this.explicitImports = Lists.newArrayList();
TypeWriter.java,this.originatingElements = Lists.newArrayList();,if (Lists != null ) this.originatingElements = Lists.newArrayList();
TypeWriter.java,String packageName = name().packageName();,if (name() != null ) String packageName = name().packageName();
TypeWriter.java,TypeWriter currentType = declaredTypes.pop();,if (declaredTypes != null ) TypeWriter currentType = declaredTypes.pop();
TypeWriter.java,ImmutableSet<String> declaredSimpleNames = declaredSimpleNamesBuilder.build();,if (declaredSimpleNamesBuilder != null ) ImmutableSet<String> declaredSimpleNames = declaredSimpleNamesBuilder.build();
TypeWriter.java,importCandidate = importCandidate.get().enclosingClassName();,if (importCandidate != null ) importCandidate = importCandidate.get().enclosingClassName();
TypeWriter.java,Optional<ClassName> enclosingClassName = className.enclosingClassName();,if (className != null ) Optional<ClassName> enclosingClassName = className.enclosingClassName();
TypeWriter.java,enclosingClassName = enclosingClassName.get().enclosingClassName();,if (enclosingClassName != null ) enclosingClassName = enclosingClassName.get().enclosingClassName();
Writables.java,boolean needsWrap = parts.hasNext();,if (parts != null ) boolean needsWrap = parts.hasNext();
AnonymousClassWriterTest.java,ConstructorWriter constructorWriter = classWriter.addConstructor();,if (classWriter != null ) ConstructorWriter constructorWriter = classWriter.addConstructor();
AnonymousClassWriterTest.java,ConstructorWriter constructorWriter = classWriter.addConstructor();,if (classWriter != null ) ConstructorWriter constructorWriter = classWriter.addConstructor();
EnumWriterTest.java,ConstructorWriter constructorWriterWriter = enumWriter.addConstructor();,if (enumWriter != null ) ConstructorWriter constructorWriterWriter = enumWriter.addConstructor();
ClassName.java,current = clazz.getEnclosingClass();,if (clazz != null ) current = clazz.getEnclosingClass();
TestFiler.java,Path locationPath = fileSystemRoot.resolve(location.getName());,if (fileSystemRoot != null ) Path locationPath = fileSystemRoot.resolve(location.getName());
ClassWriter.java,this.constructorWriters = Lists.newArrayList();,if (Lists != null ) this.constructorWriters = Lists.newArrayList();
ClassWriter.java,ConstructorWriter constructorWriter = new ConstructorWriter(name.simpleName());,if (ConstructorWriter(name != null ) ConstructorWriter constructorWriter = new ConstructorWriter(name.simpleName());
EnumWriter.java,ConstructorWriter constructorWriter = new ConstructorWriter(name.simpleName());,if (ConstructorWriter(name != null ) ConstructorWriter constructorWriter = new ConstructorWriter(name.simpleName());
TypeWriter.java,this.nestedTypeWriters = Lists.newArrayList();,if (Lists != null ) this.nestedTypeWriters = Lists.newArrayList();
AnonymousClassWriter.java,this.methodWriters = Lists.newArrayList();,if (Lists != null ) this.methodWriters = Lists.newArrayList();
AnonymousClassWriter.java,this.fieldWriters = Maps.newLinkedHashMap();,if (Maps != null ) this.fieldWriters = Maps.newLinkedHashMap();
TypeWriter.java,this.methodWriters = Lists.newArrayList();,if (Lists != null ) this.methodWriters = Lists.newArrayList();
TypeWriter.java,this.fieldWriters = Maps.newLinkedHashMap();,if (Maps != null ) this.fieldWriters = Maps.newLinkedHashMap();
AnonymousClassWriter.java,arguments = Optional.absent();,if (Optional != null ) arguments = Optional.absent();
AnonymousClassWriter.java,typeVariables = Lists.newArrayList();,if (Lists != null ) typeVariables = Lists.newArrayList();
AnonymousClassWriterTest.java,ConstructorWriter constructorWriter = classWriter.addConstructor();,if (classWriter != null ) ConstructorWriter constructorWriter = classWriter.addConstructor();
AnonymousClassWriterTest.java,ConstructorWriter constructorWriter = classWriter.addConstructor();,if (classWriter != null ) ConstructorWriter constructorWriter = classWriter.addConstructor();
MethodWriter.java,this.body = Optional.absent();,if (Optional != null ) this.body = Optional.absent();
ClassWriter.java,Iterator<TypeVariableName> typeVariablesIterator = typeVariables.iterator();,if (typeVariables != null ) Iterator<TypeVariableName> typeVariablesIterator = typeVariables.iterator();
ClassWriter.java,Iterator<TypeName> implementedTypesIterator = implementedTypes.iterator();,if (implementedTypes != null ) Iterator<TypeName> implementedTypesIterator = implementedTypes.iterator();
ConstructorWriter.java,Iterator<TypeVariableName> typeVariablesIterator = typeVariables.iterator();,if (typeVariables != null ) Iterator<TypeVariableName> typeVariablesIterator = typeVariables.iterator();
ConstructorWriter.java,Iterator<VariableWriter> parameterWritersIterator = parameterWriters.values().iterator();,if (parameterWriters != null ) Iterator<VariableWriter> parameterWritersIterator = parameterWriters.values().iterator();
EnumWriter.java,Iterator<TypeName> implementedTypesIterator = implementedTypes.iterator();,if (implementedTypes != null ) Iterator<TypeName> implementedTypesIterator = implementedTypes.iterator();
EnumWriter.java,Iterator<Snippet> snippetIterator = constructorSnippets.iterator();,if (constructorSnippets != null ) Iterator<Snippet> snippetIterator = constructorSnippets.iterator();
InterfaceWriter.java,Iterator<TypeVariableName> typeVariablesIterator = typeVariables.iterator();,if (typeVariables != null ) Iterator<TypeVariableName> typeVariablesIterator = typeVariables.iterator();
InterfaceWriter.java,Iterator<TypeName> implementedTypesIterator = implementedTypes.iterator();,if (implementedTypes != null ) Iterator<TypeName> implementedTypesIterator = implementedTypes.iterator();
IntersectionTypeName.java,Iterator<TypeName> iterator = typeNames.iterator();,if (typeNames != null ) Iterator<TypeName> iterator = typeNames.iterator();
MethodWriter.java,Iterator<TypeVariableName> typeVariablesIterator = typeVariables.iterator();,if (typeVariables != null ) Iterator<TypeVariableName> typeVariablesIterator = typeVariables.iterator();
MethodWriter.java,Iterator<VariableWriter> parameterWritersIterator = parameterWriters.values().iterator();,if (parameterWriters != null ) Iterator<VariableWriter> parameterWritersIterator = parameterWriters.values().iterator();
TypeVariableName.java,Iterator<TypeName> boundsIterator = bounds.iterator();,if (bounds != null ) Iterator<TypeName> boundsIterator = bounds.iterator();
JavaWriter.java,this.typeWriters = Lists.newArrayList();,if (Lists != null ) this.typeWriters = Lists.newArrayList();
JavaWriter.java,this.explicitImports = Lists.newArrayList();,if (Lists != null ) this.explicitImports = Lists.newArrayList();
JavaWriter.java,TypeWriter currentType = declaredTypes.pop();,if (declaredTypes != null ) TypeWriter currentType = declaredTypes.pop();
JavaWriter.java,ImmutableSet<String> declaredSimpleNames = declaredSimpleNamesBuilder.build();,if (declaredSimpleNamesBuilder != null ) ImmutableSet<String> declaredSimpleNames = declaredSimpleNamesBuilder.build();
JavaWriter.java,importCandidate = importCandidate.get().enclosingClassName();,if (importCandidate != null ) importCandidate = importCandidate.get().enclosingClassName();
JavaWriter.java,Closer closer = Closer.create();,if (Closer != null ) Closer closer = Closer.create();
JavaWriter.java,Optional<ClassName> enclosingClassName = className.enclosingClassName();,if (className != null ) Optional<ClassName> enclosingClassName = className.enclosingClassName();
JavaWriter.java,enclosingClassName = enclosingClassName.get().enclosingClassName();,if (enclosingClassName != null ) enclosingClassName = enclosingClassName.get().enclosingClassName();
TypeWriter.java,this.supertype = Optional.absent();,if (Optional != null ) this.supertype = Optional.absent();
JavaWriter.java,this.typeWriters = Lists.newArrayList();,if (Lists != null ) this.typeWriters = Lists.newArrayList();
JavaWriter.java,this.explicitImports = Lists.newArrayList();,if (Lists != null ) this.explicitImports = Lists.newArrayList();
JavaWriter.java,TypeWriter currentType = declaredTypes.pop();,if (declaredTypes != null ) TypeWriter currentType = declaredTypes.pop();
JavaWriter.java,ImmutableSet<String> declaredSimpleNames = declaredSimpleNamesBuilder.build();,if (declaredSimpleNamesBuilder != null ) ImmutableSet<String> declaredSimpleNames = declaredSimpleNamesBuilder.build();
JavaWriter.java,importCandidate = importCandidate.get().enclosingClassName();,if (importCandidate != null ) importCandidate = importCandidate.get().enclosingClassName();
JavaWriter.java,Closer closer = Closer.create();,if (Closer != null ) Closer closer = Closer.create();
JavaWriter.java,Optional<ClassName> enclosingClassName = className.enclosingClassName();,if (className != null ) Optional<ClassName> enclosingClassName = className.enclosingClassName();
JavaWriter.java,enclosingClassName = enclosingClassName.get().enclosingClassName();,if (enclosingClassName != null ) enclosingClassName = enclosingClassName.get().enclosingClassName();
JavaWriter.java,String compressed = name.substring(packagePrefix.length());,if (name != null ) String compressed = name.substring(packagePrefix.length());
JavaWriter.java,Iterator<String> iterator = names.iterator();,if (names != null ) Iterator<String> iterator = names.iterator();
JavaWriter.java,String name = iterator.next();,if (iterator != null ) String name = iterator.next();
JavaWriter.java,Object value = entry.getValue();,if (entry != null ) Object value = entry.getValue();
JavaWriter.java,Scope popped = scopes.pop();,if (scopes != null ) Scope popped = scopes.pop();
ClassWriter.java,this.fieldWriters = Maps.newLinkedHashMap();,if (Maps != null ) this.fieldWriters = Maps.newLinkedHashMap();
TypeWriter.java,nestedTypeWriters = Lists.newArrayList();,if (Lists != null ) nestedTypeWriters = Lists.newArrayList();
ClassWriter.java,this.nestedTypeWriters = Lists.newArrayList();,if (Lists != null ) this.nestedTypeWriters = Lists.newArrayList();
InterfaceWriter.java,this.nestedTypeWriters = Lists.newArrayList();,if (Lists != null ) this.nestedTypeWriters = Lists.newArrayList();
ClassWriter.java,this.fieldWriters = Lists.newArrayList();,if (Lists != null ) this.fieldWriters = Lists.newArrayList();
ClassWriter.java,this.methodWriters = Lists.newArrayList();,if (Lists != null ) this.methodWriters = Lists.newArrayList();
InterfaceWriter.java,this.methodWriters = Lists.newArrayList();,if (Lists != null ) this.methodWriters = Lists.newArrayList();
JavaWriter.java,Scope beginScope = scopes.getFirst();,if (scopes != null ) Scope beginScope = scopes.getFirst();
JavaWriter.java,final String name = iterator.next();,if (iterator != null ) final String name = iterator.next();
JavaWriter.java,Scope scope = scopes.peekFirst();,if (scopes != null ) Scope scope = scopes.peekFirst();
JavaWriter.java,Object value = entry.getValue();,if (entry != null ) Object value = entry.getValue();
MavenWrapperDownloader.java,rbc = Channels.newChannel(website.openStream());,if (Channels != null ) rbc = Channels.newChannel(website.openStream());
MavenWrapperDownloader.java,rbc = Channels.newChannel(website.openStream());,if (Channels != null ) rbc = Channels.newChannel(website.openStream());
_WebConfigurerTest.java,Builder builder = Undertow.builder();,if (Undertow != null ) Builder builder = Undertow.builder();
_AuditEventConverter.java,Object object = entry.getValue();,if (entry != null ) Object object = entry.getValue();
_CassandraConfiguration.java,String points = properties.getContactPoints();,if (properties != null ) String points = properties.getContactPoints();
_CustomAuditEventRepository.java,persistentAuditEvents = persistenceAuditEventRepository.findAll();,if (persistenceAuditEventRepository != null ) persistentAuditEvents = persistenceAuditEventRepository.findAll();
_UserResourceIntTest.java,User updatedUser = userRepository.findOne(user.getId());,if (userRepository != null ) User updatedUser = userRepository.findOne(user.getId());
_UserResourceIntTest.java,User updatedUser = userRepository.findOne(user.getId());,if (userRepository != null ) User updatedUser = userRepository.findOne(user.getId());
_UserResourceIntTest.java,User updatedUser = userRepository.findOne(user.getId());,if (userRepository != null ) User updatedUser = userRepository.findOne(user.getId());
_UserResourceIntTest.java,User updatedUser = userRepository.findOne(user.getId());,if (userRepository != null ) User updatedUser = userRepository.findOne(user.getId());
_CustomSocialConnectionRepository.java,"SocialUserConnection socialUserConnectionToUdpate =  connectionToUserSocialConnection(connection, socialUserConnection.getRank());","if (socialUserConnection != null ) SocialUserConnection socialUserConnectionToUdpate =  connectionToUserSocialConnection(connection, socialUserConnection.getRank());"
_EntityRepository.java,BoundStatement stmt = findAllStmt.bind();,if (findAllStmt != null ) BoundStatement stmt = findAllStmt.bind();
_EntityRepository.java,BoundStatement stmt = truncateStmt.bind();,if (truncateStmt != null ) BoundStatement stmt = truncateStmt.bind();
_RateLimitingFilter.java,String login = SecurityUtils.getCurrentUserLogin();,if (SecurityUtils != null ) String login = SecurityUtils.getCurrentUserLogin();
_SecurityUtils.java,Authentication authentication = securityContext.getAuthentication();,if (securityContext != null ) Authentication authentication = securityContext.getAuthentication();
_SecurityUtils.java,UserDetails springSecurityUser = (UserDetails) authentication.getPrincipal();,if (authentication != null ) UserDetails springSecurityUser = (UserDetails) authentication.getPrincipal();
_SecurityUtils.java,userName = springSecurityUser.getUsername();,if (springSecurityUser != null ) userName = springSecurityUser.getUsername();
_SecurityUtils.java,userName = (String) authentication.getPrincipal();,if (authentication != null ) userName = (String) authentication.getPrincipal();
_SecurityUtils.java,Authentication authentication = securityContext.getAuthentication();,if (securityContext != null ) Authentication authentication = securityContext.getAuthentication();
_SecurityUtils.java,Authentication authentication = securityContext.getAuthentication();,if (securityContext != null ) Authentication authentication = securityContext.getAuthentication();
_SecurityUtils.java,Authentication authentication = securityContext.getAuthentication();,if (securityContext != null ) Authentication authentication = securityContext.getAuthentication();
_SpringSecurityAuditorAware.java,String userName = SecurityUtils.getCurrentUserLogin();,if (SecurityUtils != null ) String userName = SecurityUtils.getCurrentUserLogin();
_AccountResource.java,final String userLogin = SecurityUtils.getCurrentUserLogin();,if (SecurityUtils != null ) final String userLogin = SecurityUtils.getCurrentUserLogin();
_SecurityUtilsUnitTest.java,String login = SecurityUtils.getCurrentUserLogin();,if (SecurityUtils != null ) String login = SecurityUtils.getCurrentUserLogin();
_SecurityUtilsUnitTest.java,String jwt = SecurityUtils.getCurrentUserJWT();,if (SecurityUtils != null ) String jwt = SecurityUtils.getCurrentUserJWT();
_AccountResource.java,Optional<User> existingUser = userRepository.findOneByLogin(userDTO.getLogin());,if (userRepository != null ) Optional<User> existingUser = userRepository.findOneByLogin(userDTO.getLogin());
_AccountResource.java,Instant dbModifiedDate = existingUser.get().getLastModifiedDate();,if (existingUser != null ) Instant dbModifiedDate = existingUser.get().getLastModifiedDate();
_UserService.java,String encryptedPassword = passwordEncoder.encode(userDTO.getPassword());,if (passwordEncoder != null ) String encryptedPassword = passwordEncoder.encode(userDTO.getPassword());
_UserResource.java,Optional<User> existingUser = userRepository.findOneByEmailIgnoreCase(managedUserVM.getEmail());,if (userRepository != null ) Optional<User> existingUser = userRepository.findOneByEmailIgnoreCase(managedUserVM.getEmail());
_UserServiceIntTest.java,int existingCount = persistentTokenRepository.findByUser(admin).size();,if (persistentTokenRepository != null ) int existingCount = persistentTokenRepository.findByUser(admin).size();
_UserServiceIntTest.java,LocalDate now = LocalDate.now();,if (LocalDate != null ) LocalDate now = LocalDate.now();
_AccountResource.java,Optional<User> user = Optional.ofNullable(userService.getUserWithAuthorities());,if (Optional != null ) Optional<User> user = Optional.ofNullable(userService.getUserWithAuthorities());
_AccountResource.java,Optional<User> user = Optional.ofNullable(userService.getUserWithAuthorities());,if (Optional != null ) Optional<User> user = Optional.ofNullable(userService.getUserWithAuthorities());
_AccountResource.java,Optional<User> user = userRepository.findOneByLogin(SecurityUtils.getCurrentUserLogin());,if (userRepository != null ) Optional<User> user = userRepository.findOneByLogin(SecurityUtils.getCurrentUserLogin());
_AccountResource.java,final String userLogin = SecurityUtils.getCurrentUserLogin();,if (SecurityUtils != null ) final String userLogin = SecurityUtils.getCurrentUserLogin();
_AccountResource.java,Optional<User> existingUser = userRepository.findOneByEmailIgnoreCase(userDTO.getEmail());,if (userRepository != null ) Optional<User> existingUser = userRepository.findOneByEmailIgnoreCase(userDTO.getEmail());
_CookieCollectionTest.java,Iterator<Cookie> it=cookies.iterator();,if (it=cookies != null ) Iterator<Cookie> it=cookies.iterator();
_AccountResource.java,final String userLogin = SecurityUtils.getCurrentUserLogin();,if (SecurityUtils != null ) final String userLogin = SecurityUtils.getCurrentUserLogin();
_AccountResource.java,Optional<User> existingUser = userRepository.findOneByEmailIgnoreCase(userDTO.getEmail());,if (userRepository != null ) Optional<User> existingUser = userRepository.findOneByEmailIgnoreCase(userDTO.getEmail());
_EntityMapper.java,Optional<User> existingUser = userRepository.findOneByLogin(userDTO.getLogin());,if (userRepository != null ) Optional<User> existingUser = userRepository.findOneByLogin(userDTO.getLogin());
_EntityMapper.java,Instant dbModifiedDate = existingUser.get().getLastModifiedDate();,if (existingUser != null ) Instant dbModifiedDate = existingUser.get().getLastModifiedDate();
_EntityMapper.java,final String userLogin = SecurityUtils.getCurrentUserLogin();,if (SecurityUtils != null ) final String userLogin = SecurityUtils.getCurrentUserLogin();
_EntityMapper.java,Optional<User> existingUser = userRepository.findOneByEmailIgnoreCase(userDTO.getEmail());,if (userRepository != null ) Optional<User> existingUser = userRepository.findOneByEmailIgnoreCase(userDTO.getEmail());
_AccountResource.java,Optional<User> existingUser = userRepository.findOneByLogin(userDTO.getLogin());,if (userRepository != null ) Optional<User> existingUser = userRepository.findOneByLogin(userDTO.getLogin());
_AccountResource.java,Instant dbModifiedDate = existingUser.get().getLastModifiedDate();,if (existingUser != null ) Instant dbModifiedDate = existingUser.get().getLastModifiedDate();
_AccountResource.java,final String userLogin = SecurityUtils.getCurrentUserLogin();,if (SecurityUtils != null ) final String userLogin = SecurityUtils.getCurrentUserLogin();
_AccountResource.java,Optional<User> existingUser = userRepository.findOneByEmailIgnoreCase(userDTO.getEmail());,if (userRepository != null ) Optional<User> existingUser = userRepository.findOneByEmailIgnoreCase(userDTO.getEmail());
_AccountResource.java,Optional<User> existingUser = userRepository.findOneByLogin(userDTO.getLogin());,if (userRepository != null ) Optional<User> existingUser = userRepository.findOneByLogin(userDTO.getLogin());
_AccountResource.java,Instant dbModifiedDate = existingUser.get().getLastModifiedDate();,if (existingUser != null ) Instant dbModifiedDate = existingUser.get().getLastModifiedDate();
_AccountResource.java,final String userLogin = SecurityUtils.getCurrentUserLogin();,if (SecurityUtils != null ) final String userLogin = SecurityUtils.getCurrentUserLogin();
_AccountResource.java,Optional<User> existingUser = userRepository.findOneByEmailIgnoreCase(userDTO.getEmail());,if (userRepository != null ) Optional<User> existingUser = userRepository.findOneByEmailIgnoreCase(userDTO.getEmail());
_AccountResourceIntTest.java,this.restUserMockMvc = MockMvcBuilders.standaloneSetup(accountUserMockResource).build();,if (MockMvcBuilders != null ) this.restUserMockMvc = MockMvcBuilders.standaloneSetup(accountUserMockResource).build();
_AccountResource.java,Optional<User> existingUser = userRepository.findOneByEmail(userDTO.getEmail());,if (userRepository != null ) Optional<User> existingUser = userRepository.findOneByEmail(userDTO.getEmail());
_UserResource.java,Optional<User> existingUser = userRepository.findOneByEmail(managedUserVM.getEmail());,if (userRepository != null ) Optional<User> existingUser = userRepository.findOneByEmail(managedUserVM.getEmail());
_UserResource.java,Optional<User> existingUser = userRepository.findOneByEmail(managedUserVM.getEmail());,if (userRepository != null ) Optional<User> existingUser = userRepository.findOneByEmail(managedUserVM.getEmail());
_UaaConfiguration.java,int accessTokenValidity = uaaProperties.getWebClientConfiguration().getAccessTokenValidityInSeconds();,if (uaaProperties != null ) int accessTokenValidity = uaaProperties.getWebClientConfiguration().getAccessTokenValidityInSeconds();
_UaaConfiguration.java,int refreshTokenValidity = uaaProperties.getWebClientConfiguration().getRefreshTokenValidityInSecondsForRememberMe();,if (uaaProperties != null ) int refreshTokenValidity = uaaProperties.getWebClientConfiguration().getRefreshTokenValidityInSecondsForRememberMe();
_OAuth2JwtAccessTokenConverter.java,long t = System.currentTimeMillis();,if (System != null ) long t = System.currentTimeMillis();
_OAuth2JwtAccessTokenConverter.java,SignatureVerifier verifier = signatureVerifierClient.getSignatureVerifier();,if (signatureVerifierClient != null ) SignatureVerifier verifier = signatureVerifierClient.getSignatureVerifier();
_CustomAuditEventRepository.java,String value = entry.getValue();,if (entry != null ) String value = entry.getValue();
_CustomAuditEventRepository.java,int length = value.length();,if (value != null ) int length = value.length();
_CookieCollection.java,cookieMap = new HashMap<>(cookies.size());,if (HashMap<>(cookies != null ) cookieMap = new HashMap<>(cookies.size());
_CookieTokenExtractor.java,result = accessTokenCookie.getValue();,if (accessTokenCookie != null ) result = accessTokenCookie.getValue();
_OAuth2AuthenticationService.java,CookieCollection requestCookies = new CookieCollection(request.getCookies());,if (CookieCollection(request != null ) CookieCollection requestCookies = new CookieCollection(request.getCookies());
_OAuth2AuthenticationService.java,Cookie[] cookies = cookieHelper.stripCookies(httpServletRequest.getCookies());,if (cookieHelper != null ) Cookie[] cookies = cookieHelper.stripCookies(httpServletRequest.getCookies());
_OAuth2CookieHelper.java,private JsonParser jsonParser = JsonParserFactory.getJsonParser();,if (JsonParserFactory != null ) private JsonParser jsonParser = JsonParserFactory.getJsonParser();
_OAuth2CookieHelper.java,String value = cookie.getValue();,if (cookie != null ) String value = cookie.getValue();
_OAuth2CookieHelper.java,String value = refreshToken.getValue();,if (refreshToken != null ) String value = refreshToken.getValue();
_OAuth2CookieHelper.java,String value = refreshCookie.getValue();,if (refreshCookie != null ) String value = refreshCookie.getValue();
_OAuth2CookieHelper.java,String claims = jwt.getClaims();,if (jwt != null ) String claims = jwt.getClaims();
_OAuth2CookieHelper.java,domain = request.getServerName().toLowerCase();,if (request != null ) domain = request.getServerName().toLowerCase();
_AccountResource.java,Optional<User> existingUser = userRepository.findOneByEmailIgnoreCase(userDTO.getEmail());,if (userRepository != null ) Optional<User> existingUser = userRepository.findOneByEmailIgnoreCase(userDTO.getEmail());
_UserResource.java,Optional<User> existingUser = userRepository.findOneByEmailIgnoreCase(managedUserVM.getEmail());,if (userRepository != null ) Optional<User> existingUser = userRepository.findOneByEmailIgnoreCase(managedUserVM.getEmail());
_CustomAuditEventRepositoryIntTest.java,List<PersistentAuditEvent> persistentAuditEvents = persistenceAuditEventRepository.findAll();,if (persistenceAuditEventRepository != null ) List<PersistentAuditEvent> persistentAuditEvents = persistenceAuditEventRepository.findAll();
_CookieCollectionTest.java,Iterator<Cookie> it=cookies.iterator();,if (it=cookies != null ) Iterator<Cookie> it=cookies.iterator();
_OAuth2AuthenticationServiceTest.java,public ExpectedException expectedException = ExpectedException.none();,if (ExpectedException != null ) public ExpectedException expectedException = ExpectedException.none();
_OAuth2AuthenticationServiceTest.java,CookieCollection cookies = new CookieCollection(newRequest.getCookies());,if (CookieCollection(newRequest != null ) CookieCollection cookies = new CookieCollection(newRequest.getCookies());
_MongoDBClientDetailsService.java,private PasswordEncoder passwordEncoder = NoOpPasswordEncoder.getInstance();,if (NoOpPasswordEncoder != null ) private PasswordEncoder passwordEncoder = NoOpPasswordEncoder.getInstance();
_OAuth2AuthenticationReadConverter.java,Set<GrantedAuthority> grantedAuthorities = new HashSet<>(authorities.size());,if (HashSet<>(authorities != null ) Set<GrantedAuthority> grantedAuthorities = new HashSet<>(authorities.size());
_OAuth2AuthenticationAccessToken.java,this.id = UUID.randomUUID().toString();,if (UUID != null ) this.id = UUID.randomUUID().toString();
_OAuth2AuthenticationAccessToken.java,this.userName = authentication.getName();,if (authentication != null ) this.userName = authentication.getName();
_OAuth2AuthenticationApproval.java,this.id = UUID.randomUUID().toString();,if (UUID != null ) this.id = UUID.randomUUID().toString();
_OAuth2AuthenticationClientDetails.java,this.id = UUID.randomUUID().toString();,if (UUID != null ) this.id = UUID.randomUUID().toString();
_OAuth2AuthenticationCode.java,this.id = UUID.randomUUID().toString();,if (UUID != null ) this.id = UUID.randomUUID().toString();
_OAuth2AuthenticationRefreshToken.java,this.id = UUID.randomUUID().toString();,if (UUID != null ) this.id = UUID.randomUUID().toString();
_UserFeignClientInterceptor.java,SecurityContext securityContext = SecurityContextHolder.getContext();,if (SecurityContextHolder != null ) SecurityContext securityContext = SecurityContextHolder.getContext();
_UserFeignClientInterceptor.java,Authentication authentication = securityContext.getAuthentication();,if (securityContext != null ) Authentication authentication = securityContext.getAuthentication();
_AccountResource.java,Optional<User> existingUser = userRepository.findOneByEmail(userDTO.getEmail());,if (userRepository != null ) Optional<User> existingUser = userRepository.findOneByEmail(userDTO.getEmail());
_UserResource.java,Optional<User> existingUser = userRepository.findOneByEmail(managedUserVM.getEmail());,if (userRepository != null ) Optional<User> existingUser = userRepository.findOneByEmail(managedUserVM.getEmail());
_CustomAuditEventRepository.java,int length = value.length();,if (value != null ) int length = value.length();
_ExceptionTranslator.java,BindingResult result = ex.getBindingResult();,if (ex != null ) BindingResult result = ex.getBindingResult();
_ExceptionTranslator.java,List<FieldError> fieldErrors = result.getFieldErrors();,if (result != null ) List<FieldError> fieldErrors = result.getFieldErrors();
_ExceptionTranslator.java,builder = ResponseEntity.status(responseStatus.value());,if (ResponseEntity != null ) builder = ResponseEntity.status(responseStatus.value());
_PersistentTokenRememberMeServices.java,login = token.getUser().getLogin();<%}%><% if (databaseType === 'cassandra') { %>,if (%> != null ) login = token.getUser().getLogin();<%}%><% if (databaseType === 'cassandra') { %>
_WebsocketConfiguration.java,Principal principal = request.getPrincipal();,if (request != null ) Principal principal = request.getPrincipal();
_PersistentTokenRememberMeServices.java,login = token.getUser().getLogin();<%}%><% if (databaseType == 'cassandra') { %>,if (%> != null ) login = token.getUser().getLogin();<%}%><% if (databaseType == 'cassandra') { %>
_MailService.java,Locale locale = Locale.forLanguageTag(user.getLangKey());,if (Locale != null ) Locale locale = Locale.forLanguageTag(user.getLangKey());
_MailService.java,Locale locale = Locale.forLanguageTag(user.getLangKey());,if (Locale != null ) Locale locale = Locale.forLanguageTag(user.getLangKey());
_CacheConfiguration.java,String serviceId = registration.getServiceId();,if (registration != null ) String serviceId = registration.getServiceId();
_AccountResourceIntTest.java,this.restMvc = MockMvcBuilders.standaloneSetup(accountResource).build();,if (MockMvcBuilders != null ) this.restMvc = MockMvcBuilders.standaloneSetup(accountResource).build();
_PersistentTokenRememberMeServices.java,login = token.getUser().getLogin();<%}%><% if (databaseType == 'cassandra') { %>,if (%> != null ) login = token.getUser().getLogin();<%}%><% if (databaseType == 'cassandra') { %>
_PersistentTokenRememberMeServices.java,login = token.getLogin();<%}%>,if (token != null ) login = token.getLogin();<%}%>
_PersistentTokenRememberMeServices.java,String login = token.getUser().getLogin();<%}%><% if (databaseType == 'cassandra') { %>,if (%> != null ) String login = token.getUser().getLogin();<%}%><% if (databaseType == 'cassandra') { %>
_PersistentTokenRememberMeServices.java,String login = token.getLogin();<%}%>,if (token != null ) String login = token.getLogin();<%}%>
_AbstractAuditingEntity.java,private ZonedDateTime createdDate = ZonedDateTime.now();,if (ZonedDateTime != null ) private ZonedDateTime createdDate = ZonedDateTime.now();
_AbstractAuditingEntity.java,private ZonedDateTime lastModifiedDate = ZonedDateTime.now();,if (ZonedDateTime != null ) private ZonedDateTime lastModifiedDate = ZonedDateTime.now();
_UserService.java,ZonedDateTime now = ZonedDateTime.now();,if (ZonedDateTime != null ) ZonedDateTime now = ZonedDateTime.now();
_UserServiceIntTest.java,ZonedDateTime now = ZonedDateTime.now();,if (ZonedDateTime != null ) ZonedDateTime now = ZonedDateTime.now();
_RateLimitingFilter.java,String id = getId(RequestContext.getCurrentContext().getRequest());,if (getId(RequestContext != null ) String id = getId(RequestContext.getCurrentContext().getRequest());
_RateLimitingFilter.java,Calendar calendar = Calendar.getInstance();,if (Calendar != null ) Calendar calendar = Calendar.getInstance();
_RateLimitingRepository.java,BoundStatement stmt = rateLimitingIncrement.bind();,if (rateLimitingIncrement != null ) BoundStatement stmt = rateLimitingIncrement.bind();
_RateLimitingRepository.java,BoundStatement stmt = rateLimitingCount.bind();,if (rateLimitingCount != null ) BoundStatement stmt = rateLimitingCount.bind();
_CustomZonedDateTimeCodec.java,long millis = value.toInstant().toEpochMilli();,if (value != null ) long millis = value.toInstant().toEpochMilli();
_RateLimitingFilter.java,String id = getId(RequestContext.getCurrentContext().getRequest());,if (getId(RequestContext != null ) String id = getId(RequestContext.getCurrentContext().getRequest());
_RateLimitingFilter.java,Calendar calendar = Calendar.getInstance();,if (Calendar != null ) Calendar calendar = Calendar.getInstance();
_RateLimitingRepository.java,BoundStatement stmt = rateLimitingIncrement.bind();,if (rateLimitingIncrement != null ) BoundStatement stmt = rateLimitingIncrement.bind();
_RateLimitingRepository.java,BoundStatement stmt = rateLimitingCount.bind();,if (rateLimitingCount != null ) BoundStatement stmt = rateLimitingCount.bind();
_CacheConfiguration.java,String serviceId = discoveryClient.getLocalServiceInstance().getServiceId();,if (discoveryClient != null ) String serviceId = discoveryClient.getLocalServiceInstance().getServiceId();
_UserResourceIntTest.java,int databaseSizeBeforeUpdate = userRepository.findAll().size();,if (userRepository != null ) int databaseSizeBeforeUpdate = userRepository.findAll().size();
_UserResourceIntTest.java,int databaseSizeBeforeUpdate = userRepository.findAll().size();,if (userRepository != null ) int databaseSizeBeforeUpdate = userRepository.findAll().size();
_DatabaseConfiguration.java,Mongobee mongobee = new Mongobee(mongoProperties.getUri());,if (Mongobee(mongoProperties != null ) Mongobee mongobee = new Mongobee(mongoProperties.getUri());
_UserResourceIntTest.java,this.restUserMockMvc = MockMvcBuilders.standaloneSetup(userResource).build();,if (MockMvcBuilders != null ) this.restUserMockMvc = MockMvcBuilders.standaloneSetup(userResource).build();
_CassandraKeyspaceUnitTest.java,KeyspaceMetadata metadata = session.getCluster().getMetadata();,if (session != null ) KeyspaceMetadata metadata = session.getCluster().getMetadata();
_ManagedUserVM.java,this.id = user.getId();<% if (databaseType == 'mongodb' || databaseType == 'sql') { %>,if (%> != null ) this.id = user.getId();<% if (databaseType == 'mongodb' || databaseType == 'sql') { %>
_ManagedUserVM.java,this.createdBy = user.getCreatedBy();,if (user != null ) this.createdBy = user.getCreatedBy();
_ManagedUserVM.java,this.createdDate = user.getCreatedDate();,if (user != null ) this.createdDate = user.getCreatedDate();
_ManagedUserVM.java,this.lastModifiedBy = user.getLastModifiedBy();,if (user != null ) this.lastModifiedBy = user.getLastModifiedBy();
_ManagedUserVM.java,this.lastModifiedDate = user.getLastModifiedDate();<% } %>,if (%> != null ) this.lastModifiedDate = user.getLastModifiedDate();<% } %>
_EntityRepository.java,BoundStatement stmt = findAllStmt.bind();,if (findAllStmt != null ) BoundStatement stmt = findAllStmt.bind();
_EntityRepository.java,BoundStatement stmt = truncateStmt.bind();,if (truncateStmt != null ) BoundStatement stmt = truncateStmt.bind();
_SpectatorLogMetricWriter.java,String metricContent = metric.getName();,if (metric != null ) String metricContent = metric.getName();
_UserResource.java,List<User> users = userRepository.findAll();,if (userRepository != null ) List<User> users = userRepository.findAll();
_UserService.java,Optional<User> optionalUser = userRepository.findOneByLogin(SecurityUtils.getCurrentUserLogin());,if (userRepository != null ) Optional<User> optionalUser = userRepository.findOneByLogin(SecurityUtils.getCurrentUserLogin());
_UserService.java,user = optionalUser.get();,if (optionalUser != null ) user = optionalUser.get();
_PageableParameterBuilderPlugin.java,ResolvedMethodParameter parameter = context.resolvedMethodParameter();,if (context != null ) ResolvedMethodParameter parameter = context.resolvedMethodParameter();
_WebConfigurer.java,CorsConfiguration config = applicationProperties.getCors();,if (applicationProperties != null ) CorsConfiguration config = applicationProperties.getCors();
_ProfileInfoResource.java,String[] displayOnActiveProfiles = applicationProperties.getRibbon().getDisplayOnActiveProfiles();,if (applicationProperties != null ) String[] displayOnActiveProfiles = applicationProperties.getRibbon().getDisplayOnActiveProfiles();
_LoggingAspect.java,Object result = joinPoint.proceed();,if (joinPoint != null ) Object result = joinPoint.proceed();
_WebConfigurer.java,CorsConfiguration config = jHipsterProperties.getCors();,if (jHipsterProperties != null ) CorsConfiguration config = jHipsterProperties.getCors();
_JCacheGaugeSet.java,ObjectName objectName = objectInstance.getObjectName();,if (objectInstance != null ) ObjectName objectName = objectInstance.getObjectName();
_AngularCookieLocaleResolver.java,String value = cookie.getValue();,if (cookie != null ) String value = cookie.getValue();
_ProfileInfoResource.java,String[] displayOnActiveProfiles = jHipsterProperties.getRibbon().getDisplayOnActiveProfiles();,if (jHipsterProperties != null ) String[] displayOnActiveProfiles = jHipsterProperties.getRibbon().getDisplayOnActiveProfiles();
_EntityRepository.java,BoundStatement stmt =  findAllStmt.bind();,if (findAllStmt != null ) BoundStatement stmt =  findAllStmt.bind();
_EntityRepository.java,BoundStatement stmt =  truncateStmt.bind();,if (truncateStmt != null ) BoundStatement stmt =  truncateStmt.bind();
_SecurityUtils.java,UserDetails springSecurityUser = (UserDetails) authentication.getPrincipal();,if (authentication != null ) UserDetails springSecurityUser = (UserDetails) authentication.getPrincipal();
_CacheConfiguration.java,SortedSet<String> names = metricRegistry.getNames();,if (metricRegistry != null ) SortedSet<String> names = metricRegistry.getNames();
_CacheConfiguration.java,cacheManager = net.sf.ehcache.CacheManager.create();,if (net != null ) cacheManager = net.sf.ehcache.CacheManager.create();
_AbstractCassandraTest.java,Session session = cluster.connect();,if (cluster != null ) Session session = cluster.connect();
_MailService.java,String baseUrl = jHipsterProperties.getMail().getBaseUrl();,if (jHipsterProperties != null ) String baseUrl = jHipsterProperties.getMail().getBaseUrl();
_AccountResource.java,String baseUrl = jHipsterProperties.getMail().getBaseUrl();,if (jHipsterProperties != null ) String baseUrl = jHipsterProperties.getMail().getBaseUrl();
_HazelcastCacheRegionFactory.java,hazelcastInstance = CacheConfiguration.getHazelcastInstance();,if (CacheConfiguration != null ) hazelcastInstance = CacheConfiguration.getHazelcastInstance();
_HazelcastCacheRegionFactory.java,cleanupService = new CleanupService(hazelcastInstance.getName());,if (CleanupService(hazelcastInstance != null ) cleanupService = new CleanupService(hazelcastInstance.getName());
_PageableParameterBuilderPlugin.java,MethodParameter parameter = context.methodParameter();,if (context != null ) MethodParameter parameter = context.methodParameter();
_CsrfCookieGeneratorFilter.java,"Cookie cookie = new Cookie(pCookieName, csrfToken.getToken());","if (csrfToken != null ) Cookie cookie = new Cookie(pCookieName, csrfToken.getToken());"
_CacheConfiguration.java,String name = entity.getName();,if (entity != null ) String name = entity.getName();
_CacheConfiguration.java,name = entity.getJavaType().getName();,if (entity != null ) name = entity.getJavaType().getName();
_PageableParameterBuilderPlugin.java,ResolvedMethodParameter parameter = context.resolvedMethodParameter();,if (context != null ) ResolvedMethodParameter parameter = context.resolvedMethodParameter();
_PageableParameterBuilderPlugin.java,MethodParameter parameter = context.methodParameter();,if (context != null ) MethodParameter parameter = context.methodParameter();
_UserService.java,user = optionalUser.get();,if (optionalUser != null ) user = optionalUser.get();
_UserService.java,Optional<User> optionalUser = userRepository.findOneByLogin(SecurityUtils.getCurrentUserLogin());,if (userRepository != null ) Optional<User> optionalUser = userRepository.findOneByLogin(SecurityUtils.getCurrentUserLogin());
_ProfileInfoResource.java,String[] activeProfiles = env.getActiveProfiles();,if (env != null ) String[] activeProfiles = env.getActiveProfiles();
_WithMockedOAuthUserSecurityContextFactory.java,String username = withClient.username();,if (withClient != null ) String username = withClient.username();
_WithMockedOAuthUserSecurityContextFactory.java,String clientId = withClient.clientId();,if (withClient != null ) String clientId = withClient.clientId();
_WithMockedOAuthUserSecurityContextFactory.java,String[] scopes = withClient.scope();,if (withClient != null ) String[] scopes = withClient.scope();
_WithMockedOAuthUserSecurityContextFactory.java,SecurityContext context = SecurityContextHolder.createEmptyContext();,if (SecurityContextHolder != null ) SecurityContext context = SecurityContextHolder.createEmptyContext();
_AbstractCassandraTest.java,String fileName = entry.getFileName().toString();,if (entry != null ) String fileName = entry.getFileName().toString();
_UserResource.java,Optional<User> existingUser = userRepository.findOneByEmail(managedUserDTO.getEmail());,if (userRepository != null ) Optional<User> existingUser = userRepository.findOneByEmail(managedUserDTO.getEmail());
_UserResource.java,Set<Authority> authorities = user.getAuthorities();,if (user != null ) Set<Authority> authorities = user.getAuthorities();
_JSR310LocalDateDeserializer.java,int year = parser.getIntValue();,if (parser != null ) int year = parser.getIntValue();
_JSR310LocalDateDeserializer.java,int month = parser.getIntValue();,if (parser != null ) int month = parser.getIntValue();
_JSR310LocalDateDeserializer.java,int day = parser.getIntValue();,if (parser != null ) int day = parser.getIntValue();
_JSR310LocalDateDeserializer.java,String string = parser.getText().trim();,if (parser != null ) String string = parser.getText().trim();
_LoadBalancedResourceDetails.java,Logger log = LoggerFactory.getLogger(this.getClass());,if (LoggerFactory != null ) Logger log = LoggerFactory.getLogger(this.getClass());
_Application.java,Collection<String> activeProfiles = Arrays.asList(env.getActiveProfiles());,if (Arrays != null ) Collection<String> activeProfiles = Arrays.asList(env.getActiveProfiles());
_ProfileInfoResource.java,String[] activeProfiles = env.getActiveProfiles();,if (env != null ) String[] activeProfiles = env.getActiveProfiles();
_ProfileInfoResource.java,String[] displayOnActiveProfiles = jHipsterProperties.getRibbon().getDisplayOnActiveProfiles();,if (jHipsterProperties != null ) String[] displayOnActiveProfiles = jHipsterProperties.getRibbon().getDisplayOnActiveProfiles();
_ActiveProfilesResource.java,String[] activeProfiles = env.getActiveProfiles();,if (env != null ) String[] activeProfiles = env.getActiveProfiles();
_ActiveProfilesResource.java,String[] displayOnActiveProfiles = jHipsterProperties.getRibbon().getDisplayOnActiveProfiles();,if (jHipsterProperties != null ) String[] displayOnActiveProfiles = jHipsterProperties.getRibbon().getDisplayOnActiveProfiles();
_TokenProvider.java,String principal = claims.getSubject();,if (claims != null ) String principal = claims.getSubject();
_SocialServiceIntTest.java,long initialUserCount = userRepository.count();,if (userRepository != null ) long initialUserCount = userRepository.count();
_SocialService.java,String userName = userProfile.getUsername();,if (userProfile != null ) String userName = userProfile.getUsername();
_User.java,this.login = login.toLowerCase();,if (login != null ) this.login = login.toLowerCase();
_UserDetailsService.java,String lowercaseLogin = login.toLowerCase();,if (login != null ) String lowercaseLogin = login.toLowerCase();
_UserResource.java,existingUser = userRepository.findOneByLogin(managedUserDTO.getLogin());,if (userRepository != null ) existingUser = userRepository.findOneByLogin(managedUserDTO.getLogin());
_LogMetricWriter.java,String metricName = metric.getName();,if (metric != null ) String metricName = metric.getName();
_AccessControlFilter.java,String serviceUrl = route.getKey();,if (route != null ) String serviceUrl = route.getKey();
_AccessControlFilter.java,String serviceName = route.getValue();,if (route != null ) String serviceName = route.getValue();
_WebConfigurer.java,CorsConfiguration config = props.getCors();,if (props != null ) CorsConfiguration config = props.getCors();
_SwaggerBasePathRewritingFilterTest.java,RequestContext context = RequestContext.getCurrentContext();,if (RequestContext != null ) RequestContext context = RequestContext.getCurrentContext();
_StaticResourcesProductionFilter.java,String requestURI = httpRequest.getRequestURI();,if (httpRequest != null ) String requestURI = httpRequest.getRequestURI();
_AuthenticationProvider.java,String login = token.getName();,if (token != null ) String login = token.getName();
_AuthenticationProvider.java,String password = user.getPassword();,if (user != null ) String password = user.getPassword();
_AuthenticationProvider.java,String tokenPassword = (String) token.getCredentials();,if (token != null ) String tokenPassword = (String) token.getCredentials();
_CustomAuditEventRepository.java,persistentAuditEvents = persistenceAuditEventRepository.findAll();,if (persistenceAuditEventRepository != null ) persistentAuditEvents = persistenceAuditEventRepository.findAll();
_SecurityUtils.java,SecurityContext securityContext = SecurityContextHolder.getContext();,if (SecurityContextHolder != null ) SecurityContext securityContext = SecurityContextHolder.getContext();
_SecurityUtils.java,Authentication authentication = securityContext.getAuthentication();,if (securityContext != null ) Authentication authentication = securityContext.getAuthentication();
_AuditResourceIntTest.java,this.restAuditMockMvc = MockMvcBuilders.standaloneSetup(auditResource).build();,if (MockMvcBuilders != null ) this.restAuditMockMvc = MockMvcBuilders.standaloneSetup(auditResource).build();
_AccountResource.java,Optional<User> oUser=userRepository.findOneByEmail(userDTO.getEmail());,if (oUser=userRepository != null ) Optional<User> oUser=userRepository.findOneByEmail(userDTO.getEmail());
_UserResource.java,Optional<User> oUser=userRepository.findOneByEmail(managedUserDTO.getEmail());,if (oUser=userRepository != null ) Optional<User> oUser=userRepository.findOneByEmail(managedUserDTO.getEmail());
_UserResource.java,Set<Authority> authorities = user.getAuthorities();,if (user != null ) Set<Authority> authorities = user.getAuthorities();
_UserResource.java,Set<Authority> authorities = user.getAuthorities();,if (user != null ) Set<Authority> authorities = user.getAuthorities();
_CassandraAutoConfiguration.java,this.cluster = this.properties.createCluster();,if (this != null ) this.cluster = this.properties.createCluster();
_CassandraProperties.java,private String compression = ProtocolOptions.Compression.NONE.name();,if (ProtocolOptions != null ) private String compression = ProtocolOptions.Compression.NONE.name();
_CassandraProperties.java,ArrayList<Object> paramList = Lists.newArrayList();,if (Lists != null ) ArrayList<Object> paramList = Lists.newArrayList();
_CassandraProperties.java,ArrayList<Class> primaryParametersClasses = Lists.newArrayList();,if (Lists != null ) ArrayList<Class> primaryParametersClasses = Lists.newArrayList();
_CassandraProperties.java,policy = (LoadBalancingPolicy) clazz.newInstance();,if (clazz != null ) policy = (LoadBalancingPolicy) clazz.newInstance();
_CassandraProperties.java,policy = (LoadBalancingPolicy) clazz.newInstance();,if (clazz != null ) policy = (LoadBalancingPolicy) clazz.newInstance();
_CassandraProperties.java,ArrayList<Object> paramList = Lists.newArrayList();,if (Lists != null ) ArrayList<Object> paramList = Lists.newArrayList();
_CassandraProperties.java,ArrayList<Class> primaryParametersClasses = Lists.newArrayList();,if (Lists != null ) ArrayList<Class> primaryParametersClasses = Lists.newArrayList();
_CassandraProperties.java,policy = (ReconnectionPolicy) clazz.newInstance();,if (clazz != null ) policy = (ReconnectionPolicy) clazz.newInstance();
_CassandraProperties.java,policy = (ReconnectionPolicy) clazz.newInstance();,if (clazz != null ) policy = (ReconnectionPolicy) clazz.newInstance();
_CassandraProperties.java,ConsistencyLevel consistencyLevel = ConsistencyLevel.valueOf(this.getConsistency());,if (ConsistencyLevel != null ) ConsistencyLevel consistencyLevel = ConsistencyLevel.valueOf(this.getConsistency());
_CassandraProperties.java,ConsistencyLevel serialConsistencyLevel = ConsistencyLevel.valueOf(this.getSerialConsistency());,if (ConsistencyLevel != null ) ConsistencyLevel serialConsistencyLevel = ConsistencyLevel.valueOf(this.getSerialConsistency());
_SpringSecurityAuditorAware.java,String userName = SecurityUtils.getCurrentLogin();,if (SecurityUtils != null ) String userName = SecurityUtils.getCurrentLogin();
_SecurityUtilsTest.java,String login = SecurityUtils.getCurrentLogin();,if (SecurityUtils != null ) String login = SecurityUtils.getCurrentLogin();
_SocialService.java,final UserProfile userProfile = connection.fetchUserProfile();,if (connection != null ) final UserProfile userProfile = connection.fetchUserProfile();
_SocialService.java,final String providerId = connection.getKey().getProviderId();,if (connection != null ) final String providerId = connection.getKey().getProviderId();
_SocialService.java,final String email = userProfile.getEmail();,if (userProfile != null ) final String email = userProfile.getEmail();
_SocialService.java,final String userName = userProfile.getUsername();,if (userProfile != null ) final String userName = userProfile.getUsername();
_SocialServiceTest.java,final long initialUserCount = userRepository.count();,if (userRepository != null ) final long initialUserCount = userRepository.count();
_SocialServiceTest.java,final long initialUserCount = userRepository.count();,if (userRepository != null ) final long initialUserCount = userRepository.count();
_JSR310LocalDateDeserializer.java,int year = parser.getIntValue();,if (parser != null ) int year = parser.getIntValue();
_JSR310LocalDateDeserializer.java,int month = parser.getIntValue();,if (parser != null ) int month = parser.getIntValue();
_JSR310LocalDateDeserializer.java,int day = parser.getIntValue();,if (parser != null ) int day = parser.getIntValue();
_JSR310LocalDateDeserializer.java,String string = parser.getText().trim();,if (parser != null ) String string = parser.getText().trim();
_MongoConfiguration.java,int port = server.getLocalPort();,if (server != null ) int port = server.getLocalPort();
_CustomDateTimeDeserializer.java,JsonToken t = jp.getCurrentToken();,if (jp != null ) JsonToken t = jp.getCurrentToken();
_CustomDateTimeDeserializer.java,String str = jp.getText().trim();,if (jp != null ) String str = jp.getText().trim();
_CustomLocalDateDeserializer.java,JsonToken t = jp.getCurrentToken();,if (jp != null ) JsonToken t = jp.getCurrentToken();
_CustomLocalDateDeserializer.java,String str = jp.getText().trim();,if (jp != null ) String str = jp.getText().trim();
_AbstractAuditingEntity.java,private DateTime createdDate = DateTime.now();,if (DateTime != null ) private DateTime createdDate = DateTime.now();
_AbstractAuditingEntity.java,private DateTime lastModifiedDate = DateTime.now();,if (DateTime != null ) private DateTime lastModifiedDate = DateTime.now();
_MailConfiguration.java,String host = jHipsterProperties.getMail().getHost();,if (jHipsterProperties != null ) String host = jHipsterProperties.getMail().getHost();
_MailConfiguration.java,int port = jHipsterProperties.getMail().getPort();,if (jHipsterProperties != null ) int port = jHipsterProperties.getMail().getPort();
_MailConfiguration.java,String user = jHipsterProperties.getMail().getUsername();,if (jHipsterProperties != null ) String user = jHipsterProperties.getMail().getUsername();
_MailConfiguration.java,String password = jHipsterProperties.getMail().getPassword();,if (jHipsterProperties != null ) String password = jHipsterProperties.getMail().getPassword();
_MailConfiguration.java,String protocol = jHipsterProperties.getMail().getProtocol();,if (jHipsterProperties != null ) String protocol = jHipsterProperties.getMail().getProtocol();
_MailConfiguration.java,Boolean tls = jHipsterProperties.getMail().isTls();,if (jHipsterProperties != null ) Boolean tls = jHipsterProperties.getMail().isTls();
_MailConfiguration.java,Boolean auth = jHipsterProperties.getMail().isAuth();,if (jHipsterProperties != null ) Boolean auth = jHipsterProperties.getMail().isAuth();
_GZipServletFilter.java,byte[] compressedBytes = compressed.toByteArray();,if (compressed != null ) byte[] compressedBytes = compressed.toByteArray();
_GZipServletFilter.java,"boolean shouldBodyBeZero = GZipResponseUtil.shouldBodyBeZero(httpRequest, wrapper.getStatus());","if (wrapper != null ) boolean shouldBodyBeZero = GZipResponseUtil.shouldBodyBeZero(httpRequest, wrapper.getStatus());"
_SecurityUtils.java,springSecurityUser = (UserDetails) authentication.getPrincipal();,if (authentication != null ) springSecurityUser = (UserDetails) authentication.getPrincipal();
_CacheConfiguration.java,SortedSet<String> names = metricRegistry.getNames();<% if (javaVersion == '8') { %>,if (%> != null ) SortedSet<String> names = metricRegistry.getNames();<% if (javaVersion == '8') { %>
_UserDetailsService.java,String lowercaseLogin = login.toLowerCase();<%if (javaVersion == '8') {%>,if ({%> != null ) String lowercaseLogin = login.toLowerCase();<%if (javaVersion == '8') {%>
_UserDetailsService.java,GrantedAuthority grantedAuthority = new SimpleGrantedAuthority(authority.getName());,if (SimpleGrantedAuthority(authority != null ) GrantedAuthority grantedAuthority = new SimpleGrantedAuthority(authority.getName());
_UserService.java,User currentUser = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());,if (userRepository != null ) User currentUser = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());
_UserService.java,User currentUser = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());,if (userRepository != null ) User currentUser = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());
_UserService.java,User user = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());,if (userRepository != null ) User user = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());
_UserService.java,User user = token.getUser();,if (token != null ) User user = token.getUser();
_AccountResource.java,User user = userRepository.findOneByLogin(userDTO.getLogin());,if (userRepository != null ) User user = userRepository.findOneByLogin(userDTO.getLogin());
_AccountResource.java,User user = userService.getUserWithAuthorities();,if (userService != null ) User user = userService.getUserWithAuthorities();
_AccountResource.java,User userHavingThisLogin = userRepository.findOneByLogin(userDTO.getLogin());,if (userRepository != null ) User userHavingThisLogin = userRepository.findOneByLogin(userDTO.getLogin());
_AccountResource.java,User user = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());,if (userRepository != null ) User user = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());
_AccountResource.java,User user = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());,if (userRepository != null ) User user = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());
_LogsResource.java,LoggerContext context = (LoggerContext) LoggerFactory.getILoggerFactory();<% if (javaVersion == '8') { %>,if (%> != null ) LoggerContext context = (LoggerContext) LoggerFactory.getILoggerFactory();<% if (javaVersion == '8') { %>
_UserResource.java,User user = userRepository.findOne(managedUserDTO.getId());,if (userRepository != null ) User user = userRepository.findOne(managedUserDTO.getId());
_UserResource.java,Set<Authority> authorities = user.getAuthorities();,if (user != null ) Set<Authority> authorities = user.getAuthorities();
_UserServiceTest.java,String resetKey = RandomUtil.generateResetKey();,if (RandomUtil != null ) String resetKey = RandomUtil.generateResetKey();
_UserServiceTest.java,String oldPassword = user.getPassword();,if (user != null ) String oldPassword = user.getPassword();
_UserServiceTest.java,String resetKey = RandomUtil.generateResetKey();,if (RandomUtil != null ) String resetKey = RandomUtil.generateResetKey();
_ManagedUserDTO.java,this.id = user.getId();,if (user != null ) this.id = user.getId();
_ManagedUserDTO.java,this.lastModifiedDate = user.getLastModifiedDate();,if (user != null ) this.lastModifiedDate = user.getLastModifiedDate();
_UserResource.java,User user = userRepository.findOneByLogin(userDTO.getLogin());,if (userRepository != null ) User user = userRepository.findOneByLogin(userDTO.getLogin());
_UserManagementResource.java,List<UserManagementDTO> usersManagementDTO = userManagementMapper.usersToUserManagementsDTO(page.getContent());,if (userManagementMapper != null ) List<UserManagementDTO> usersManagementDTO = userManagementMapper.usersToUserManagementsDTO(page.getContent());
_UserManagementMapper.java,User user = userService.getUserWithAuthorities(userManagementDTO.getId());,if (userService != null ) User user = userService.getUserWithAuthorities(userManagementDTO.getId());
_UserManagementResourceTest.java,this.restUserManagementMockMvc = MockMvcBuilders.standaloneSetup(userManagementResource).build();,if (MockMvcBuilders != null ) this.restUserManagementMockMvc = MockMvcBuilders.standaloneSetup(userManagementResource).build();
_AuthorityResourceTest.java,this.restAuthorityMockMvc = MockMvcBuilders.standaloneSetup(userAuthorhityResource).build();,if (MockMvcBuilders != null ) this.restAuthorityMockMvc = MockMvcBuilders.standaloneSetup(userAuthorhityResource).build();
_AuthorityResourceTest.java,User user = userRepository.findOneByLogin();,if (userRepository != null ) User user = userRepository.findOneByLogin();
_UserManagementResourceTest.java,User user = userRepository.findOneByLogin();,if (userRepository != null ) User user = userRepository.findOneByLogin();
_UserService.java,User user = userRepository.findOneByLogin(login).get();,if (userRepository != null ) User user = userRepository.findOneByLogin(login).get();
_UserManagementMapper.java,User user = userService.getUserWithAuthorities(userManagementDTO.getLogin());,if (userService != null ) User user = userService.getUserWithAuthorities(userManagementDTO.getLogin());
_UserManagementResource.java,List<userManagementDTO> usersManagementDTO = userManagementMapper.usersTouserManagementsDTO(page.getContent());,if (userManagementMapper != null ) List<userManagementDTO> usersManagementDTO = userManagementMapper.usersTouserManagementsDTO(page.getContent());
_UserService.java,User currentUser = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());,if (userRepository != null ) User currentUser = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());
_UserManagementMapper.java,User user = userRepository.findOneWithEagerRelationships(userManagementDTO.getId());,if (userRepository != null ) User user = userRepository.findOneWithEagerRelationships(userManagementDTO.getId());
_UserManagementMapper.java,User user = findOneWithEagerRelationships(userManagementDTO.getId());,if (findOneWithEagerRelationships(userManagementDTO != null ) User user = findOneWithEagerRelationships(userManagementDTO.getId());
_UserManagementResource.java,List<UserManagmentDTO> usersManagmentDTO = userManagmentMapper.usersToUserManagmentsDTO(page.getContent());,if (userManagmentMapper != null ) List<UserManagmentDTO> usersManagmentDTO = userManagmentMapper.usersToUserManagmentsDTO(page.getContent());
_UserManagementMapper.java,User user = findOneWithEagerRelationships(userManagmentDTO.getId());,if (findOneWithEagerRelationships(userManagmentDTO != null ) User user = findOneWithEagerRelationships(userManagmentDTO.getId());
_Application.java,Collection activeProfiles = Arrays.asList(env.getActiveProfiles());,if (Arrays != null ) Collection activeProfiles = Arrays.asList(env.getActiveProfiles());
_CassandraProperties.java,Object loadBalancingPolicyInstance = loadBalancingPolicyClass.newInstance();,if (loadBalancingPolicyClass != null ) Object loadBalancingPolicyInstance = loadBalancingPolicyClass.newInstance();
_CassandraProperties.java,Object reconnectionPolicyInstance = reconnectionPolicyClass.newInstance();,if (reconnectionPolicyClass != null ) Object reconnectionPolicyInstance = reconnectionPolicyClass.newInstance();
_CassandraProperties.java,Object retryPolicyInstance = retryPolicyClass.newInstance();,if (retryPolicyClass != null ) Object retryPolicyInstance = retryPolicyClass.newInstance();
_Application.java,Environment env = app.run(args).getEnvironment();,if (app != null ) Environment env = app.run(args).getEnvironment();
_ActivityService.java,Message message = event.getMessage();,if (event != null ) Message message = event.getMessage();
_CustomPersistentRememberMeServices.java,String login = token.getUser().getLogin();,if (token != null ) String login = token.getUser().getLogin();
_AccountResourceTest.java,this.restUserMockMvc = MockMvcBuilders.standaloneSetup(accountResource).build();,if (MockMvcBuilders != null ) this.restUserMockMvc = MockMvcBuilders.standaloneSetup(accountResource).build();
_ActivityService.java,AtmosphereRequest request = event.getResource().getRequest();,if (event != null ) AtmosphereRequest request = event.getResource().getRequest();
_ActivityService.java,AtmosphereRequest request = atmosphereResource.getRequest();,if (atmosphereResource != null ) AtmosphereRequest request = atmosphereResource.getRequest();
_UserDetailsService.java,GrantedAuthority grantedAuthority = new SimpleGrantedAuthority(authority.getName());,if (SimpleGrantedAuthority(authority != null ) GrantedAuthority grantedAuthority = new SimpleGrantedAuthority(authority.getName());
_AccountResource.java,User userHavingThisEmail = userRepository.findOneByEmail(userDTO.getEmail());,if (userRepository != null ) User userHavingThisEmail = userRepository.findOneByEmail(userDTO.getEmail());
_UserDetailsService.java,final String lowercaseLogin = login.toLowerCase();,if (login != null ) final String lowercaseLogin = login.toLowerCase();
_UserDetailsService.java,final GrantedAuthority grantedAuthority = new SimpleGrantedAuthority(authority.getName());,if (SimpleGrantedAuthority(authority != null ) final GrantedAuthority grantedAuthority = new SimpleGrantedAuthority(authority.getName());
_UserService.java,final User currentUser = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());,if (userRepository != null ) final User currentUser = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());
_UserService.java,final User currentUser = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());,if (userRepository != null ) final User currentUser = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());
_UserService.java,User user = token.getUser();,if (token != null ) User user = token.getUser();
_UserService.java,User user = token.getUser();,if (token != null ) User user = token.getUser();
_AccountResource.java,final User user = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());,if (userRepository != null ) final User user = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());
_UserServiceTest.java,int existingCount = persistentTokenRepository.findByUser(admin).size();,if (persistentTokenRepository != null ) int existingCount = persistentTokenRepository.findByUser(admin).size();
_UserService.java,final User currentUser = userRepository.findOne(SecurityUtils.getCurrentLogin());,if (userRepository != null ) final User currentUser = userRepository.findOne(SecurityUtils.getCurrentLogin());
_UserService.java,User currentUser = userRepository.findOne(SecurityUtils.getCurrentLogin());,if (userRepository != null ) User currentUser = userRepository.findOne(SecurityUtils.getCurrentLogin());
_UserService.java,final User currentUser = userRepository.findOne(SecurityUtils.getCurrentLogin());,if (userRepository != null ) final User currentUser = userRepository.findOne(SecurityUtils.getCurrentLogin());
_AccountResource.java,final User user = userRepository.findOne(SecurityUtils.getCurrentLogin());,if (userRepository != null ) final User user = userRepository.findOne(SecurityUtils.getCurrentLogin());
_UserServiceTest.java,int existingCount = persistentTokenRepository.findByUser(admin).size();,if (persistentTokenRepository != null ) int existingCount = persistentTokenRepository.findByUser(admin).size();
_UserDetailsService.java,String lowercaseLogin = login.toLowerCase();,if (login != null ) String lowercaseLogin = login.toLowerCase();
_UserService.java,User currentUser = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());,if (userRepository != null ) User currentUser = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());
_UserService.java,User currentUser = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());,if (userRepository != null ) User currentUser = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());
_UserService.java,User currentUser = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());,if (userRepository != null ) User currentUser = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());
_UserService.java,User user = token.getUser();,if (token != null ) User user = token.getUser();
_AccountResource.java,User user = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());<% if (javaVersion == '8') { %>,if (%> != null ) User user = userRepository.findOneByLogin(SecurityUtils.getCurrentLogin());<% if (javaVersion == '8') { %>
_UserService.java,User currentUser = userRepository.findOne(SecurityUtils.getCurrentLogin());,if (userRepository != null ) User currentUser = userRepository.findOne(SecurityUtils.getCurrentLogin());
_UserService.java,User currentUser = userRepository.findOne(SecurityUtils.getCurrentLogin());,if (userRepository != null ) User currentUser = userRepository.findOne(SecurityUtils.getCurrentLogin());
_UserService.java,User currentUser = userRepository.findOne(SecurityUtils.getCurrentLogin());,if (userRepository != null ) User currentUser = userRepository.findOne(SecurityUtils.getCurrentLogin());
_AccountResource.java,User user = userRepository.findOne(userDTO.getLogin());,if (userRepository != null ) User user = userRepository.findOne(userDTO.getLogin());
_AccountResource.java,User user = userRepository.findOne(SecurityUtils.getCurrentLogin());,if (userRepository != null ) User user = userRepository.findOne(SecurityUtils.getCurrentLogin());
_AccountResource.java,User user = userRepository.findOne(SecurityUtils.getCurrentLogin());<% if (javaVersion == '8') { %>,if (%> != null ) User user = userRepository.findOne(SecurityUtils.getCurrentLogin());<% if (javaVersion == '8') { %>
_CsrfCookieGeneratorFilter.java,"Cookie cookie = new Cookie(pCookieName, token.getToken());","if (token != null ) Cookie cookie = new Cookie(pCookieName, token.getToken());"
_AccountResource.java,final Locale locale = Locale.forLanguageTag(user.getLangKey());,if (Locale != null ) final Locale locale = Locale.forLanguageTag(user.getLangKey());
_AccountResource.java,final Locale locale = Locale.forLanguageTag(user.getLangKey());,if (Locale != null ) final Locale locale = Locale.forLanguageTag(user.getLangKey());
_CsrfTokenGeneratorFilter.java,"Cookie cookie = new Cookie(pCookieName, token.getToken());","if (token != null ) Cookie cookie = new Cookie(pCookieName, token.getToken());"
_CustomAuditEventRepository.java,persistentAuditEvents = persistenceAuditEventRepository.findAll();,if (persistenceAuditEventRepository != null ) persistentAuditEvents = persistenceAuditEventRepository.findAll();
_SpringSecurityAuditorAware.java,String userName = SecurityUtils.getCurrentLogin();,if (SecurityUtils != null ) String userName = SecurityUtils.getCurrentLogin();
_ActivityService.java,AtmosphereRequest request = atmosphereResource.getRequest();,if (atmosphereResource != null ) AtmosphereRequest request = atmosphereResource.getRequest();
_CacheConfiguration.java,SortedSet<String> names = metricRegistry.getNames();,if (metricRegistry != null ) SortedSet<String> names = metricRegistry.getNames();
_UserServiceTest.java,int existingCount = persistentTokenRepository.findByUser(admin).size();,if (persistentTokenRepository != null ) int existingCount = persistentTokenRepository.findByUser(admin).size();
_MailService.java,final MimeMessage mimeMessage = javaMailSender.createMimeMessage();,if (javaMailSender != null ) final MimeMessage mimeMessage = javaMailSender.createMimeMessage();
_SecurityUtils.java,springSecurityUser = (UserDetails) authentication.getPrincipal();,if (authentication != null ) springSecurityUser = (UserDetails) authentication.getPrincipal();
_SecurityUtils.java,userName = springSecurityUser.getUsername();,if (springSecurityUser != null ) userName = springSecurityUser.getUsername();
_SecurityUtils.java,userName = (String) authentication.getPrincipal();,if (authentication != null ) userName = (String) authentication.getPrincipal();
_MailService.java,Locale locale = Locale.forLanguageTag(user.getLangKey());,if (Locale != null ) Locale locale = Locale.forLanguageTag(user.getLangKey());
_LogsResource.java,LoggerContext context = (LoggerContext) LoggerFactory.getILoggerFactory();,if (LoggerFactory != null ) LoggerContext context = (LoggerContext) LoggerFactory.getILoggerFactory();
_AccountResource.java,User user = userRepository.findOne(SecurityUtils.getCurrentLogin());,if (userRepository != null ) User user = userRepository.findOne(SecurityUtils.getCurrentLogin());
_AccountResource.java,User user = userRepository.findOne(SecurityUtils.getCurrentLogin());,if (userRepository != null ) User user = userRepository.findOne(SecurityUtils.getCurrentLogin());
_LoggingAspect.java,private Logger logger = LoggerFactory.getLogger(this.getClass());,if (LoggerFactory != null ) private Logger logger = LoggerFactory.getLogger(this.getClass());
_JHipsterFileSystemWatcher.java,watcher = FileSystems.getDefault().newWatchService();,if (FileSystems != null ) watcher = FileSystems.getDefault().newWatchService();
_JHipsterFileSystemWatcher.java,Environment env = ctx.getEnvironment();,if (ctx != null ) Environment env = ctx.getEnvironment();
_JHipsterFileSystemWatcher.java,key = watcher.take();,if (watcher != null ) key = watcher.take();
_JHipsterFileSystemWatcher.java,WatchEvent.Kind kind = event.kind();,if (event != null ) WatchEvent.Kind kind = event.kind();
_JHipsterFileSystemWatcher.java,Path name = ev.context();,if (ev != null ) Path name = ev.context();
_JHipsterFileSystemWatcher.java,final String parentFolder = aFile.getParent();,if (aFile != null ) final String parentFolder = aFile.getParent();
_JHipsterFileSystemWatcher.java,boolean valid = key.reset();,if (key != null ) boolean valid = key.reset();
_JHipsterPluginManagerReloadPlugin.java,Environment env = ctx.getEnvironment();,if (ctx != null ) Environment env = ctx.getEnvironment();
_JHipsterReloaderThread.java,hotReloadTriggered = springReloader.hasBeansToReload();,if (springReloader != null ) hotReloadTriggered = springReloader.hasBeansToReload();
_NewClassLoaderListener.java,parentClassLoader = fileSystemWatcher.getClassLoader();,if (fileSystemWatcher != null ) parentClassLoader = fileSystemWatcher.getClassLoader();
_NewClassLoaderListener.java,final String classesFolder = urlLoaderEntry.getKey();,if (urlLoaderEntry != null ) final String classesFolder = urlLoaderEntry.getKey();
_NewClassLoaderListener.java,final URLClassLoader urlClassLoader = urlLoaderEntry.getValue();,if (urlLoaderEntry != null ) final URLClassLoader urlClassLoader = urlLoaderEntry.getValue();
_NewClassLoaderListener.java,String versionstamp = Utils.encode(theFile.lastModified());,if (Utils != null ) String versionstamp = Utils.encode(theFile.lastModified());
_NewClassLoaderListener.java,final String key = urlClassLoaderEntry.getKey();,if (urlClassLoaderEntry != null ) final String key = urlClassLoaderEntry.getKey();
_JHipsterHandlerMappingListener.java,String beanName = StringUtils.uncapitalize(JHipsterHandlerMappingListener.class.getSimpleName());,if (StringUtils != null ) String beanName = StringUtils.uncapitalize(JHipsterHandlerMappingListener.class.getSimpleName());
_JHipsterTableSnapshotGenerator.java,HibernateDatabase database = (HibernateDatabase) snapshot.getDatabase();,if (snapshot != null ) HibernateDatabase database = (HibernateDatabase) snapshot.getDatabase();
_JHipsterTableSnapshotGenerator.java,Configuration cfg = database.getConfiguration();,if (database != null ) Configuration cfg = database.getConfiguration();
_JHipsterTableSnapshotGenerator.java,Dialect dialect = database.getDialect();,if (database != null ) Dialect dialect = database.getDialect();
_JHipsterTableSnapshotGenerator.java,Mapping mapping = cfg.buildMapping();,if (cfg != null ) Mapping mapping = cfg.buildMapping();
_JHipsterTableSnapshotGenerator.java,Iterator columnIterator = hibernateTable.getColumnIterator();,if (hibernateTable != null ) Iterator columnIterator = hibernateTable.getColumnIterator();
_JHipsterTableSnapshotGenerator.java,"DataType dataType = toDataType(hibernateType, hibernateColumn.getSqlTypeCode());","if (hibernateColumn != null ) DataType dataType = toDataType(hibernateType, hibernateColumn.getSqlTypeCode());"
_JHipsterTableSnapshotGenerator.java,HibernateDatabase database = (HibernateDatabase) snapshot.getDatabase();,if (snapshot != null ) HibernateDatabase database = (HibernateDatabase) snapshot.getDatabase();
_JHipsterTableSnapshotGenerator.java,Configuration cfg = database.getConfiguration();,if (database != null ) Configuration cfg = database.getConfiguration();
_JHipsterTableSnapshotGenerator.java,Method[] methods = dataType.getClass().getMethods();,if (dataType != null ) Method[] methods = dataType.getClass().getMethods();
_JacksonReloader.java,ConfigurableListableBeanFactory beanFactory = applicationContext.getBeanFactory();,if (applicationContext != null ) ConfigurableListableBeanFactory beanFactory = applicationContext.getBeanFactory();
_JacksonReloader.java,SerializerProvider serializerProvider = mapper.getSerializerProvider();,if (mapper != null ) SerializerProvider serializerProvider = mapper.getSerializerProvider();
_JacksonReloader.java,DeserializationContext deserializationContext = mapper.getDeserializationContext();,if (mapper != null ) DeserializationContext deserializationContext = mapper.getDeserializationContext();
_LiquibaseReloader.java,final JdbcConnection jdbcConnection = new JdbcConnection(dataSource.getConnection());,if (JdbcConnection(dataSource != null ) final JdbcConnection jdbcConnection = new JdbcConnection(dataSource.getConnection());
_LiquibaseReloader.java,PersistenceUnitInfo persistenceUnitInfo = internalPersistenceUnitManager.obtainDefaultPersistenceUnitInfo();,if (internalPersistenceUnitManager != null ) PersistenceUnitInfo persistenceUnitInfo = internalPersistenceUnitManager.obtainDefaultPersistenceUnitInfo();
_LiquibaseReloader.java,ServiceRegistry serviceRegistry = builder.buildServiceRegistry();,if (builder != null ) ServiceRegistry serviceRegistry = builder.buildServiceRegistry();
_LiquibaseReloader.java,String fileName = FilenameUtils.getBaseName(changelog.getName());,if (FilenameUtils != null ) String fileName = FilenameUtils.getBaseName(changelog.getName());
_LiquibaseReloader.java,String fileName = allChangelog.getName();,if (allChangelog != null ) String fileName = allChangelog.getName();
_SpringReloader.java,this.beanFactoryAdvisorRetrievalHelper = new BeanFactoryAdvisorRetrievalHelper(applicationContext.getBeanFactory());,if (BeanFactoryAdvisorRetrievalHelper(applicationContext != null ) this.beanFactoryAdvisorRetrievalHelper = new BeanFactoryAdvisorRetrievalHelper(applicationContext.getBeanFactory());
_SpringReloader.java,DefaultListableBeanFactory beanFactory = (DefaultListableBeanFactory) applicationContext.getBeanFactory();,if (applicationContext != null ) DefaultListableBeanFactory beanFactory = (DefaultListableBeanFactory) applicationContext.getBeanFactory();
_SpringReloader.java,beanInstance = advised.getTargetSource().getTarget();,if (advised != null ) beanInstance = advised.getTargetSource().getTarget();
_SpringReloader.java,beanInstance = advised.getTargetSource().getTarget();,if (advised != null ) beanInstance = advised.getTargetSource().getTarget();
_SpringReloader.java,Field[] fields = beanInstance.getClass().getDeclaredFields();,if (beanInstance != null ) Field[] fields = beanInstance.getClass().getDeclaredFields();
_SpringReloader.java,Object beanToInject = applicationContext.getBean(field.getType());,if (applicationContext != null ) Object beanToInject = applicationContext.getBean(field.getType());
_SpringReloader.java,beanName = StringUtils.uncapitalize(clazz.getSimpleName());,if (StringUtils != null ) beanName = StringUtils.uncapitalize(clazz.getSimpleName());
_JHipsterFileSystemWatcher.java,watcher = FileSystems.getDefault().newWatchService();,if (FileSystems != null ) watcher = FileSystems.getDefault().newWatchService();
_JHipsterFileSystemWatcher.java,Environment env = ctx.getEnvironment();,if (ctx != null ) Environment env = ctx.getEnvironment();
_JHipsterFileSystemWatcher.java,key = watcher.take();,if (watcher != null ) key = watcher.take();
_JHipsterFileSystemWatcher.java,WatchEvent.Kind kind = event.kind();,if (event != null ) WatchEvent.Kind kind = event.kind();
_JHipsterFileSystemWatcher.java,Path name = ev.context();,if (ev != null ) Path name = ev.context();
_JHipsterFileSystemWatcher.java,final String parentFolder = aFile.getParent();,if (aFile != null ) final String parentFolder = aFile.getParent();
_JHipsterFileSystemWatcher.java,boolean valid = key.reset();,if (key != null ) boolean valid = key.reset();
_JHipsterPluginManagerReloadPlugin.java,Environment env = ctx.getEnvironment();,if (ctx != null ) Environment env = ctx.getEnvironment();
_JHipsterReloaderThread.java,hotReloadTriggered = springReloader.hasBeansToReload();,if (springReloader != null ) hotReloadTriggered = springReloader.hasBeansToReload();
_NewClassLoaderListener.java,parentClassLoader = fileSystemWatcher.getClassLoader();,if (fileSystemWatcher != null ) parentClassLoader = fileSystemWatcher.getClassLoader();
_NewClassLoaderListener.java,final String classesFolder = urlLoaderEntry.getKey();,if (urlLoaderEntry != null ) final String classesFolder = urlLoaderEntry.getKey();
_NewClassLoaderListener.java,final URLClassLoader urlClassLoader = urlLoaderEntry.getValue();,if (urlLoaderEntry != null ) final URLClassLoader urlClassLoader = urlLoaderEntry.getValue();
_NewClassLoaderListener.java,String versionstamp = Utils.encode(theFile.lastModified());,if (Utils != null ) String versionstamp = Utils.encode(theFile.lastModified());
_NewClassLoaderListener.java,final String key = urlClassLoaderEntry.getKey();,if (urlClassLoaderEntry != null ) final String key = urlClassLoaderEntry.getKey();
_JHipsterHandlerMappingListener.java,String beanName = StringUtils.uncapitalize(JHipsterHandlerMappingListener.class.getSimpleName());,if (StringUtils != null ) String beanName = StringUtils.uncapitalize(JHipsterHandlerMappingListener.class.getSimpleName());
_JHipsterTableSnapshotGenerator.java,HibernateDatabase database = (HibernateDatabase) snapshot.getDatabase();,if (snapshot != null ) HibernateDatabase database = (HibernateDatabase) snapshot.getDatabase();
_JHipsterTableSnapshotGenerator.java,Configuration cfg = database.getConfiguration();,if (database != null ) Configuration cfg = database.getConfiguration();
_JHipsterTableSnapshotGenerator.java,Dialect dialect = database.getDialect();,if (database != null ) Dialect dialect = database.getDialect();
_JHipsterTableSnapshotGenerator.java,Mapping mapping = cfg.buildMapping();,if (cfg != null ) Mapping mapping = cfg.buildMapping();
_JHipsterTableSnapshotGenerator.java,Iterator columnIterator = hibernateTable.getColumnIterator();,if (hibernateTable != null ) Iterator columnIterator = hibernateTable.getColumnIterator();
_JHipsterTableSnapshotGenerator.java,"DataType dataType = toDataType(hibernateType, hibernateColumn.getSqlTypeCode());","if (hibernateColumn != null ) DataType dataType = toDataType(hibernateType, hibernateColumn.getSqlTypeCode());"
_JHipsterTableSnapshotGenerator.java,HibernateDatabase database = (HibernateDatabase) snapshot.getDatabase();,if (snapshot != null ) HibernateDatabase database = (HibernateDatabase) snapshot.getDatabase();
_JHipsterTableSnapshotGenerator.java,Configuration cfg = database.getConfiguration();,if (database != null ) Configuration cfg = database.getConfiguration();
_JHipsterTableSnapshotGenerator.java,Method[] methods = dataType.getClass().getMethods();,if (dataType != null ) Method[] methods = dataType.getClass().getMethods();
_JacksonReloader.java,ConfigurableListableBeanFactory beanFactory = applicationContext.getBeanFactory();,if (applicationContext != null ) ConfigurableListableBeanFactory beanFactory = applicationContext.getBeanFactory();
_JacksonReloader.java,SerializerProvider serializerProvider = mapper.getSerializerProvider();,if (mapper != null ) SerializerProvider serializerProvider = mapper.getSerializerProvider();
_JacksonReloader.java,DeserializationContext deserializationContext = mapper.getDeserializationContext();,if (mapper != null ) DeserializationContext deserializationContext = mapper.getDeserializationContext();
_LiquibaseReloader.java,final JdbcConnection jdbcConnection = new JdbcConnection(dataSource.getConnection());,if (JdbcConnection(dataSource != null ) final JdbcConnection jdbcConnection = new JdbcConnection(dataSource.getConnection());
_LiquibaseReloader.java,PersistenceUnitInfo persistenceUnitInfo = internalPersistenceUnitManager.obtainDefaultPersistenceUnitInfo();,if (internalPersistenceUnitManager != null ) PersistenceUnitInfo persistenceUnitInfo = internalPersistenceUnitManager.obtainDefaultPersistenceUnitInfo();
_LiquibaseReloader.java,ServiceRegistry serviceRegistry = builder.buildServiceRegistry();,if (builder != null ) ServiceRegistry serviceRegistry = builder.buildServiceRegistry();
_LiquibaseReloader.java,String fileName = FilenameUtils.getBaseName(changelog.getName());,if (FilenameUtils != null ) String fileName = FilenameUtils.getBaseName(changelog.getName());
_LiquibaseReloader.java,String fileName = allChangelog.getName();,if (allChangelog != null ) String fileName = allChangelog.getName();
_SpringReloader.java,this.beanFactoryAdvisorRetrievalHelper = new BeanFactoryAdvisorRetrievalHelper(applicationContext.getBeanFactory());,if (BeanFactoryAdvisorRetrievalHelper(applicationContext != null ) this.beanFactoryAdvisorRetrievalHelper = new BeanFactoryAdvisorRetrievalHelper(applicationContext.getBeanFactory());
_SpringReloader.java,DefaultListableBeanFactory beanFactory = (DefaultListableBeanFactory) applicationContext.getBeanFactory();,if (applicationContext != null ) DefaultListableBeanFactory beanFactory = (DefaultListableBeanFactory) applicationContext.getBeanFactory();
_SpringReloader.java,beanInstance = advised.getTargetSource().getTarget();,if (advised != null ) beanInstance = advised.getTargetSource().getTarget();
_SpringReloader.java,beanInstance = advised.getTargetSource().getTarget();,if (advised != null ) beanInstance = advised.getTargetSource().getTarget();
_SpringReloader.java,Field[] fields = beanInstance.getClass().getDeclaredFields();,if (beanInstance != null ) Field[] fields = beanInstance.getClass().getDeclaredFields();
_SpringReloader.java,Object beanToInject = applicationContext.getBean(field.getType());,if (applicationContext != null ) Object beanToInject = applicationContext.getBean(field.getType());
_SpringReloader.java,beanName = StringUtils.uncapitalize(clazz.getSimpleName());,if (StringUtils != null ) beanName = StringUtils.uncapitalize(clazz.getSimpleName());
_CacheConfiguration.java,String name = entity.getJavaType().getName();,if (entity != null ) String name = entity.getJavaType().getName();
_JHipsterReloadWebSecurityConfig.java,Class clazz = factory.createClass();,if (factory != null ) Class clazz = factory.createClass();
_JHipsterFileSystemWatcher.java,final String parentFolder = aFile.getParent();,if (aFile != null ) final String parentFolder = aFile.getParent();
_JHipsterFileSystemWatcher.java,final String classesFolder = urlLoaderEntry.getKey();,if (urlLoaderEntry != null ) final String classesFolder = urlLoaderEntry.getKey();
_JHipsterFileSystemWatcher.java,final URLClassLoader urlClassLoader = urlLoaderEntry.getValue();,if (urlLoaderEntry != null ) final URLClassLoader urlClassLoader = urlLoaderEntry.getValue();
_JHipsterFileSystemWatcher.java,String versionstamp = Utils.encode(theFile.lastModified());,if (Utils != null ) String versionstamp = Utils.encode(theFile.lastModified());
_JHipsterFileSystemWatcher.java,final String key = urlClassLoaderEntry.getKey();,if (urlClassLoaderEntry != null ) final String key = urlClassLoaderEntry.getKey();
_JHipsterFileSystemWatcher.java,String versionstamp = Utils.encode(theFile.lastModified());,if (Utils != null ) String versionstamp = Utils.encode(theFile.lastModified());
_SpringReloader.java,Object beanToInject = applicationContext.getBean(field.getType());,if (applicationContext != null ) Object beanToInject = applicationContext.getBean(field.getType());
_SpringReloader.java,Field[] fields = beanInstance.getClass().getDeclaredFields();,if (beanInstance != null ) Field[] fields = beanInstance.getClass().getDeclaredFields();
_SpringReloader.java,beanToInject = registerBeanDefinition(field.getType());,if (registerBeanDefinition(field != null ) beanToInject = registerBeanDefinition(field.getType());
_SpringReloader.java,beanToInject = applicationContext.getBean(field.getName());,if (applicationContext != null ) beanToInject = applicationContext.getBean(field.getName());
_SpringReloader.java,Method[] methods = beanInstance.getClass().getDeclaredMethods();,if (beanInstance != null ) Method[] methods = beanInstance.getClass().getDeclaredMethods();
_SpringReloader.java,final String methodName = method.getName();,if (method != null ) final String methodName = method.getName();
_SpringReloader.java,DefaultListableBeanFactory beanFactory = (DefaultListableBeanFactory) applicationContext.getBeanFactory();,if (applicationContext != null ) DefaultListableBeanFactory beanFactory = (DefaultListableBeanFactory) applicationContext.getBeanFactory();
_SpringReloader.java,String beanName = StringUtils.uncapitalize(clazz.getSimpleName());,if (StringUtils != null ) String beanName = StringUtils.uncapitalize(clazz.getSimpleName());
_SpringReloader.java,DefaultListableBeanFactory beanFactory = (DefaultListableBeanFactory) applicationContext.getBeanFactory();,if (applicationContext != null ) DefaultListableBeanFactory beanFactory = (DefaultListableBeanFactory) applicationContext.getBeanFactory();
_SpringReloader.java,Field[] fields = beanInstance.getClass().getDeclaredFields();,if (beanInstance != null ) Field[] fields = beanInstance.getClass().getDeclaredFields();
_SpringReloader.java,beanToInject = registerBeanDefinition(field.getType());,if (registerBeanDefinition(field != null ) beanToInject = registerBeanDefinition(field.getType());
_SpringReloader.java,beanToInject = applicationContext.getBean(field.getName());,if (applicationContext != null ) beanToInject = applicationContext.getBean(field.getName());
_SpringReloader.java,Method[] methods = beanInstance.getClass().getDeclaredMethods();,if (beanInstance != null ) Method[] methods = beanInstance.getClass().getDeclaredMethods();
_SpringReloader.java,final String methodName = method.getName();,if (method != null ) final String methodName = method.getName();
_SpringReloader.java,DefaultListableBeanFactory beanFactory = (DefaultListableBeanFactory) applicationContext.getBeanFactory();,if (applicationContext != null ) DefaultListableBeanFactory beanFactory = (DefaultListableBeanFactory) applicationContext.getBeanFactory();
_SpringReloader.java,Annotation[] annotations = field.getDeclaredAnnotations();,if (field != null ) Annotation[] annotations = field.getDeclaredAnnotations();
_SpringReloader.java,Object beanToInject = applicationContext.getBean(field.getType());,if (applicationContext != null ) Object beanToInject = applicationContext.getBean(field.getType());
_SpringReloader.java,Annotation[] annotations = method.getDeclaredAnnotations();,if (method != null ) Annotation[] annotations = method.getDeclaredAnnotations();
_AuditEventConfiguration.java,persistentAuditEvents = persistenceAuditEventRepository.findAll();,if (persistenceAuditEventRepository != null ) persistentAuditEvents = persistenceAuditEventRepository.findAll();
_AuditEventService.java,persistentAuditEvents = persistenceAuditEventRepository.findAll();,if (persistenceAuditEventRepository != null ) persistentAuditEvents = persistenceAuditEventRepository.findAll();
_JHipsterPluginManagerReloadPlugin.java,Field[] fields = beanInstance.getClass().getDeclaredFields();,if (beanInstance != null ) Field[] fields = beanInstance.getClass().getDeclaredFields();
_JHipsterPluginManagerReloadPlugin.java,Annotation[] annotations = field.getDeclaredAnnotations();,if (field != null ) Annotation[] annotations = field.getDeclaredAnnotations();
_JHipsterPluginManagerReloadPlugin.java,Object beanToInject = applicationContext.getBean(field.getType());,if (applicationContext != null ) Object beanToInject = applicationContext.getBean(field.getType());
_JHipsterPluginManagerReloadPlugin.java,Method[] methods = beanInstance.getClass().getDeclaredMethods();,if (beanInstance != null ) Method[] methods = beanInstance.getClass().getDeclaredMethods();
_JHipsterPluginManagerReloadPlugin.java,Annotation[] annotations = method.getDeclaredAnnotations();,if (method != null ) Annotation[] annotations = method.getDeclaredAnnotations();
_AccountResource.java,UserDTO user = userService.getCurrentUser();,if (userService != null ) UserDTO user = userService.getCurrentUser();
_AccountResource.java,User user = userRepository.findOne(SecurityUtils.getCurrentLogin());,if (userRepository != null ) User user = userRepository.findOne(SecurityUtils.getCurrentLogin());
_AccountResource.java,User user = userRepository.findOne(SecurityUtils.getCurrentLogin());,if (userRepository != null ) User user = userRepository.findOne(SecurityUtils.getCurrentLogin());
_GZipServletFilter.java,byte[] compressedBytes = compressed.toByteArray();,if (compressed != null ) byte[] compressedBytes = compressed.toByteArray();
_GZipServletFilter.java,"boolean shouldBodyBeZero = GZipResponseUtil.shouldBodyBeZero(httpRequest, wrapper.getStatus());","if (wrapper != null ) boolean shouldBodyBeZero = GZipResponseUtil.shouldBodyBeZero(httpRequest, wrapper.getStatus());"
_MetricsConfiguration.java,final JmxReporter jmxReporter = JmxReporter.forRegistry(metricRegistry).build();,if (JmxReporter != null ) final JmxReporter jmxReporter = JmxReporter.forRegistry(metricRegistry).build();
_CacheConfiguration.java,String name = entity.getJavaType().getName();,if (entity != null ) String name = entity.getJavaType().getName();
_CacheConfiguration.java,cacheManager = net.sf.ehcache.CacheManager.create();,if (net != null ) cacheManager = net.sf.ehcache.CacheManager.create();
_WebConfigurer.java,ServletContext servletContext = sce.getServletContext();,if (sce != null ) ServletContext servletContext = sce.getServletContext();
_WebConfigurer.java,WebApplicationContext ac = WebApplicationContextUtils.getRequiredWebApplicationContext(sce.getServletContext());,if (WebApplicationContextUtils != null ) WebApplicationContext ac = WebApplicationContextUtils.getRequiredWebApplicationContext(sce.getServletContext());
_StaticResourcesProductionFilter.java,String requestURI = httpRequest.getRequestURI();,if (httpRequest != null ) String requestURI = httpRequest.getRequestURI();
_CacheConfiguration.java,cacheManager = net.sf.ehcache.CacheManager.create();,if (net != null ) cacheManager = net.sf.ehcache.CacheManager.create();
_WebConfigurer.java,ServletContext servletContext = sce.getServletContext();,if (sce != null ) ServletContext servletContext = sce.getServletContext();
_WebConfigurer.java,WebApplicationContext ac = WebApplicationContextUtils.getRequiredWebApplicationContext(sce.getServletContext());,if (WebApplicationContextUtils != null ) WebApplicationContext ac = WebApplicationContextUtils.getRequiredWebApplicationContext(sce.getServletContext());
_StaticResourcesProductionFilter.java,String requestURI = httpRequest.getRequestURI();,if (httpRequest != null ) String requestURI = httpRequest.getRequestURI();
_CacheConfiguration.java,cacheManager = net.sf.ehcache.CacheManager.create();,if (net != null ) cacheManager = net.sf.ehcache.CacheManager.create();
_CacheConfiguration.java,cacheManager = net.sf.ehcache.CacheManager.create();,if (net != null ) cacheManager = net.sf.ehcache.CacheManager.create();
_LogsResource.java,this.name = logger.getName();,if (logger != null ) this.name = logger.getName();
_LogsResource.java,this.level = logger.getEffectiveLevel().toString();,if (logger != null ) this.level = logger.getEffectiveLevel().toString();
_AccountResource.java,User user = userRepository.findByLogin(SecurityUtils.getCurrentLogin());,if (userRepository != null ) User user = userRepository.findByLogin(SecurityUtils.getCurrentLogin());
_AccountResource.java,User user = userRepository.findByLogin(SecurityUtils.getCurrentLogin());,if (userRepository != null ) User user = userRepository.findByLogin(SecurityUtils.getCurrentLogin());
_AccountResource.java,SecurityContext securityContext = SecurityContextHolder.getContext();,if (SecurityContextHolder != null ) SecurityContext securityContext = SecurityContextHolder.getContext();
_AccountResource.java,User user = userRepository.findByLogin(springSecurityUser.getUsername());,if (userRepository != null ) User user = userRepository.findByLogin(springSecurityUser.getUsername());
_CacheConfiguration.java,cacheManager = new net.sf.ehcache.CacheManager();,if (net != null ) cacheManager = new net.sf.ehcache.CacheManager();
InternalRecordBuilderProcessor.java,var witherClassName = witherClassNameBuilder.build().toString();,if (witherClassNameBuilder != null ) var witherClassName = witherClassNameBuilder.build().toString();
RecordBuilderProcessor.java,var metaData = RecordBuilderOptions.build(processingEnv.getOptions());,if (RecordBuilderOptions != null ) var metaData = RecordBuilderOptions.build(processingEnv.getOptions());
RecordBuilderProcessor.java,var classesMirrors = ElementUtils.getClassesAttribute(classes.get());,if (ElementUtils != null ) var classesMirrors = ElementUtils.getClassesAttribute(classes.get());
InternalRecordInterfaceProcessor.java,var stripped = name.substring(prefix.length());,if (name != null ) var stripped = name.substring(prefix.length());
RecordBuilderProcessor.java,var metaData = RecordBuilderOptions.build(processingEnv.getOptions());,if (RecordBuilderOptions != null ) var metaData = RecordBuilderOptions.build(processingEnv.getOptions());
RecordBuilderProcessor.java,var metaData = RecordBuilderOptions.build(processingEnv.getOptions());,if (RecordBuilderOptions != null ) var metaData = RecordBuilderOptions.build(processingEnv.getOptions());
ElementUtils.java,String name = typeElement.getEnclosingElement().toString();,if (typeElement != null ) String name = typeElement.getEnclosingElement().toString();
InternalRecordBuilderProcessor.java,"String methodName = getWithMethodName(component, metaData.withClassMethodPrefix());","if (metaData != null ) String methodName = getWithMethodName(component, metaData.withClassMethodPrefix());"
InternalRecordBuilderProcessor.java,var baseName = recordClassType.name() + metaData.suffix();,if (metaData != null ) var baseName = recordClassType.name() + metaData.suffix();
RecordBuilderProcessor.java,var messager = processingEnv.getMessager();,if (processingEnv != null ) var messager = processingEnv.getMessager();
RecordBuilderProcessor.java,var comment = metaData.fileComment();,if (metaData != null ) var comment = metaData.fileComment();
RecordBuilderProcessor.java,JavaFile javaFile = javaFileBuilder.build();,if (javaFileBuilder != null ) JavaFile javaFile = javaFileBuilder.build();
RecordBuilderProcessor.java,"message = message + "": "" + e.getMessage();","if (e != null ) message = message + "": "" + e.getMessage();"
RecordBuilderProcessor.java,"var recordClassType = ElementUtils.getClassType(record, record.getTypeParameters());","if (record != null ) var recordClassType = ElementUtils.getClassType(record, record.getTypeParameters());"
RecordBuilderProcessor.java,var baseName = recordClassType.name() + metaData.suffix();,if (metaData != null ) var baseName = recordClassType.name() + metaData.suffix();
RecordBuilderProcessor.java,String name = recordComponents.get(index).name();,if (recordComponents != null ) String name = recordComponents.get(index).name();
RecordBuilderProcessor.java,var codeBuilder = CodeBlock.builder();,if (CodeBlock != null ) var codeBuilder = CodeBlock.builder();
RecordBuilderProcessor.java,String name = recordComponent.name();,if (recordComponent != null ) String name = recordComponent.name();
RecordBuilderProcessor.java,JavaFileObject sourceFile = filer.createSourceFile(builderClassType.name());,if (filer != null ) JavaFileObject sourceFile = filer.createSourceFile(builderClassType.name());
FFmpegFrameRecorder.java,audioChannels = inpAudioStream.codec().channels();,if (inpAudioStream != null ) audioChannels = inpAudioStream.codec().channels();
JavaFxPlayVideoAndAudio.java,ExecutorService executor = Executors.newSingleThreadExecutor();,if (Executors != null ) ExecutorService executor = Executors.newSingleThreadExecutor();
JavaFxPlayVideoAndAudio.java,Frame frame = grabber.grab();,if (grabber != null ) Frame frame = grabber.grab();
FFmpegFrameGrabber.java,PointerScope s = PointerScope.getInnerScope();,if (PointerScope != null ) PointerScope s = PointerScope.getInnerScope();
FFmpegFrameRecorder.java,PointerScope s = PointerScope.getInnerScope();,if (PointerScope != null ) PointerScope s = PointerScope.getInnerScope();
FFmpegLockCallback.java,PointerScope s = PointerScope.getInnerScope();,if (PointerScope != null ) PointerScope s = PointerScope.getInnerScope();
FFmpegLogCallback.java,PointerScope s = PointerScope.getInnerScope();,if (PointerScope != null ) PointerScope s = PointerScope.getInnerScope();
DeinterlacedVideoPlayer.java,CvMemStorage storage = CvMemStorage.create();,if (CvMemStorage != null ) CvMemStorage storage = CvMemStorage.create();
FFmpegStreamingTimeout.java,avformat.AVFormatContext oc = grabber.getFormatContext();,if (grabber != null ) avformat.AVFormatContext oc = grabber.getFormatContext();
FFmpegStreamingTimeout.java,avformat.AVIOInterruptCB cb = new avformat.AVIOInterruptCB();,if (avformat != null ) avformat.AVIOInterruptCB cb = new avformat.AVIOInterruptCB();
WebcamAndMicrophoneCapture.java,int sampleRate = (int) audioFormat.getSampleRate();,if (audioFormat != null ) int sampleRate = (int) audioFormat.getSampleRate();
WebcamAndMicrophoneCapture.java,int numChannels = audioFormat.getChannels();,if (audioFormat != null ) int numChannels = audioFormat.getChannels();
Java2DFrameConverter.java,int in = srcBuf.get();,if (srcBuf != null ) int in = srcBuf.get();
Java2DFrameConverter.java,int in = srcBuf.get();,if (srcBuf != null ) int in = srcBuf.get();
Java2DFrameConverter.java,int in = srcBuf.get();,if (srcBuf != null ) int in = srcBuf.get();
Java2DFrameConverter.java,int in = srcBuf.get();,if (srcBuf != null ) int in = srcBuf.get();
Java2DFrameConverter.java,int in = srcBuf.get();,if (srcBuf != null ) int in = srcBuf.get();
Java2DFrameConverter.java,int in = srcBuf.get();,if (srcBuf != null ) int in = srcBuf.get();
Java2DFrameConverter.java,int in = srcBuf.get();,if (srcBuf != null ) int in = srcBuf.get();
Java2DFrameConverter.java,float in = srcBuf.get();,if (srcBuf != null ) float in = srcBuf.get();
Java2DFrameConverter.java,float in = srcBuf.get();,if (srcBuf != null ) float in = srcBuf.get();
Java2DFrameConverter.java,double in = srcBuf.get();,if (srcBuf != null ) double in = srcBuf.get();
Java2DFrameConverter.java,double in = srcBuf.get();,if (srcBuf != null ) double in = srcBuf.get();
FrameGrabberTest.java,UByteIndexer frameIdx = frame.createIndexer();,if (frame != null ) UByteIndexer frameIdx = frame.createIndexer();
LeptonicaFrameConverter.java,frame.opaque = pix.clone();,if (pix != null ) frame.opaque = pix.clone();
AndroidFrameConverter.java,frame.imageStride = bitmap.getRowBytes();,if (bitmap != null ) frame.imageStride = bitmap.getRowBytes();
FacePreview.java,storage = CvMemStorage.create();,if (CvMemStorage != null ) storage = CvMemStorage.create();
FacePreview.java,int imageWidth  = grayImage.width();,if (grayImage != null ) int imageWidth  = grayImage.width();
FacePreview.java,int imageHeight = grayImage.height();,if (grayImage != null ) int imageHeight = grayImage.height();
FacePreview.java,int imageStride = grayImage.widthStep();,if (grayImage != null ) int imageStride = grayImage.widthStep();
FacePreview.java,ByteBuffer imageBuffer = grayImage.getByteBuffer();,if (grayImage != null ) ByteBuffer imageBuffer = grayImage.getByteBuffer();
FacePreview.java,float scaleX = (float)getWidth()/grayImage.width();,if ((float)getWidth()/grayImage != null ) float scaleX = (float)getWidth()/grayImage.width();
FacePreview.java,float scaleY = (float)getHeight()/grayImage.height();,if ((float)getHeight()/grayImage != null ) float scaleY = (float)getHeight()/grayImage.height();
FacePreview.java,int total = faces.total();,if (faces != null ) int total = faces.total();
BioInspiredRetina.java,Retina retina = createRetina(gammaTransformedImage.size());,if (createRetina(gammaTransformedImage != null ) Retina retina = createRetina(gammaTransformedImage.size());
CameraDevice.java,FileNode n = seq.access();,if (seq != null ) FileNode n = seq.access();
ProjectorDevice.java,FileNode n = seq.access();,if (seq != null ) FileNode n = seq.access();
CameraDevice.java,int count = seq.total();,if (seq != null ) int count = seq.total();
ProjectorDevice.java,int count = seq.total();,if (seq != null ) int count = seq.total();
FrameGrabberTest.java,UByteIndexer frameIdx = frame.createIndexer();,if (frame != null ) UByteIndexer frameIdx = frame.createIndexer();
FrameGrabberTest.java,Frame frame = grabber.grab();,if (grabber != null ) Frame frame = grabber.grab();
JavaFxPlayVideoAndAudio.java,OpenCVFrameConverter converter = new OpenCVFrameConverter.ToIplImage();,if (OpenCVFrameConverter != null ) OpenCVFrameConverter converter = new OpenCVFrameConverter.ToIplImage();
Java2DFrameConverter.java,int type = bi.getType();,if (bi != null ) int type = bi.getType();
RealSenseFrameGrabber.java,ByteBuffer bb = rawDepthImage.getByteBuffer();,if (rawDepthImage != null ) ByteBuffer bb = rawDepthImage.getByteBuffer();
PS3EyeFrameGrabber.java,camera = CLCamera.class.newInstance();,if (CLCamera != null ) camera = CLCamera.class.newInstance();
FrameGrabberTest.java,UByteIndexer frameIdx = frame.createIndexer();,if (frame != null ) UByteIndexer frameIdx = frame.createIndexer();
ImageSegmentation.java,UByteBufferIndexer srcIndexer = src.createIndexer();,if (src != null ) UByteBufferIndexer srcIndexer = src.createIndexer();
ImageSegmentation.java,FloatBufferIndexer kernelIndexer = kernel.createIndexer();,if (kernel != null ) FloatBufferIndexer kernelIndexer = kernel.createIndexer();
ImageSegmentation.java,IntBufferIndexer markersIndexer = markers.createIndexer();,if (markers != null ) IntBufferIndexer markersIndexer = markers.createIndexer();
ImageSegmentation.java,UByteBufferIndexer dstIndexer = dst.createIndexer();,if (dst != null ) UByteBufferIndexer dstIndexer = dst.createIndexer();
FlyCapture2FrameGrabber.java,Error error = camera.StartCapture();,if (camera != null ) Error error = camera.StartCapture();
FFmpegFrameGrabber.java,AVCodecContext c = st.codec();,if (st != null ) AVCodecContext c = st.codec();
RealSenseFrameGrabber.java,ByteBuffer bb = rawVideoImage.getByteBuffer();,if (rawVideoImage != null ) ByteBuffer bb = rawVideoImage.getByteBuffer();
RealSenseFrameGrabber.java,ByteBuffer bb = rawIRImage.getByteBuffer();,if (rawIRImage != null ) ByteBuffer bb = rawIRImage.getByteBuffer();
OpenCVFrameGrabber.java,private OpenCVFrameConverter converter = new OpenCVFrameConverter.ToMat();,if (OpenCVFrameConverter != null ) private OpenCVFrameConverter converter = new OpenCVFrameConverter.ToMat();
OpenCVFaceRecognizer.java,IntBuffer labelsBuf = labels.getIntBuffer();,if (labels != null ) IntBuffer labelsBuf = labels.getIntBuffer();
ProCamTransformer.java,int fullCapacity = kernelData.capacity();,if (kernelData != null ) int fullCapacity = kernelData.capacity();
ProjectiveColorTransformer.java,int fullCapacity = kernelData.capacity();,if (kernelData != null ) int fullCapacity = kernelData.capacity();
ProjectiveTransformer.java,int fullCapacity = kernelData.capacity();,if (kernelData != null ) int fullCapacity = kernelData.capacity();
cvkernels.java,final int size = data.capacity();,if (data != null ) final int size = data.capacity();
OpenCVFrameGrabber.java,private FrameConverter converter = new OpenCVFrameConverter.ToIplImage();,if (OpenCVFrameConverter != null ) private FrameConverter converter = new OpenCVFrameConverter.ToIplImage();
IPCameraFrameGrabber.java,final String subheader = sb.toString();,if (sb != null ) final String subheader = sb.toString();
IPCameraFrameGrabber.java,private FrameConverter converter = new OpenCVFrameConverter.ToIplImage();,if (OpenCVFrameConverter != null ) private FrameConverter converter = new OpenCVFrameConverter.ToIplImage();
IPCameraFrameGrabber.java,connection = url.openConnection();,if (url != null ) connection = url.openConnection();
IPCameraFrameGrabber.java,headerfields = connection.getHeaderFields();,if (connection != null ) headerfields = connection.getHeaderFields();
IPCameraFrameGrabber.java,input = connection.getInputStream();,if (connection != null ) input = connection.getInputStream();
IPCameraFrameGrabber.java,String subheader = sb.toString();,if (sb != null ) String subheader = sb.toString();
OpticalFlowDense.java,width = pGray.cols();,if (pGray != null ) width = pGray.cols();
OpticalFlowDense.java,final float xVelocity = in.get();,if (in != null ) final float xVelocity = in.get();
OpticalFlowDense.java,final float yVelocity = in.get();,if (in != null ) final float yVelocity = in.get();
OpticalFlowDense.java,FloatBuffer out = OF.getFloatBuffer();,if (OF != null ) FloatBuffer out = OF.getFloatBuffer();
OpticalFlowDense.java,int height = pGray.rows();,if (pGray != null ) int height = pGray.rows();
OpticalFlowDense.java,int width = pGray.cols();,if (pGray != null ) int width = pGray.cols();
OpticalFlowDense.java,float xVelocity = in.get();,if (in != null ) float xVelocity = in.get();
OpticalFlowDense.java,float yVelocity = in.get();,if (in != null ) float yVelocity = in.get();
JavaCVCL.java,GLDrawableFactory factory = GLDrawableFactory.getFactory(caps.getGLProfile());,if (GLDrawableFactory != null ) GLDrawableFactory factory = GLDrawableFactory.getFactory(caps.getGLProfile());
FaceRecognition.java,confidence = pConfidence.get();,if (pConfidence != null ) confidence = pConfidence.get();
FaceRecognition.java,final String line = imgListFile.readLine();,if (imgListFile != null ) final String line = imgListFile.readLine();
FaceRecognition.java,final String line = imgListFile.readLine();,if (imgListFile != null ) final String line = imgListFile.readLine();
FaceRecognition.java,final int type = cvMat.type();,if (cvMat != null ) final int type = cvMat.type();
ObjectFinder.java,int total = objectKeypoints.limit();,if (objectKeypoints != null ) int total = objectKeypoints.limit();
ObjectFinder.java,int total = imageKeypoints.limit();,if (imageKeypoints != null ) int total = imageKeypoints.limit();
ObjectFinder.java,int total = descriptors.total();,if (descriptors != null ) int total = descriptors.total();
ObjectFinder.java,private CvMemStorage tempStorage = CvMemStorage.create();,if (CvMemStorage != null ) private CvMemStorage tempStorage = CvMemStorage.create();
ObjectFinder.java,int total = descriptors.total();,if (descriptors != null ) int total = descriptors.total();
ObjectFinder.java,int imageRows = imageMat.rows();,if (imageMat != null ) int imageRows = imageMat.rows();
ObjectFinder.java,FloatBuffer objectBuf = objectMat.getFloatBuffer();,if (objectMat != null ) FloatBuffer objectBuf = objectMat.getFloatBuffer();
ObjectFinder.java,FloatBuffer imageBuf = imageMat.getFloatBuffer();,if (imageMat != null ) FloatBuffer imageBuf = imageMat.getFloatBuffer();
ObjectFinder.java,IntBuffer indicesBuf = indicesMat.getIntBuffer();,if (indicesMat != null ) IntBuffer indicesBuf = indicesMat.getIntBuffer();
ObjectFinder.java,FloatBuffer distsBuf = distsMat.getFloatBuffer();,if (distsMat != null ) FloatBuffer distsBuf = distsMat.getFloatBuffer();
WebcamAndMicrophoneCapture.java,int sampleRate = (int) audioFormat.getSampleRate();,if (audioFormat != null ) int sampleRate = (int) audioFormat.getSampleRate();
WebcamAndMicrophoneCapture.java,int numChannels = audioFormat.getChannels();,if (audioFormat != null ) int numChannels = audioFormat.getChannels();
WebcamAndMicrophoneCapture.java,startTime = System.currentTimeMillis();,if (System != null ) startTime = System.currentTimeMillis();
WebcamAndMicrophoneCapture.java,OpenCVFrameConverter.ToIplImage converter = new OpenCVFrameConverter.ToIplImage();,if (OpenCVFrameConverter != null ) OpenCVFrameConverter.ToIplImage converter = new OpenCVFrameConverter.ToIplImage();
WebcamAndMicrophoneCapture.java,IplImage grabbedImage = converter.convert(grabber.grab());,if (converter != null ) IplImage grabbedImage = converter.convert(grabber.grab());
WebcamAndMicrophoneCapture.java,startTime = System.currentTimeMillis();,if (System != null ) startTime = System.currentTimeMillis();
ColoredObjectTrack.java,img = grabber.grab();,if (grabber != null ) img = grabber.grab();
FaceApplet.java,grabbedImage = grabber.grab();,if (grabber != null ) grabbedImage = grabber.grab();
FaceApplet.java,grabbedImage = grabber.grab();,if (grabber != null ) grabbedImage = grabber.grab();
MotionDetector.java,IplImage frame = grabber.grab();,if (grabber != null ) IplImage frame = grabber.grab();
FFmpegFrameRecorder.java,int width = image.width();,if (image != null ) int width = image.width();
FFmpegFrameRecorder.java,int height = image.height();,if (image != null ) int height = image.height();
FFmpegFrameRecorder.java,int step = image.widthStep();,if (image != null ) int step = image.widthStep();
FFmpegFrameRecorder.java,BytePointer data = image.imageData();,if (image != null ) BytePointer data = image.imageData();
FFmpegFrameRecorder.java,int depth = image.depth();,if (image != null ) int depth = image.depth();
FFmpegFrameRecorder.java,int channels = image.nChannels();,if (image != null ) int channels = image.nChannels();
FrameGrabber.java,grabbedImages[i] = frameGrabbers[i].grab();,if (frameGrabbers[i] != null ) grabbedImages[i] = frameGrabbers[i].grab();
FrameGrabber.java,grabbedImages[i] = frameGrabbers[i].grab();,if (frameGrabbers[i] != null ) grabbedImages[i] = frameGrabbers[i].grab();
GLCanvasFrame.java,this.width  = image.arrayWidth();,if (image != null ) this.width  = image.arrayWidth();
GLCanvasFrame.java,this.height = image.arrayHeight();,if (image != null ) this.height = image.arrayHeight();
GLCanvasFrame.java,this.buffer = image.getByteBuffer();,if (image != null ) this.buffer = image.getByteBuffer();
FlyCapture2FrameGrabber.java,error = camera.StartCapture();,if (camera != null ) error = camera.StartCapture();
FlyCapture2FrameGrabber.java,error = camera.StopCapture();,if (camera != null ) error = camera.StopCapture();
FlyCapture2FrameGrabber.java,error = camera.FireSoftwareTrigger();,if (camera != null ) error = camera.FireSoftwareTrigger();
GLCanvasFrame.java,this.width  = image.width();,if (image != null ) this.width  = image.width();
GLCanvasFrame.java,this.height = image.height();,if (image != null ) this.height = image.height();
opencv_core.java,long temp = rng.get();,if (rng != null ) long temp = rng.get();
opencv_core.java,image.bufferedImage = template.cloneBufferedImage();,if (template != null ) image.bufferedImage = template.cloneBufferedImage();
opencv_core.java,SampleModel sm = image.getSampleModel();,if (image != null ) SampleModel sm = image.getSampleModel();
opencv_core.java,int type = bi.getType();,if (bi != null ) int type = bi.getType();
opencv_core.java,int in = srcBuf.get();,if (srcBuf != null ) int in = srcBuf.get();
opencv_core.java,int in = srcBuf.get();,if (srcBuf != null ) int in = srcBuf.get();
opencv_core.java,int in = srcBuf.get();,if (srcBuf != null ) int in = srcBuf.get();
opencv_core.java,int in = srcBuf.get();,if (srcBuf != null ) int in = srcBuf.get();
opencv_core.java,int in = srcBuf.get();,if (srcBuf != null ) int in = srcBuf.get();
opencv_core.java,int in = srcBuf.get();,if (srcBuf != null ) int in = srcBuf.get();
opencv_core.java,int in = srcBuf.get();,if (srcBuf != null ) int in = srcBuf.get();
opencv_core.java,float in = srcBuf.get();,if (srcBuf != null ) float in = srcBuf.get();
opencv_core.java,float in = srcBuf.get();,if (srcBuf != null ) float in = srcBuf.get();
opencv_core.java,double in = srcBuf.get();,if (srcBuf != null ) double in = srcBuf.get();
opencv_core.java,double in = srcBuf.get();,if (srcBuf != null ) double in = srcBuf.get();
opencv_core.java,SampleModel sm = image.getSampleModel();,if (image != null ) SampleModel sm = image.getSampleModel();
opencv_core.java,Raster r       = image.getRaster();,if (image != null ) Raster r       = image.getRaster();
opencv_core.java,int step = sm.getWidth()*sm.getNumBands();,if (sm != null ) int step = sm.getWidth()*sm.getNumBands();
opencv_core.java,int channels = sm.getNumBands();,if (sm != null ) int channels = sm.getNumBands();
opencv_core.java,SampleModel sm = image.getSampleModel();,if (image != null ) SampleModel sm = image.getSampleModel();
opencv_core.java,Raster r       = image.getRaster();,if (image != null ) Raster r       = image.getRaster();
opencv_core.java,int step = sm.getWidth()*sm.getNumBands();,if (sm != null ) int step = sm.getWidth()*sm.getNumBands();
opencv_core.java,int channels = sm.getNumBands();,if (sm != null ) int channels = sm.getNumBands();
opencv_core.java,BytePointer pointer = str.ptr();,if (str != null ) BytePointer pointer = str.ptr();
IPCameraFrameGrabber.java,connection = url.openConnection();,if (url != null ) connection = url.openConnection();
IPCameraFrameGrabber.java,headerfields = connection.getHeaderFields();,if (connection != null ) headerfields = connection.getHeaderFields();
IPCameraFrameGrabber.java,input = connection.getInputStream();,if (connection != null ) input = connection.getInputStream();
IPCameraFrameGrabber.java,c = input.read();,if (input != null ) c = input.read();
IPCameraFrameGrabber.java,String subheader = sb.toString();,if (sb != null ) String subheader = sb.toString();
MarkerDetector.java,double confidence = markers.cf();,if (markers != null ) double confidence = markers.cf();
FFmpegFrameRecorder.java,int inputSize = samples.limit() - samples.position();,if (samples != null ) int inputSize = samples.limit() - samples.position();
FrameGrabber.java,latencies[i] = newestTimestamp-frameGrabbers[i].getTimestamp();,if (newestTimestamp-frameGrabbers[i] != null ) latencies[i] = newestTimestamp-frameGrabbers[i].getTimestamp();
FrameGrabber.java,newestTimestamp = frameGrabbers[i].getTimestamp();,if (frameGrabbers[i] != null ) newestTimestamp = frameGrabbers[i].getTimestamp();
CanvasFrame.java,BufferStrategy strategy = canvas.getBufferStrategy();,if (canvas != null ) BufferStrategy strategy = canvas.getBufferStrategy();
CanvasFrame.java,g = strategy.getDrawGraphics();,if (strategy != null ) g = strategy.getDrawGraphics();
FFmpegFrameRecorder.java,samplesBuffer = samplesPointer.capacity(bufferSize).asBuffer();,if (samplesPointer != null ) samplesBuffer = samplesPointer.capacity(bufferSize).asBuffer();
FaceRecognition.java,final int type = cvMat.maskedType();,if (cvMat != null ) final int type = cvMat.maskedType();
FrameGrabber.java,s[i] = list.get(i).getSimpleName();,if (list != null ) s[i] = list.get(i).getSimpleName();
FFmpegFrameRecorder.java,String name = oformat.name().getString();,if (oformat != null ) String name = oformat.name().getString();
FFmpegFrameRecorder.java,String name = oformat.name().getString();,if (oformat != null ) String name = oformat.name().getString();
FFmpegFrameGrabber.java,AVCodecContext pCodecCtx = pStream.codec();,if (pStream != null ) AVCodecContext pCodecCtx = pStream.codec();
FFmpegFrameGrabber.java,samplesBuffer = samplesPointer.capacity(bufferSize).asBuffer();,if (samplesPointer != null ) samplesBuffer = samplesPointer.capacity(bufferSize).asBuffer();
FFmpegFrameGrabber.java,long dts = packet.dts();,if (packet != null ) long dts = packet.dts();
FFmpegFrameGrabber.java,BytePointer p = packet.data();,if (packet != null ) BytePointer p = packet.data();
FFmpegFrameRecorder.java,int width = frame.width();,if (frame != null ) int width = frame.width();
FFmpegFrameRecorder.java,int height = frame.height();,if (frame != null ) int height = frame.height();
FFmpegFrameRecorder.java,int step = frame.widthStep();,if (frame != null ) int step = frame.widthStep();
FFmpegFrameRecorder.java,BytePointer data = frame.imageData();,if (frame != null ) BytePointer data = frame.imageData();
FFmpegFrameRecorder.java,int depth = frame.depth();,if (frame != null ) int depth = frame.depth();
FFmpegFrameRecorder.java,int channels = frame.nChannels();,if (frame != null ) int channels = frame.nChannels();
CanvasFrame.java,bufferStrategy = canvas.getBufferStrategy();,if (canvas != null ) bufferStrategy = canvas.getBufferStrategy();
FFmpegFrameGrabber.java,pCodecCtx = pStream.codec();,if (pStream != null ) pCodecCtx = pStream.codec();
FFmpegFrameRecorder.java,String name = oformat.name().getString();,if (oformat != null ) String name = oformat.name().getString();
JavaCV.java,String timestamp = JavaCV.class.getPackage().getImplementationVersion();,if (JavaCV != null ) String timestamp = JavaCV.class.getPackage().getImplementationVersion();
