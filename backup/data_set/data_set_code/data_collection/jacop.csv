Filename,Buggy/Deleted,Fixed/Added
Solve.java,int to = options.getTimeOut();,if (options != null ) int to = options.getTimeOut();
Solve.java,result = rs.labeling();,if (rs != null ) result = rs.labeling();
Solve.java,int to = options.getTimeOut();,if (options != null ) int to = options.getTimeOut();
Solve.java,result = rs.labeling();,if (rs != null ) result = rs.labeling();
Solve.java,int to = options.getTimeOut();,if (options != null ) int to = options.getTimeOut();
Solve.java,result = rs.labeling();,if (rs != null ) result = rs.labeling();
Solve.java,int ns = options.getNumberSolutions();,if (options != null ) int ns = options.getNumberSolutions();
Solve.java,int ns = options.getNumberSolutions();,if (options != null ) int ns = options.getNumberSolutions();
Solve.java,result = rs.labeling();,if (rs != null ) result = rs.labeling();
Solve.java,result = rs.labeling();,if (rs != null ) result = rs.labeling();
Solve.java,result = rs.labeling();,if (rs != null ) result = rs.labeling();
SearchItem.java,int count = body.jjtGetNumChildren();,if (body != null ) int count = body.jjtGetNumChildren();
ActivityMax.java,float right = var.activity();,if (var != null ) float right = var.activity();
ActivityMax.java,float left = leftVar.activity();,if (leftVar != null ) float left = leftVar.activity();
ActivityMax.java,float right = rightVar.activity();,if (rightVar != null ) float right = rightVar.activity();
ActivityMin.java,float right = var.activity();,if (var != null ) float right = var.activity();
ActivityMin.java,float left = leftVar.activity();,if (leftVar != null ) float left = leftVar.activity();
ActivityMin.java,float right = rightVar.activity();,if (rightVar != null ) float right = rightVar.activity();
TaskReversedView.java,int max = -lct - dur.max();,if (dur != null ) int max = -lct - dur.max();
TaskReversedView.java,int max = -lct - dur.max();,if (dur != null ) int max = -lct - dur.max();
Count.java,int start = position.value();,if (position != null ) int start = position.value();
Count.java,int start = position.value();,if (position != null ) int start = position.value();
ValuePrecede.java,int a = alpha.value();,if (alpha != null ) int a = alpha.value();
ValuePrecede.java,int b = beta.value();,if (beta != null ) int b = beta.value();
ValuePrecede.java,int a = alpha.value();,if (alpha != null ) int a = alpha.value();
ValuePrecede.java,int b = beta.value();,if (beta != null ) int b = beta.value();
ValuePrecede.java,int a = alpha.value();,if (alpha != null ) int a = alpha.value();
ValuePrecede.java,int g = gamma.value();,if (gamma != null ) int g = gamma.value();
ValuePrecede.java,int a = alpha.value();,if (alpha != null ) int a = alpha.value();
Regular.java,ValueEnumeration enumer = vars[level].domain.valueEnumeration();,if (vars[level] != null ) ValueEnumeration enumer = vars[level].domain.valueEnumeration();
Regular.java,v = enumer.nextElement();,if (enumer != null ) v = enumer.nextElement();
TaskNormalView.java,int max = lct - dur.max();,if (dur != null ) int max = lct - dur.max();
SplitRandomSelectFloat.java,leftFirst = generator.nextBoolean();,if (generator != null ) leftFirst = generator.nextBoolean();
SplitRandomSelect.java,int value = var.min();,if (var != null ) int value = var.min();
SplitRandomSelect.java,value = var.min();,if (var != null ) value = var.min();
SplitRandomSelect.java,value = super.getChoiceValue();,if (super != null ) value = super.getChoiceValue();
SplitRandomSelect.java,leftFirst = generator.nextBoolean();,if (generator != null ) leftFirst = generator.nextBoolean();
Conditional.java,Set<Var> cvs = c[i].arguments();,if (c[i] != null ) Set<Var> cvs = c[i].arguments();
CountBounds.java,int start = position.value();,if (position != null ) int start = position.value();
CountBounds.java,int start = position.value();,if (position != null ) int start = position.value();
CountValuesBounds.java,this.valuesDomainComplement = valuesDomain.complement();,if (valuesDomain != null ) this.valuesDomainComplement = valuesDomain.complement();
CountValuesBounds.java,int start = position.value();,if (position != null ) int start = position.value();
CountValuesBounds.java,restEq = rest.value();,if (rest != null ) restEq = rest.value();
CountValuesBounds.java,numberEq[i] = equal[i].value();,if (equal[i] != null ) numberEq[i] = equal[i].value();
CountValuesBounds.java,min += extendedCounter[i].min();,if (extendedCounter[i] != null ) min += extendedCounter[i].min();
CountValuesBounds.java,max += extendedCounter[i].max();,if (extendedCounter[i] != null ) max += extendedCounter[i].max();
Cumulative.java,long C = (long)limit.max();,if ((long)limit != null ) long C = (long)limit.max();
Cumulative.java,long C = (long)limit.max();,if ((long)limit != null ) long C = (long)limit.max();
Cumulative.java,LB[i] = ts[i].est();,if (ts[i] != null ) LB[i] = ts[i].est();
CumulativeBasic.java,int tResMin = t.res.min();,if (t != null ) int tResMin = t.res.min();
CumulativeBasic.java,lastStart[ti] = t.start.min();,if (t != null ) lastStart[ti] = t.start.min();
CumulativeBasic.java,lastFree[ti] = t.start.min();,if (t != null ) lastFree[ti] = t.start.min();
CumulativePrimary.java,int first = activePnt.value();,if (activePnt != null ) int first = activePnt.value();
CumulativePrimary.java,int first = activePnt.value();,if (activePnt != null ) int first = activePnt.value();
CumulativePrimary.java,int min = start[k].min();,if (start[k] != null ) int min = start[k].min();
CumulativePrimary.java,int s = start[k].min();,if (start[k] != null ) int s = start[k].min();
Solve.java,solveKind = getKind(kind.getKind());,if (getKind(kind != null ) solveKind = getKind(kind.getKind());
Solve.java,solveKind = getKind(kind.getKind());,if (getKind(kind != null ) solveKind = getKind(kind.getKind());
Solve.java,solveKind = getKind(kind.getKind());,if (getKind(kind != null ) solveKind = getKind(kind.getKind());
Solve.java,long currentTime = timer.getCPUTime();,if (timer != null ) long currentTime = timer.getCPUTime();
Solve.java,int to = options.getTimeOut();,if (options != null ) int to = options.getTimeOut();
Solve.java,Result = rs.labeling();,if (rs != null ) Result = rs.labeling();
Solve.java,int to = options.getTimeOut();,if (options != null ) int to = options.getTimeOut();
Solve.java,Result = rs.labeling();,if (rs != null ) Result = rs.labeling();
Solve.java,int to = options.getTimeOut();,if (options != null ) int to = options.getTimeOut();
Solve.java,Result = rs.labeling();,if (rs != null ) Result = rs.labeling();
Solve.java,int ns = options.getNumberSolutions();,if (options != null ) int ns = options.getNumberSolutions();
Solve.java,long currentTime = timer.getCPUTime();,if (timer != null ) long currentTime = timer.getCPUTime();
Solve.java,Result = rs.labeling();,if (rs != null ) Result = rs.labeling();
Solve.java,Result = rs.labeling();,if (rs != null ) Result = rs.labeling();
Solve.java,Result = rs.labeling();,if (rs != null ) Result = rs.labeling();
Solve.java,ComparatorVariable<IntVar> comparator = si.getVarSelect();,if (si != null ) ComparatorVariable<IntVar> comparator = si.getVarSelect();
Solve.java,int to = options.getTimeOut();,if (options != null ) int to = options.getTimeOut();
Solve.java,nodes += dfs.getNodes();,if (dfs != null ) nodes += dfs.getNodes();
Solve.java,nodes += label.getNodes();,if (label != null ) nodes += label.getNodes();
Solve.java,startCPU = timer.getCPUTime();,if (timer != null ) startCPU = timer.getCPUTime();
ImplicationConstraints.java,int val = ei.getKey();,if (ei != null ) int val = ei.getKey();
ImplicationConstraints.java,IntVar bb = ei.getValue();,if (ei != null ) IntVar bb = ei.getValue();
ReificationConstraints.java,int val = ei.getKey();,if (ei != null ) int val = ei.getKey();
ReificationConstraints.java,IntVar bb = ei.getValue();,if (ei != null ) IntVar bb = ei.getValue();
Sum.java,int pointer = nextGroundedPosition.value();,if (nextGroundedPosition != null ) int pointer = nextGroundedPosition.value();
Sum.java,int lMin = sumGrounded.value();,if (sumGrounded != null ) int lMin = sumGrounded.value();
VariablesParameters.java,int noAnnotations = child.jjtGetNumChildren();,if (child != null ) int noAnnotations = child.jjtGetNumChildren();
VariablesParameters.java,int no = nchild.jjtGetNumChildren();,if (nchild != null ) int no = nchild.jjtGetNumChildren();
VariablesParameters.java,int number = grandchild.jjtGetNumChildren();,if (grandchild != null ) int number = grandchild.jjtGetNumChildren();
GlobalConstraints.java,resSum += r[i].max();,if (r[i] != null ) resSum += r[i].max();
GlobalConstraints.java,lb[i] = counters[i].min();,if (counters[i] != null ) lb[i] = counters[i].min();
GlobalConstraints.java,ub[i] = counters[i].max();,if (counters[i] != null ) ub[i] = counters[i].max();
AtLeast.java,int start = position.value();,if (position != null ) int start = position.value();
AtLeast.java,int start = position.value();,if (position != null ) int start = position.value();
AtMost.java,int start = position.value();,if (position != null ) int start = position.value();
AtMost.java,int start = position.value();,if (position != null ) int start = position.value();
CountValues.java,this.valuesDomainComplement = valuesDomain.complement();,if (valuesDomain != null ) this.valuesDomainComplement = valuesDomain.complement();
CountValues.java,int start = position.value();,if (position != null ) int start = position.value();
CountValues.java,restEq = rest.value();,if (rest != null ) restEq = rest.value();
CountValues.java,numberEq[i] = equal[i].value();,if (equal[i] != null ) numberEq[i] = equal[i].value();
CountValues.java,min += extendedCounter[i].min();,if (extendedCounter[i] != null ) min += extendedCounter[i].min();
CountValues.java,max += extendedCounter[i].max();,if (extendedCounter[i] != null ) max += extendedCounter[i].max();
CountValues.java,c = counter[i].value();,if (counter[i] != null ) c = counter[i].value();
CountVar.java,int start = position.value();,if (position != null ) int start = position.value();
CountVar.java,int start = position.value();,if (position != null ) int start = position.value();
XmodYeqZ.java,int absY = Math.abs(y.value());,if (Math != null ) int absY = Math.abs(y.value());
XmodYeqZ.java,int absY = Math.abs(y.value());,if (Math != null ) int absY = Math.abs(y.value());
FloatDomain.java,ValueEnumeration enumer = domain.valueEnumeration();,if (domain != null ) ValueEnumeration enumer = domain.valueEnumeration();
FloatDomain.java,ValueEnumeration enumer = domain.valueEnumeration();,if (domain != null ) ValueEnumeration enumer = domain.valueEnumeration();
FloatDomain.java,ValueEnumeration enumer = domain.valueEnumeration();,if (domain != null ) ValueEnumeration enumer = domain.valueEnumeration();
FloatDomain.java,ValueEnumeration enumer = domain.valueEnumeration();,if (domain != null ) ValueEnumeration enumer = domain.valueEnumeration();
FloatDomain.java,int first = enumer.nextElement();,if (enumer != null ) int first = enumer.nextElement();
FloatDomain.java,int next = enumer.nextElement();,if (enumer != null ) int next = enumer.nextElement();
FloatDomain.java,ValueEnumeration enumer = domain.valueEnumeration();,if (domain != null ) ValueEnumeration enumer = domain.valueEnumeration();
FloatDomain.java,int next = enumer.nextElement();,if (enumer != null ) int next = enumer.nextElement();
FloatDomain.java,ValueEnumeration enumer = domain.valueEnumeration();,if (domain != null ) ValueEnumeration enumer = domain.valueEnumeration();
FloatDomain.java,int next = enumer.nextElement();,if (enumer != null ) int next = enumer.nextElement();
SumBool.java,int sumValue = sum.value();,if (sum != null ) int sumValue = sum.value();
SumBool.java,int sumValue = sum.value();,if (sum != null ) int sumValue = sum.value();
SumBool.java,int sumValue = sum.value();,if (sum != null ) int sumValue = sum.value();
SumBool.java,int sumValue = sum.value();,if (sum != null ) int sumValue = sum.value();
Channel.java,this.n = bs.size();,if (bs != null ) this.n = bs.size();
Channel.java,int start = position.value();,if (position != null ) int start = position.value();
Channel.java,IntVar b = valueMap.get(x.value());,if (valueMap != null ) IntVar b = valueMap.get(x.value());
ReificationConstraints.java,int val = ei.getKey();,if (ei != null ) int val = ei.getKey();
ReificationConstraints.java,IntVar bb = ei.getValue();,if (ei != null ) IntVar bb = ei.getValue();
Channel.java,int idx = indexOf(x.value());,if (indexOf(x != null ) int idx = indexOf(x.value());
ArgMax.java,int vDomMin = list[i].min();,if (list[i] != null ) int vDomMin = list[i].min();
ArgMax.java,int vDomMax = list[i].max();,if (list[i] != null ) int vDomMax = list[i].max();
ArgMax.java,int vDomMax = list[i].max();,if (list[i] != null ) int vDomMax = list[i].max();
XplusYplusCeqZ.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XplusYplusCeqZ.java,"sumMin = Math.addExact(sumMin, x.min());","if (x != null ) sumMin = Math.addExact(sumMin, x.min());"
XplusYplusCeqZ.java,"sumMax = Math.addExact(sumMax, x.max());","if (x != null ) sumMax = Math.addExact(sumMax, x.max());"
XplusYplusCeqZ.java,"sumMin = Math.addExact(sumMin, y.min());","if (y != null ) sumMin = Math.addExact(sumMin, y.min());"
XplusYplusCeqZ.java,"sumMax = Math.addExact(sumMax, y.max());","if (y != null ) sumMax = Math.addExact(sumMax, y.max());"
XplusYplusQeqZ.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XplusYplusQeqZ.java,"sumMin = Math.addExact(sumMin, x.min());","if (x != null ) sumMin = Math.addExact(sumMin, x.min());"
XplusYplusQeqZ.java,"sumMax = Math.addExact(sumMax, x.max());","if (x != null ) sumMax = Math.addExact(sumMax, x.max());"
XplusYplusQeqZ.java,"sumMin = Math.addExact(sumMin, y.min());","if (y != null ) sumMin = Math.addExact(sumMin, y.min());"
XplusYplusQeqZ.java,"sumMax = Math.addExact(sumMax, y.max());","if (y != null ) sumMax = Math.addExact(sumMax, y.max());"
XplusYplusQeqZ.java,"sumMin = Math.addExact(sumMin, q.min());","if (q != null ) sumMin = Math.addExact(sumMin, q.min());"
XplusYplusQeqZ.java,"sumMax = Math.addExact(sumMax, q.max());","if (q != null ) sumMax = Math.addExact(sumMax, q.max());"
XplusYplusQgtC.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XplusYplusQgtC.java,"sumMin = Math.addExact(sumMin, x.min());","if (x != null ) sumMin = Math.addExact(sumMin, x.min());"
XplusYplusQgtC.java,"sumMax = Math.addExact(sumMax, x.max());","if (x != null ) sumMax = Math.addExact(sumMax, x.max());"
XplusYplusQgtC.java,"sumMin = Math.addExact(sumMin, y.min());","if (y != null ) sumMin = Math.addExact(sumMin, y.min());"
XplusYplusQgtC.java,"sumMax = Math.addExact(sumMax, y.max());","if (y != null ) sumMax = Math.addExact(sumMax, y.max());"
XplusYplusQgtC.java,"sumMin = Math.addExact(sumMin, q.min());","if (q != null ) sumMin = Math.addExact(sumMin, q.min());"
XplusYplusQgtC.java,"sumMax = Math.addExact(sumMax, q.max());","if (q != null ) sumMax = Math.addExact(sumMax, q.max());"
ArgMax.java,vDom = list[i].dom();,if (list[i] != null ) vDom = list[i].dom();
ArgMax.java,singleMaxValue = list[i].value();,if (list[i] != null ) singleMaxValue = list[i].value();
ArgMax.java,vDom = list[i].dom();,if (list[i] != null ) vDom = list[i].dom();
ArgMin.java,vDom = list[i].dom();,if (list[i] != null ) vDom = list[i].dom();
ArgMin.java,singleMinValue = list[i].value();,if (list[i] != null ) singleMinValue = list[i].value();
ArgMin.java,vDom = list[i].dom();,if (list[i] != null ) vDom = list[i].dom();
Alldiff.java,int groundPos = grounded.value();,if (grounded != null ) int groundPos = grounded.value();
Alldifferent.java,int groundPos = grounded.value();,if (grounded != null ) int groundPos = grounded.value();
IntervalDomain.java,temp = domain.getClass().newInstance();,if (domain != null ) temp = domain.getClass().newInstance();
Solve.java,solveKind = getKind(kind.getKind());,if (getKind(kind != null ) solveKind = getKind(kind.getKind());
Solve.java,solveKind = getKind(kind.getKind());,if (getKind(kind != null ) solveKind = getKind(kind.getKind());
Solve.java,solveKind = getKind(kind.getKind());,if (getKind(kind != null ) solveKind = getKind(kind.getKind());
Solve.java,solveKind = getKind(kind.getKind());,if (getKind(kind != null ) solveKind = getKind(kind.getKind());
Count.java,return (countAll == counter.min());,if (counter != null ) return (countAll == counter.min());
Solve.java,ComparatorVariable<IntVar> comparator = comparator = si.getVarSelect();,if (si != null ) ComparatorVariable<IntVar> comparator = comparator = si.getVarSelect();
Member.java,int start = position.value();,if (position != null ) int start = position.value();
Member.java,int start = position.value();,if (position != null ) int start = position.value();
CumulativePrimary.java,int min = start[i].min(); //t.est();,if (//t != null ) int min = start[i].min(); //t.est();
XmodYeqZ.java,int absY = Math.abs(y.value());,if (Math != null ) int absY = Math.abs(y.value());
Solve.java,long currentTime = timeMeter.getThreadCpuTime(tread.getId());,if (timeMeter != null ) long currentTime = timeMeter.getThreadCpuTime(tread.getId());
Solve.java,long currentTime = timeMeter.getThreadCpuTime(tread.getId());,if (timeMeter != null ) long currentTime = timeMeter.getThreadCpuTime(tread.getId());
Solve.java,tread = java.lang.Thread.currentThread();,if (java != null ) tread = java.lang.Thread.currentThread();
Solve.java,startCPU = b.getThreadCpuTime(tread.getId());,if (b != null ) startCPU = b.getThreadCpuTime(tread.getId());
PrioritySearch.java,int solutionNoBeforeSearch = solutionListener.solutionsNo();,if (solutionListener != null ) int solutionNoBeforeSearch = solutionListener.solutionsNo();
Solve.java,nodes += label.getNodes();,if (label != null ) nodes += label.getNodes();
PrioritySearch.java,T current = itr.next();,if (itr != null ) T current = itr.next();
RestartSearch.java,ConsistencyListener cs = dfs[i].getConsistencyListener();,if (dfs[i] != null ) ConsistencyListener cs = dfs[i].getConsistencyListener();
SearchItem.java,int count = ann.jjtGetNumChildren();,if (ann != null ) int count = ann.jjtGetNumChildren();
Solve.java,solutions = label.getSolutionListener().solutionsNo();,if (label != null ) solutions = label.getSolutionListener().solutionsNo();
Solve.java,solutions = l.getSolutionListener().solutionsNo();,if (l != null ) solutions = l.getSolutionListener().solutionsNo();
VariablesParameters.java,int no = child.jjtGetNumChildren();,if (child != null ) int no = child.jjtGetNumChildren();
VariablesParameters.java,int number = grandchild.jjtGetNumChildren();,if (grandchild != null ) int number = grandchild.jjtGetNumChildren();
VariablesParameters.java,int numberSL = arrayLiteral.jjtGetNumChildren();,if (arrayLiteral != null ) int numberSL = arrayLiteral.jjtGetNumChildren();
Solve.java,solveKind = getKind(kind.getKind());,if (getKind(kind != null ) solveKind = getKind(kind.getKind());
SplitSelect.java,int value = super.getChoiceValue();,if (super != null ) int value = super.getChoiceValue();
Solve.java,int to = options.getTimeOut();,if (options != null ) int to = options.getTimeOut();
Binpacking.java,maxCapacity = maxC.max();,if (maxC != null ) maxCapacity = maxC.max();
Diffn.java,int lMin = rr.length(oDim).min();,if (rr != null ) int lMin = rr.length(oDim).min();
Diffn.java,int lMin = rr.length(oDim).min();,if (rr != null ) int lMin = rr.length(oDim).min();
FilterBenchmarkTest.java,result = store.consistency();,if (store != null ) result = store.consistency();
FilterBenchmarkTest.java,result = store.consistency();,if (store != null ) result = store.consistency();
FilterBenchmarkTest.java,result = store.consistency();,if (store != null ) result = store.consistency();
FilterBenchmarkTest.java,result = store.consistency();,if (store != null ) result = store.consistency();
FilterBenchmarkTest.java,result = store.consistency();,if (store != null ) result = store.consistency();
FilterBenchmarkTest.java,result = store.consistency();,if (store != null ) result = store.consistency();
FilterBenchmarkTest.java,result = store.consistency();,if (store != null ) result = store.consistency();
FilterBenchmarkTest.java,result = store.consistency();,if (store != null ) result = store.consistency();
FilterBenchmarkTest.java,int[] delays = filter.delays();,if (filter != null ) int[] delays = filter.delays();
FilterBenchmarkTest.java,int[] lastOp = filter.lastOp();,if (filter != null ) int[] lastOp = filter.lastOp();
FilterBenchmarkTest.java,D[i] = filter.addDel();,if (filter != null ) D[i] = filter.addDel();
FilterBenchmarkTest.java,D[i] = filter.mulDel();,if (filter != null ) D[i] = filter.mulDel();
FilterBenchmarkTest.java,Ns = filter.names();,if (filter != null ) Ns = filter.names();
FilterBenchmarkTest.java,int[] delays = filter.delays();,if (filter != null ) int[] delays = filter.delays();
FilterBenchmarkTest.java,int[] lastOp = filter.lastOp();,if (filter != null ) int[] lastOp = filter.lastOp();
FilterBenchmarkTest.java,D[i] = filter.addDel();,if (filter != null ) D[i] = filter.addDel();
FilterBenchmarkTest.java,D[i] = filter.mulDel();,if (filter != null ) D[i] = filter.mulDel();
FilterBenchmarkTest.java,Ns = filter.names();,if (filter != null ) Ns = filter.names();
FilterBenchmarkTest.java,int[] delays = filter.delays();,if (filter != null ) int[] delays = filter.delays();
FilterBenchmarkTest.java,int[] lastOp = filter.lastOp();,if (filter != null ) int[] lastOp = filter.lastOp();
FilterBenchmarkTest.java,D[i] = filter.addDel();,if (filter != null ) D[i] = filter.addDel();
FilterBenchmarkTest.java,D[i] = filter.mulDel();,if (filter != null ) D[i] = filter.mulDel();
FilterBenchmarkTest.java,Ns = filter.names();,if (filter != null ) Ns = filter.names();
FilterBenchmarkTest.java,int[] delays = filter.delays();,if (filter != null ) int[] delays = filter.delays();
FilterBenchmarkTest.java,int[] lastOp = filter.lastOp();,if (filter != null ) int[] lastOp = filter.lastOp();
FilterBenchmarkTest.java,D[i] = filter.addDel();,if (filter != null ) D[i] = filter.addDel();
FilterBenchmarkTest.java,D[i] = filter.mulDel();,if (filter != null ) D[i] = filter.mulDel();
FilterBenchmarkTest.java,Ns = filter.namesPipeline();,if (filter != null ) Ns = filter.namesPipeline();
Fz2jacop.java,Thread tread = java.lang.Thread.currentThread();,if (java != null ) Thread tread = java.lang.Thread.currentThread();
Fz2jacop.java,long startCPU = b.getThreadCpuTime(tread.getId());,if (b != null ) long startCPU = b.getThreadCpuTime(tread.getId());
Solve.java,tread = java.lang.Thread.currentThread();,if (java != null ) tread = java.lang.Thread.currentThread();
Solve.java,startCPU = b.getThreadCpuTime(tread.getId());,if (b != null ) startCPU = b.getThreadCpuTime(tread.getId());
Solve.java,tread = java.lang.Thread.currentThread();,if (java != null ) tread = java.lang.Thread.currentThread();
Solve.java,startCPU = b.getThreadCpuTime(tread.getId());,if (b != null ) startCPU = b.getThreadCpuTime(tread.getId());
SumInt.java,min = (long)xd.min();,if ((long)xd != null ) min = (long)xd.min();
SumInt.java,max = (long)xd.max();,if ((long)xd != null ) max = (long)xd.max();
SumInt.java,long sMax = (long)sum.max();,if ((long)sum != null ) long sMax = (long)sum.max();
SumInt.java,long sMin = (long)sum.min();,if ((long)sum != null ) long sMin = (long)sum.min();
Binpacking.java,IntVar var = binQueue.removeFirst();,if (binQueue != null ) IntVar var = binQueue.removeFirst();
Binpacking.java,IntVar var = itemQueue.removeFirst();,if (itemQueue != null ) IntVar var = itemQueue.removeFirst();
Binpacking.java,allCapacityMin += aLoad.min();,if (aLoad != null ) allCapacityMin += aLoad.min();
Binpacking.java,allCapacityMax += aLoad.max();,if (aLoad != null ) allCapacityMax += aLoad.max();
CumulativePrimary.java,int min = start[i].min(); //t.est();,if (//t != null ) int min = start[i].min(); //t.est();
SimpleTable.java,ValueEnumeration e = cd.valueEnumeration();,if (cd != null ) ValueEnumeration e = cd.valueEnumeration();
SimpleTable.java,Long bs = xSupport.get(e.nextElement());,if (xSupport != null ) Long bs = xSupport.get(e.nextElement());
SimpleTable.java,mask |= (bs.longValue());,if ((bs != null ) mask |= (bs.longValue());
SimpleTable.java,ValueEnumeration e = xi.dom().valueEnumeration();,if (xi != null ) ValueEnumeration e = xi.dom().valueEnumeration();
SimpleTable.java,int el = x[i].value();,if (x[i] != null ) int el = x[i].value();
Table.java,ValueEnumeration e = rp.valueEnumeration();,if (rp != null ) ValueEnumeration e = rp.valueEnumeration();
Table.java,long[] bs = xSupport.get(e.nextElement());,if (xSupport != null ) long[] bs = xSupport.get(e.nextElement());
Table.java,ValueEnumeration e = cd.valueEnumeration();,if (cd != null ) ValueEnumeration e = cd.valueEnumeration();
Table.java,long[] bs = xSupport.get(e.nextElement());,if (xSupport != null ) long[] bs = xSupport.get(e.nextElement());
Table.java,ValueEnumeration e = xi.dom().valueEnumeration();,if (xi != null ) ValueEnumeration e = xi.dom().valueEnumeration();
TableMill.java,int element = val.nextElement();,if (val != null ) int element = val.nextElement();
TableMill.java,int e = val.nextElement();,if (val != null ) int e = val.nextElement();
GlobalConstraints.java,double k = (double)diff.size();,if ((double)diff != null ) double k = (double)diff.size();
AleB.java,ValueEnumeration aLubEnum = a.domain.lub().valueEnumeration();,if (a != null ) ValueEnumeration aLubEnum = a.domain.lub().valueEnumeration();
AleB.java,ValueEnumeration bGlbEnum = b.domain.glb().valueEnumeration();,if (b != null ) ValueEnumeration bGlbEnum = b.domain.glb().valueEnumeration();
AleB.java,int be = bGlbEnum.nextElement();,if (bGlbEnum != null ) int be = bGlbEnum.nextElement();
AleB.java,ae = aLubEnum.nextElement();,if (aLubEnum != null ) ae = aLubEnum.nextElement();
AleB.java,be = bGlbEnum.nextElement();,if (bGlbEnum != null ) be = bGlbEnum.nextElement();
AleB.java,int xv = xe.nextElement();,if (xe != null ) int xv = xe.nextElement();
AleB.java,int yv = ye.nextElement();,if (ye != null ) int yv = ye.nextElement();
AltB.java,ValueEnumeration aLubEnum = a.domain.lub().valueEnumeration();,if (a != null ) ValueEnumeration aLubEnum = a.domain.lub().valueEnumeration();
AltB.java,ValueEnumeration bGlbEnum = b.domain.glb().valueEnumeration();,if (b != null ) ValueEnumeration bGlbEnum = b.domain.glb().valueEnumeration();
AltB.java,int be = bGlbEnum.nextElement();,if (bGlbEnum != null ) int be = bGlbEnum.nextElement();
AltB.java,ae = aLubEnum.nextElement();,if (aLubEnum != null ) ae = aLubEnum.nextElement();
AltB.java,be = bGlbEnum.nextElement();,if (bGlbEnum != null ) be = bGlbEnum.nextElement();
AltB.java,int xv = xe.nextElement();,if (xe != null ) int xv = xe.nextElement();
AltB.java,int yv = ye.nextElement();,if (ye != null ) int yv = ye.nextElement();
Alldiff.java,min[i] = listAlldiff[i].min();,if (listAlldiff[i] != null ) min[i] = listAlldiff[i].min();
Alldiff.java,max[i] = listAlldiff[i].max();,if (listAlldiff[i] != null ) max[i] = listAlldiff[i].max();
Alldiff.java,min[i] = listAlldiff[i].min();,if (listAlldiff[i] != null ) min[i] = listAlldiff[i].min();
Alldiff.java,max[i] = listAlldiff[i].max();,if (listAlldiff[i] != null ) max[i] = listAlldiff[i].max();
SimpleTable.java,ValueEnumeration e = cd.valueEnumeration();,if (cd != null ) ValueEnumeration e = cd.valueEnumeration();
SimpleTable.java,Long bs = xSupport.get(e.nextElement());,if (xSupport != null ) Long bs = xSupport.get(e.nextElement());
SimpleTable.java,mask |= (bs.longValue());,if ((bs != null ) mask |= (bs.longValue());
SimpleTable.java,ValueEnumeration e = xi.dom().valueEnumeration();,if (xi != null ) ValueEnumeration e = xi.dom().valueEnumeration();
Table.java,ValueEnumeration e = rp.valueEnumeration();,if (rp != null ) ValueEnumeration e = rp.valueEnumeration();
Table.java,long[] bs = xSupport.get(e.nextElement());,if (xSupport != null ) long[] bs = xSupport.get(e.nextElement());
Table.java,ValueEnumeration e = cd.valueEnumeration();,if (cd != null ) ValueEnumeration e = cd.valueEnumeration();
Table.java,long[] bs = xSupport.get(e.nextElement());,if (xSupport != null ) long[] bs = xSupport.get(e.nextElement());
Table.java,ValueEnumeration e = xi.dom().valueEnumeration();,if (xi != null ) ValueEnumeration e = xi.dom().valueEnumeration();
SumBool.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
SumBool.java,this.store = sum.getStore();,if (sum != null ) this.store = sum.getStore();
SumInt.java,this.store = sum.getStore();,if (sum != null ) this.store = sum.getStore();
SumInt.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
ValuePrecede.java,int a = alpha.value();,if (alpha != null ) int a = alpha.value();
ValuePrecede.java,int g = gamma.value();,if (gamma != null ) int g = gamma.value();
ValuePrecede.java,int a = alpha.value();,if (alpha != null ) int a = alpha.value();
CumulativePrimary.java,int min = start[i].min(); //t.est();,if (//t != null ) int min = start[i].min(); //t.est();
Binpacking.java,IntVar var = binQueue.removeFirst();,if (binQueue != null ) IntVar var = binQueue.removeFirst();
Binpacking.java,IntVar var = itemQueue.removeFirst();,if (itemQueue != null ) IntVar var = itemQueue.removeFirst();
Binpacking.java,allCapacityMin += aLoad.min();,if (aLoad != null ) allCapacityMin += aLoad.min();
Binpacking.java,allCapacityMax += aLoad.max();,if (aLoad != null ) allCapacityMax += aLoad.max();
SmallDenseDomainTest.java,Class<SmallDenseDomainTest> cls = (Class<SmallDenseDomainTest>) this.getClass();,if (this != null ) Class<SmallDenseDomainTest> cls = (Class<SmallDenseDomainTest>) this.getClass();
Subcircuit.java,int[] dominates = graph.dom();,if (graph != null ) int[] dominates = graph.dom();
Subcircuit.java,int[] dominates = graph.dom();,if (graph != null ) int[] dominates = graph.dom();
Subcircuit.java,n = stck.pop();,if (stck != null ) n = stck.pop();
Subcircuit.java,n = stck.pop();,if (stck != null ) n = stck.pop();
SimpleTable.java,IntDomain pd = cd.previousDomain();,if (cd != null ) IntDomain pd = cd.previousDomain();
Table.java,IntDomain pd = cd.previousDomain();,if (cd != null ) IntDomain pd = cd.previousDomain();
SimpleTable.java,IntDomain pd = cd.previousDomain();,if (cd != null ) IntDomain pd = cd.previousDomain();
Table.java,IntDomain pd = cd.previousDomain();,if (cd != null ) IntDomain pd = cd.previousDomain();
Max.java,int maxMax = max.max();,if (max != null ) int maxMax = max.max();
Max.java,int minMax = max.min();,if (max != null ) int minMax = max.min();
Max.java,vDom = var.dom();,if (var != null ) vDom = var.dom();
MaxSimple.java,int maxMax = max.max();,if (max != null ) int maxMax = max.max();
Min.java,int minMin = min.min();,if (min != null ) int minMin = min.min();
Min.java,int maxMin = min.max();,if (min != null ) int maxMin = min.max();
Min.java,vDom = var.dom();,if (var != null ) vDom = var.dom();
MinSimple.java,int minMin = min.min();,if (min != null ) int minMin = min.min();
SumWeight.java,long value = (long)var.min();,if ((long)var != null ) long value = (long)var.min();
XmodYeqZ.java,resultMin = result.min();,if (result != null ) resultMin = result.min();
XmodYeqZ.java,resultMax = result.max();,if (result != null ) resultMax = result.max();
XplusYeqZ.java,"sumMin = Math.subtractExact(sumMin, z.max());","if (z != null ) sumMin = Math.subtractExact(sumMin, z.max());"
XplusYeqZ.java,"sumMax = Math.subtractExact(sumMax, z.min());","if (z != null ) sumMax = Math.subtractExact(sumMax, z.min());"
SumWeight.java,int value = var.min();,if (var != null ) int value = var.min();
SumInt.java,min = xd.min();,if (xd != null ) min = xd.min();
SumInt.java,max = xd.max();,if (xd != null ) max = xd.max();
SumInt.java,int sMax = sum.max();,if (sum != null ) int sMax = sum.max();
SumInt.java,min = x[i].min();,if (x[i] != null ) min = x[i].min();
SumInt.java,int newMax = x[i].max();,if (x[i] != null ) int newMax = x[i].max();
SumInt.java,int sMin = sum.min();,if (sum != null ) int sMin = sum.min();
SumInt.java,max = x[i].max();,if (x[i] != null ) max = x[i].max();
SumInt.java,int newMin = x[i].min();,if (x[i] != null ) int newMin = x[i].min();
SumInt.java,min = x[i].min();,if (x[i] != null ) min = x[i].min();
SumInt.java,int newMin = x[i].min();,if (x[i] != null ) int newMin = x[i].min();
SumInt.java,int newMax = x[i].max();,if (x[i] != null ) int newMax = x[i].max();
SumInt.java,sMin += x[i].min();,if (x[i] != null ) sMin += x[i].min();
SumInt.java,sMax += x[i].max();,if (x[i] != null ) sMax += x[i].max();
SumInt.java,sMin += x[i].min();,if (x[i] != null ) sMin += x[i].min();
SumInt.java,sMax += x[i].max();,if (x[i] != null ) sMax += x[i].max();
SumInt.java,sMax += x[i].max();,if (x[i] != null ) sMax += x[i].max();
SumInt.java,sMin += x[i].min();,if (x[i] != null ) sMin += x[i].min();
SmallDenseDomainTest.java,long begin = System.currentTimeMillis();,if (System != null ) long begin = System.currentTimeMillis();
SmallDenseDomainTest.java,long end = System.currentTimeMillis();,if (System != null ) long end = System.currentTimeMillis();
SmallDenseDomainTest.java,long begin = System.currentTimeMillis();,if (System != null ) long begin = System.currentTimeMillis();
SmallDenseDomainTest.java,long end = System.currentTimeMillis();,if (System != null ) long end = System.currentTimeMillis();
SmallDenseDomainTest.java,nodes += search.getNodes();,if (search != null ) nodes += search.getNodes();
SmallDenseDomainTest.java,decisions += search.getDecisions();,if (search != null ) decisions += search.getDecisions();
SmallDenseDomainTest.java,wrongDecisions += search.getWrongDecisions();,if (search != null ) wrongDecisions += search.getWrongDecisions();
SmallDenseDomainTest.java,backtracks += search.getBacktracks();,if (search != null ) backtracks += search.getBacktracks();
SmallDenseDomainTest.java,long begin = System.currentTimeMillis();,if (System != null ) long begin = System.currentTimeMillis();
SmallDenseDomainTest.java,long end = System.currentTimeMillis();,if (System != null ) long end = System.currentTimeMillis();
SmallDenseDomainTest.java,long begin = System.currentTimeMillis();,if (System != null ) long begin = System.currentTimeMillis();
SmallDenseDomainTest.java,long end = System.currentTimeMillis();,if (System != null ) long end = System.currentTimeMillis();
SmallDenseDomainTest.java,precision = FloatDomain.precision();,if (FloatDomain != null ) precision = FloatDomain.precision();
XplusYeqZ.java,"sumMin = add(sumMin, x.min());","if (x != null ) sumMin = add(sumMin, x.min());"
XplusYeqZ.java,"sumMax = add(sumMax, x.max());","if (x != null ) sumMax = add(sumMax, x.max());"
XplusYeqZ.java,"sumMin = add(sumMin, y.min());","if (y != null ) sumMin = add(sumMin, y.min());"
XplusYeqZ.java,"sumMax = add(sumMax, y.max());","if (y != null ) sumMax = add(sumMax, y.max());"
XplusYeqZ.java,"sumMin = subtract(sumMin, z.max());","if (z != null ) sumMin = subtract(sumMin, z.max());"
XplusYeqZ.java,"sumMax = subtract(sumMax, z.min());","if (z != null ) sumMax = subtract(sumMax, z.min());"
SumWeight.java,int pointer = nextGroundedPosition.value();,if (nextGroundedPosition != null ) int pointer = nextGroundedPosition.value();
XmodYeqZ.java,resultMin = result.min();,if (result != null ) resultMin = result.min();
XmodYeqZ.java,resultMax = result.max();,if (result != null ) resultMax = result.max();
Binpacking.java,allCapacityMin += load[i].min();,if (load[i] != null ) allCapacityMin += load[i].min();
Binpacking.java,allCapacityMax += load[i].max();,if (load[i] != null ) allCapacityMax += load[i].max();
CumulativeBasic.java,durInt[i] = durations[i].value();,if (durations[i] != null ) durInt[i] = durations[i].value();
CumulativeBasic.java,resInt[i] = resources[i].value();,if (resources[i] != null ) resInt[i] = resources[i].value();
CumulativePrimary.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
Sum.java,boolean sat = sum.singleton();,if (sum != null ) boolean sat = sum.singleton();
Sum.java,sat = list[i].singleton();,if (list[i] != null ) sat = list[i].singleton();
Count.java,return (countAll == counter.min());,if (counter != null ) return (countAll == counter.min());
Binpacking.java,allBinsSingleton = item[i++].bin.singleton();,if (item[i++] != null ) allBinsSingleton = item[i++].bin.singleton();
ReversibleSparseBitSet.java,int n = limit.value();,if (limit != null ) int n = limit.value();
ReversibleSparseBitSet.java,long[] wrds = words.value();,if (words != null ) long[] wrds = words.value();
ReversibleSparseBitSet.java,long[] wrds = words.value();,if (words != null ) long[] wrds = words.value();
ReversibleSparseBitSet.java,long[] wrds = words.value();,if (words != null ) long[] wrds = words.value();
SumWeightedSet.java,ValueEnumeration enumer = a.domain.glb().valueEnumeration();,if (a != null ) ValueEnumeration enumer = a.domain.glb().valueEnumeration();
SumWeightedSet.java,sum += elementWeights.get(enumer.nextElement());,if (elementWeights != null ) sum += elementWeights.get(enumer.nextElement());
SumWeightedSet.java,int el = entries.getKey();,if (entries != null ) int el = entries.getKey();
Knapsack.java,var = item.getVariable();,if (item != null ) var = item.getVariable();
Alldistinct.java,HashSet<IntVar> visitedVariables = new HashSet<IntVar>(matching.size());,if (HashSet<IntVar>(matching != null ) HashSet<IntVar> visitedVariables = new HashSet<IntVar>(matching.size());
Or.java,Var V = variables.removeFirst();,if (variables != null ) Var V = variables.removeFirst();
Reified.java,Var V = variables.removeFirst();,if (variables != null ) Var V = variables.removeFirst();
Knapsack.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Knapsack.java,KnapsackItem value = entry.getValue();,if (entry != null ) KnapsackItem value = entry.getValue();
AndBoolVector.java,this.l = varSet.size();,if (varSet != null ) this.l = varSet.size();
Not.java,Var V = variables.removeFirst();,if (variables != null ) Var V = variables.removeFirst();
SumBool.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
SumWeight.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Alldifferent.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Alldifferent.java,numberArgs = (short) variables.size();,if (variables != null ) numberArgs = (short) variables.size();
CumulativeProfiles.java,value = t.res.max();,if (t != null ) value = t.res.max();
ExtensionalSupportVA.java,t[i] = list[i].min();,if (list[i] != null ) t[i] = list[i].min();
ExtensionalSupportVA.java,t[i] = list[i].min();,if (list[i] != null ) t[i] = list[i].min();
ExtensionalSupportVA.java,t[i] = list[i].min();,if (list[i] != null ) t[i] = list[i].min();
Subcircuit.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
NetworkFlow.java,this.numberArgs = (short) map.size();,if (map != null ) this.numberArgs = (short) map.size();
And.java,Var var = variables.removeFirst();,if (variables != null ) Var var = variables.removeFirst();
Cumulative.java,"startS = Math.min(startS, t.est());","if (t != null ) startS = Math.min(startS, t.est());"
Cumulative.java,"completionS = Math.max(completionS, t.lct());","if (t != null ) completionS = Math.max(completionS, t.lct());"
Cumulative.java,"completionS = Math.max(completionS, t.lct());","if (t != null ) completionS = Math.max(completionS, t.lct());"
Cumulative.java,"startS = Math.min(startS, t.est());","if (t != null ) startS = Math.min(startS, t.est());"
Cumulative.java,"startOfS = Math.min(startOfS, t.est());","if (t != null ) startOfS = Math.min(startOfS, t.est());"
Cumulative.java,"completionOfS = Math.max(completionOfS, t.lct());","if (t != null ) completionOfS = Math.max(completionOfS, t.lct());"
Cumulative.java,"completionOfS = Math.max(completionOfS, t.lct());","if (t != null ) completionOfS = Math.max(completionOfS, t.lct());"
Cumulative.java,"startOfS = Math.min(startOfS, t.est());","if (t != null ) startOfS = Math.min(startOfS, t.est());"
Cumulative.java,"lctOfS = Math.max(lctOfS, t.lct());","if (t != null ) lctOfS = Math.max(lctOfS, t.lct());"
Cumulative.java,"estOfS = Math.min(estOfS, t.est());","if (t != null ) estOfS = Math.min(estOfS, t.est());"
Cumulative.java,"lctS = Math.max(lctS, t.lct());","if (t != null ) lctS = Math.max(lctS, t.lct());"
Cumulative.java,"completionS = Math.max(completionS, t.lct());","if (t != null ) completionS = Math.max(completionS, t.lct());"
Cumulative.java,"startS = Math.min(startS, t.est());","if (t != null ) startS = Math.min(startS, t.est());"
Eq.java,Var V = variables.removeFirst();,if (variables != null ) Var V = variables.removeFirst();
Values.java,sat = list[i].singleton();,if (list[i] != null ) sat = list[i].singleton();
Xor.java,Var V = variables.removeFirst();,if (variables != null ) Var V = variables.removeFirst();
CumulativeBasic.java,durInt[i] = durations[i].value();,if (durations[i] != null ) durInt[i] = durations[i].value();
CumulativeBasic.java,resInt[i] = resources[i].value();,if (resources[i] != null ) resInt[i] = resources[i].value();
SimpleTable.java,IntDomain pd = cd.previousDomain();,if (cd != null ) IntDomain pd = cd.previousDomain();
SimpleTable.java,delta = rp.getSize();,if (rp != null ) delta = rp.getSize();
SimpleTable.java,ValueEnumeration e = rp.valueEnumeration();,if (rp != null ) ValueEnumeration e = rp.valueEnumeration();
SimpleTable.java,Long bs = xSupport.get(e.nextElement());,if (xSupport != null ) Long bs = xSupport.get(e.nextElement());
SimpleTable.java,mask |= (bs.longValue());,if ((bs != null ) mask |= (bs.longValue());
SimpleTable.java,ValueEnumeration e = cd.valueEnumeration();,if (cd != null ) ValueEnumeration e = cd.valueEnumeration();
SimpleTable.java,Long bs = xSupport.get(e.nextElement());,if (xSupport != null ) Long bs = xSupport.get(e.nextElement());
SimpleTable.java,mask |= (bs.longValue());,if ((bs != null ) mask |= (bs.longValue());
SimpleTable.java,long w = words.value();,if (words != null ) long w = words.value();
SimpleTable.java,long wrds = words.value();,if (words != null ) long wrds = words.value();
SimpleTable.java,boolean xiSingleton = xi.singleton();,if (xi != null ) boolean xiSingleton = xi.singleton();
SimpleTable.java,ValueEnumeration e = xi.dom().valueEnumeration();,if (xi != null ) ValueEnumeration e = xi.dom().valueEnumeration();
Table.java,IntDomain pd = cd.previousDomain();,if (cd != null ) IntDomain pd = cd.previousDomain();
Table.java,delta = rp.getSize();,if (rp != null ) delta = rp.getSize();
Table.java,ValueEnumeration e = rp.valueEnumeration();,if (rp != null ) ValueEnumeration e = rp.valueEnumeration();
Table.java,long[] bs = xSupport.get(e.nextElement());,if (xSupport != null ) long[] bs = xSupport.get(e.nextElement());
Table.java,ValueEnumeration e = cd.valueEnumeration();,if (cd != null ) ValueEnumeration e = cd.valueEnumeration();
Table.java,long[] bs = xSupport.get(e.nextElement());,if (xSupport != null ) long[] bs = xSupport.get(e.nextElement());
Table.java,long[] wrds = rbs.words.value();,if (rbs != null ) long[] wrds = rbs.words.value();
Table.java,boolean xiSingleton = xi.singleton();,if (xi != null ) boolean xiSingleton = xi.singleton();
Table.java,ValueEnumeration e = xi.dom().valueEnumeration();,if (xi != null ) ValueEnumeration e = xi.dom().valueEnumeration();
IntervalDomain.java,object.size = intervals.size();,if (intervals != null ) object.size = intervals.size();
XMLSaveSupport.java,SAXTransformerFactory tf = (SAXTransformerFactory) SAXTransformerFactory.newInstance();,if (SAXTransformerFactory != null ) SAXTransformerFactory tf = (SAXTransformerFactory) SAXTransformerFactory.newInstance();
XMLSaveSupport.java,TransformerHandler hd = tf.newTransformerHandler();,if (tf != null ) TransformerHandler hd = tf.newTransformerHandler();
XMLSaveSupport.java,Transformer serializer = hd.getTransformer();,if (hd != null ) Transformer serializer = hd.getTransformer();
XMLSaveSupport.java,Object[] sortedNames = store.variablesHashMap.keySet().toArray();,if (store != null ) Object[] sortedNames = store.variablesHashMap.keySet().toArray();
XMLSaveSupport.java,sortedNames = constraints.keySet().toArray();,if (constraints != null ) sortedNames = constraints.keySet().toArray();
XMLSaveSupport.java,Class c = object.getClass();,if (object != null ) Class c = object.getClass();
XMLSaveSupport.java,String characters = value.toString();,if (value != null ) String characters = value.toString();
XMLSaveSupport.java,Iterator iterator = collection.iterator();,if (collection != null ) Iterator iterator = collection.iterator();
XMLSaveSupport.java,Object ithObject = iterator.next();,if (iterator != null ) Object ithObject = iterator.next();
FloatIntervalDomain.java,object.size = intervals.size();,if (intervals != null ) object.size = intervals.size();
And.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
And.java,numberArgs += cc.numberArgs();,if (cc != null ) numberArgs += cc.numberArgs();
And.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
EqBool.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
ExtensionalSupportMDD.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Or.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
VariableTrace.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
VariableTrace.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
MinizincBasedTest.java,String result = baos.toString();,if (baos != null ) String result = baos.toString();
MinizincBasedTestsHelper.java,String foo = outputFilename.toString();,if (outputFilename != null ) String foo = outputFilename.toString();
MinizincBasedTestsHelper.java,String myString = line.toString();,if (line != null ) String myString = line.toString();
MinizincBasedTestsHelper.java,tab[i] = line.toString();,if (line != null ) tab[i] = line.toString();
FznFileGeneratorTest.java,itrScriptGold = goldList.iterator();,if (goldList != null ) itrScriptGold = goldList.iterator();
FznFileGeneratorTest.java,itrScriptTest = scriptTest.iterator();,if (scriptTest != null ) itrScriptTest = scriptTest.iterator();
FznFileGeneratorTest.java,expectedDir = Paths.get(itrScriptGold.next());,if (Paths != null ) expectedDir = Paths.get(itrScriptGold.next());
FznFileGeneratorTest.java,Path resultDir = Paths.get(itrScriptTest.next());,if (Paths != null ) Path resultDir = Paths.get(itrScriptTest.next());
MinizincBasedTestsHelper.java,String result = baos.toString();,if (baos != null ) String result = baos.toString();
Cumulative.java,int C = limit.max();,if (limit != null ) int C = limit.max();
GlobalConstraints.java,double k = (double)diff.size();,if ((double)diff != null ) double k = (double)diff.size();
ReversibleSparseBitSet.java,int l = limit.value();,if (limit != null ) int l = limit.value();
SimpleTable.java,delta = rp.getSize();,if (rp != null ) delta = rp.getSize();
Table.java,int nw = rbs.noWords();,if (rbs != null ) int nw = rbs.noWords();
GlobalConstraints.java,maxDomSize = vi.getSize();,if (vi != null ) maxDomSize = vi.getSize();
ReversibleSparseBitSet.java,long wOriginal = words[offset].value();,if (words[offset] != null ) long wOriginal = words[offset].value();
ReversibleSparseBitSet.java,long w = words[offset].value();,if (words[offset] != null ) long w = words[offset].value();
Table.java,ValueEnumeration e = v.dom().valueEnumeration();,if (v != null ) ValueEnumeration e = v.dom().valueEnumeration();
Table.java,int index = indexInteger.intValue();,if (indexInteger != null ) int index = indexInteger.intValue();
Solve.java,double[] costFloat = dictionary.getFloatArray(node.getIdent());,if (dictionary != null ) double[] costFloat = dictionary.getFloatArray(node.getIdent());
FznFileGeneratorTest.java,iterator = goldList.iterator();,if (goldList != null ) iterator = goldList.iterator();
Cumulative.java,int l = nonZeroTasks.size();,if (nonZeroTasks != null ) int l = nonZeroTasks.size();
Cumulative.java,int tEST = tt.EST();,if (tt != null ) int tEST = tt.EST();
Cumulative.java,int tLCT = tt.LCT();,if (tt != null ) int tLCT = tt.LCT();
Cumulative.java,int tLCT = tt.LCT();,if (tt != null ) int tLCT = tt.LCT();
Cumulative.java,int tEST = tt.EST();,if (tt != null ) int tEST = tt.EST();
Cumulative.java,int Dur = t.dur.min();,if (t != null ) int Dur = t.dur.min();
Cumulative.java,int Res = t.res.min();,if (t != null ) int Res = t.res.min();
Cumulative.java,int Dur = t.dur.min();,if (t != null ) int Dur = t.dur.min();
Cumulative.java,int Res = t.res.min();,if (t != null ) int Res = t.res.min();
Cumulative.java,A = minUse.start();,if (minUse != null ) A = minUse.start();
Cumulative.java,B = minUse.stop();,if (minUse != null ) B = minUse.stop();
Cumulative.java,ArrayList<Task> TasksToRemove = new ArrayList<Task>(S.size());,if (ArrayList<Task>(S != null ) ArrayList<Task> TasksToRemove = new ArrayList<Task>(S.size());
Cumulative.java,ArrayList<Task> TasksToRemove = new ArrayList<Task>(S.size());,if (ArrayList<Task>(S != null ) ArrayList<Task> TasksToRemove = new ArrayList<Task>(S.size());
CumulativeProfiles.java,value = t.res.max();,if (t != null ) value = t.res.max();
Alldistinct.java,next = (IntVar) e.next();,if (e != null ) next = (IntVar) e.next();
Alldistinct.java,HashSet<Integer> visitedValues = new HashSet<Integer>(valueMapVariable.size());,if (HashSet<Integer>(valueMapVariable != null ) HashSet<Integer> visitedValues = new HashSet<Integer>(valueMapVariable.size());
Knapsack.java,Set<IntVar> qs = itemPar.keySet();,if (itemPar != null ) Set<IntVar> qs = itemPar.keySet();
SimpleSolutionListener.java,T current = itr.next();,if (itr != null ) T current = itr.next();
Constraints.java,this.debug = opt.debug();,if (opt != null ) this.debug = opt.debug();
Support.java,this.debug = Options.debug();,if (Options != null ) this.debug = Options.debug();
Solve.java,setVar += v.dom().toString();,if (v != null ) setVar += v.dom().toString();
Store.java,count += watchedConstraints.get(v).size();,if (watchedConstraints != null ) count += watchedConstraints.get(v).size();
Store.java,Set<String> ids = variablesHashMap.keySet();,if (variablesHashMap != null ) Set<String> ids = variablesHashMap.keySet();
Store.java,Domain d = variablesHashMap.get(s).dom();,if (variablesHashMap != null ) Domain d = variablesHashMap.get(s).dom();
Binpacking.java,Set<IntVar> bs = itemPar.keySet();,if (itemPar != null ) Set<IntVar> bs = itemPar.keySet();
MUCA.java,in = Integer.valueOf(tk.nextToken());,if (Integer != null ) in = Integer.valueOf(tk.nextToken());
MUCA.java,out = Integer.valueOf(tk.nextToken());,if (Integer != null ) out = Integer.valueOf(tk.nextToken());
Support.java,Set<IntVar> vs = dictionary.aliasTable.keySet();,if (dictionary != null ) Set<IntVar> vs = dictionary.aliasTable.keySet();
Sum.java,"sumMin = subtract(sumMin, sum.max());","if (sum != null ) sumMin = subtract(sumMin, sum.max());"
Sum.java,"sumMax = subtract(sumMax, sum.min());","if (sum != null ) sumMax = subtract(sumMax, sum.min());"
WhoKilledAgatha.java,int numSolutions = label.getSolutionListener().solutionsNo();,if (label != null ) int numSolutions = label.getSolutionListener().solutionsNo();
IntervalGaussSeidel.java,double epsilon = FloatDomain.precision();,if (FloatDomain != null ) double epsilon = FloatDomain.precision();
CosPeqR_decomposed.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
CosPeqR_decomposed.java,sat = sat && c.satisfied();,if (c != null ) sat = sat && c.satisfied();
AbsXeqY.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
AbsXeqY.java,IntervalEnumeration enumer = x.domain.intervalEnumeration();,if (x != null ) IntervalEnumeration enumer = x.domain.intervalEnumeration();
AbsXeqY.java,Interval next = enumer.nextElement();,if (enumer != null ) Interval next = enumer.nextElement();
AbsXeqY.java,IntervalEnumeration enumer = y.domain.intervalEnumeration();,if (y != null ) IntervalEnumeration enumer = y.domain.intervalEnumeration();
AbsXeqY.java,Interval next = enumer.nextElement();,if (enumer != null ) Interval next = enumer.nextElement();
AbsXeqY.java,int xSize = xDom.noIntervals();,if (xDom != null ) int xSize = xDom.noIntervals();
Alldiff.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
Alldiff.java,int groundPos = grounded.value();,if (grounded != null ) int groundPos = grounded.value();
Alldiff.java,min[i] = listAlldiff[i].min();,if (listAlldiff[i] != null ) min[i] = listAlldiff[i].min();
Alldiff.java,max[i] = listAlldiff[i].max();,if (listAlldiff[i] != null ) max[i] = listAlldiff[i].max();
Alldiff.java,min[i] = listAlldiff[i].min();,if (listAlldiff[i] != null ) min[i] = listAlldiff[i].min();
Alldiff.java,max[i] = listAlldiff[i].max();,if (listAlldiff[i] != null ) max[i] = listAlldiff[i].max();
Alldifferent.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
Alldifferent.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Alldifferent.java,numberArgs = (short) variables.size();,if (variables != null ) numberArgs = (short) variables.size();
Alldifferent.java,int groundPos = grounded.value();,if (grounded != null ) int groundPos = grounded.value();
Alldifferent.java,for(int i = grounded.value(); i < list.length; i++),if (i++) != null ) for(int i = grounded.value(); i < list.length; i++)
Alldifferent.java,IntDomain vDom = list[i].dom();,if (list[i] != null ) IntDomain vDom = list[i].dom();
Alldifferent.java,IntDomain ljDom = list[j].dom();,if (list[j] != null ) IntDomain ljDom = list[j].dom();
Alldistinct.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Alldistinct.java,value = enumer.nextElement();,if (enumer != null ) value = enumer.nextElement();
Alldistinct.java,LinkedHashSet<IntVar> copy = (LinkedHashSet<IntVar>) variableQueue.clone();,if (variableQueue != null ) LinkedHashSet<IntVar> copy = (LinkedHashSet<IntVar>) variableQueue.clone();
Alldistinct.java,int lastNotGround = stampNotGroundedVariables.value();,if (stampNotGroundedVariables != null ) int lastNotGround = stampNotGroundedVariables.value();
Alldistinct.java,int lastPosition = stamp.value();,if (stamp != null ) int lastPosition = stamp.value();
Alldistinct.java,Iterator<IntVar> iter = fdvs.iterator();,if (fdvs != null ) Iterator<IntVar> iter = fdvs.iterator();
Alldistinct.java,IntVar V = iter.next();,if (iter != null ) IntVar V = iter.next();
Alldistinct.java,Integer matchedValue = matching.get(V).value();,if (matching != null ) Integer matchedValue = matching.get(V).value();
Alldistinct.java,int value = enumer.nextElement();,if (enumer != null ) int value = enumer.nextElement();
Alldistinct.java,int lastPosition = stamp.value();,if (stamp != null ) int lastPosition = stamp.value();
Alldistinct.java,IntVar singleton = singletons.removeFirst();,if (singletons != null ) IntVar singleton = singletons.removeFirst();
Alldistinct.java,Integer integerValue = singleton.value();,if (singleton != null ) Integer integerValue = singleton.value();
Alldistinct.java,int lastNotGroundedVariable = stampNotGroundedVariables.value();,if (stampNotGroundedVariables != null ) int lastNotGroundedVariable = stampNotGroundedVariables.value();
Alldistinct.java,matchedValue = matching.get(variable).value();,if (matching != null ) matchedValue = matching.get(variable).value();
Alldistinct.java,n = nStamp.value();,if (nStamp != null ) n = nStamp.value();
Alldistinct.java,int lastNotGroundedVariable = stampNotGroundedVariables.value();,if (stampNotGroundedVariables != null ) int lastNotGroundedVariable = stampNotGroundedVariables.value();
Alldistinct.java,IntVar changedVariable = fdvs.iterator().next();,if (fdvs != null ) IntVar changedVariable = fdvs.iterator().next();
Alldistinct.java,vn = nStamp.value();,if (nStamp != null ) vn = nStamp.value();
Alldistinct.java,next = (IntVar) e.next();,if (e != null ) next = (IntVar) e.next();
Alldistinct.java,int stampValue = stampValues.value();,if (stampValues != null ) int stampValue = stampValues.value();
Alldistinct.java,int noOfReachedVariablesLastTime = stampReachability.value();,if (stampReachability != null ) int noOfReachedVariablesLastTime = stampReachability.value();
Alldistinct.java,variableComponentId = sccStamp.get(variable).value();,if (sccStamp != null ) variableComponentId = sccStamp.get(variable).value();
Alldistinct.java,matched = matching.get(variable).value();,if (matching != null ) matched = matching.get(variable).value();
Alldistinct.java,lastPosition = stamp.value();,if (stamp != null ) lastPosition = stamp.value();
Alldistinct.java,int sizePotentialFreeValues = stampValues.value();,if (stampValues != null ) int sizePotentialFreeValues = stampValues.value();
Alldistinct.java,stampValue = stamp.value();,if (stamp != null ) stampValue = stamp.value();
Alldistinct.java,int lastNotGroundedVariable = stampNotGroundedVariables.value();,if (stampNotGroundedVariables != null ) int lastNotGroundedVariable = stampNotGroundedVariables.value();
Alldistinct.java,matched = matching.get(variable).value();,if (matching != null ) matched = matching.get(variable).value();
Alldistinct.java,int sizePotentialFreeValues = stampValues.value();,if (stampValues != null ) int sizePotentialFreeValues = stampValues.value();
Alldistinct.java,stampValue = stamp.value();,if (stamp != null ) stampValue = stamp.value();
Alldistinct.java,Integer top = (Integer) path.getLast();,if (path != null ) Integer top = (Integer) path.getLast();
Alldistinct.java,top = (Integer) path.getLast();,if (path != null ) top = (Integer) path.getLast();
Alldistinct.java,top = matching.get(first).value();,if (matching != null ) top = matching.get(first).value();
Alldistinct.java,int allPathsSize = allpaths.size();,if (allpaths != null ) int allPathsSize = allpaths.size();
Alldistinct.java,int freePathSize = freepath.size();,if (freepath != null ) int freePathSize = freepath.size();
Alldistinct.java,sizePotentialFreeValues = stampValues.value();,if (stampValues != null ) sizePotentialFreeValues = stampValues.value();
Alldistinct.java,stampValue = stamp.value();,if (stamp != null ) stampValue = stamp.value();
Alldistinct.java,n = nStamp.value();,if (nStamp != null ) n = nStamp.value();
Alldistinct.java,IntVar changedVariable = fdvs.iterator().next();,if (fdvs != null ) IntVar changedVariable = fdvs.iterator().next();
Alldistinct.java,int lastPosition = stamp.value();,if (stamp != null ) int lastPosition = stamp.value();
Alldistinct.java,matched = matching.get(reachableVariable).value();,if (matching != null ) matched = matching.get(reachableVariable).value();
Alldistinct.java,Integer matchedValue = matching.get(x).value();,if (matching != null ) Integer matchedValue = matching.get(x).value();
Alldistinct.java,int lastPosition = stamp.value();,if (stamp != null ) int lastPosition = stamp.value();
Alldistinct.java,int sccStampX = sccStamp.get(x).value();,if (sccStamp != null ) int sccStampX = sccStamp.get(x).value();
Alldistinct.java,IntDomain vDom = list[i].dom();,if (list[i] != null ) IntDomain vDom = list[i].dom();
Alldistinct.java,IntDomain ljDom = list[j].dom();,if (list[j] != null ) IntDomain ljDom = list[j].dom();
Alldistinct.java,Integer matchedValue = matching.get(x).value();,if (matching != null ) Integer matchedValue = matching.get(x).value();
Alldistinct.java,int lastPosition = stamp.value();,if (stamp != null ) int lastPosition = stamp.value();
Alldistinct.java,int lastNotGroundedVariable = stampNotGroundedVariables.value();,if (stampNotGroundedVariables != null ) int lastNotGroundedVariable = stampNotGroundedVariables.value();
Alldistinct.java,Integer firstValue = list[i].min();,if (list[i] != null ) Integer firstValue = list[i].min();
Alldistinct.java,Integer secondValue = list[i].max();,if (list[i] != null ) Integer secondValue = list[i].max();
Alldistinct.java,int sizePotentialFreeValues = stampValues.value();,if (stampValues != null ) int sizePotentialFreeValues = stampValues.value();
Alldistinct.java,stampValue = stamp.value();,if (stamp != null ) stampValue = stamp.value();
Alldistinct.java,int lastPosition = stamp.value();,if (stamp != null ) int lastPosition = stamp.value();
Alldistinct.java,IntDomain xDom = xVar.dom();,if (xVar != null ) IntDomain xDom = xVar.dom();
Alldistinct.java,ValueEnumeration enumer = xDom.valueEnumeration();,if (xDom != null ) ValueEnumeration enumer = xDom.valueEnumeration();
Alldistinct.java,int lastPosition = stamp.value();,if (stamp != null ) int lastPosition = stamp.value();
Alldistinct.java,int lastPosition = stamp.value();,if (stamp != null ) int lastPosition = stamp.value();
Alldistinct.java,Integer next = enumerX.nextElement();,if (enumerX != null ) Integer next = enumerX.nextElement();
Among.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Among.java,this.kSet = kSet.clone();,if (kSet != null ) this.kSet = kSet.clone();
Among.java,int currentLB = lowerBorder.value();,if (lowerBorder != null ) int currentLB = lowerBorder.value();
Among.java,int currentUB = upperBorder.value();,if (upperBorder != null ) int currentUB = upperBorder.value();
AmongVar.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
AmongVar.java,int yGround = yGrounded.value();,if (yGrounded != null ) int yGround = yGrounded.value();
AmongVar.java,K = K.union(x.min());,if (K != null ) K = K.union(x.min());
AmongVar.java,else U = (IntDomain)lbSDom.clone();,if ((IntDomain)lbSDom != null ) else U = (IntDomain)lbSDom.clone();
AmongVar.java,int yGr = this.yGrounded.value();,if (this != null ) int yGr = this.yGrounded.value();
AmongVar.java,ubSDom = (IntDomain)lbSDom.clone();,if ((IntDomain)lbSDom != null ) ubSDom = (IntDomain)lbSDom.clone();
AmongVar.java,int lastIndex = yGrounded.value();,if (yGrounded != null ) int lastIndex = yGrounded.value();
AmongVar.java,lbSDom = lbSDom.union(y.value());,if (lbSDom != null ) lbSDom = lbSDom.union(y.value());
And.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
And.java,numberArgs += cc.numberArgs();,if (cc != null ) numberArgs += cc.numberArgs();
And.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
And.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
And.java,Var var = variables.removeFirst();,if (variables != null ) Var var = variables.removeFirst();
ArgMax.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
ArgMax.java,vDom = list[i].dom();,if (list[i] != null ) vDom = list[i].dom();
ArgMax.java,singleMaxValue = list[i].value();,if (list[i] != null ) singleMaxValue = list[i].value();
ArgMax.java,vDom = list[i].dom();,if (list[i] != null ) vDom = list[i].dom();
ArgMax.java,boolean sat = maxIndex.singleton();,if (maxIndex != null ) boolean sat = maxIndex.singleton();
ArgMin.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
ArgMin.java,vDom = list[i].dom();,if (list[i] != null ) vDom = list[i].dom();
ArgMin.java,singleMinValue = list[i].value();,if (list[i] != null ) singleMinValue = list[i].value();
ArgMin.java,vDom = list[i].dom();,if (list[i] != null ) vDom = list[i].dom();
ArgMin.java,boolean sat = minIndex.singleton();,if (minIndex != null ) boolean sat = minIndex.singleton();
Assignment.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Assignment.java,int xValue = enumer.nextElement();,if (enumer != null ) int xValue = enumer.nextElement();
Assignment.java,int dValue = enumer.nextElement();,if (enumer != null ) int dValue = enumer.nextElement();
BoolClause.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
BoolClause.java,int startX = positionX.value();,if (positionX != null ) int startX = positionX.value();
BoolClause.java,int startY = positionY.value();,if (positionY != null ) int startY = positionY.value();
BoolClause.java,int startX = positionX.value();,if (positionX != null ) int startX = positionX.value();
BoolClause.java,int startY = positionY.value();,if (positionY != null ) int startY = positionY.value();
BoolClause.java,int startX = positionX.value();,if (positionX != null ) int startX = positionX.value();
BoolClause.java,int startY = positionY.value();,if (positionY != null ) int startY = positionY.value();
Circuit.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
Circuit.java,dom = var.dom();,if (var != null ) dom = var.dom();
Circuit.java,int Qmin = dom.min();,if (dom != null ) int Qmin = dom.min();
Circuit.java,boolean sat = super.satisfied(); // alldifferent,if (alldifferent != null ) boolean sat = super.satisfied(); // alldifferent
Count.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
Count.java,return (countAll == counter.min());,if (counter != null ) return (countAll == counter.min());
Cumulative.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
Cumulative.java,minProfile = cumulativeProfiles.minProfile();,if (cumulativeProfiles != null ) minProfile = cumulativeProfiles.minProfile();
Cumulative.java,maxProfile = cumulativeProfiles.maxProfile();,if (cumulativeProfiles != null ) maxProfile = cumulativeProfiles.maxProfile();
Cumulative.java,int limitMax = limit.max();,if (limit != null ) int limitMax = limit.max();
Cumulative.java,int tEST = tt.EST();,if (tt != null ) int tEST = tt.EST();
Cumulative.java,int tLCT = tt.LCT();,if (tt != null ) int tLCT = tt.LCT();
Cumulative.java,int limitMin = limit.min();,if (limit != null ) int limitMin = limit.min();
Cumulative.java,int limitMax = limit.max();,if (limit != null ) int limitMax = limit.max();
Cumulative.java,int tLCT = tt.LCT();,if (tt != null ) int tLCT = tt.LCT();
Cumulative.java,int tEST = tt.EST();,if (tt != null ) int tEST = tt.EST();
Cumulative.java,int limitMin = limit.min();,if (limit != null ) int limitMin = limit.min();
Cumulative.java,int Dur = t.dur.min();,if (t != null ) int Dur = t.dur.min();
Cumulative.java,int Res = t.res.min();,if (t != null ) int Res = t.res.min();
Cumulative.java,int limitMax = limit.max();,if (limit != null ) int limitMax = limit.max();
Cumulative.java,int Dur = t.dur.min();,if (t != null ) int Dur = t.dur.min();
Cumulative.java,int Res = t.res.min();,if (t != null ) int Res = t.res.min();
Cumulative.java,int limitMax = limit.max();,if (limit != null ) int limitMax = limit.max();
Cumulative.java,int tdur = t.dur.min();,if (t != null ) int tdur = t.dur.min();
Cumulative.java,int limitMin = limit.min();,if (limit != null ) int limitMin = limit.min();
Cumulative.java,int limitMin = limit.min();,if (limit != null ) int limitMin = limit.min();
Cumulative.java,int rs = right.min - Start.min();,if (Start != null ) int rs = right.min - Start.min();
Cumulative.java,offset = Resources.min();,if (Resources != null ) offset = Resources.min();
Cumulative.java,int ps = p.min - Start.min();,if (Start != null ) int ps = p.min - Start.min();
Cumulative.java,A = minUse.start();,if (minUse != null ) A = minUse.start();
Cumulative.java,B = minUse.stop();,if (minUse != null ) B = minUse.stop();
Cumulative.java,IntDomain tStartDom = t.start.dom();,if (t != null ) IntDomain tStartDom = t.start.dom();
Cumulative.java,ArrayList<Task> TasksToRemove = new ArrayList<Task>(S.size());,if (ArrayList<Task>(S != null ) ArrayList<Task> TasksToRemove = new ArrayList<Task>(S.size());
Cumulative.java,ArrayList<Task> TasksToRemove = new ArrayList<Task>(S.size());,if (ArrayList<Task>(S != null ) ArrayList<Task> TasksToRemove = new ArrayList<Task>(S.size());
Cumulative.java,int limitMax = limit.max();,if (limit != null ) int limitMax = limit.max();
CumulativeProfiles.java,tDurMin = t.dur.min();,if (t != null ) tDurMin = t.dur.min();
CumulativeProfiles.java,tResMin = t.res.min();,if (t != null ) tResMin = t.res.min();
CumulativeProfiles.java,value = t.res.max();,if (t != null ) value = t.res.max();
Diff.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
Diff.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Diff.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Diff.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Diff.java,minLength[i] = r.length[i].min();,if (r != null ) minLength[i] = r.length[i].min();
Diff.java,IntDomain rOriginDom = r.origin[i].dom();,if (r != null ) IntDomain rOriginDom = r.origin[i].dom();
Diff.java,IntDomain sOriginIdom = s.origin[m].dom();,if (s != null ) IntDomain sOriginIdom = s.origin[m].dom();
Diff.java,IntDomain sLengthIdom = s.length[m].dom();,if (s != null ) IntDomain sLengthIdom = s.length[m].dom();
Diff.java,int sLengthIMin = sLengthIdom.min();,if (sLengthIdom != null ) int sLengthIMin = sLengthIdom.min();
Diff.java,int sOriginIMax = sOriginIdom.max();,if (sOriginIdom != null ) int sOriginIMax = sOriginIdom.max();
Diff.java,IntDomain rOriginIdom = r.origin[i].dom();,if (r != null ) IntDomain rOriginIdom = r.origin[i].dom();
Diff.java,IntDomain rLengthIdom = r.length[i].dom();,if (r != null ) IntDomain rLengthIdom = r.length[i].dom();
Diff.java,int rLengthIMin = r.length[i].min();,if (r != null ) int rLengthIMin = r.length[i].min();
Diff.java,IntDomain rOrigin = r.origin[k].dom();,if (r != null ) IntDomain rOrigin = r.origin[k].dom();
Diff.java,int rOriginSize = rOrigin.noIntervals();,if (rOrigin != null ) int rOriginSize = rOrigin.noIntervals();
Diff.java,IntDomain rIdom = r.origin[i].dom();,if (r != null ) IntDomain rIdom = r.origin[i].dom();
Diff.java,Interval i = ie.nextElement();,if (ie != null ) Interval i = ie.nextElement();
Diff.java,dMax = excludeMin - i.min();,if (i != null ) dMax = excludeMin - i.min();
Diff.java,IntDomain rOrigin = r.origin[i].dom();,if (r != null ) IntDomain rOrigin = r.origin[i].dom();
Diff.java,IntDomain rLength = r.length[i].dom();,if (r != null ) IntDomain rLength = r.length[i].dom();
Diff.java,IntDomain rOriginJdom = r.origin[j].dom();,if (r != null ) IntDomain rOriginJdom = r.origin[j].dom();
Diff.java,IntDomain rLengthJdom = r.length[j].dom();,if (r != null ) IntDomain rLengthJdom = r.length[j].dom();
Diff.java,int minJ = rOriginJdom.min();,if (rOriginJdom != null ) int minJ = rOriginJdom.min();
Diff.java,int maxJ = rOriginJdom.max() + rLengthJdom.min();,if (rLengthJdom != null ) int maxJ = rOriginJdom.max() + rLengthJdom.min();
Diff.java,int durJ = rLengthJdom.min();,if (rLengthJdom != null ) int durJ = rLengthJdom.min();
Diff.java,int dur = Duration.min();,if (Duration != null ) int dur = Duration.min();
Diff.java,IntDomain StartDom = Start.dom();,if (Start != null ) IntDomain StartDom = Start.dom();
Diff.java,IntDomain StartDom = Start.dom();,if (Start != null ) IntDomain StartDom = Start.dom();
Diff.java,IntDomain rOriginJdom = r.origin[j].dom();,if (r != null ) IntDomain rOriginJdom = r.origin[j].dom();
Diff.java,IntDomain rOriginIdom = r.origin[i].dom();,if (r != null ) IntDomain rOriginIdom = r.origin[i].dom();
Diff.java,int rOriginIdomMin = rOriginIdom.min();,if (rOriginIdom != null ) int rOriginIdomMin = rOriginIdom.min();
Diff.java,int rOriginIdomMax = rOriginIdom.max();,if (rOriginIdom != null ) int rOriginIdomMax = rOriginIdom.max();
Diff2.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
Diff2.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Diff2.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Diff2.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Diff2.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Diff2.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Diff2.java,IntDomain rOrigin = r.origin[i].dom();,if (r != null ) IntDomain rOrigin = r.origin[i].dom();
Diff2.java,IntDomain rLength = r.length[i].dom();,if (r != null ) IntDomain rLength = r.length[i].dom();
Diff2.java,IntDomain rLengthDom = r.length[i].dom();,if (r != null ) IntDomain rLengthDom = r.length[i].dom();
Diff2.java,minLength[i] = rLengthDom.min();,if (rLengthDom != null ) minLength[i] = rLengthDom.min();
Diff2.java,IntDomain rOriginDom = r.origin[i].dom();,if (r != null ) IntDomain rOriginDom = r.origin[i].dom();
Diff2.java,IntDomain sOriginIdom = s.origin[m].dom();,if (s != null ) IntDomain sOriginIdom = s.origin[m].dom();
Diff2.java,IntDomain sLengthIdom = s.length[m].dom();,if (s != null ) IntDomain sLengthIdom = s.length[m].dom();
Diff2.java,int sLengthIMin = sLengthIdom.min();,if (sLengthIdom != null ) int sLengthIMin = sLengthIdom.min();
Diff2.java,int sOriginIMax = sOriginIdom.max();,if (sOriginIdom != null ) int sOriginIMax = sOriginIdom.max();
Diff2.java,IntDomain rOriginIdom = r.origin[i].dom();,if (r != null ) IntDomain rOriginIdom = r.origin[i].dom();
Diff2.java,IntDomain rLengthIdom = r.length[i].dom();,if (r != null ) IntDomain rLengthIdom = r.length[i].dom();
Disjoint.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
Disjoint.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Disjoint.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Disjoint.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Disjoint.java,IntDomain rOrigin = r.origin[i].dom();,if (r != null ) IntDomain rOrigin = r.origin[i].dom();
Disjoint.java,IntDomain rLength = r.length[i].dom();,if (r != null ) IntDomain rLength = r.length[i].dom();
Disjoint.java,IntDomain rLengthDom = r.length[i].dom();,if (r != null ) IntDomain rLengthDom = r.length[i].dom();
Disjoint.java,minLength[i] = rLengthDom.min();,if (rLengthDom != null ) minLength[i] = rLengthDom.min();
Disjoint.java,IntDomain rOriginDom = r.origin[i].dom();,if (r != null ) IntDomain rOriginDom = r.origin[i].dom();
Disjoint.java,IntDomain sOriginIdom = s.origin[m].dom();,if (s != null ) IntDomain sOriginIdom = s.origin[m].dom();
Disjoint.java,IntDomain sLengthIdom = s.length[m].dom();,if (s != null ) IntDomain sLengthIdom = s.length[m].dom();
Disjoint.java,int sLengthIMin = sLengthIdom.min();,if (sLengthIdom != null ) int sLengthIMin = sLengthIdom.min();
Disjoint.java,int sOriginIMax = sOriginIdom.max();,if (sOriginIdom != null ) int sOriginIMax = sOriginIdom.max();
Disjoint.java,IntDomain rOriginIdom = r.origin[i].dom();,if (r != null ) IntDomain rOriginIdom = r.origin[i].dom();
Disjoint.java,IntDomain rLengthIdom = r.length[i].dom();,if (r != null ) IntDomain rLengthIdom = r.length[i].dom();
Disjoint.java,IntDomain rOriginIdom = r.origin[i].dom();,if (r != null ) IntDomain rOriginIdom = r.origin[i].dom();
Disjoint.java,int rOriginIdomMin = rOriginIdom.min();,if (rOriginIdom != null ) int rOriginIdomMin = rOriginIdom.min();
Disjoint.java,int rOriginIdomMax = rOriginIdom.max();,if (rOriginIdom != null ) int rOriginIdomMax = rOriginIdom.max();
DisjointConditional.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
DisjointConditional.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
DisjointConditional.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
DisjointConditional.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
DisjointConditional.java,IntDomain rOriginJdom = r.origin[j].dom();,if (r != null ) IntDomain rOriginJdom = r.origin[j].dom();
DisjointConditional.java,IntDomain rLengthJdom = r.length[j].dom();,if (r != null ) IntDomain rLengthJdom = r.length[j].dom();
DisjointConditional.java,int minJ = rOriginJdom.min();,if (rOriginJdom != null ) int minJ = rOriginJdom.min();
DisjointConditional.java,int maxJ = rOriginJdom.max() + rLengthJdom.min();,if (rLengthJdom != null ) int maxJ = rOriginJdom.max() + rLengthJdom.min();
DisjointConditional.java,int durJ = rLengthJdom.min();,if (rLengthJdom != null ) int durJ = rLengthJdom.min();
DisjointConditional.java,IntDomain origin = r.origin[i].dom();,if (r != null ) IntDomain origin = r.origin[i].dom();
DisjointConditional.java,int dur = r.length[i].min();,if (r != null ) int dur = r.length[i].min();
DisjointConditional.java,IntDomain rLengthDom = r.length[i].dom();,if (r != null ) IntDomain rLengthDom = r.length[i].dom();
DisjointConditional.java,minLength[i] = rLengthDom.min();,if (rLengthDom != null ) minLength[i] = rLengthDom.min();
DisjointConditional.java,IntDomain rOriginDom = r.origin[i].dom();,if (r != null ) IntDomain rOriginDom = r.origin[i].dom();
DisjointConditional.java,IntDomain sOriginIdom = s.origin[m].dom();,if (s != null ) IntDomain sOriginIdom = s.origin[m].dom();
DisjointConditional.java,IntDomain sLengthIdom = s.length[m].dom();,if (s != null ) IntDomain sLengthIdom = s.length[m].dom();
DisjointConditional.java,int sLengthIMin = sLengthIdom.min();,if (sLengthIdom != null ) int sLengthIMin = sLengthIdom.min();
DisjointConditional.java,int sOriginIMax = sOriginIdom.max();,if (sOriginIdom != null ) int sOriginIMax = sOriginIdom.max();
DisjointConditional.java,IntDomain rOriginIdom = r.origin[i].dom();,if (r != null ) IntDomain rOriginIdom = r.origin[i].dom();
DisjointConditional.java,IntDomain rLengthIdom = r.length[i].dom();,if (r != null ) IntDomain rLengthIdom = r.length[i].dom();
DisjointConditional.java,IntDomain rOriginDom = r.origin[i].dom();,if (r != null ) IntDomain rOriginDom = r.origin[i].dom();
DisjointConditional.java,IntDomain rOriginJdom = r.origin[j].dom();,if (r != null ) IntDomain rOriginJdom = r.origin[j].dom();
DisjointConditional.java,IntDomain rLengthJdom = r.length[j].dom();,if (r != null ) IntDomain rLengthJdom = r.length[j].dom();
DisjointConditional.java,int minJ = rOriginJdom.min();,if (rOriginJdom != null ) int minJ = rOriginJdom.min();
DisjointConditional.java,int maxJ = rOriginJdom.max() + rLengthJdom.min();,if (rLengthJdom != null ) int maxJ = rOriginJdom.max() + rLengthJdom.min();
DisjointConditional.java,int durJ = rLengthJdom.min();,if (rLengthJdom != null ) int durJ = rLengthJdom.min();
DisjointConditional.java,int dur = Duration.min();,if (Duration != null ) int dur = Duration.min();
DisjointConditional.java,IntDomain StartDom = Start.dom();,if (Start != null ) IntDomain StartDom = Start.dom();
DisjointConditional.java,IntDomain StartDom = Start.dom();,if (Start != null ) IntDomain StartDom = Start.dom();
DisjointConditional.java,IntDomain rOriginJdom = r.origin[j].dom();,if (r != null ) IntDomain rOriginJdom = r.origin[j].dom();
DisjointConditional.java,IntDomain rOriginIdom = r.origin[i].dom();,if (r != null ) IntDomain rOriginIdom = r.origin[i].dom();
DisjointConditional.java,int rOriginIdomMin = rOriginIdom.min();,if (rOriginIdom != null ) int rOriginIdomMin = rOriginIdom.min();
DisjointConditional.java,int rOriginIdomMax = rOriginIdom.max();,if (rOriginIdom != null ) int rOriginIdomMax = rOriginIdom.max();
Distance.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Distance.java,int ySize = yDom.noIntervals();,if (yDom != null ) int ySize = yDom.noIntervals();
Distance.java,int zSize = z.domain.noIntervals();,if (z != null ) int zSize = z.domain.noIntervals();
Distance.java,int xSize = x.domain.noIntervals();,if (x != null ) int xSize = x.domain.noIntervals();
Distance.java,int zSize = zDom.noIntervals();,if (zDom != null ) int zSize = zDom.noIntervals();
Distance.java,int xSize = xDom.noIntervals();,if (xDom != null ) int xSize = xDom.noIntervals();
Distance.java,int ySize = yDom.noIntervals();,if (yDom != null ) int ySize = yDom.noIntervals();
ElementInteger.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
ElementInteger.java,IntDomain indexDom = index.dom().cloneLight();,if (index != null ) IntDomain indexDom = index.dom().cloneLight();
ElementInteger.java,int v = value.min();,if (value != null ) int v = value.min();
ElementIntegerFast.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
ElementIntegerFast.java,short sort = order.value();,if (order != null ) short sort = order.value();
ElementIntegerFast.java,int minIndex = index.min();,if (index != null ) int minIndex = index.min();
ElementIntegerFast.java,int maxIndex = index.max();,if (index != null ) int maxIndex = index.max();
ElementIntegerFast.java,boolean sat = value.singleton();,if (value != null ) boolean sat = value.singleton();
ElementIntegerFast.java,int v = value.min();,if (value != null ) int v = value.min();
ElementIntegerFast.java,ValueEnumeration e = index.domain.valueEnumeration();,if (index != null ) ValueEnumeration e = index.domain.valueEnumeration();
ElementVariable.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
ElementVariable.java,IntDomain temp = value.domain.cloneLight();,if (value != null ) IntDomain temp = value.domain.cloneLight();
ElementVariable.java,int min = list[position].domain.min();,if (list[position] != null ) int min = list[position].domain.min();
ElementVariable.java,int max = list[position].domain.max();,if (list[position] != null ) int max = list[position].domain.max();
ElementVariable.java,checkTrigger = nextValueDomain.getSize();,if (nextValueDomain != null ) checkTrigger = nextValueDomain.getSize();
ElementVariable.java,Iterator<IntVar> itr = variableQueue.iterator();,if (variableQueue != null ) Iterator<IntVar> itr = variableQueue.iterator();
ElementVariable.java,IntVar changedVar = itr.next();,if (itr != null ) IntVar changedVar = itr.next();
ElementVariable.java,int lostSupport = enumer.nextElement();,if (enumer != null ) int lostSupport = enumer.nextElement();
ElementVariable.java,boolean sat = value.singleton();,if (value != null ) boolean sat = value.singleton();
ElementVariable.java,int v = value.min();,if (value != null ) int v = value.min();
ElementVariable.java,ValueEnumeration e = index.domain.valueEnumeration();,if (index != null ) ValueEnumeration e = index.domain.valueEnumeration();
ElementVariableFast.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
ElementVariableFast.java,boolean sat = value.singleton();,if (value != null ) boolean sat = value.singleton();
ElementVariableFast.java,int v = value.min();,if (value != null ) int v = value.min();
ElementVariableFast.java,ValueEnumeration e = index.domain.valueEnumeration();,if (index != null ) ValueEnumeration e = index.domain.valueEnumeration();
Eq.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Eq.java,Var V = variables.removeFirst();,if (variables != null ) Var V = variables.removeFirst();
EqBool.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
EqBool.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
ExtensionalConflictVA.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
ExtensionalConflictVA.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
ExtensionalConflictVA.java,t[i] = list[i].min();,if (list[i] != null ) t[i] = list[i].min();
ExtensionalConflictVA.java,t[i] = list[i].min();,if (list[i] != null ) t[i] = list[i].min();
ExtensionalConflictVA.java,t[i] = list[i].min();,if (list[i] != null ) t[i] = list[i].min();
ExtensionalConflictVA.java,t[i] = list[i].min();,if (list[i] != null ) t[i] = list[i].min();
ExtensionalConflictVA.java,int value = enumer.nextElement();,if (enumer != null ) int value = enumer.nextElement();
ExtensionalConflictVA.java,t[i] = list[i].min();,if (list[i] != null ) t[i] = list[i].min();
ExtensionalSupportMDD.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
ExtensionalSupportMDD.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
ExtensionalSupportSTR.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
ExtensionalSupportSTR.java,nexts[current] = headsOfEliminatedTuples.value();,if (headsOfEliminatedTuples != null ) nexts[current] = headsOfEliminatedTuples.value();
ExtensionalSupportSTR.java,last = tailsOfEliminatedTuples.value();,if (tailsOfEliminatedTuples != null ) last = tailsOfEliminatedTuples.value();
ExtensionalSupportSTR.java,first = headsOfEliminatedTuples.value();,if (headsOfEliminatedTuples != null ) first = headsOfEliminatedTuples.value();
ExtensionalSupportSTR.java,nexts[last] = headsOfEliminatedTuples.value();,if (headsOfEliminatedTuples != null ) nexts[last] = headsOfEliminatedTuples.value();
ExtensionalSupportSTR.java,first = headsOfEliminatedTuples.value();,if (headsOfEliminatedTuples != null ) first = headsOfEliminatedTuples.value();
ExtensionalSupportSTR.java,last = tailsOfEliminatedTuples.value();,if (tailsOfEliminatedTuples != null ) last = tailsOfEliminatedTuples.value();
ExtensionalSupportSTR.java,domainSizeAfterConsistency[i] = list[i].getSize();,if (list[i] != null ) domainSizeAfterConsistency[i] = list[i].getSize();
ExtensionalSupportSTR.java,nbGlobalValuesToBeSupported += list[i].getSize();,if (list[i] != null ) nbGlobalValuesToBeSupported += list[i].getSize();
ExtensionalSupportSTR.java,nbValuesToBeSupported[i] = list[i].getSize();,if (list[i] != null ) nbValuesToBeSupported[i] = list[i].getSize();
ExtensionalSupportSTR.java,domainSizeAfterConsistency[i] = list[i].getSize();,if (list[i] != null ) domainSizeAfterConsistency[i] = list[i].getSize();
ExtensionalSupportVA.java,t[i] = list[i].min();,if (list[i] != null ) t[i] = list[i].min();
ExtensionalSupportVA.java,t[i] = list[i].min();,if (list[i] != null ) t[i] = list[i].min();
ExtensionalSupportVA.java,t[i] = list[i].min();,if (list[i] != null ) t[i] = list[i].min();
ExtensionalSupportVA.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
ExtensionalSupportVA.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
ExtensionalSupportVA.java,int value = enumer.nextElement();,if (enumer != null ) int value = enumer.nextElement();
GCC.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
GCC.java,stampValue = stamp.value();,if (stamp != null ) stampValue = stamp.value();
GCC.java,Integer j = venum.nextElement();,if (venum != null ) Integer j = venum.nextElement();
GCC.java,int xValue = xVar.value();,if (xVar != null ) int xValue = xVar.value();
GCC.java,int stampValue = stamp.value();,if (stamp != null ) int stampValue = stamp.value();
IfThen.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
IfThenBool.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
IfThenElse.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
In.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
In.java,this.DomComplement = dom.complement();,if (dom != null ) this.DomComplement = dom.complement();
IntRectangle.java,IntDomain RoriginIDom = R.origin[i].dom();,if (R != null ) IntDomain RoriginIDom = R.origin[i].dom();
Linear.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Linear.java,int pointer = nextGroundedPosition.value();,if (nextGroundedPosition != null ) int pointer = nextGroundedPosition.value();
Linear.java,int pointer = nextGroundedPosition.value();,if (nextGroundedPosition != null ) int pointer = nextGroundedPosition.value();
Linear.java,lMin = sumGrounded.value();,if (sumGrounded != null ) lMin = sumGrounded.value();
LinearIntDom.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
LinearIntDom.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
LinearIntDom.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
LinearIntDom.java,IntDomain currentDom = x[index].dom();,if (x[index] != null ) IntDomain currentDom = x[index].dom();
LinearIntDom.java,int element = val.nextElement();,if (val != null ) int element = val.nextElement();
LinearIntDom.java,IntDomain currentDom = x[index].dom();,if (x[index] != null ) IntDomain currentDom = x[index].dom();
LinearIntDom.java,int element = val.nextElement();,if (val != null ) int element = val.nextElement();
Max.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
Max.java,int start = position.value();,if (position != null ) int start = position.value();
Max.java,int maxMax = max.max();,if (max != null ) int maxMax = max.max();
Max.java,int minMax = max.min();,if (max != null ) int minMax = max.min();
Max.java,vDom = var.dom();,if (var != null ) vDom = var.dom();
Max.java,boolean sat = max.singleton();,if (max != null ) boolean sat = max.singleton();
Max.java,int MAX = max.min();,if (max != null ) int MAX = max.min();
MaxSimple.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
MaxSimple.java,int maxMax = max.max();,if (max != null ) int maxMax = max.max();
MaxSimple.java,int MAX = max.min();,if (max != null ) int MAX = max.min();
Min.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
Min.java,int start = position.value();,if (position != null ) int start = position.value();
Min.java,int minMin = min.min();,if (min != null ) int minMin = min.min();
Min.java,int maxMin = min.max();,if (min != null ) int maxMin = min.max();
Min.java,vDom = var.dom();,if (var != null ) vDom = var.dom();
Min.java,int minValue = min.max();,if (min != null ) int minValue = min.max();
MinSimple.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
MinSimple.java,int minMin = min.min();,if (min != null ) int minMin = min.min();
MinSimple.java,int MIN = min.max();,if (min != null ) int MIN = min.max();
NoGood.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
Not.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Not.java,Var V = variables.removeFirst();,if (variables != null ) Var V = variables.removeFirst();
Or.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
Or.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
Or.java,Var V = variables.removeFirst();,if (variables != null ) Var V = variables.removeFirst();
Rectangle.java,IntDomain originIdom = origin[i].dom();,if (origin[i] != null ) IntDomain originIdom = origin[i].dom();
Rectangle.java,IntDomain ROriginIdom = r.origin[i].dom();,if (r != null ) IntDomain ROriginIdom = r.origin[i].dom();
Rectangle.java,area *= length[i].min();,if (length[i] != null ) area *= length[i].min();
Rectangle.java,IntDomain originIdom = origin[i].dom();,if (origin[i] != null ) IntDomain originIdom = origin[i].dom();
Rectangle.java,start = originIdom.max();,if (originIdom != null ) start = originIdom.max();
Rectangle.java,IntDomain originI = origin[i].dom();,if (origin[i] != null ) IntDomain originI = origin[i].dom();
Rectangle.java,start = originI.max();,if (originI != null ) start = originI.max();
Reified.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Reified.java,Var V = variables.removeFirst();,if (variables != null ) Var V = variables.removeFirst();
Sequence.java,this.set = set.clone();,if (set != null ) this.set = set.clone();
SoftAlldifferent.java,int d = all.getSize();,if (all != null ) int d = all.getSize();
SoftAlldifferent.java,ValueEnumeration it = all.valueEnumeration();,if (all != null ) ValueEnumeration it = all.valueEnumeration();
SoftAlldifferent.java,int value = it.nextElement();,if (it != null ) int value = it.nextElement();
SoftGCC.java,int hardElement = hard.nextElement();,if (hard != null ) int hardElement = hard.nextElement();
SoftGCC.java,int softElement = soft.nextElement();,if (soft != null ) int softElement = soft.nextElement();
SoftGCC.java,int hardElement = hard.nextElement();,if (hard != null ) int hardElement = hard.nextElement();
SoftGCC.java,int softElement = soft.nextElement();,if (soft != null ) int softElement = soft.nextElement();
SoftGCC.java,int d = all.getSize();,if (all != null ) int d = all.getSize();
SoftGCC.java,ValueEnumeration it = all.valueEnumeration();,if (all != null ) ValueEnumeration it = all.valueEnumeration();
SoftGCC.java,int value = it.nextElement();,if (it != null ) int value = it.nextElement();
Subcircuit.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
Subcircuit.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Subcircuit.java,boolean sat = super.satisfied(); // alldifferent,if (alldifferent != null ) boolean sat = super.satisfied(); // alldifferent
Subcircuit.java,n = stck.pop();,if (stck != null ) n = stck.pop();
Sum.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Sum.java,int pointer = nextGroundedPosition.value();,if (nextGroundedPosition != null ) int pointer = nextGroundedPosition.value();
Sum.java,int lMin = sumGrounded.value();,if (sumGrounded != null ) int lMin = sumGrounded.value();
Sum.java,sumJustGrounded += currentDomain.min();,if (currentDomain != null ) sumJustGrounded += currentDomain.min();
Sum.java,lMin += currentDomain.min();,if (currentDomain != null ) lMin += currentDomain.min();
Sum.java,lMax += currentDomain.max();,if (currentDomain != null ) lMax += currentDomain.max();
Sum.java,boolean sat = sum.singleton();,if (sum != null ) boolean sat = sum.singleton();
Sum.java,sat = list[i].singleton();,if (list[i] != null ) sat = list[i].singleton();
Sum.java,"sumMin = subtract(sumMin, sum.max());","if (sum != null ) sumMin = subtract(sumMin, sum.max());"
Sum.java,"sumMax = subtract(sumMax, sum.min());","if (sum != null ) sumMax = subtract(sumMax, sum.min());"
Sum.java,guideValue = listDom.min();,if (listDom != null ) guideValue = listDom.min();
Sum.java,guideValue = listDom.max();,if (listDom != null ) guideValue = listDom.max();
SumBool.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
SumBool.java,IntDomain xd = x[i].dom();,if (x[i] != null ) IntDomain xd = x[i].dom();
SumBool.java,min += xd.min();,if (xd != null ) min += xd.min();
SumBool.java,max += xd.max();,if (xd != null ) max += xd.max();
SumBool.java,int sumValue = sum.value();,if (sum != null ) int sumValue = sum.value();
SumBool.java,int sumValue = sum.value();,if (sum != null ) int sumValue = sum.value();
SumBool.java,int sumValue = sum.value();,if (sum != null ) int sumValue = sum.value();
SumBool.java,int sumValue = sum.value();,if (sum != null ) int sumValue = sum.value();
SumBool.java,int sumValue = sum.value();,if (sum != null ) int sumValue = sum.value();
SumBool.java,IntDomain xd = x[i].dom();,if (x[i] != null ) IntDomain xd = x[i].dom();
SumInt.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
SumInt.java,IntDomain xd = x[i].dom();,if (x[i] != null ) IntDomain xd = x[i].dom();
SumInt.java,int sMax = sum.max();,if (sum != null ) int sMax = sum.max();
SumInt.java,int sMin = sum.min();,if (sum != null ) int sMin = sum.min();
SumInt.java,min = x[i].min();,if (x[i] != null ) min = x[i].min();
SumInt.java,int newMin = x[i].min();,if (x[i] != null ) int newMin = x[i].min();
SumInt.java,int newMax = x[i].max();,if (x[i] != null ) int newMax = x[i].max();
SumInt.java,guideValue = listDom.min();,if (listDom != null ) guideValue = listDom.min();
SumInt.java,guideValue = listDom.max();,if (listDom != null ) guideValue = listDom.max();
SumWeight.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
SumWeight.java,int pointer = nextGroundedPosition.value();,if (nextGroundedPosition != null ) int pointer = nextGroundedPosition.value();
SumWeight.java,lMin = sumGrounded.value();,if (sumGrounded != null ) lMin = sumGrounded.value();
SumWeight.java,int pointer = nextGroundedPosition.value();,if (nextGroundedPosition != null ) int pointer = nextGroundedPosition.value();
SumWeightDom.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
SumWeightDom.java,int pointer = nextGroundedPosition.value();,if (nextGroundedPosition != null ) int pointer = nextGroundedPosition.value();
SumWeightDom.java,lMin = sumGrounded.value();,if (sumGrounded != null ) lMin = sumGrounded.value();
SumWeightDom.java,lMin += lArray[i].min();,if (lArray[i] != null ) lMin += lArray[i].min();
SumWeightDom.java,lMax += lArray[i].max();,if (lArray[i] != null ) lMax += lArray[i].max();
SumWeightDom.java,int pointer = nextGroundedPosition.value();,if (nextGroundedPosition != null ) int pointer = nextGroundedPosition.value();
SumWeightDom.java,int sGround = sumGrounded.value();,if (sumGrounded != null ) int sGround = sumGrounded.value();
SumWeightDom.java,int pointer = nextGroundedPosition.value();,if (nextGroundedPosition != null ) int pointer = nextGroundedPosition.value();
Task.java,IntDomain sDom = start.dom();,if (start != null ) IntDomain sDom = start.dom();
Task.java,IntDomain dDom = dur.dom();,if (dur != null ) IntDomain dDom = dur.dom();
Task.java,IntDomain sDom = start.dom();,if (start != null ) IntDomain sDom = start.dom();
Task.java,int dDomMin = dur.dom().min();,if (dur != null ) int dDomMin = dur.dom().min();
Task.java,IntDomain sDom = start.dom();,if (start != null ) IntDomain sDom = start.dom();
Task.java,lst = sDom.max();,if (sDom != null ) lst = sDom.max();
Task.java,ect = sDom.min() + dur.min();,if (dur != null ) ect = sDom.min() + dur.min();
Values.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Values.java,int maxNumberDifferent = matcher.hopcroftKarp();,if (matcher != null ) int maxNumberDifferent = matcher.hopcroftKarp();
Values.java,int diffMin = count.min() - singletonValues.getSize();,if (singletonValues != null ) int diffMin = count.min() - singletonValues.getSize();
Values.java,sat = list[i].singleton();,if (list[i] != null ) sat = list[i].singleton();
VariableTrace.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
VariableTrace.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
VariableTrace.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XdivYeqZ.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XdivYeqZ.java,int xMin = xBounds.min();,if (xBounds != null ) int xMin = xBounds.min();
XdivYeqZ.java,int xMax = xBounds.max();,if (xBounds != null ) int xMax = xBounds.max();
XeqC.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XeqY.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XexpYeqZ.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XgtC.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XgtY.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XgteqC.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XgteqY.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XltC.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XltY.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XlteqC.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XlteqY.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XmodYeqZ.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XmodYeqZ.java,"reminderMax = Math.min(reminderMax, x.max());","if (x != null ) reminderMax = Math.min(reminderMax, x.max());"
XmodYeqZ.java,"reminderMin = Math.max(reminderMin, x.min());","if (x != null ) reminderMin = Math.max(reminderMin, x.min());"
XmodYeqZ.java,"reminderMin = Math.max(reminderMin, x.min());","if (x != null ) reminderMin = Math.max(reminderMin, x.min());"
XmodYeqZ.java,"reminderMax = Math.min(reminderMax, x.max());","if (x != null ) reminderMax = Math.min(reminderMax, x.max());"
XmodYeqZ.java,resultMin = result.min();,if (result != null ) resultMin = result.min();
XmodYeqZ.java,resultMax = result.max();,if (result != null ) resultMax = result.max();
XmulCeqZ.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XmulYeqC.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XmulYeqZ.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XneqC.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XneqY.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Xor.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Xor.java,Var V = variables.removeFirst();,if (variables != null ) Var V = variables.removeFirst();
XorBool.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XplusCeqZ.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XplusClteqZ.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XplusYeqC.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XplusYeqZ.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XplusYeqZ.java,"sumMin = add(sumMin, x.min());","if (x != null ) sumMin = add(sumMin, x.min());"
XplusYeqZ.java,"sumMax = add(sumMax, x.max());","if (x != null ) sumMax = add(sumMax, x.max());"
XplusYeqZ.java,"sumMin = add(sumMin, y.min());","if (y != null ) sumMin = add(sumMin, y.min());"
XplusYeqZ.java,"sumMax = add(sumMax, y.max());","if (y != null ) sumMax = add(sumMax, y.max());"
XplusYeqZ.java,"sumMin = subtract(sumMin, z.max());","if (z != null ) sumMin = subtract(sumMin, z.max());"
XplusYeqZ.java,"sumMax = subtract(sumMax, z.min());","if (z != null ) sumMax = subtract(sumMax, z.min());"
XplusYgtC.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XplusYlteqZ.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XplusYplusCeqZ.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XplusYplusQeqZ.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
XplusYplusQgtC.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Binpacking.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
Binpacking.java,Set<IntVar> bs = itemPar.keySet();,if (itemPar != null ) Set<IntVar> bs = itemPar.keySet();
Binpacking.java,IntVar var = binQueue.removeFirst();,if (binQueue != null ) IntVar var = binQueue.removeFirst();
Binpacking.java,IntVar var = itemQueue.removeFirst();,if (itemQueue != null ) IntVar var = itemQueue.removeFirst();
Binpacking.java,allCapacityMin += load[i].min();,if (load[i] != null ) allCapacityMin += load[i].min();
Binpacking.java,allCapacityMax += load[i].max();,if (load[i] != null ) allCapacityMax += load[i].max();
Binpacking.java,maxCapacity = maxC.max();,if (maxC != null ) maxCapacity = maxC.max();
Binpacking.java,allBinsSingleton = item[i++].bin.singleton();,if (item[i++] != null ) allBinsSingleton = item[i++].bin.singleton();
Cumulative.java,int l = nonZeroTasks.size();,if (nonZeroTasks != null ) int l = nonZeroTasks.size();
CumulativeBasic.java,int limitMax = limit.max();,if (limit != null ) int limitMax = limit.max();
CumulativeBasic.java,int limitMax = limit.max();,if (limit != null ) int limitMax = limit.max();
CumulativeBasic.java,profileValue -= t.res.min();,if (t != null ) profileValue -= t.res.min();
CumulativeBasic.java,profileValue -= t.res.min();,if (t != null ) profileValue -= t.res.min();
CumulativeBasic.java,profileValue -= t.res.min();,if (t != null ) profileValue -= t.res.min();
CumulativeUnary.java,updateLCT[i] = t[i].lct();,if (t[i] != null ) updateLCT[i] = t[i].lct();
TaskNormalView.java,int max = lct - dur.max();,if (dur != null ) int max = lct - dur.max();
TaskReversedView.java,int max = - lct - dur.max();,if (dur != null ) int max = - lct - dur.max();
TaskReversedView.java,int max = - lct - dur.max();,if (dur != null ) int max = - lct - dur.max();
Diffn.java,BitSet o = overlapping[k].value();,if (overlapping[k] != null ) BitSet o = overlapping[k].value();
Diffn.java,int sLengthMin = s.length(i).min();,if (s != null ) int sLengthMin = s.length(i).min();
Diffn.java,BitSet o = overlapping[i].value();,if (overlapping[i] != null ) BitSet o = overlapping[i].value();
Diffn.java,int lMin = rr.length(oDim).min();,if (rr != null ) int lMin = rr.length(oDim).min();
Diffn.java,int lMin = rr.length(oDim).min();,if (rr != null ) int lMin = rr.length(oDim).min();
Diffn.java,profileValue -= r.length(oDim).min();,if (r != null ) profileValue -= r.length(oDim).min();
Diffn.java,profileValue -= rr.length(oDim).min();,if (rr != null ) profileValue -= rr.length(oDim).min();
Diffn.java,profileValue -= rr.length(oDim).min();,if (rr != null ) profileValue -= rr.length(oDim).min();
Nooverlap.java,BitSet os = overlapping[j].value();,if (overlapping[j] != null ) BitSet os = overlapping[j].value();
Nooverlap.java,BitSet o = (BitSet)os.clone();,if ((BitSet)os != null ) BitSet o = (BitSet)os.clone();
AllowedArea.java,DBox constrainedBox = geost.getShape(currentShape).boundingBox();,if (geost != null ) DBox constrainedBox = geost.getShape(currentShape).boundingBox();
BoxDisplay.java,color = color.brighter();,if (color != null ) color = color.brighter();
BoxDisplay.java,color = new Color(o.hashCode());,if (Color(o != null ) color = new Color(o.hashCode());
BoxDisplay.java,Graphics g = bufferImage.getGraphics();,if (bufferImage != null ) Graphics g = bufferImage.getGraphics();
BoxDisplay.java,Graphics g = bufferImage.getGraphics();,if (bufferImage != null ) Graphics g = bufferImage.getGraphics();
BoxDisplay.java,int width = this.getContentPane().getWidth();,if (this != null ) int width = this.getContentPane().getWidth();
BoxDisplay.java,Shape shape = geost.getShape(o.shapeID.min());,if (geost != null ) Shape shape = geost.getShape(o.shapeID.min());
BoxDisplay.java,Shape shape = geost.getShape(o.shapeID.min());,if (geost != null ) Shape shape = geost.getShape(o.shapeID.min());
BoxDisplay.java,Graphics g = bufferImage.getGraphics();,if (bufferImage != null ) Graphics g = bufferImage.getGraphics();
BoxDisplay.java,Graphics g = bufferImage.getGraphics();,if (bufferImage != null ) Graphics g = bufferImage.getGraphics();
BoxDisplay.java,Graphics g = bufferImage.getGraphics();,if (bufferImage != null ) Graphics g = bufferImage.getGraphics();
DBox.java,int size = freeBoxes.size();,if (freeBoxes != null ) int size = freeBoxes.size();
Geost.java,this.objects = objects.clone();,if (objects != null ) this.objects = objects.clone();
Geost.java,this.externalConstraints = constraints.clone();,if (constraints != null ) this.externalConstraints = constraints.clone();
Geost.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
Geost.java,ValueEnumeration shapeIDVals = o.shapeID.domain.valueEnumeration();,if (o != null ) ValueEnumeration shapeIDVals = o.shapeID.domain.valueEnumeration();
Geost.java,int sid = shapeIDVals.nextElement();,if (shapeIDVals != null ) int sid = shapeIDVals.nextElement();
Geost.java,ValueEnumeration vals = o.shapeID.domain.valueEnumeration();,if (o != null ) ValueEnumeration vals = o.shapeID.domain.valueEnumeration();
Geost.java,constraintCount += ics.size();,if (ics != null ) constraintCount += ics.size();
Geost.java,GeostObject[] constraintScope = ec.getObjectScope();,if (ec != null ) GeostObject[] constraintScope = ec.getObjectScope();
Geost.java,int prevSize = scope.size();,if (scope != null ) int prevSize = scope.size();
Geost.java,c[i] = o.coords[i].min();,if (o != null ) c[i] = o.coords[i].min();
Geost.java,c[dimension] = o.start.min();,if (o != null ) c[dimension] = o.start.min();
Geost.java,c[i] = o.coords[i].max();,if (o != null ) c[i] = o.coords[i].max();
Geost.java,c[dimension] = o.end.max();,if (o != null ) c[dimension] = o.end.max();
Geost.java,GeostObject o = objectQueue.removeFirst();,if (objectQueue != null ) GeostObject o = objectQueue.removeFirst();
Geost.java,o = objectQueue.removeFirst();,if (objectQueue != null ) o = objectQueue.removeFirst();
Geost.java,int[] ordering = order.masterOrdering();,if (order != null ) int[] ordering = order.masterOrdering();
Geost.java,final ValueEnumeration vals = o.shapeID.domain.valueEnumeration();,if (o != null ) final ValueEnumeration vals = o.shapeID.domain.valueEnumeration();
Geost.java,int sid = vals.nextElement();,if (vals != null ) int sid = vals.nextElement();
Geost.java,ValueEnumeration sids = o.shapeID.domain.valueEnumeration();,if (o != null ) ValueEnumeration sids = o.shapeID.domain.valueEnumeration();
Geost.java,removeLimit = lastLevelLastVar.value();,if (lastLevelLastVar != null ) removeLimit = lastLevelLastVar.value();
Geost.java,int lowerBound = setStart.value();,if (setStart != null ) int lowerBound = setStart.value();
GeostObject.java,bestShapeID[i] = shapeID.min();,if (shapeID != null ) bestShapeID[i] = shapeID.min();
GeostObject.java,return groundCount == variables.size();,if (variables != null ) return groundCount == variables.size();
ObstacleObject.java,shapeId = obstacle.shapeID.value();,if (obstacle != null ) shapeId = obstacle.shapeID.value();
ObstacleObjectFrame.java,ValueEnumeration vals = obstacle.shapeID.domain.valueEnumeration();,if (obstacle != null ) ValueEnumeration vals = obstacle.shapeID.domain.valueEnumeration();
ObstacleObjectFrame.java,int sid = vals.nextElement();,if (vals != null ) int sid = vals.nextElement();
ObstacleObjectFrame.java,DBox shapeBoundingBox = shape.boundingBox();,if (shape != null ) DBox shapeBoundingBox = shape.boundingBox();
ObstacleObjectFrame.java,frameArea = domain.area();,if (domain != null ) frameArea = domain.area();
ObstacleObjectFrame.java,int sid = vals.nextElement();,if (vals != null ) int sid = vals.nextElement();
ObstacleObjectFrame.java,ListIterator<DBox> iterator = frame.listIterator();,if (frame != null ) ListIterator<DBox> iterator = frame.listIterator();
ObstacleObjectFrame.java,DBox piece = iterator.next();,if (iterator != null ) DBox piece = iterator.next();
ObstacleObjectFrame.java,frameArea += frameComponent.area();,if (frameComponent != null ) frameArea += frameComponent.area();
ObstacleObjectFrame.java,final ValueEnumeration vals = obstacle.shapeID.domain.valueEnumeration();,if (obstacle != null ) final ValueEnumeration vals = obstacle.shapeID.domain.valueEnumeration();
ObstacleObjectFrame.java,int sid = vals.nextElement();,if (vals != null ) int sid = vals.nextElement();
ObstacleObjectFrame.java,int up = obstacle.end.max();,if (obstacle != null ) int up = obstacle.end.max();
ObstacleObjectFrame.java,int low = obstacle.start.min();,if (obstacle != null ) int low = obstacle.start.min();
ObstacleObjectFrame.java,timeSizeMax = obstacle.end.min();,if (obstacle != null ) timeSizeMax = obstacle.end.min();
Shape.java,Iterator<DBox> i = boxes.iterator();,if (boxes != null ) Iterator<DBox> i = boxes.iterator();
Shape.java,Collection<DBox> rescaledBoxes = new ArrayList<DBox>(boxes.size());,if (ArrayList<DBox>(boxes != null ) Collection<DBox> rescaledBoxes = new ArrayList<DBox>(boxes.size());
Shape.java,holeArea += (hole.area());,if ((hole != null ) holeArea += (hole.area());
Knapsack.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Knapsack.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Knapsack.java,Set<IntVar> qs = itemPar.keySet();,if (itemPar != null ) Set<IntVar> qs = itemPar.keySet();
Knapsack.java,tree.criticalLeaf.positionInTheTree = positionOfCriticalItem.value();,if (positionOfCriticalItem != null ) tree.criticalLeaf.positionInTheTree = positionOfCriticalItem.value();
Knapsack.java,positionOfAlreadyUpdated = list.size();,if (list != null ) positionOfAlreadyUpdated = list.size();
Knapsack.java,TreeLeaf leaf = tree.getLast();,if (tree != null ) TreeLeaf leaf = tree.getLast();
Knapsack.java,IntVar quantity = leaf.getVariable();,if (leaf != null ) IntVar quantity = leaf.getVariable();
Knapsack.java,TreeLeaf leaf = tree.getFirst();,if (tree != null ) TreeLeaf leaf = tree.getFirst();
Knapsack.java,IntVar quantity = leaf.getVariable();,if (leaf != null ) IntVar quantity = leaf.getVariable();
Knapsack.java,var = item.getVariable();,if (item != null ) var = item.getVariable();
Knapsack.java,final boolean maxBoundHasChanged = leafForV.hasMaxChanged();,if (leafForV != null ) final boolean maxBoundHasChanged = leafForV.hasMaxChanged();
Knapsack.java,final boolean minBoundHasChanged = leafForV.hasMinChanged();,if (leafForV != null ) final boolean minBoundHasChanged = leafForV.hasMinChanged();
Knapsack.java,overallProfit += leaf.getPSum();,if (leaf != null ) overallProfit += leaf.getPSum();
Knapsack.java,overallCapacity += leaf.getWSum();,if (leaf != null ) overallCapacity += leaf.getWSum();
Knapsack.java,"maxLeafCapacity = Math.max(maxLeafCapacity, leaf.getWMax());","if (leaf != null ) maxLeafCapacity = Math.max(maxLeafCapacity, leaf.getWMax());"
Tree.java,IntVar v = item.getVariable();,if (item != null ) IntVar v = item.getVariable();
Tree.java,usedCapacity += current.left.getWSum();,if (current != null ) usedCapacity += current.left.getWSum();
Tree.java,obtainedProfit += current.left.getPSum();,if (current != null ) obtainedProfit += current.left.getPSum();
Tree.java,criticalLeftLeaf = getCriticalPosition(capacity - root.getWMax());,if (root != null ) criticalLeftLeaf = getCriticalPosition(capacity - root.getWMax());
Tree.java,criticalRightLeaf = getCriticalPosition(capacity + root.getWMax());,if (root != null ) criticalRightLeaf = getCriticalPosition(capacity + root.getWMax());
Tree.java,usedCapacity += current.left.getWSum();,if (current != null ) usedCapacity += current.left.getWSum();
Tree.java,currentWeight += currentNode.right.getWSum();,if (currentNode != null ) currentWeight += currentNode.right.getWSum();
Tree.java,currentProfit += currentNode.right.getPSum();,if (currentNode != null ) currentProfit += currentNode.right.getPSum();
Tree.java,currentWeight += currentNode.getWSum();,if (currentNode != null ) currentWeight += currentNode.getWSum();
Tree.java,currentProfit += currentNode.getPSum();,if (currentNode != null ) currentProfit += currentNode.getPSum();
Tree.java,currentWeight += currentNode.getWSum();,if (currentNode != null ) currentWeight += currentNode.getWSum();
Tree.java,currentProfit += currentNode.getPSum();,if (currentNode != null ) currentProfit += currentNode.getPSum();
Tree.java,currentWeight += currentNode.left.getWSum();,if (currentNode != null ) currentWeight += currentNode.left.getWSum();
Tree.java,currentProfit += currentNode.left.getPSum();,if (currentNode != null ) currentProfit += currentNode.left.getPSum();
Tree.java,currentWeight += currentNode.getWSum();,if (currentNode != null ) currentWeight += currentNode.getWSum();
Tree.java,currentProfit += currentNode.getPSum();,if (currentNode != null ) currentProfit += currentNode.getPSum();
Tree.java,currentWeight += currentNode.getWSum();,if (currentNode != null ) currentWeight += currentNode.getWSum();
Tree.java,currentProfit += currentNode.getPSum();,if (currentNode != null ) currentProfit += currentNode.getPSum();
Tree.java,obtainedProfit += current.left.getPSum();,if (current != null ) obtainedProfit += current.left.getPSum();
Tree.java,usedCapacity += current.right.getWSum();,if (current != null ) usedCapacity += current.right.getWSum();
TreeLeaf.java,this.previousMaxQ = quantity.max();,if (quantity != null ) this.previousMaxQ = quantity.max();
TreeLeaf.java,this.previousMinQ = quantity.min();,if (quantity != null ) this.previousMinQ = quantity.min();
TreeLeaf.java,slice = quantity.min();,if (quantity != null ) slice = quantity.min();
TreeNode.java,this.wSum = left.getWSum() + right.getWSum();,if (right != null ) this.wSum = left.getWSum() + right.getWSum();
TreeNode.java,this.pSum = left.getPSum() + right.getPSum();,if (right != null ) this.pSum = left.getPSum() + right.getPSum();
TreeNode.java,pSum = left.getPSum() + right.getPSum();,if (right != null ) pSum = left.getPSum() + right.getPSum();
TreeNode.java,wSum = left.getWSum() + right.getWSum();,if (right != null ) wSum = left.getWSum() + right.getWSum();
TreeNode.java,pSum = left.getPSum() + right.getPSum();,if (right != null ) pSum = left.getPSum() + right.getPSum();
TreeNode.java,wSum = left.getWSum() + right.getWSum();,if (right != null ) wSum = left.getWSum() + right.getWSum();
ArcCompanion.java,updated = updateSVar(network.getStoreLevel());,if (updateSVar(network != null ) updated = updateSVar(network.getStoreLevel());
ArcCompanion.java,int newCost = wVar.min();,if (wVar != null ) int newCost = wVar.min();
ArcCompanion.java,int newCost = wVar.min();,if (wVar != null ) int newCost = wVar.min();
ArcCompanion.java,Domain arcDomainC = structure.domains[arcID].complement();,if (structure != null ) Domain arcDomainC = structure.domains[arcID].complement();
Arithmetic.java,int size = Arithmetic.this.eqns.size();,if (Arithmetic != null ) int size = Arithmetic.this.eqns.size();
Assert.java,int reduced = arc.reducedCost();,if (arc != null ) int reduced = arc.reducedCost();
DomainStructure.java,int size = vardom.getSize();,if (vardom != null ) int size = vardom.getSize();
DomainStructure.java,int level = network.getStoreLevel();,if (network != null ) int level = network.getStoreLevel();
DomainStructure.java,int level = network.getStoreLevel();,if (network != null ) int level = network.getStoreLevel();
Network.java,costOffset -= arc.longCost();,if (arc != null ) costOffset -= arc.longCost();
Network.java,Node tail = arc.tail();,if (arc != null ) Node tail = arc.tail();
Network.java,costOffset += arc.longCost();,if (arc != null ) costOffset += arc.longCost();
Network.java,int size = deletedSize.value();,if (deletedSize != null ) int size = deletedSize.value();
Network.java,size = modifiedSize.value();,if (modifiedSize != null ) size = modifiedSize.value();
Network.java,Iterator<Node> it = infeasibleNodes.iterator();,if (infeasibleNodes != null ) Iterator<Node> it = infeasibleNodes.iterator();
Network.java,Node node = it.next();,if (it != null ) Node node = it.next();
NetworkBuilder.java,int weight = wVar.min();,if (wVar != null ) int weight = wVar.min();
NetworkBuilder.java,int n = vars.size();,if (vars != null ) int n = vars.size();
NetworkFlow.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
NetworkFlow.java,this.numberArgs = (short) map.size();,if (map != null ) this.numberArgs = (short) map.size();
NetworkFlow.java,int costLimit = costVariable.max() - costVariable.min();,if (costVariable != null ) int costLimit = costVariable.max() - costVariable.min();
Pruning.java,ArcCompanion companion = queue.poll();,if (queue != null ) ArcCompanion companion = queue.poll();
Pruning.java,this.numActiveArcs = queue.size();,if (queue != null ) this.numActiveArcs = queue.size();
Pruning.java,sizeBefore = xVar.domain.getSize();,if (xVar != null ) sizeBefore = xVar.domain.getSize();
Pruning.java,int sizeAfter = xVar.domain.getSize();,if (xVar != null ) int sizeAfter = xVar.domain.getSize();
Pruning.java,sizeBefore = xVar.domain.getSize();,if (xVar != null ) sizeBefore = xVar.domain.getSize();
Pruning.java,int sizeAfter = xVar.domain.getSize();,if (xVar != null ) int sizeAfter = xVar.domain.getSize();
Pruning.java,sizeBefore = nVar.domain.getSize();,if (nVar != null ) sizeBefore = nVar.domain.getSize();
Pruning.java,int sizeAfter = nVar.domain.getSize();,if (nVar != null ) int sizeAfter = nVar.domain.getSize();
Pruning.java,sizeBefore = nVar.domain.getSize();,if (nVar != null ) sizeBefore = nVar.domain.getSize();
Pruning.java,int sizeAfter = nVar.domain.getSize();,if (nVar != null ) int sizeAfter = nVar.domain.getSize();
Pruning.java,sizeBefore = wVar.domain.getSize();,if (wVar != null ) sizeBefore = wVar.domain.getSize();
Pruning.java,int sizeAfter = wVar.domain.getSize();,if (wVar != null ) int sizeAfter = wVar.domain.getSize();
Pruning.java,sizeBefore = sVar.domain.getSize();,if (sVar != null ) sizeBefore = sVar.domain.getSize();
Pruning.java,int sizeAfter = sVar.domain.getSize();,if (sVar != null ) int sizeAfter = sVar.domain.getSize();
Pruning.java,companion = strategy.next();,if (strategy != null ) companion = strategy.next();
Pruning.java,companion = strategy.next();,if (strategy != null ) companion = strategy.next();
Pruning.java,Node sink = arc.tail();,if (arc != null ) Node sink = arc.tail();
Pruning.java,int unitCost = arc.reducedCost(); // + arc.cost;,if (arc != null ) int unitCost = arc.reducedCost(); // + arc.cost;
Pruning.java,Domain arcDomainC = structure.domains[arcID].complement();,if (structure != null ) Domain arcDomainC = structure.domains[arcID].complement();
Danzig.java,int reducedCost = arc.reducedCost();,if (arc != null ) int reducedCost = arc.reducedCost();
NetworkSimplex.java,Iterator<Node> it = infeasibleNodes.iterator();,if (infeasibleNodes != null ) Iterator<Node> it = infeasibleNodes.iterator();
NetworkSimplex.java,Node node = it.next();,if (it != null ) Node node = it.next();
NetworkSimplex.java,it = infeasibleNodes.iterator();,if (infeasibleNodes != null ) it = infeasibleNodes.iterator();
NetworkSimplex.java,Node node = it.next();,if (it != null ) Node node = it.next();
NetworkSimplex.java,Node k = entering.tail();,if (entering != null ) Node k = entering.tail();
NetworkSimplex.java,Node node = entering.tail();,if (entering != null ) Node node = entering.tail();
NetworkSimplex.java,tree = leaving.tail();,if (leaving != null ) tree = leaving.tail();
NetworkSimplex.java,int reducedCost = arc.reducedCost();,if (arc != null ) int reducedCost = arc.reducedCost();
NetworkSimplex.java,cost += arc.longCost();,if (arc != null ) cost += arc.longCost();
NetworkSimplex.java,cost += node.toParent.longCost();,if (node != null ) cost += node.toParent.longCost();
RegStateDom.java,int v = enumer.nextElement();,if (enumer != null ) int v = enumer.nextElement();
Regular.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Regular.java,stateNumber = dfa.allStates.size();,if (dfa != null ) stateNumber = dfa.allStates.size();
Regular.java,int preThisLevelStateNb = this.activeLevels[varIndex].value();,if (this != null ) int preThisLevelStateNb = this.activeLevels[varIndex].value();
Regular.java,int preNextLevelStateNb = this.activeLevels[nextVar].value();,if (this != null ) int preNextLevelStateNb = this.activeLevels[nextVar].value();
Regular.java,int currentLimit = this.activeLevels[level].value();,if (this != null ) int currentLimit = this.activeLevels[level].value();
Regular.java,int lim = activeLevels[level].value();,if (activeLevels[level] != null ) int lim = activeLevels[level].value();
Regular.java,leftPosition = leftChange.value();,if (leftChange != null ) leftPosition = leftChange.value();
Regular.java,rightPosition = rightChange.value();,if (rightChange != null ) rightPosition = rightChange.value();
Regular.java,lastNumberOfActiveStates[l] = activeLevels[l].value();,if (activeLevels[l] != null ) lastNumberOfActiveStates[l] = activeLevels[l].value();
Regular.java,int checkToIndex = touchedIndex.value();,if (touchedIndex != null ) int checkToIndex = touchedIndex.value();
Regular.java,stateNb = this.activeLevels[l].value();,if (this != null ) stateNb = this.activeLevels[l].value();
Regular.java,ValueEnumeration enumer = list[level].domain.valueEnumeration();,if (list[level] != null ) ValueEnumeration enumer = list[level].domain.valueEnumeration();
Regular.java,v = enumer.nextElement();,if (enumer != null ) v = enumer.nextElement();
Regular.java,int leftEnd = leftChange.value();,if (leftChange != null ) int leftEnd = leftChange.value();
Regular.java,int rightEnd = rightChange.value();,if (rightChange != null ) int rightEnd = rightChange.value();
Regular.java,ValueEnumeration enumer = this.list[level].domain.valueEnumeration();,if (this != null ) ValueEnumeration enumer = this.list[level].domain.valueEnumeration();
Regular.java,v = enumer.nextElement();,if (enumer != null ) v = enumer.nextElement();
BoundDomain.java,min = domain.min();,if (domain != null ) min = domain.min();
BoundDomain.java,max = domain.max();,if (domain != null ) max = domain.max();
BoundDomain.java,min = domain.min();,if (domain != null ) min = domain.min();
BoundDomain.java,max = domain.max();,if (domain != null ) max = domain.max();
BoundDomain.java,int inputMin = dom.min();,if (dom != null ) int inputMin = dom.min();
BoundDomain.java,int inputMax = dom.max();,if (dom != null ) int inputMax = dom.max();
BoundDomain.java,this.min = boundDomain.min();,if (boundDomain != null ) this.min = boundDomain.min();
BoundDomain.java,this.max = boundDomain.max();,if (boundDomain != null ) this.max = boundDomain.max();
BoundDomain.java,int inputMin = domain.min();,if (domain != null ) int inputMin = domain.min();
BoundDomain.java,int inputMax = domain.max();,if (domain != null ) int inputMax = domain.max();
BoundDomain.java,int min = domain.min();,if (domain != null ) int min = domain.min();
BoundDomain.java,int max = domain.max();,if (domain != null ) int max = domain.max();
BoundDomain.java,IntervalEnumeration enumer = domain.intervalEnumeration();,if (domain != null ) IntervalEnumeration enumer = domain.intervalEnumeration();
BoundDomain.java,Interval next = enumer.nextElement();,if (enumer != null ) Interval next = enumer.nextElement();
BoundDomainValueEnumeration.java,min = dom.min();,if (dom != null ) min = dom.min();
BoundDomainValueEnumeration.java,max = dom.max();,if (dom != null ) max = dom.max();
BoundDomainValueEnumeration.java,min = domain.min();,if (domain != null ) min = domain.min();
BoundDomainValueEnumeration.java,max = domain.max();,if (domain != null ) max = domain.max();
IntDomain.java,IntervalEnumeration enumer = domain.intervalEnumeration();,if (domain != null ) IntervalEnumeration enumer = domain.intervalEnumeration();
IntDomain.java,ValueEnumeration enumer = domain.valueEnumeration();,if (domain != null ) ValueEnumeration enumer = domain.valueEnumeration();
IntDomain.java,IntervalEnumeration enumer = domain.intervalEnumeration();,if (domain != null ) IntervalEnumeration enumer = domain.intervalEnumeration();
IntDomain.java,Interval next = enumer.nextElement();,if (enumer != null ) Interval next = enumer.nextElement();
IntDomain.java,ValueEnumeration enumer = domain.valueEnumeration();,if (domain != null ) ValueEnumeration enumer = domain.valueEnumeration();
IntDomain.java,IntervalEnumeration enumer = domain.intervalEnumeration();,if (domain != null ) IntervalEnumeration enumer = domain.intervalEnumeration();
IntDomain.java,Interval next = enumer.nextElement();,if (enumer != null ) Interval next = enumer.nextElement();
IntDomain.java,ValueEnumeration enumer = domain.valueEnumeration();,if (domain != null ) ValueEnumeration enumer = domain.valueEnumeration();
IntDomain.java,IntervalEnumeration enumer = domain.intervalEnumeration();,if (domain != null ) IntervalEnumeration enumer = domain.intervalEnumeration();
IntDomain.java,Interval first = enumer.nextElement();,if (enumer != null ) Interval first = enumer.nextElement();
IntDomain.java,Interval next = enumer.nextElement();,if (enumer != null ) Interval next = enumer.nextElement();
IntDomain.java,ValueEnumeration enumer = domain.valueEnumeration();,if (domain != null ) ValueEnumeration enumer = domain.valueEnumeration();
IntDomain.java,int first = enumer.nextElement();,if (enumer != null ) int first = enumer.nextElement();
IntDomain.java,int next = enumer.nextElement();,if (enumer != null ) int next = enumer.nextElement();
IntDomain.java,IntDomain result = this.cloneLight();,if (this != null ) IntDomain result = this.cloneLight();
IntDomain.java,IntervalEnumeration enumer = domain.intervalEnumeration();,if (domain != null ) IntervalEnumeration enumer = domain.intervalEnumeration();
IntDomain.java,Interval next = enumer.nextElement();,if (enumer != null ) Interval next = enumer.nextElement();
IntDomain.java,ValueEnumeration enumer = domain.valueEnumeration();,if (domain != null ) ValueEnumeration enumer = domain.valueEnumeration();
IntDomain.java,int next = enumer.nextElement();,if (enumer != null ) int next = enumer.nextElement();
IntDomain.java,IntDomain result = this.cloneLight();,if (this != null ) IntDomain result = this.cloneLight();
IntDomain.java,IntervalEnumeration enumer = domain.intervalEnumeration();,if (domain != null ) IntervalEnumeration enumer = domain.intervalEnumeration();
IntDomain.java,Interval next = enumer.nextElement();,if (enumer != null ) Interval next = enumer.nextElement();
IntDomain.java,ValueEnumeration enumer = domain.valueEnumeration();,if (domain != null ) ValueEnumeration enumer = domain.valueEnumeration();
IntDomain.java,int next = enumer.nextElement();,if (enumer != null ) int next = enumer.nextElement();
IntDomain.java,IntDomain result = this.cloneLight();,if (this != null ) IntDomain result = this.cloneLight();
IntDomain.java,IntDomain result = this.cloneLight();,if (this != null ) IntDomain result = this.cloneLight();
IntDomain.java,IntDomain result = this.cloneLight();,if (this != null ) IntDomain result = this.cloneLight();
IntDomain.java,IntDomain result = this.cloneLight();,if (this != null ) IntDomain result = this.cloneLight();
IntDomain.java,IntDomain result = this.cloneLight();,if (this != null ) IntDomain result = this.cloneLight();
IntDomain.java,ValueEnumeration thisEnumer = this.valueEnumeration();,if (this != null ) ValueEnumeration thisEnumer = this.valueEnumeration();
IntDomain.java,ValueEnumeration paramEnumer = domain.valueEnumeration();,if (domain != null ) ValueEnumeration paramEnumer = domain.valueEnumeration();
IntDomain.java,i = thisEnumer.nextElement();,if (thisEnumer != null ) i = thisEnumer.nextElement();
IntDomain.java,j = paramEnumer.nextElement();,if (paramEnumer != null ) j = paramEnumer.nextElement();
IntDomain.java,ValueEnumeration enumer = this.valueEnumeration();,if (this != null ) ValueEnumeration enumer = this.valueEnumeration();
IntervalDomain.java,object.size = intervals.size();,if (intervals != null ) object.size = intervals.size();
IntervalDomain.java,ValueEnumeration enumer = domain.valueEnumeration();,if (domain != null ) ValueEnumeration enumer = domain.valueEnumeration();
IntervalDomain.java,int next = enumer.nextElement();,if (enumer != null ) int next = enumer.nextElement();
IntervalDomain.java,IntervalEnumeration enumer = domain.intervalEnumeration();,if (domain != null ) IntervalEnumeration enumer = domain.intervalEnumeration();
IntervalDomain.java,Interval next = enumer.nextElement();,if (enumer != null ) Interval next = enumer.nextElement();
IntervalDomain.java,ValueEnumeration enumer = input.valueEnumeration();,if (input != null ) ValueEnumeration enumer = input.valueEnumeration();
IntervalDomain.java,int next = enumer.nextElement();,if (enumer != null ) int next = enumer.nextElement();
IntervalDomain.java,ValueEnumeration enumer = domain.valueEnumeration();,if (domain != null ) ValueEnumeration enumer = domain.valueEnumeration();
IntervalDomain.java,IntervalEnumeration enumer = domain.intervalEnumeration();,if (domain != null ) IntervalEnumeration enumer = domain.intervalEnumeration();
IntervalDomain.java,Interval next = enumer.nextElement();,if (enumer != null ) Interval next = enumer.nextElement();
IntervalDomain.java,int min = domain.min();,if (domain != null ) int min = domain.min();
IntervalDomain.java,ValueEnumeration enumer = domain.valueEnumeration();,if (domain != null ) ValueEnumeration enumer = domain.valueEnumeration();
IntervalDomain.java,int min = domain.min();,if (domain != null ) int min = domain.min();
IntervalDomain.java,int max = domain.max();,if (domain != null ) int max = domain.max();
IntervalDomain.java,temp = domain.getClass().newInstance();,if (domain != null ) temp = domain.getClass().newInstance();
IntervalDomain.java,ValueEnumeration enumer = domain.valueEnumeration();,if (domain != null ) ValueEnumeration enumer = domain.valueEnumeration();
IntervalDomain.java,int next = enumer.nextElement();,if (enumer != null ) int next = enumer.nextElement();
IntervalDomain.java,ValueEnumeration enumer = domain.valueEnumeration();,if (domain != null ) ValueEnumeration enumer = domain.valueEnumeration();
IntervalDomain.java,int next = enumer.nextElement();,if (enumer != null ) int next = enumer.nextElement();
IntervalDomain.java,IntervalEnumeration enumer = domain.intervalEnumeration();,if (domain != null ) IntervalEnumeration enumer = domain.intervalEnumeration();
IntervalDomain.java,int min = domain.min();,if (domain != null ) int min = domain.min();
IntervalDomain.java,int max = domain.max();,if (domain != null ) int max = domain.max();
IntervalDomain.java,IntDomain result = this.cloneLight();,if (this != null ) IntDomain result = this.cloneLight();
IntervalDomain.java,ValueEnumeration enumer = domain.valueEnumeration();,if (domain != null ) ValueEnumeration enumer = domain.valueEnumeration();
IntervalDomain.java,int next = enumer.nextElement();,if (enumer != null ) int next = enumer.nextElement();
IntervalDomain.java,IntDomain result = intervalDomain.cloneLight();,if (intervalDomain != null ) IntDomain result = intervalDomain.cloneLight();
IntervalDomain.java,int min = domain.min();,if (domain != null ) int min = domain.min();
IntervalDomain.java,int max = domain.max();,if (domain != null ) int max = domain.max();
IntervalDomain.java,IntervalDomain result = this.cloneLight();,if (this != null ) IntervalDomain result = this.cloneLight();
IntervalDomain.java,ValueEnumeration enumer = domain.valueEnumeration();,if (domain != null ) ValueEnumeration enumer = domain.valueEnumeration();
IntervalDomain.java,int next = enumer.nextElement();,if (enumer != null ) int next = enumer.nextElement();
IntervalDomain.java,ValueEnumeration enumer = domain.valueEnumeration();,if (domain != null ) ValueEnumeration enumer = domain.valueEnumeration();
IntervalDomain.java,int next = enumer.nextElement();,if (enumer != null ) int next = enumer.nextElement();
IntervalDomain.java,int inputSize = domain.noIntervals();,if (domain != null ) int inputSize = domain.noIntervals();
IntervalDomain.java,int inputSize = domain.noIntervals();,if (domain != null ) int inputSize = domain.noIntervals();
IntervalDomain.java,ValueEnumeration enumer = domain.valueEnumeration();,if (domain != null ) ValueEnumeration enumer = domain.valueEnumeration();
IntervalDomain.java,int inputSize = domain.noIntervals();,if (domain != null ) int inputSize = domain.noIntervals();
IntervalDomain.java,int inputSize = domain.noIntervals();,if (domain != null ) int inputSize = domain.noIntervals();
IntervalDomain.java,int min = domain.min();,if (domain != null ) int min = domain.min();
IntervalDomain.java,int max = domain.max();,if (domain != null ) int max = domain.max();
IntervalDomain.java,ValueEnumeration enumer = domain.valueEnumeration();,if (domain != null ) ValueEnumeration enumer = domain.valueEnumeration();
IntervalDomain.java,int next = enumer.nextElement();,if (enumer != null ) int next = enumer.nextElement();
MutableDomainValue.java,MutableDomainValue val = new MutableDomainValue(domain.clone());,if (MutableDomainValue(domain != null ) MutableDomainValue val = new MutableDomainValue(domain.clone());
SmallDenseDomain.java,IntDomain intervalBasedRepresentation = this.toIntervalDomain();,if (this != null ) IntDomain intervalBasedRepresentation = this.toIntervalDomain();
SmallDenseDomain.java,IntDomain result = this.cloneLight();,if (this != null ) IntDomain result = this.cloneLight();
SmallDenseDomain.java,ValueEnumeration enumer = domain.valueEnumeration();,if (domain != null ) ValueEnumeration enumer = domain.valueEnumeration();
SmallDenseDomain.java,int next = enumer.nextElement();,if (enumer != null ) int next = enumer.nextElement();
SmallDenseDomain.java,IntervalEnumeration enumer = domain.intervalEnumeration();,if (domain != null ) IntervalEnumeration enumer = domain.intervalEnumeration();
SmallDenseDomain.java,IntDomain result = this.cloneLight();,if (this != null ) IntDomain result = this.cloneLight();
SmallDenseDomain.java,int noIntervals = this.noIntervals();,if (this != null ) int noIntervals = this.noIntervals();
Store.java,count += watchedConstraints.get(v).size();,if (watchedConstraints != null ) count += watchedConstraints.get(v).size();
Store.java,Domain vDom = var.dom();,if (var != null ) Domain vDom = var.dom();
Store.java,Set<String> ids = variablesHashMap.keySet();,if (variablesHashMap != null ) Set<String> ids = variablesHashMap.keySet();
Store.java,Domain d = variablesHashMap.get(s).dom();,if (variablesHashMap != null ) Domain d = variablesHashMap.get(s).dom();
XMLSaveSupport.java,SAXTransformerFactory tf = (SAXTransformerFactory) SAXTransformerFactory.newInstance();,if (SAXTransformerFactory != null ) SAXTransformerFactory tf = (SAXTransformerFactory) SAXTransformerFactory.newInstance();
XMLSaveSupport.java,TransformerHandler hd = tf.newTransformerHandler();,if (tf != null ) TransformerHandler hd = tf.newTransformerHandler();
XMLSaveSupport.java,Transformer serializer = hd.getTransformer();,if (hd != null ) Transformer serializer = hd.getTransformer();
XMLSaveSupport.java,Object[] sortedNames = store.variablesHashMap.keySet().toArray();,if (store != null ) Object[] sortedNames = store.variablesHashMap.keySet().toArray();
XMLSaveSupport.java,sortedNames = constraints.keySet().toArray();,if (constraints != null ) sortedNames = constraints.keySet().toArray();
XMLSaveSupport.java,Class c = object.getClass();,if (object != null ) Class c = object.getClass();
XMLSaveSupport.java,String characters = value.toString();,if (value != null ) String characters = value.toString();
XMLSaveSupport.java,Iterator iterator = collection.iterator();,if (collection != null ) Iterator iterator = collection.iterator();
XMLSaveSupport.java,Object ithObject = iterator.next();,if (iterator != null ) Object ithObject = iterator.next();
CPvizGardner.java,Thread tread = java.lang.Thread.currentThread();,if (java != null ) Thread tread = java.lang.Thread.currentThread();
CPvizGardner.java,long startCPU = b.getThreadCpuTime(tread.getId());,if (b != null ) long startCPU = b.getThreadCpuTime(tread.getId());
CPvizGardner.java,long startUser = b.getThreadUserTime(tread.getId());,if (b != null ) long startUser = b.getThreadUserTime(tread.getId());
CPvizGardner.java,boolean Result = store.consistency();,if (store != null ) boolean Result = store.consistency();
Cryptogram.java,int noWords = words.get(currentLine).size();,if (words != null ) int noWords = words.get(currentLine).size();
ExampleFD.java,long begin = System.currentTimeMillis();,if (System != null ) long begin = System.currentTimeMillis();
ExampleFD.java,long end = System.currentTimeMillis();,if (System != null ) long end = System.currentTimeMillis();
ExampleFD.java,long begin = System.currentTimeMillis();,if (System != null ) long begin = System.currentTimeMillis();
ExampleFD.java,long end = System.currentTimeMillis();,if (System != null ) long end = System.currentTimeMillis();
ExampleFD.java,nodes += search.getNodes();,if (search != null ) nodes += search.getNodes();
ExampleFD.java,decisions += search.getDecisions();,if (search != null ) decisions += search.getDecisions();
ExampleFD.java,wrongDecisions += search.getWrongDecisions();,if (search != null ) wrongDecisions += search.getWrongDecisions();
ExampleFD.java,backtracks += search.getBacktracks();,if (search != null ) backtracks += search.getBacktracks();
ExampleFD.java,long begin = System.currentTimeMillis();,if (System != null ) long begin = System.currentTimeMillis();
ExampleFD.java,long end = System.currentTimeMillis();,if (System != null ) long end = System.currentTimeMillis();
ExampleFD.java,long begin = System.currentTimeMillis();,if (System != null ) long begin = System.currentTimeMillis();
ExampleFD.java,long end = System.currentTimeMillis();,if (System != null ) long end = System.currentTimeMillis();
ExampleFD.java,long begin = System.currentTimeMillis();,if (System != null ) long begin = System.currentTimeMillis();
ExampleFD.java,long end = System.currentTimeMillis();,if (System != null ) long end = System.currentTimeMillis();
ExampleFD.java,long begin = System.currentTimeMillis();,if (System != null ) long begin = System.currentTimeMillis();
ExampleFD.java,long end = System.currentTimeMillis();,if (System != null ) long end = System.currentTimeMillis();
GeostExample.java,boolean result = store.consistency();,if (store != null ) boolean result = store.consistency();
MineSweeper.java,str = str.trim();,if (str != null ) str = str.trim();
NonTransitiveDice.java,boolean result = example.searchSpecial();,if (example != null ) boolean result = example.searchSpecial();
PerfectSquare.java,boolean result = store.consistency();,if (store != null ) boolean result = store.consistency();
PerfectSquare.java,xc = varsX[i].value();,if (varsX[i] != null ) xc = varsX[i].value();
PerfectSquare.java,yc = varsY[i].value();    // slot y coordinate,if (coordinate != null ) yc = varsY[i].value();    // slot y coordinate
PerfectSquare.java,sizex = xl[bnr].value(); // x size of block,if (block != null ) sizex = xl[bnr].value(); // x size of block
PerfectSquare.java,sizey = yl[bnr].value(); // y size of block,if (block != null ) sizey = yl[bnr].value(); // y size of block
CarSequencing.java,int value = enumer.nextElement();,if (enumer != null ) int value = enumer.nextElement();
CarSequencing.java,str = str.trim();,if (str != null ) str = str.trim();
CrossWord.java,str = str.trim();,if (str != null ) str = str.trim();
FilterBenchmark.java,result = store.consistency();,if (store != null ) result = store.consistency();
FilterBenchmark.java,result = store.consistency();,if (store != null ) result = store.consistency();
FilterBenchmark.java,result = store.consistency();,if (store != null ) result = store.consistency();
FilterBenchmark.java,result = store.consistency();,if (store != null ) result = store.consistency();
FilterBenchmark.java,result = store.consistency();,if (store != null ) result = store.consistency();
FilterBenchmark.java,result = store.consistency();,if (store != null ) result = store.consistency();
FilterBenchmark.java,result = store.consistency();,if (store != null ) result = store.consistency();
FilterBenchmark.java,result = store.consistency();,if (store != null ) result = store.consistency();
FilterBenchmark.java,int[] delays = filter.delays();,if (filter != null ) int[] delays = filter.delays();
FilterBenchmark.java,int[] lastOp = filter.lastOp();,if (filter != null ) int[] lastOp = filter.lastOp();
FilterBenchmark.java,D[i] = filter.addDel();,if (filter != null ) D[i] = filter.addDel();
FilterBenchmark.java,D[i] = filter.mulDel();,if (filter != null ) D[i] = filter.mulDel();
FilterBenchmark.java,Ns = filter.names();,if (filter != null ) Ns = filter.names();
FilterBenchmark.java,int[] delays = filter.delays();,if (filter != null ) int[] delays = filter.delays();
FilterBenchmark.java,int[] lastOp = filter.lastOp();,if (filter != null ) int[] lastOp = filter.lastOp();
FilterBenchmark.java,D[i] = filter.addDel();,if (filter != null ) D[i] = filter.addDel();
FilterBenchmark.java,D[i] = filter.mulDel();,if (filter != null ) D[i] = filter.mulDel();
FilterBenchmark.java,Ns = filter.names();,if (filter != null ) Ns = filter.names();
FilterBenchmark.java,int[] delays = filter.delays();,if (filter != null ) int[] delays = filter.delays();
FilterBenchmark.java,int[] lastOp = filter.lastOp();,if (filter != null ) int[] lastOp = filter.lastOp();
FilterBenchmark.java,D[i] = filter.addDel();,if (filter != null ) D[i] = filter.addDel();
FilterBenchmark.java,D[i] = filter.mulDel();,if (filter != null ) D[i] = filter.mulDel();
FilterBenchmark.java,Ns = filter.names();,if (filter != null ) Ns = filter.names();
FilterBenchmark.java,int[] delays = filter.delays();,if (filter != null ) int[] delays = filter.delays();
FilterBenchmark.java,int[] lastOp = filter.lastOp();,if (filter != null ) int[] lastOp = filter.lastOp();
FilterBenchmark.java,D[i] = filter.addDel();,if (filter != null ) D[i] = filter.addDel();
FilterBenchmark.java,D[i] = filter.mulDel();,if (filter != null ) D[i] = filter.mulDel();
FilterBenchmark.java,Ns = filter.namesPipeline();,if (filter != null ) Ns = filter.namesPipeline();
MUCA.java,String line = br.readLine();,if (br != null ) String line = br.readLine();
MUCA.java,line = br.readLine();,if (br != null ) line = br.readLine();
MUCA.java,line = br.readLine();,if (br != null ) line = br.readLine();
MUCA.java,in = Integer.valueOf(tk.nextToken());,if (Integer != null ) in = Integer.valueOf(tk.nextToken());
MUCA.java,out = Integer.valueOf(tk.nextToken());,if (Integer != null ) out = Integer.valueOf(tk.nextToken());
MUCA.java,line = br.readLine();,if (br != null ) line = br.readLine();
MUCA.java,line = br.readLine();,if (br != null ) line = br.readLine();
MUCA.java,line = br.readLine();,if (br != null ) line = br.readLine();
Nonogram.java,str = in.readLine();,if (in != null ) str = in.readLine();
QCP.java,long begin = System.currentTimeMillis();,if (System != null ) long begin = System.currentTimeMillis();
QCP.java,long end = System.currentTimeMillis();,if (System != null ) long end = System.currentTimeMillis();
FlatzincSGMPCS.java,Store store = fl.getStore();,if (fl != null ) Store store = fl.getStore();
FlatzincSGMPCS.java,int timeOut = fl.getOptions().getTimeOut();,if (fl != null ) int timeOut = fl.getOptions().getTimeOut();
FlatzincSGMPCS.java,IntVar cost = (IntVar)fl.getCost();,if ((IntVar)fl != null ) IntVar cost = (IntVar)fl.getCost();
FlatzincSGMPCS.java,boolean Result = label.search();,if (label != null ) boolean Result = label.search();
FlatzincSGMPCS.java,int[] sol = label.lastSolution();,if (label != null ) int[] sol = label.lastSolution();
FlatzincSolver.java,Store store = fl.getStore();,if (fl != null ) Store store = fl.getStore();
FlatzincSolver.java,DepthFirstSearch<Var> label = fl.getDFS();,if (fl != null ) DepthFirstSearch<Var> label = fl.getDFS();
FlatzincSolver.java,SelectChoicePoint<Var> select = fl.getSelectChoicePoint();,if (fl != null ) SelectChoicePoint<Var> select = fl.getSelectChoicePoint();
FlatzincSolver.java,Var cost = fl.getCost();,if (fl != null ) Var cost = fl.getCost();
FloatMinimize.java,Store store = fl.getStore();,if (fl != null ) Store store = fl.getStore();
FloatMinimize.java,boolean result = min.minimize();,if (min != null ) boolean result = min.minimize();
FloatMinimize.java,FloatInterval[] values = min.getFinalVarValues();,if (min != null ) FloatInterval[] values = min.getFinalVarValues();
Rosenbrock.java,boolean result = min.minimize();,if (min != null ) boolean result = min.minimize();
SixHumpCamelFunction.java,boolean result = min.minimize();,if (min != null ) boolean result = min.minimize();
Gardner.java,Thread tread = java.lang.Thread.currentThread();,if (java != null ) Thread tread = java.lang.Thread.currentThread();
Gardner.java,long startCPU = b.getThreadCpuTime(tread.getId());,if (b != null ) long startCPU = b.getThreadCpuTime(tread.getId());
Gardner.java,long startUser = b.getThreadUserTime(tread.getId());,if (b != null ) long startUser = b.getThreadUserTime(tread.getId());
Gardner.java,boolean result = store.consistency();,if (store != null ) boolean result = store.consistency();
SocialGolfer.java,Thread tread = java.lang.Thread.currentThread();,if (java != null ) Thread tread = java.lang.Thread.currentThread();
SocialGolfer.java,long startCPU = b.getThreadCpuTime(tread.getId());,if (b != null ) long startCPU = b.getThreadCpuTime(tread.getId());
SocialGolfer.java,long startUser = b.getThreadUserTime(tread.getId());,if (b != null ) long startUser = b.getThreadUserTime(tread.getId());
SocialGolfer.java,boolean result = store.consistency();,if (store != null ) boolean result = store.consistency();
Steiner.java,boolean result = store.consistency();,if (store != null ) boolean result = store.consistency();
AbsPeqR.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
CosPeqR.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
CosPeqR.java,min = normP.min();,if (normP != null ) min = normP.min();
CosPeqR.java,max = normP.max();,if (normP != null ) max = normP.max();
CosPeqR_decomposed.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
CosPeqR_decomposed.java,sat = sat && c.satisfied();,if (c != null ) sat = sat && c.satisfied();
ElementFloat.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
ElementFloat.java,IntDomain indexDom = index.dom().cloneLight();,if (index != null ) IntDomain indexDom = index.dom().cloneLight();
ElementFloat.java,double v = value.min();,if (value != null ) double v = value.min();
EquationSystem.java,FloatInterval[] xs = newton.solve();,if (newton != null ) FloatInterval[] xs = newton.solve();
ExpPeqR.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
IntervalGaussSeidel.java,double vMin = Math.abs(v.min());,if (Math != null ) double vMin = Math.abs(v.min());
IntervalGaussSeidel.java,double vMax = Math.abs(v.max());,if (Math != null ) double vMax = Math.abs(v.max());
IntervalGaussSeidel.java,double vMin = Math.abs(v.min());,if (Math != null ) double vMin = Math.abs(v.min());
IntervalGaussSeidel.java,double vMax = Math.abs(v.max());,if (Math != null ) double vMax = Math.abs(v.max());
Max.java,double maxMax = max.max();,if (max != null ) double maxMax = max.max();
Max.java,vDom = var.dom();,if (var != null ) vDom = var.dom();
Max.java,boolean sat = max.singleton();,if (max != null ) boolean sat = max.singleton();
Max.java,double MAX = max.min();,if (max != null ) double MAX = max.min();
Min.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
Min.java,double minMin = min.min();,if (min != null ) double minMin = min.min();
Min.java,vDom = var.dom();,if (var != null ) vDom = var.dom();
Min.java,double minValue = min.max();,if (min != null ) double minValue = min.max();
MultivariateIntervalNewton.java,FloatInterval[] v = igs.solve();,if (igs != null ) FloatInterval[] v = igs.solve();
PeqC.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
PeqQ.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
PgtC.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
PgtQ.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
PgteqC.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
PgteqQ.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
PltC.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
PltQ.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
PlteqC.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
PlteqQ.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
PmulQeqR.java,pMin = Math.sqrt(r.min());,if (Math != null ) pMin = Math.sqrt(r.min());
PmulQeqR.java,pMax = Math.sqrt(r.max());,if (Math != null ) pMax = Math.sqrt(r.max());
PneqC.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
PneqQ.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
PplusCeqR.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
PplusQeqR.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
SinPeqR.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
SinPeqR.java,min = normP.min();,if (normP != null ) min = normP.min();
SinPeqR.java,max = normP.max();,if (normP != null ) max = normP.max();
TanPeqR.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
TanPeqR.java,min = normP.min();,if (normP != null ) min = normP.min();
TanPeqR.java,max = normP.max();,if (normP != null ) max = normP.max();
XeqP.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
BNode.java,double lb = node.lb();,if (node != null ) double lb = node.lb();
BNode.java,double ub = node.ub();,if (node != null ) double ub = node.ub();
Linear.java,FloatVar v = variableQueue.removeFirst();,if (variableQueue != null ) FloatVar v = variableQueue.removeFirst();
Linear.java,FloatVar v = fdvs.removeFirst();,if (fdvs != null ) FloatVar v = fdvs.removeFirst();
VarWeightNode.java,double min = mul.min();,if (mul != null ) double min = mul.min();
VarWeightNode.java,double max = mul.max();,if (mul != null ) double max = mul.max();
VarWeightNode.java,double min = mul.min();,if (mul != null ) double min = mul.min();
VarWeightNode.java,double max = mul.max();,if (mul != null ) double max = mul.max();
FloatDomain.java,FloatIntervalEnumeration enumer = domain.floatIntervalEnumeration();,if (domain != null ) FloatIntervalEnumeration enumer = domain.floatIntervalEnumeration();
FloatDomain.java,FloatIntervalEnumeration enumer = domain.floatIntervalEnumeration();,if (domain != null ) FloatIntervalEnumeration enumer = domain.floatIntervalEnumeration();
FloatDomain.java,FloatInterval next = enumer.nextElement();,if (enumer != null ) FloatInterval next = enumer.nextElement();
FloatDomain.java,FloatIntervalEnumeration enumer = domain.floatIntervalEnumeration();,if (domain != null ) FloatIntervalEnumeration enumer = domain.floatIntervalEnumeration();
FloatDomain.java,FloatInterval next = enumer.nextElement();,if (enumer != null ) FloatInterval next = enumer.nextElement();
FloatDomain.java,FloatIntervalEnumeration enumer = domain.floatIntervalEnumeration();,if (domain != null ) FloatIntervalEnumeration enumer = domain.floatIntervalEnumeration();
FloatDomain.java,FloatInterval first = enumer.nextElement();,if (enumer != null ) FloatInterval first = enumer.nextElement();
FloatDomain.java,FloatInterval next = enumer.nextElement();,if (enumer != null ) FloatInterval next = enumer.nextElement();
FloatDomain.java,FloatDomain result = this.cloneLight();,if (this != null ) FloatDomain result = this.cloneLight();
FloatDomain.java,FloatIntervalEnumeration enumer = domain.floatIntervalEnumeration();,if (domain != null ) FloatIntervalEnumeration enumer = domain.floatIntervalEnumeration();
FloatDomain.java,FloatInterval next = enumer.nextElement();,if (enumer != null ) FloatInterval next = enumer.nextElement();
FloatDomain.java,FloatDomain result = this.cloneLight();,if (this != null ) FloatDomain result = this.cloneLight();
FloatDomain.java,FloatIntervalEnumeration enumer = domain.floatIntervalEnumeration();,if (domain != null ) FloatIntervalEnumeration enumer = domain.floatIntervalEnumeration();
FloatDomain.java,FloatInterval next = enumer.nextElement();,if (enumer != null ) FloatInterval next = enumer.nextElement();
FloatDomain.java,ValueEnumeration thisEnumer = this.valueEnumeration();,if (this != null ) ValueEnumeration thisEnumer = this.valueEnumeration();
FloatDomain.java,ValueEnumeration paramEnumer = domain.valueEnumeration();,if (domain != null ) ValueEnumeration paramEnumer = domain.valueEnumeration();
FloatDomain.java,i = thisEnumer.nextElement();,if (thisEnumer != null ) i = thisEnumer.nextElement();
FloatDomain.java,j = paramEnumer.nextElement();,if (paramEnumer != null ) j = paramEnumer.nextElement();
FloatDomain.java,FloatDomain result = this.cloneLight();,if (this != null ) FloatDomain result = this.cloneLight();
FloatDomain.java,FloatDomain result = this.cloneLight();,if (this != null ) FloatDomain result = this.cloneLight();
FloatDomain.java,ValueEnumeration enumer = this.valueEnumeration();,if (this != null ) ValueEnumeration enumer = this.valueEnumeration();
FloatIntervalDomain.java,object.size = intervals.size();,if (intervals != null ) object.size = intervals.size();
FloatIntervalDomain.java,FloatDomain result = intervalDomain.cloneLight();,if (intervalDomain != null ) FloatDomain result = intervalDomain.cloneLight();
FloatIntervalDomain.java,FloatIntervalDomain result = this.cloneLight();,if (this != null ) FloatIntervalDomain result = this.cloneLight();
FloatIntervalDomain.java,FloatIntervalDomain result = this.cloneLight();,if (this != null ) FloatIntervalDomain result = this.cloneLight();
FloatIntervalDomain.java,FloatIntervalDomain result = this.cloneLight();,if (this != null ) FloatIntervalDomain result = this.cloneLight();
LargestMaxFloat.java,double right = var.dom().max();,if (var != null ) double right = var.dom().max();
LargestMaxFloat.java,double left = leftVar.dom().max();,if (leftVar != null ) double left = leftVar.dom().max();
LargestMaxFloat.java,double right = rightVar.dom().max();,if (rightVar != null ) double right = rightVar.dom().max();
LargestMinFloat.java,double right = var.dom().min();,if (var != null ) double right = var.dom().min();
LargestMinFloat.java,double left = leftVar.dom().min();,if (leftVar != null ) double left = leftVar.dom().min();
LargestMinFloat.java,double right = rightVar.dom().min();,if (rightVar != null ) double right = rightVar.dom().min();
MaxRegretFloat.java,double rmin = var.min();,if (var != null ) double rmin = var.min();
MaxRegretFloat.java,double lmin = left.min();,if (left != null ) double lmin = left.min();
MaxRegretFloat.java,double rmin = right.min();,if (right != null ) double rmin = right.min();
Optimize.java,boolean result = store.consistency();,if (store != null ) boolean result = store.consistency();
Optimize.java,costValue = cost.max();,if (cost != null ) costValue = cost.max();
SmallestMaxFloat.java,double right = var.dom().max();,if (var != null ) double right = var.dom().max();
SmallestMaxFloat.java,double left = leftVar.dom().max();,if (leftVar != null ) double left = leftVar.dom().max();
SmallestMaxFloat.java,double right = rightVar.dom().max();,if (rightVar != null ) double right = rightVar.dom().max();
SmallestMinFloat.java,double right = var.dom().min();,if (var != null ) double right = var.dom().min();
SmallestMinFloat.java,double left = leftVar.dom().min();,if (leftVar != null ) double left = leftVar.dom().min();
SmallestMinFloat.java,double right = rightVar.dom().min();,if (rightVar != null ) double right = rightVar.dom().min();
SplitSelectFloat.java,int i = currentIndex.value();,if (currentIndex != null ) int i = currentIndex.value();
ASTPrint.java,int count = node.jjtGetNumChildren();,if (node != null ) int count = node.jjtGetNumChildren();
ASTVariableExpr.java,s = arrAccess.toString();,if (arrAccess != null ) s = arrAccess.toString();
Constraints.java,this.debug = opt.debug();,if (opt != null ) this.debug = opt.debug();
Constraints.java,int n = astTree.jjtGetNumChildren();,if (astTree != null ) int n = astTree.jjtGetNumChildren();
Constraints.java,int k = node.jjtGetNumChildren();,if (node != null ) int k = node.jjtGetNumChildren();
Constraints.java,int numberChildren = constraintWithAnnotations.jjtGetNumChildren();,if (constraintWithAnnotations != null ) int numberChildren = constraintWithAnnotations.jjtGetNumChildren();
FlatzincLoader.java,parser = new Parser(opt.getFile());,if (Parser(opt != null ) parser = new Parser(opt.getFile());
Fz2jacop.java,Thread tread = java.lang.Thread.currentThread();,if (java != null ) Thread tread = java.lang.Thread.currentThread();
Fz2jacop.java,long startCPU = b.getThreadCpuTime(tread.getId());,if (b != null ) long startCPU = b.getThreadCpuTime(tread.getId());
Fz2jacop.java,Parser parser = new Parser(opt.getFile());,if (Parser(opt != null ) Parser parser = new Parser(opt.getFile());
Options.java,precision = FloatDomain.precision();,if (FloatDomain != null ) precision = FloatDomain.precision();
SearchItem.java,int count = ann.jjtGetNumChildren();,if (ann != null ) int count = ann.jjtGetNumChildren();
SearchItem.java,int count = node.jjtGetNumChildren();,if (node != null ) int count = node.jjtGetNumChildren();
SearchItem.java,int count = node.jjtGetNumChildren();,if (node != null ) int count = node.jjtGetNumChildren();
SearchItem.java,int count = node.jjtGetNumChildren();,if (node != null ) int count = node.jjtGetNumChildren();
SearchItem.java,int count = node.jjtGetNumChildren();,if (node != null ) int count = node.jjtGetNumChildren();
Solve.java,int n = astTree.jjtGetNumChildren();,if (astTree != null ) int n = astTree.jjtGetNumChildren();
Solve.java,initNumberConstraints = store.numberConstraints();,if (store != null ) initNumberConstraints = store.numberConstraints();
Solve.java,int count = node.jjtGetNumChildren();,if (node != null ) int count = node.jjtGetNumChildren();
Solve.java,solveKind = getKind(kind.getKind());,if (getKind(kind != null ) solveKind = getKind(kind.getKind());
Solve.java,solveKind = getKind(kind.getKind());,if (getKind(kind != null ) solveKind = getKind(kind.getKind());
Solve.java,solveKind = getKind(kind.getKind());,if (getKind(kind != null ) solveKind = getKind(kind.getKind());
Solve.java,solveKind = getKind(kind.getKind());,if (getKind(kind != null ) solveKind = getKind(kind.getKind());
Solve.java,solveKind = getKind(kind.getKind());,if (getKind(kind != null ) solveKind = getKind(kind.getKind());
Solve.java,int to = options.getTimeOut();,if (options != null ) int to = options.getTimeOut();
Solve.java,int to = options.getTimeOut();,if (options != null ) int to = options.getTimeOut();
Solve.java,int to = options.getTimeOut();,if (options != null ) int to = options.getTimeOut();
Solve.java,int to = options.getTimeOut();,if (options != null ) int to = options.getTimeOut();
Solve.java,tread = java.lang.Thread.currentThread();,if (java != null ) tread = java.lang.Thread.currentThread();
Solve.java,startCPU = b.getThreadCpuTime(tread.getId());,if (b != null ) startCPU = b.getThreadCpuTime(tread.getId());
Solve.java,nodes = label.getNodes();,if (label != null ) nodes = label.getNodes();
Solve.java,decisions = label.getDecisions();,if (label != null ) decisions = label.getDecisions();
Solve.java,wrong = label.getWrongDecisions();,if (label != null ) wrong = label.getWrongDecisions();
Solve.java,backtracks = label.getBacktracks();,if (label != null ) backtracks = label.getBacktracks();
Solve.java,depth = label.getMaximumDepth();,if (label != null ) depth = label.getMaximumDepth();
Solve.java,solutions = label.getSolutionListener().solutionsNo();,if (label != null ) solutions = label.getSolutionListener().solutionsNo();
Solve.java,solutions = l.getSolutionListener().solutionsNo();,if (l != null ) solutions = l.getSolutionListener().solutionsNo();
Solve.java,int to = options.getTimeOut();,if (options != null ) int to = options.getTimeOut();
Solve.java,int to = options.getTimeOut();,if (options != null ) int to = options.getTimeOut();
Solve.java,int to = options.getTimeOut();,if (options != null ) int to = options.getTimeOut();
Solve.java,int to = options.getTimeOut();,if (options != null ) int to = options.getTimeOut();
Solve.java,tread = java.lang.Thread.currentThread();,if (java != null ) tread = java.lang.Thread.currentThread();
Solve.java,startCPU = b.getThreadCpuTime(tread.getId());,if (b != null ) startCPU = b.getThreadCpuTime(tread.getId());
Solve.java,int to = options.getTimeOut();,if (options != null ) int to = options.getTimeOut();
Solve.java,int ns = options.getNumberSolutions();,if (options != null ) int ns = options.getNumberSolutions();
Solve.java,nodes += label.getNodes();,if (label != null ) nodes += label.getNodes();
Solve.java,decisions += label.getDecisions();,if (label != null ) decisions += label.getDecisions();
Solve.java,wrong += label.getWrongDecisions();,if (label != null ) wrong += label.getWrongDecisions();
Solve.java,backtracks += label.getBacktracks();,if (label != null ) backtracks += label.getBacktracks();
Solve.java,depth += label.getMaximumDepth();,if (label != null ) depth += label.getMaximumDepth();
Solve.java,solutions = label.getSolutionListener().solutionsNo();,if (label != null ) solutions = label.getSolutionListener().solutionsNo();
Solve.java,setVar += v.dom().toString();,if (v != null ) setVar += v.dom().toString();
Solve.java,IntVar cost = dictionary.getVariable(node.getIdent());,if (dictionary != null ) IntVar cost = dictionary.getVariable(node.getIdent());
Solve.java,Integer costInt = dictionary.checkInt(node.getIdent());,if (dictionary != null ) Integer costInt = dictionary.checkInt(node.getIdent());
Solve.java,IntVar[] a = dictionary.getVariableArray(node.getIdent());,if (dictionary != null ) IntVar[] a = dictionary.getVariableArray(node.getIdent());
Solve.java,int[] costInt = dictionary.getIntArray(node.getIdent());,if (dictionary != null ) int[] costInt = dictionary.getIntArray(node.getIdent());
Solve.java,FloatVar cost = dictionary.getFloatVariable(node.getIdent());,if (dictionary != null ) FloatVar cost = dictionary.getFloatVariable(node.getIdent());
Solve.java,Double costFloat = dictionary.checkFloat(node.getIdent());,if (dictionary != null ) Double costFloat = dictionary.checkFloat(node.getIdent());
Solve.java,FloatVar[] a = dictionary.getVariableFloatArray(node.getIdent());,if (dictionary != null ) FloatVar[] a = dictionary.getVariableFloatArray(node.getIdent());
Solve.java,double[] costFloat = dictionary.getFloatArray(node.getIdent());,if (dictionary != null ) double[] costFloat = dictionary.getFloatArray(node.getIdent());
VariablesParameters.java,int count = node.jjtGetNumChildren();,if (node != null ) int count = node.jjtGetNumChildren();
VariablesParameters.java,int count = node.jjtGetNumChildren();,if (node != null ) int count = node.jjtGetNumChildren();
VariablesParameters.java,int no = child.jjtGetNumChildren();,if (child != null ) int no = child.jjtGetNumChildren();
VariablesParameters.java,int number = grandchild.jjtGetNumChildren();,if (grandchild != null ) int number = grandchild.jjtGetNumChildren();
VariablesParameters.java,int numberSL = arrayLiteral.jjtGetNumChildren();,if (arrayLiteral != null ) int numberSL = arrayLiteral.jjtGetNumChildren();
VariablesParameters.java,int count = child.jjtGetNumChildren();,if (child != null ) int count = child.jjtGetNumChildren();
VariablesParameters.java,int count = child.jjtGetNumChildren();,if (child != null ) int count = child.jjtGetNumChildren();
VariablesParameters.java,int count = child.jjtGetNumChildren();,if (child != null ) int count = child.jjtGetNumChildren();
VariablesParameters.java,int count = child.jjtGetNumChildren();,if (child != null ) int count = child.jjtGetNumChildren();
VariablesParameters.java,int count = child.jjtGetNumChildren();,if (child != null ) int count = child.jjtGetNumChildren();
VariablesParameters.java,int count = child.jjtGetNumChildren();,if (child != null ) int count = child.jjtGetNumChildren();
VariablesParameters.java,int count = child.jjtGetNumChildren();,if (child != null ) int count = child.jjtGetNumChildren();
GlobalConstraints.java,min = r[i].min();,if (r[i] != null ) min = r[i].min();
GlobalConstraints.java,nextMin = r[i].min();,if (r[i] != null ) nextMin = r[i].min();
Support.java,this.debug = Options.debug();,if (Options != null ) this.debug = Options.debug();
Support.java,int[] intTable = dictionary.getIntArray(node.getIdent());,if (dictionary != null ) int[] intTable = dictionary.getIntArray(node.getIdent());
Support.java,int count = node.jjtGetNumChildren();,if (node != null ) int count = node.jjtGetNumChildren();
Support.java,int val = node.getInt();,if (node != null ) int val = node.getInt();
Support.java,int val = node.getInt();,if (node != null ) int val = node.getInt();
Support.java,int bInt = dictionary.getInt(node.getIdent());,if (dictionary != null ) int bInt = dictionary.getInt(node.getIdent());
Support.java,double val = node.getFloat();,if (node != null ) double val = node.getFloat();
Support.java,double bFloat = dictionary.getFloat(node.getIdent());,if (dictionary != null ) double bFloat = dictionary.getFloat(node.getIdent());
Support.java,int count = child.jjtGetNumChildren();,if (child != null ) int count = child.jjtGetNumChildren();
Support.java,double[] floatTable = dictionary.getFloatArray(node.getIdent());,if (dictionary != null ) double[] floatTable = dictionary.getFloatArray(node.getIdent());
Support.java,int count = node.jjtGetNumChildren();,if (node != null ) int count = node.jjtGetNumChildren();
Support.java,int count = node.jjtGetNumChildren();,if (node != null ) int count = node.jjtGetNumChildren();
Support.java,int count = node.jjtGetNumChildren();,if (node != null ) int count = node.jjtGetNumChildren();
Support.java,int count = node.jjtGetNumChildren();,if (node != null ) int count = node.jjtGetNumChildren();
Support.java,int count = child.jjtGetNumChildren();,if (child != null ) int count = child.jjtGetNumChildren();
Support.java,int l = varSet.size();,if (varSet != null ) int l = varSet.size();
Support.java,Set<IntVar> vs = dictionary.aliasTable.keySet();,if (dictionary != null ) Set<IntVar> vs = dictionary.aliasTable.keySet();
Config.java,public long seed = System.currentTimeMillis();,if (System != null ) public long seed = System.currentTimeMillis();
Core.java,int[] newClause = clause.toArray();,if (clause != null ) int[] newClause = clause.toArray();
Core.java,int literalToPropagate = toPropagate.pop();,if (toPropagate != null ) int literalToPropagate = toPropagate.pop();
RunSolver.java,Config config = Config.defaultConfig();,if (Config != null ) Config config = Config.defaultConfig();
Trail.java,int var = assertionStack.peek();,if (assertionStack != null ) int var = assertionStack.peek();
Trail.java,int n = assertionStack.size();,if (assertionStack != null ) int n = assertionStack.size();
DatabasesStore.java,sum += databases[i].size();,if (databases[i] != null ) sum += databases[i].size();
DatabasesStore.java,int noOfVariables = core.getMaxVariable();,if (core != null ) int noOfVariables = core.getMaxVariable();
DatabasesStore.java,noOfClauses += databases[i].size();,if (databases[i] != null ) noOfClauses += databases[i].size();
MapClause.java,int[] answer = pool.getNew(literals.size());,if (pool != null ) int[] answer = pool.getNew(literals.size());
MapClause.java,assert array.length == literals.size();,if (literals != null ) assert array.length == literals.size();
MapClause.java,it = literals.keySet().iterator();,if (literals != null ) it = literals.keySet().iterator();
MapClause.java,int e = it.next();,if (it != null ) int e = it.next();
DebugModule.java,int numOfSetVar = core.trail.size();,if (core != null ) int numOfSetVar = core.trail.size();
HeuristicAssertionModule.java,int var = activity.getLiteralToAssert();,if (activity != null ) int var = activity.getLiteralToAssert();
HeuristicAssertionModule.java,int maxVariable = core.getMaxVariable();,if (core != null ) int maxVariable = core.getMaxVariable();
HeuristicForgetModule.java,Iterator<Integer> clauseIterator = learntClauses[lbd].iterator();,if (learntClauses[lbd] != null ) Iterator<Integer> clauseIterator = learntClauses[lbd].iterator();
HeuristicForgetModule.java,int clauseId = clauseIterator.next();,if (clauseIterator != null ) int clauseId = clauseIterator.next();
HeuristicForgetModule.java,answer += learntClauses[i].size();,if (learntClauses[i] != null ) answer += learntClauses[i].size();
SearchModule.java,int bjLevel = core.getLevelToBackjump();,if (core != null ) int bjLevel = core.getLevelToBackjump();
SearchModule.java,int nextLiteral = assertionH.findNextVar();,if (assertionH != null ) int nextLiteral = assertionH.findNextVar();
CnfParser.java,c = stream.read();,if (stream != null ) c = stream.read();
CnfParser.java,c = stream.read();,if (stream != null ) c = stream.read();
CnfParser.java,c = stream.read();,if (stream != null ) c = stream.read();
CnfParser.java,c = stream.read();,if (stream != null ) c = stream.read();
CnfParser.java,c = stream.read();,if (stream != null ) c = stream.read();
CnfParser.java,c = stream.read();,if (stream != null ) c = stream.read();
CnfParser.java,c = stream.read();,if (stream != null ) c = stream.read();
CnfParser.java,c = stream.read();,if (stream != null ) c = stream.read();
CnfParser.java,c = stream.read();,if (stream != null ) c = stream.read();
CnfParser.java,c = stream.read();,if (stream != null ) c = stream.read();
CnfParser.java,c = stream.read();,if (stream != null ) c = stream.read();
SatChangesListener.java,countPos = intVarsToUpdate.cardinality();,if (intVarsToUpdate != null ) countPos = intVarsToUpdate.cardinality();
SatWrapper.java,int[] clause = modelClausesToAdd.pop();,if (modelClausesToAdd != null ) int[] clause = modelClausesToAdd.pop();
SatWrapper.java,int literal = toAssertLiterals.pop();,if (toAssertLiterals != null ) int literal = toAssertLiterals.pop();
SatWrapper.java,int lower = v.domain.min();,if (v != null ) int lower = v.domain.min();
SatWrapper.java,int upper = v.domain.max();,if (v != null ) int upper = v.domain.max();
SatWrapper.java,int lit = assertionModule.findNextVar();,if (assertionModule != null ) int lit = assertionModule.findNextVar();
SatWrapper.java,int[] toAdd = pool.getNew(clause.size());,if (pool != null ) int[] toAdd = pool.getNew(clause.size());
SatWrapper.java,Config config = Config.defaultConfig();,if (Config != null ) Config config = Config.defaultConfig();
WrapperDebugModule.java,int numOfSetVar = core.trail.size();,if (core != null ) int numOfSetVar = core.trail.size();
DomainClausesDatabase.java,int clauseIndex = trail.size(); // TODO: faster?,if (faster? != null ) int clauseIndex = trail.size(); // TODO: faster?
DomainTranslator.java,int v = variable.domain.value();,if (variable != null ) int v = variable.domain.value();
LazyCpVarDomain.java,minNode.variable = wrapper.core.getFreshVariable();,if (wrapper != null ) minNode.variable = wrapper.core.getFreshVariable();
LazyCpVarDomain.java,maxNode.variable = wrapper.core.getFreshVariable();,if (wrapper != null ) maxNode.variable = wrapper.core.getFreshVariable();
DepthFirstSearch.java,T[] vars = solutionListener.getVariables();,if (solutionListener != null ) T[] vars = solutionListener.getVariables();
DepthFirstSearch.java,consistent = store.consistency();,if (store != null ) consistent = store.consistency();
DepthFirstSearch.java,val = heuristic.getChoiceValue();,if (heuristic != null ) val = heuristic.getChoiceValue();
DepthFirstSearch.java,childResult = childSearches[currentChildSearch].labeling();,if (childSearches[currentChildSearch] != null ) childResult = childSearches[currentChildSearch].labeling();
DepthFirstSearch.java,int childCostValue = childSearches[currentChildSearch].getCostValue();,if (childSearches[currentChildSearch] != null ) int childCostValue = childSearches[currentChildSearch].getCostValue();
DepthFirstSearch.java,double childCostValue = childSearches[currentChildSearch].getCostValueFloat();,if (childSearches[currentChildSearch] != null ) double childCostValue = childSearches[currentChildSearch].getCostValueFloat();
DepthFirstSearch.java,int childCostValue = childSearches[currentChildSearch].getCostValue();,if (childSearches[currentChildSearch] != null ) int childCostValue = childSearches[currentChildSearch].getCostValue();
DepthFirstSearch.java,double childCostValue = childSearches[currentChildSearch].getCostValueFloat();,if (childSearches[currentChildSearch] != null ) double childCostValue = childSearches[currentChildSearch].getCostValueFloat();
DepthFirstSearch.java,consistent = label(heuristic.getIndex());,if (label(heuristic != null ) consistent = label(heuristic.getIndex());
DepthFirstSearch.java,int solutionNoBeforeSearch = solutionListener.solutionsNo();,if (solutionListener != null ) int solutionNoBeforeSearch = solutionListener.solutionsNo();
DepthFirstSearch.java,boolean result = store.consistency();,if (store != null ) boolean result = store.consistency();
DepthFirstSearch.java,int solutionNoBeforeSearch = solutionListener.solutionsNo();,if (solutionListener != null ) int solutionNoBeforeSearch = solutionListener.solutionsNo();
DepthFirstSearch.java,boolean result = store.consistency();,if (store != null ) boolean result = store.consistency();
DepthFirstSearch.java,int solutionNoBeforeSearch = solutionListener.solutionsNo();,if (solutionListener != null ) int solutionNoBeforeSearch = solutionListener.solutionsNo();
DepthFirstSearch.java,boolean result = store.consistency();,if (store != null ) boolean result = store.consistency();
FailConstraintsStatistics.java,Integer k = failConstraintsIdStatistics.get(currentConstraint.id());,if (failConstraintsIdStatistics != null ) Integer k = failConstraintsIdStatistics.get(currentConstraint.id());
IndomainMedian.java,int position = var.getSize();,if (var != null ) int position = var.getSize();
IndomainMedian.java,IntDomain dom = var.dom();,if (var != null ) IntDomain dom = var.dom();
IndomainMedian.java,ValueEnumeration enumer = dom.valueEnumeration();,if (dom != null ) ValueEnumeration enumer = dom.valueEnumeration();
IndomainMedian.java,IntervalEnumeration enumer = dom.intervalEnumeration();,if (dom != null ) IntervalEnumeration enumer = dom.intervalEnumeration();
IndomainMedian.java,Interval next = enumer.nextElement();,if (enumer != null ) Interval next = enumer.nextElement();
IndomainMiddle.java,IntDomain dom = var.dom();,if (var != null ) IntDomain dom = var.dom();
IndomainRandom.java,int min = dom.min();,if (dom != null ) int min = dom.min();
IndomainRandom.java,int size = dom.getSize();,if (dom != null ) int size = dom.getSize();
IndomainRandom.java,int domainSize = dom.noIntervals();,if (dom != null ) int domainSize = dom.noIntervals();
LargestDomain.java,int right = var.getSize();,if (var != null ) int right = var.getSize();
LargestDomain.java,int left = leftVar.getSize();,if (leftVar != null ) int left = leftVar.getSize();
LargestDomain.java,int right = rightVar.getSize();,if (rightVar != null ) int right = rightVar.getSize();
LargestMax.java,int right = var.dom().max();,if (var != null ) int right = var.dom().max();
LargestMax.java,int left = leftVar.dom().max();,if (leftVar != null ) int left = leftVar.dom().max();
LargestMax.java,int right = rightVar.dom().max();,if (rightVar != null ) int right = rightVar.dom().max();
LargestMin.java,int right = var.dom().min();,if (var != null ) int right = var.dom().min();
LargestMin.java,int left = leftVar.dom().min();,if (leftVar != null ) int left = leftVar.dom().min();
LargestMin.java,int right = rightVar.dom().min();,if (rightVar != null ) int right = rightVar.dom().min();
MaxRegret.java,ValueEnumeration rEnum = var.domain.valueEnumeration();,if (var != null ) ValueEnumeration rEnum = var.domain.valueEnumeration();
MaxRegret.java,int rmin = rEnum.nextElement();,if (rEnum != null ) int rmin = rEnum.nextElement();
MaxRegret.java,rminNext = rEnum.nextElement();,if (rEnum != null ) rminNext = rEnum.nextElement();
MaxRegret.java,ValueEnumeration lEnum = left.domain.valueEnumeration();,if (left != null ) ValueEnumeration lEnum = left.domain.valueEnumeration();
MaxRegret.java,int lmin = lEnum.nextElement();,if (lEnum != null ) int lmin = lEnum.nextElement();
MaxRegret.java,lminNext = lEnum.nextElement();,if (lEnum != null ) lminNext = lEnum.nextElement();
MaxRegret.java,ValueEnumeration rEnum = right.domain.valueEnumeration();,if (right != null ) ValueEnumeration rEnum = right.domain.valueEnumeration();
MaxRegret.java,int rmin = rEnum.nextElement();,if (rEnum != null ) int rmin = rEnum.nextElement();
MaxRegret.java,rminNext = rEnum.nextElement();,if (rEnum != null ) rminNext = rEnum.nextElement();
MaxRegret.java,ValueEnumeration oEnum = o.domain.valueEnumeration();,if (o != null ) ValueEnumeration oEnum = o.domain.valueEnumeration();
MaxRegret.java,int omin = oEnum.nextElement();,if (oEnum != null ) int omin = oEnum.nextElement();
MaxRegret.java,ominNext = oEnum.nextElement();,if (oEnum != null ) ominNext = oEnum.nextElement();
MostConstrainedDynamic.java,int right = var.sizeConstraints();,if (var != null ) int right = var.sizeConstraints();
MostConstrainedDynamic.java,int left = leftVar.sizeConstraints();,if (leftVar != null ) int left = leftVar.sizeConstraints();
MostConstrainedDynamic.java,int right = rightVar.sizeConstraints();,if (rightVar != null ) int right = rightVar.sizeConstraints();
MostConstrainedStatic.java,int right = var.sizeConstraintsOriginal();,if (var != null ) int right = var.sizeConstraintsOriginal();
MostConstrainedStatic.java,int left = leftVar.sizeConstraintsOriginal();,if (leftVar != null ) int left = leftVar.sizeConstraintsOriginal();
MostConstrainedStatic.java,int right = rightVar.sizeConstraintsOriginal();,if (rightVar != null ) int right = rightVar.sizeConstraintsOriginal();
NoGoodsCollector.java,StringBuffer sb = new StringBuffer(noGoodsVariables.toString());,if (StringBuffer(noGoodsVariables != null ) StringBuffer sb = new StringBuffer(noGoodsVariables.toString());
Shaving.java,int last = shavable.size();,if (shavable != null ) int last = shavable.size();
Shaving.java,boolean result = store.consistency();,if (store != null ) boolean result = store.consistency();
Shaving.java,IntVar shaveVar = (T)g.getGuideVariable();,if ((T)g != null ) IntVar shaveVar = (T)g.getGuideVariable();
Shaving.java,boolean result = store.consistency();,if (store != null ) boolean result = store.consistency();
SimpleMatrixSelect.java,int finalIndex = searchVariables.size();,if (searchVariables != null ) int finalIndex = searchVariables.size();
SimpleSolutionListener.java,currentSolution[i] = vars[i].dom();,if (vars[i] != null ) currentSolution[i] = vars[i].dom();
SimpleSolutionListener.java,T current = itr.next();,if (itr != null ) T current = itr.next();
SimpleSolutionListener.java,boolean result = store.consistency();,if (store != null ) boolean result = store.consistency();
SmallestDomain.java,int right = var.getSize();,if (var != null ) int right = var.getSize();
SmallestDomain.java,int left = leftVar.getSize();,if (leftVar != null ) int left = leftVar.getSize();
SmallestDomain.java,int right = rightVar.getSize();,if (rightVar != null ) int right = rightVar.getSize();
SmallestMax.java,int right = var.dom().max();,if (var != null ) int right = var.dom().max();
SmallestMax.java,int left = leftVar.dom().max();,if (leftVar != null ) int left = leftVar.dom().max();
SmallestMax.java,int right = rightVar.dom().max();,if (rightVar != null ) int right = rightVar.dom().max();
SmallestMin.java,int right = var.dom().min();,if (var != null ) int right = var.dom().min();
SmallestMin.java,int left = leftVar.dom().min();,if (leftVar != null ) int left = leftVar.dom().min();
SmallestMin.java,int right = rightVar.dom().min();,if (rightVar != null ) int right = rightVar.dom().min();
SplitSelect.java,int value = super.getChoiceValue();,if (super != null ) int value = super.getChoiceValue();
TraceGenerator.java,ConsistencyListener current = search.getConsistencyListener();,if (search != null ) ConsistencyListener current = search.getConsistencyListener();
TraceGenerator.java,ExitChildListener<T> current = search.getExitChildListener();,if (search != null ) ExitChildListener<T> current = search.getExitChildListener();
TraceGenerator.java,ExitListener current = search.getExitListener();,if (search != null ) ExitListener current = search.getExitListener();
TraceGenerator.java,currentSearchNode.dom = selectedVar.dom().cloneLight();,if (selectedVar != null ) currentSearchNode.dom = selectedVar.dom().cloneLight();
TraceGenerator.java,selectedValue = select.getChoiceValue();,if (select != null ) selectedValue = select.getChoiceValue();
TraceGenerator.java,SearchNode sn =  searchStack.peek();,if (searchStack != null ) SearchNode sn =  searchStack.peek();
TraceGenerator.java,SearchNode sn =  searchStack.peek();,if (searchStack != null ) SearchNode sn =  searchStack.peek();
TraceGenerator.java,currentSearchNode = searchStack.pop();,if (searchStack != null ) currentSearchNode = searchStack.pop();
TraceGenerator.java,currentSearchNode = searchStack.pop();,if (searchStack != null ) currentSearchNode = searchStack.pop();
TraceGenerator.java,currentSearchNode = searchStack.pop();,if (searchStack != null ) currentSearchNode = searchStack.pop();
TraceGenerator.java,currentSearchNode = searchStack.pop();,if (searchStack != null ) currentSearchNode = searchStack.pop();
TraceGenerator.java,SAXTransformerFactory tf = (SAXTransformerFactory) SAXTransformerFactory.newInstance();,if (SAXTransformerFactory != null ) SAXTransformerFactory tf = (SAXTransformerFactory) SAXTransformerFactory.newInstance();
TraceGenerator.java,hdTree = tf.newTransformerHandler();,if (tf != null ) hdTree = tf.newTransformerHandler();
TraceGenerator.java,Transformer serializer = hdTree.getTransformer();,if (hdTree != null ) Transformer serializer = hdTree.getTransformer();
TraceGenerator.java,char[] comm = ourText.toCharArray();,if (ourText != null ) char[] comm = ourText.toCharArray();
TraceGenerator.java,SAXTransformerFactory tf = (SAXTransformerFactory) SAXTransformerFactory.newInstance();,if (SAXTransformerFactory != null ) SAXTransformerFactory tf = (SAXTransformerFactory) SAXTransformerFactory.newInstance();
TraceGenerator.java,hdVis = tf.newTransformerHandler();,if (tf != null ) hdVis = tf.newTransformerHandler();
TraceGenerator.java,Transformer serializer = hdVis.getTransformer();,if (hdVis != null ) Transformer serializer = hdVis.getTransformer();
TraceGenerator.java,char[] comm = ourText.toCharArray();,if (ourText != null ) char[] comm = ourText.toCharArray();
TraceGenerator.java,Interval next = enumer.nextElement();,if (enumer != null ) Interval next = enumer.nextElement();
TransformExtensional.java,searchResult &= !search.getSolutionListener().solutionLimitReached();,if (!search != null ) searchResult &= !search.getSolutionListener().solutionLimitReached();
TransformExtensional.java,IntVar[] vars = search.getSolutionListener().getVariables();,if (search != null ) IntVar[] vars = search.getSolutionListener().getVariables();
SGMPCSearch.java,searchStartTime = System.currentTimeMillis();,if (System != null ) searchStartTime = System.currentTimeMillis();
SGMPCSearch.java,long currentTime = System.currentTimeMillis();,if (System != null ) long currentTime = System.currentTimeMillis();
SGMPCSearch.java,solution = search.getSolution();,if (search != null ) solution = search.getSolution();
SGMPCSearch.java,searchCost = search.getCurrentCost();,if (search != null ) searchCost = search.getCurrentCost();
SGMPCSearch.java,solution = search.getSolution();,if (search != null ) solution = search.getSolution();
SGMPCSearch.java,searchCost = search.getCurrentCost();,if (search != null ) searchCost = search.getCurrentCost();
SGMPCSearch.java,long currentTime = System.currentTimeMillis();,if (System != null ) long currentTime = System.currentTimeMillis();
SimpleImprovementSearch.java,Domain[] domSolution = label.getSolution();,if (label != null ) Domain[] domSolution = label.getSolution();
SimpleImprovementSearch.java,Domain[] domSolution = label.getSolution();,if (label != null ) Domain[] domSolution = label.getSolution();
SimpleImprovementSearch.java,searchCost = cost.value();,if (cost != null ) searchCost = cost.value();
AdiffBeqC.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
AdiffBeqC.java,int aMinCard = a.domain.card().min();,if (a != null ) int aMinCard = a.domain.card().min();
AdiffBeqC.java,int max = b.domain.card().min();,if (b != null ) int max = b.domain.card().min();
AdisjointB.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
AdisjointB.java,int elementsReservedForB = b.domain.card().min();,if (b != null ) int elementsReservedForB = b.domain.card().min();
AdisjointB.java,elementsReservedForB -= b.domain.glb().getSize();,if (b != null ) elementsReservedForB -= b.domain.glb().getSize();
AdisjointB.java,int elementsReservedForA = a.domain.card().min();,if (a != null ) int elementsReservedForA = a.domain.card().min();
AdisjointB.java,elementsReservedForA -= a.domain.glb().getSize();,if (a != null ) elementsReservedForA -= a.domain.glb().getSize();
AeqB.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
AeqS.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
AeqS.java,this.sizeOfB = set.getSize();,if (set != null ) this.sizeOfB = set.getSize();
AinB.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
AinS.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
AintersectBeqC.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
AunionBeqC.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
CardA.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
CardAeqX.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
EinA.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
ElementSet.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
ElementSet.java,IntDomain newValueGLB = valueDom.lub().cloneLight();,if (valueDom != null ) IntDomain newValueGLB = valueDom.lub().cloneLight();
ElementSet.java,ValueEnumeration enumer = indexDom.valueEnumeration();,if (indexDom != null ) ValueEnumeration enumer = indexDom.valueEnumeration();
Lex.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
Lex.java,int minA = a.domain.lub().min();,if (a != null ) int minA = a.domain.lub().min();
Lex.java,int maxB = b.domain.lub().max();,if (b != null ) int maxB = b.domain.lub().max();
Lex.java,ValueEnumeration enumerGLBofB = b.domain.glb().valueEnumeration();,if (b != null ) ValueEnumeration enumerGLBofB = b.domain.glb().valueEnumeration();
Lex.java,ValueEnumeration enumerLUBofA = a.domain.lub().valueEnumeration();,if (a != null ) ValueEnumeration enumerLUBofA = a.domain.lub().valueEnumeration();
Lex.java,int nextElinGLBofB = enumerGLBofB.nextElement();,if (enumerGLBofB != null ) int nextElinGLBofB = enumerGLBofB.nextElement();
Lex.java,int nextElinLUBofA = enumerLUBofA.nextElement();,if (enumerLUBofA != null ) int nextElinLUBofA = enumerLUBofA.nextElement();
Lex.java,nextElinLUBofA = enumerLUBofA.nextElement();,if (enumerLUBofA != null ) nextElinLUBofA = enumerLUBofA.nextElement();
Lex.java,nextElinGLBofB = enumerGLBofB.nextElement();,if (enumerGLBofB != null ) nextElinGLBofB = enumerGLBofB.nextElement();
Lex.java,nextElinLUBofA = enumerLUBofA.nextElement();,if (enumerLUBofA != null ) nextElinLUBofA = enumerLUBofA.nextElement();
Lex.java,ValueEnumeration enumerGLBofA = a.domain.glb().valueEnumeration();,if (a != null ) ValueEnumeration enumerGLBofA = a.domain.glb().valueEnumeration();
Lex.java,ValueEnumeration enumerGLBofB = b.domain.glb().valueEnumeration();,if (b != null ) ValueEnumeration enumerGLBofB = b.domain.glb().valueEnumeration();
Lex.java,ValueEnumeration enumerLUBofA = a.domain.lub().valueEnumeration();,if (a != null ) ValueEnumeration enumerLUBofA = a.domain.lub().valueEnumeration();
Lex.java,int nextElinGLBofA = enumerGLBofA.nextElement();,if (enumerGLBofA != null ) int nextElinGLBofA = enumerGLBofA.nextElement();
Lex.java,int nextElinGLBofB = enumerGLBofB.nextElement();,if (enumerGLBofB != null ) int nextElinGLBofB = enumerGLBofB.nextElement();
Lex.java,int nextElinLUBofA = enumerLUBofA.nextElement();,if (enumerLUBofA != null ) int nextElinLUBofA = enumerLUBofA.nextElement();
Lex.java,nextElinLUBofA = enumerLUBofA.nextElement();,if (enumerLUBofA != null ) nextElinLUBofA = enumerLUBofA.nextElement();
Lex.java,nextElinLUBofA = enumerLUBofA.nextElement();,if (enumerLUBofA != null ) nextElinLUBofA = enumerLUBofA.nextElement();
Lex.java,nextElinLUBofA = enumerLUBofA.nextElement();,if (enumerLUBofA != null ) nextElinLUBofA = enumerLUBofA.nextElement();
Lex.java,nextElinGLBofA = enumerGLBofA.nextElement();,if (enumerGLBofA != null ) nextElinGLBofA = enumerGLBofA.nextElement();
Lex.java,nextElinGLBofB = enumerGLBofB.nextElement();,if (enumerGLBofB != null ) nextElinGLBofB = enumerGLBofB.nextElement();
Lex.java,nextElinLUBofA = enumerLUBofA.nextElement();,if (enumerLUBofA != null ) nextElinLUBofA = enumerLUBofA.nextElement();
Lex.java,nextElinLUBofA = enumerLUBofA.nextElement();,if (enumerLUBofA != null ) nextElinLUBofA = enumerLUBofA.nextElement();
Lex.java,nextElinGLBofB = b.domain.lub().max();,if (b != null ) nextElinGLBofB = b.domain.lub().max();
Lex.java,nextElinGLBofB = enumerGLBofB.nextElement();,if (enumerGLBofB != null ) nextElinGLBofB = enumerGLBofB.nextElement();
Lex.java,nextElinLUBofA = enumerLUBofA.nextElement();,if (enumerLUBofA != null ) nextElinLUBofA = enumerLUBofA.nextElement();
Lex.java,nextElinGLBofB = enumerGLBofB.nextElement();,if (enumerGLBofB != null ) nextElinGLBofB = enumerGLBofB.nextElement();
Lex.java,nextElinLUBofA = enumerLUBofA.nextElement();,if (enumerLUBofA != null ) nextElinLUBofA = enumerLUBofA.nextElement();
Lex.java,nextElinGLBofB = enumerGLBofB.nextElement();,if (enumerGLBofB != null ) nextElinGLBofB = enumerGLBofB.nextElement();
Lex.java,nextElinLUBofA = enumerLUBofA.nextElement();,if (enumerLUBofA != null ) nextElinLUBofA = enumerLUBofA.nextElement();
Match.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
Match.java,ValueEnumeration ve = a.domain.glb().valueEnumeration();,if (a != null ) ValueEnumeration ve = a.domain.glb().valueEnumeration();
Match.java,el = ve.nextElement();,if (ve != null ) el = ve.nextElement();
Match.java,ValueEnumeration ve = a.domain.lub().valueEnumeration();,if (a != null ) ValueEnumeration ve = a.domain.lub().valueEnumeration();
Match.java,el = ve.nextElement();,if (ve != null ) el = ve.nextElement();
Match.java,IntDomain glbA = a.domain.glb();,if (a != null ) IntDomain glbA = a.domain.glb();
Match.java,IntDomain lubA = a.domain.lub();,if (a != null ) IntDomain lubA = a.domain.lub();
Match.java,int sizeOfaGLB = glbA.getSize();,if (glbA != null ) int sizeOfaGLB = glbA.getSize();
Match.java,int sizeOfaLUB = lubA.getSize();,if (lubA != null ) int sizeOfaLUB = lubA.getSize();
Match.java,ValueEnumeration ve = a.domain.glb().valueEnumeration();,if (a != null ) ValueEnumeration ve = a.domain.glb().valueEnumeration();
SinA.java,numberId = idNumber.incrementAndGet();,if (idNumber != null ) numberId = idNumber.incrementAndGet();
SumWeightedSet.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
SumWeightedSet.java,ValueEnumeration enumer = a.domain.lub().valueEnumeration();,if (a != null ) ValueEnumeration enumer = a.domain.lub().valueEnumeration();
SumWeightedSet.java,IntDomain glbA = a.domain.glb();,if (a != null ) IntDomain glbA = a.domain.glb();
SumWeightedSet.java,IntDomain lubA = a.domain.lub();,if (a != null ) IntDomain lubA = a.domain.lub();
SumWeightedSet.java,ValueEnumeration enumer = glbA.valueEnumeration();,if (glbA != null ) ValueEnumeration enumer = glbA.valueEnumeration();
SumWeightedSet.java,glbSum += elementWeights.get(enumer.nextElement());,if (elementWeights != null ) glbSum += elementWeights.get(enumer.nextElement());
SumWeightedSet.java,enumer = potentialEl.valueEnumeration();,if (potentialEl != null ) enumer = potentialEl.valueEnumeration();
SumWeightedSet.java,enumer = potentialEl.valueEnumeration();,if (potentialEl != null ) enumer = potentialEl.valueEnumeration();
SumWeightedSet.java,el = enumer.nextElement();,if (enumer != null ) el = enumer.nextElement();
SumWeightedSet.java,enumer = potentialEl.valueEnumeration();,if (potentialEl != null ) enumer = potentialEl.valueEnumeration();
SumWeightedSet.java,el = enumer.nextElement();,if (enumer != null ) el = enumer.nextElement();
SumWeightedSet.java,enumer = potentialEl.valueEnumeration();,if (potentialEl != null ) enumer = potentialEl.valueEnumeration();
SumWeightedSet.java,el = enumer.nextElement();,if (enumer != null ) el = enumer.nextElement();
SumWeightedSet.java,ValueEnumeration enumer = a.domain.glb().valueEnumeration();,if (a != null ) ValueEnumeration enumer = a.domain.glb().valueEnumeration();
SumWeightedSet.java,sum += elementWeights.get(enumer.nextElement());,if (elementWeights != null ) sum += elementWeights.get(enumer.nextElement());
XeqA.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
XinA.java,this.numberId = idNumber.incrementAndGet();,if (idNumber != null ) this.numberId = idNumber.incrementAndGet();
BoundSetDomain.java,this.glb = glb.cloneLight();,if (glb != null ) this.glb = glb.cloneLight();
BoundSetDomain.java,this.lub = lub.cloneLight();,if (lub != null ) this.lub = lub.cloneLight();
BoundSetDomain.java,this.cardinality = cardinality.cloneLight();,if (cardinality != null ) this.cardinality = cardinality.cloneLight();
BoundSetDomain.java,this.glb = glb.cloneLight();,if (glb != null ) this.glb = glb.cloneLight();
BoundSetDomain.java,this.lub = lub.cloneLight();,if (lub != null ) this.lub = lub.cloneLight();
BoundSetDomain.java,lub = lub.union(domain.lub());,if (lub != null ) lub = lub.union(domain.lub());
BoundSetDomain.java,glb = glb.intersect(domain.glb());,if (glb != null ) glb = glb.intersect(domain.glb());
BoundSetDomain.java,IntDomain resultGLB = glb.cloneLight();,if (glb != null ) IntDomain resultGLB = glb.cloneLight();
BoundSetDomain.java,IntDomain resultLUB = lub.cloneLight();,if (lub != null ) IntDomain resultLUB = lub.cloneLight();
BoundSetDomain.java,this.glb = domain.glb();,if (domain != null ) this.glb = domain.glb();
BoundSetDomain.java,this.lub = domain.lub();,if (domain != null ) this.lub = domain.lub();
BoundSetDomain.java,SetDomain domain = this.cloneLight();,if (this != null ) SetDomain domain = this.cloneLight();
BoundSetDomain.java,IntDomain glbResult = glb.intersect(domain.glb());,if (glb != null ) IntDomain glbResult = glb.intersect(domain.glb());
BoundSetDomain.java,IntDomain lubResult = lub.union(domain.lub());,if (lub != null ) IntDomain lubResult = lub.union(domain.lub());
BoundSetDomain.java,result.lub = lub.cloneLight();,if (lub != null ) result.lub = lub.cloneLight();
BoundSetDomain.java,result.glb = glb.cloneLight();,if (glb != null ) result.glb = glb.cloneLight();
BoundSetDomain.java,result.glb = glb.cloneLight();,if (glb != null ) result.glb = glb.cloneLight();
BoundSetDomain.java,result.lub = lub.cloneLight();,if (lub != null ) result.lub = lub.cloneLight();
BoundSetDomain.java,result.lub = lub.cloneLight();,if (lub != null ) result.lub = lub.cloneLight();
BoundSetDomain.java,result.glb = glb.cloneLight();,if (glb != null ) result.glb = glb.cloneLight();
BoundSetDomain.java,IntDomain cardinality = var.domain.card();,if (var != null ) IntDomain cardinality = var.domain.card();
SetDomain.java,SetDomain result = this.cloneLight();,if (this != null ) SetDomain result = this.cloneLight();
SetDomain.java,SetDomain result = this.cloneLight();,if (this != null ) SetDomain result = this.cloneLight();
SetDomain.java,SetDomain result = this.cloneLight();,if (this != null ) SetDomain result = this.cloneLight();
SetDomain.java,SetDomain result = this.cloneLight();,if (this != null ) SetDomain result = this.cloneLight();
SetDomainValueEnumeration.java,min = dom.glb();,if (dom != null ) min = dom.glb();
SetDomainValueEnumeration.java,current = dom.glb();,if (dom != null ) current = dom.glb();
SetDomainValueEnumeration.java,max = dom.lub();,if (dom != null ) max = dom.lub();
SetDomainValueEnumeration.java,maxLevel = max.getSize() - min.getSize();,if (min != null ) maxLevel = max.getSize() - min.getSize();
SetDomainValueEnumeration.java,min = domain.glb();,if (domain != null ) min = domain.glb();
SetDomainValueEnumeration.java,current = domain.glb();,if (domain != null ) current = domain.glb();
SetDomainValueEnumeration.java,max = domain.lub();,if (domain != null ) max = domain.lub();
SetDomainValueEnumeration.java,maxLevel = max.getSize() - min.getSize();,if (min != null ) maxLevel = max.getSize() - min.getSize();
SetDomainValueEnumeration.java,IntDomain ret = this.min.cloneLight();,if (this != null ) IntDomain ret = this.min.cloneLight();
SetDomainValueEnumeration.java,v = ve.nextElement();,if (ve != null ) v = ve.nextElement();
IndomainSetRandom.java,int no = seed.nextInt(difference.getSize());,if (seed != null ) int no = seed.nextInt(difference.getSize());
MaxCardDiff.java,SetDomain dom = var.dom();,if (var != null ) SetDomain dom = var.dom();
MaxCardDiff.java,SetDomain leftDom = leftVar.dom();,if (leftVar != null ) SetDomain leftDom = leftVar.dom();
MaxCardDiff.java,SetDomain rightDom = rightVar.dom();,if (rightVar != null ) SetDomain rightDom = rightVar.dom();
MaxCardDiff.java,SetDomain dom = var.dom();,if (var != null ) SetDomain dom = var.dom();
MaxGlbCard.java,int left = leftVar.domain.glb().getSize();,if (leftVar != null ) int left = leftVar.domain.glb().getSize();
MaxGlbCard.java,int right = rightVar.domain.glb().getSize();,if (rightVar != null ) int right = rightVar.domain.glb().getSize();
MaxLubCard.java,SetDomain SD = (SetDomain) var.dom();,if (var != null ) SetDomain SD = (SetDomain) var.dom();
MaxLubCard.java,int right = SD.lub().getSize();,if (SD != null ) int right = SD.lub().getSize();
MaxLubCard.java,SetDomain leftSD = (SetDomain) leftVar.dom();,if (leftVar != null ) SetDomain leftSD = (SetDomain) leftVar.dom();
MaxLubCard.java,SetDomain rightSD = (SetDomain) rightVar.dom();,if (rightVar != null ) SetDomain rightSD = (SetDomain) rightVar.dom();
MaxLubCard.java,int left = leftSD.lub().getSize();,if (leftSD != null ) int left = leftSD.lub().getSize();
MaxLubCard.java,int right = rightSD.lub().getSize();,if (rightSD != null ) int right = rightSD.lub().getSize();
MaxLubCard.java,SetDomain SD = (SetDomain) var.dom();,if (var != null ) SetDomain SD = (SetDomain) var.dom();
MinCardDiff.java,SetDomain SD = (SetDomain) var.dom();,if (var != null ) SetDomain SD = (SetDomain) var.dom();
MinCardDiff.java,SetDomain leftSD = (SetDomain) leftVar.dom();,if (leftVar != null ) SetDomain leftSD = (SetDomain) leftVar.dom();
MinCardDiff.java,SetDomain rightSD = (SetDomain) rightVar.dom();,if (rightVar != null ) SetDomain rightSD = (SetDomain) rightVar.dom();
MinCardDiff.java,SetDomain SD = (SetDomain) var.dom();,if (var != null ) SetDomain SD = (SetDomain) var.dom();
MinGlbCard.java,SetDomain SD = var.dom();,if (var != null ) SetDomain SD = var.dom();
MinGlbCard.java,int right = SD.glb().getSize();,if (SD != null ) int right = SD.glb().getSize();
MinGlbCard.java,SetDomain leftSD = leftVar.dom();,if (leftVar != null ) SetDomain leftSD = leftVar.dom();
MinGlbCard.java,SetDomain rightSD = rightVar.dom();,if (rightVar != null ) SetDomain rightSD = rightVar.dom();
MinGlbCard.java,int left = leftSD.glb().getSize();,if (leftSD != null ) int left = leftSD.glb().getSize();
MinGlbCard.java,int right = rightSD.glb().getSize();,if (rightSD != null ) int right = rightSD.glb().getSize();
MinGlbCard.java,SetDomain SD = (SetDomain) var.dom();,if (var != null ) SetDomain SD = (SetDomain) var.dom();
MinLubCard.java,SetDomain SD = var.dom();,if (var != null ) SetDomain SD = var.dom();
MinLubCard.java,int right = SD.lub().getSize();,if (SD != null ) int right = SD.lub().getSize();
MinLubCard.java,SetDomain leftSD = (SetDomain) leftVar.dom();,if (leftVar != null ) SetDomain leftSD = (SetDomain) leftVar.dom();
MinLubCard.java,SetDomain rightSD = (SetDomain) rightVar.dom();,if (rightVar != null ) SetDomain rightSD = (SetDomain) rightVar.dom();
MinLubCard.java,int left = leftSD.lub().getSize();,if (leftSD != null ) int left = leftSD.lub().getSize();
MinLubCard.java,int right = rightSD.lub().getSize();,if (rightSD != null ) int right = rightSD.lub().getSize();
MinLubCard.java,SetDomain SD = (SetDomain) var.dom();,if (var != null ) SetDomain SD = (SetDomain) var.dom();
PrintSchedule.java,m = r[i].min();,if (r[i] != null ) m = r[i].min();
PrintSchedule.java,m = r[i].min();,if (r[i] != null ) m = r[i].min();
PrintSchedule.java,int sp = result.length();,if (result != null ) int sp = result.length();
IndexDomainView.java,for(ValueEnumeration enumer = var.domain.valueEnumeration(); enumer.hasMoreElements();) {,if ({ != null ) for(ValueEnumeration enumer = var.domain.valueEnumeration(); enumer.hasMoreElements();) {
IndexDomainView.java,for(ValueEnumeration enumer = var.domain.valueEnumeration(); enumer.hasMoreElements();) {,if ({ != null ) for(ValueEnumeration enumer = var.domain.valueEnumeration(); enumer.hasMoreElements();) {
IndexDomainView.java,int value = enumer.nextElement();,if (enumer != null ) int value = enumer.nextElement();
MDD.java,domainLimits[i] = vars[i].domain.getSize();,if (vars[i] != null ) domainLimits[i] = vars[i].domain.getSize();
MDD.java,domainLimits[i] = vars[i].domain.getSize();,if (vars[i] != null ) domainLimits[i] = vars[i].domain.getSize();
MDD.java,domainLimits[i] = vars[i].domain.getSize();,if (vars[i] != null ) domainLimits[i] = vars[i].domain.getSize();
MDD.java,range[shiftPosition] = firstEntry.getKey();,if (firstEntry != null ) range[shiftPosition] = firstEntry.getKey();
MDD.java,previousShift = firstEntry.getValue();,if (firstEntry != null ) previousShift = firstEntry.getValue();
FSM.java,int stateNumber = this.allStates.size();,if (this != null ) int stateNumber = this.allStates.size();
FSM.java,int stateNumber = this.allStates.size();,if (this != null ) int stateNumber = this.allStates.size();
FSM.java,int stateNumber = this.allStates.size();,if (this != null ) int stateNumber = this.allStates.size();
FSM.java,int nextElement = enumer.nextElement();,if (enumer != null ) int nextElement = enumer.nextElement();
RegularExpressionParser.java,c = new Literal(lexer.getString());,if (Literal(lexer != null ) c = new Literal(lexer.getString());
RegularExpressionParser.java,tmp = tmp.union(e.parseToFSM());,if (tmp != null ) tmp = tmp.union(e.parseToFSM());
ExampleBasedTest.java,int optimalCost = example.cost.value();,if (example != null ) int optimalCost = example.cost.value();
AndBoolVector.java,this.l = varSet.size();,if (varSet != null ) this.l = varSet.size();
AndBoolVector.java,int start = position.value();,if (position != null ) int start = position.value();
AndBoolVector.java,int start = position.value();,if (position != null ) int start = position.value();
AndBoolVector.java,int start = position.value();,if (position != null ) int start = position.value();
AndBoolVector.java,int start = position.value();,if (position != null ) int start = position.value();
LexOrder.java,int i = index.removeFirst();,if (index != null ) int i = index.removeFirst();
LinearInt.java,IntDomain xd = x[i].dom();,if (x[i] != null ) IntDomain xd = x[i].dom();
LinearInt.java,IntDomain xd = x[i].dom();,if (x[i] != null ) IntDomain xd = x[i].dom();
OrBoolVector.java,this.l = varSet.size();,if (varSet != null ) this.l = varSet.size();
OrBoolVector.java,int start = position.value();,if (position != null ) int start = position.value();
OrBoolVector.java,int start = position.value();,if (position != null ) int start = position.value();
OrBoolVector.java,int start = position.value();,if (position != null ) int start = position.value();
OrBoolVector.java,int start = position.value();,if (position != null ) int start = position.value();
MinizincBasedTestsHelper.java,String result = baos.toString();,if (baos != null ) String result = baos.toString();
Store.java,size = changed[currentQueue].size();,if (changed[currentQueue] != null ) size = changed[currentQueue].size();
Store.java,c = changed[currentQueue].removeFirst();,if (changed[currentQueue] != null ) c = changed[currentQueue].removeFirst();
Diffn.java,int lMin = rr.length(oDim).min();,if (rr != null ) int lMin = rr.length(oDim).min();
QueueForwardTest.java,String result = baos.toString();,if (baos != null ) String result = baos.toString();
QueueForwardTest.java,String textLine = bufferedReader.readLine();,if (bufferedReader != null ) String textLine = bufferedReader.readLine();
QueueForwardTest.java,textLine = bufferedReader.readLine();,if (bufferedReader != null ) textLine = bufferedReader.readLine();
QueueForwardTest.java,String result = baos.toString();,if (baos != null ) String result = baos.toString();
QueueForwardTest.java,String result = baos.toString();,if (baos != null ) String result = baos.toString();
QueueForwardTest.java,String result = baos.toString();,if (baos != null ) String result = baos.toString();
MinizincBasedTestAbove1Hours.java,String result = baos.toString();,if (baos != null ) String result = baos.toString();
MinizincBasedTestUpTo10Minutes.java,String result = baos.toString();,if (baos != null ) String result = baos.toString();
MinizincBasedTestUpTo1Hours.java,String result = baos.toString();,if (baos != null ) String result = baos.toString();
MinizincBasedTestUpTo1Minutes.java,String result = baos.toString();,if (baos != null ) String result = baos.toString();
MinizincBasedTestUpTo5Minutes.java,String result = baos.toString();,if (baos != null ) String result = baos.toString();
MinizincBasedTestUpTo30Seconds.java,String result = baos.toString();,if (baos != null ) String result = baos.toString();
MinizincBasedTestUpTo5Seconds.java,String result = baos.toString();,if (baos != null ) String result = baos.toString();
CumulativeBasic.java,profileValue -= t.res.min();,if (t != null ) profileValue -= t.res.min();
SmallDenseDomainTestComplement.java,Class<SmallDenseDomainTestComplement> cls = (Class<SmallDenseDomainTestComplement>) this.getClass();,if (this != null ) Class<SmallDenseDomainTestComplement> cls = (Class<SmallDenseDomainTestComplement>) this.getClass();
SmallDenseDomainTestContains.java,Class<SmallDenseDomainTestContains> cls = (Class<SmallDenseDomainTestContains>) this.getClass();,if (this != null ) Class<SmallDenseDomainTestContains> cls = (Class<SmallDenseDomainTestContains>) this.getClass();
SmallDenseDomainTestGetElementAt.java,Class<SmallDenseDomainTestGetElementAt> cls = (Class<SmallDenseDomainTestGetElementAt>) this.getClass();,if (this != null ) Class<SmallDenseDomainTestGetElementAt> cls = (Class<SmallDenseDomainTestGetElementAt>) this.getClass();
SmallDenseDomainTestIntersect.java,Class<SmallDenseDomainTestIntersect> cls = (Class<SmallDenseDomainTestIntersect>) this.getClass();,if (this != null ) Class<SmallDenseDomainTestIntersect> cls = (Class<SmallDenseDomainTestIntersect>) this.getClass();
SmallDenseDomainTestIntersectAdapt.java,Class<SmallDenseDomainTestIntersectAdapt> cls = (Class<SmallDenseDomainTestIntersectAdapt>) this.getClass();,if (this != null ) Class<SmallDenseDomainTestIntersectAdapt> cls = (Class<SmallDenseDomainTestIntersectAdapt>) this.getClass();
SmallDenseDomainTestIsIntersecting.java,Class<SmallDenseDomainTestIsIntersecting> cls = (Class<SmallDenseDomainTestIsIntersecting>) this.getClass();,if (this != null ) Class<SmallDenseDomainTestIsIntersecting> cls = (Class<SmallDenseDomainTestIsIntersecting>) this.getClass();
SmallDenseDomainTestSubtract.java,Class<SmallDenseDomainTestSubtract> cls = (Class<SmallDenseDomainTestSubtract>) this.getClass();,if (this != null ) Class<SmallDenseDomainTestSubtract> cls = (Class<SmallDenseDomainTestSubtract>) this.getClass();
CumulativeBasic.java,resourceUB[ti] = t.res.max();,if (t != null ) resourceUB[ti] = t.res.max();
CumulativeBasic.java,resourceUB[ti] = t.res.max();,if (t != null ) resourceUB[ti] = t.res.max();
CumulativeBasic.java,profileValue -= t.res.min();,if (t != null ) profileValue -= t.res.min();
GlobalConstraints.java,min = r[i].min();,if (r[i] != null ) min = r[i].min();
GlobalConstraints.java,nextMin = r[i].min();,if (r[i] != null ) nextMin = r[i].min();
Cumulative.java,int capacity = t[i].res.min();,if (t[i] != null ) int capacity = t[i].res.min();
CumulativeUnary.java,int l = nonZeroTasks.size();,if (nonZeroTasks != null ) int l = nonZeroTasks.size();
Constraints.java,this.debug = opt.debug();,if (opt != null ) this.debug = opt.debug();
Constraints.java,int n = astTree.jjtGetNumChildren();,if (astTree != null ) int n = astTree.jjtGetNumChildren();
Constraints.java,int k = node.jjtGetNumChildren();,if (node != null ) int k = node.jjtGetNumChildren();
Constraints.java,int numberChildren = constraintWithAnnotations.jjtGetNumChildren();,if (constraintWithAnnotations != null ) int numberChildren = constraintWithAnnotations.jjtGetNumChildren();
Constraints.java,min = r[i].min();,if (r[i] != null ) min = r[i].min();
Constraints.java,nextMin = r[i].min();,if (r[i] != null ) nextMin = r[i].min();
Constraints.java,int[] intTable = dictionary.getIntArray(node.getIdent());,if (dictionary != null ) int[] intTable = dictionary.getIntArray(node.getIdent());
Constraints.java,double[] floatTable = dictionary.getFloatArray(node.getIdent());,if (dictionary != null ) double[] floatTable = dictionary.getFloatArray(node.getIdent());
Constraints.java,int count = node.jjtGetNumChildren();,if (node != null ) int count = node.jjtGetNumChildren();
Constraints.java,int count = child.jjtGetNumChildren();,if (child != null ) int count = child.jjtGetNumChildren();
Constraints.java,int count = node.jjtGetNumChildren();,if (node != null ) int count = node.jjtGetNumChildren();
Constraints.java,int count = node.jjtGetNumChildren();,if (node != null ) int count = node.jjtGetNumChildren();
Constraints.java,int val = node.getInt();,if (node != null ) int val = node.getInt();
Constraints.java,int val = node.getInt();,if (node != null ) int val = node.getInt();
Constraints.java,int bInt = dictionary.getInt(node.getIdent());,if (dictionary != null ) int bInt = dictionary.getInt(node.getIdent());
Constraints.java,double val = node.getFloat();,if (node != null ) double val = node.getFloat();
Constraints.java,double bFloat = dictionary.getFloat(node.getIdent());,if (dictionary != null ) double bFloat = dictionary.getFloat(node.getIdent());
Constraints.java,int count = child.jjtGetNumChildren();,if (child != null ) int count = child.jjtGetNumChildren();
Constraints.java,int count = node.jjtGetNumChildren();,if (node != null ) int count = node.jjtGetNumChildren();
Constraints.java,int count = node.jjtGetNumChildren();,if (node != null ) int count = node.jjtGetNumChildren();
Constraints.java,Set<IntVar> vs = dictionary.aliasTable.keySet();,if (dictionary != null ) Set<IntVar> vs = dictionary.aliasTable.keySet();
Constraints.java,int l = varSet.size();,if (varSet != null ) int l = varSet.size();
Values.java,int uLength = graph.size();,if (graph != null ) int uLength = graph.size();
Values.java,int vLength = values.size();,if (values != null ) int vLength = values.size();
Values.java,int top = stack.peek();,if (stack != null ) int top = stack.peek();
Values.java,Iterator<Integer> nextNode = g[top].iterator();,if (g[top] != null ) Iterator<Integer> nextNode = g[top].iterator();
Values.java,int first = (Integer) nextNode.next();,if (nextNode != null ) int first = (Integer) nextNode.next();
Values.java,int v = stack.pop();,if (stack != null ) int v = stack.pop();
Values.java,u = stack.pop();,if (stack != null ) u = stack.pop();
Constraints.java,min = r[i].min();,if (r[i] != null ) min = r[i].min();
Constraints.java,nextMin = r[i].min();,if (r[i] != null ) nextMin = r[i].min();
CumulativeBasic.java,minProfile = cumulativeProfiles.minProfile();,if (cumulativeProfiles != null ) minProfile = cumulativeProfiles.minProfile();
CumulativeBasic.java,maxProfile = cumulativeProfiles.maxProfile();,if (cumulativeProfiles != null ) maxProfile = cumulativeProfiles.maxProfile();
CumulativeBasic.java,int rs = right.min - Start.min();,if (Start != null ) int rs = right.min - Start.min();
CumulativeBasic.java,offset = Resources.min();,if (Resources != null ) offset = Resources.min();
CumulativeBasic.java,int ps = p.min - Start.min();,if (Start != null ) int ps = p.min - Start.min();
CumulativeBasic.java,A = minUse.start();,if (minUse != null ) A = minUse.start();
CumulativeBasic.java,B = minUse.stop();,if (minUse != null ) B = minUse.stop();
CumulativeBasic.java,IntDomain tStartDom = t.start.dom();,if (t != null ) IntDomain tStartDom = t.start.dom();
CumulativeBasic.java,IntDomain sDom = task.start.dom();,if (task != null ) IntDomain sDom = task.start.dom();
CumulativeBasic.java,lst = sDom.max();,if (sDom != null ) lst = sDom.max();
CumulativeBasic.java,int limitMax = limit.max();,if (limit != null ) int limitMax = limit.max();
Profiles.java,tDurMin = t.dur.min();,if (t != null ) tDurMin = t.dur.min();
Profiles.java,tResMin = t.res.min();,if (t != null ) tResMin = t.res.min();
Profiles.java,value = t.res.max();,if (t != null ) value = t.res.max();
Profiles.java,IntDomain sDom = task.start.dom();,if (task != null ) IntDomain sDom = task.start.dom();
Profiles.java,lst = sDom.max();,if (sDom != null ) lst = sDom.max();
ExampleBasedTest.java,int optimalCost = example.cost.value();,if (example != null ) int optimalCost = example.cost.value();
ExampleBasedTest.java,int optimalCost = example.cost.value();,if (example != null ) int optimalCost = example.cost.value();
FailConstraintsStatistics.java,Integer n = failConstraintsStatistics.get(currentConstraint.getClass());,if (failConstraintsStatistics != null ) Integer n = failConstraintsStatistics.get(currentConstraint.getClass());
Store.java,Integer n = failConstraintsStatistics.get(currentConstraint.getClass());,if (failConstraintsStatistics != null ) Integer n = failConstraintsStatistics.get(currentConstraint.getClass());
Store.java,Integer k = failConstraintsIdStatistics.get(currentConstraint.id());,if (failConstraintsIdStatistics != null ) Integer k = failConstraintsIdStatistics.get(currentConstraint.id());
Solve.java,int n = astTree.jjtGetNumChildren();,if (astTree != null ) int n = astTree.jjtGetNumChildren();
LexOrder.java,int i = iVal.intValue();,if (iVal != null ) int i = iVal.intValue();
Constraints.java,int numberChildren = constraintWithAnnotations.jjtGetNumChildren();,if (constraintWithAnnotations != null ) int numberChildren = constraintWithAnnotations.jjtGetNumChildren();
ElementIntegerFast.java,short sort = order.value();,if (order != null ) short sort = order.value();
ElementIntegerFast.java,int minIndex = index.min();,if (index != null ) int minIndex = index.min();
ElementIntegerFast.java,int maxIndex = index.max();,if (index != null ) int maxIndex = index.max();
SumBool.java,GroundParameters gp = grounded.value();,if (grounded != null ) GroundParameters gp = grounded.value();
SumBool.java,int lb = xd.min();,if (xd != null ) int lb = xd.min();
SumBool.java,int ub = xd.max();,if (xd != null ) int ub = xd.max();
AndBool.java,int start = position.value();,if (position != null ) int start = position.value();
AndBool.java,int start = position.value();,if (position != null ) int start = position.value();
AndBool.java,int start = position.value();,if (position != null ) int start = position.value();
AndBool.java,int start = position.value();,if (position != null ) int start = position.value();
OrBool.java,int start = position.value();,if (position != null ) int start = position.value();
OrBool.java,int start = position.value();,if (position != null ) int start = position.value();
OrBool.java,int start = position.value();,if (position != null ) int start = position.value();
OrBool.java,int start = position.value();,if (position != null ) int start = position.value();
SumBool.java,int sumValue = sum.value();,if (sum != null ) int sumValue = sum.value();
SumBool.java,min += xd.min();,if (xd != null ) min += xd.min();
SumBool.java,max += xd.max();,if (xd != null ) max += xd.max();
DefaultSearchVars.java,int varSize = dictionary.defaultSearchSetVariables.size();,if (dictionary != null ) int varSize = dictionary.defaultSearchSetVariables.size();
DefaultSearchVars.java,varSize = dictionary.defaultSearchFloatVariables.size();,if (dictionary != null ) varSize = dictionary.defaultSearchFloatVariables.size();
Solve.java,int varSize = dictionary.defaultSearchSetVariables.size();,if (dictionary != null ) int varSize = dictionary.defaultSearchSetVariables.size();
Solve.java,varSize = dictionary.defaultSearchFloatVariables.size();,if (dictionary != null ) varSize = dictionary.defaultSearchFloatVariables.size();
SumInt.java,min = x[i].min();,if (x[i] != null ) min = x[i].min();
SumInt.java,max = x[i].max();,if (x[i] != null ) max = x[i].max();
SumInt.java,int sMax = sum.max();,if (sum != null ) int sMax = sum.max();
SumInt.java,min = x[i].min();,if (x[i] != null ) min = x[i].min();
SumInt.java,int newMax = x[i].max();,if (x[i] != null ) int newMax = x[i].max();
SumInt.java,int sMin = sum.min();,if (sum != null ) int sMin = sum.min();
SumInt.java,max = x[i].max();,if (x[i] != null ) max = x[i].max();
SumInt.java,int nmin = x[i].min();,if (x[i] != null ) int nmin = x[i].min();
SumInt.java,sMax += x[i].max();,if (x[i] != null ) sMax += x[i].max();
SumInt.java,sMin += x[i].min();,if (x[i] != null ) sMin += x[i].min();
AndBool.java,int start = position.value();,if (position != null ) int start = position.value();
AndBool.java,int start = position.value();,if (position != null ) int start = position.value();
AndBool.java,int start = position.value();,if (position != null ) int start = position.value();
AndBool.java,int start = position.value();,if (position != null ) int start = position.value();
OrBool.java,int start = position.value();,if (position != null ) int start = position.value();
OrBool.java,int start = position.value();,if (position != null ) int start = position.value();
OrBool.java,int start = position.value();,if (position != null ) int start = position.value();
OrBool.java,int start = position.value();,if (position != null ) int start = position.value();
ElementFloat.java,FloatDomain valDom = value.dom();,if (value != null ) FloatDomain valDom = value.dom();
ElementInteger.java,IntDomain valDom = value.dom();,if (value != null ) IntDomain valDom = value.dom();
ElementInteger.java,IntDomain i = mappingValuesToIndex.get(e.nextElement());,if (mappingValuesToIndex != null ) IntDomain i = mappingValuesToIndex.get(e.nextElement());
LexOrder.java,single = v[i].singleton();,if (v[i] != null ) single = v[i].singleton();
BoundDomain.java,BoundDomain result = this.cloneLight();,if (this != null ) BoundDomain result = this.cloneLight();
BoundDomain.java,BoundDomain result = this.cloneLight();,if (this != null ) BoundDomain result = this.cloneLight();
BoundDomain.java,BoundDomain result = this.cloneLight();,if (this != null ) BoundDomain result = this.cloneLight();
BoundDomain.java,BoundDomain result = this.cloneLight();,if (this != null ) BoundDomain result = this.cloneLight();
IntervalDomain.java,IntervalDomain result = this.cloneLight();,if (this != null ) IntervalDomain result = this.cloneLight();
IntervalDomain.java,IntervalDomain result = this.cloneLight();,if (this != null ) IntervalDomain result = this.cloneLight();
IntervalDomain.java,IntervalDomain result = this.cloneLight();,if (this != null ) IntervalDomain result = this.cloneLight();
IntervalDomain.java,IntervalDomain result = this.cloneLight();,if (this != null ) IntervalDomain result = this.cloneLight();
IntervalDomain.java,IntervalDomain result = this.cloneLight();,if (this != null ) IntervalDomain result = this.cloneLight();
SmallDenseDomain.java,SmallDenseDomain result = this.cloneLight();,if (this != null ) SmallDenseDomain result = this.cloneLight();
SmallDenseDomain.java,SmallDenseDomain result = this.cloneLight();,if (this != null ) SmallDenseDomain result = this.cloneLight();
SmallDenseDomain.java,SmallDenseDomain result = this.cloneLight();,if (this != null ) SmallDenseDomain result = this.cloneLight();
SmallDenseDomain.java,SmallDenseDomain result = this.cloneLight();,if (this != null ) SmallDenseDomain result = this.cloneLight();
FloatIntervalDomain.java,FloatIntervalDomain result = this.cloneLight();,if (this != null ) FloatIntervalDomain result = this.cloneLight();
FloatIntervalDomain.java,FloatIntervalDomain result = this.cloneLight();,if (this != null ) FloatIntervalDomain result = this.cloneLight();
ArgMax.java,int MAX = list[maxIndex.value()].value();,if (list[maxIndex != null ) int MAX = list[maxIndex.value()].value();
ArgMin.java,int MIN = list[minIndex.value()].value();,if (list[minIndex != null ) int MIN = list[minIndex.value()].value();
Diff2.java,IntDomain rOrigin = r.origin[i].dom();,if (r != null ) IntDomain rOrigin = r.origin[i].dom();
Diff2.java,IntDomain rLength = r.length[i].dom();,if (r != null ) IntDomain rLength = r.length[i].dom();
LinearFloat.java,FloatDomain listDom = list[i].dom();,if (list[i] != null ) FloatDomain listDom = list[i].dom();
LinearFloat.java,lMinArray[i] = mul.min();,if (mul != null ) lMinArray[i] = mul.min();
LinearFloat.java,lMaxArray[i] = mul.max();,if (mul != null ) lMaxArray[i] = mul.max();
LinearFloat.java,FloatDomain listDom = list[i].dom();,if (list[i] != null ) FloatDomain listDom = list[i].dom();
SGMPCSearch.java,int[] solution = search.getSolution();,if (search != null ) int[] solution = search.getSolution();
SGMPCSearch.java,int[] solution = search.getSolution();,if (search != null ) int[] solution = search.getSolution();
SGMPCSearch.java,Domain[] domSolution = label.getSolution();,if (label != null ) Domain[] domSolution = label.getSolution();
SGMPCSearch.java,Domain[] domSolution = label.getSolution();,if (label != null ) Domain[] domSolution = label.getSolution();
SGMPCSearch.java,searchCost = cost.value();,if (cost != null ) searchCost = cost.value();
MultivariateIntervalNewton.java,FloatInterval[] v = igs.solve();,if (igs != null ) FloatInterval[] v = igs.solve();
DepthFirstSearch.java,T[] vars = solutionListener.getVariables();,if (solutionListener != null ) T[] vars = solutionListener.getVariables();
DepthFirstSearch.java,Var current = itr.next();,if (itr != null ) Var current = itr.next();
DepthFirstSearch.java,consistent = store.consistency();,if (store != null ) consistent = store.consistency();
DepthFirstSearch.java,val = heuristic.getChoiceValue();,if (heuristic != null ) val = heuristic.getChoiceValue();
DepthFirstSearch.java,childResult = childSearches[currentChildSearch].labeling();,if (childSearches[currentChildSearch] != null ) childResult = childSearches[currentChildSearch].labeling();
DepthFirstSearch.java,int childCostValue = childSearches[currentChildSearch].getCostValue();,if (childSearches[currentChildSearch] != null ) int childCostValue = childSearches[currentChildSearch].getCostValue();
DepthFirstSearch.java,int childCostValue = childSearches[currentChildSearch].getCostValue();,if (childSearches[currentChildSearch] != null ) int childCostValue = childSearches[currentChildSearch].getCostValue();
DepthFirstSearch.java,costValue = costVariable.dom().min();,if (costVariable != null ) costValue = costVariable.dom().min();
DepthFirstSearch.java,consistent = label(heuristic.getIndex());,if (label(heuristic != null ) consistent = label(heuristic.getIndex());
DepthFirstSearch.java,int solutionNoBeforeSearch = solutionListener.solutionsNo();,if (solutionListener != null ) int solutionNoBeforeSearch = solutionListener.solutionsNo();
DepthFirstSearch.java,boolean result = store.consistency();,if (store != null ) boolean result = store.consistency();
DepthFirstSearch.java,int solutionNoBeforeSearch = solutionListener.solutionsNo();,if (solutionListener != null ) int solutionNoBeforeSearch = solutionListener.solutionsNo();
DepthFirstSearch.java,boolean result = store.consistency();,if (store != null ) boolean result = store.consistency();
DepthFirstSearch.java,int solutionNoBeforeSearch = solutionListener.solutionsNo();,if (solutionListener != null ) int solutionNoBeforeSearch = solutionListener.solutionsNo();
DepthFirstSearch.java,boolean result = store.consistency();,if (store != null ) boolean result = store.consistency();
CosPeqR.java,sat = sat && c.satisfied();,if (c != null ) sat = sat && c.satisfied();
IndomainMiddle.java,IntDomain dom = var.dom();,if (var != null ) IntDomain dom = var.dom();
IndomainMiddle.java,ValueEnumeration enumer = dom.valueEnumeration();,if (dom != null ) ValueEnumeration enumer = dom.valueEnumeration();
Sum.java,lowers[i] = list[i].domain.min();,if (list[i] != null ) lowers[i] = list[i].domain.min();
Sum.java,uppers[i] = list[i].domain.max();,if (list[i] != null ) uppers[i] = list[i].domain.max();
Config.java,public long seed = System.currentTimeMillis();,if (System != null ) public long seed = System.currentTimeMillis();
Core.java,int[] newClause = clause.toArray();,if (clause != null ) int[] newClause = clause.toArray();
Core.java,int literalToPropagate = toPropagate.pop();,if (toPropagate != null ) int literalToPropagate = toPropagate.pop();
RunSolver.java,Config config = Config.defaultConfig();,if (Config != null ) Config config = Config.defaultConfig();
Trail.java,int var = assertionStack.peek();,if (assertionStack != null ) int var = assertionStack.peek();
Trail.java,int n = assertionStack.size();,if (assertionStack != null ) int n = assertionStack.size();
DatabasesStore.java,sum += databases[i].size();,if (databases[i] != null ) sum += databases[i].size();
DatabasesStore.java,int noOfVariables = core.getMaxVariable();,if (core != null ) int noOfVariables = core.getMaxVariable();
DatabasesStore.java,noOfClauses += databases[i].size();,if (databases[i] != null ) noOfClauses += databases[i].size();
MapClause.java,int[] answer = pool.getNew(literals.size());,if (pool != null ) int[] answer = pool.getNew(literals.size());
MapClause.java,assert array.length == literals.size();,if (literals != null ) assert array.length == literals.size();
MapClause.java,it = literals.keySet().iterator();,if (literals != null ) it = literals.keySet().iterator();
MapClause.java,int e = it.next();,if (it != null ) int e = it.next();
DebugModule.java,int numOfSetVar = core.trail.size();,if (core != null ) int numOfSetVar = core.trail.size();
HeuristicAssertionModule.java,int var = activity.getLiteralToAssert();,if (activity != null ) int var = activity.getLiteralToAssert();
HeuristicAssertionModule.java,int maxVariable = core.getMaxVariable();,if (core != null ) int maxVariable = core.getMaxVariable();
HeuristicForgetModule.java,Iterator<Integer> clauseIterator = learntClauses[lbd].iterator();,if (learntClauses[lbd] != null ) Iterator<Integer> clauseIterator = learntClauses[lbd].iterator();
HeuristicForgetModule.java,int clauseId = clauseIterator.next();,if (clauseIterator != null ) int clauseId = clauseIterator.next();
HeuristicForgetModule.java,answer += learntClauses[i].size();,if (learntClauses[i] != null ) answer += learntClauses[i].size();
SearchModule.java,int bjLevel = core.getLevelToBackjump();,if (core != null ) int bjLevel = core.getLevelToBackjump();
SearchModule.java,int nextLiteral = assertionH.findNextVar();,if (assertionH != null ) int nextLiteral = assertionH.findNextVar();
CnfParser.java,c = stream.read();,if (stream != null ) c = stream.read();
CnfParser.java,c = stream.read();,if (stream != null ) c = stream.read();
CnfParser.java,c = stream.read();,if (stream != null ) c = stream.read();
CnfParser.java,c = stream.read();,if (stream != null ) c = stream.read();
CnfParser.java,c = stream.read();,if (stream != null ) c = stream.read();
CnfParser.java,c = stream.read();,if (stream != null ) c = stream.read();
CnfParser.java,c = stream.read();,if (stream != null ) c = stream.read();
CnfParser.java,c = stream.read();,if (stream != null ) c = stream.read();
CnfParser.java,c = stream.read();,if (stream != null ) c = stream.read();
CnfParser.java,c = stream.read();,if (stream != null ) c = stream.read();
CnfParser.java,c = stream.read();,if (stream != null ) c = stream.read();
SatChangesListener.java,countPos = intVarsToUpdate.cardinality();,if (intVarsToUpdate != null ) countPos = intVarsToUpdate.cardinality();
SatWrapper.java,int[] clause = modelClausesToAdd.pop();,if (modelClausesToAdd != null ) int[] clause = modelClausesToAdd.pop();
SatWrapper.java,int literal = toAssertLiterals.pop();,if (toAssertLiterals != null ) int literal = toAssertLiterals.pop();
SatWrapper.java,int lower = v.domain.min();,if (v != null ) int lower = v.domain.min();
SatWrapper.java,int upper = v.domain.max();,if (v != null ) int upper = v.domain.max();
SatWrapper.java,int lit = assertionModule.findNextVar();,if (assertionModule != null ) int lit = assertionModule.findNextVar();
SatWrapper.java,int[] toAdd = pool.getNew(clause.size());,if (pool != null ) int[] toAdd = pool.getNew(clause.size());
SatWrapper.java,Config config = Config.defaultConfig();,if (Config != null ) Config config = Config.defaultConfig();
WrapperDebugModule.java,int numOfSetVar = core.trail.size();,if (core != null ) int numOfSetVar = core.trail.size();
NonTransitiveDice.java,boolean result = example.searchSpecial();,if (example != null ) boolean result = example.searchSpecial();
SemiSatNonTransitiveDice.java,boolean result = example.searchSpecial();,if (example != null ) boolean result = example.searchSpecial();
DomainClausesDatabase.java,int clauseIndex = trail.size(); // TODO: faster?,if (faster? != null ) int clauseIndex = trail.size(); // TODO: faster?
DomainTranslator.java,int v = variable.domain.value();,if (variable != null ) int v = variable.domain.value();
LazyCpVarDomain.java,minNode.variable = wrapper.core.getFreshVariable();,if (wrapper != null ) minNode.variable = wrapper.core.getFreshVariable();
LazyCpVarDomain.java,maxNode.variable = wrapper.core.getFreshVariable();,if (wrapper != null ) maxNode.variable = wrapper.core.getFreshVariable();
SopSeqS.java,ArrayList<Link> subLinks = (ArrayList<Link>)links.clone();,if ((ArrayList<Link>)links != null ) ArrayList<Link> subLinks = (ArrayList<Link>)links.clone();
SopSeqS.java,ArrayList<Link> subLinks = (ArrayList<Link>)links.clone();,if ((ArrayList<Link>)links != null ) ArrayList<Link> subLinks = (ArrayList<Link>)links.clone();
SopX.java,IntDomain XdomCopy = X.dom().cloneLight();,if (X != null ) IntDomain XdomCopy = X.dom().cloneLight();
SopX.java,IntDomain XdomCopy = X.dom().cloneLight();,if (X != null ) IntDomain XdomCopy = X.dom().cloneLight();
SopXeqS.java,IntDomain XdomCopy = X.dom().cloneLight();,if (X != null ) IntDomain XdomCopy = X.dom().cloneLight();
SopXeqS.java,SlhsDomCopy[i] = Slhs.dom().cloneLight();,if (Slhs != null ) SlhsDomCopy[i] = Slhs.dom().cloneLight();
SopXeqS.java,SrhsDomCopy[i] = Srhs.dom().cloneLight();,if (Srhs != null ) SrhsDomCopy[i] = Srhs.dom().cloneLight();
SopXeqS.java,DiscreteStochasticDomain SlhsResult = Slhs.dom().cloneLight();,if (Slhs != null ) DiscreteStochasticDomain SlhsResult = Slhs.dom().cloneLight();
SopXeqS.java,DiscreteStochasticDomain SrhsResult = Srhs.dom().cloneLight();,if (Srhs != null ) DiscreteStochasticDomain SrhsResult = Srhs.dom().cloneLight();
DiscreteStochasticDomain.java,int lXdom = Xdom.getSize();,if (Xdom != null ) int lXdom = Xdom.getSize();
DiscreteStochasticDomain.java,b[i] = B[i].intValue();,if (B[i] != null ) b[i] = B[i].intValue();
DiscreteStochasticDomain.java,DiscreteStochasticDomain result = this.cloneLight();,if (this != null ) DiscreteStochasticDomain result = this.cloneLight();
DiscreteStochasticDomain.java,DiscreteStochasticDomain result = this.cloneLight();,if (this != null ) DiscreteStochasticDomain result = this.cloneLight();
DiscreteStochasticDomain.java,DiscreteStochasticDomain result = this.cloneLight();,if (this != null ) DiscreteStochasticDomain result = this.cloneLight();
DiscreteStochasticDomain.java,DiscreteStochasticDomain result = this.cloneLight();,if (this != null ) DiscreteStochasticDomain result = this.cloneLight();
StochasticVar.java,size += list[i].getSize();,if (list[i] != null ) size += list[i].getSize();
XMLSaveSupport.java,SAXTransformerFactory tf = (SAXTransformerFactory) SAXTransformerFactory.newInstance();,if (SAXTransformerFactory != null ) SAXTransformerFactory tf = (SAXTransformerFactory) SAXTransformerFactory.newInstance();
XMLSaveSupport.java,TransformerHandler hd = tf.newTransformerHandler();,if (tf != null ) TransformerHandler hd = tf.newTransformerHandler();
XMLSaveSupport.java,Transformer serializer = hd.getTransformer();,if (hd != null ) Transformer serializer = hd.getTransformer();
XMLSaveSupport.java,Object[] sortedNames = store.variablesHashMap.keySet().toArray();,if (store != null ) Object[] sortedNames = store.variablesHashMap.keySet().toArray();
XMLSaveSupport.java,sortedNames = constraints.keySet().toArray();,if (constraints != null ) sortedNames = constraints.keySet().toArray();
XMLSaveSupport.java,Class c = object.getClass();,if (object != null ) Class c = object.getClass();
XMLSaveSupport.java,String characters = value.toString();,if (value != null ) String characters = value.toString();
XMLSaveSupport.java,Iterator iterator = collection.iterator();,if (collection != null ) Iterator iterator = collection.iterator();
XMLSaveSupport.java,Object ithObject = iterator.next();,if (iterator != null ) Object ithObject = iterator.next();
ElementVariable.java,IntDomain temp = value.domain.cloneLight();,if (value != null ) IntDomain temp = value.domain.cloneLight();
ElementVariable.java,checkTrigger = nextValueDomain.getSize();,if (nextValueDomain != null ) checkTrigger = nextValueDomain.getSize();
ElementVariable.java,Iterator<IntVar> itr = variableQueue.iterator();,if (variableQueue != null ) Iterator<IntVar> itr = variableQueue.iterator();
ElementVariable.java,IntVar changedVar = itr.next();,if (itr != null ) IntVar changedVar = itr.next();
ElementVariable.java,int lostSupport = enumer.nextElement();,if (enumer != null ) int lostSupport = enumer.nextElement();
ElementVariable.java,int min = el.min();,if (el != null ) int min = el.min();
ElementVariable.java,int max = el.max();,if (el != null ) int max = el.max();
Solve.java,Thread tread = java.lang.Thread.currentThread();,if (java != null ) Thread tread = java.lang.Thread.currentThread();
Solve.java,long startCPU = b.getThreadCpuTime(tread.getId());,if (b != null ) long startCPU = b.getThreadCpuTime(tread.getId());
Solve.java,Thread tread = java.lang.Thread.currentThread();,if (java != null ) Thread tread = java.lang.Thread.currentThread();
Solve.java,long startCPU = b.getThreadCpuTime(tread.getId());,if (b != null ) long startCPU = b.getThreadCpuTime(tread.getId());
VariablesParameters.java,int count = node.jjtGetNumChildren();,if (node != null ) int count = node.jjtGetNumChildren();
VariablesParameters.java,int count = node.jjtGetNumChildren();,if (node != null ) int count = node.jjtGetNumChildren();
VariablesParameters.java,int no = child.jjtGetNumChildren();,if (child != null ) int no = child.jjtGetNumChildren();
VariablesParameters.java,int number = grandchild.jjtGetNumChildren();,if (grandchild != null ) int number = grandchild.jjtGetNumChildren();
VariablesParameters.java,int numberSL = arrayLiteral.jjtGetNumChildren();,if (arrayLiteral != null ) int numberSL = arrayLiteral.jjtGetNumChildren();
VariablesParameters.java,int count = child.jjtGetNumChildren();,if (child != null ) int count = child.jjtGetNumChildren();
VariablesParameters.java,int count = child.jjtGetNumChildren();,if (child != null ) int count = child.jjtGetNumChildren();
VariablesParameters.java,int count = child.jjtGetNumChildren();,if (child != null ) int count = child.jjtGetNumChildren();
VariablesParameters.java,int count = child.jjtGetNumChildren();,if (child != null ) int count = child.jjtGetNumChildren();
VariablesParameters.java,int count = child.jjtGetNumChildren();,if (child != null ) int count = child.jjtGetNumChildren();
VariablesParameters.java,int count = node.jjtGetNumChildren();,if (node != null ) int count = node.jjtGetNumChildren();
VariablesParameters.java,int count = node.jjtGetNumChildren();,if (node != null ) int count = node.jjtGetNumChildren();
VariablesParameters.java,int no = child.jjtGetNumChildren();,if (child != null ) int no = child.jjtGetNumChildren();
VariablesParameters.java,int number = grandchild.jjtGetNumChildren();,if (grandchild != null ) int number = grandchild.jjtGetNumChildren();
VariablesParameters.java,int numberSL = arrayLiteral.jjtGetNumChildren();,if (arrayLiteral != null ) int numberSL = arrayLiteral.jjtGetNumChildren();
VariablesParameters.java,int count = child.jjtGetNumChildren();,if (child != null ) int count = child.jjtGetNumChildren();
VariablesParameters.java,int count = child.jjtGetNumChildren();,if (child != null ) int count = child.jjtGetNumChildren();
VariablesParameters.java,int count = child.jjtGetNumChildren();,if (child != null ) int count = child.jjtGetNumChildren();
VariablesParameters.java,int count = child.jjtGetNumChildren();,if (child != null ) int count = child.jjtGetNumChildren();
VariablesParameters.java,int count = child.jjtGetNumChildren();,if (child != null ) int count = child.jjtGetNumChildren();
SumWeightDom.java,int pointer = nextGroundedPosition.value();,if (nextGroundedPosition != null ) int pointer = nextGroundedPosition.value();
