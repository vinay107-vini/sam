Filename,Buggy/Deleted,Fixed/Added
HikariPool.java,var toRemove = notInUse.size() - config.getMinimumIdle();,if (config != null ) var toRemove = notInUse.size() - config.getMinimumIdle();
HikariPool.java,final int queueDepth = addConnectionQueueDepth.get();,if (addConnectionQueueDepth != null ) final int queueDepth = addConnectionQueueDepth.get();
HikariPool.java,final var queueDepth = addConnectionQueueDepth.get();,if (addConnectionQueueDepth != null ) final var queueDepth = addConnectionQueueDepth.get();
HikariConfig.java,final ClassLoader threadContextClassLoader = Thread.currentThread().getContextClassLoader();,if (Thread != null ) final ClassLoader threadContextClassLoader = Thread.currentThread().getContextClassLoader();
HikariConfig.java,final ThreadLocalRandom random = ThreadLocalRandom.current();,if (ThreadLocalRandom != null ) final ThreadLocalRandom random = ThreadLocalRandom.current();
HikariJNDIFactory.java,Enumeration<RefAddr> enumeration = ref.getAll();,if (ref != null ) Enumeration<RefAddr> enumeration = ref.getAll();
HikariJNDIFactory.java,RefAddr element = enumeration.nextElement();,if (enumeration != null ) RefAddr element = enumeration.nextElement();
HikariJNDIFactory.java,String type = element.getType();,if (element != null ) String type = element.getType();
PoolStats.java,final long reloadTime = reloadAt.get();,if (reloadAt != null ) final long reloadTime = reloadAt.get();
CodahaleHealthChecker.java,final Properties healthCheckProperties = hikariConfig.getHealthCheckProperties();,if (hikariConfig != null ) final Properties healthCheckProperties = hikariConfig.getHealthCheckProperties();
CodahaleHealthChecker.java,final MetricRegistry metricRegistry = (MetricRegistry) hikariConfig.getMetricRegistry();,if (hikariConfig != null ) final MetricRegistry metricRegistry = (MetricRegistry) hikariConfig.getMetricRegistry();
HikariPool.java,final Connection connection = poolEntry.close();,if (poolEntry != null ) final Connection connection = poolEntry.close();
HikariPool.java,final long maxLifetime = config.getMaxLifetime();,if (config != null ) final long maxLifetime = config.getMaxLifetime();
HikariPool.java,final long initializationTimeout = config.getInitializationFailTimeout();,if (config != null ) final long initializationTimeout = config.getInitializationFailTimeout();
HikariPool.java,final long idleTimeout = config.getIdleTimeout();,if (config != null ) final long idleTimeout = config.getIdleTimeout();
HikariPool.java,int toRemove = notInUse.size() - config.getMinimumIdle();,if (config != null ) int toRemove = notInUse.size() - config.getMinimumIdle();
PoolBase.java,final MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();,if (ManagementFactory != null ) final MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();
PoolBase.java,final String jdbcUrl = config.getJdbcUrl();,if (config != null ) final String jdbcUrl = config.getJdbcUrl();
PoolBase.java,final String username = config.getUsername();,if (config != null ) final String username = config.getUsername();
PoolBase.java,final String password = config.getPassword();,if (config != null ) final String password = config.getPassword();
PoolBase.java,final String dsClassName = config.getDataSourceClassName();,if (config != null ) final String dsClassName = config.getDataSourceClassName();
PoolBase.java,final String driverClassName = config.getDriverClassName();,if (config != null ) final String driverClassName = config.getDriverClassName();
PoolBase.java,final String dataSourceJNDI = config.getDataSourceJNDI();,if (config != null ) final String dataSourceJNDI = config.getDataSourceJNDI();
PoolBase.java,final Properties dataSourceProperties = config.getDataSourceProperties();,if (config != null ) final Properties dataSourceProperties = config.getDataSourceProperties();
PoolBase.java,DataSource ds = config.getDataSource();,if (config != null ) DataSource ds = config.getDataSource();
PoolBase.java,String username = config.getUsername();,if (config != null ) String username = config.getUsername();
PoolBase.java,String password = config.getPassword();,if (config != null ) String password = config.getPassword();
PoolBase.java,final int originalTimeout = connection.getNetworkTimeout();,if (connection != null ) final int originalTimeout = connection.getNetworkTimeout();
ProxyConnection.java,final String sqlState = nse.getSQLState();,if (nse != null ) final String sqlState = nse.getSQLState();
ProxyConnection.java,final int size = openStatements.size();,if (openStatements != null ) final int size = openStatements.size();
ProxyDatabaseMetaData.java,final String delegateToString = delegate.toString();,if (delegate != null ) final String delegateToString = delegate.toString();
ProxyDatabaseMetaData.java,Statement statement = resultSet.getStatement();,if (resultSet != null ) Statement statement = resultSet.getStatement();
ProxyDatabaseMetaData.java,Statement statement = resultSet.getStatement();,if (resultSet != null ) Statement statement = resultSet.getStatement();
ProxyDatabaseMetaData.java,Statement statement = resultSet.getStatement();,if (resultSet != null ) Statement statement = resultSet.getStatement();
ProxyDatabaseMetaData.java,ResultSet resultSet = delegate.getSchemas();,if (delegate != null ) ResultSet resultSet = delegate.getSchemas();
ProxyDatabaseMetaData.java,Statement statement = resultSet.getStatement();,if (resultSet != null ) Statement statement = resultSet.getStatement();
ProxyDatabaseMetaData.java,ResultSet resultSet = delegate.getCatalogs();,if (delegate != null ) ResultSet resultSet = delegate.getCatalogs();
ProxyDatabaseMetaData.java,Statement statement = resultSet.getStatement();,if (resultSet != null ) Statement statement = resultSet.getStatement();
ProxyDatabaseMetaData.java,ResultSet resultSet = delegate.getTableTypes();,if (delegate != null ) ResultSet resultSet = delegate.getTableTypes();
ProxyDatabaseMetaData.java,Statement statement = resultSet.getStatement();,if (resultSet != null ) Statement statement = resultSet.getStatement();
ProxyDatabaseMetaData.java,Statement statement = resultSet.getStatement();,if (resultSet != null ) Statement statement = resultSet.getStatement();
ProxyDatabaseMetaData.java,Statement statement = resultSet.getStatement();,if (resultSet != null ) Statement statement = resultSet.getStatement();
ProxyDatabaseMetaData.java,Statement statement = resultSet.getStatement();,if (resultSet != null ) Statement statement = resultSet.getStatement();
ProxyDatabaseMetaData.java,Statement statement = resultSet.getStatement();,if (resultSet != null ) Statement statement = resultSet.getStatement();
ProxyDatabaseMetaData.java,Statement statement = resultSet.getStatement();,if (resultSet != null ) Statement statement = resultSet.getStatement();
ProxyDatabaseMetaData.java,Statement statement = resultSet.getStatement();,if (resultSet != null ) Statement statement = resultSet.getStatement();
ProxyDatabaseMetaData.java,Statement statement = resultSet.getStatement();,if (resultSet != null ) Statement statement = resultSet.getStatement();
ProxyDatabaseMetaData.java,Statement statement = resultSet.getStatement();,if (resultSet != null ) Statement statement = resultSet.getStatement();
ProxyDatabaseMetaData.java,Statement statement = resultSet.getStatement();,if (resultSet != null ) Statement statement = resultSet.getStatement();
ProxyDatabaseMetaData.java,ResultSet resultSet = delegate.getTypeInfo();,if (delegate != null ) ResultSet resultSet = delegate.getTypeInfo();
ProxyDatabaseMetaData.java,Statement statement = resultSet.getStatement();,if (resultSet != null ) Statement statement = resultSet.getStatement();
ProxyDatabaseMetaData.java,Statement statement = resultSet.getStatement();,if (resultSet != null ) Statement statement = resultSet.getStatement();
ProxyDatabaseMetaData.java,Statement statement = resultSet.getStatement();,if (resultSet != null ) Statement statement = resultSet.getStatement();
ProxyDatabaseMetaData.java,Statement statement = resultSet.getStatement();,if (resultSet != null ) Statement statement = resultSet.getStatement();
ProxyDatabaseMetaData.java,Statement statement = resultSet.getStatement();,if (resultSet != null ) Statement statement = resultSet.getStatement();
ProxyDatabaseMetaData.java,Statement statement = resultSet.getStatement();,if (resultSet != null ) Statement statement = resultSet.getStatement();
ProxyDatabaseMetaData.java,Statement statement = resultSet.getStatement();,if (resultSet != null ) Statement statement = resultSet.getStatement();
ProxyDatabaseMetaData.java,ResultSet resultSet = delegate.getClientInfoProperties();,if (delegate != null ) ResultSet resultSet = delegate.getClientInfoProperties();
ProxyDatabaseMetaData.java,Statement statement = resultSet.getStatement();,if (resultSet != null ) Statement statement = resultSet.getStatement();
ProxyDatabaseMetaData.java,Statement statement = resultSet.getStatement();,if (resultSet != null ) Statement statement = resultSet.getStatement();
ProxyDatabaseMetaData.java,Statement statement = resultSet.getStatement();,if (resultSet != null ) Statement statement = resultSet.getStatement();
ProxyDatabaseMetaData.java,Statement statement = resultSet.getStatement();,if (resultSet != null ) Statement statement = resultSet.getStatement();
ProxyStatement.java,final String delegateToString = delegate.toString();,if (delegate != null ) final String delegateToString = delegate.toString();
ProxyStatement.java,final ResultSet resultSet = delegate.getResultSet();,if (delegate != null ) final ResultSet resultSet = delegate.getResultSet();
ProxyStatement.java,ResultSet resultSet = delegate.getGeneratedKeys();,if (delegate != null ) ResultSet resultSet = delegate.getGeneratedKeys();
DriverDataSource.java,Enumeration<Driver> drivers = DriverManager.getDrivers();,if (DriverManager != null ) Enumeration<Driver> drivers = DriverManager.getDrivers();
DriverDataSource.java,Driver d = drivers.nextElement();,if (drivers != null ) Driver d = drivers.nextElement();
DriverDataSource.java,ClassLoader threadContextClassLoader = Thread.currentThread().getContextClassLoader();,if (Thread != null ) ClassLoader threadContextClassLoader = Thread.currentThread().getContextClassLoader();
DriverDataSource.java,final Properties cloned = (Properties) driverProperties.clone();,if (driverProperties != null ) final Properties cloned = (Properties) driverProperties.clone();
JavassistProxyFactory.java,String packageName = ProxyConnection.class.getPackage().getName();,if (ProxyConnection != null ) String packageName = ProxyConnection.class.getPackage().getName();
JavassistProxyFactory.java,CtClass intfCt = classPool.getCtClass(intf.getName());,if (classPool != null ) CtClass intfCt = classPool.getCtClass(intf.getName());
JavassistProxyFactory.java,final String signature = intfMethod.getName() + intfMethod.getSignature();,if (intfMethod != null ) final String signature = intfMethod.getName() + intfMethod.getSignature();
PropertyElf.java,String name = method.getName();,if (method != null ) String name = method.getName();
DriverDataSource.java,driver = (Driver) driverClass.newInstance();,if (driverClass != null ) driver = (Driver) driverClass.newInstance();
TestPropertySetter.java,DataSource dataSource = (DataSource) clazz.newInstance();,if (clazz != null ) DataSource dataSource = (DataSource) clazz.newInstance();
TestPropertySetter.java,DataSource dataSource = (DataSource) clazz.newInstance();,if (clazz != null ) DataSource dataSource = (DataSource) clazz.newInstance();
TestPropertySetter.java,DataSource dataSource = (DataSource) clazz.newInstance();,if (clazz != null ) DataSource dataSource = (DataSource) clazz.newInstance();
TomcatConcurrentBagLeakTest.java,Object fauxWebContext = clazz.newInstance();,if (clazz != null ) Object fauxWebContext = clazz.newInstance();
TomcatConcurrentBagLeakTest.java,Object fauxWebContext = clazz.newInstance();,if (clazz != null ) Object fauxWebContext = clazz.newInstance();
HikariPool.java,final long keepaliveTime = config.getKeepaliveTime();,if (config != null ) final long keepaliveTime = config.getKeepaliveTime();
HikariPool.java,LinkedBlockingQueue<Runnable> addConnectionQueue = new LinkedBlockingQueue<>(config.getMaximumPoolSize());,if (LinkedBlockingQueue<>(config != null ) LinkedBlockingQueue<Runnable> addConnectionQueue = new LinkedBlockingQueue<>(config.getMaximumPoolSize());
HikariPool.java,LinkedBlockingQueue<Runnable> addQueue = new LinkedBlockingQueue<>(config.getMaximumPoolSize());,if (LinkedBlockingQueue<>(config != null ) LinkedBlockingQueue<Runnable> addQueue = new LinkedBlockingQueue<>(config.getMaximumPoolSize());
HikariConfig.java,ClassLoader threadContextClassLoader = Thread.currentThread().getContextClassLoader();,if (Thread != null ) ClassLoader threadContextClassLoader = Thread.currentThread().getContextClassLoader();
HikariPool.java,LinkedBlockingQueue<Runnable> addConnectionQueue = new LinkedBlockingQueue<>(config.getMaximumPoolSize());,if (LinkedBlockingQueue<>(config != null ) LinkedBlockingQueue<Runnable> addConnectionQueue = new LinkedBlockingQueue<>(config.getMaximumPoolSize());
PoolBase.java,final MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();,if (ManagementFactory != null ) final MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();
PoolBase.java,DataSource dataSource = config.getDataSource();,if (config != null ) DataSource dataSource = config.getDataSource();
PoolBase.java,defaultTransactionIsolation = connection.getTransactionIsolation();,if (connection != null ) defaultTransactionIsolation = connection.getTransactionIsolation();
PrometheusMetricsTrackerFactory.java,collector = new HikariCPCollector().register();,if (HikariCPCollector() != null ) collector = new HikariCPCollector().register();
HikariJNDIFactory.java,Enumeration<RefAddr> enumeration = ref.getAll();,if (ref != null ) Enumeration<RefAddr> enumeration = ref.getAll();
HikariJNDIFactory.java,RefAddr element = enumeration.nextElement();,if (enumeration != null ) RefAddr element = enumeration.nextElement();
HikariJNDIFactory.java,String type = element.getType();,if (element != null ) String type = element.getType();
HikariConfig.java,ClassLoader threadContextClassLoader = Thread.currentThread().getContextClassLoader();,if (Thread != null ) ClassLoader threadContextClassLoader = Thread.currentThread().getContextClassLoader();
DriverDataSource.java,ClassLoader threadContextClassLoader = Thread.currentThread().getContextClassLoader();,if (Thread != null ) ClassLoader threadContextClassLoader = Thread.currentThread().getContextClassLoader();
DriverDataSource.java,driver = (Driver) driverClass.newInstance();,if (driverClass != null ) driver = (Driver) driverClass.newInstance();
OSGiBundleTest.java,Bundle[] bundles = context.getBundles();,if (context != null ) Bundle[] bundles = context.getBundles();
HikariPool.java,this.houseKeepingExecutorService = config.getScheduledExecutor();,if (config != null ) this.houseKeepingExecutorService = config.getScheduledExecutor();
ProxyConnection.java,final String methodName = method.getName();,if (method != null ) final String methodName = method.getName();
HikariPool.java,final Connection connection = poolEntry.close();,if (poolEntry != null ) final Connection connection = poolEntry.close();
QueuedSequenceSynchronizer.java,this.sequence = Sequence.Factory.create();,if (Sequence != null ) this.sequence = Sequence.Factory.create();
PoolBase.java,cause = (Exception) e.getCause();,if (e != null ) cause = (Exception) e.getCause();
HikariPool.java,this.houseKeepingExecutorService = config.getScheduledExecutorService();,if (config != null ) this.houseKeepingExecutorService = config.getScheduledExecutorService();
PoolStats.java,final long now = clock.currentTime();,if (clock != null ) final long now = clock.currentTime();
HikariPool.java,final long startTime = clockSource.currentTime();,if (clockSource != null ) final long startTime = clockSource.currentTime();
HikariPool.java,final long now = clockSource.currentTime();,if (clockSource != null ) final long now = clockSource.currentTime();
HikariPool.java,final long start = clockSource.currentTime();,if (clockSource != null ) final long start = clockSource.currentTime();
HikariPool.java,final long startTime = clockSource.currentTime();,if (clockSource != null ) final long startTime = clockSource.currentTime();
HikariPool.java,final long now = clockSource.currentTime();,if (clockSource != null ) final long now = clockSource.currentTime();
PoolBase.java,final long start = ClockSource.INSTANCE.currentTime();,if (ClockSource != null ) final long start = ClockSource.INSTANCE.currentTime();
PoolBase.java,final long now = ClockSource.INSTANCE.currentTime();,if (ClockSource != null ) final long now = ClockSource.INSTANCE.currentTime();
PoolEntry.java,this.lastAccessed = ClockSource.INSTANCE.currentTime();,if (ClockSource != null ) this.lastAccessed = ClockSource.INSTANCE.currentTime();
PoolEntry.java,final long now = ClockSource.INSTANCE.currentTime();,if (ClockSource != null ) final long now = ClockSource.INSTANCE.currentTime();
ProxyConnection.java,lastAccess = clockSource.currentTime();,if (clockSource != null ) lastAccess = clockSource.currentTime();
ProxyConnection.java,lastAccess = clockSource.currentTime();,if (clockSource != null ) lastAccess = clockSource.currentTime();
ProxyConnection.java,lastAccess = clockSource.currentTime();,if (clockSource != null ) lastAccess = clockSource.currentTime();
ProxyConnection.java,lastAccess = clockSource.currentTime();,if (clockSource != null ) lastAccess = clockSource.currentTime();
ProxyConnection.java,lastAccess = clockSource.currentTime();,if (clockSource != null ) lastAccess = clockSource.currentTime();
ProxyConnection.java,lastAccess = clockSource.currentTime();,if (clockSource != null ) lastAccess = clockSource.currentTime();
ClockSource.java,ClockSource INSTANCE = Factory.create();,if (Factory != null ) ClockSource INSTANCE = Factory.create();
ConcurrentBag.java,final long start = ClockSource.INSTANCE.currentTime();,if (ClockSource != null ) final long start = ClockSource.INSTANCE.currentTime();
ConnectionPoolSizeVsThreadsTest.java,final long start = clockSource.currentTime();,if (clockSource != null ) final long start = clockSource.currentTime();
PostgresTest.java,final long start = ClockSource.INSTANCE.currentTime();,if (ClockSource != null ) final long start = ClockSource.INSTANCE.currentTime();
PostgresTest.java,long start = ClockSource.INSTANCE.currentTime();,if (ClockSource != null ) long start = ClockSource.INSTANCE.currentTime();
PostgresTest.java,final long start = ClockSource.INSTANCE.currentTime();,if (ClockSource != null ) final long start = ClockSource.INSTANCE.currentTime();
ShutdownTest.java,long startTime = ClockSource.INSTANCE.currentTime();,if (ClockSource != null ) long startTime = ClockSource.INSTANCE.currentTime();
TestConnectionCloseBlocking.java,long start = ClockSource.INSTANCE.currentTime();,if (ClockSource != null ) long start = ClockSource.INSTANCE.currentTime();
TestConnectionTimeoutRetry.java,long start = ClockSource.INSTANCE.currentTime();,if (ClockSource != null ) long start = ClockSource.INSTANCE.currentTime();
TestConnectionTimeoutRetry.java,long start = ClockSource.INSTANCE.currentTime();,if (ClockSource != null ) long start = ClockSource.INSTANCE.currentTime();
TestConnectionTimeoutRetry.java,long start = ClockSource.INSTANCE.currentTime();,if (ClockSource != null ) long start = ClockSource.INSTANCE.currentTime();
TestConnectionTimeoutRetry.java,long start = ClockSource.INSTANCE.currentTime();,if (ClockSource != null ) long start = ClockSource.INSTANCE.currentTime();
HikariPool.java,final int connectionsToAdd = connectionBag.getPendingQueue() - addConnectionQueue.size();,if (addConnectionQueue != null ) final int connectionsToAdd = connectionBag.getPendingQueue() - addConnectionQueue.size();
HikariPool.java,ThreadFactory threadFactory = config.getThreadFactory();,if (config != null ) ThreadFactory threadFactory = config.getThreadFactory();
HikariPool.java,int removable = idleList.size() - config.getMinimumIdle();,if (config != null ) int removable = idleList.size() - config.getMinimumIdle();
ConcurrentBag.java,List<Object> list = threadList.get();,if (threadList != null ) List<Object> list = threadList.get();
ConcurrentBag.java,final long startTime = System.nanoTime();,if (System != null ) final long startTime = System.nanoTime();
ConcurrentBag.java,startSeq = synchronizer.currentSequence();,if (synchronizer != null ) startSeq = synchronizer.currentSequence();
ConcurrentBag.java,addItemFuture = listener.addBagItem();,if (listener != null ) addItemFuture = listener.addBagItem();
HikariPool.java,this.houseKeepingExecutorService = config.getScheduledExecutorService();,if (config != null ) this.houseKeepingExecutorService = config.getScheduledExecutorService();
HikariPool.java,final long now = ClockSource.INSTANCE.currentTime();,if (ClockSource != null ) final long now = ClockSource.INSTANCE.currentTime();
HikariPool.java,Connection c = super.newConnection();,if (super != null ) Connection c = super.newConnection();
ConnectionPoolSizeVsThreadsTest.java,int createdAfterWorkAllFinished = postLoad.getMaxTotal() - underLoad.getMaxTotal();,if (underLoad != null ) int createdAfterWorkAllFinished = postLoad.getMaxTotal() - underLoad.getMaxTotal();
ConnectionPoolSizeVsThreadsTest.java,int maxTotal = pool.getTotalConnections();,if (pool != null ) int maxTotal = pool.getTotalConnections();
ConnectionPoolSizeVsThreadsTest.java,int maxActive = pool.getActiveConnections();,if (pool != null ) int maxActive = pool.getActiveConnections();
HikariPool.java,final long now = clockSource.currentTime();,if (clockSource != null ) final long now = clockSource.currentTime();
TestConnectionTimeoutRetry.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestMetrics.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestMetrics.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestMetrics.java,connection = ds.getConnection();,if (ds != null ) connection = ds.getConnection();
TestMetrics.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestMetrics.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestMetrics.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestMetrics.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestMetrics.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestProxies.java,Connection conn = ds.getConnection();,if (ds != null ) Connection conn = ds.getConnection();
HikariPool.java,final int tc = totalConnections.decrementAndGet();,if (totalConnections != null ) final int tc = totalConnections.decrementAndGet();
TestConnections.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnections.java,ResultSet resultSet = statement.executeQuery();,if (statement != null ) ResultSet resultSet = statement.executeQuery();
TestConnections.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnections.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnections.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnections.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnections.java,ResultSet resultSet = statement.executeQuery();,if (statement != null ) ResultSet resultSet = statement.executeQuery();
TestConnections.java,connection = ds.getConnection();,if (ds != null ) connection = ds.getConnection();
TestConnections.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnections.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnections.java,connection = ds.getConnection();,if (ds != null ) connection = ds.getConnection();
TestConnections.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
ProxyConnection.java,nse = nse.getNextException();,if (nse != null ) nse = nse.getNextException();
ProxyConnection.java,nse = sqle.getNextException();,if (sqle != null ) nse = sqle.getNextException();
ProxyConnection.java,nse = sqle.getNextException();,if (sqle != null ) nse = sqle.getNextException();
BasicPoolTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
BasicPoolTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
ExceptionTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
ExceptionTest.java,ResultSet resultSet = statement.executeQuery();,if (statement != null ) ResultSet resultSet = statement.executeQuery();
ExceptionTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
ExceptionTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
IsolationTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
IsolationTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
JdbcDriverTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
MiscTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
MiscTest.java,String s = new String(baos.toByteArray());,if (String(baos != null ) String s = new String(baos.toByteArray());
ShutdownTest.java,long startTime = ClockSource.INSTANCE.currentTime();,if (ClockSource != null ) long startTime = ClockSource.INSTANCE.currentTime();
ShutdownTest.java,connections[i] = ds.getConnection();,if (ds != null ) connections[i] = ds.getConnection();
ShutdownTest.java,connection = ds.getConnection();,if (ds != null ) connection = ds.getConnection();
StatementTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
StatementTest.java,Statement statement = connection.createStatement();,if (connection != null ) Statement statement = connection.createStatement();
StatementTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
StatementTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
StatementTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConcurrentBag.java,PoolEntry reserved = pool.newPoolEntry();,if (pool != null ) PoolEntry reserved = pool.newPoolEntry();
TestConcurrentBag.java,PoolEntry inuse = pool.newPoolEntry();,if (pool != null ) PoolEntry inuse = pool.newPoolEntry();
TestConcurrentBag.java,PoolEntry notinuse = pool.newPoolEntry();,if (pool != null ) PoolEntry notinuse = pool.newPoolEntry();
TestConcurrentBag.java,PoolEntry bagEntry = pool.newPoolEntry();,if (pool != null ) PoolEntry bagEntry = pool.newPoolEntry();
TestConnectionCloseBlocking.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnectionCloseBlocking.java,connection = ds.getConnection();,if (ds != null ) connection = ds.getConnection();
PrometheusMetricsTrackerTest.java,Connection connection = hikariDataSource.getConnection();,if (hikariDataSource != null ) Connection connection = hikariDataSource.getConnection();
PropertyElf.java,Object key = propertyNames.nextElement();,if (propertyNames != null ) Object key = propertyNames.nextElement();
PropertyElf.java,String propName = key.toString();,if (key != null ) String propName = key.toString();
Sequence.java,longAdder = constructor.newInstance();,if (constructor != null ) longAdder = constructor.newInstance();
ProxyConnection.java,final String sqlState = sqle.getSQLState();,if (sqle != null ) final String sqlState = sqle.getSQLState();
ProxyConnection.java,final SQLException nse = sqle.getNextException();,if (sqle != null ) final SQLException nse = sqle.getNextException();
TestConnectionTimeoutRetry.java,long start = ClockSource.INSTANCE.currentTime();,if (ClockSource != null ) long start = ClockSource.INSTANCE.currentTime();
TestConnectionTimeoutRetry.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
PoolBase.java,defaultTransactionIsolation = connection.getTransactionIsolation();,if (connection != null ) defaultTransactionIsolation = connection.getTransactionIsolation();
ConcurrentBag.java,final long startScan = System.nanoTime();,if (System != null ) final long startScan = System.nanoTime();
PropertyElf.java,"methodName = ""set"" + propName.toUpperCase();","if (propName != null ) methodName = ""set"" + propName.toUpperCase();"
UtilityElf.java,final String upperName = transactionIsolationName.toUpperCase();,if (transactionIsolationName != null ) final String upperName = transactionIsolationName.toUpperCase();
HikariPool.java,connectionTimeout = config.getConnectionTimeout();,if (config != null ) connectionTimeout = config.getConnectionTimeout();
HikariPool.java,validationTimeout = config.getValidationTimeout();,if (config != null ) validationTimeout = config.getValidationTimeout();
HikariPool.java,final long idleTimeout = config.getIdleTimeout();,if (config != null ) final long idleTimeout = config.getIdleTimeout();
HikariPool.java,final long now = clockSource.currentTime();,if (clockSource != null ) final long now = clockSource.currentTime();
HikariPool.java,int removable = idleList.size() - config.getMinimumIdle();,if (config != null ) int removable = idleList.size() - config.getMinimumIdle();
HikariConfig.java,final Properties sysProps = System.getProperties();,if (System != null ) final Properties sysProps = System.getProperties();
HikariConfig.java,final Properties sysProps = System.getProperties();,if (System != null ) final Properties sysProps = System.getProperties();
ProxyConnection.java,lastAccess = clockSource.currentTime();,if (clockSource != null ) lastAccess = clockSource.currentTime();
ClockSource.java,final ClockSource INSTANCE = Factory.create();,if (Factory != null ) final ClockSource INSTANCE = Factory.create();
UnwrapTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
ProxyConnection.java,lastAccess = clockSource.currentTime();,if (clockSource != null ) lastAccess = clockSource.currentTime();
ProxyConnection.java,final String sqlState = sqle.getSQLState();,if (sqle != null ) final String sqlState = sqle.getSQLState();
PoolBase.java,final int defaultLevel = connection.getTransactionIsolation();,if (connection != null ) final int defaultLevel = connection.getTransactionIsolation();
ConcurrentBag.java,final List threadLocalList = threadList.get();,if (threadList != null ) final List threadLocalList = threadList.get();
HikariPool.java,final long now = clockSource.currentTime();,if (clockSource != null ) final long now = clockSource.currentTime();
PoolBase.java,final long validationTimeout = config.getValidationTimeout();,if (config != null ) final long validationTimeout = config.getValidationTimeout();
StatementTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
StatementTest.java,connection = ds.getConnection();,if (ds != null ) connection = ds.getConnection();
UnwrapTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
UnwrapTest.java,connection = ds.getConnection();,if (ds != null ) connection = ds.getConnection();
TestConnections.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnections.java,connection = ds.getConnection();,if (ds != null ) connection = ds.getConnection();
TestConnections.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnections.java,connection = ds.getConnection();,if (ds != null ) connection = ds.getConnection();
TestConnections.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnections.java,connection = ds.getConnection();,if (ds != null ) connection = ds.getConnection();
TestConnections.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnections.java,connection = ds.getConnection();,if (ds != null ) connection = ds.getConnection();
StatementTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnections.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnections.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnections.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnections.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
UnwrapTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
HikariPool.java,final PoolEntry poolEntry = iter.next();,if (iter != null ) final PoolEntry poolEntry = iter.next();
TestValidation.java,String s = new String(baos.toByteArray());,if (String(baos != null ) String s = new String(baos.toByteArray());
PoolBase.java,this.catalog = nullOrNotEmpty(config.getCatalog());,if (nullOrNotEmpty(config != null ) this.catalog = nullOrNotEmpty(config.getCatalog());
UtilityElf.java,final String upperName = transactionIsolationName.trim().toUpperCase();,if (transactionIsolationName != null ) final String upperName = transactionIsolationName.trim().toUpperCase();
UtilityElf.java,final int level = Integer.parseInt(transactionIsolationName.trim());,if (Integer != null ) final int level = Integer.parseInt(transactionIsolationName.trim());
UtilityElf.java,final String upperName = transactionIsolationName.toUpperCase();,if (transactionIsolationName != null ) final String upperName = transactionIsolationName.toUpperCase();
PoolBase.java,this.catalog = config.getCatalog();,if (config != null ) this.catalog = config.getCatalog();
HikariPool.java,int removable = notInUseList.size() - config.getMinimumIdle();,if (config != null ) int removable = notInUseList.size() - config.getMinimumIdle();
ProxyConnection.java,final String methodName = method.getName();,if (method != null ) final String methodName = method.getName();
ProxyConnection.java,final String methodName = method.getName();,if (method != null ) final String methodName = method.getName();
TestConnectionCloseBlocking.java,start = ClockSource.INSTANCE.currentTime();,if (ClockSource != null ) start = ClockSource.INSTANCE.currentTime();
TestConnectionCloseBlocking.java,connection = ds.getConnection(); // on physical connection close we sleep 2 seconds,if (seconds != null ) connection = ds.getConnection(); // on physical connection close we sleep 2 seconds
HikariPool.java,final int minimumIdle = config.getMinimumIdle();,if (config != null ) final int minimumIdle = config.getMinimumIdle();
HikariPool.java,final int maxPoolSize = config.getMaximumPoolSize();,if (config != null ) final int maxPoolSize = config.getMaximumPoolSize();
PoolEntry.java,this.lastAccessed = ClockSource.INSTANCE.currentTime();,if (ClockSource != null ) this.lastAccessed = ClockSource.INSTANCE.currentTime();
ConcurrentBag.java,startSeq = synchronizer.currentSequence();,if (synchronizer != null ) startSeq = synchronizer.currentSequence();
ConcurrentBag.java,addItemFuture = listener.addBagItem();,if (listener != null ) addItemFuture = listener.addBagItem();
ConnectionStateTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
ConnectionStateTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
ConnectionStateTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
ConnectionStateTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
ConnectionStateTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
ConnectionStateTest.java,Statement statement = connection.createStatement();,if (connection != null ) Statement statement = connection.createStatement();
IsolationTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
IsolationTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
RampUpDown.java,connections[i] = ds.getConnection();,if (ds != null ) connections[i] = ds.getConnection();
PoolBase.java,final String currentCatalog = proxyConnection.getCatalogState();,if (proxyConnection != null ) final String currentCatalog = proxyConnection.getCatalogState();
ProxyConnection.java,String sqlState = sqle.getSQLState();,if (sqle != null ) String sqlState = sqle.getSQLState();
ProxyConnection.java,SQLException nse = sqle.getNextException();,if (sqle != null ) SQLException nse = sqle.getNextException();
HikariPool.java,final int removable = notInUseList.size() - config.getMinimumIdle();,if (config != null ) final int removable = notInUseList.size() - config.getMinimumIdle();
HikariPool.java,int removable = notInUseList.size() - config.getMinimumIdle();,if (config != null ) int removable = notInUseList.size() - config.getMinimumIdle();
PoolEntry.java,final long now = ClockSource.INSTANCE.currentTime();,if (ClockSource != null ) final long now = ClockSource.INSTANCE.currentTime();
CodaHaleMetricsTracker.java,innerContext = timer.time();,if (timer != null ) innerContext = timer.time();
PoolStats.java,final long time = clock.currentTime();,if (clock != null ) final long time = clock.currentTime();
PoolStats.java,final long current = reloadAt.get();,if (reloadAt != null ) final long current = reloadAt.get();
PoolEntry.java,this.lastAccess = ClockSource.INSTANCE.currentTime();,if (ClockSource != null ) this.lastAccess = ClockSource.INSTANCE.currentTime();
HikariPool.java,this.poolName = config.getPoolName();,if (config != null ) this.poolName = config.getPoolName();
PoolEntry.java,this.creationTime = System.currentTimeMillis();,if (System != null ) this.creationTime = System.currentTimeMillis();
PoolBase.java,final String currentCatalog = liveState.getCatalogState();,if (liveState != null ) final String currentCatalog = liveState.getCatalogState();
HikariPool.java,this.connectionTimeout = config.getConnectionTimeout();,if (config != null ) this.connectionTimeout = config.getConnectionTimeout();
HikariPool.java,this.jdbcMediator = mediators.getJdbcMediator();,if (mediators != null ) this.jdbcMediator = mediators.getJdbcMediator();
HikariPool.java,this.poolMediator = mediators.getPoolMediator();,if (mediators != null ) this.poolMediator = mediators.getPoolMediator();
HikariPool.java,this.entryMediator = mediators.getConnectionStateMediator();,if (mediators != null ) this.entryMediator = mediators.getConnectionStateMediator();
HikariPool.java,final Throwable originalException = jdbcMediator.getLastConnectionFailure();,if (jdbcMediator != null ) final Throwable originalException = jdbcMediator.getLastConnectionFailure();
HikariPool.java,final PoolEntry poolEntry = entryMediator.newPoolEntry();,if (entryMediator != null ) final PoolEntry poolEntry = entryMediator.newPoolEntry();
PoolBase.java,this.transactionIsolation = getTransactionIsolation(config.getTransactionIsolation());,if (getTransactionIsolation(config != null ) this.transactionIsolation = getTransactionIsolation(config.getTransactionIsolation());
PoolBase.java,final String upperName = transactionIsolationName.toUpperCase();,if (transactionIsolationName != null ) final String upperName = transactionIsolationName.toUpperCase();
JavassistProxyFactory.java,String packageName = JavassistProxyFactory.class.getPackage().getName();,if (JavassistProxyFactory != null ) String packageName = JavassistProxyFactory.class.getPackage().getName();
ConnectionStateTest.java,int transactionIsolation = Mediator.getTransactionIsolation(config.getTransactionIsolation());,if (Mediator != null ) int transactionIsolation = Mediator.getTransactionIsolation(config.getTransactionIsolation());
TestConcurrentBag.java,PoolEntry reserved = mediator.newPoolEntry();,if (mediator != null ) PoolEntry reserved = mediator.newPoolEntry();
TestConcurrentBag.java,PoolEntry inuse = mediator.newPoolEntry();,if (mediator != null ) PoolEntry inuse = mediator.newPoolEntry();
TestConcurrentBag.java,PoolEntry notinuse = mediator.newPoolEntry();,if (mediator != null ) PoolEntry notinuse = mediator.newPoolEntry();
TestConcurrentBag.java,PoolEntry bagEntry = mediator.newPoolEntry();,if (mediator != null ) PoolEntry bagEntry = mediator.newPoolEntry();
ClosedConnection.java,final String methodName = method.getName();,if (method != null ) final String methodName = method.getName();
ConcurrentBag.java,final List threadLocalList = threadList.get();,if (threadList != null ) final List threadLocalList = threadList.get();
PropertyElf.java,"capitalized = ""set"" + propName.toUpperCase();","if (propName != null ) capitalized = ""set"" + propName.toUpperCase();"
PropertyElf.java,Method writeMethod = propertyDescriptor.getWriteMethod();,if (propertyDescriptor != null ) Method writeMethod = propertyDescriptor.getWriteMethod();
HikariPool.java,this.dataSource = poolElf.initializeDataSource();,if (poolElf != null ) this.dataSource = poolElf.initializeDataSource();
HikariPool.java,String username = config.getUsername();,if (config != null ) String username = config.getUsername();
HikariPool.java,String password = config.getPassword();,if (config != null ) String password = config.getPassword();
HikariPool.java,int removable = bag.size() - config.getMinimumIdle();,if (config != null ) int removable = bag.size() - config.getMinimumIdle();
LeakTask.java,this.connectionName = bagEntry.connection.toString();,if (bagEntry != null ) this.connectionName = bagEntry.connection.toString();
Mediator.java,this.validationTimeout = config.getValidationTimeout();,if (config != null ) this.validationTimeout = config.getValidationTimeout();
Mediator.java,final String upperName = transactionIsolationName.toUpperCase();,if (transactionIsolationName != null ) final String upperName = transactionIsolationName.toUpperCase();
Mediator.java,final String jdbcUrl = config.getJdbcUrl();,if (config != null ) final String jdbcUrl = config.getJdbcUrl();
Mediator.java,final String username = config.getUsername();,if (config != null ) final String username = config.getUsername();
Mediator.java,final String password = config.getPassword();,if (config != null ) final String password = config.getPassword();
Mediator.java,final String dsClassName = config.getDataSourceClassName();,if (config != null ) final String dsClassName = config.getDataSourceClassName();
Mediator.java,final String driverClassName = config.getDriverClassName();,if (config != null ) final String driverClassName = config.getDriverClassName();
Mediator.java,final Properties dataSourceProperties = config.getDataSourceProperties();,if (config != null ) final Properties dataSourceProperties = config.getDataSourceProperties();
Mediator.java,DataSource dataSource = config.getDataSource();,if (config != null ) DataSource dataSource = config.getDataSource();
Mediator.java,final int defaultLevel = connection.getTransactionIsolation();,if (connection != null ) final int defaultLevel = connection.getTransactionIsolation();
PoolEntry.java,final long maxLifetime = pool.config.getMaxLifetime();,if (pool != null ) final long maxLifetime = pool.config.getMaxLifetime();
ConnectionProxy.java,final int size = statements.size();,if (statements != null ) final int size = statements.size();
ConnectionStateTest.java,int transactionIsolation = PoolElf.getTransactionIsolation(config.getTransactionIsolation());,if (PoolElf != null ) int transactionIsolation = PoolElf.getTransactionIsolation(config.getTransactionIsolation());
PoolElf.java,transactionIsolation = connection.getTransactionIsolation();,if (connection != null ) transactionIsolation = connection.getTransactionIsolation();
PoolElf.java,int defaultTILevel = connection.getTransactionIsolation();,if (connection != null ) int defaultTILevel = connection.getTransactionIsolation();
PoolElf.java,final int defaultLevel = connection.getTransactionIsolation();,if (connection != null ) final int defaultLevel = connection.getTransactionIsolation();
ConnectionProxy.java,lastAccess = clockSource.currentTime();,if (clockSource != null ) lastAccess = clockSource.currentTime();
ConnectionProxy.java,final int size = openStatements.size();,if (openStatements != null ) final int size = openStatements.size();
ConnectionProxy.java,lastAccess = clockSource.currentTime();,if (clockSource != null ) lastAccess = clockSource.currentTime();
PoolElf.java,transactionIsolation = connection.getTransactionIsolation();,if (connection != null ) transactionIsolation = connection.getTransactionIsolation();
PoolElf.java,int defaultTILevel = connection.getTransactionIsolation();,if (connection != null ) int defaultTILevel = connection.getTransactionIsolation();
PoolElf.java,final int defaultLevel = connection.getTransactionIsolation();,if (connection != null ) final int defaultLevel = connection.getTransactionIsolation();
ConnectionProxy.java,lastAccess = clockSource.currentTime();,if (clockSource != null ) lastAccess = clockSource.currentTime();
ConnectionProxy.java,final int size = openStatements.size();,if (openStatements != null ) final int size = openStatements.size();
ConnectionProxy.java,lastAccess = clockSource.currentTime();,if (clockSource != null ) lastAccess = clockSource.currentTime();
ConnectionProxy.java,lastAccess = clockSource.currentTime();,if (clockSource != null ) lastAccess = clockSource.currentTime();
ConnectionProxy.java,lastAccess = clockSource.currentTime();,if (clockSource != null ) lastAccess = clockSource.currentTime();
ConnectionProxy.java,lastAccess = clockSource.currentTime();,if (clockSource != null ) lastAccess = clockSource.currentTime();
ConnectionProxy.java,lastAccess = clockSource.currentTime();,if (clockSource != null ) lastAccess = clockSource.currentTime();
HikariPool.java,int removable = bag.size() - config.getMinimumIdle();,if (config != null ) int removable = bag.size() - config.getMinimumIdle();
HikariPool.java,int removable = bag.size() - config.getMinimumIdle();,if (config != null ) int removable = bag.size() - config.getMinimumIdle();
HikariPool.java,final int minIdle = config.getMinimumIdle();,if (config != null ) final int minIdle = config.getMinimumIdle();
HikariPool.java,int totIdle = bag.size();,if (bag != null ) int totIdle = bag.size();
ProxyFactory.java,final int size = openStatements.size();,if (openStatements != null ) final int size = openStatements.size();
ConnectionProxy.java,final int size = openStatements.size();,if (openStatements != null ) final int size = openStatements.size();
ConnectionProxy.java,final int size = openStatements.size();,if (openStatements != null ) final int size = openStatements.size();
PoolElf.java,int defaultLevel = connection.getTransactionIsolation();,if (connection != null ) int defaultLevel = connection.getTransactionIsolation();
PoolElf.java,this.catalog = config.getCatalog();,if (config != null ) this.catalog = config.getCatalog();
PoolElf.java,this.isReadOnly = config.isReadOnly();,if (config != null ) this.isReadOnly = config.isReadOnly();
PoolElf.java,this.isAutoCommit = config.isAutoCommit();,if (config != null ) this.isAutoCommit = config.isAutoCommit();
PoolElf.java,this.validationTimeout = config.getValidationTimeout();,if (config != null ) this.validationTimeout = config.getValidationTimeout();
PoolElf.java,this.transactionIsolation = getTransactionIsolation(config.getTransactionIsolation());,if (getTransactionIsolation(config != null ) this.transactionIsolation = getTransactionIsolation(config.getTransactionIsolation());
PoolElf.java,this.isIsolateInternalQueries = config.isIsolateInternalQueries();,if (config != null ) this.isIsolateInternalQueries = config.isIsolateInternalQueries();
PoolElf.java,this.poolName = config.getPoolName();,if (config != null ) this.poolName = config.getPoolName();
PoolElf.java,final String upperName = transactionIsolationName.toUpperCase();,if (transactionIsolationName != null ) final String upperName = transactionIsolationName.toUpperCase();
PoolElf.java,final String jdbcUrl = config.getJdbcUrl();,if (config != null ) final String jdbcUrl = config.getJdbcUrl();
PoolElf.java,final String username = config.getUsername();,if (config != null ) final String username = config.getUsername();
PoolElf.java,final String password = config.getPassword();,if (config != null ) final String password = config.getPassword();
PoolElf.java,final String dsClassName = config.getDataSourceClassName();,if (config != null ) final String dsClassName = config.getDataSourceClassName();
PoolElf.java,final String driverClassName = config.getDriverClassName();,if (config != null ) final String driverClassName = config.getDriverClassName();
PoolElf.java,final Properties dataSourceProperties = config.getDataSourceProperties();,if (config != null ) final Properties dataSourceProperties = config.getDataSourceProperties();
PoolElf.java,DataSource dataSource = config.getDataSource();,if (config != null ) DataSource dataSource = config.getDataSource();
PoolElf.java,int defaultLevel = connection.getTransactionIsolation();,if (connection != null ) int defaultLevel = connection.getTransactionIsolation();
PoolElf.java,final MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();,if (ManagementFactory != null ) final MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();
PoolElf.java,final MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();,if (ManagementFactory != null ) final MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();
PoolElf.java,final int originalTimeout = connection.getNetworkTimeout();,if (connection != null ) final int originalTimeout = connection.getNetworkTimeout();
PoolElf.java,this.catalog = config.getCatalog();,if (config != null ) this.catalog = config.getCatalog();
PoolElf.java,this.isReadOnly = config.isReadOnly();,if (config != null ) this.isReadOnly = config.isReadOnly();
PoolElf.java,this.isAutoCommit = config.isAutoCommit();,if (config != null ) this.isAutoCommit = config.isAutoCommit();
PoolElf.java,this.validationTimeout = config.getValidationTimeout();,if (config != null ) this.validationTimeout = config.getValidationTimeout();
PoolElf.java,this.transactionIsolation = getTransactionIsolation(config.getTransactionIsolation());,if (getTransactionIsolation(config != null ) this.transactionIsolation = getTransactionIsolation(config.getTransactionIsolation());
PoolElf.java,this.isIsolateInternalQueries = config.isIsolateInternalQueries();,if (config != null ) this.isIsolateInternalQueries = config.isIsolateInternalQueries();
PoolElf.java,this.poolName = config.getPoolName();,if (config != null ) this.poolName = config.getPoolName();
PoolElf.java,String upperName = transactionIsolationName.toUpperCase();,if (transactionIsolationName != null ) String upperName = transactionIsolationName.toUpperCase();
PoolElf.java,final String jdbcUrl = config.getJdbcUrl();,if (config != null ) final String jdbcUrl = config.getJdbcUrl();
PoolElf.java,final String username = config.getUsername();,if (config != null ) final String username = config.getUsername();
PoolElf.java,final String password = config.getPassword();,if (config != null ) final String password = config.getPassword();
PoolElf.java,final String dsClassName = config.getDataSourceClassName();,if (config != null ) final String dsClassName = config.getDataSourceClassName();
PoolElf.java,final String driverClassName = config.getDriverClassName();,if (config != null ) final String driverClassName = config.getDriverClassName();
PoolElf.java,final Properties dataSourceProperties = config.getDataSourceProperties();,if (config != null ) final Properties dataSourceProperties = config.getDataSourceProperties();
PoolElf.java,DataSource dataSource = config.getDataSource();,if (config != null ) DataSource dataSource = config.getDataSource();
PoolElf.java,int defaultLevel = connection.getTransactionIsolation();,if (connection != null ) int defaultLevel = connection.getTransactionIsolation();
PoolElf.java,final MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();,if (ManagementFactory != null ) final MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();
PoolElf.java,final MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();,if (ManagementFactory != null ) final MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();
PoolElf.java,final int originalTimeout = connection.getNetworkTimeout();,if (connection != null ) final int originalTimeout = connection.getNetworkTimeout();
HikariPool.java,this.dataSource = poolElf.initializeDataSource();,if (poolElf != null ) this.dataSource = poolElf.initializeDataSource();
HikariPool.java,this.poolName = config.getPoolName();,if (config != null ) this.poolName = config.getPoolName();
HikariPool.java,this.connectionTimeout = config.getConnectionTimeout();,if (config != null ) this.connectionTimeout = config.getConnectionTimeout();
HikariPool.java,this.houseKeepingExecutorService = config.getScheduledExecutorService();,if (config != null ) this.houseKeepingExecutorService = config.getScheduledExecutorService();
HikariPool.java,final long startTime = clockSource.currentTime();,if (clockSource != null ) final long startTime = clockSource.currentTime();
HikariPool.java,final long now = clockSource.currentTime();,if (clockSource != null ) final long now = clockSource.currentTime();
HikariPool.java,final long start = clockSource.currentTime();,if (clockSource != null ) final long start = clockSource.currentTime();
HikariPool.java,final int minimumIdle = config.getMinimumIdle();,if (config != null ) final int minimumIdle = config.getMinimumIdle();
HikariPool.java,final int maxPoolSize = config.getMaximumPoolSize();,if (config != null ) final int maxPoolSize = config.getMaximumPoolSize();
HikariPool.java,final int tc = totalConnections.decrementAndGet();,if (totalConnections != null ) final int tc = totalConnections.decrementAndGet();
HikariPool.java,String username = config.getUsername();,if (config != null ) String username = config.getUsername();
HikariPool.java,String password = config.getPassword();,if (config != null ) String password = config.getPassword();
HikariPool.java,this.pendingThreads = HikariPool.this.getThreadsAwaitingConnection();,if (HikariPool != null ) this.pendingThreads = HikariPool.this.getThreadsAwaitingConnection();
HikariPool.java,this.idleConnections = HikariPool.this.getIdleConnections();,if (HikariPool != null ) this.idleConnections = HikariPool.this.getIdleConnections();
HikariPool.java,this.totalConnections = HikariPool.this.getTotalConnections();,if (HikariPool != null ) this.totalConnections = HikariPool.this.getTotalConnections();
HikariPool.java,this.activeConnections = HikariPool.this.getActiveConnections();,if (HikariPool != null ) this.activeConnections = HikariPool.this.getActiveConnections();
HikariPool.java,connectionTimeout = config.getConnectionTimeout();,if (config != null ) connectionTimeout = config.getConnectionTimeout();
HikariPool.java,final long now = clockSource.currentTime();,if (clockSource != null ) final long now = clockSource.currentTime();
HikariPool.java,final long idleTimeout = config.getIdleTimeout();,if (config != null ) final long idleTimeout = config.getIdleTimeout();
PoolElf.java,this.catalog = config.getCatalog();,if (config != null ) this.catalog = config.getCatalog();
PoolElf.java,this.isReadOnly = config.isReadOnly();,if (config != null ) this.isReadOnly = config.isReadOnly();
PoolElf.java,this.isAutoCommit = config.isAutoCommit();,if (config != null ) this.isAutoCommit = config.isAutoCommit();
PoolElf.java,this.validationTimeout = config.getValidationTimeout();,if (config != null ) this.validationTimeout = config.getValidationTimeout();
PoolElf.java,this.transactionIsolation = getTransactionIsolation(config.getTransactionIsolation());,if (getTransactionIsolation(config != null ) this.transactionIsolation = getTransactionIsolation(config.getTransactionIsolation());
PoolElf.java,this.isIsolateInternalQueries = config.isIsolateInternalQueries();,if (config != null ) this.isIsolateInternalQueries = config.isIsolateInternalQueries();
PoolElf.java,this.poolName = config.getPoolName();,if (config != null ) this.poolName = config.getPoolName();
PoolElf.java,final String jdbcUrl = config.getJdbcUrl();,if (config != null ) final String jdbcUrl = config.getJdbcUrl();
PoolElf.java,final String username = config.getUsername();,if (config != null ) final String username = config.getUsername();
PoolElf.java,final String password = config.getPassword();,if (config != null ) final String password = config.getPassword();
PoolElf.java,final String dsClassName = config.getDataSourceClassName();,if (config != null ) final String dsClassName = config.getDataSourceClassName();
PoolElf.java,final String driverClassName = config.getDriverClassName();,if (config != null ) final String driverClassName = config.getDriverClassName();
PoolElf.java,final Properties dataSourceProperties = config.getDataSourceProperties();,if (config != null ) final Properties dataSourceProperties = config.getDataSourceProperties();
PoolElf.java,DataSource dataSource = config.getDataSource();,if (config != null ) DataSource dataSource = config.getDataSource();
PoolElf.java,final MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();,if (ManagementFactory != null ) final MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();
PoolElf.java,final MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();,if (ManagementFactory != null ) final MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();
PoolElf.java,final int originalTimeout = connection.getNetworkTimeout();,if (connection != null ) final int originalTimeout = connection.getNetworkTimeout();
HikariPool.java,this.dataSource = poolElf.initializeDataSource();,if (poolElf != null ) this.dataSource = poolElf.initializeDataSource();
HikariPool.java,this.poolName = config.getPoolName();,if (config != null ) this.poolName = config.getPoolName();
HikariPool.java,this.connectionTimeout = config.getConnectionTimeout();,if (config != null ) this.connectionTimeout = config.getConnectionTimeout();
HikariPool.java,this.houseKeepingExecutorService = config.getScheduledExecutorService();,if (config != null ) this.houseKeepingExecutorService = config.getScheduledExecutorService();
HikariPool.java,final long startTime = clockSource.currentTime();,if (clockSource != null ) final long startTime = clockSource.currentTime();
HikariPool.java,final long now = clockSource.currentTime();,if (clockSource != null ) final long now = clockSource.currentTime();
HikariPool.java,final long start = clockSource.currentTime();,if (clockSource != null ) final long start = clockSource.currentTime();
HikariPool.java,final int minimumIdle = config.getMinimumIdle();,if (config != null ) final int minimumIdle = config.getMinimumIdle();
HikariPool.java,final int maxPoolSize = config.getMaximumPoolSize();,if (config != null ) final int maxPoolSize = config.getMaximumPoolSize();
HikariPool.java,final int tc = totalConnections.decrementAndGet();,if (totalConnections != null ) final int tc = totalConnections.decrementAndGet();
HikariPool.java,String username = config.getUsername();,if (config != null ) String username = config.getUsername();
HikariPool.java,String password = config.getPassword();,if (config != null ) String password = config.getPassword();
HikariPool.java,this.pendingThreads = HikariPool.this.getThreadsAwaitingConnection();,if (HikariPool != null ) this.pendingThreads = HikariPool.this.getThreadsAwaitingConnection();
HikariPool.java,this.idleConnections = HikariPool.this.getIdleConnections();,if (HikariPool != null ) this.idleConnections = HikariPool.this.getIdleConnections();
HikariPool.java,this.totalConnections = HikariPool.this.getTotalConnections();,if (HikariPool != null ) this.totalConnections = HikariPool.this.getTotalConnections();
HikariPool.java,this.activeConnections = HikariPool.this.getActiveConnections();,if (HikariPool != null ) this.activeConnections = HikariPool.this.getActiveConnections();
HikariPool.java,connectionTimeout = config.getConnectionTimeout();,if (config != null ) connectionTimeout = config.getConnectionTimeout();
HikariPool.java,final long now = clockSource.currentTime();,if (clockSource != null ) final long now = clockSource.currentTime();
HikariPool.java,final long idleTimeout = config.getIdleTimeout();,if (config != null ) final long idleTimeout = config.getIdleTimeout();
PoolElf.java,this.catalog = config.getCatalog();,if (config != null ) this.catalog = config.getCatalog();
PoolElf.java,this.isReadOnly = config.isReadOnly();,if (config != null ) this.isReadOnly = config.isReadOnly();
PoolElf.java,this.isAutoCommit = config.isAutoCommit();,if (config != null ) this.isAutoCommit = config.isAutoCommit();
PoolElf.java,this.validationTimeout = config.getValidationTimeout();,if (config != null ) this.validationTimeout = config.getValidationTimeout();
PoolElf.java,this.transactionIsolation = getTransactionIsolation(config.getTransactionIsolation());,if (getTransactionIsolation(config != null ) this.transactionIsolation = getTransactionIsolation(config.getTransactionIsolation());
PoolElf.java,this.isIsolateInternalQueries = config.isIsolateInternalQueries();,if (config != null ) this.isIsolateInternalQueries = config.isIsolateInternalQueries();
PoolElf.java,this.poolName = config.getPoolName();,if (config != null ) this.poolName = config.getPoolName();
PoolElf.java,final String jdbcUrl = config.getJdbcUrl();,if (config != null ) final String jdbcUrl = config.getJdbcUrl();
PoolElf.java,final String username = config.getUsername();,if (config != null ) final String username = config.getUsername();
PoolElf.java,final String password = config.getPassword();,if (config != null ) final String password = config.getPassword();
PoolElf.java,final String dsClassName = config.getDataSourceClassName();,if (config != null ) final String dsClassName = config.getDataSourceClassName();
PoolElf.java,final String driverClassName = config.getDriverClassName();,if (config != null ) final String driverClassName = config.getDriverClassName();
PoolElf.java,final Properties dataSourceProperties = config.getDataSourceProperties();,if (config != null ) final Properties dataSourceProperties = config.getDataSourceProperties();
PoolElf.java,DataSource dataSource = config.getDataSource();,if (config != null ) DataSource dataSource = config.getDataSource();
PoolElf.java,final MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();,if (ManagementFactory != null ) final MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();
PoolElf.java,final MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();,if (ManagementFactory != null ) final MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();
PoolElf.java,final int originalTimeout = connection.getNetworkTimeout();,if (connection != null ) final int originalTimeout = connection.getNetworkTimeout();
TestPropertySetter.java,HikariConfig config = new HikariConfig(file.getPath());,if (HikariConfig(file != null ) HikariConfig config = new HikariConfig(file.getPath());
TestPropertySetter.java,HikariConfig config = new HikariConfig(file.getPath());,if (HikariConfig(file != null ) HikariConfig config = new HikariConfig(file.getPath());
TestPropertySetter.java,HikariConfig config = new HikariConfig(file.getPath());,if (HikariConfig(file != null ) HikariConfig config = new HikariConfig(file.getPath());
ConnectionProxy.java,lastAccess = clockSource.currentTime();,if (clockSource != null ) lastAccess = clockSource.currentTime();
DriverDataSource.java,this.driver = (Driver) driverClass.newInstance();,if (driverClass != null ) this.driver = (Driver) driverClass.newInstance();
PoolElf.java,dataSource = config.getDataSource();,if (config != null ) dataSource = config.getDataSource();
PoolElf.java,originalTimeout = connection.getNetworkTimeout();,if (connection != null ) originalTimeout = connection.getNetworkTimeout();
PoolElf.java,originalTimeout = connection.getNetworkTimeout();,if (connection != null ) originalTimeout = connection.getNetworkTimeout();
PoolElf.java,final String dsClassName = config.getDataSourceClassName();,if (config != null ) final String dsClassName = config.getDataSourceClassName();
PoolElf.java,final String jdbcUrl = config.getJdbcUrl();,if (config != null ) final String jdbcUrl = config.getJdbcUrl();
DriverDataSource.java,this.driver = (Driver) driverClass.newInstance();,if (driverClass != null ) this.driver = (Driver) driverClass.newInstance();
PoolElf.java,DataSource dataSource = config.getDataSource();,if (config != null ) DataSource dataSource = config.getDataSource();
PoolElf.java,final int networkTimeout = connection.getNetworkTimeout();,if (connection != null ) final int networkTimeout = connection.getNetworkTimeout();
HikariPool.java,this.catalog = config.getCatalog();,if (config != null ) this.catalog = config.getCatalog();
HikariPool.java,this.isReadOnly = config.isReadOnly();,if (config != null ) this.isReadOnly = config.isReadOnly();
HikariPool.java,this.isAutoCommit = config.isAutoCommit();,if (config != null ) this.isAutoCommit = config.isAutoCommit();
HikariPool.java,this.isIsolateInternalQueries = config.isIsolateInternalQueries();,if (config != null ) this.isIsolateInternalQueries = config.isIsolateInternalQueries();
HikariPool.java,this.transactionIsolation = getTransactionIsolation(config.getTransactionIsolation());,if (getTransactionIsolation(config != null ) this.transactionIsolation = getTransactionIsolation(config.getTransactionIsolation());
HikariPool.java,"final int originalTimeout = poolElf.getAndSetNetworkTimeout(connection, config.getValidationTimeout());","if (config != null ) final int originalTimeout = poolElf.getAndSetNetworkTimeout(connection, config.getValidationTimeout());"
HikariPool.java,connectionTimeout = config.getConnectionTimeout(); // refresh member in case it changed,if (changed != null ) connectionTimeout = config.getConnectionTimeout(); // refresh member in case it changed
PoolElf.java,this.poolName = configuration.getPoolName();,if (configuration != null ) this.poolName = configuration.getPoolName();
PoolElf.java,final MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();,if (ManagementFactory != null ) final MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();
PoolElf.java,final MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();,if (ManagementFactory != null ) final MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();
ConnectionStateTest.java,int transactionIsolation = UtilityElf.getTransactionIsolation(config.getTransactionIsolation());,if (UtilityElf != null ) int transactionIsolation = UtilityElf.getTransactionIsolation(config.getTransactionIsolation());
HikariPool.java,this.dataSource = poolUtils.initializeDataSource();,if (poolUtils != null ) this.dataSource = poolUtils.initializeDataSource();
HikariPool.java,"final int originalTimeout = poolUtils.getAndSetNetworkTimeout(connection, config.getValidationTimeout());","if (config != null ) final int originalTimeout = poolUtils.getAndSetNetworkTimeout(connection, config.getValidationTimeout());"
ConcurrentBag.java,startSeq = synchronizer.currentSequence();,if (synchronizer != null ) startSeq = synchronizer.currentSequence();
ConcurrentBag.java,addItemFuture = listener.addBagItem();,if (listener != null ) addItemFuture = listener.addBagItem();
Sequence.java,longAdder = constructor.newInstance();,if (constructor != null ) longAdder = constructor.newInstance();
ConcurrentBag.java,startSeq = synchronizer.getSequence();,if (synchronizer != null ) startSeq = synchronizer.getSequence();
CodahaleHealthChecker.java,final HikariConfig hikariConfig = pool.getConfiguration();,if (pool != null ) final HikariConfig hikariConfig = pool.getConfiguration();
HikariPool.java,final int minimumIdle = configuration.getMinimumIdle();,if (configuration != null ) final int minimumIdle = configuration.getMinimumIdle();
HikariPool.java,final int maxPoolSize = configuration.getMaximumPoolSize();,if (configuration != null ) final int maxPoolSize = configuration.getMaximumPoolSize();
HikariPool.java,"final int originalTimeout = poolUtils.getAndSetNetworkTimeout(connection, configuration.getValidationTimeout());","if (configuration != null ) final int originalTimeout = poolUtils.getAndSetNetworkTimeout(connection, configuration.getValidationTimeout());"
HikariPool.java,connectionTimeout = configuration.getConnectionTimeout(); // refresh member in case it changed,if (changed != null ) connectionTimeout = configuration.getConnectionTimeout(); // refresh member in case it changed
HikariPool.java,final long idleTimeout = configuration.getIdleTimeout();,if (configuration != null ) final long idleTimeout = configuration.getIdleTimeout();
HikariPool.java,this.validationTimeout = config.getValidationTimeout();,if (config != null ) this.validationTimeout = config.getValidationTimeout();
ConcurrentBag.java,this.sequence = Sequence.Factory.create();,if (Sequence != null ) this.sequence = Sequence.Factory.create();
ConcurrentBag.java,startSeq = sequence.get();,if (sequence != null ) startSeq = sequence.get();
HikariPool.java,final long now = System.currentTimeMillis();,if (System != null ) final long now = System.currentTimeMillis();
HikariMBeanElf.java,final MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();,if (ManagementFactory != null ) final MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();
HikariMBeanElf.java,final MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();,if (ManagementFactory != null ) final MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();
HikariPool.java,this.username = config.getUsername();,if (config != null ) this.username = config.getUsername();
HikariPool.java,this.password = config.getPassword();,if (config != null ) this.password = config.getPassword();
HikariPool.java,this.catalog = config.getCatalog();,if (config != null ) this.catalog = config.getCatalog();
HikariPool.java,this.transactionIsolation = getTransactionIsolation(config.getTransactionIsolation());,if (getTransactionIsolation(config != null ) this.transactionIsolation = getTransactionIsolation(config.getTransactionIsolation());
HikariPool.java,this.isIsolateInternalQueries = config.isIsolateInternalQueries();,if (config != null ) this.isIsolateInternalQueries = config.isIsolateInternalQueries();
HikariPool.java,this.houseKeepingExecutorService = config.getScheduledExecutorService();,if (config != null ) this.houseKeepingExecutorService = config.getScheduledExecutorService();
HikariPool.java,ResultSet rs = statement.executeQuery(configuration.getConnectionTestQuery());,if (statement != null ) ResultSet rs = statement.executeQuery(configuration.getConnectionTestQuery());
JavassistProxyFactory.java,ClassLoader contextClassLoader = Thread.currentThread().getContextClassLoader();,if (Thread != null ) ClassLoader contextClassLoader = Thread.currentThread().getContextClassLoader();
JavassistProxyFactory.java,String superClassName = superClass.getName();,if (superClass != null ) String superClassName = superClass.getName();
CodaHaleMetricsTracker.java,final String poolName = pool.getConfiguration().getPoolName();,if (pool != null ) final String poolName = pool.getConfiguration().getPoolName();
CodaHaleMetricsTracker.java,final String poolName = pool.getConfiguration().getPoolName();,if (pool != null ) final String poolName = pool.getConfiguration().getPoolName();
ConcurrentBag.java,startSeq = sequence.sum();,if (sequence != null ) startSeq = sequence.sum();
TestJNDI.java,final long start = System.currentTimeMillis();,if (System != null ) final long start = System.currentTimeMillis();
TestJNDI.java,this.lastAccess = System.currentTimeMillis();,if (System != null ) this.lastAccess = System.currentTimeMillis();
TestJNDI.java,lastAccess = System.currentTimeMillis();,if (System != null ) lastAccess = System.currentTimeMillis();
TestJNDI.java,lastAccess = System.currentTimeMillis();,if (System != null ) lastAccess = System.currentTimeMillis();
TestJNDI.java,lastAccess = System.currentTimeMillis();,if (System != null ) lastAccess = System.currentTimeMillis();
TestJNDI.java,lastAccess = System.currentTimeMillis();,if (System != null ) lastAccess = System.currentTimeMillis();
TestJNDI.java,lastAccess = System.currentTimeMillis();,if (System != null ) lastAccess = System.currentTimeMillis();
TestJNDI.java,final long start = System.currentTimeMillis();,if (System != null ) final long start = System.currentTimeMillis();
TestJNDI.java,long startNanos = System.nanoTime();,if (System != null ) long startNanos = System.nanoTime();
TestJNDI.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
TestJNDI.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
TestJNDI.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
TestJNDI.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
TestJNDI.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
ConcurrentBag.java,final int size = list.size();,if (list != null ) final int size = list.size();
ConcurrentBag.java,final T bagEntry = list.removeLast();,if (list != null ) final T bagEntry = list.removeLast();
ConcurrentBag.java,final IConcurrentBagEntry bagEntry = list.remove(i).get();,if (list != null ) final IConcurrentBagEntry bagEntry = list.remove(i).get();
TestConnectionCloseBlocking.java,long startNanos = System.nanoTime();,if (System != null ) long startNanos = System.nanoTime();
TestConnectionCloseBlocking.java,startNanos = System.nanoTime();,if (System != null ) startNanos = System.nanoTime();
TestConnectionTimeoutRetry.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
TestConnectionTimeoutRetry.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnectionTimeoutRetry.java,long timeout = config.getConnectionTimeout();,if (config != null ) long timeout = config.getConnectionTimeout();
TestConnectionTimeoutRetry.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
TestConnectionTimeoutRetry.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnectionTimeoutRetry.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
TestConnectionTimeoutRetry.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
TestConnectionTimeoutRetry.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnectionTimeoutRetry.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
ConnectionProxy.java,lastAccess = System.currentTimeMillis();,if (System != null ) lastAccess = System.currentTimeMillis();
ConnectionProxy.java,lastAccess = System.currentTimeMillis();,if (System != null ) lastAccess = System.currentTimeMillis();
HikariPool.java,this.connectionTimeout = config.getConnectionTimeout();,if (config != null ) this.connectionTimeout = config.getConnectionTimeout();
HikariPool.java,final long start = System.currentTimeMillis();,if (System != null ) final long start = System.currentTimeMillis();
HikariPool.java,final long now = System.currentTimeMillis();,if (System != null ) final long now = System.currentTimeMillis();
HikariPool.java,final long start = System.currentTimeMillis();,if (System != null ) final long start = System.currentTimeMillis();
HikariPool.java,connectionTimeout = configuration.getConnectionTimeout(); // refresh member in case it changed,if (changed != null ) connectionTimeout = configuration.getConnectionTimeout(); // refresh member in case it changed
HikariPool.java,final long now = System.currentTimeMillis();,if (System != null ) final long now = System.currentTimeMillis();
HikariPool.java,final long idleTimeout = configuration.getIdleTimeout();,if (configuration != null ) final long idleTimeout = configuration.getIdleTimeout();
PoolBagEntry.java,this.lastAccess = System.currentTimeMillis();,if (System != null ) this.lastAccess = System.currentTimeMillis();
ConnectionProxy.java,lastAccess = System.currentTimeMillis();,if (System != null ) lastAccess = System.currentTimeMillis();
ShutdownTest.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
TestConnectionCloseBlocking.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
TestConnectionCloseBlocking.java,start = System.currentTimeMillis();,if (System != null ) start = System.currentTimeMillis();
ConnectionProxy.java,lastAccess = System.currentTimeMillis();,if (System != null ) lastAccess = System.currentTimeMillis();
Striped64.java,UNSAFE = sun.misc.Unsafe.getUnsafe();,if (sun != null ) UNSAFE = sun.misc.Unsafe.getUnsafe();
Striped64.java,UNSAFE = sun.misc.Unsafe.getUnsafe();,if (sun != null ) UNSAFE = sun.misc.Unsafe.getUnsafe();
Striped64.java,UNSAFE = sun.misc.Unsafe.getUnsafe();,if (sun != null ) UNSAFE = sun.misc.Unsafe.getUnsafe();
ConcurrentBag.java,startSeq = sequence.sum();,if (sequence != null ) startSeq = sequence.sum();
ConcurrentBag.java,addItemFuture = listener.addBagItem();,if (listener != null ) addItemFuture = listener.addBagItem();
ConcurrentBag.java,startSeq = sequence.get();,if (sequence != null ) startSeq = sequence.get();
ConcurrentBag.java,final long checkInSeq = sequence.incrementAndGet();,if (sequence != null ) final long checkInSeq = sequence.incrementAndGet();
ConcurrentBag.java,final IConcurrentBagEntry bagEntry = list.remove(i).get();,if (list != null ) final IConcurrentBagEntry bagEntry = list.remove(i).get();
HikariPool.java,final long start = System.currentTimeMillis();,if (System != null ) final long start = System.currentTimeMillis();
HikariPool.java,final int maxPoolSize = configuration.getMaximumPoolSize();,if (configuration != null ) final int maxPoolSize = configuration.getMaximumPoolSize();
HikariPool.java,final int maxPoolSize = configuration.getMaximumPoolSize();,if (configuration != null ) final int maxPoolSize = configuration.getMaximumPoolSize();
DriverDataSource.java,Enumeration<Driver> drivers = DriverManager.getDrivers();,if (DriverManager != null ) Enumeration<Driver> drivers = DriverManager.getDrivers();
DriverDataSource.java,Driver d = drivers.nextElement();,if (drivers != null ) Driver d = drivers.nextElement();
PoolBagEntry.java,final long maxLifetime = pool.configuration.getMaxLifetime();,if (pool != null ) final long maxLifetime = pool.configuration.getMaxLifetime();
ConcurrentBag.java,final long claimedSeq = sequence.get();,if (sequence != null ) final long claimedSeq = sequence.get();
HikariPool.java,final long start = System.nanoTime();,if (System != null ) final long start = System.nanoTime();
PoolUtilities.java,Statement statement = connection.createStatement();,if (connection != null ) Statement statement = connection.createStatement();
HikariPool.java,final long start = System.currentTimeMillis();,if (System != null ) final long start = System.currentTimeMillis();
HikariPool.java,final long now = System.currentTimeMillis();,if (System != null ) final long now = System.currentTimeMillis();
HikariPool.java,final long start = System.currentTimeMillis();,if (System != null ) final long start = System.currentTimeMillis();
HikariPool.java,final long now = System.currentTimeMillis();,if (System != null ) final long now = System.currentTimeMillis();
HikariPool.java,final long idleTimeout = configuration.getIdleTimeout();,if (configuration != null ) final long idleTimeout = configuration.getIdleTimeout();
PoolBagEntry.java,this.lastAccess = System.currentTimeMillis();,if (System != null ) this.lastAccess = System.currentTimeMillis();
ConnectionProxy.java,lastAccess = System.currentTimeMillis();,if (System != null ) lastAccess = System.currentTimeMillis();
ConnectionProxy.java,lastAccess = System.currentTimeMillis();,if (System != null ) lastAccess = System.currentTimeMillis();
PostgresTest.java,final long start = System.currentTimeMillis();,if (System != null ) final long start = System.currentTimeMillis();
PostgresTest.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
PostgresTest.java,final long start = System.currentTimeMillis();,if (System != null ) final long start = System.currentTimeMillis();
ShutdownTest.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
TestConnectionCloseBlocking.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
TestConnectionCloseBlocking.java,start = System.currentTimeMillis();,if (System != null ) start = System.currentTimeMillis();
TestConnectionTimeoutRetry.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
TestConnectionTimeoutRetry.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
TestConnectionTimeoutRetry.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
TestConnectionTimeoutRetry.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
TestConnectionTimeoutRetry.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
ConcurrentBag.java,final IConcurrentBagEntry bagEntry = list.remove(i).get();,if (list != null ) final IConcurrentBagEntry bagEntry = list.remove(i).get();
HikariPool.java,final int tc = totalConnections.decrementAndGet();,if (totalConnections != null ) final int tc = totalConnections.decrementAndGet();
BaseHikariPool.java,bagEntry.lastAccess = System.currentTimeMillis();,if (System != null ) bagEntry.lastAccess = System.currentTimeMillis();
DriverDataSource.java,Enumeration<Driver> drivers = DriverManager.getDrivers();,if (DriverManager != null ) Enumeration<Driver> drivers = DriverManager.getDrivers();
DriverDataSource.java,Driver d = drivers.nextElement();,if (drivers != null ) Driver d = drivers.nextElement();
JavassistProxyFactory.java,ClassLoader contextClassLoader = Thread.currentThread().getContextClassLoader();,if (Thread != null ) ClassLoader contextClassLoader = Thread.currentThread().getContextClassLoader();
JavassistProxyFactory.java,String packageName = JavassistProxyFactory.class.getPackage().getName();,if (JavassistProxyFactory != null ) String packageName = JavassistProxyFactory.class.getPackage().getName();
JavassistProxyFactory.java,String superClassName = superClass.getName();,if (superClass != null ) String superClassName = superClass.getName();
JavassistProxyFactory.java,CtClass intfCt = classPool.getCtClass(intf.getName());,if (classPool != null ) CtClass intfCt = classPool.getCtClass(intf.getName());
JavassistProxyFactory.java,final String signature = intfMethod.getName() + intfMethod.getSignature();,if (intfMethod != null ) final String signature = intfMethod.getName() + intfMethod.getSignature();
HikariPool.java,final int maxPoolSize = configuration.getMaximumPoolSize();,if (configuration != null ) final int maxPoolSize = configuration.getMaximumPoolSize();
HikariPool.java,final int tc = totalConnections.decrementAndGet();,if (totalConnections != null ) final int tc = totalConnections.decrementAndGet();
HikariPool.java,connectionTimeout = configuration.getConnectionTimeout(); // refresh member in case it changed,if (changed != null ) connectionTimeout = configuration.getConnectionTimeout(); // refresh member in case it changed
HikariPool.java,final long now = System.currentTimeMillis();,if (System != null ) final long now = System.currentTimeMillis();
HikariPool.java,final long idleTimeout = configuration.getIdleTimeout();,if (configuration != null ) final long idleTimeout = configuration.getIdleTimeout();
TestMetrics.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestMetrics.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestMetrics.java,connection = ds.getConnection();,if (ds != null ) connection = ds.getConnection();
OSGiBundleTest.java,Bundle[] bundles = context.getBundles();,if (context != null ) Bundle[] bundles = context.getBundles();
HikariPool.java,final int maxPoolSize = configuration.getMaximumPoolSize();,if (configuration != null ) final int maxPoolSize = configuration.getMaximumPoolSize();
HikariPool.java,final int tc = totalConnections.decrementAndGet();,if (totalConnections != null ) final int tc = totalConnections.decrementAndGet();
HikariPool.java,connectionTimeout = configuration.getConnectionTimeout(); // refresh member in case it changed,if (changed != null ) connectionTimeout = configuration.getConnectionTimeout(); // refresh member in case it changed
HikariPool.java,validationTimeout = configuration.getValidationTimeout(); // refresh member in case it changed,if (changed != null ) validationTimeout = configuration.getValidationTimeout(); // refresh member in case it changed
HikariPool.java,final long now = System.currentTimeMillis();,if (System != null ) final long now = System.currentTimeMillis();
HikariPool.java,final long idleTimeout = configuration.getIdleTimeout();,if (configuration != null ) final long idleTimeout = configuration.getIdleTimeout();
TestConnections.java,Object[] array = multiPool.keySet().toArray();,if (multiPool != null ) Object[] array = multiPool.keySet().toArray();
HikariPool.java,this.connectionTimeout = configuration.getConnectionTimeout();,if (configuration != null ) this.connectionTimeout = configuration.getConnectionTimeout();
HikariPool.java,this.validationTimeout = configuration.getValidationTimeout();,if (configuration != null ) this.validationTimeout = configuration.getValidationTimeout();
HikariPool.java,this.isReadOnly = configuration.isReadOnly();,if (configuration != null ) this.isReadOnly = configuration.isReadOnly();
HikariPool.java,this.isAutoCommit = configuration.isAutoCommit();,if (configuration != null ) this.isAutoCommit = configuration.isAutoCommit();
HikariPool.java,this.catalog = configuration.getCatalog();,if (configuration != null ) this.catalog = configuration.getCatalog();
HikariPool.java,this.transactionIsolation = getTransactionIsolation(configuration.getTransactionIsolation());,if (getTransactionIsolation(configuration != null ) this.transactionIsolation = getTransactionIsolation(configuration.getTransactionIsolation());
HikariPool.java,this.isIsolateInternalQueries = configuration.isIsolateInternalQueries();,if (configuration != null ) this.isIsolateInternalQueries = configuration.isIsolateInternalQueries();
HikariPool.java,final int maxPoolSize = configuration.getMaximumPoolSize();,if (configuration != null ) final int maxPoolSize = configuration.getMaximumPoolSize();
HikariPool.java,final int tc = totalConnections.decrementAndGet();,if (totalConnections != null ) final int tc = totalConnections.decrementAndGet();
HikariPool.java,Statement statement = connection.createStatement();,if (connection != null ) Statement statement = connection.createStatement();
HikariPool.java,connectionTimeout = configuration.getConnectionTimeout(); // refresh member in case it changed,if (changed != null ) connectionTimeout = configuration.getConnectionTimeout(); // refresh member in case it changed
HikariPool.java,final long now = System.currentTimeMillis();,if (System != null ) final long now = System.currentTimeMillis();
HikariPool.java,final long idleTimeout = configuration.getIdleTimeout();,if (configuration != null ) final long idleTimeout = configuration.getIdleTimeout();
JavassistProxyFactory.java,ClassLoader contextClassLoader = Thread.currentThread().getContextClassLoader();,if (Thread != null ) ClassLoader contextClassLoader = Thread.currentThread().getContextClassLoader();
JavassistProxyFactory.java,String packageName = JavassistProxyFactory.class.getPackage().getName();,if (JavassistProxyFactory != null ) String packageName = JavassistProxyFactory.class.getPackage().getName();
JavassistProxyFactory.java,String methodName = method.getName();,if (method != null ) String methodName = method.getName();
JavassistProxyFactory.java,String superClassName = superClass.getName();,if (superClass != null ) String superClassName = superClass.getName();
JavassistProxyFactory.java,CtClass intfCt = classPool.getCtClass(intf.getName());,if (classPool != null ) CtClass intfCt = classPool.getCtClass(intf.getName());
JavassistProxyFactory.java,final String signature = intfMethod.getName() + intfMethod.getSignature();,if (intfMethod != null ) final String signature = intfMethod.getName() + intfMethod.getSignature();
OSGiBundleTest.java,Bundle[] bundles = context.getBundles();,if (context != null ) Bundle[] bundles = context.getBundles();
HikariPool.java,final int maxPoolSize = configuration.getMaximumPoolSize();,if (configuration != null ) final int maxPoolSize = configuration.getMaximumPoolSize();
HikariPool.java,final int tc = totalConnections.decrementAndGet();,if (totalConnections != null ) final int tc = totalConnections.decrementAndGet();
HikariPool.java,connectionTimeout = configuration.getConnectionTimeout(); // refresh member in case it changed,if (changed != null ) connectionTimeout = configuration.getConnectionTimeout(); // refresh member in case it changed
HikariPool.java,validationTimeout = configuration.getValidationTimeout(); // refresh member in case it changed,if (changed != null ) validationTimeout = configuration.getValidationTimeout(); // refresh member in case it changed
HikariPool.java,final long now = System.currentTimeMillis();,if (System != null ) final long now = System.currentTimeMillis();
HikariPool.java,final long idleTimeout = configuration.getIdleTimeout();,if (configuration != null ) final long idleTimeout = configuration.getIdleTimeout();
HikariPool.java,Statement statement = connection.createStatement();,if (connection != null ) Statement statement = connection.createStatement();
JavassistProxyFactory.java,ClassLoader contextClassLoader = Thread.currentThread().getContextClassLoader();,if (Thread != null ) ClassLoader contextClassLoader = Thread.currentThread().getContextClassLoader();
JavassistProxyFactory.java,String packageName = JavassistProxyFactory.class.getPackage().getName();,if (JavassistProxyFactory != null ) String packageName = JavassistProxyFactory.class.getPackage().getName();
JavassistProxyFactory.java,String methodName = method.getName();,if (method != null ) String methodName = method.getName();
JavassistProxyFactory.java,String superClassName = superClass.getName();,if (superClass != null ) String superClassName = superClass.getName();
JavassistProxyFactory.java,CtClass intfCt = classPool.getCtClass(intf.getName());,if (classPool != null ) CtClass intfCt = classPool.getCtClass(intf.getName());
JavassistProxyFactory.java,final String signature = intfMethod.getName() + intfMethod.getSignature();,if (intfMethod != null ) final String signature = intfMethod.getName() + intfMethod.getSignature();
JavassistProxyFactory.java,ClassLoader contextClassLoader = Thread.currentThread().getContextClassLoader();,if (Thread != null ) ClassLoader contextClassLoader = Thread.currentThread().getContextClassLoader();
JavassistProxyFactory.java,String packageName = JavassistProxyFactory.class.getPackage().getName();,if (JavassistProxyFactory != null ) String packageName = JavassistProxyFactory.class.getPackage().getName();
JavassistProxyFactory.java,String superClassName = superClass.getName();,if (superClass != null ) String superClassName = superClass.getName();
JavassistProxyFactory.java,CtClass intfCt = classPool.getCtClass(intf.getName());,if (classPool != null ) CtClass intfCt = classPool.getCtClass(intf.getName());
JavassistProxyFactory.java,final String signature = intfMethod.getName() + intfMethod.getSignature();,if (intfMethod != null ) final String signature = intfMethod.getName() + intfMethod.getSignature();
CodaHaleShim.java,ClassLoader contextClassLoader = Thread.currentThread().getContextClassLoader();,if (Thread != null ) ClassLoader contextClassLoader = Thread.currentThread().getContextClassLoader();
PostgresTest.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
HikariPool.java,final int minIdle = configuration.getMinimumIdle();,if (configuration != null ) final int minIdle = configuration.getMinimumIdle();
HikariPool.java,final int minIdle = configuration.getMinimumIdle();,if (configuration != null ) final int minIdle = configuration.getMinimumIdle();
ConcurrentBag.java,startSeq = sequence.longValue();,if (sequence != null ) startSeq = sequence.longValue();
ConcurrentBag.java,final long startScan = System.nanoTime();,if (System != null ) final long startScan = System.nanoTime();
BaseHikariPool.java,final long start = System.nanoTime();,if (System != null ) final long start = System.nanoTime();
BaseHikariPool.java,final long now = System.nanoTime();,if (System != null ) final long now = System.nanoTime();
BaseHikariPool.java,bagEntry.lastAccess = System.nanoTime();,if (System != null ) bagEntry.lastAccess = System.nanoTime();
BaseHikariPool.java,final long start = System.nanoTime();,if (System != null ) final long start = System.nanoTime();
PoolBagEntry.java,this.lastAccess = System.nanoTime();,if (System != null ) this.lastAccess = System.nanoTime();
ShutdownTest.java,long start = System.nanoTime();,if (System != null ) long start = System.nanoTime();
TestConnectionCloseBlocking.java,long start = System.nanoTime();,if (System != null ) long start = System.nanoTime();
TestConnectionCloseBlocking.java,start = System.nanoTime();,if (System != null ) start = System.nanoTime();
HikariPool.java,final long now = System.nanoTime();,if (System != null ) final long now = System.nanoTime();
HikariPool.java,final long idleTimeout = TimeUnit.MILLISECONDS.toNanos(configuration.getIdleTimeout());,if (TimeUnit != null ) final long idleTimeout = TimeUnit.MILLISECONDS.toNanos(configuration.getIdleTimeout());
HikariPool.java,final long now = System.nanoTime();,if (System != null ) final long now = System.nanoTime();
HikariPool.java,final long idleTimeout = TimeUnit.MILLISECONDS.toNanos(configuration.getIdleTimeout());,if (TimeUnit != null ) final long idleTimeout = TimeUnit.MILLISECONDS.toNanos(configuration.getIdleTimeout());
BaseHikariPool.java,final long start = System.currentTimeMillis();,if (System != null ) final long start = System.currentTimeMillis();
BaseHikariPool.java,final long now = System.currentTimeMillis();,if (System != null ) final long now = System.currentTimeMillis();
BaseHikariPool.java,bagEntry.lastAccess = System.currentTimeMillis();,if (System != null ) bagEntry.lastAccess = System.currentTimeMillis();
BaseHikariPool.java,final long start = System.currentTimeMillis();,if (System != null ) final long start = System.currentTimeMillis();
PoolBagEntry.java,this.lastAccess = System.currentTimeMillis();,if (System != null ) this.lastAccess = System.currentTimeMillis();
ShutdownTest.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
TestConnectionCloseBlocking.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
TestConnectionCloseBlocking.java,start = System.currentTimeMillis();,if (System != null ) start = System.currentTimeMillis();
HikariPool.java,final long now = System.currentTimeMillis();,if (System != null ) final long now = System.currentTimeMillis();
HikariPool.java,final long idleTimeout = configuration.getIdleTimeout();,if (configuration != null ) final long idleTimeout = configuration.getIdleTimeout();
HikariPool.java,final long now = System.currentTimeMillis();,if (System != null ) final long now = System.currentTimeMillis();
HikariPool.java,final long idleTimeout = configuration.getIdleTimeout();,if (configuration != null ) final long idleTimeout = configuration.getIdleTimeout();
ConcurrentBag.java,final AbstractBagEntry bagEntry = list.remove(i).get();,if (list != null ) final AbstractBagEntry bagEntry = list.remove(i).get();
PoolBagEntry.java,lastAccess = System.currentTimeMillis();,if (System != null ) lastAccess = System.currentTimeMillis();
ConcurrentBag.java,final BagEntry bagEntry = list.remove(i).get();,if (list != null ) final BagEntry bagEntry = list.remove(i).get();
ConcurrentBag.java,final BagEntry bagEntry = list.remove(i).get();,if (list != null ) final BagEntry bagEntry = list.remove(i).get();
ConcurrentBag.java,final long startScan = System.nanoTime();,if (System != null ) final long startScan = System.nanoTime();
ConcurrentBag.java,startSeq = sequence.longValue();,if (sequence != null ) startSeq = sequence.longValue();
ConcurrentBag.java,final long checkInSeq = sequence.incrementAndGet();,if (sequence != null ) final long checkInSeq = sequence.incrementAndGet();
PoolUtilities.java,argClasses[i] = args[i].getClass();,if (args[i] != null ) argClasses[i] = args[i].getClass();
ConnectionStateTest.java,int transactionIsolation = PoolUtilities.getTransactionIsolation(config.getTransactionIsolation());,if (PoolUtilities != null ) int transactionIsolation = PoolUtilities.getTransactionIsolation(config.getTransactionIsolation());
PoolUtilities.java,argClasses[i] = args[i].getClass();,if (args[i] != null ) argClasses[i] = args[i].getClass();
PoolUtilities.java,final int networkTimeout = connection.getNetworkTimeout();,if (connection != null ) final int networkTimeout = connection.getNetworkTimeout();
BargeTest.java,final Snapshot snapshot = histogram.getSnapshot();,if (histogram != null ) final Snapshot snapshot = histogram.getSnapshot();
HikariPool.java,this.connectionTimeout = configuration.getConnectionTimeout();,if (configuration != null ) this.connectionTimeout = configuration.getConnectionTimeout();
HikariPool.java,this.isReadOnly = configuration.isReadOnly();,if (configuration != null ) this.isReadOnly = configuration.isReadOnly();
HikariPool.java,this.isAutoCommit = configuration.isAutoCommit();,if (configuration != null ) this.isAutoCommit = configuration.isAutoCommit();
HikariPool.java,this.catalog = configuration.getCatalog();,if (configuration != null ) this.catalog = configuration.getCatalog();
HikariPool.java,this.transactionIsolation = getTransactionIsolation(configuration.getTransactionIsolation());,if (getTransactionIsolation(configuration != null ) this.transactionIsolation = getTransactionIsolation(configuration.getTransactionIsolation());
HikariPool.java,this.isIsolateInternalQueries = configuration.isIsolateInternalQueries();,if (configuration != null ) this.isIsolateInternalQueries = configuration.isIsolateInternalQueries();
HikariPool.java,final long start = System.currentTimeMillis();,if (System != null ) final long start = System.currentTimeMillis();
HikariPool.java,final long now = System.currentTimeMillis();,if (System != null ) final long now = System.currentTimeMillis();
HikariPool.java,bagEntry.lastAccess = System.currentTimeMillis();,if (System != null ) bagEntry.lastAccess = System.currentTimeMillis();
HikariPool.java,final long start = System.currentTimeMillis();,if (System != null ) final long start = System.currentTimeMillis();
HikariPool.java,this.connectionTimeout = configuration.getConnectionTimeout();,if (configuration != null ) this.connectionTimeout = configuration.getConnectionTimeout();
HikariPool.java,this.isReadOnly = configuration.isReadOnly();,if (configuration != null ) this.isReadOnly = configuration.isReadOnly();
HikariPool.java,this.isAutoCommit = configuration.isAutoCommit();,if (configuration != null ) this.isAutoCommit = configuration.isAutoCommit();
HikariPool.java,this.catalog = configuration.getCatalog();,if (configuration != null ) this.catalog = configuration.getCatalog();
HikariPool.java,this.transactionIsolation = getTransactionIsolation(configuration.getTransactionIsolation());,if (getTransactionIsolation(configuration != null ) this.transactionIsolation = getTransactionIsolation(configuration.getTransactionIsolation());
HikariPool.java,this.isIsolateInternalQueries = configuration.isIsolateInternalQueries();,if (configuration != null ) this.isIsolateInternalQueries = configuration.isIsolateInternalQueries();
HikariPool.java,final long start = System.currentTimeMillis();,if (System != null ) final long start = System.currentTimeMillis();
HikariPool.java,final long now = System.currentTimeMillis();,if (System != null ) final long now = System.currentTimeMillis();
HikariPool.java,bagEntry.lastAccess = System.currentTimeMillis();,if (System != null ) bagEntry.lastAccess = System.currentTimeMillis();
HikariPool.java,final long start = System.currentTimeMillis();,if (System != null ) final long start = System.currentTimeMillis();
ConcurrentBag.java,final BagEntry bagEntry = list.remove(i).get();,if (list != null ) final BagEntry bagEntry = list.remove(i).get();
ConcurrentBag.java,final long startScan = System.nanoTime();,if (System != null ) final long startScan = System.nanoTime();
ConcurrentBag.java,startSeq = sequence.longValue();,if (sequence != null ) startSeq = sequence.longValue();
ConcurrentBag.java,final long checkInSeq = sequence.incrementAndGet();,if (sequence != null ) final long checkInSeq = sequence.incrementAndGet();
PoolUtilities.java,argClasses[i] = args[i].getClass();,if (args[i] != null ) argClasses[i] = args[i].getClass();
PoolUtilities.java,final int networkTimeout = connection.getNetworkTimeout();,if (connection != null ) final int networkTimeout = connection.getNetworkTimeout();
ShutdownTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
PropertyBeanSetter.java,Object key = propertyNames.nextElement();,if (propertyNames != null ) Object key = propertyNames.nextElement();
PropertyBeanSetter.java,String propName = key.toString();,if (key != null ) String propName = key.toString();
PropertyBeanSetter.java,"capitalized = ""set"" + propName.toUpperCase();","if (propName != null ) capitalized = ""set"" + propName.toUpperCase();"
PropertyBeanSetter.java,Method writeMethod = propertyDescriptor.getWriteMethod();,if (propertyDescriptor != null ) Method writeMethod = propertyDescriptor.getWriteMethod();
TestHibernate.java,Connection connection = provider.getConnection();,if (provider != null ) Connection connection = provider.getConnection();
HikariJNDIFactory.java,Enumeration<RefAddr> enumeration = ref.getAll();,if (ref != null ) Enumeration<RefAddr> enumeration = ref.getAll();
HikariJNDIFactory.java,RefAddr element = enumeration.nextElement();,if (enumeration != null ) RefAddr element = enumeration.nextElement();
HikariJNDIFactory.java,String type = element.getType();,if (element != null ) String type = element.getType();
HikariConnectionProvider.java,conn = this.hds.getConnection();,if (this != null ) conn = this.hds.getConnection();
CodaHaleMetricsTracker.java,innerContext = timer.time();,if (timer != null ) innerContext = timer.time();
CodaHaleShim.java,ClassLoader contextClassLoader = Thread.currentThread().getContextClassLoader();,if (Thread != null ) ClassLoader contextClassLoader = Thread.currentThread().getContextClassLoader();
HikariMBeanElf.java,final MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();,if (ManagementFactory != null ) final MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();
HikariMBeanElf.java,MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();,if (ManagementFactory != null ) MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();
PoolBagEntry.java,lastAccess = System.currentTimeMillis();,if (System != null ) lastAccess = System.currentTimeMillis();
ClosedConnection.java,final String methodName = method.getName();,if (method != null ) final String methodName = method.getName();
ConnectionProxy.java,String sqlState = sqle.getSQLState();,if (sqle != null ) String sqlState = sqle.getSQLState();
ConnectionProxy.java,final int size = openStatements.size();,if (openStatements != null ) final int size = openStatements.size();
ConnectionStateTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
ConnectionStateTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
ConnectionStateTest.java,int transactionIsolation = PoolUtilities.getTransactionIsolation(config.getTransactionIsolation());,if (PoolUtilities != null ) int transactionIsolation = PoolUtilities.getTransactionIsolation(config.getTransactionIsolation());
ConnectionStateTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
ConnectionStateTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
ConnectionStateTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
ConnectionStateTest.java,Statement statement = connection.createStatement();,if (connection != null ) Statement statement = connection.createStatement();
ExceptionTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
ExceptionTest.java,ResultSet resultSet = statement.executeQuery();,if (statement != null ) ResultSet resultSet = statement.executeQuery();
ExceptionTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
ExceptionTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
IsolationTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
IsolationTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
JdbcDriverTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
MiscTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
MiscTest.java,String s = new String(baos.toByteArray());,if (String(baos != null ) String s = new String(baos.toByteArray());
RampUpDown.java,connections[i] = ds.getConnection();,if (ds != null ) connections[i] = ds.getConnection();
ShutdownTest.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
ShutdownTest.java,connections[i] = ds.getConnection();,if (ds != null ) connections[i] = ds.getConnection();
ShutdownTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
StatementTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
StatementTest.java,Statement statement = connection.createStatement();,if (connection != null ) Statement statement = connection.createStatement();
StatementTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
StatementTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
StatementTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnectionCloseBlocking.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
TestConnectionCloseBlocking.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnectionCloseBlocking.java,start = System.currentTimeMillis();,if (System != null ) start = System.currentTimeMillis();
TestConnectionCloseBlocking.java,connection = ds.getConnection(); // on physical connection close we sleep 2 seconds,if (seconds != null ) connection = ds.getConnection(); // on physical connection close we sleep 2 seconds
TestConnectionCloseBlocking.java,Connection mockConnection = super.getConnection();,if (super != null ) Connection mockConnection = super.getConnection();
TestConnectionTimeoutRetry.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
TestConnectionTimeoutRetry.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnectionTimeoutRetry.java,long timeout = config.getConnectionTimeout();,if (config != null ) long timeout = config.getConnectionTimeout();
TestConnectionTimeoutRetry.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
TestConnectionTimeoutRetry.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnectionTimeoutRetry.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
TestConnectionTimeoutRetry.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
TestConnectionTimeoutRetry.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnectionTimeoutRetry.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
TestConnections.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnections.java,ResultSet resultSet = statement.executeQuery();,if (statement != null ) ResultSet resultSet = statement.executeQuery();
TestConnections.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnections.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnections.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnections.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnections.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnections.java,ResultSet resultSet = statement.executeQuery();,if (statement != null ) ResultSet resultSet = statement.executeQuery();
TestConnections.java,connection = ds.getConnection();,if (ds != null ) connection = ds.getConnection();
TestConnections.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnections.java,Object[] array = multiPool.keySet().toArray();,if (multiPool != null ) Object[] array = multiPool.keySet().toArray();
TestConnections.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnections.java,connection = ds.getConnection();,if (ds != null ) connection = ds.getConnection();
TestFastList.java,int size = list.size();,if (list != null ) int size = list.size();
TestFastList.java,int size = list.size();,if (list != null ) int size = list.size();
TestPropertySetter.java,HikariConfig config = new HikariConfig(file.getPath());,if (HikariConfig(file != null ) HikariConfig config = new HikariConfig(file.getPath());
TestPropertySetter.java,HikariConfig config = new HikariConfig(file.getPath());,if (HikariConfig(file != null ) HikariConfig config = new HikariConfig(file.getPath());
TestPropertySetter.java,DataSource dataSource = (DataSource) clazz.newInstance();,if (clazz != null ) DataSource dataSource = (DataSource) clazz.newInstance();
TestPropertySetter.java,DataSource dataSource = (DataSource) clazz.newInstance();,if (clazz != null ) DataSource dataSource = (DataSource) clazz.newInstance();
TestPropertySetter.java,HikariConfig config = new HikariConfig(file.getPath());,if (HikariConfig(file != null ) HikariConfig config = new HikariConfig(file.getPath());
TestPropertySetter.java,DataSource dataSource = (DataSource) clazz.newInstance();,if (clazz != null ) DataSource dataSource = (DataSource) clazz.newInstance();
TestProxies.java,Connection conn = ds.getConnection();,if (ds != null ) Connection conn = ds.getConnection();
TestProxies.java,Connection conn = ds.getConnection();,if (ds != null ) Connection conn = ds.getConnection();
TestProxies.java,Connection conn = ds.getConnection();,if (ds != null ) Connection conn = ds.getConnection();
TestProxies.java,Connection conn = ds.getConnection();,if (ds != null ) Connection conn = ds.getConnection();
UnwrapTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
StubConnection.java,foo = System.currentTimeMillis();,if (System != null ) foo = System.currentTimeMillis();
ConnectionProxy.java,"Statement proxyStatement = ProxyFactory.getProxyStatement(this, delegate.createStatement());","if (delegate != null ) Statement proxyStatement = ProxyFactory.getProxyStatement(this, delegate.createStatement());"
ConnectionProxy.java,"Statement proxyStatement = ProxyFactory.getProxyStatement(this, delegate.createStatement());","if (delegate != null ) Statement proxyStatement = ProxyFactory.getProxyStatement(this, delegate.createStatement());"
HikariPool.java,final int tc = totalConnections.decrementAndGet();,if (totalConnections != null ) final int tc = totalConnections.decrementAndGet();
HikariPool.java,final int tc = totalConnections.decrementAndGet();,if (totalConnections != null ) final int tc = totalConnections.decrementAndGet();
HikariPool.java,this.leakDetectionThreshold = configuration.getLeakDetectionThreshold();,if (configuration != null ) this.leakDetectionThreshold = configuration.getLeakDetectionThreshold();
HikariPool.java,this.leakDetectionThreshold = configuration.getLeakDetectionThreshold();,if (configuration != null ) this.leakDetectionThreshold = configuration.getLeakDetectionThreshold();
HikariPool.java,int tc = totalConnections.decrementAndGet();,if (totalConnections != null ) int tc = totalConnections.decrementAndGet();
HikariPool.java,int tc = totalConnections.decrementAndGet();,if (totalConnections != null ) int tc = totalConnections.decrementAndGet();
PropertyBeanSetter.java,String propName = propertyNames.nextElement().toString();,if (propertyNames != null ) String propName = propertyNames.nextElement().toString();
PropertyBeanSetter.java,String propName = propertyNames.nextElement().toString();,if (propertyNames != null ) String propName = propertyNames.nextElement().toString();
HikariPool.java,final long connectionTimeout = configuration.getConnectionTimeout();,if (configuration != null ) final long connectionTimeout = configuration.getConnectionTimeout();
HikariPool.java,final long connectionTimeout = configuration.getConnectionTimeout();,if (configuration != null ) final long connectionTimeout = configuration.getConnectionTimeout();
PropertyBeanSetter.java,String propName = propEntry.getKey().toString();,if (propEntry != null ) String propName = propEntry.getKey().toString();
PropertyBeanSetter.java,Object propValue = propEntry.getValue();,if (propEntry != null ) Object propValue = propEntry.getValue();
PropertyBeanSetter.java,String propName = propEntry.getKey().toString();,if (propEntry != null ) String propName = propEntry.getKey().toString();
PropertyBeanSetter.java,Object propValue = propEntry.getValue();,if (propEntry != null ) Object propValue = propEntry.getValue();
ConnectionStateTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
ConnectionStateTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
ConnectionStateTest.java,int transactionIsolation = PoolUtilities.getTransactionIsolation(config.getTransactionIsolation());,if (PoolUtilities != null ) int transactionIsolation = PoolUtilities.getTransactionIsolation(config.getTransactionIsolation());
ConnectionStateTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
ConnectionStateTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
ConnectionStateTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
ConnectionStateTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
ConnectionStateTest.java,int transactionIsolation = PoolUtilities.getTransactionIsolation(config.getTransactionIsolation());,if (PoolUtilities != null ) int transactionIsolation = PoolUtilities.getTransactionIsolation(config.getTransactionIsolation());
ConnectionStateTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
ConnectionStateTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnectionTimeoutRetry.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
TestConnectionTimeoutRetry.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnectionTimeoutRetry.java,long timeout = config.getConnectionTimeout();,if (config != null ) long timeout = config.getConnectionTimeout();
TestConnectionTimeoutRetry.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
TestConnectionTimeoutRetry.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnectionTimeoutRetry.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
TestConnectionTimeoutRetry.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
TestConnectionTimeoutRetry.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnectionTimeoutRetry.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
TestProxies.java,Connection conn = ds.getConnection();,if (ds != null ) Connection conn = ds.getConnection();
TestConnectionTimeoutRetry.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
TestConnectionTimeoutRetry.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnectionTimeoutRetry.java,long timeout = config.getConnectionTimeout();,if (config != null ) long timeout = config.getConnectionTimeout();
TestConnectionTimeoutRetry.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
TestConnectionTimeoutRetry.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnectionTimeoutRetry.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
TestConnectionTimeoutRetry.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
TestConnectionTimeoutRetry.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnectionTimeoutRetry.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
TestProxies.java,Connection conn = ds.getConnection();,if (ds != null ) Connection conn = ds.getConnection();
ConnectionProxy.java,"Statement proxyStatement = ProxyFactory.getProxyStatement(this, delegate.createStatement());","if (delegate != null ) Statement proxyStatement = ProxyFactory.getProxyStatement(this, delegate.createStatement());"
PoolUtilities.java,final int networkTimeout = connection.getNetworkTimeout();,if (connection != null ) final int networkTimeout = connection.getNetworkTimeout();
PoolUtilities.java,final int networkTimeout = connection.getNetworkTimeout();,if (connection != null ) final int networkTimeout = connection.getNetworkTimeout();
ConnectionProxy.java,"Statement proxyStatement = ProxyFactory.getProxyStatement(this, delegate.createStatement());","if (delegate != null ) Statement proxyStatement = ProxyFactory.getProxyStatement(this, delegate.createStatement());"
PoolUtilities.java,final int networkTimeout = connection.getNetworkTimeout();,if (connection != null ) final int networkTimeout = connection.getNetworkTimeout();
PoolUtilities.java,final int networkTimeout = connection.getNetworkTimeout();,if (connection != null ) final int networkTimeout = connection.getNetworkTimeout();
HikariPool.java,this.transactionIsolation = PoolUtilities.getTransactionIsolation(configuration.getTransactionIsolation());,if (PoolUtilities != null ) this.transactionIsolation = PoolUtilities.getTransactionIsolation(configuration.getTransactionIsolation());
HikariPool.java,this.transactionIsolation = PoolUtilities.getTransactionIsolation(configuration.getTransactionIsolation());,if (PoolUtilities != null ) this.transactionIsolation = PoolUtilities.getTransactionIsolation(configuration.getTransactionIsolation());
HikariMBeanElf.java,MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();,if (ManagementFactory != null ) MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();
HikariMBeanElf.java,MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();,if (ManagementFactory != null ) MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();
HikariPool.java,this.isRegisteredMbeans = configuration.isRegisterMbeans();,if (configuration != null ) this.isRegisteredMbeans = configuration.isRegisterMbeans();
HikariMBeanElf.java,MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();,if (ManagementFactory != null ) MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();
HikariPool.java,this.isRegisteredMbeans = configuration.isRegisterMbeans();,if (configuration != null ) this.isRegisteredMbeans = configuration.isRegisterMbeans();
HikariPool.java,this.isRecordMetrics = configuration.isRecordMetrics();,if (configuration != null ) this.isRecordMetrics = configuration.isRecordMetrics();
HikariPool.java,this.isRecordMetrics = configuration.isRecordMetrics();,if (configuration != null ) this.isRecordMetrics = configuration.isRecordMetrics();
HikariPool.java,this.catalog = configuration.getCatalog();,if (configuration != null ) this.catalog = configuration.getCatalog();
HikariPool.java,this.isAutoCommit = configuration.isAutoCommit();,if (configuration != null ) this.isAutoCommit = configuration.isAutoCommit();
HikariPool.java,this.isIsolateInternalQueries = configuration.isIsolateInternalQueries();,if (configuration != null ) this.isIsolateInternalQueries = configuration.isIsolateInternalQueries();
HikariPool.java,this.leakDetectionThreshold = configuration.getLeakDetectionThreshold();,if (configuration != null ) this.leakDetectionThreshold = configuration.getLeakDetectionThreshold();
HikariPool.java,this.catalog = configuration.getCatalog();,if (configuration != null ) this.catalog = configuration.getCatalog();
HikariPool.java,this.isAutoCommit = configuration.isAutoCommit();,if (configuration != null ) this.isAutoCommit = configuration.isAutoCommit();
HikariPool.java,this.isIsolateInternalQueries = configuration.isIsolateInternalQueries();,if (configuration != null ) this.isIsolateInternalQueries = configuration.isIsolateInternalQueries();
HikariPool.java,this.leakDetectionThreshold = configuration.getLeakDetectionThreshold();,if (configuration != null ) this.leakDetectionThreshold = configuration.getLeakDetectionThreshold();
HikariPool.java,final long connectionTimeout = configuration.getConnectionTimeout();,if (configuration != null ) final long connectionTimeout = configuration.getConnectionTimeout();
HikariPool.java,"PoolBagEntry bagEntry = new PoolBagEntry(connection, configuration.getMaxLifetime());","if (configuration != null ) PoolBagEntry bagEntry = new PoolBagEntry(connection, configuration.getMaxLifetime());"
HikariPool.java,networkTimeout = connection.getNetworkTimeout();,if (connection != null ) networkTimeout = connection.getNetworkTimeout();
HikariPool.java,final long connectionTimeout = configuration.getConnectionTimeout();,if (configuration != null ) final long connectionTimeout = configuration.getConnectionTimeout();
HikariPool.java,"PoolBagEntry bagEntry = new PoolBagEntry(connection, configuration.getMaxLifetime());","if (configuration != null ) PoolBagEntry bagEntry = new PoolBagEntry(connection, configuration.getMaxLifetime());"
HikariPool.java,networkTimeout = connection.getNetworkTimeout();,if (connection != null ) networkTimeout = connection.getNetworkTimeout();
TestPropertySetter.java,HikariConfig config = new HikariConfig(file.getPath());,if (HikariConfig(file != null ) HikariConfig config = new HikariConfig(file.getPath());
TestPropertySetter.java,HikariConfig config = new HikariConfig(file.getPath());,if (HikariConfig(file != null ) HikariConfig config = new HikariConfig(file.getPath());
TestPropertySetter.java,DataSource dataSource = (DataSource) clazz.newInstance();,if (clazz != null ) DataSource dataSource = (DataSource) clazz.newInstance();
TestPropertySetter.java,DataSource dataSource = (DataSource) clazz.newInstance();,if (clazz != null ) DataSource dataSource = (DataSource) clazz.newInstance();
TestPropertySetter.java,HikariConfig config = new HikariConfig(file.getPath());,if (HikariConfig(file != null ) HikariConfig config = new HikariConfig(file.getPath());
TestPropertySetter.java,DataSource dataSource = (DataSource) clazz.newInstance();,if (clazz != null ) DataSource dataSource = (DataSource) clazz.newInstance();
TestPropertySetter.java,HikariConfig config = new HikariConfig(file.getPath());,if (HikariConfig(file != null ) HikariConfig config = new HikariConfig(file.getPath());
TestPropertySetter.java,HikariConfig config = new HikariConfig(file.getPath());,if (HikariConfig(file != null ) HikariConfig config = new HikariConfig(file.getPath());
TestPropertySetter.java,DataSource dataSource = (DataSource) clazz.newInstance();,if (clazz != null ) DataSource dataSource = (DataSource) clazz.newInstance();
TestPropertySetter.java,DataSource dataSource = (DataSource) clazz.newInstance();,if (clazz != null ) DataSource dataSource = (DataSource) clazz.newInstance();
TestPropertySetter.java,HikariConfig config = new HikariConfig(file.getPath());,if (HikariConfig(file != null ) HikariConfig config = new HikariConfig(file.getPath());
TestPropertySetter.java,DataSource dataSource = (DataSource) clazz.newInstance();,if (clazz != null ) DataSource dataSource = (DataSource) clazz.newInstance();
TestConnections.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnections.java,ResultSet resultSet = statement.executeQuery();,if (statement != null ) ResultSet resultSet = statement.executeQuery();
TestConnections.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnections.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnections.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnections.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnections.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnections.java,ResultSet resultSet = statement.executeQuery();,if (statement != null ) ResultSet resultSet = statement.executeQuery();
TestConnections.java,connection = ds.getConnection();,if (ds != null ) connection = ds.getConnection();
TestConnections.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnections.java,Object[] array = multiPool.keySet().toArray();,if (multiPool != null ) Object[] array = multiPool.keySet().toArray();
TestConnections.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnections.java,ResultSet resultSet = statement.executeQuery();,if (statement != null ) ResultSet resultSet = statement.executeQuery();
TestConnections.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnections.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnections.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnections.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnections.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnections.java,ResultSet resultSet = statement.executeQuery();,if (statement != null ) ResultSet resultSet = statement.executeQuery();
TestConnections.java,connection = ds.getConnection();,if (ds != null ) connection = ds.getConnection();
TestConnections.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
TestConnections.java,Object[] array = multiPool.keySet().toArray();,if (multiPool != null ) Object[] array = multiPool.keySet().toArray();
LeakTask.java,this.stackTrace = new Exception().getStackTrace();,if (Exception() != null ) this.stackTrace = new Exception().getStackTrace();
LeakTask.java,this.stackTrace = new Exception().getStackTrace();,if (Exception() != null ) this.stackTrace = new Exception().getStackTrace();
StubConnection.java,foo = System.currentTimeMillis();,if (System != null ) foo = System.currentTimeMillis();
StubConnection.java,foo = System.currentTimeMillis();,if (System != null ) foo = System.currentTimeMillis();
MiscTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
MiscTest.java,String s = new String(baos.toByteArray());,if (String(baos != null ) String s = new String(baos.toByteArray());
JdbcDriverTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
JdbcDriverTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
HikariPool.java,String dsClassName = configuration.getDataSourceClassName();,if (configuration != null ) String dsClassName = configuration.getDataSourceClassName();
HikariPool.java,String dsClassName = configuration.getDataSourceClassName();,if (configuration != null ) String dsClassName = configuration.getDataSourceClassName();
ClassLoaderUtils.java,ClassLoader cl = Thread.currentThread().getContextClassLoader();,if (Thread != null ) ClassLoader cl = Thread.currentThread().getContextClassLoader();
ClassLoaderUtils.java,ClassLoader cl = Thread.currentThread().getContextClassLoader();,if (Thread != null ) ClassLoader cl = Thread.currentThread().getContextClassLoader();
ClassLoaderUtils.java,ClassLoader cl = Thread.currentThread().getContextClassLoader();,if (Thread != null ) ClassLoader cl = Thread.currentThread().getContextClassLoader();
ClassLoaderUtils.java,ClassLoader cl = Thread.currentThread().getContextClassLoader();,if (Thread != null ) ClassLoader cl = Thread.currentThread().getContextClassLoader();
HikariPool.java,int total = totalConnections.get();,if (totalConnections != null ) int total = totalConnections.get();
HikariPool.java,int total = totalConnections.get();,if (totalConnections != null ) int total = totalConnections.get();
LeakTask.java,this.stackTrace = Thread.currentThread().getStackTrace();,if (Thread != null ) this.stackTrace = Thread.currentThread().getStackTrace();
LeakTask.java,this.stackTrace = Thread.currentThread().getStackTrace();,if (Thread != null ) this.stackTrace = Thread.currentThread().getStackTrace();
ConnectionProxy.java,final int size = openStatements.size();,if (openStatements != null ) final int size = openStatements.size();
ConnectionProxy.java,final int size = openStatements.size();,if (openStatements != null ) final int size = openStatements.size();
ConnectionProxy.java,StackTraceElement[] trace = Thread.currentThread().getStackTrace();,if (Thread != null ) StackTraceElement[] trace = Thread.currentThread().getStackTrace();
ConnectionProxy.java,StackTraceElement[] trace = Thread.currentThread().getStackTrace();,if (Thread != null ) StackTraceElement[] trace = Thread.currentThread().getStackTrace();
HikariPool.java,int tc = totalConnections.decrementAndGet();,if (totalConnections != null ) int tc = totalConnections.decrementAndGet();
HikariPool.java,int tc = totalConnections.decrementAndGet();,if (totalConnections != null ) int tc = totalConnections.decrementAndGet();
ConcurrentBag.java,final BagEntry bagEntry = list.removeLast().get();,if (list != null ) final BagEntry bagEntry = list.removeLast().get();
ConcurrentBag.java,final BagEntry bagEntry = list.removeLast().get();,if (list != null ) final BagEntry bagEntry = list.removeLast().get();
ConcurrentBag.java,final BagEntry element = list.removeLast().get();,if (list != null ) final BagEntry element = list.removeLast().get();
ConcurrentBag.java,final BagEntry element = list.removeLast().get();,if (list != null ) final BagEntry element = list.removeLast().get();
ConcurrentBag.java,final BagEntry element = list.removeLast().get();,if (list != null ) final BagEntry element = list.removeLast().get();
ConcurrentBag.java,final BagEntry element = list.removeLast().get();,if (list != null ) final BagEntry element = list.removeLast().get();
HikariPool.java,this.transactionIsolation = configuration.getTransactionIsolation();,if (configuration != null ) this.transactionIsolation = configuration.getTransactionIsolation();
ConnectionStateTest.java,int transactionIsolation = config.getTransactionIsolation();,if (config != null ) int transactionIsolation = config.getTransactionIsolation();
HikariPool.java,this.transactionIsolation = configuration.getTransactionIsolation();,if (configuration != null ) this.transactionIsolation = configuration.getTransactionIsolation();
ConnectionStateTest.java,int transactionIsolation = config.getTransactionIsolation();,if (config != null ) int transactionIsolation = config.getTransactionIsolation();
ConcurrentBag.java,final T element = list.removeLast().get();,if (list != null ) final T element = list.removeLast().get();
ConcurrentBag.java,ArrayList<T> list = new ArrayList<T>(sharedList.size());,if (ArrayList<T>(sharedList != null ) ArrayList<T> list = new ArrayList<T>(sharedList.size());
ConcurrentBag.java,final T element = list.removeLast().get();,if (list != null ) final T element = list.removeLast().get();
HikariPool.java,int tc = totalConnections.decrementAndGet();,if (totalConnections != null ) int tc = totalConnections.decrementAndGet();
ConnectionProxy.java,long now = System.currentTimeMillis();,if (System != null ) long now = System.currentTimeMillis();
ConnectionProxy.java,this.state = new AtomicInteger(copyProxy.getState());,if (AtomicInteger(copyProxy != null ) this.state = new AtomicInteger(copyProxy.getState());
ConnectionProxy.java,this.lastAccess = this.uncloseTime = System.currentTimeMillis();,if (System != null ) this.lastAccess = this.uncloseTime = System.currentTimeMillis();
ConnectionProxy.java,lastAccess = System.currentTimeMillis();,if (System != null ) lastAccess = System.currentTimeMillis();
ConcurrentBag.java,final T element = reference.get();,if (reference != null ) final T element = reference.get();
HikariPool.java,int tc = totalConnections.decrementAndGet();,if (totalConnections != null ) int tc = totalConnections.decrementAndGet();
ConnectionProxy.java,long now = System.currentTimeMillis();,if (System != null ) long now = System.currentTimeMillis();
ConnectionProxy.java,this.state = new AtomicInteger(copyProxy.getState());,if (AtomicInteger(copyProxy != null ) this.state = new AtomicInteger(copyProxy.getState());
ConnectionProxy.java,this.lastAccess = this.uncloseTime = System.currentTimeMillis();,if (System != null ) this.lastAccess = this.uncloseTime = System.currentTimeMillis();
ConnectionProxy.java,lastAccess = System.currentTimeMillis();,if (System != null ) lastAccess = System.currentTimeMillis();
ConcurrentBag.java,final T element = reference.get();,if (reference != null ) final T element = reference.get();
ShutdownTest.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
ShutdownTest.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
ConcurrentBag.java,final long addTime = System.nanoTime();,if (System != null ) final long addTime = System.nanoTime();
ConcurrentBag.java,final long checkInTime = System.nanoTime();,if (System != null ) final long checkInTime = System.nanoTime();
ConcurrentBag.java,final long addTime = System.nanoTime();,if (System != null ) final long addTime = System.nanoTime();
ConcurrentBag.java,final long checkInTime = System.nanoTime();,if (System != null ) final long checkInTime = System.nanoTime();
HikariPool.java,final int maxPoolSize = configuration.getMaximumPoolSize();,if (configuration != null ) final int maxPoolSize = configuration.getMaximumPoolSize();
HikariPool.java,final int minIdle = configuration.getMinimumIdle();,if (configuration != null ) final int minIdle = configuration.getMinimumIdle();
LeakTask.java,boolean cancelled = super.cancel();,if (super != null ) boolean cancelled = super.cancel();
LeakTask.java,boolean cancelled = super.cancel();,if (super != null ) boolean cancelled = super.cancel();
JavassistProxyFactory.java,String methodName = method.getName();,if (method != null ) String methodName = method.getName();
HikariJNDIFactory.java,String propertyValue = ra.getContent().toString();,if (ra != null ) String propertyValue = ra.getContent().toString();
HikariJNDIFactory.java,String propertyValue = ra.getContent().toString();,if (ra != null ) String propertyValue = ra.getContent().toString();
HikariJNDIFactory.java,String propertyValue = ra.getContent().toString();,if (ra != null ) String propertyValue = ra.getContent().toString();
HikariConnectionProvider.java,conn = this.hds.getConnection();,if (this != null ) conn = this.hds.getConnection();
CodaHaleMetricsTracker.java,innerContext = timer.time();,if (timer != null ) innerContext = timer.time();
HikariMBeanElf.java,MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();,if (ManagementFactory != null ) MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();
HikariMBeanElf.java,MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();,if (ManagementFactory != null ) MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();
HikariPool.java,this.connectionTimeout = configuration.getConnectionTimeout();,if (configuration != null ) this.connectionTimeout = configuration.getConnectionTimeout();
HikariPool.java,this.catalog = configuration.getCatalog();,if (configuration != null ) this.catalog = configuration.getCatalog();
HikariPool.java,this.isAutoCommit = configuration.isAutoCommit();,if (configuration != null ) this.isAutoCommit = configuration.isAutoCommit();
HikariPool.java,this.isIsolateInternalQueries = configuration.isIsolateInternalQueries();,if (configuration != null ) this.isIsolateInternalQueries = configuration.isIsolateInternalQueries();
HikariPool.java,this.isReadOnly = configuration.isReadOnly();,if (configuration != null ) this.isReadOnly = configuration.isReadOnly();
HikariPool.java,this.isRegisteredMbeans = configuration.isRegisterMbeans();,if (configuration != null ) this.isRegisteredMbeans = configuration.isRegisterMbeans();
HikariPool.java,this.leakDetectionThreshold = configuration.getLeakDetectionThreshold();,if (configuration != null ) this.leakDetectionThreshold = configuration.getLeakDetectionThreshold();
HikariPool.java,this.transactionIsolation = configuration.getTransactionIsolation();,if (configuration != null ) this.transactionIsolation = configuration.getTransactionIsolation();
HikariPool.java,this.isRecordMetrics = configuration.isRecordMetrics();,if (configuration != null ) this.isRecordMetrics = configuration.isRecordMetrics();
HikariPool.java,final long start = System.currentTimeMillis();,if (System != null ) final long start = System.currentTimeMillis();
HikariPool.java,final long now = System.currentTimeMillis();,if (System != null ) final long now = System.currentTimeMillis();
HikariPool.java,final long start = System.currentTimeMillis();,if (System != null ) final long start = System.currentTimeMillis();
HikariPool.java,int tc = totalConnections.decrementAndGet();,if (totalConnections != null ) int tc = totalConnections.decrementAndGet();
HikariPool.java,final int maxPoolSize = configuration.getMaximumPoolSize();,if (configuration != null ) final int maxPoolSize = configuration.getMaximumPoolSize();
HikariPool.java,final int minIdle = configuration.getMinimumIdle();,if (configuration != null ) final int minIdle = configuration.getMinimumIdle();
HikariPool.java,Statement statement = connection.createStatement();,if (connection != null ) Statement statement = connection.createStatement();
HikariPool.java,String dsClassName = configuration.getDataSourceClassName();,if (configuration != null ) String dsClassName = configuration.getDataSourceClassName();
HikariPool.java,int total = totalConnections.get();,if (totalConnections != null ) int total = totalConnections.get();
HikariPool.java,connectionTimeout = configuration.getConnectionTimeout();  // refresh member in case it changed,if (changed != null ) connectionTimeout = configuration.getConnectionTimeout();  // refresh member in case it changed
HikariPool.java,final long now = System.currentTimeMillis();,if (System != null ) final long now = System.currentTimeMillis();
HikariPool.java,final long idleTimeout = configuration.getIdleTimeout();,if (configuration != null ) final long idleTimeout = configuration.getIdleTimeout();
ConnectionProxy.java,long now = System.currentTimeMillis();,if (System != null ) long now = System.currentTimeMillis();
ConnectionProxy.java,StackTraceElement[] trace = Thread.currentThread().getStackTrace();,if (Thread != null ) StackTraceElement[] trace = Thread.currentThread().getStackTrace();
ConnectionProxy.java,String sqlState = sqle.getSQLState();,if (sqle != null ) String sqlState = sqle.getSQLState();
ConnectionProxy.java,final int size = openStatements.size();,if (openStatements != null ) final int size = openStatements.size();
ConnectionProxy.java,lastAccess = System.currentTimeMillis();,if (System != null ) lastAccess = System.currentTimeMillis();
ConnectionProxy.java,"Statement proxyStatement = ProxyFactory.getProxyStatement(this, delegate.createStatement());","if (delegate != null ) Statement proxyStatement = ProxyFactory.getProxyStatement(this, delegate.createStatement());"
JavassistProxyFactory.java,ClassLoader contextClassLoader = Thread.currentThread().getContextClassLoader();,if (Thread != null ) ClassLoader contextClassLoader = Thread.currentThread().getContextClassLoader();
JavassistProxyFactory.java,String packageName = JavassistProxyFactory.class.getPackage().getName();,if (JavassistProxyFactory != null ) String packageName = JavassistProxyFactory.class.getPackage().getName();
JavassistProxyFactory.java,String methodName = method.getName();,if (method != null ) String methodName = method.getName();
JavassistProxyFactory.java,String superClassName = superClass.getName();,if (superClass != null ) String superClassName = superClass.getName();
JavassistProxyFactory.java,CtClass intfCt = classPool.getCtClass(intf.getName());,if (classPool != null ) CtClass intfCt = classPool.getCtClass(intf.getName());
JavassistProxyFactory.java,final String signature = intfMethod.getName() + intfMethod.getSignature();,if (intfMethod != null ) final String signature = intfMethod.getName() + intfMethod.getSignature();
LeakTask.java,boolean cancelled = super.cancel();,if (super != null ) boolean cancelled = super.cancel();
ClassLoaderUtils.java,ClassLoader cl = Thread.currentThread().getContextClassLoader();,if (Thread != null ) ClassLoader cl = Thread.currentThread().getContextClassLoader();
ClassLoaderUtils.java,ClassLoader cl = Thread.currentThread().getContextClassLoader();,if (Thread != null ) ClassLoader cl = Thread.currentThread().getContextClassLoader();
ConcurrentBag.java,final T element = reference.get();,if (reference != null ) final T element = reference.get();
ConcurrentBag.java,final long startScan = System.nanoTime();,if (System != null ) final long startScan = System.nanoTime();
ConcurrentBag.java,final long addTime = System.nanoTime();,if (System != null ) final long addTime = System.nanoTime();
ConcurrentBag.java,ArrayList<T> list = new ArrayList<T>(sharedList.size());,if (ArrayList<T>(sharedList != null ) ArrayList<T> list = new ArrayList<T>(sharedList.size());
ConcurrentBag.java,final long checkInTime = System.nanoTime();,if (System != null ) final long checkInTime = System.nanoTime();
PoolUtilities.java,Statement statement = connection.createStatement();,if (connection != null ) Statement statement = connection.createStatement();
PoolUtilities.java,argClasses[i] = args[i].getClass();,if (args[i] != null ) argClasses[i] = args[i].getClass();
PropertyBeanSetter.java,String propName = propEntry.getKey().toString();,if (propEntry != null ) String propName = propEntry.getKey().toString();
PropertyBeanSetter.java,Object propValue = propEntry.getValue();,if (propEntry != null ) Object propValue = propEntry.getValue();
PropertyBeanSetter.java,"capitalized = ""set"" + propName.toUpperCase();","if (propName != null ) capitalized = ""set"" + propName.toUpperCase();"
PropertyBeanSetter.java,Method writeMethod = propertyDescriptor.getWriteMethod();,if (propertyDescriptor != null ) Method writeMethod = propertyDescriptor.getWriteMethod();
HikariPool.java,connectionTimeout = configuration.getConnectionTimeout();,if (configuration != null ) connectionTimeout = configuration.getConnectionTimeout();
HikariPool.java,long timeout = configuration.getConnectionTimeout();,if (configuration != null ) long timeout = configuration.getConnectionTimeout();
HikariPool.java,Statement statement = connection.createStatement();,if (connection != null ) Statement statement = connection.createStatement();
PropertyBeanSetter.java,String propName = propKey.toString();,if (propKey != null ) String propName = propKey.toString();
ConcurrentBag.java,final T element = reference.get();,if (reference != null ) final T element = reference.get();
ShutdownTest.java,ThreadMXBean threadMXBean = ManagementFactory.getThreadMXBean();,if (ManagementFactory != null ) ThreadMXBean threadMXBean = ManagementFactory.getThreadMXBean();
TestConnections.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
UnwrapTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
HikariPool.java,this.isDebug = LOGGER.isDebugEnabled();,if (LOGGER != null ) this.isDebug = LOGGER.isDebugEnabled();
HikariPool.java,isDebug = LOGGER.isDebugEnabled();,if (LOGGER != null ) isDebug = LOGGER.isDebugEnabled();
JavassistProxyFactory.java,ClassLoader contextClassLoader = Thread.currentThread().getContextClassLoader();,if (Thread != null ) ClassLoader contextClassLoader = Thread.currentThread().getContextClassLoader();
HikariPool.java,final int minIdle = configuration.getMinimumIdle();,if (configuration != null ) final int minIdle = configuration.getMinimumIdle();
HikariPool.java,final long maxLife = configuration.getMaxLifetime();,if (configuration != null ) final long maxLife = configuration.getMaxLifetime();
HikariPool.java,final long maxLifetime = configuration.getMaxLifetime();,if (configuration != null ) final long maxLifetime = configuration.getMaxLifetime();
ConnectionProxy.java,this.creationTime = lastAccess = System.currentTimeMillis();,if (System != null ) this.creationTime = lastAccess = System.currentTimeMillis();
ConnectionProxy.java,uncloseTime = System.currentTimeMillis();,if (System != null ) uncloseTime = System.currentTimeMillis();
ConcurrentBag.java,T element = reference.get();,if (reference != null ) T element = reference.get();
ConcurrentBag.java,final long returnTime = System.nanoTime();,if (System != null ) final long returnTime = System.nanoTime();
HikariConfig.java,connectionCustomizer = (IConnectionCustomizer) customizerClass.newInstance();,if (customizerClass != null ) connectionCustomizer = (IConnectionCustomizer) customizerClass.newInstance();
HikariPool.java,this.connectionCustomizer = configuration.getConnectionCustomizer();,if (configuration != null ) this.connectionCustomizer = configuration.getConnectionCustomizer();
HikariPool.java,int tc = totalConnections.decrementAndGet();,if (totalConnections != null ) int tc = totalConnections.decrementAndGet();
HikariPool.java,DataSource dataSource = (DataSource) clazz.newInstance();,if (clazz != null ) DataSource dataSource = (DataSource) clazz.newInstance();
HikariConfig.java,connectionCustomizer = (IConnectionCustomizer) customizerClass.newInstance();,if (customizerClass != null ) connectionCustomizer = (IConnectionCustomizer) customizerClass.newInstance();
HikariPool.java,this.connectionCustomizer = configuration.getConnectionCustomizer();,if (configuration != null ) this.connectionCustomizer = configuration.getConnectionCustomizer();
HikariPool.java,int tc = totalConnections.decrementAndGet();,if (totalConnections != null ) int tc = totalConnections.decrementAndGet();
HikariPool.java,DataSource dataSource = (DataSource) clazz.newInstance();,if (clazz != null ) DataSource dataSource = (DataSource) clazz.newInstance();
HikariPool.java,long now = System.currentTimeMillis();,if (System != null ) long now = System.currentTimeMillis();
PoolUtilities.java,int processors = Runtime.getRuntime().availableProcessors();,if (Runtime != null ) int processors = Runtime.getRuntime().availableProcessors();
HikariPool.java,long timeout = configuration.getConnectionTimeout();,if (configuration != null ) long timeout = configuration.getConnectionTimeout();
HikariPool.java,final long start = System.currentTimeMillis();,if (System != null ) final long start = System.currentTimeMillis();
TestConnections.java,int transactionIsolation = config.getTransactionIsolation();,if (config != null ) int transactionIsolation = config.getTransactionIsolation();
HikariPool.java,addConnectionExecutor = createThreadPoolExecutor(configuration.getMaximumPoolSize());,if (createThreadPoolExecutor(configuration != null ) addConnectionExecutor = createThreadPoolExecutor(configuration.getMaximumPoolSize());
HikariPool.java,Statement statement = connection.createStatement();,if (connection != null ) Statement statement = connection.createStatement();
HikariPool.java,int processors = Runtime.getRuntime().availableProcessors();,if (Runtime != null ) int processors = Runtime.getRuntime().availableProcessors();
HikariPool.java,final int retries = configuration.getAcquireRetries();,if (configuration != null ) final int retries = configuration.getAcquireRetries();
HikariPool.java,final int min = configuration.getMinimumPoolSize();,if (configuration != null ) final int min = configuration.getMinimumPoolSize();
ConcurrentBag.java,final long startAttempt = System.nanoTime();,if (System != null ) final long startAttempt = System.nanoTime();
ConcurrentBag.java,final long startTryAcquire = System.nanoTime();,if (System != null ) final long startTryAcquire = System.nanoTime();
JavassistProxyFactory.java,ClassLoader contextClassLoader = Thread.currentThread().getContextClassLoader();,if (Thread != null ) ClassLoader contextClassLoader = Thread.currentThread().getContextClassLoader();
HikariPool.java,String dsClassName = configuration.getDataSourceClassName();,if (configuration != null ) String dsClassName = configuration.getDataSourceClassName();
HikariPool.java,connection = dataSource.getConnection();,if (dataSource != null ) connection = dataSource.getConnection();
HikariPool.java,this.debug = LOGGER.isDebugEnabled();,if (LOGGER != null ) this.debug = LOGGER.isDebugEnabled();
HikariPool.java,int maxIters = configuration.getMinimumPoolSize() * configuration.getAcquireRetries();,if (configuration != null ) int maxIters = configuration.getMinimumPoolSize() * configuration.getAcquireRetries();
HikariPool.java,int beforeCount = totalConnections.get();,if (totalConnections != null ) int beforeCount = totalConnections.get();
HikariPool.java,debug = LOGGER.isDebugEnabled();,if (LOGGER != null ) debug = LOGGER.isDebugEnabled();
HikariPool.java,String dsClassName = configuration.getDataSourceClassName();,if (configuration != null ) String dsClassName = configuration.getDataSourceClassName();
HikariPool.java,this.dataSource = (DataSource) clazz.newInstance();,if (clazz != null ) this.dataSource = (DataSource) clazz.newInstance();
HikariPool.java,this.dataSource = configuration.getDataSource();,if (configuration != null ) this.dataSource = configuration.getDataSource();
HikariPool.java,long idleTimeout = configuration.getIdleTimeout();,if (configuration != null ) long idleTimeout = configuration.getIdleTimeout();
HikariPool.java,int maxIters = configuration.getMinimumPoolSize() * configuration.getAcquireRetries();,if (configuration != null ) int maxIters = configuration.getMinimumPoolSize() * configuration.getAcquireRetries();
HikariPool.java,int beforeCount = totalConnections.get();,if (totalConnections != null ) int beforeCount = totalConnections.get();
HikariPool.java,Connection connection = dataSource.getConnection();,if (dataSource != null ) Connection connection = dataSource.getConnection();
HikariPool.java,final int min = configuration.getMinimumPoolSize();,if (configuration != null ) final int min = configuration.getMinimumPoolSize();
HikariPool.java,final int acquireTimeout = (int) configuration.getConnectionTimeout();,if (configuration != null ) final int acquireTimeout = (int) configuration.getConnectionTimeout();
HikariPool.java,final int acquireRetries = configuration.getAcquireRetries();,if (configuration != null ) final int acquireRetries = configuration.getAcquireRetries();
HikariPool.java,long startMs = System.currentTimeMillis();,if (System != null ) long startMs = System.currentTimeMillis();
HikariPool.java,Connection connection = dataSource.getConnection();,if (dataSource != null ) Connection connection = dataSource.getConnection();
ConcurrentBag.java,final long startScan = System.nanoTime();,if (System != null ) final long startScan = System.nanoTime();
FailedRetryTest.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
FailedRetryTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
FailedRetryTest.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
FailedRetryTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
HikariPool.java,final int acquisitionTimeout = (int) configuration.getConnectionTimeout();,if (configuration != null ) final int acquisitionTimeout = (int) configuration.getConnectionTimeout();
HikariPool.java,start = System.currentTimeMillis();,if (System != null ) start = System.currentTimeMillis();
HikariPool.java,int retries = configuration.getAcquireRetries();,if (configuration != null ) int retries = configuration.getAcquireRetries();
HikariPool.java,int maxIterations = configuration.getAcquireIncrement();,if (configuration != null ) int maxIterations = configuration.getAcquireIncrement();
HikariPool.java,final int min = configuration.getMinimumPoolSize();,if (configuration != null ) final int min = configuration.getMinimumPoolSize();
HikariPool.java,transactionIsolation = connection.getTransactionIsolation();,if (connection != null ) transactionIsolation = connection.getTransactionIsolation();
HikariPool.java,String initSql = configuration.getConnectionInitSql();,if (configuration != null ) String initSql = configuration.getConnectionInitSql();
HikariPool.java,Statement statement = connection.createStatement();,if (connection != null ) Statement statement = connection.createStatement();
HikariPool.java,this.leakDetectionThreshold = configuration.getLeakDetectionThreshold();,if (configuration != null ) this.leakDetectionThreshold = configuration.getLeakDetectionThreshold();
HikariPool.java,this.catalog = configuration.getCatalog();,if (configuration != null ) this.catalog = configuration.getCatalog();
HikariPool.java,this.debug = LOGGER.isDebugEnabled();,if (LOGGER != null ) this.debug = LOGGER.isDebugEnabled();
HikariPool.java,this.connectionCustomizer = (IConnectionCustomizer) clazz.newInstance();,if (clazz != null ) this.connectionCustomizer = (IConnectionCustomizer) clazz.newInstance();
HikariPool.java,final int maxIterations = configuration.getAcquireIncrement();,if (configuration != null ) final int maxIterations = configuration.getAcquireIncrement();
HikariPool.java,final int max = configuration.getMaximumPoolSize();,if (configuration != null ) final int max = configuration.getMaximumPoolSize();
HikariPool.java,final int increment = configuration.getAcquireIncrement();,if (configuration != null ) final int increment = configuration.getAcquireIncrement();
HikariPool.java,final int max = configuration.getMaximumPoolSize();,if (configuration != null ) final int max = configuration.getMaximumPoolSize();
HikariPool.java,final int increment = configuration.getAcquireIncrement();,if (configuration != null ) final int increment = configuration.getAcquireIncrement();
HikariPool.java,final int max = configuration.getMaximumPoolSize();,if (configuration != null ) final int max = configuration.getMaximumPoolSize();
HikariPool.java,final int increment = configuration.getAcquireIncrement();,if (configuration != null ) final int increment = configuration.getAcquireIncrement();
HikariPool.java,final int idleCount = idleConnectionCount.getAndDecrement();,if (idleConnectionCount != null ) final int idleCount = idleConnectionCount.getAndDecrement();
HikariPool.java,int idleCount = idleConnectionCount.get();,if (idleConnectionCount != null ) int idleCount = idleConnectionCount.get();
HikariPool.java,final int max = configuration.getMaximumPoolSize();,if (configuration != null ) final int max = configuration.getMaximumPoolSize();
HikariPool.java,int increment = configuration.getAcquireIncrement();,if (configuration != null ) int increment = configuration.getAcquireIncrement();
HikariPool.java,int idle = idleConnectionCount.get();,if (idleConnectionCount != null ) int idle = idleConnectionCount.get();
ConcurrentBag.java,LinkedList<T> list = threadList.get();,if (threadList != null ) LinkedList<T> list = threadList.get();
ConcurrentBag.java,final T reference = list.removeFirst();,if (list != null ) final T reference = list.removeFirst();
ConcurrentBag.java,typeClass = value.getClass();,if (value != null ) typeClass = value.getClass();
Benchmark1.java,benchmarks.ds = benchmarks.setupHikari();,if (benchmarks != null ) benchmarks.ds = benchmarks.setupHikari();
Benchmark1.java,benchmarks.ds = benchmarks.setupBone();,if (benchmarks != null ) benchmarks.ds = benchmarks.setupBone();
Benchmark1.java,benchmarks.ds = benchmarks.setupDbPool();,if (benchmarks != null ) benchmarks.ds = benchmarks.setupDbPool();
Benchmark1.java,benchmarks.ds = benchmarks.setupTomcat();,if (benchmarks != null ) benchmarks.ds = benchmarks.setupTomcat();
Benchmark1.java,long elapsed = runner.getElapsed();,if (runner != null ) long elapsed = runner.getElapsed();
Benchmark1.java,"absoluteStart = Math.min(absoluteStart, runner.getStart());","if (runner != null ) absoluteStart = Math.min(absoluteStart, runner.getStart());"
Benchmark1.java,"absoluteFinish = Math.max(absoluteFinish, runner.getFinish());","if (runner != null ) absoluteFinish = Math.max(absoluteFinish, runner.getFinish());"
Benchmark1.java,counter += runner.getCounter();,if (runner != null ) counter += runner.getCounter();
Benchmark1.java,start = System.nanoTime();,if (System != null ) start = System.nanoTime();
Benchmark1.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
Benchmark1.java,ResultSet resultSet = statement.executeQuery();,if (statement != null ) ResultSet resultSet = statement.executeQuery();
Benchmark1.java,finish = System.nanoTime();,if (System != null ) finish = System.nanoTime();
Benchmark1.java,start = System.nanoTime();,if (System != null ) start = System.nanoTime();
Benchmark1.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
Benchmark1.java,finish = System.nanoTime();,if (System != null ) finish = System.nanoTime();
Benchmark2.java,benchmarks.ds = benchmarks.setupHikari();,if (benchmarks != null ) benchmarks.ds = benchmarks.setupHikari();
Benchmark2.java,benchmarks.ds = benchmarks.setupBone();,if (benchmarks != null ) benchmarks.ds = benchmarks.setupBone();
Benchmark2.java,connection = ds.getConnection();,if (ds != null ) connection = ds.getConnection();
Benchmark2.java,Statement statement = connection.createStatement();,if (connection != null ) Statement statement = connection.createStatement();
Benchmark2.java,long elapsed = runner.getElapsed();,if (runner != null ) long elapsed = runner.getElapsed();
Benchmark2.java,start = System.nanoTime();,if (System != null ) start = System.nanoTime();
Benchmark2.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
Benchmark2.java,finish = System.nanoTime();,if (System != null ) finish = System.nanoTime();
StubConnection.java,foo = System.currentTimeMillis();,if (System != null ) foo = System.currentTimeMillis();
ConcurrentBag.java,ArrayList<T> list = new ArrayList<>(sharedList.size());,if (ArrayList<>(sharedList != null ) ArrayList<T> list = new ArrayList<>(sharedList.size());
CreationTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
CreationTest.java,ResultSet resultSet = statement.executeQuery();,if (statement != null ) ResultSet resultSet = statement.executeQuery();
CreationTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
CreationTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
CreationTest.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
CreationTest.java,ResultSet resultSet = statement.executeQuery();,if (statement != null ) ResultSet resultSet = statement.executeQuery();
HikariPool.java,final int increment = configuration.getAcquireIncrement();,if (configuration != null ) final int increment = configuration.getAcquireIncrement();
HikariPool.java,final int max = configuration.getMaximumPoolSize();,if (configuration != null ) final int max = configuration.getMaximumPoolSize();
HikariPool.java,final int increment = configuration.getAcquireIncrement();,if (configuration != null ) final int increment = configuration.getAcquireIncrement();
HikariPool.java,final int max = configuration.getMaximumPoolSize();,if (configuration != null ) final int max = configuration.getMaximumPoolSize();
HikariPool.java,final int increment = configuration.getAcquireIncrement();,if (configuration != null ) final int increment = configuration.getAcquireIncrement();
HikariPool.java,this.idleConnections = new SpecializedConcurrentBag<IHikariConnectionProxy>(configuration.getMaximumPoolSize());,if (SpecializedConcurrentBag<IHikariConnectionProxy>(configuration != null ) this.idleConnections = new SpecializedConcurrentBag<IHikariConnectionProxy>(configuration.getMaximumPoolSize());
SpecializedConcurrentBag.java,final T reference = list.removeFirst();,if (list != null ) final T reference = list.removeFirst();
SpecializedConcurrentBag.java,final long startScan = System.nanoTime();,if (System != null ) final long startScan = System.nanoTime();
SpecializedConcurrentBag.java,final long offerTime = System.nanoTime();,if (System != null ) final long offerTime = System.nanoTime();
SpecializedConcurrentBag.java,ArrayList<T> list = new ArrayList<>(sharedList.size());,if (ArrayList<>(sharedList != null ) ArrayList<T> list = new ArrayList<>(sharedList.size());
SpecializedConcurrentBag.java,final long checkInTime = System.nanoTime();,if (System != null ) final long checkInTime = System.nanoTime();
SpecializedConcurrentBag.java,final T reference = stampedReference.getReference();,if (stampedReference != null ) final T reference = stampedReference.getReference();
SpecializedConcurrentBag.java,final long start = System.nanoTime();,if (System != null ) final long start = System.nanoTime();
SpecializedConcurrentBag.java,final T reference = stampedReference.getReference();,if (stampedReference != null ) final T reference = stampedReference.getReference();
SpecializedConcurrentBag.java,final T reference = stampedReference.getReference();,if (stampedReference != null ) final T reference = stampedReference.getReference();
SpecializedConcurrentBag.java,ArrayList<T> list = new ArrayList<>(map.size());,if (ArrayList<>(map != null ) ArrayList<T> list = new ArrayList<>(map.size());
SpecializedConcurrentBag.java,final T reference = stampedReference.getReference();,if (stampedReference != null ) final T reference = stampedReference.getReference();
SpecializedConcurrentBag.java,Long waitStart = startTimeStamp.get();,if (startTimeStamp != null ) Long waitStart = startTimeStamp.get();
ConnectionProxy.java,creationTime = lastAccess = System.currentTimeMillis();,if (System != null ) creationTime = lastAccess = System.currentTimeMillis();
SpecializedConcurrentBag.java,AtomicStampedReference<T> stampedReference = list.removeLast();,if (list != null ) AtomicStampedReference<T> stampedReference = list.removeLast();
HikariPool.java,IHikariConnectionProxy connection = idleConnections.poll();,if (idleConnections != null ) IHikariConnectionProxy connection = idleConnections.poll();
HikariPool.java,final int idleCount = idleConnectionCount.get();,if (idleConnectionCount != null ) final int idleCount = idleConnectionCount.get();
HikariPool.java,IHikariConnectionProxy connectionProxy = idleConnections.poll();,if (idleConnections != null ) IHikariConnectionProxy connectionProxy = idleConnections.poll();
HikariPool.java,final int idleCount = idleConnectionCount.get();,if (idleConnectionCount != null ) final int idleCount = idleConnectionCount.get();
HikariPool.java,IHikariConnectionProxy connectionProxy = idleConnections.poll();,if (idleConnections != null ) IHikariConnectionProxy connectionProxy = idleConnections.poll();
HikariPool.java,this.idleConnections = new LinkedBlockingQueue<IHikariConnectionProxy>(configuration.getMaximumPoolSize());,if (LinkedBlockingQueue<IHikariConnectionProxy>(configuration != null ) this.idleConnections = new LinkedBlockingQueue<IHikariConnectionProxy>(configuration.getMaximumPoolSize());
Benchmark1.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
ConnectionProxy.java,final int length = openStatements.size();,if (openStatements != null ) final int length = openStatements.size();
HikariPool.java,this.idleConnections = new LinkedBlockingQueue<IHikariConnectionProxy>(configuration.getMaximumPoolSize());,if (LinkedBlockingQueue<IHikariConnectionProxy>(configuration != null ) this.idleConnections = new LinkedBlockingQueue<IHikariConnectionProxy>(configuration.getMaximumPoolSize());
Benchmark1.java,Connection connection = ds.getConnection();,if (ds != null ) Connection connection = ds.getConnection();
ConnectionProxy.java,final int length = openStatements.size();,if (openStatements != null ) final int length = openStatements.size();
HikariPool.java,"boolean alive = isConnectionAlive(proxyConnection, configuration.getConnectionTimeout());","if (configuration != null ) boolean alive = isConnectionAlive(proxyConnection, configuration.getConnectionTimeout());"
JavassistProxyFactory.java,proxyFactory = proxyFactoryFactory.generateProxyFactory();,if (proxyFactoryFactory != null ) proxyFactory = proxyFactoryFactory.generateProxyFactory();
JavassistProxyFactory.java,String packageName = ProxyFactory.class.getPackage().getName();,if (ProxyFactory != null ) String packageName = ProxyFactory.class.getPackage().getName();
JavassistProxyFactory.java,CtClass superCt = classPool.getCtClass(ProxyFactory.class.getName());,if (classPool != null ) CtClass superCt = classPool.getCtClass(ProxyFactory.class.getName());
HikariPool.java,String dsClassName = configuration.getDataSourceClassName();,if (configuration != null ) String dsClassName = configuration.getDataSourceClassName();
HikariPool.java,this.dataSource = (DataSource) clazz.newInstance();,if (clazz != null ) this.dataSource = (DataSource) clazz.newInstance();
HikariPool.java,final long maxLifetime = configuration.getMaxLifetime();,if (configuration != null ) final long maxLifetime = configuration.getMaxLifetime();
ConnectionProxy.java,this.lastAccess = System.currentTimeMillis();,if (System != null ) this.lastAccess = System.currentTimeMillis();
HikariPool.java,transactionIsolation = connection.getTransactionIsolation();,if (connection != null ) transactionIsolation = connection.getTransactionIsolation();
HikariPool.java,Statement statement = connection.createStatement();,if (connection != null ) Statement statement = connection.createStatement();
HikariPool.java,Statement statement = connection.createStatement();,if (connection != null ) Statement statement = connection.createStatement();
HikariInstrumentationAgent.java,Properties systemProperties = System.getProperties();,if (System != null ) Properties systemProperties = System.getProperties();
HikariPool.java,String shadedCodexMapping = configuration.getShadedCodexMapping();,if (configuration != null ) String shadedCodexMapping = configuration.getShadedCodexMapping();
AgentRegistrationElf.java,Properties systemProperties = System.getProperties();,if (System != null ) Properties systemProperties = System.getProperties();
AgentRegistrationElf.java,String jarPath = resource.toString();,if (resource != null ) String jarPath = resource.toString();
AgentRegistrationElf.java,Properties systemProperties = System.getProperties();,if (System != null ) Properties systemProperties = System.getProperties();
AgentRegistrationElf.java,String nameOfRunningVM = ManagementFactory.getRuntimeMXBean().getName();,if (ManagementFactory != null ) String nameOfRunningVM = ManagementFactory.getRuntimeMXBean().getName();
HikariClassScanner.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
HikariClassScanner.java,line = reader.readLine();,if (reader != null ) line = reader.readLine();
HikariClassScanner.java,line = line.trim();,if (line != null ) line = line.trim();
HikariClassTransformer.java,ClassLoader contextClassLoader = Thread.currentThread().getContextClassLoader();,if (Thread != null ) ClassLoader contextClassLoader = Thread.currentThread().getContextClassLoader();
HikariClassTransformer.java,String className = classFile.getName();,if (classFile != null ) String className = classFile.getName();
HikariClassTransformer.java,CtClass intf = classPool.get(IHikariConnectionProxy.class.getName());,if (classPool != null ) CtClass intf = classPool.get(IHikariConnectionProxy.class.getName());
HikariClassTransformer.java,CtClass proxy = classPool.get(ConnectionProxy.class.getName());,if (classPool != null ) CtClass proxy = classPool.get(ConnectionProxy.class.getName());
HikariClassTransformer.java,String className = classFile.getName();,if (classFile != null ) String className = classFile.getName();
HikariClassTransformer.java,CtClass proxy = classPool.get(ConnectionProxy.class.getName());,if (classPool != null ) CtClass proxy = classPool.get(ConnectionProxy.class.getName());
HikariClassTransformer.java,String className = classFile.getName();,if (classFile != null ) String className = classFile.getName();
HikariClassTransformer.java,CtClass intf = classPool.get(interfase.getName());,if (classPool != null ) CtClass intf = classPool.get(interfase.getName());
HikariClassTransformer.java,CtClass proxy = classPool.get(proxyClass.getName());,if (classPool != null ) CtClass proxy = classPool.get(proxyClass.getName());
HikariClassTransformer.java,String className = classFile.getName();,if (classFile != null ) String className = classFile.getName();
HikariClassTransformer.java,CtClass proxy = classPool.get(proxyClass.getName());,if (classPool != null ) CtClass proxy = classPool.get(proxyClass.getName());
HikariClassTransformer.java,ConstPool constPool = targetClassFile.getConstPool();,if (targetClassFile != null ) ConstPool constPool = targetClassFile.getConstPool();
HikariClassTransformer.java,ConstPool constPool = targetClassFile.getConstPool();,if (targetClassFile != null ) ConstPool constPool = targetClassFile.getConstPool();
HikariClassTransformer.java,CtConstructor srcInitializer = srcClass.getClassInitializer();,if (srcClass != null ) CtConstructor srcInitializer = srcClass.getClassInitializer();
HikariClassTransformer.java,CtConstructor destInitializer = targetClass.getClassInitializer();,if (targetClass != null ) CtConstructor destInitializer = targetClass.getClassInitializer();
PropertyBeanSetter.java,String propValue = properties.get(propKey).toString();,if (properties != null ) String propValue = properties.get(propKey).toString();
HikariPool.java,MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();,if (ManagementFactory != null ) MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();
HikariPool.java,final int max = configuration.getMaximumPoolSize();,if (configuration != null ) final int max = configuration.getMaximumPoolSize();
HikariPool.java,final int increment = configuration.getAcquireIncrement();,if (configuration != null ) final int increment = configuration.getAcquireIncrement();
PropertyBeanSetter.java,Method writeMethod = propertyDescriptor.getWriteMethod();,if (propertyDescriptor != null ) Method writeMethod = propertyDescriptor.getWriteMethod();
HikariPool.java,final int max = configuration.getMaximumPoolSize();,if (configuration != null ) final int max = configuration.getMaximumPoolSize();
HikariPool.java,final int increment = configuration.getAcquireIncrement();,if (configuration != null ) final int increment = configuration.getAcquireIncrement();
HikariInstrumentationAgent.java,Properties systemProperties = System.getProperties();,if (System != null ) Properties systemProperties = System.getProperties();
HikariClassScanner.java,String keyPrefix = hash.iterator().next();,if (hash != null ) String keyPrefix = hash.iterator().next();
JavassistProxyFactoryFactory.java,proxyFactory = proxyFactoryFactory.generateProxyFactory();,if (proxyFactoryFactory != null ) proxyFactory = proxyFactoryFactory.generateProxyFactory();
JavassistProxyFactoryFactory.java,ClassPool defaultPool = ClassPool.getDefault();,if (ClassPool != null ) ClassPool defaultPool = ClassPool.getDefault();
StatementProxy.java,ResultSet generatedKeys = delegate.getGeneratedKeys();,if (delegate != null ) ResultSet generatedKeys = delegate.getGeneratedKeys();
StatementProxy.java,ResultSet resultSet = delegate.getResultSet();,if (delegate != null ) ResultSet resultSet = delegate.getResultSet();
StatementProxy.java,ResultSet rs = delegate.getResultSet();,if (delegate != null ) ResultSet rs = delegate.getResultSet();
StatementProxy.java,ResultSet rs = delegate.getGeneratedKeys();,if (delegate != null ) ResultSet rs = delegate.getGeneratedKeys();
CallableStatementProxy.java,ResultSet rs = delegate.getGeneratedKeys();,if (delegate != null ) ResultSet rs = delegate.getGeneratedKeys();
PreparedStatementProxy.java,ResultSet rs = delegate.getGeneratedKeys();,if (delegate != null ) ResultSet rs = delegate.getGeneratedKeys();
HikariPool.java,delegationProxies = !AgentRegistrationElf.loadTransformerAgent(configuration.getDataSourceClassName());,if (!AgentRegistrationElf != null ) delegationProxies = !AgentRegistrationElf.loadTransformerAgent(configuration.getDataSourceClassName());
CallableStatementProxy.java,ResultSet generatedKeys = delegate.getGeneratedKeys();,if (delegate != null ) ResultSet generatedKeys = delegate.getGeneratedKeys();
PreparedStatementProxy.java,ResultSet generatedKeys = delegate.getGeneratedKeys();,if (delegate != null ) ResultSet generatedKeys = delegate.getGeneratedKeys();
StatementProxy.java,ResultSet generatedKeys = delegate.getGeneratedKeys();,if (delegate != null ) ResultSet generatedKeys = delegate.getGeneratedKeys();
HikariPool.java,this.dataSource = (DataSource) clazz.newInstance();,if (clazz != null ) this.dataSource = (DataSource) clazz.newInstance();
HikariClassTransformer.java,CtMethod[] destMethods = targetClass.getMethods();,if (targetClass != null ) CtMethod[] destMethods = targetClass.getMethods();
HikariClassTransformer.java,String signature = method.getSignature();,if (method != null ) String signature = method.getSignature();
HikariClassScanner.java,Enumeration<JarEntry> entries = jarFile.entries();,if (jarFile != null ) Enumeration<JarEntry> entries = jarFile.entries();
HikariClassScanner.java,JarEntry jarEntry = entries.nextElement();,if (entries != null ) JarEntry jarEntry = entries.nextElement();
HikariClassScanner.java,String entryName = jarEntry.getName();,if (jarEntry != null ) String entryName = jarEntry.getName();
HikariClassScanner.java,String fileName = fileEntry.getPath();,if (fileEntry != null ) String fileName = fileEntry.getPath();
HikariClassScanner.java,String currentClass = classFile.getName();,if (classFile != null ) String currentClass = classFile.getName();
HikariClassScanner.java,String maybeSuper = superClass.getSuperclass();,if (superClass != null ) String maybeSuper = superClass.getSuperclass();
HikariClassScanner.java,String path = resource.toString();,if (resource != null ) String path = resource.toString();
HikariPool.java,delegationProxies = !instrumentationAgent.loadTransformerAgent();,if (!instrumentationAgent != null ) delegationProxies = !instrumentationAgent.loadTransformerAgent();
HikariClassTransformer.java,ClassPool defaultPool = ClassPool.getDefault();,if (ClassPool != null ) ClassPool defaultPool = ClassPool.getDefault();
HikariInstrumentationAgent.java,long start = System.currentTimeMillis();,if (System != null ) long start = System.currentTimeMillis();
HikariInstrumentationAgent.java,Enumeration<JarEntry> entries = jarFile.entries();,if (jarFile != null ) Enumeration<JarEntry> entries = jarFile.entries();
HikariInstrumentationAgent.java,JarEntry jarEntry = entries.nextElement();,if (entries != null ) JarEntry jarEntry = entries.nextElement();
HikariInstrumentationAgent.java,String entryName = jarEntry.getName();,if (jarEntry != null ) String entryName = jarEntry.getName();
HikariInstrumentationAgent.java,String superclass = classFile.getSuperclass();,if (classFile != null ) String superclass = classFile.getSuperclass();
HikariInstrumentationAgent.java,String fileName = fileEntry.getPath();,if (fileEntry != null ) String fileName = fileEntry.getPath();
HikariInstrumentationAgent.java,String path = resource.toString();,if (resource != null ) String path = resource.toString();
HikariInstrumentationAgent.java,String jarPath = resource.toString();,if (resource != null ) String jarPath = resource.toString();
HikariInstrumentationAgent.java,String nameOfRunningVM = ManagementFactory.getRuntimeMXBean().getName();,if (ManagementFactory != null ) String nameOfRunningVM = ManagementFactory.getRuntimeMXBean().getName();
HikariClassTransformer.java,CodeAttribute codeAttribute = method.getMethodInfo().getCodeAttribute();,if (method != null ) CodeAttribute codeAttribute = method.getMethodInfo().getCodeAttribute();
HikariClassTransformer.java,CodeIterator byteCodeIterator = codeAttribute.iterator();,if (codeAttribute != null ) CodeIterator byteCodeIterator = codeAttribute.iterator();
HikariClassTransformer.java,int index = byteCodeIterator.next();,if (byteCodeIterator != null ) int index = byteCodeIterator.next();
HikariClassTransformer.java,CtMethod[] destMethods = destClass.getMethods();,if (destClass != null ) CtMethod[] destMethods = destClass.getMethods();
HikariClassTransformer.java,ConstPool constPool = destClassFile.getConstPool();,if (destClassFile != null ) ConstPool constPool = destClassFile.getConstPool();
HikariClassTransformer.java,CtConstructor destInitializer = destClass.getClassInitializer();,if (destClass != null ) CtConstructor destInitializer = destClass.getClassInitializer();
ConnectionProxy.java,sqlState = sqlState.toUpperCase();,if (sqlState != null ) sqlState = sqlState.toUpperCase();
HikariClassTransformer.java,String className = classFile.getName();,if (classFile != null ) String className = classFile.getName();
HikariClassTransformer.java,String className = classFile.getName();,if (classFile != null ) String className = classFile.getName();
HikariClassTransformer.java,String className = classFile.getName();,if (classFile != null ) String className = classFile.getName();
ConnectionProxy.java,creationTime = lastAccess = System.currentTimeMillis();,if (System != null ) creationTime = lastAccess = System.currentTimeMillis();
PreparedStatementProxy.java,ResultSet resultSet = delegate.getResultSet();,if (delegate != null ) ResultSet resultSet = delegate.getResultSet();
PreparedStatementProxy.java,ResultSet resultSet = delegate.executeQuery();,if (delegate != null ) ResultSet resultSet = delegate.executeQuery();
PreparedStatementProxy.java,ResultSet generatedKeys = delegate.getGeneratedKeys();,if (delegate != null ) ResultSet generatedKeys = delegate.getGeneratedKeys();
HikariClassTransformer.java,String nameOfRunningVM = ManagementFactory.getRuntimeMXBean().getName();,if (ManagementFactory != null ) String nameOfRunningVM = ManagementFactory.getRuntimeMXBean().getName();
HikariClassTransformer.java,String[] interfaces = classFile.getInterfaces();,if (classFile != null ) String[] interfaces = classFile.getInterfaces();
HikariClassTransformer.java,int constantPoolSize = buffer.getShort();,if (buffer != null ) int constantPoolSize = buffer.getShort();
HikariClassTransformer.java,byte tag = buffer.get();,if (buffer != null ) byte tag = buffer.get();
HikariClassTransformer.java,short len = buffer.getShort();,if (buffer != null ) short len = buffer.getShort();
HikariClassTransformer.java,int index = buffer.getShort();,if (buffer != null ) int index = buffer.getShort();
HikariClassTransformer.java,int sRef = buffer.getShort();,if (buffer != null ) int sRef = buffer.getShort();
HikariClassTransformer.java,int nameIndex = buffer.getShort();,if (buffer != null ) int nameIndex = buffer.getShort();
HikariClassTransformer.java,int descIndex = buffer.getShort();,if (buffer != null ) int descIndex = buffer.getShort();
HikariClassTransformer.java,String jarPath = resource.toString();,if (resource != null ) String jarPath = resource.toString();
ConnectionProxy.java,Statement statement = delegate.createStatement();,if (delegate != null ) Statement statement = delegate.createStatement();
ProxyFactory.java,final ProxyFactory INSTANCE = Initializer.initialize();,if (Initializer != null ) final ProxyFactory INSTANCE = Initializer.initialize();
ProxyFactory.java,ClassLoader classLoader = Initializer.class.getClassLoader();,if (Initializer != null ) ClassLoader classLoader = Initializer.class.getClassLoader();
ProxyFactory.java,Object factoryFactory = proxyFactoryClass.newInstance();,if (proxyFactoryClass != null ) Object factoryFactory = proxyFactoryClass.newInstance();
HikariPool.java,int maxIters = configuration.getMinimumPoolSize() / configuration.getAcquireIncrement();,if (configuration != null ) int maxIters = configuration.getMinimumPoolSize() / configuration.getAcquireIncrement();
HikariProxyBase.java,key = sb.toString();,if (sb != null ) key = sb.toString();
ConnectionProxy.java,creationTime = System.currentTimeMillis();,if (System != null ) creationTime = System.currentTimeMillis();
HikariPool.java,this.leakDetectionThreshold = configuration.getLeakDetectionThreshold();,if (configuration != null ) this.leakDetectionThreshold = configuration.getLeakDetectionThreshold();
HikariPool.java,this.maxLifeTime = configuration.getMaxLifetime();,if (configuration != null ) this.maxLifeTime = configuration.getMaxLifetime();
HikariPool.java,final int max = configuration.getMaximumPoolSize();,if (configuration != null ) final int max = configuration.getMaximumPoolSize();
HikariPool.java,int maxIters = configuration.getMinimumPoolSize() / configuration.getAcquireIncrement();,if (configuration != null ) int maxIters = configuration.getMinimumPoolSize() / configuration.getAcquireIncrement();
ProxyFactory.java,ClassLoader classLoader = Initializer.class.getClassLoader();,if (Initializer != null ) ClassLoader classLoader = Initializer.class.getClassLoader();
ProxyFactory.java,Object factoryFactory = proxyFactoryClass.newInstance();,if (proxyFactoryClass != null ) Object factoryFactory = proxyFactoryClass.newInstance();
CglibProxyFactory.java,Connection connectionCglibProxy = proxyConnectionClass.newInstance();,if (proxyConnectionClass != null ) Connection connectionCglibProxy = proxyConnectionClass.newInstance();
CglibProxyFactory.java,Statement statementCglibProxy = proxyStatementClass.newInstance();,if (proxyStatementClass != null ) Statement statementCglibProxy = proxyStatementClass.newInstance();
CglibProxyFactory.java,CallableStatement statementCglibProxy = proxyCallableStatementClass.newInstance();,if (proxyCallableStatementClass != null ) CallableStatement statementCglibProxy = proxyCallableStatementClass.newInstance();
CglibProxyFactory.java,PreparedStatement statementCglibProxy = proxyPreparedStatementClass.newInstance();,if (proxyPreparedStatementClass != null ) PreparedStatement statementCglibProxy = proxyPreparedStatementClass.newInstance();
CglibProxyFactory.java,ResultSet resultSetCglibProxy = proxyResultSetClass.newInstance();,if (proxyResultSetClass != null ) ResultSet resultSetCglibProxy = proxyResultSetClass.newInstance();
CglibProxyFactory.java,methodMap = proxyClass.getMethodMap();,if (proxyClass != null ) methodMap = proxyClass.getMethodMap();
CglibProxyFactory.java,Connection connectionCglibProxy = proxyConnectionClass.newInstance();,if (proxyConnectionClass != null ) Connection connectionCglibProxy = proxyConnectionClass.newInstance();
CglibProxyFactory.java,Statement statementCglibProxy = proxyStatementClass.newInstance();,if (proxyStatementClass != null ) Statement statementCglibProxy = proxyStatementClass.newInstance();
CglibProxyFactory.java,CallableStatement statementCglibProxy = proxyCallableStatementClass.newInstance();,if (proxyCallableStatementClass != null ) CallableStatement statementCglibProxy = proxyCallableStatementClass.newInstance();
CglibProxyFactory.java,PreparedStatement statementCglibProxy = proxyPreparedStatementClass.newInstance();,if (proxyPreparedStatementClass != null ) PreparedStatement statementCglibProxy = proxyPreparedStatementClass.newInstance();
CglibProxyFactory.java,ResultSet resultSetCglibProxy = proxyResultSetClass.newInstance();,if (proxyResultSetClass != null ) ResultSet resultSetCglibProxy = proxyResultSetClass.newInstance();
CglibProxyFactory.java,methodMap = proxyClass.getMethodMap();,if (proxyClass != null ) methodMap = proxyClass.getMethodMap();
ConnectionProxy.java,Statement statement = delegate.createStatement();,if (delegate != null ) Statement statement = delegate.createStatement();
ConnectionProxy.java,Statement statement = delegate.createStatement();,if (delegate != null ) Statement statement = delegate.createStatement();
JavassistProxyFactory.java,String superClassName = superClass.getName();,if (superClass != null ) String superClassName = superClass.getName();
JavassistProxyFactory.java,CtClass intfCt = classPool.getCtClass(intf.getName());,if (classPool != null ) CtClass intfCt = classPool.getCtClass(intf.getName());
Benchmarks.java,start = System.currentTimeMillis();,if (System != null ) start = System.currentTimeMillis();
Benchmarks.java,finish = System.currentTimeMillis();,if (System != null ) finish = System.currentTimeMillis();
HikariPool.java,int idleTimeout = configuration.getIdleTimeout();,if (configuration != null ) int idleTimeout = configuration.getIdleTimeout();
HikariPool.java,int timeout = configuration.getConnectionTimeout();,if (configuration != null ) int timeout = configuration.getConnectionTimeout();
HikariPool.java,final int idleTimeout = configuration.getIdleTimeout();,if (configuration != null ) final int idleTimeout = configuration.getIdleTimeout();
ConnectionProxy.java,this.stackTrace = Thread.currentThread().getStackTrace();,if (Thread != null ) this.stackTrace = Thread.currentThread().getStackTrace();
HikariPool.java,this.maxLifeTime = configuration.getMaxLifetimeMs();,if (configuration != null ) this.maxLifeTime = configuration.getMaxLifetimeMs();
HikariPool.java,int timeout = configuration.getConnectionTimeoutMs();,if (configuration != null ) int timeout = configuration.getConnectionTimeoutMs();
HikariPool.java,Connection connection = dataSource.getConnection();,if (dataSource != null ) Connection connection = dataSource.getConnection();
JavassistProxyFactory.java,ClassPool defaultPool = ClassPool.getDefault();,if (ClassPool != null ) ClassPool defaultPool = ClassPool.getDefault();
Benchmarks.java,ResultSet resultSet = statement.executeQuery();,if (statement != null ) ResultSet resultSet = statement.executeQuery();
ConnectionProxy.java,this.stackTrace = new Throwable().getStackTrace();,if (Throwable() != null ) this.stackTrace = new Throwable().getStackTrace();
